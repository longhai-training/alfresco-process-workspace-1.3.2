/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Directive, ElementRef, EventEmitter, Input, Output } from '@angular/core';
import { Point } from './../models/point';
import { RaphaelBase } from './../raphael-base';
import { RaphaelService } from './../raphael.service';
/**
 * Directive selectors without adf- prefix will be deprecated on 3.0.0
 */
var RaphaelIconServiceDirective = /** @class */ (function (_super) {
    tslib_1.__extends(RaphaelIconServiceDirective, _super);
    function RaphaelIconServiceDirective(elementRef, raphaelService) {
        var _this = _super.call(this, elementRef, raphaelService) || this;
        _this.elementRef = elementRef;
        _this.error = new EventEmitter();
        return _this;
    }
    /**
     * @return {?}
     */
    RaphaelIconServiceDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.draw(this.position);
    };
    /**
     * @param {?} position
     * @return {?}
     */
    RaphaelIconServiceDirective.prototype.draw = /**
     * @param {?} position
     * @return {?}
     */
    function (position) {
        /** @type {?} */
        var path1 = this.paper.path('M 8,1 7.5,2.875 c 0,0 -0.02438,0.250763 -0.40625,0.4375 C 7.05724,3.330353 7.04387,3.358818 7,3.375' +
            ' 6.6676654,3.4929791 6.3336971,3.6092802 6.03125,3.78125 6.02349,3.78566 6.007733,3.77681 6,3.78125 5.8811373,3.761018' +
            ' 5.8125,3.71875 5.8125,3.71875 l -1.6875,-1 -1.40625,1.4375 0.96875,1.65625 c 0,0 0.065705,0.068637 0.09375,0.1875' +
            ' 0.002,0.00849 -0.00169,0.022138 0,0.03125 C 3.6092802,6.3336971 3.4929791,6.6676654 3.375,7 3.3629836,7.0338489' +
            ' 3.3239228,7.0596246 3.3125,7.09375 3.125763,7.4756184 2.875,7.5 2.875,7.5 L 1,8 l 0,2 1.875,0.5 c 0,0 0.250763,0.02438' +
            ' 0.4375,0.40625 0.017853,0.03651 0.046318,0.04988 0.0625,0.09375 0.1129372,0.318132 0.2124732,0.646641 0.375,0.9375' +
            ' -0.00302,0.215512 -0.09375,0.34375 -0.09375,0.34375 L 2.6875,13.9375 4.09375,15.34375 5.78125,14.375 c 0,0' +
            ' 0.1229911,-0.09744 0.34375,-0.09375 0.2720511,0.147787 0.5795915,0.23888 0.875,0.34375 0.033849,0.01202 0.059625,0.05108' +
            ' 0.09375,0.0625 C 7.4756199,14.874237 7.5,15.125 7.5,15.125 L 8,17 l 2,0 0.5,-1.875 c 0,0 0.02438,-0.250763 0.40625,-0.4375' +
            ' 0.03651,-0.01785 0.04988,-0.04632 0.09375,-0.0625 0.332335,-0.117979 0.666303,-0.23428 0.96875,-0.40625 0.177303,0.0173' +
            ' 0.28125,0.09375 0.28125,0.09375 l 1.65625,0.96875 1.40625,-1.40625 -0.96875,-1.65625 c 0,0 -0.07645,-0.103947' +
            ' -0.09375,-0.28125 0.162527,-0.290859 0.262063,-0.619368 0.375,-0.9375 0.01618,-0.04387 0.04465,-0.05724 0.0625,-0.09375 C' +
            ' 14.874237,10.52438 15.125,10.5 15.125,10.5 L 17,10 17,8 15.125,7.5 c 0,0 -0.250763,-0.024382 -0.4375,-0.40625 C' +
            ' 14.669647,7.0572406 14.641181,7.0438697 14.625,7 14.55912,6.8144282 14.520616,6.6141566 14.4375,6.4375 c -0.224363,-0.4866' +
            ' 0,-0.71875 0,-0.71875 L 15.40625,4.0625 14,2.625 l -1.65625,1 c 0,0 -0.253337,0.1695664 -0.71875,-0.03125 l -0.03125,0 C' +
            ' 11.405359,3.5035185 11.198648,3.4455201 11,3.375 10.95613,3.3588185 10.942759,3.3303534 10.90625,3.3125 10.524382,3.125763' +
            ' 10.5,2.875 10.5,2.875 L 10,1 8,1 z m 1,5 c 1.656854,0 3,1.3431458 3,3 0,1.656854 -1.343146,3 -3,3 C 7.3431458,12' +
            ' 6,10.656854 6,9 6,7.3431458 7.3431458,6 9,6 z').attr({
            'opacity': 1,
            'stroke': this.stroke,
            'fill': this.fillColors
        });
        return path1.transform('T' + position.x + ',' + position.y);
    };
    RaphaelIconServiceDirective.decorators = [
        { type: Directive, args: [{ selector: 'adf-raphael-icon-service, raphael-icon-service' },] }
    ];
    /** @nocollapse */
    RaphaelIconServiceDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: RaphaelService }
    ]; };
    RaphaelIconServiceDirective.propDecorators = {
        paper: [{ type: Input }],
        position: [{ type: Input }],
        text: [{ type: Input }],
        error: [{ type: Output }],
        strokeWidth: [{ type: Input }],
        fillColors: [{ type: Input }],
        stroke: [{ type: Input }],
        fillOpacity: [{ type: Input }]
    };
    return RaphaelIconServiceDirective;
}(RaphaelBase));
export { RaphaelIconServiceDirective };
if (false) {
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.paper;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.position;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.text;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.error;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.strokeWidth;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.fillColors;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.stroke;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.fillOpacity;
    /** @type {?} */
    RaphaelIconServiceDirective.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFwaGFlbC1pY29uLXNlcnZpY2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImRpYWdyYW0vY29tcG9uZW50cy9yYXBoYWVsL2ljb25zL3JhcGhhZWwtaWNvbi1zZXJ2aWNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0YsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNoRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7Ozs7QUFLdEQ7SUFDaUQsdURBQVc7SUF5QnhELHFDQUFtQixVQUFzQixFQUM3QixjQUE4QjtRQUQxQyxZQUVJLGtCQUFNLFVBQVUsRUFBRSxjQUFjLENBQUMsU0FDcEM7UUFIa0IsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFkekMsV0FBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O0lBaUIzQixDQUFDOzs7O0lBRUQsOENBQVE7OztJQUFSO1FBRUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Ozs7SUFFTSwwQ0FBSTs7OztJQUFYLFVBQVksUUFBZTs7WUFDakIsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLHFHQUFxRztZQUMvSCx3SEFBd0g7WUFDeEgsb0hBQW9IO1lBQ3BILGtIQUFrSDtZQUNsSCx5SEFBeUg7WUFDekgscUhBQXFIO1lBQ3JILDZHQUE2RztZQUM3RywySEFBMkg7WUFDM0gsNkhBQTZIO1lBQzdILDBIQUEwSDtZQUMxSCxnSEFBZ0g7WUFDaEgsNEhBQTRIO1lBQzVILGtIQUFrSDtZQUNsSCw2SEFBNkg7WUFDN0gsMkhBQTJIO1lBQzNILDZIQUE2SDtZQUM3SCxtSEFBbUg7WUFDbkgsZ0RBQWdELENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDdkQsU0FBUyxFQUFFLENBQUM7WUFDWixRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU07WUFDckIsTUFBTSxFQUFFLElBQUksQ0FBQyxVQUFVO1NBQzFCLENBQUM7UUFDRixPQUFPLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNoRSxDQUFDOztnQkE1REosU0FBUyxTQUFDLEVBQUMsUUFBUSxFQUFFLGdEQUFnRCxFQUFDOzs7O2dCQVJuRCxVQUFVO2dCQUdyQixjQUFjOzs7d0JBT2xCLEtBQUs7MkJBR0wsS0FBSzt1QkFHTCxLQUFLO3dCQUdMLE1BQU07OEJBR04sS0FBSzs2QkFHTCxLQUFLO3lCQUdMLEtBQUs7OEJBR0wsS0FBSzs7SUFzQ1Ysa0NBQUM7Q0FBQSxBQTdERCxDQUNpRCxXQUFXLEdBNEQzRDtTQTVEWSwyQkFBMkI7OztJQUNwQyw0Q0FDVzs7SUFFWCwrQ0FDZ0I7O0lBRWhCLDJDQUNhOztJQUViLDRDQUMyQjs7SUFFM0Isa0RBQ29COztJQUVwQixpREFDZ0I7O0lBRWhCLDZDQUNZOztJQUVaLGtEQUNpQjs7SUFFTCxpREFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb2ludCB9IGZyb20gJy4vLi4vbW9kZWxzL3BvaW50JztcbmltcG9ydCB7IFJhcGhhZWxCYXNlIH0gZnJvbSAnLi8uLi9yYXBoYWVsLWJhc2UnO1xuaW1wb3J0IHsgUmFwaGFlbFNlcnZpY2UgfSBmcm9tICcuLy4uL3JhcGhhZWwuc2VydmljZSc7XG5cbi8qKlxuICogRGlyZWN0aXZlIHNlbGVjdG9ycyB3aXRob3V0IGFkZi0gcHJlZml4IHdpbGwgYmUgZGVwcmVjYXRlZCBvbiAzLjAuMFxuICovXG5ARGlyZWN0aXZlKHtzZWxlY3RvcjogJ2FkZi1yYXBoYWVsLWljb24tc2VydmljZSwgcmFwaGFlbC1pY29uLXNlcnZpY2UnfSlcbmV4cG9ydCBjbGFzcyBSYXBoYWVsSWNvblNlcnZpY2VEaXJlY3RpdmUgZXh0ZW5kcyBSYXBoYWVsQmFzZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KClcbiAgICBwYXBlcjogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBwb3NpdGlvbjogUG9pbnQ7XG5cbiAgICBASW5wdXQoKVxuICAgIHRleHQ6IHN0cmluZztcblxuICAgIEBPdXRwdXQoKVxuICAgIGVycm9yID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgQElucHV0KClcbiAgICBzdHJva2VXaWR0aDogbnVtYmVyO1xuXG4gICAgQElucHV0KClcbiAgICBmaWxsQ29sb3JzOiBhbnk7XG5cbiAgICBASW5wdXQoKVxuICAgIHN0cm9rZTogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBmaWxsT3BhY2l0eTogYW55O1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgICAgICAgICAgICAgcmFwaGFlbFNlcnZpY2U6IFJhcGhhZWxTZXJ2aWNlKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYsIHJhcGhhZWxTZXJ2aWNlKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcblxuICAgICAgICB0aGlzLmRyYXcodGhpcy5wb3NpdGlvbik7XG4gICAgfVxuXG4gICAgcHVibGljIGRyYXcocG9zaXRpb246IFBvaW50KSB7XG4gICAgICAgIGNvbnN0IHBhdGgxID0gdGhpcy5wYXBlci5wYXRoKCdNIDgsMSA3LjUsMi44NzUgYyAwLDAgLTAuMDI0MzgsMC4yNTA3NjMgLTAuNDA2MjUsMC40Mzc1IEMgNy4wNTcyNCwzLjMzMDM1MyA3LjA0Mzg3LDMuMzU4ODE4IDcsMy4zNzUnICtcbiAgICAgICAgICAgICcgNi42Njc2NjU0LDMuNDkyOTc5MSA2LjMzMzY5NzEsMy42MDkyODAyIDYuMDMxMjUsMy43ODEyNSA2LjAyMzQ5LDMuNzg1NjYgNi4wMDc3MzMsMy43NzY4MSA2LDMuNzgxMjUgNS44ODExMzczLDMuNzYxMDE4JyArXG4gICAgICAgICAgICAnIDUuODEyNSwzLjcxODc1IDUuODEyNSwzLjcxODc1IGwgLTEuNjg3NSwtMSAtMS40MDYyNSwxLjQzNzUgMC45Njg3NSwxLjY1NjI1IGMgMCwwIDAuMDY1NzA1LDAuMDY4NjM3IDAuMDkzNzUsMC4xODc1JyArXG4gICAgICAgICAgICAnIDAuMDAyLDAuMDA4NDkgLTAuMDAxNjksMC4wMjIxMzggMCwwLjAzMTI1IEMgMy42MDkyODAyLDYuMzMzNjk3MSAzLjQ5Mjk3OTEsNi42Njc2NjU0IDMuMzc1LDcgMy4zNjI5ODM2LDcuMDMzODQ4OScgK1xuICAgICAgICAgICAgJyAzLjMyMzkyMjgsNy4wNTk2MjQ2IDMuMzEyNSw3LjA5Mzc1IDMuMTI1NzYzLDcuNDc1NjE4NCAyLjg3NSw3LjUgMi44NzUsNy41IEwgMSw4IGwgMCwyIDEuODc1LDAuNSBjIDAsMCAwLjI1MDc2MywwLjAyNDM4JyArXG4gICAgICAgICAgICAnIDAuNDM3NSwwLjQwNjI1IDAuMDE3ODUzLDAuMDM2NTEgMC4wNDYzMTgsMC4wNDk4OCAwLjA2MjUsMC4wOTM3NSAwLjExMjkzNzIsMC4zMTgxMzIgMC4yMTI0NzMyLDAuNjQ2NjQxIDAuMzc1LDAuOTM3NScgK1xuICAgICAgICAgICAgJyAtMC4wMDMwMiwwLjIxNTUxMiAtMC4wOTM3NSwwLjM0Mzc1IC0wLjA5Mzc1LDAuMzQzNzUgTCAyLjY4NzUsMTMuOTM3NSA0LjA5Mzc1LDE1LjM0Mzc1IDUuNzgxMjUsMTQuMzc1IGMgMCwwJyArXG4gICAgICAgICAgICAnIDAuMTIyOTkxMSwtMC4wOTc0NCAwLjM0Mzc1LC0wLjA5Mzc1IDAuMjcyMDUxMSwwLjE0Nzc4NyAwLjU3OTU5MTUsMC4yMzg4OCAwLjg3NSwwLjM0Mzc1IDAuMDMzODQ5LDAuMDEyMDIgMC4wNTk2MjUsMC4wNTEwOCcgK1xuICAgICAgICAgICAgJyAwLjA5Mzc1LDAuMDYyNSBDIDcuNDc1NjE5OSwxNC44NzQyMzcgNy41LDE1LjEyNSA3LjUsMTUuMTI1IEwgOCwxNyBsIDIsMCAwLjUsLTEuODc1IGMgMCwwIDAuMDI0MzgsLTAuMjUwNzYzIDAuNDA2MjUsLTAuNDM3NScgK1xuICAgICAgICAgICAgJyAwLjAzNjUxLC0wLjAxNzg1IDAuMDQ5ODgsLTAuMDQ2MzIgMC4wOTM3NSwtMC4wNjI1IDAuMzMyMzM1LC0wLjExNzk3OSAwLjY2NjMwMywtMC4yMzQyOCAwLjk2ODc1LC0wLjQwNjI1IDAuMTc3MzAzLDAuMDE3MycgK1xuICAgICAgICAgICAgJyAwLjI4MTI1LDAuMDkzNzUgMC4yODEyNSwwLjA5Mzc1IGwgMS42NTYyNSwwLjk2ODc1IDEuNDA2MjUsLTEuNDA2MjUgLTAuOTY4NzUsLTEuNjU2MjUgYyAwLDAgLTAuMDc2NDUsLTAuMTAzOTQ3JyArXG4gICAgICAgICAgICAnIC0wLjA5Mzc1LC0wLjI4MTI1IDAuMTYyNTI3LC0wLjI5MDg1OSAwLjI2MjA2MywtMC42MTkzNjggMC4zNzUsLTAuOTM3NSAwLjAxNjE4LC0wLjA0Mzg3IDAuMDQ0NjUsLTAuMDU3MjQgMC4wNjI1LC0wLjA5Mzc1IEMnICtcbiAgICAgICAgICAgICcgMTQuODc0MjM3LDEwLjUyNDM4IDE1LjEyNSwxMC41IDE1LjEyNSwxMC41IEwgMTcsMTAgMTcsOCAxNS4xMjUsNy41IGMgMCwwIC0wLjI1MDc2MywtMC4wMjQzODIgLTAuNDM3NSwtMC40MDYyNSBDJyArXG4gICAgICAgICAgICAnIDE0LjY2OTY0Nyw3LjA1NzI0MDYgMTQuNjQxMTgxLDcuMDQzODY5NyAxNC42MjUsNyAxNC41NTkxMiw2LjgxNDQyODIgMTQuNTIwNjE2LDYuNjE0MTU2NiAxNC40Mzc1LDYuNDM3NSBjIC0wLjIyNDM2MywtMC40ODY2JyArXG4gICAgICAgICAgICAnIDAsLTAuNzE4NzUgMCwtMC43MTg3NSBMIDE1LjQwNjI1LDQuMDYyNSAxNCwyLjYyNSBsIC0xLjY1NjI1LDEgYyAwLDAgLTAuMjUzMzM3LDAuMTY5NTY2NCAtMC43MTg3NSwtMC4wMzEyNSBsIC0wLjAzMTI1LDAgQycgK1xuICAgICAgICAgICAgJyAxMS40MDUzNTksMy41MDM1MTg1IDExLjE5ODY0OCwzLjQ0NTUyMDEgMTEsMy4zNzUgMTAuOTU2MTMsMy4zNTg4MTg1IDEwLjk0Mjc1OSwzLjMzMDM1MzQgMTAuOTA2MjUsMy4zMTI1IDEwLjUyNDM4MiwzLjEyNTc2MycgK1xuICAgICAgICAgICAgJyAxMC41LDIuODc1IDEwLjUsMi44NzUgTCAxMCwxIDgsMSB6IG0gMSw1IGMgMS42NTY4NTQsMCAzLDEuMzQzMTQ1OCAzLDMgMCwxLjY1Njg1NCAtMS4zNDMxNDYsMyAtMywzIEMgNy4zNDMxNDU4LDEyJyArXG4gICAgICAgICAgICAnIDYsMTAuNjU2ODU0IDYsOSA2LDcuMzQzMTQ1OCA3LjM0MzE0NTgsNiA5LDYgeicpLmF0dHIoe1xuICAgICAgICAgICAgJ29wYWNpdHknOiAxLFxuICAgICAgICAgICAgJ3N0cm9rZSc6IHRoaXMuc3Ryb2tlLFxuICAgICAgICAgICAgJ2ZpbGwnOiB0aGlzLmZpbGxDb2xvcnNcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBwYXRoMS50cmFuc2Zvcm0oJ1QnICsgcG9zaXRpb24ueCArICcsJyArIHBvc2l0aW9uLnkpO1xuICAgIH1cbn1cbiJdfQ==