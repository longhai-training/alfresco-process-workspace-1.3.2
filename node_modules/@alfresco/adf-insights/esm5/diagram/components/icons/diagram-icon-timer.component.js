/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector  */
import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
var DiagramIconTimerComponent = /** @class */ (function () {
    function DiagramIconTimerComponent(elementRef) {
        this.elementRef = elementRef;
        this.error = new EventEmitter();
        this.center = {};
        this.circleOptions = { stroke: '', fillColors: '', fillOpacity: '', strokeWidth: '' };
        this.timerOptions = { stroke: '', fillColors: '', fillOpacity: '', strokeWidth: '' };
    }
    /**
     * @return {?}
     */
    DiagramIconTimerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.center.x = this.data.x + (this.data.width / 2);
        this.center.y = this.data.y + (this.data.height / 2);
        this.circleRadius = 10;
        this.position = { x: this.data.x + 5, y: this.data.y + 5 };
        this.circleOptions.stroke = 'black';
        this.circleOptions.fillColors = 'none';
        this.timerOptions.stroke = 'none';
        this.timerOptions.fillColors = '#585858';
    };
    DiagramIconTimerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'diagram-icon-timer',
                    template: "<raphael-circle [center]=\"center\" [radius]=\"circleRadius\" [strokeWidth]=\"circleOptions.strokeWidth\" [stroke]=\"circleOptions.stroke\"\n                [fillColors]=\"circleOptions.fillColors\" [fillOpacity]=\"circleOptions.fillOpacity\"></raphael-circle>\n<raphael-icon-timer [position]=\"position\" [stroke]=\"timerOptions.stroke\" [strokeWidth]=\"timerOptions.strokeWidth\"\n                      [fillColors]=\"timerOptions.fillColors\" [fillOpacity]=\"timerOptions.fillOpacity\"></raphael-icon-timer>\n<diagram-tooltip [data]=\"data\"></diagram-tooltip>\n"
                }] }
    ];
    /** @nocollapse */
    DiagramIconTimerComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DiagramIconTimerComponent.propDecorators = {
        data: [{ type: Input }],
        error: [{ type: Output }]
    };
    return DiagramIconTimerComponent;
}());
export { DiagramIconTimerComponent };
if (false) {
    /** @type {?} */
    DiagramIconTimerComponent.prototype.data;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.error;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.center;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.position;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.circleRadius;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.circleOptions;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.timerOptions;
    /** @type {?} */
    DiagramIconTimerComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ3JhbS1pY29uLXRpbWVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJkaWFncmFtL2NvbXBvbmVudHMvaWNvbnMvZGlhZ3JhbS1pY29uLXRpbWVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0Y7SUFtQkksbUNBQW1CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFWekMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFM0IsV0FBTSxHQUFRLEVBQUUsQ0FBQztRQUtqQixrQkFBYSxHQUFRLEVBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFFLEVBQUUsRUFBQyxDQUFDO1FBQ3BGLGlCQUFZLEdBQVEsRUFBQyxNQUFNLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsV0FBVyxFQUFFLEVBQUUsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFDLENBQUM7SUFFdkMsQ0FBQzs7OztJQUU3Qyw0Q0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDckQsSUFBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBQyxDQUFDO1FBRXpELElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBRTtRQUNyQyxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUU7UUFDeEMsSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFFO1FBQ25DLElBQUksQ0FBQyxZQUFZLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBRTtJQUM5QyxDQUFDOztnQkEvQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLGlrQkFBa0Q7aUJBQ3JEOzs7O2dCQUxtQixVQUFVOzs7dUJBT3pCLEtBQUs7d0JBR0wsTUFBTTs7SUF3QlgsZ0NBQUM7Q0FBQSxBQWhDRCxJQWdDQztTQTVCWSx5QkFBeUI7OztJQUNsQyx5Q0FDVTs7SUFFViwwQ0FDMkI7O0lBRTNCLDJDQUFpQjs7SUFDakIsNkNBQWM7O0lBRWQsaURBQXFCOztJQUVyQixrREFBb0Y7O0lBQ3BGLGlEQUFtRjs7SUFFdkUsK0NBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuIC8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2RpYWdyYW0taWNvbi10aW1lcicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RpYWdyYW0taWNvbi10aW1lci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGlhZ3JhbUljb25UaW1lckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KClcbiAgICBkYXRhOiBhbnk7XG5cbiAgICBAT3V0cHV0KClcbiAgICBlcnJvciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIGNlbnRlcjogYW55ID0ge307XG4gICAgcG9zaXRpb246IGFueTtcblxuICAgIGNpcmNsZVJhZGl1czogbnVtYmVyO1xuXG4gICAgY2lyY2xlT3B0aW9uczogYW55ID0ge3N0cm9rZTogJycsIGZpbGxDb2xvcnM6ICcnLCBmaWxsT3BhY2l0eTogJycsIHN0cm9rZVdpZHRoOiAnJ307XG4gICAgdGltZXJPcHRpb25zOiBhbnkgPSB7c3Ryb2tlOiAnJywgZmlsbENvbG9yczogJycsIGZpbGxPcGFjaXR5OiAnJywgc3Ryb2tlV2lkdGg6ICcnfTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuY2VudGVyLnggPSB0aGlzLmRhdGEueCArICh0aGlzLmRhdGEud2lkdGggLyAyKTtcbiAgICAgICAgdGhpcy5jZW50ZXIueSA9IHRoaXMuZGF0YS55ICsgKHRoaXMuZGF0YS5oZWlnaHQgLyAyKTtcbiAgICAgICAgdGhpcy5jaXJjbGVSYWRpdXMgPSAxMDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IHt4OiB0aGlzLmRhdGEueCArIDUsIHk6IHRoaXMuZGF0YS55ICsgNX07XG5cbiAgICAgICAgdGhpcy5jaXJjbGVPcHRpb25zLnN0cm9rZSA9ICdibGFjaycgO1xuICAgICAgICB0aGlzLmNpcmNsZU9wdGlvbnMuZmlsbENvbG9ycyA9ICdub25lJyA7XG4gICAgICAgIHRoaXMudGltZXJPcHRpb25zLnN0cm9rZSA9ICdub25lJyA7XG4gICAgICAgIHRoaXMudGltZXJPcHRpb25zLmZpbGxDb2xvcnMgPSAnIzU4NTg1OCcgO1xuICAgIH1cbn1cbiJdfQ==