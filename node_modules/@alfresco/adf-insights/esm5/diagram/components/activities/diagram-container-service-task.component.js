/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector  */
import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
var DiagramContainerServiceTaskComponent = /** @class */ (function () {
    function DiagramContainerServiceTaskComponent(elementRef) {
        this.elementRef = elementRef;
        this.error = new EventEmitter();
    }
    /**
     * @return {?}
     */
    DiagramContainerServiceTaskComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    DiagramContainerServiceTaskComponent.decorators = [
        { type: Component, args: [{
                    selector: 'diagram-container-service-task',
                    template: "<div [ngSwitch]=\"data.taskType\">\n    <div *ngSwitchCase=\"'mail'\">\n        <diagram-send-task [data]=\"data\"></diagram-send-task>\n    </div>\n    <div *ngSwitchCase=\"'camel'\">\n        <diagram-camel-task [data]=\"data\"></diagram-camel-task>\n    </div>\n    <div *ngSwitchCase=\"'mule'\">\n        <diagram-mule-task [data]=\"data\"></diagram-mule-task>\n    </div>\n    <div *ngSwitchCase=\"'alfresco_publish'\">\n        <adf-diagram-publish-task [data]=\"data\"></adf-diagram-publish-task>\n    </div>\n    <div *ngSwitchCase=\"'rest_call'\">\n        <diagram-rest-call-task [data]=\"data\"></diagram-rest-call-task>\n    </div>\n    <div *ngSwitchCase=\"'google_drive_publish'\">\n        <diagram-google-drive-publish-task [data]=\"data\"></diagram-google-drive-publish-task>\n    </div>\n    <div *ngSwitchCase=\"'box_publish'\">\n        <diagram-box-publish-task [data]=\"data\"></diagram-box-publish-task>\n    </div>\n    <div *ngSwitchDefault>\n        <diagram-service-task [data]=\"data\"></diagram-service-task>\n    </div>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    DiagramContainerServiceTaskComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DiagramContainerServiceTaskComponent.propDecorators = {
        data: [{ type: Input }],
        error: [{ type: Output }]
    };
    return DiagramContainerServiceTaskComponent;
}());
export { DiagramContainerServiceTaskComponent };
if (false) {
    /** @type {?} */
    DiagramContainerServiceTaskComponent.prototype.data;
    /** @type {?} */
    DiagramContainerServiceTaskComponent.prototype.error;
    /** @type {?} */
    DiagramContainerServiceTaskComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ3JhbS1jb250YWluZXItc2VydmljZS10YXNrLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJkaWFncmFtL2NvbXBvbmVudHMvYWN0aXZpdGllcy9kaWFncmFtLWNvbnRhaW5lci1zZXJ2aWNlLXRhc2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzRjtJQVdJLDhDQUFtQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBRnpDLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWlCLENBQUM7Ozs7SUFFN0MsdURBQVE7OztJQUFSO0lBRUEsQ0FBQzs7Z0JBZkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxnQ0FBZ0M7b0JBQzFDLCtpQ0FBOEQ7aUJBQ2pFOzs7O2dCQUxtQixVQUFVOzs7dUJBT3pCLEtBQUs7d0JBR0wsTUFBTTs7SUFRWCwyQ0FBQztDQUFBLEFBaEJELElBZ0JDO1NBWlksb0NBQW9DOzs7SUFDN0Msb0RBQ1U7O0lBRVYscURBQzJCOztJQUVmLDBEQUE2QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbiAvKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3IgICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdkaWFncmFtLWNvbnRhaW5lci1zZXJ2aWNlLXRhc2snLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9kaWFncmFtLWNvbnRhaW5lci1zZXJ2aWNlLXRhc2suY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERpYWdyYW1Db250YWluZXJTZXJ2aWNlVGFza0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KClcbiAgICBkYXRhOiBhbnk7XG5cbiAgICBAT3V0cHV0KClcbiAgICBlcnJvciA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gICAgbmdPbkluaXQoKSB7XG5cbiAgICB9XG59XG4iXX0=