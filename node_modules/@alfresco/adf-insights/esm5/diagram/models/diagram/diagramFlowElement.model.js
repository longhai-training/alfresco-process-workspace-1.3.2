/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DiagramWayPointModel } from './diagramWayPoint.model';
var DiagramFlowElementModel = /** @class */ (function () {
    function DiagramFlowElementModel(obj) {
        var _this = this;
        this.properties = [];
        this.waypoints = [];
        if (obj) {
            this.completed = !!obj.completed;
            this.current = !!obj.current;
            this.id = obj.id;
            this.properties = obj.properties;
            this.sourceRef = obj.sourceRef;
            this.targetRef = obj.targetRef;
            this.type = obj.type;
            if (obj.waypoints) {
                obj.waypoints.forEach((/**
                 * @param {?} waypoint
                 * @return {?}
                 */
                function (waypoint) {
                    _this.waypoints.push(new DiagramWayPointModel(waypoint));
                }));
            }
        }
    }
    return DiagramFlowElementModel;
}());
export { DiagramFlowElementModel };
if (false) {
    /** @type {?} */
    DiagramFlowElementModel.prototype.completed;
    /** @type {?} */
    DiagramFlowElementModel.prototype.current;
    /** @type {?} */
    DiagramFlowElementModel.prototype.id;
    /** @type {?} */
    DiagramFlowElementModel.prototype.properties;
    /** @type {?} */
    DiagramFlowElementModel.prototype.sourceRef;
    /** @type {?} */
    DiagramFlowElementModel.prototype.targetRef;
    /** @type {?} */
    DiagramFlowElementModel.prototype.type;
    /** @type {?} */
    DiagramFlowElementModel.prototype.waypoints;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ3JhbUZsb3dFbGVtZW50Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImRpYWdyYW0vbW9kZWxzL2RpYWdyYW0vZGlhZ3JhbUZsb3dFbGVtZW50Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRS9EO0lBVUksaUNBQVksR0FBUztRQUFyQixpQkFlQztRQXJCRCxlQUFVLEdBQVUsRUFBRSxDQUFDO1FBSXZCLGNBQVMsR0FBMkIsRUFBRSxDQUFDO1FBR25DLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUNqQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDO1lBQzdCLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUM7WUFDakMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO1lBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztZQUMvQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxHQUFHLENBQUMsU0FBUyxFQUFFO2dCQUNmLEdBQUcsQ0FBQyxTQUFTLENBQUMsT0FBTzs7OztnQkFBQyxVQUFDLFFBQThCO29CQUNqRCxLQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7Z0JBQzVELENBQUMsRUFBQyxDQUFDO2FBQ047U0FDSjtJQUNMLENBQUM7SUFDTCw4QkFBQztBQUFELENBQUMsQUExQkQsSUEwQkM7Ozs7SUF6QkcsNENBQW1COztJQUNuQiwwQ0FBaUI7O0lBQ2pCLHFDQUFXOztJQUNYLDZDQUF1Qjs7SUFDdkIsNENBQWtCOztJQUNsQiw0Q0FBa0I7O0lBQ2xCLHVDQUFhOztJQUNiLDRDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpYWdyYW1XYXlQb2ludE1vZGVsIH0gZnJvbSAnLi9kaWFncmFtV2F5UG9pbnQubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgRGlhZ3JhbUZsb3dFbGVtZW50TW9kZWwge1xuICAgIGNvbXBsZXRlZDogYm9vbGVhbjtcbiAgICBjdXJyZW50OiBib29sZWFuO1xuICAgIGlkOiBzdHJpbmc7XG4gICAgcHJvcGVydGllczogYW55W10gPSBbXTtcbiAgICBzb3VyY2VSZWY6IHN0cmluZztcbiAgICB0YXJnZXRSZWY6IHN0cmluZztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgd2F5cG9pbnRzOiBEaWFncmFtV2F5UG9pbnRNb2RlbFtdID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSAhIW9iai5jb21wbGV0ZWQ7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnQgPSAhIW9iai5jdXJyZW50O1xuICAgICAgICAgICAgdGhpcy5pZCA9IG9iai5pZDtcbiAgICAgICAgICAgIHRoaXMucHJvcGVydGllcyA9IG9iai5wcm9wZXJ0aWVzO1xuICAgICAgICAgICAgdGhpcy5zb3VyY2VSZWYgPSBvYmouc291cmNlUmVmO1xuICAgICAgICAgICAgdGhpcy50YXJnZXRSZWYgPSBvYmoudGFyZ2V0UmVmO1xuICAgICAgICAgICAgdGhpcy50eXBlID0gb2JqLnR5cGU7XG4gICAgICAgICAgICBpZiAob2JqLndheXBvaW50cykge1xuICAgICAgICAgICAgICAgIG9iai53YXlwb2ludHMuZm9yRWFjaCgod2F5cG9pbnQ6IERpYWdyYW1XYXlQb2ludE1vZGVsKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2F5cG9pbnRzLnB1c2gobmV3IERpYWdyYW1XYXlQb2ludE1vZGVsKHdheXBvaW50KSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=