/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Chart } from './chart.model';
var PieChart = /** @class */ (function (_super) {
    tslib_1.__extends(PieChart, _super);
    function PieChart(obj) {
        var _this = _super.call(this, obj) || this;
        _this.labels = [];
        _this.data = [];
        _this.title = obj && obj.title || null;
        _this.titleKey = obj && obj.titleKey || null;
        if (obj.values) {
            obj.values.forEach((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                _this.add(value.key, value.y);
            }));
        }
        return _this;
    }
    /**
     * @param {?} label
     * @param {?} data
     * @return {?}
     */
    PieChart.prototype.add = /**
     * @param {?} label
     * @param {?} data
     * @return {?}
     */
    function (label, data) {
        this.labels.push(label);
        this.data.push(data);
    };
    /**
     * @return {?}
     */
    PieChart.prototype.hasData = /**
     * @return {?}
     */
    function () {
        return this.data && this.data.length > 0 ? true : false;
    };
    /**
     * @return {?}
     */
    PieChart.prototype.hasZeroValues = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var isZeroValues = false;
        if (this.hasData()) {
            isZeroValues = true;
            this.data.forEach((/**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (value.toString() !== '0') {
                    isZeroValues = false;
                }
            }));
        }
        return isZeroValues;
    };
    return PieChart;
}(Chart));
export { PieChart };
if (false) {
    /** @type {?} */
    PieChart.prototype.title;
    /** @type {?} */
    PieChart.prototype.titleKey;
    /** @type {?} */
    PieChart.prototype.labels;
    /** @type {?} */
    PieChart.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllQ2hhcnQubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWluc2lnaHRzLyIsInNvdXJjZXMiOlsiZGlhZ3JhbS9tb2RlbHMvY2hhcnQvcGllQ2hhcnQubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEM7SUFBOEIsb0NBQUs7SUFNL0Isa0JBQVksR0FBUztRQUFyQixZQUNJLGtCQUFNLEdBQUcsQ0FBQyxTQVFiO1FBWkQsWUFBTSxHQUFhLEVBQUUsQ0FBQztRQUN0QixVQUFJLEdBQWEsRUFBRSxDQUFDO1FBSWhCLEtBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDO1FBQ3RDLEtBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1FBQzVDLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtZQUNaLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTzs7OztZQUFDLFVBQUMsS0FBVTtnQkFDMUIsS0FBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQyxDQUFDLEVBQUMsQ0FBQztTQUNOOztJQUNMLENBQUM7Ozs7OztJQUVELHNCQUFHOzs7OztJQUFILFVBQUksS0FBYSxFQUFFLElBQVk7UUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQzs7OztJQUVELDBCQUFPOzs7SUFBUDtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQzVELENBQUM7Ozs7SUFFRCxnQ0FBYTs7O0lBQWI7O1lBQ1EsWUFBWSxHQUFZLEtBQUs7UUFDakMsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDaEIsWUFBWSxHQUFHLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU87Ozs7WUFBQyxVQUFDLEtBQUs7Z0JBQ3BCLElBQUksS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLEdBQUcsRUFBRTtvQkFDMUIsWUFBWSxHQUFHLEtBQUssQ0FBQztpQkFDeEI7WUFDTCxDQUFDLEVBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxZQUFZLENBQUM7SUFDeEIsQ0FBQztJQUNMLGVBQUM7QUFBRCxDQUFDLEFBdENELENBQThCLEtBQUssR0FzQ2xDOzs7O0lBckNHLHlCQUFjOztJQUNkLDRCQUFpQjs7SUFDakIsMEJBQXNCOztJQUN0Qix3QkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDaGFydCB9IGZyb20gJy4vY2hhcnQubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgUGllQ2hhcnQgZXh0ZW5kcyBDaGFydCB7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICB0aXRsZUtleTogc3RyaW5nO1xuICAgIGxhYmVsczogc3RyaW5nW10gPSBbXTtcbiAgICBkYXRhOiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIHN1cGVyKG9iaik7XG4gICAgICAgIHRoaXMudGl0bGUgPSBvYmogJiYgb2JqLnRpdGxlIHx8IG51bGw7XG4gICAgICAgIHRoaXMudGl0bGVLZXkgPSBvYmogJiYgb2JqLnRpdGxlS2V5IHx8IG51bGw7XG4gICAgICAgIGlmIChvYmoudmFsdWVzKSB7XG4gICAgICAgICAgICBvYmoudmFsdWVzLmZvckVhY2goKHZhbHVlOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmFkZCh2YWx1ZS5rZXksIHZhbHVlLnkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBhZGQobGFiZWw6IHN0cmluZywgZGF0YTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMubGFiZWxzLnB1c2gobGFiZWwpO1xuICAgICAgICB0aGlzLmRhdGEucHVzaChkYXRhKTtcbiAgICB9XG5cbiAgICBoYXNEYXRhKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhICYmIHRoaXMuZGF0YS5sZW5ndGggPiAwID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cblxuICAgIGhhc1plcm9WYWx1ZXMoKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBpc1plcm9WYWx1ZXM6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgaWYgKHRoaXMuaGFzRGF0YSgpKSB7XG4gICAgICAgICAgICBpc1plcm9WYWx1ZXMgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5kYXRhLmZvckVhY2goKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlLnRvU3RyaW5nKCkgIT09ICcwJykge1xuICAgICAgICAgICAgICAgICAgICBpc1plcm9WYWx1ZXMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXNaZXJvVmFsdWVzO1xuICAgIH1cbn1cbiJdfQ==