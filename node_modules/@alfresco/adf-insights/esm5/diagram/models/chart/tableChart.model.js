/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Chart } from './chart.model';
var TableChart = /** @class */ (function (_super) {
    tslib_1.__extends(TableChart, _super);
    function TableChart(obj) {
        var _this = _super.call(this, obj) || this;
        _this.labels = [];
        _this.datasets = [];
        _this.title = obj && obj.title || null;
        _this.titleKey = obj && obj.titleKey || null;
        _this.labels = obj && obj.columnNames;
        if (obj.rows) {
            _this.datasets = obj && obj.rows;
        }
        return _this;
    }
    /**
     * @return {?}
     */
    TableChart.prototype.hasDatasets = /**
     * @return {?}
     */
    function () {
        return this.datasets && this.datasets.length > 0 ? true : false;
    };
    return TableChart;
}(Chart));
export { TableChart };
if (false) {
    /** @type {?} */
    TableChart.prototype.title;
    /** @type {?} */
    TableChart.prototype.titleKey;
    /** @type {?} */
    TableChart.prototype.labels;
    /** @type {?} */
    TableChart.prototype.datasets;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGVDaGFydC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJkaWFncmFtL21vZGVscy9jaGFydC90YWJsZUNoYXJ0Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRDO0lBQWdDLHNDQUFLO0lBTWpDLG9CQUFZLEdBQVM7UUFBckIsWUFDSSxrQkFBTSxHQUFHLENBQUMsU0FPYjtRQVhELFlBQU0sR0FBYSxFQUFFLENBQUM7UUFDdEIsY0FBUSxHQUFVLEVBQUUsQ0FBQztRQUlqQixLQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQztRQUN0QyxLQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQztRQUM1QyxLQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsV0FBVyxDQUFDO1FBQ3JDLElBQUksR0FBRyxDQUFDLElBQUksRUFBRTtZQUNWLEtBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7U0FDbkM7O0lBQ0wsQ0FBQzs7OztJQUVELGdDQUFXOzs7SUFBWDtRQUNJLE9BQU8sSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3BFLENBQUM7SUFDTCxpQkFBQztBQUFELENBQUMsQUFuQkQsQ0FBZ0MsS0FBSyxHQW1CcEM7Ozs7SUFsQkcsMkJBQWM7O0lBQ2QsOEJBQWlCOztJQUNqQiw0QkFBc0I7O0lBQ3RCLDhCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENoYXJ0IH0gZnJvbSAnLi9jaGFydC5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBUYWJsZUNoYXJ0IGV4dGVuZHMgQ2hhcnQge1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgdGl0bGVLZXk6IHN0cmluZztcbiAgICBsYWJlbHM6IHN0cmluZ1tdID0gW107XG4gICAgZGF0YXNldHM6IGFueVtdID0gW107XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgc3VwZXIob2JqKTtcbiAgICAgICAgdGhpcy50aXRsZSA9IG9iaiAmJiBvYmoudGl0bGUgfHwgbnVsbDtcbiAgICAgICAgdGhpcy50aXRsZUtleSA9IG9iaiAmJiBvYmoudGl0bGVLZXkgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5sYWJlbHMgPSBvYmogJiYgb2JqLmNvbHVtbk5hbWVzO1xuICAgICAgICBpZiAob2JqLnJvd3MpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YXNldHMgPSBvYmogJiYgb2JqLnJvd3M7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBoYXNEYXRhc2V0cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YXNldHMgJiYgdGhpcy5kYXRhc2V0cy5sZW5ndGggPiAwID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cbn1cbiJdfQ==