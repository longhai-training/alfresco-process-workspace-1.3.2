/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ReportParameterDetailsModel = /** @class */ (function () {
    function ReportParameterDetailsModel(obj) {
        this.id = obj && obj.id;
        this.name = obj && obj.name || null;
        this.nameKey = obj && obj.nameKey || null;
        this.type = obj && obj.type || null;
        this.value = obj && obj.value || null;
        this.options = obj && obj.options || null;
        this.dependsOn = obj && obj.dependsOn || null;
    }
    return ReportParameterDetailsModel;
}());
export { ReportParameterDetailsModel };
if (false) {
    /** @type {?} */
    ReportParameterDetailsModel.prototype.id;
    /** @type {?} */
    ReportParameterDetailsModel.prototype.name;
    /** @type {?} */
    ReportParameterDetailsModel.prototype.nameKey;
    /** @type {?} */
    ReportParameterDetailsModel.prototype.type;
    /** @type {?} */
    ReportParameterDetailsModel.prototype.value;
    /** @type {?} */
    ReportParameterDetailsModel.prototype.options;
    /** @type {?} */
    ReportParameterDetailsModel.prototype.dependsOn;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0UGFyYW1ldGVyRGV0YWlscy5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJkaWFncmFtL21vZGVscy9yZXBvcnQvcmVwb3J0UGFyYW1ldGVyRGV0YWlscy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQTtJQVNJLHFDQUFZLEdBQVM7UUFDakIsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQztRQUMxQyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQztRQUN0QyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQztRQUMxQyxJQUFJLENBQUMsU0FBUyxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQztJQUNsRCxDQUFDO0lBQ0wsa0NBQUM7QUFBRCxDQUFDLEFBbEJELElBa0JDOzs7O0lBakJHLHlDQUFXOztJQUNYLDJDQUFhOztJQUNiLDhDQUFnQjs7SUFDaEIsMkNBQWE7O0lBQ2IsNENBQVc7O0lBQ1gsOENBQStCOztJQUMvQixnREFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBQYXJhbWV0ZXJWYWx1ZU1vZGVsIH0gZnJvbSAnLi9wYXJhbWV0ZXJWYWx1ZS5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBSZXBvcnRQYXJhbWV0ZXJEZXRhaWxzTW9kZWwge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIG5hbWVLZXk6IHN0cmluZztcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgdmFsdWU6IGFueTtcbiAgICBvcHRpb25zOiBQYXJhbWV0ZXJWYWx1ZU1vZGVsW107XG4gICAgZGVwZW5kc09uOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgdGhpcy5pZCA9IG9iaiAmJiBvYmouaWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IG9iaiAmJiBvYmoubmFtZSB8fCBudWxsO1xuICAgICAgICB0aGlzLm5hbWVLZXkgPSBvYmogJiYgb2JqLm5hbWVLZXkgfHwgbnVsbDtcbiAgICAgICAgdGhpcy50eXBlID0gb2JqICYmIG9iai50eXBlIHx8IG51bGw7XG4gICAgICAgIHRoaXMudmFsdWUgPSBvYmogJiYgb2JqLnZhbHVlIHx8IG51bGw7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9iaiAmJiBvYmoub3B0aW9ucyB8fCBudWxsO1xuICAgICAgICB0aGlzLmRlcGVuZHNPbiA9IG9iaiAmJiBvYmouZGVwZW5kc09uIHx8IG51bGw7XG4gICAgfVxufVxuIl19