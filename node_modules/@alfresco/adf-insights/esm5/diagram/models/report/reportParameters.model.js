/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ReportDefinitionModel } from './reportDefinition.model';
var ReportParametersModel = /** @class */ (function () {
    function ReportParametersModel(obj) {
        this.id = obj && obj.id;
        this.name = obj && obj.name || null;
        if (obj && obj.definition) {
            this.definition = new ReportDefinitionModel(JSON.parse(obj.definition));
        }
        this.created = obj && obj.created || null;
    }
    /**
     * @return {?}
     */
    ReportParametersModel.prototype.hasParameters = /**
     * @return {?}
     */
    function () {
        return (this.definition && this.definition.parameters && this.definition.parameters.length > 0) ? true : false;
    };
    return ReportParametersModel;
}());
export { ReportParametersModel };
if (false) {
    /** @type {?} */
    ReportParametersModel.prototype.id;
    /** @type {?} */
    ReportParametersModel.prototype.name;
    /** @type {?} */
    ReportParametersModel.prototype.definition;
    /** @type {?} */
    ReportParametersModel.prototype.created;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0UGFyYW1ldGVycy5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJkaWFncmFtL21vZGVscy9yZXBvcnQvcmVwb3J0UGFyYW1ldGVycy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVqRTtJQU1JLCtCQUFZLEdBQVM7UUFDakIsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQztRQUNwQyxJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsVUFBVSxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1NBQzNFO1FBQ0QsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELDZDQUFhOzs7SUFBYjtRQUNJLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDbkgsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0FBQyxBQWxCRCxJQWtCQzs7OztJQWpCRyxtQ0FBVzs7SUFDWCxxQ0FBYTs7SUFDYiwyQ0FBa0M7O0lBQ2xDLHdDQUFnQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFJlcG9ydERlZmluaXRpb25Nb2RlbCB9IGZyb20gJy4vcmVwb3J0RGVmaW5pdGlvbi5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBSZXBvcnRQYXJhbWV0ZXJzTW9kZWwge1xuICAgIGlkOiBudW1iZXI7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIGRlZmluaXRpb246IFJlcG9ydERlZmluaXRpb25Nb2RlbDtcbiAgICBjcmVhdGVkOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgdGhpcy5pZCA9IG9iaiAmJiBvYmouaWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IG9iaiAmJiBvYmoubmFtZSB8fCBudWxsO1xuICAgICAgICBpZiAob2JqICYmIG9iai5kZWZpbml0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmRlZmluaXRpb24gPSBuZXcgUmVwb3J0RGVmaW5pdGlvbk1vZGVsKEpTT04ucGFyc2Uob2JqLmRlZmluaXRpb24pKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNyZWF0ZWQgPSBvYmogJiYgb2JqLmNyZWF0ZWQgfHwgbnVsbDtcbiAgICB9XG5cbiAgICBoYXNQYXJhbWV0ZXJzKCkge1xuICAgICAgICByZXR1cm4gKHRoaXMuZGVmaW5pdGlvbiAmJiB0aGlzLmRlZmluaXRpb24ucGFyYW1ldGVycyAmJiB0aGlzLmRlZmluaXRpb24ucGFyYW1ldGVycy5sZW5ndGggPiAwKSA/IHRydWUgOiBmYWxzZTtcbiAgICB9XG59XG4iXX0=