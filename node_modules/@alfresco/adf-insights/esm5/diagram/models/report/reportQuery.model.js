/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ReportDateRange } from './reportDateRange.model';
var ReportQuery = /** @class */ (function () {
    function ReportQuery(obj) {
        this.reportName = obj && obj.reportName || null;
        this.processDefinitionId = obj && obj.processDefinitionId || null;
        this.status = obj && obj.status || null;
        this.taskName = obj && obj.taskName || null;
        this.dateRangeInterval = obj && obj.dateRangeInterval || null;
        this.typeFiltering = obj && (typeof obj.typeFiltering !== 'undefined') ? obj.typeFiltering : true;
        this.slowProcessInstanceInteger = obj && obj.slowProcessInstanceInteger || 0;
        this.duration = obj && obj.duration || 0;
        this.dateRange = new ReportDateRange(obj);
    }
    return ReportQuery;
}());
export { ReportQuery };
if (false) {
    /** @type {?} */
    ReportQuery.prototype.reportName;
    /** @type {?} */
    ReportQuery.prototype.processDefinitionId;
    /** @type {?} */
    ReportQuery.prototype.status;
    /** @type {?} */
    ReportQuery.prototype.taskName;
    /** @type {?} */
    ReportQuery.prototype.typeFiltering;
    /** @type {?} */
    ReportQuery.prototype.dateRange;
    /** @type {?} */
    ReportQuery.prototype.dateRangeInterval;
    /** @type {?} */
    ReportQuery.prototype.slowProcessInstanceInteger;
    /** @type {?} */
    ReportQuery.prototype.duration;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0UXVlcnkubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWluc2lnaHRzLyIsInNvdXJjZXMiOlsiZGlhZ3JhbS9tb2RlbHMvcmVwb3J0L3JlcG9ydFF1ZXJ5Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUUxRDtJQVdJLHFCQUFZLEdBQVM7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUM7UUFDaEQsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsbUJBQW1CLElBQUksSUFBSSxDQUFDO1FBQ2xFLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1FBQzVDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLGlCQUFpQixJQUFJLElBQUksQ0FBQztRQUM5RCxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLGFBQWEsS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2xHLElBQUksQ0FBQywwQkFBMEIsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLDBCQUEwQixJQUFJLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFTCxrQkFBQztBQUFELENBQUMsQUF2QkQsSUF1QkM7Ozs7SUF0QkcsaUNBQW1COztJQUNuQiwwQ0FBNEI7O0lBQzVCLDZCQUFlOztJQUNmLCtCQUFpQjs7SUFDakIsb0NBQXVCOztJQUN2QixnQ0FBMkI7O0lBQzNCLHdDQUEwQjs7SUFDMUIsaURBQW1DOztJQUNuQywrQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBSZXBvcnREYXRlUmFuZ2UgfSBmcm9tICcuL3JlcG9ydERhdGVSYW5nZS5tb2RlbCc7XG5cbmV4cG9ydCBjbGFzcyBSZXBvcnRRdWVyeSB7XG4gICAgcmVwb3J0TmFtZTogc3RyaW5nO1xuICAgIHByb2Nlc3NEZWZpbml0aW9uSWQ6IHN0cmluZztcbiAgICBzdGF0dXM6IHN0cmluZztcbiAgICB0YXNrTmFtZTogc3RyaW5nO1xuICAgIHR5cGVGaWx0ZXJpbmc6IGJvb2xlYW47XG4gICAgZGF0ZVJhbmdlOiBSZXBvcnREYXRlUmFuZ2U7XG4gICAgZGF0ZVJhbmdlSW50ZXJ2YWw6IHN0cmluZztcbiAgICBzbG93UHJvY2Vzc0luc3RhbmNlSW50ZWdlcjogbnVtYmVyO1xuICAgIGR1cmF0aW9uOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihvYmo/OiBhbnkpIHtcbiAgICAgICAgdGhpcy5yZXBvcnROYW1lID0gb2JqICYmIG9iai5yZXBvcnROYW1lIHx8IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25JZCA9IG9iaiAmJiBvYmoucHJvY2Vzc0RlZmluaXRpb25JZCB8fCBudWxsO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IG9iaiAmJiBvYmouc3RhdHVzIHx8IG51bGw7XG4gICAgICAgIHRoaXMudGFza05hbWUgPSBvYmogJiYgb2JqLnRhc2tOYW1lIHx8IG51bGw7XG4gICAgICAgIHRoaXMuZGF0ZVJhbmdlSW50ZXJ2YWwgPSBvYmogJiYgb2JqLmRhdGVSYW5nZUludGVydmFsIHx8IG51bGw7XG4gICAgICAgIHRoaXMudHlwZUZpbHRlcmluZyA9IG9iaiAmJiAodHlwZW9mIG9iai50eXBlRmlsdGVyaW5nICE9PSAndW5kZWZpbmVkJykgPyBvYmoudHlwZUZpbHRlcmluZyA6IHRydWU7XG4gICAgICAgIHRoaXMuc2xvd1Byb2Nlc3NJbnN0YW5jZUludGVnZXIgPSBvYmogJiYgb2JqLnNsb3dQcm9jZXNzSW5zdGFuY2VJbnRlZ2VyIHx8IDA7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBvYmogJiYgb2JqLmR1cmF0aW9uIHx8IDA7XG4gICAgICAgIHRoaXMuZGF0ZVJhbmdlID0gbmV3IFJlcG9ydERhdGVSYW5nZShvYmopO1xuICAgIH1cblxufVxuIl19