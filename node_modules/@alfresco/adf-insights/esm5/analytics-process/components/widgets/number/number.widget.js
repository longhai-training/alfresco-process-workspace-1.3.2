/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector no-access-missing-member no-input-rename */
import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { FormGroup, Validators } from '@angular/forms';
import { WidgetComponent } from './../widget.component';
var NumberWidgetAnalyticsComponent = /** @class */ (function (_super) {
    tslib_1.__extends(NumberWidgetAnalyticsComponent, _super);
    function NumberWidgetAnalyticsComponent(elementRef) {
        var _this = _super.call(this) || this;
        _this.elementRef = elementRef;
        _this.required = false;
        return _this;
    }
    /**
     * @return {?}
     */
    NumberWidgetAnalyticsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.required) {
            this.formGroup.get(this.controllerName).setValidators(Validators.required);
        }
    };
    NumberWidgetAnalyticsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'analytics-number-widget',
                    template: "<div class=\"adf-number-widget\" [formGroup]=\"formGroup\">\n    <mat-form-field class=\"example-full-width\" floatPlaceholder=\"always\">\n        <input matInput\n            placeholder=\"{{field.nameKey | translate}}\"\n            formControlName=\"{{controllerName}}\"\n            type=\"text\"\n            pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n            [id]=\"field.id\"\n            [value]=\"field.value\"\n            [(ngModel)]=\"field.value\"\n            (ngModelChange)=\"changeValue(field)\">\n    </mat-form-field>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".adf-number-widget,.adf-number-widget .mat-form-field{width:100%}"]
                }] }
    ];
    /** @nocollapse */
    NumberWidgetAnalyticsComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    NumberWidgetAnalyticsComponent.propDecorators = {
        field: [{ type: Input }],
        formGroup: [{ type: Input, args: ['group',] }],
        controllerName: [{ type: Input, args: ['controllerName',] }],
        required: [{ type: Input }]
    };
    return NumberWidgetAnalyticsComponent;
}(WidgetComponent));
export { NumberWidgetAnalyticsComponent };
if (false) {
    /** @type {?} */
    NumberWidgetAnalyticsComponent.prototype.field;
    /** @type {?} */
    NumberWidgetAnalyticsComponent.prototype.formGroup;
    /** @type {?} */
    NumberWidgetAnalyticsComponent.prototype.controllerName;
    /** @type {?} */
    NumberWidgetAnalyticsComponent.prototype.required;
    /** @type {?} */
    NumberWidgetAnalyticsComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLndpZGdldC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJhbmFseXRpY3MtcHJvY2Vzcy9jb21wb25lbnRzL3dpZGdldHMvbnVtYmVyL251bWJlci53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFeEQ7SUFNb0QsMERBQWU7SUFjL0Qsd0NBQW1CLFVBQXNCO1FBQXpDLFlBQ0ksaUJBQU8sU0FDVjtRQUZrQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQUZ6QyxjQUFRLEdBQVksS0FBSyxDQUFDOztJQUkxQixDQUFDOzs7O0lBRUQsaURBQVE7OztJQUFSO1FBQ0ksSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDOUU7SUFDTCxDQUFDOztnQkE1QkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLDBpQkFBbUM7b0JBRW5DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDeEM7Ozs7Z0JBVG1CLFVBQVU7Ozt3QkFZekIsS0FBSzs0QkFHTCxLQUFLLFNBQUMsT0FBTztpQ0FHYixLQUFLLFNBQUMsZ0JBQWdCOzJCQUd0QixLQUFLOztJQVlWLHFDQUFDO0NBQUEsQUE3QkQsQ0FNb0QsZUFBZSxHQXVCbEU7U0F2QlksOEJBQThCOzs7SUFFdkMsK0NBQ1c7O0lBRVgsbURBQzRCOztJQUU1Qix3REFDOEI7O0lBRTlCLGtEQUMwQjs7SUFFZCxvREFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4gLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yIG5vLWFjY2Vzcy1taXNzaW5nLW1lbWJlciBuby1pbnB1dC1yZW5hbWUgKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25Jbml0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi8uLi93aWRnZXQuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhbmFseXRpY3MtbnVtYmVyLXdpZGdldCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL251bWJlci53aWRnZXQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vbnVtYmVyLndpZGdldC5zY3NzJ10sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBOdW1iZXJXaWRnZXRBbmFseXRpY3NDb21wb25lbnQgZXh0ZW5kcyBXaWRnZXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgQElucHV0KClcbiAgICBmaWVsZDogYW55O1xuXG4gICAgQElucHV0KCdncm91cCcpXG4gICAgcHVibGljIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuXG4gICAgQElucHV0KCdjb250cm9sbGVyTmFtZScpXG4gICAgcHVibGljIGNvbnRyb2xsZXJOYW1lOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIHJlcXVpcmVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAodGhpcy5yZXF1aXJlZCkge1xuICAgICAgICAgICAgdGhpcy5mb3JtR3JvdXAuZ2V0KHRoaXMuY29udHJvbGxlck5hbWUpLnNldFZhbGlkYXRvcnMoVmFsaWRhdG9ycy5yZXF1aXJlZCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=