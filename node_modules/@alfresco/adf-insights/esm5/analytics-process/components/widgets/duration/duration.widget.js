/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector no-access-missing-member no-input-rename   */
import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { FormControl, FormGroup, Validators } from '@angular/forms';
import { ParameterValueModel } from '../../../../diagram/models/report/parameterValue.model';
import { ReportParameterDetailsModel } from '../../../../diagram/models/report/reportParameterDetails.model';
import { NumberWidgetAnalyticsComponent } from './../number/number.widget';
var DurationWidgetComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DurationWidgetComponent, _super);
    function DurationWidgetComponent(elementRef) {
        var _this = _super.call(this, elementRef) || this;
        _this.elementRef = elementRef;
        _this.required = false;
        return _this;
    }
    /**
     * @return {?}
     */
    DurationWidgetComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var timeType = new FormControl();
        this.formGroup.addControl('timeType', timeType);
        if (this.required) {
            this.formGroup.get(this.controllerName).setValidators(Validators.required);
        }
        if (this.field.value === null) {
            this.field.value = 0;
        }
        /** @type {?} */
        var paramOptions = [];
        paramOptions.push(new ParameterValueModel({ id: '1', name: 'Seconds' }));
        paramOptions.push(new ParameterValueModel({ id: '60', name: 'Minutes' }));
        paramOptions.push(new ParameterValueModel({ id: '3600', name: 'Hours' }));
        paramOptions.push(new ParameterValueModel({ id: '86400', name: 'Days', selected: true }));
        this.duration = new ReportParameterDetailsModel({ id: 'duration', name: 'duration', options: paramOptions });
        this.duration.value = paramOptions[0].id;
    };
    /**
     * @return {?}
     */
    DurationWidgetComponent.prototype.calculateDuration = /**
     * @return {?}
     */
    function () {
        if (this.field && this.duration.value) {
            this.currentValue = parseInt(this.field.value, 10) * parseInt(this.duration.value, 10);
            this.formGroup.get(this.controllerName).setValue(this.currentValue);
            this.fieldChanged.emit({ value: this.currentValue });
        }
    };
    DurationWidgetComponent.decorators = [
        { type: Component, args: [{
                    selector: 'duration-widget',
                    template: "<div class=\"adf-duration-widget-grid\">\n    <div class=\"adf-duration-widget-cell\">\n        <div class=\"adf-number-widget\">\n            <mat-form-field class=\"example-full-width\" floatPlaceholder=\"always\">\n                <input matInput\n                    placeholder=\"{{field.nameKey | translate}}\"\n                    type=\"text\"\n                    pattern=\"-?[0-9]*(\\.[0-9]+)?\"\n                    [id]=\"field.id\"\n                    [value]=\"field.value\"\n                    [(ngModel)]=\"field.value\"\n                    (ngModelChange)=\"calculateDuration()\">\n             </mat-form-field>\n        </div>\n    </div>\n    <div class=\"adf-duration-widget-cell\">\n        <div class=\"adf-dropdown-container\">\n            <analytics-dropdown-widget  [field]=\"duration\" [group]=\"formGroup\" [controllerName]=\"'timeType'\"\n                             [showDefaultOption]=\"false\"\n                             (fieldChanged)=\"calculateDuration()\"></analytics-dropdown-widget>\n        </div>\n    </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [".adf-duration-widget-grid{display:flex;justify-content:space-between}.adf-duration-widget-cell{width:49%}.adf-number-widget,.adf-number-widget .mat-form-field{width:100%}.adf-dropdown-container{margin-top:30px}"]
                }] }
    ];
    /** @nocollapse */
    DurationWidgetComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    DurationWidgetComponent.propDecorators = {
        field: [{ type: Input }],
        formGroup: [{ type: Input, args: ['group',] }],
        controllerName: [{ type: Input, args: ['controllerName',] }],
        required: [{ type: Input }]
    };
    return DurationWidgetComponent;
}(NumberWidgetAnalyticsComponent));
export { DurationWidgetComponent };
if (false) {
    /** @type {?} */
    DurationWidgetComponent.prototype.field;
    /** @type {?} */
    DurationWidgetComponent.prototype.formGroup;
    /** @type {?} */
    DurationWidgetComponent.prototype.controllerName;
    /** @type {?} */
    DurationWidgetComponent.prototype.required;
    /** @type {?} */
    DurationWidgetComponent.prototype.duration;
    /** @type {?} */
    DurationWidgetComponent.prototype.currentValue;
    /** @type {?} */
    DurationWidgetComponent.prototype.selectionGroup;
    /** @type {?} */
    DurationWidgetComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb24ud2lkZ2V0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImFuYWx5dGljcy1wcm9jZXNzL2NvbXBvbmVudHMvd2lkZ2V0cy9kdXJhdGlvbi9kdXJhdGlvbi53aWRnZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQVUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDcEUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDN0YsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sZ0VBQWdFLENBQUM7QUFDN0csT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFM0U7SUFNNkMsbURBQThCO0lBbUJ2RSxpQ0FBbUIsVUFBc0I7UUFBekMsWUFDSSxrQkFBTSxVQUFVLENBQUMsU0FDcEI7UUFGa0IsZ0JBQVUsR0FBVixVQUFVLENBQVk7UUFQekMsY0FBUSxHQUFZLEtBQUssQ0FBQzs7SUFTMUIsQ0FBQzs7OztJQUVELDBDQUFROzs7SUFBUjs7WUFDVSxRQUFRLEdBQUcsSUFBSSxXQUFXLEVBQUU7UUFDbEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRWhELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQzlFO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxJQUFJLEVBQUU7WUFDM0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ3hCOztZQUVLLFlBQVksR0FBMEIsRUFBRTtRQUM5QyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksbUJBQW1CLENBQUMsRUFBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkUsWUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLG1CQUFtQixDQUFDLEVBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxFQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBQyxDQUFDLENBQUMsQ0FBQztRQUN4RSxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksbUJBQW1CLENBQUMsRUFBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBQyxDQUFDLENBQUMsQ0FBQztRQUV4RixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksMkJBQTJCLENBQUMsRUFBQyxFQUFFLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBQyxDQUFDLENBQUM7UUFDM0csSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUM3QyxDQUFDOzs7O0lBRU0sbURBQWlCOzs7SUFBeEI7UUFDSSxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUc7WUFDcEMsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3ZGLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3BFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUMsQ0FBQyxDQUFDO1NBQ3REO0lBQ0wsQ0FBQzs7Z0JBeERKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixzakNBQXFDO29CQUVyQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7aUJBQ3hDOzs7O2dCQVhtQixVQUFVOzs7d0JBY3pCLEtBQUs7NEJBR0wsS0FBSyxTQUFDLE9BQU87aUNBR2IsS0FBSyxTQUFDLGdCQUFnQjsyQkFHdEIsS0FBSzs7SUF5Q1YsOEJBQUM7Q0FBQSxBQTFERCxDQU02Qyw4QkFBOEIsR0FvRDFFO1NBcERZLHVCQUF1Qjs7O0lBRWhDLHdDQUNXOztJQUVYLDRDQUM0Qjs7SUFFNUIsaURBQzhCOztJQUU5QiwyQ0FDMEI7O0lBRTFCLDJDQUFzQzs7SUFDdEMsK0NBQXFCOztJQUVyQixpREFBaUM7O0lBRXJCLDZDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbiAvKiB0c2xpbnQ6ZGlzYWJsZTpjb21wb25lbnQtc2VsZWN0b3Igbm8tYWNjZXNzLW1pc3NpbmctbWVtYmVyIG5vLWlucHV0LXJlbmFtZSAgICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uSW5pdCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBQYXJhbWV0ZXJWYWx1ZU1vZGVsIH0gZnJvbSAnLi4vLi4vLi4vLi4vZGlhZ3JhbS9tb2RlbHMvcmVwb3J0L3BhcmFtZXRlclZhbHVlLm1vZGVsJztcbmltcG9ydCB7IFJlcG9ydFBhcmFtZXRlckRldGFpbHNNb2RlbCB9IGZyb20gJy4uLy4uLy4uLy4uL2RpYWdyYW0vbW9kZWxzL3JlcG9ydC9yZXBvcnRQYXJhbWV0ZXJEZXRhaWxzLm1vZGVsJztcbmltcG9ydCB7IE51bWJlcldpZGdldEFuYWx5dGljc0NvbXBvbmVudCB9IGZyb20gJy4vLi4vbnVtYmVyL251bWJlci53aWRnZXQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2R1cmF0aW9uLXdpZGdldCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2R1cmF0aW9uLndpZGdldC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9kdXJhdGlvbi53aWRnZXQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgRHVyYXRpb25XaWRnZXRDb21wb25lbnQgZXh0ZW5kcyBOdW1iZXJXaWRnZXRBbmFseXRpY3NDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gICAgQElucHV0KClcbiAgICBmaWVsZDogYW55O1xuXG4gICAgQElucHV0KCdncm91cCcpXG4gICAgcHVibGljIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuXG4gICAgQElucHV0KCdjb250cm9sbGVyTmFtZScpXG4gICAgcHVibGljIGNvbnRyb2xsZXJOYW1lOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKVxuICAgIHJlcXVpcmVkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBkdXJhdGlvbjogUmVwb3J0UGFyYW1ldGVyRGV0YWlsc01vZGVsO1xuICAgIGN1cnJlbnRWYWx1ZTogbnVtYmVyO1xuXG4gICAgcHVibGljIHNlbGVjdGlvbkdyb3VwOiBGb3JtR3JvdXA7XG5cbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudFJlZjogRWxlbWVudFJlZikge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgY29uc3QgdGltZVR5cGUgPSBuZXcgRm9ybUNvbnRyb2woKTtcbiAgICAgICAgdGhpcy5mb3JtR3JvdXAuYWRkQ29udHJvbCgndGltZVR5cGUnLCB0aW1lVHlwZSk7XG5cbiAgICAgICAgaWYgKHRoaXMucmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9ybUdyb3VwLmdldCh0aGlzLmNvbnRyb2xsZXJOYW1lKS5zZXRWYWxpZGF0b3JzKFZhbGlkYXRvcnMucmVxdWlyZWQpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmZpZWxkLnZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmZpZWxkLnZhbHVlID0gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHBhcmFtT3B0aW9uczogUGFyYW1ldGVyVmFsdWVNb2RlbFtdID0gW107XG4gICAgICAgIHBhcmFtT3B0aW9ucy5wdXNoKG5ldyBQYXJhbWV0ZXJWYWx1ZU1vZGVsKHtpZDogJzEnLCBuYW1lOiAnU2Vjb25kcyd9KSk7XG4gICAgICAgIHBhcmFtT3B0aW9ucy5wdXNoKG5ldyBQYXJhbWV0ZXJWYWx1ZU1vZGVsKHtpZDogJzYwJywgbmFtZTogJ01pbnV0ZXMnfSkpO1xuICAgICAgICBwYXJhbU9wdGlvbnMucHVzaChuZXcgUGFyYW1ldGVyVmFsdWVNb2RlbCh7aWQ6ICczNjAwJywgbmFtZTogJ0hvdXJzJ30pKTtcbiAgICAgICAgcGFyYW1PcHRpb25zLnB1c2gobmV3IFBhcmFtZXRlclZhbHVlTW9kZWwoe2lkOiAnODY0MDAnLCBuYW1lOiAnRGF5cycsIHNlbGVjdGVkOiB0cnVlfSkpO1xuXG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBuZXcgUmVwb3J0UGFyYW1ldGVyRGV0YWlsc01vZGVsKHtpZDogJ2R1cmF0aW9uJywgbmFtZTogJ2R1cmF0aW9uJywgb3B0aW9uczogcGFyYW1PcHRpb25zfSk7XG4gICAgICAgIHRoaXMuZHVyYXRpb24udmFsdWUgPSBwYXJhbU9wdGlvbnNbMF0uaWQ7XG4gICAgfVxuXG4gICAgcHVibGljIGNhbGN1bGF0ZUR1cmF0aW9uKCkge1xuICAgICAgICBpZiAodGhpcy5maWVsZCAmJiB0aGlzLmR1cmF0aW9uLnZhbHVlICkge1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50VmFsdWUgPSBwYXJzZUludCh0aGlzLmZpZWxkLnZhbHVlLCAxMCkgKiBwYXJzZUludCh0aGlzLmR1cmF0aW9uLnZhbHVlLCAxMCk7XG4gICAgICAgICAgICB0aGlzLmZvcm1Hcm91cC5nZXQodGhpcy5jb250cm9sbGVyTmFtZSkuc2V0VmFsdWUodGhpcy5jdXJyZW50VmFsdWUpO1xuICAgICAgICAgICAgdGhpcy5maWVsZENoYW5nZWQuZW1pdCh7dmFsdWU6IHRoaXMuY3VycmVudFZhbHVlfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==