/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { DiagramsModule } from '../diagram/diagram.module';
import { MaterialModule } from '../material.module';
import { ChartsModule } from 'ng2-charts';
import { CoreModule } from '@alfresco/adf-core';
import { AnalyticsGeneratorComponent } from './components/analytics-generator.component';
import { AnalyticsReportHeatMapComponent } from './components/analytics-report-heat-map.component';
import { AnalyticsReportListComponent } from './components/analytics-report-list.component';
import { AnalyticsReportParametersComponent } from './components/analytics-report-parameters.component';
import { AnalyticsComponent } from './components/analytics.component';
import { CheckboxWidgetAnalyticsComponent } from './components/widgets/checkbox/checkbox.widget';
import { DateRangeWidgetComponent } from './components/widgets/date-range/date-range.widget';
import { DropdownWidgetAnalyticsComponent } from './components/widgets/dropdown/dropdown.widget';
import { DurationWidgetComponent } from './components/widgets/duration/duration.widget';
import { NumberWidgetAnalyticsComponent } from './components/widgets/number/number.widget';
import { FlexLayoutModule } from '@angular/flex-layout';
export class AnalyticsProcessModule {
}
AnalyticsProcessModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    FormsModule,
                    ReactiveFormsModule,
                    CommonModule,
                    ChartsModule,
                    DiagramsModule,
                    MaterialModule,
                    FlexLayoutModule,
                    CoreModule.forChild()
                ],
                declarations: [
                    AnalyticsComponent,
                    AnalyticsReportListComponent,
                    AnalyticsReportParametersComponent,
                    AnalyticsGeneratorComponent,
                    AnalyticsReportHeatMapComponent,
                    DropdownWidgetAnalyticsComponent,
                    NumberWidgetAnalyticsComponent,
                    DurationWidgetComponent,
                    CheckboxWidgetAnalyticsComponent,
                    DateRangeWidgetComponent
                ],
                exports: [
                    AnalyticsComponent,
                    AnalyticsReportListComponent,
                    AnalyticsReportParametersComponent,
                    AnalyticsGeneratorComponent,
                    AnalyticsReportHeatMapComponent,
                    DropdownWidgetAnalyticsComponent,
                    NumberWidgetAnalyticsComponent,
                    DurationWidgetComponent,
                    CheckboxWidgetAnalyticsComponent,
                    DateRangeWidgetComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5hbHl0aWNzLXByb2Nlc3MubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImFuYWx5dGljcy1wcm9jZXNzL2FuYWx5dGljcy1wcm9jZXNzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVwRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRTFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUN6RixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUNuRyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUM1RixPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUN4RyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUV0RSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNqRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUM3RixPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUNqRyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN4RixPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUUzRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQXNDeEQsTUFBTSxPQUFPLHNCQUFzQjs7O1lBcENsQyxRQUFRLFNBQUM7Z0JBQ04sT0FBTyxFQUFFO29CQUNMLFdBQVc7b0JBQ1gsbUJBQW1CO29CQUNuQixZQUFZO29CQUNaLFlBQVk7b0JBQ1osY0FBYztvQkFDZCxjQUFjO29CQUNkLGdCQUFnQjtvQkFDaEIsVUFBVSxDQUFDLFFBQVEsRUFBRTtpQkFDeEI7Z0JBQ0QsWUFBWSxFQUFFO29CQUNWLGtCQUFrQjtvQkFDbEIsNEJBQTRCO29CQUM1QixrQ0FBa0M7b0JBQ2xDLDJCQUEyQjtvQkFDM0IsK0JBQStCO29CQUMvQixnQ0FBZ0M7b0JBQ2hDLDhCQUE4QjtvQkFDOUIsdUJBQXVCO29CQUN2QixnQ0FBZ0M7b0JBQ2hDLHdCQUF3QjtpQkFDM0I7Z0JBQ0QsT0FBTyxFQUFFO29CQUNMLGtCQUFrQjtvQkFDbEIsNEJBQTRCO29CQUM1QixrQ0FBa0M7b0JBQ2xDLDJCQUEyQjtvQkFDM0IsK0JBQStCO29CQUMvQixnQ0FBZ0M7b0JBQ2hDLDhCQUE4QjtvQkFDOUIsdUJBQXVCO29CQUN2QixnQ0FBZ0M7b0JBQ2hDLHdCQUF3QjtpQkFDM0I7YUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBEaWFncmFtc01vZHVsZSB9IGZyb20gJy4uL2RpYWdyYW0vZGlhZ3JhbS5tb2R1bGUnO1xuaW1wb3J0IHsgTWF0ZXJpYWxNb2R1bGUgfSBmcm9tICcuLi9tYXRlcmlhbC5tb2R1bGUnO1xuXG5pbXBvcnQgeyBDaGFydHNNb2R1bGUgfSBmcm9tICduZzItY2hhcnRzJztcblxuaW1wb3J0IHsgQ29yZU1vZHVsZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBBbmFseXRpY3NHZW5lcmF0b3JDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYW5hbHl0aWNzLWdlbmVyYXRvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQW5hbHl0aWNzUmVwb3J0SGVhdE1hcENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hbmFseXRpY3MtcmVwb3J0LWhlYXQtbWFwLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBbmFseXRpY3NSZXBvcnRMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FuYWx5dGljcy1yZXBvcnQtbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQW5hbHl0aWNzUmVwb3J0UGFyYW1ldGVyc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hbmFseXRpY3MtcmVwb3J0LXBhcmFtZXRlcnMuY29tcG9uZW50JztcbmltcG9ydCB7IEFuYWx5dGljc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hbmFseXRpY3MuY29tcG9uZW50JztcblxuaW1wb3J0IHsgQ2hlY2tib3hXaWRnZXRBbmFseXRpY3NDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvd2lkZ2V0cy9jaGVja2JveC9jaGVja2JveC53aWRnZXQnO1xuaW1wb3J0IHsgRGF0ZVJhbmdlV2lkZ2V0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3dpZGdldHMvZGF0ZS1yYW5nZS9kYXRlLXJhbmdlLndpZGdldCc7XG5pbXBvcnQgeyBEcm9wZG93bldpZGdldEFuYWx5dGljc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy93aWRnZXRzL2Ryb3Bkb3duL2Ryb3Bkb3duLndpZGdldCc7XG5pbXBvcnQgeyBEdXJhdGlvbldpZGdldENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy93aWRnZXRzL2R1cmF0aW9uL2R1cmF0aW9uLndpZGdldCc7XG5pbXBvcnQgeyBOdW1iZXJXaWRnZXRBbmFseXRpY3NDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvd2lkZ2V0cy9udW1iZXIvbnVtYmVyLndpZGdldCc7XG5cbmltcG9ydCB7IEZsZXhMYXlvdXRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5cbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBGb3Jtc01vZHVsZSxcbiAgICAgICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcbiAgICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgICBDaGFydHNNb2R1bGUsXG4gICAgICAgIERpYWdyYW1zTW9kdWxlLFxuICAgICAgICBNYXRlcmlhbE1vZHVsZSxcbiAgICAgICAgRmxleExheW91dE1vZHVsZSxcbiAgICAgICAgQ29yZU1vZHVsZS5mb3JDaGlsZCgpXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgQW5hbHl0aWNzQ29tcG9uZW50LFxuICAgICAgICBBbmFseXRpY3NSZXBvcnRMaXN0Q29tcG9uZW50LFxuICAgICAgICBBbmFseXRpY3NSZXBvcnRQYXJhbWV0ZXJzQ29tcG9uZW50LFxuICAgICAgICBBbmFseXRpY3NHZW5lcmF0b3JDb21wb25lbnQsXG4gICAgICAgIEFuYWx5dGljc1JlcG9ydEhlYXRNYXBDb21wb25lbnQsXG4gICAgICAgIERyb3Bkb3duV2lkZ2V0QW5hbHl0aWNzQ29tcG9uZW50LFxuICAgICAgICBOdW1iZXJXaWRnZXRBbmFseXRpY3NDb21wb25lbnQsXG4gICAgICAgIER1cmF0aW9uV2lkZ2V0Q29tcG9uZW50LFxuICAgICAgICBDaGVja2JveFdpZGdldEFuYWx5dGljc0NvbXBvbmVudCxcbiAgICAgICAgRGF0ZVJhbmdlV2lkZ2V0Q29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIEFuYWx5dGljc0NvbXBvbmVudCxcbiAgICAgICAgQW5hbHl0aWNzUmVwb3J0TGlzdENvbXBvbmVudCxcbiAgICAgICAgQW5hbHl0aWNzUmVwb3J0UGFyYW1ldGVyc0NvbXBvbmVudCxcbiAgICAgICAgQW5hbHl0aWNzR2VuZXJhdG9yQ29tcG9uZW50LFxuICAgICAgICBBbmFseXRpY3NSZXBvcnRIZWF0TWFwQ29tcG9uZW50LFxuICAgICAgICBEcm9wZG93bldpZGdldEFuYWx5dGljc0NvbXBvbmVudCxcbiAgICAgICAgTnVtYmVyV2lkZ2V0QW5hbHl0aWNzQ29tcG9uZW50LFxuICAgICAgICBEdXJhdGlvbldpZGdldENvbXBvbmVudCxcbiAgICAgICAgQ2hlY2tib3hXaWRnZXRBbmFseXRpY3NDb21wb25lbnQsXG4gICAgICAgIERhdGVSYW5nZVdpZGdldENvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgQW5hbHl0aWNzUHJvY2Vzc01vZHVsZSB7fVxuIl19