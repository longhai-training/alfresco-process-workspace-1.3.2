/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector  */
import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';
export class DiagramContainerServiceTaskComponent {
    /**
     * @param {?} elementRef
     */
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.error = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
DiagramContainerServiceTaskComponent.decorators = [
    { type: Component, args: [{
                selector: 'diagram-container-service-task',
                template: "<div [ngSwitch]=\"data.taskType\">\n    <div *ngSwitchCase=\"'mail'\">\n        <diagram-send-task [data]=\"data\"></diagram-send-task>\n    </div>\n    <div *ngSwitchCase=\"'camel'\">\n        <diagram-camel-task [data]=\"data\"></diagram-camel-task>\n    </div>\n    <div *ngSwitchCase=\"'mule'\">\n        <diagram-mule-task [data]=\"data\"></diagram-mule-task>\n    </div>\n    <div *ngSwitchCase=\"'alfresco_publish'\">\n        <adf-diagram-publish-task [data]=\"data\"></adf-diagram-publish-task>\n    </div>\n    <div *ngSwitchCase=\"'rest_call'\">\n        <diagram-rest-call-task [data]=\"data\"></diagram-rest-call-task>\n    </div>\n    <div *ngSwitchCase=\"'google_drive_publish'\">\n        <diagram-google-drive-publish-task [data]=\"data\"></diagram-google-drive-publish-task>\n    </div>\n    <div *ngSwitchCase=\"'box_publish'\">\n        <diagram-box-publish-task [data]=\"data\"></diagram-box-publish-task>\n    </div>\n    <div *ngSwitchDefault>\n        <diagram-service-task [data]=\"data\"></diagram-service-task>\n    </div>\n</div>\n"
            }] }
];
/** @nocollapse */
DiagramContainerServiceTaskComponent.ctorParameters = () => [
    { type: ElementRef }
];
DiagramContainerServiceTaskComponent.propDecorators = {
    data: [{ type: Input }],
    error: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    DiagramContainerServiceTaskComponent.prototype.data;
    /** @type {?} */
    DiagramContainerServiceTaskComponent.prototype.error;
    /** @type {?} */
    DiagramContainerServiceTaskComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ3JhbS1jb250YWluZXItc2VydmljZS10YXNrLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtaW5zaWdodHMvIiwic291cmNlcyI6WyJkaWFncmFtL2NvbXBvbmVudHMvYWN0aXZpdGllcy9kaWFncmFtLWNvbnRhaW5lci1zZXJ2aWNlLXRhc2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU0zRixNQUFNLE9BQU8sb0NBQW9DOzs7O0lBTzdDLFlBQW1CLFVBQXNCO1FBQXRCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFGekMsVUFBSyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFaUIsQ0FBQzs7OztJQUU3QyxRQUFRO0lBRVIsQ0FBQzs7O1lBZkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxnQ0FBZ0M7Z0JBQzFDLCtpQ0FBOEQ7YUFDakU7Ozs7WUFMbUIsVUFBVTs7O21CQU96QixLQUFLO29CQUdMLE1BQU07Ozs7SUFIUCxvREFDVTs7SUFFVixxREFDMkI7O0lBRWYsMERBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuIC8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2RpYWdyYW0tY29udGFpbmVyLXNlcnZpY2UtdGFzaycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2RpYWdyYW0tY29udGFpbmVyLXNlcnZpY2UtdGFzay5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGlhZ3JhbUNvbnRhaW5lclNlcnZpY2VUYXNrQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKVxuICAgIGRhdGE6IGFueTtcblxuICAgIEBPdXRwdXQoKVxuICAgIGVycm9yID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgICBuZ09uSW5pdCgpIHtcblxuICAgIH1cbn1cbiJdfQ==