/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DiagramLaneElementModel } from './diagramLaneElement.model';
export class DiagramPoolElementModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        this.lanes = [];
        if (obj) {
            this.height = obj.height;
            this.id = obj.id;
            this.name = obj.name;
            this.properties = obj.properties;
            this.width = obj.width;
            this.x = obj.x;
            this.y = obj.y;
            if (obj.lanes) {
                obj.lanes.forEach((/**
                 * @param {?} lane
                 * @return {?}
                 */
                (lane) => {
                    this.lanes.push(new DiagramLaneElementModel(lane));
                }));
            }
        }
    }
}
if (false) {
    /** @type {?} */
    DiagramPoolElementModel.prototype.height;
    /** @type {?} */
    DiagramPoolElementModel.prototype.id;
    /** @type {?} */
    DiagramPoolElementModel.prototype.name;
    /** @type {?} */
    DiagramPoolElementModel.prototype.properties;
    /** @type {?} */
    DiagramPoolElementModel.prototype.lanes;
    /** @type {?} */
    DiagramPoolElementModel.prototype.width;
    /** @type {?} */
    DiagramPoolElementModel.prototype.x;
    /** @type {?} */
    DiagramPoolElementModel.prototype.y;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhZ3JhbVBvb2xFbGVtZW50Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1pbnNpZ2h0cy8iLCJzb3VyY2VzIjpbImRpYWdyYW0vbW9kZWxzL2RpYWdyYW0vZGlhZ3JhbVBvb2xFbGVtZW50Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBRXJFLE1BQU0sT0FBTyx1QkFBdUI7Ozs7SUFVaEMsWUFBWSxHQUFTO1FBTHJCLFVBQUssR0FBOEIsRUFBRSxDQUFDO1FBTWxDLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxFQUFFLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQztZQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUN2QixJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDZixJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUU7Z0JBQ1gsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPOzs7O2dCQUFDLENBQUMsSUFBNkIsRUFBRSxFQUFFO29CQUNoRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLHVCQUF1QixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3ZELENBQUMsRUFBQyxDQUFDO2FBQ047U0FDSjtJQUNMLENBQUM7Q0FDSjs7O0lBekJHLHlDQUFlOztJQUNmLHFDQUFXOztJQUNYLHVDQUFhOztJQUNiLDZDQUFnQjs7SUFDaEIsd0NBQXNDOztJQUN0Qyx3Q0FBYzs7SUFDZCxvQ0FBVTs7SUFDVixvQ0FBVSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERpYWdyYW1MYW5lRWxlbWVudE1vZGVsIH0gZnJvbSAnLi9kaWFncmFtTGFuZUVsZW1lbnQubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgRGlhZ3JhbVBvb2xFbGVtZW50TW9kZWwge1xuICAgIGhlaWdodDogc3RyaW5nO1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHByb3BlcnRpZXM6IGFueTtcbiAgICBsYW5lczogRGlhZ3JhbUxhbmVFbGVtZW50TW9kZWxbXSA9IFtdO1xuICAgIHdpZHRoOiBzdHJpbmc7XG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICB0aGlzLmhlaWdodCA9IG9iai5oZWlnaHQ7XG4gICAgICAgICAgICB0aGlzLmlkID0gb2JqLmlkO1xuICAgICAgICAgICAgdGhpcy5uYW1lID0gb2JqLm5hbWU7XG4gICAgICAgICAgICB0aGlzLnByb3BlcnRpZXMgPSBvYmoucHJvcGVydGllcztcbiAgICAgICAgICAgIHRoaXMud2lkdGggPSBvYmoud2lkdGg7XG4gICAgICAgICAgICB0aGlzLnggPSBvYmoueDtcbiAgICAgICAgICAgIHRoaXMueSA9IG9iai55O1xuICAgICAgICAgICAgaWYgKG9iai5sYW5lcykge1xuICAgICAgICAgICAgICAgIG9iai5sYW5lcy5mb3JFYWNoKChsYW5lOiBEaWFncmFtTGFuZUVsZW1lbnRNb2RlbCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxhbmVzLnB1c2gobmV3IERpYWdyYW1MYW5lRWxlbWVudE1vZGVsKGxhbmUpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==