/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ReportDateRange } from './reportDateRange.model';
export class ReportQuery {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        this.reportName = obj && obj.reportName || null;
        this.processDefinitionId = obj && obj.processDefinitionId || null;
        this.status = obj && obj.status || null;
        this.taskName = obj && obj.taskName || null;
        this.dateRangeInterval = obj && obj.dateRangeInterval || null;
        this.typeFiltering = obj && (typeof obj.typeFiltering !== 'undefined') ? obj.typeFiltering : true;
        this.slowProcessInstanceInteger = obj && obj.slowProcessInstanceInteger || 0;
        this.duration = obj && obj.duration || 0;
        this.dateRange = new ReportDateRange(obj);
    }
}
if (false) {
    /** @type {?} */
    ReportQuery.prototype.reportName;
    /** @type {?} */
    ReportQuery.prototype.processDefinitionId;
    /** @type {?} */
    ReportQuery.prototype.status;
    /** @type {?} */
    ReportQuery.prototype.taskName;
    /** @type {?} */
    ReportQuery.prototype.typeFiltering;
    /** @type {?} */
    ReportQuery.prototype.dateRange;
    /** @type {?} */
    ReportQuery.prototype.dateRangeInterval;
    /** @type {?} */
    ReportQuery.prototype.slowProcessInstanceInteger;
    /** @type {?} */
    ReportQuery.prototype.duration;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0UXVlcnkubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWluc2lnaHRzLyIsInNvdXJjZXMiOlsiZGlhZ3JhbS9tb2RlbHMvcmVwb3J0L3JlcG9ydFF1ZXJ5Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUUxRCxNQUFNLE9BQU8sV0FBVzs7OztJQVdwQixZQUFZLEdBQVM7UUFDakIsSUFBSSxDQUFDLFVBQVUsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUM7UUFDaEQsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsbUJBQW1CLElBQUksSUFBSSxDQUFDO1FBQ2xFLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQ3hDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDO1FBQzVDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLGlCQUFpQixJQUFJLElBQUksQ0FBQztRQUM5RCxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLGFBQWEsS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ2xHLElBQUksQ0FBQywwQkFBMEIsR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLDBCQUEwQixJQUFJLENBQUMsQ0FBQztRQUM3RSxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsSUFBSSxHQUFHLENBQUMsUUFBUSxJQUFJLENBQUMsQ0FBQztRQUN6QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Q0FFSjs7O0lBdEJHLGlDQUFtQjs7SUFDbkIsMENBQTRCOztJQUM1Qiw2QkFBZTs7SUFDZiwrQkFBaUI7O0lBQ2pCLG9DQUF1Qjs7SUFDdkIsZ0NBQTJCOztJQUMzQix3Q0FBMEI7O0lBQzFCLGlEQUFtQzs7SUFDbkMsK0JBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgUmVwb3J0RGF0ZVJhbmdlIH0gZnJvbSAnLi9yZXBvcnREYXRlUmFuZ2UubW9kZWwnO1xuXG5leHBvcnQgY2xhc3MgUmVwb3J0UXVlcnkge1xuICAgIHJlcG9ydE5hbWU6IHN0cmluZztcbiAgICBwcm9jZXNzRGVmaW5pdGlvbklkOiBzdHJpbmc7XG4gICAgc3RhdHVzOiBzdHJpbmc7XG4gICAgdGFza05hbWU6IHN0cmluZztcbiAgICB0eXBlRmlsdGVyaW5nOiBib29sZWFuO1xuICAgIGRhdGVSYW5nZTogUmVwb3J0RGF0ZVJhbmdlO1xuICAgIGRhdGVSYW5nZUludGVydmFsOiBzdHJpbmc7XG4gICAgc2xvd1Byb2Nlc3NJbnN0YW5jZUludGVnZXI6IG51bWJlcjtcbiAgICBkdXJhdGlvbjogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIHRoaXMucmVwb3J0TmFtZSA9IG9iaiAmJiBvYmoucmVwb3J0TmFtZSB8fCBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NEZWZpbml0aW9uSWQgPSBvYmogJiYgb2JqLnByb2Nlc3NEZWZpbml0aW9uSWQgfHwgbnVsbDtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBvYmogJiYgb2JqLnN0YXR1cyB8fCBudWxsO1xuICAgICAgICB0aGlzLnRhc2tOYW1lID0gb2JqICYmIG9iai50YXNrTmFtZSB8fCBudWxsO1xuICAgICAgICB0aGlzLmRhdGVSYW5nZUludGVydmFsID0gb2JqICYmIG9iai5kYXRlUmFuZ2VJbnRlcnZhbCB8fCBudWxsO1xuICAgICAgICB0aGlzLnR5cGVGaWx0ZXJpbmcgPSBvYmogJiYgKHR5cGVvZiBvYmoudHlwZUZpbHRlcmluZyAhPT0gJ3VuZGVmaW5lZCcpID8gb2JqLnR5cGVGaWx0ZXJpbmcgOiB0cnVlO1xuICAgICAgICB0aGlzLnNsb3dQcm9jZXNzSW5zdGFuY2VJbnRlZ2VyID0gb2JqICYmIG9iai5zbG93UHJvY2Vzc0luc3RhbmNlSW50ZWdlciB8fCAwO1xuICAgICAgICB0aGlzLmR1cmF0aW9uID0gb2JqICYmIG9iai5kdXJhdGlvbiB8fCAwO1xuICAgICAgICB0aGlzLmRhdGVSYW5nZSA9IG5ldyBSZXBvcnREYXRlUmFuZ2Uob2JqKTtcbiAgICB9XG5cbn1cbiJdfQ==