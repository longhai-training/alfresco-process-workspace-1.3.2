/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { CoreModule } from '@alfresco/adf-core';
import { MaterialModule } from '../material.module';
import { ProcessCommentsModule } from '../process-comments/process-comments.module';
import { TaskListModule } from '../task-list/task-list.module';
import { PeopleModule } from '../people/people.module';
import { ContentWidgetModule } from '../content-widget/content-widget.module';
import { ProcessAuditDirective } from './components/process-audit.directive';
import { ProcessFiltersComponent } from './components/process-filters.component';
import { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';
import { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';
import { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';
import { ProcessInstanceListComponent } from './components/process-list.component';
import { StartProcessInstanceComponent } from './components/start-process.component';
import { FormModule } from '../form/form.module';
export class ProcessListModule {
}
ProcessListModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    MaterialModule,
                    FlexLayoutModule,
                    FormsModule,
                    ReactiveFormsModule,
                    CoreModule.forChild(),
                    TaskListModule,
                    PeopleModule,
                    ContentWidgetModule,
                    ProcessCommentsModule,
                    FormModule
                ],
                declarations: [
                    ProcessInstanceListComponent,
                    ProcessFiltersComponent,
                    ProcessInstanceDetailsComponent,
                    ProcessAuditDirective,
                    ProcessInstanceHeaderComponent,
                    ProcessInstanceTasksComponent,
                    StartProcessInstanceComponent
                ],
                exports: [
                    ProcessInstanceListComponent,
                    ProcessFiltersComponent,
                    ProcessInstanceDetailsComponent,
                    ProcessAuditDirective,
                    ProcessInstanceHeaderComponent,
                    ProcessInstanceTasksComponent,
                    StartProcessInstanceComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtcHJvY2Vzcy1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInByb2Nlc3MtbGlzdC9wcm9jZXNzLWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFFOUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDakYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDbEcsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFDaEcsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDOUYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDbkYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDckYsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBbUNqRCxNQUFNLE9BQU8saUJBQWlCOzs7WUFqQzdCLFFBQVEsU0FBQztnQkFDTixPQUFPLEVBQUU7b0JBQ0wsWUFBWTtvQkFDWixjQUFjO29CQUNkLGdCQUFnQjtvQkFDaEIsV0FBVztvQkFDWCxtQkFBbUI7b0JBQ25CLFVBQVUsQ0FBQyxRQUFRLEVBQUU7b0JBQ3JCLGNBQWM7b0JBQ2QsWUFBWTtvQkFDWixtQkFBbUI7b0JBQ25CLHFCQUFxQjtvQkFDckIsVUFBVTtpQkFDYjtnQkFDRCxZQUFZLEVBQUU7b0JBQ1YsNEJBQTRCO29CQUM1Qix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0IscUJBQXFCO29CQUNyQiw4QkFBOEI7b0JBQzlCLDZCQUE2QjtvQkFDN0IsNkJBQTZCO2lCQUNoQztnQkFDRCxPQUFPLEVBQUU7b0JBQ0wsNEJBQTRCO29CQUM1Qix1QkFBdUI7b0JBQ3ZCLCtCQUErQjtvQkFDL0IscUJBQXFCO29CQUNyQiw4QkFBOEI7b0JBQzlCLDZCQUE2QjtvQkFDN0IsNkJBQTZCO2lCQUNoQzthQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGbGV4TGF5b3V0TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZmxleC1sYXlvdXQnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IE1hdGVyaWFsTW9kdWxlIH0gZnJvbSAnLi4vbWF0ZXJpYWwubW9kdWxlJztcbmltcG9ydCB7IFByb2Nlc3NDb21tZW50c01vZHVsZSB9IGZyb20gJy4uL3Byb2Nlc3MtY29tbWVudHMvcHJvY2Vzcy1jb21tZW50cy5tb2R1bGUnO1xuaW1wb3J0IHsgVGFza0xpc3RNb2R1bGUgfSBmcm9tICcuLi90YXNrLWxpc3QvdGFzay1saXN0Lm1vZHVsZSc7XG5pbXBvcnQgeyBQZW9wbGVNb2R1bGUgfSBmcm9tICcuLi9wZW9wbGUvcGVvcGxlLm1vZHVsZSc7XG5pbXBvcnQgeyBDb250ZW50V2lkZ2V0TW9kdWxlIH0gZnJvbSAnLi4vY29udGVudC13aWRnZXQvY29udGVudC13aWRnZXQubW9kdWxlJztcblxuaW1wb3J0IHsgUHJvY2Vzc0F1ZGl0RGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3Byb2Nlc3MtYXVkaXQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFByb2Nlc3NGaWx0ZXJzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Byb2Nlc3MtZmlsdGVycy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvY2Vzc0luc3RhbmNlRGV0YWlsc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wcm9jZXNzLWluc3RhbmNlLWRldGFpbHMuY29tcG9uZW50JztcbmltcG9ydCB7IFByb2Nlc3NJbnN0YW5jZUhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wcm9jZXNzLWluc3RhbmNlLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvY2Vzc0luc3RhbmNlVGFza3NDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvcHJvY2Vzcy1pbnN0YW5jZS10YXNrcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUHJvY2Vzc0luc3RhbmNlTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wcm9jZXNzLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFN0YXJ0UHJvY2Vzc0luc3RhbmNlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3N0YXJ0LXByb2Nlc3MuY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1Nb2R1bGUgfSBmcm9tICcuLi9mb3JtL2Zvcm0ubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgTWF0ZXJpYWxNb2R1bGUsXG4gICAgICAgIEZsZXhMYXlvdXRNb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBDb3JlTW9kdWxlLmZvckNoaWxkKCksXG4gICAgICAgIFRhc2tMaXN0TW9kdWxlLFxuICAgICAgICBQZW9wbGVNb2R1bGUsXG4gICAgICAgIENvbnRlbnRXaWRnZXRNb2R1bGUsXG4gICAgICAgIFByb2Nlc3NDb21tZW50c01vZHVsZSxcbiAgICAgICAgRm9ybU1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUxpc3RDb21wb25lbnQsXG4gICAgICAgIFByb2Nlc3NGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzSW5zdGFuY2VEZXRhaWxzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgUHJvY2Vzc0luc3RhbmNlVGFza3NDb21wb25lbnQsXG4gICAgICAgIFN0YXJ0UHJvY2Vzc0luc3RhbmNlQ29tcG9uZW50XG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUxpc3RDb21wb25lbnQsXG4gICAgICAgIFByb2Nlc3NGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzSW5zdGFuY2VEZXRhaWxzQ29tcG9uZW50LFxuICAgICAgICBQcm9jZXNzQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIFByb2Nlc3NJbnN0YW5jZUhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgUHJvY2Vzc0luc3RhbmNlVGFza3NDb21wb25lbnQsXG4gICAgICAgIFN0YXJ0UHJvY2Vzc0luc3RhbmNlQ29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBQcm9jZXNzTGlzdE1vZHVsZSB7XG59XG4iXX0=