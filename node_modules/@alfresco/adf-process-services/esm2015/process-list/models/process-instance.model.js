/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class ProcessInstance {
    /**
     * @param {?=} data
     */
    constructor(data) {
        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;
        this.ended = data && data.ended !== undefined ? data.ended : null;
        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;
        this.id = data && data.id !== undefined ? data.id : null;
        this.name = data && data.name !== undefined ? data.name : null;
        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;
        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;
        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;
        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;
        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;
        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;
        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;
        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;
        this.started = data && data.started !== undefined ? data.started : null;
        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;
        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;
        this.variables = data && data.variables !== undefined ? data.variables : null;
    }
}
if (false) {
    /** @type {?} */
    ProcessInstance.prototype.businessKey;
    /** @type {?} */
    ProcessInstance.prototype.ended;
    /** @type {?} */
    ProcessInstance.prototype.graphicalNotationDefined;
    /** @type {?} */
    ProcessInstance.prototype.id;
    /** @type {?} */
    ProcessInstance.prototype.name;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionCategory;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionDeploymentId;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionDescription;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionId;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionKey;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionName;
    /** @type {?} */
    ProcessInstance.prototype.processDefinitionVersion;
    /** @type {?} */
    ProcessInstance.prototype.startFormDefined;
    /** @type {?} */
    ProcessInstance.prototype.started;
    /** @type {?} */
    ProcessInstance.prototype.startedBy;
    /** @type {?} */
    ProcessInstance.prototype.tenantId;
    /** @type {?} */
    ProcessInstance.prototype.variables;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1pbnN0YW5jZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtcHJvY2Vzcy1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInByb2Nlc3MtbGlzdC9tb2RlbHMvcHJvY2Vzcy1pbnN0YW5jZS5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxNQUFNLE9BQU8sZUFBZTs7OztJQW9CeEIsWUFBWSxJQUFVO1FBQ2xCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDcEYsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNsRSxJQUFJLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyx3QkFBd0IsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzNILElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFFLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDekQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUMvRCxJQUFJLENBQUMseUJBQXlCLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyx5QkFBeUIsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzlILElBQUksQ0FBQyw2QkFBNkIsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLDZCQUE2QixLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLDZCQUE2QixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDMUksSUFBSSxDQUFDLDRCQUE0QixHQUFHLElBQUksSUFBSSxJQUFJLENBQUMsNEJBQTRCLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUN2SSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxtQkFBbUIsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzVHLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLG9CQUFvQixLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDL0csSUFBSSxDQUFDLHFCQUFxQixHQUFHLElBQUksSUFBSSxJQUFJLENBQUMscUJBQXFCLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNsSCxJQUFJLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyx3QkFBd0IsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzNILElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLGdCQUFnQixLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDbkcsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUN4RSxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksSUFBSSxJQUFJLENBQUMsU0FBUyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzlFLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDM0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUNsRixDQUFDO0NBRUo7OztJQXRDRyxzQ0FBcUI7O0lBQ3JCLGdDQUFhOztJQUNiLG1EQUFtQzs7SUFDbkMsNkJBQVk7O0lBQ1osK0JBQWM7O0lBQ2Qsb0RBQW1DOztJQUNuQyx3REFBdUM7O0lBQ3ZDLHVEQUFzQzs7SUFDdEMsOENBQTZCOztJQUM3QiwrQ0FBOEI7O0lBQzlCLGdEQUErQjs7SUFDL0IsbURBQWtDOztJQUNsQywyQ0FBMkI7O0lBQzNCLGtDQUFlOztJQUNmLG9DQUFvQzs7SUFDcEMsbUNBQWtCOztJQUNsQixvQ0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBMaWdodFVzZXJSZXByZXNlbnRhdGlvbiwgUHJvY2Vzc0luc3RhbmNlUmVwcmVzZW50YXRpb24sIFJlc3RWYXJpYWJsZSB9IGZyb20gJ0BhbGZyZXNjby9qcy1hcGknO1xuXG5leHBvcnQgY2xhc3MgUHJvY2Vzc0luc3RhbmNlIGltcGxlbWVudHMgUHJvY2Vzc0luc3RhbmNlUmVwcmVzZW50YXRpb24ge1xuXG4gICAgYnVzaW5lc3NLZXk/OiBzdHJpbmc7XG4gICAgZW5kZWQ/OiBEYXRlO1xuICAgIGdyYXBoaWNhbE5vdGF0aW9uRGVmaW5lZD86IGJvb2xlYW47XG4gICAgaWQ/OiBzdHJpbmc7XG4gICAgbmFtZT86IHN0cmluZztcbiAgICBwcm9jZXNzRGVmaW5pdGlvbkNhdGVnb3J5Pzogc3RyaW5nO1xuICAgIHByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkPzogc3RyaW5nO1xuICAgIHByb2Nlc3NEZWZpbml0aW9uRGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gICAgcHJvY2Vzc0RlZmluaXRpb25JZD86IHN0cmluZztcbiAgICBwcm9jZXNzRGVmaW5pdGlvbktleT86IHN0cmluZztcbiAgICBwcm9jZXNzRGVmaW5pdGlvbk5hbWU/OiBzdHJpbmc7XG4gICAgcHJvY2Vzc0RlZmluaXRpb25WZXJzaW9uPzogbnVtYmVyO1xuICAgIHN0YXJ0Rm9ybURlZmluZWQ/OiBib29sZWFuO1xuICAgIHN0YXJ0ZWQ/OiBEYXRlO1xuICAgIHN0YXJ0ZWRCeT86IExpZ2h0VXNlclJlcHJlc2VudGF0aW9uO1xuICAgIHRlbmFudElkPzogc3RyaW5nO1xuICAgIHZhcmlhYmxlcz86IFJlc3RWYXJpYWJsZVtdO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT86IGFueSkge1xuICAgICAgICB0aGlzLmJ1c2luZXNzS2V5ID0gZGF0YSAmJiBkYXRhLmJ1c2luZXNzS2V5ICE9PSB1bmRlZmluZWQgPyBkYXRhLmJ1c2luZXNzS2V5IDogbnVsbDtcbiAgICAgICAgdGhpcy5lbmRlZCA9IGRhdGEgJiYgZGF0YS5lbmRlZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5lbmRlZCA6IG51bGw7XG4gICAgICAgIHRoaXMuZ3JhcGhpY2FsTm90YXRpb25EZWZpbmVkID0gZGF0YSAmJiBkYXRhLmdyYXBoaWNhbE5vdGF0aW9uRGVmaW5lZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5ncmFwaGljYWxOb3RhdGlvbkRlZmluZWQgOiBudWxsO1xuICAgICAgICB0aGlzLmlkID0gZGF0YSAmJiBkYXRhLmlkICE9PSB1bmRlZmluZWQgPyBkYXRhLmlkIDogbnVsbDtcbiAgICAgICAgdGhpcy5uYW1lID0gZGF0YSAmJiBkYXRhLm5hbWUgIT09IHVuZGVmaW5lZCA/IGRhdGEubmFtZSA6IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25DYXRlZ29yeSA9IGRhdGEgJiYgZGF0YS5wcm9jZXNzRGVmaW5pdGlvbkNhdGVnb3J5ICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uQ2F0ZWdvcnkgOiBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uRGVwbG95bWVudElkIDogbnVsbDtcbiAgICAgICAgdGhpcy5wcm9jZXNzRGVmaW5pdGlvbkRlc2NyaXB0aW9uID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uRGVzY3JpcHRpb24gIT09IHVuZGVmaW5lZCA/IGRhdGEucHJvY2Vzc0RlZmluaXRpb25EZXNjcmlwdGlvbiA6IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25JZCA9IGRhdGEgJiYgZGF0YS5wcm9jZXNzRGVmaW5pdGlvbklkICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uSWQgOiBudWxsO1xuICAgICAgICB0aGlzLnByb2Nlc3NEZWZpbml0aW9uS2V5ID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uS2V5ICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uS2V5IDogbnVsbDtcbiAgICAgICAgdGhpcy5wcm9jZXNzRGVmaW5pdGlvbk5hbWUgPSBkYXRhICYmIGRhdGEucHJvY2Vzc0RlZmluaXRpb25OYW1lICE9PSB1bmRlZmluZWQgPyBkYXRhLnByb2Nlc3NEZWZpbml0aW9uTmFtZSA6IG51bGw7XG4gICAgICAgIHRoaXMucHJvY2Vzc0RlZmluaXRpb25WZXJzaW9uID0gZGF0YSAmJiBkYXRhLnByb2Nlc3NEZWZpbml0aW9uVmVyc2lvbiAhPT0gdW5kZWZpbmVkID8gZGF0YS5wcm9jZXNzRGVmaW5pdGlvblZlcnNpb24gOiBudWxsO1xuICAgICAgICB0aGlzLnN0YXJ0Rm9ybURlZmluZWQgPSBkYXRhICYmIGRhdGEuc3RhcnRGb3JtRGVmaW5lZCAhPT0gdW5kZWZpbmVkID8gZGF0YS5zdGFydEZvcm1EZWZpbmVkIDogbnVsbDtcbiAgICAgICAgdGhpcy5zdGFydGVkID0gZGF0YSAmJiBkYXRhLnN0YXJ0ZWQgIT09IHVuZGVmaW5lZCA/IGRhdGEuc3RhcnRlZCA6IG51bGw7XG4gICAgICAgIHRoaXMuc3RhcnRlZEJ5ID0gZGF0YSAmJiBkYXRhLnN0YXJ0ZWRCeSAhPT0gdW5kZWZpbmVkID8gZGF0YS5zdGFydGVkQnkgOiBudWxsO1xuICAgICAgICB0aGlzLnRlbmFudElkID0gZGF0YSAmJiBkYXRhLnRlbmFudElkICE9PSB1bmRlZmluZWQgPyBkYXRhLnRlbmFudElkIDogbnVsbDtcbiAgICAgICAgdGhpcy52YXJpYWJsZXMgPSBkYXRhICYmIGRhdGEudmFyaWFibGVzICE9PSB1bmRlZmluZWQgPyBkYXRhLnZhcmlhYmxlcyA6IG51bGw7XG4gICAgfVxuXG59XG4iXX0=