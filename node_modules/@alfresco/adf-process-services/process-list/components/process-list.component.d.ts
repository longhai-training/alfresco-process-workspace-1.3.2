/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DataTableSchema, DataRowEvent, DataTableAdapter, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective } from '@alfresco/adf-core';
import { AppConfigService, PaginatedComponent, PaginationModel, UserPreferencesService } from '@alfresco/adf-core';
import { AfterContentInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';
import { ProcessService } from '../services/process.service';
import { BehaviorSubject } from 'rxjs';
import { ProcessListModel } from '../models/process-list.model';
export declare class ProcessInstanceListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {
    private processService;
    private userPreferences;
    static PRESET_KEY: string;
    FORMAT_DATE: string;
    customEmptyContent: CustomEmptyContentTemplateDirective;
    customLoadingContent: CustomLoadingContentTemplateDirective;
    /** The id of the app. */
    appId: number;
    /** The Definition Id of the process. */
    processDefinitionId: string;
    /** The id of the process instance. */
    processInstanceId: number | string;
    /** Defines the state of the processes. Possible values are `running`, `completed` and `all` */
    state: string;
    /** Defines the sort ordering of the list. Possible values are `created-desc`, `created-asc`,
     * `ended-desc`, `ended-asc`.
     */
    sort: string;
    /** The page number of the processes to fetch. */
    page: number;
    /** The number of processes to fetch in each page. */
    size: number;
    /** Data source to define the datatable. */
    data: DataTableAdapter;
    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row */
    multiselect: boolean;
    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,
     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for
     * multiple rows.
     */
    selectionMode: string;
    /** Toggles default selection of the first row */
    selectFirstRow: boolean;
    /** Emitted when a row in the process list is clicked. */
    rowClick: EventEmitter<string>;
    /** Emitted when the list of process instances has been loaded successfully from the server. */
    success: EventEmitter<ProcessListModel>;
    /** Emitted when an error occurs while loading the list of process instances from the server. */
    error: EventEmitter<any>;
    requestNode: ProcessFilterParamRepresentationModel;
    currentInstanceId: string;
    isLoading: boolean;
    rows: any[];
    sorting: any[];
    pagination: BehaviorSubject<PaginationModel>;
    constructor(processService: ProcessService, userPreferences: UserPreferencesService, appConfig: AppConfigService);
    ngAfterContentInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private isSortChanged;
    private isPropertyChanged;
    reload(): void;
    private load;
    /**
     * Select the first instance of a list if present
     */
    selectFirst(): void;
    /**
     * Return the current id
     */
    getCurrentId(): string;
    /**
     * Check if the list is empty
     */
    isListEmpty(): boolean;
    /**
     * Emit the event rowClick passing the current task id when the row is clicked
     * @param event
     */
    onRowClick(event: DataRowEvent): void;
    /**
     * Emit the event rowClick passing the current task id when pressed the Enter key on the selected row
     * @param event
     */
    onRowKeyUp(event: CustomEvent): void;
    /**
     * Optimize name field
     * @param instances
     */
    private optimizeProcessDetails;
    getProcessNameOrDescription(processInstance: any, dateFormat: any): string;
    getFormatDate(value: any, format: string): string;
    private createRequestNode;
    updatePagination(params: PaginationModel): void;
    currentPage(skipCount: number, maxItems: number): number;
}
