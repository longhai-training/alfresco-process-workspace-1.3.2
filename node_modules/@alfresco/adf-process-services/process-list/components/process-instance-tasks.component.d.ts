/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { LogService } from '@alfresco/adf-core';
import { EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { MatDialog } from '@angular/material';
import { Observable } from 'rxjs';
import { TaskDetailsEvent, TaskDetailsModel } from '../../task-list';
import { ProcessInstance } from '../models/process-instance.model';
import { ProcessService } from './../services/process.service';
export declare class ProcessInstanceTasksComponent implements OnInit, OnChanges {
    private activitiProcess;
    private logService;
    private dialog;
    /** (**required**) The ID of the process instance to display tasks for. */
    processInstanceDetails: ProcessInstance;
    /** Toggles whether to show a refresh button next to the list of tasks to allow
     * it to be updated from the server.
     */
    showRefreshButton: boolean;
    /** Emitted when an error occurs. */
    error: EventEmitter<any>;
    activeTasks: TaskDetailsModel[];
    completedTasks: TaskDetailsModel[];
    private taskObserver;
    private completedTaskObserver;
    task$: Observable<TaskDetailsModel>;
    completedTask$: Observable<TaskDetailsModel>;
    message: string;
    processId: string;
    startDialog: any;
    taskDetails: any;
    /** Emitted when a task is clicked. */
    taskClick: EventEmitter<TaskDetailsEvent>;
    constructor(activitiProcess: ProcessService, logService: LogService, dialog: MatDialog);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    load(processInstanceId: string): void;
    loadActive(processInstanceId: string): void;
    loadCompleted(processInstanceId: string): void;
    hasStartFormDefined(): boolean;
    getUserFullName(user: any): string;
    getFormatDate(value: any, format: string): string;
    clickTask($event: any, task: TaskDetailsModel): void;
    clickStartTask(): void;
    showStartDialog(): void;
    closeStartDialog(): void;
    onRefreshClicked(): void;
    onFormContentClick(): void;
}
