/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { LogService } from '@alfresco/adf-core';
import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { TaskDetailsEvent } from '../../task-list';
import { ProcessInstance } from '../models/process-instance.model';
import { ProcessService } from './../services/process.service';
import { ProcessInstanceHeaderComponent } from './process-instance-header.component';
import { ProcessInstanceTasksComponent } from './process-instance-tasks.component';
export declare class ProcessInstanceDetailsComponent implements OnChanges {
    private activitiProcess;
    private logService;
    /** (required) The numeric ID of the process instance to display. */
    processInstanceId: string;
    processInstanceHeader: ProcessInstanceHeaderComponent;
    tasksList: ProcessInstanceTasksComponent;
    /** Toggles whether to show or hide the title. */
    showTitle: boolean;
    /** Toggles whether to show or hide the refresh button. */
    showRefreshButton: boolean;
    /** Emitted when the current process is cancelled by the user from within the component. */
    processCancelled: EventEmitter<any>;
    /** Emitted when an error occurs. */
    error: EventEmitter<any>;
    /** Emitted when a task is clicked. */
    taskClick: EventEmitter<TaskDetailsEvent>;
    processInstanceDetails: ProcessInstance;
    /** Emitted when the "show diagram" button is clicked. */
    showProcessDiagram: EventEmitter<any>;
    /**
     * Constructor
     * @param translate Translation service
     * @param activitiProcess   Process service
     */
    constructor(activitiProcess: ProcessService, logService: LogService);
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * Reset the task detail
     */
    reset(): void;
    load(processId: string): void;
    isRunning(): boolean;
    cancelProcess(): void;
    onTaskClicked(event: TaskDetailsEvent): void;
    getProcessNameOrDescription(dateFormat: any): string;
    getFormatDate(value: any, format: string): string;
    onShowProcessDiagram(processInstanceId: any): void;
}
