/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ContentService, EmptyListComponent, ThumbnailService } from '@alfresco/adf-core';
import { AfterContentInit, EventEmitter, NgZone, OnChanges, SimpleChanges } from '@angular/core';
import { ProcessContentService } from '@alfresco/adf-core';
export declare class ProcessAttachmentListComponent implements OnChanges, AfterContentInit {
    private activitiContentService;
    private contentService;
    private thumbnailService;
    private ngZone;
    emptyTemplate: EmptyListComponent;
    /** (**required**) The ID of the process instance to display. */
    processInstanceId: string;
    /** Disable/Enable read-only mode for attachment list. */
    disabled: boolean;
    /** Emitted when the attachment is double-clicked or the
     * view option is selected from the context menu by the user from
     * within the component. Returns a Blob representing the object
     * that was clicked.
     */
    attachmentClick: EventEmitter<{}>;
    /** Emitted when the attachment list has fetched all the attachments.
     * Returns a list of attachments.
     */
    success: EventEmitter<{}>;
    /** Emitted when the attachment list is not able to fetch the attachments
     * (eg, following a network error).
     */
    error: EventEmitter<any>;
    hasCustomTemplate: boolean;
    attachments: any[];
    isLoading: boolean;
    constructor(activitiContentService: ProcessContentService, contentService: ContentService, thumbnailService: ThumbnailService, ngZone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterContentInit(): void;
    reset(): void;
    reload(): void;
    hasCustomEmptyTemplate(): boolean;
    add(content: any): void;
    private loadAttachmentsByProcessInstanceId;
    private deleteAttachmentById;
    isEmpty(): boolean;
    onShowRowActionsMenu(event: any): void;
    onExecuteRowAction(event: any): void;
    openContent(event: any): void;
    emitDocumentContent(content: any): void;
    downloadContent(content: any): void;
    isDisabled(): boolean;
}
