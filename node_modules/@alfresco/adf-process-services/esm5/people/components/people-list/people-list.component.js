/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DataTableComponent } from '@alfresco/adf-core';
import { DataColumnListComponent } from '@alfresco/adf-core';
import { Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { UserEventModel } from '../../../task-list/models/user-event.model';
var PeopleListComponent = /** @class */ (function () {
    function PeopleListComponent() {
        /**
         * Toggles whether or not actions should be visible, i.e. the 'Three-Dots' menu.
         */
        this.actions = false;
        /**
         * Emitted when the user clicks a row in the people list.
         */
        this.clickRow = new EventEmitter();
        /**
         * Emitted when the user clicks in the 'Three Dots' drop down menu for a row.
         */
        this.clickAction = new EventEmitter();
    }
    /**
     * @return {?}
     */
    PeopleListComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.peopleDataTable.columnList = this.columnList;
    };
    /**
     * @return {?}
     */
    PeopleListComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PeopleListComponent.prototype.selectUser = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.user = event.value.obj;
        this.clickRow.emit(this.user);
    };
    /**
     * @return {?}
     */
    PeopleListComponent.prototype.hasActions = /**
     * @return {?}
     */
    function () {
        return this.actions;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PeopleListComponent.prototype.onShowRowActionsMenu = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var removeAction = {
            title: 'Remove',
            name: 'remove'
        };
        event.value.actions = [
            removeAction
        ];
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PeopleListComponent.prototype.onExecuteRowAction = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var args = event.value;
        /** @type {?} */
        var action = args.action;
        this.clickAction.emit(new UserEventModel({ type: action.name, value: args.row.obj }));
    };
    PeopleListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-people-list',
                    template: "<adf-datatable\n    #dataTable\n    class=\"adf-task-people-list\"\n    [rows]=\"users\"\n    [actions]=\"hasActions()\"\n    [showHeader]=\"false\"\n    (rowClick)=\"selectUser($event)\"\n    (rowDblClick)=\"selectUser($event)\"\n    (showRowActionsMenu)=\"onShowRowActionsMenu($event)\"\n    (executeRowAction)=\"onExecuteRowAction($event)\">\n</adf-datatable>\n",
                    styles: [""]
                }] }
    ];
    PeopleListComponent.propDecorators = {
        columnList: [{ type: ContentChild, args: [DataColumnListComponent,] }],
        peopleDataTable: [{ type: ViewChild, args: ['dataTable',] }],
        users: [{ type: Input }],
        actions: [{ type: Input }],
        clickRow: [{ type: Output }],
        clickAction: [{ type: Output }]
    };
    return PeopleListComponent;
}());
export { PeopleListComponent };
if (false) {
    /** @type {?} */
    PeopleListComponent.prototype.columnList;
    /** @type {?} */
    PeopleListComponent.prototype.peopleDataTable;
    /**
     * The array of user data used to populate the people list.
     * @type {?}
     */
    PeopleListComponent.prototype.users;
    /**
     * Toggles whether or not actions should be visible, i.e. the 'Three-Dots' menu.
     * @type {?}
     */
    PeopleListComponent.prototype.actions;
    /**
     * Emitted when the user clicks a row in the people list.
     * @type {?}
     */
    PeopleListComponent.prototype.clickRow;
    /**
     * Emitted when the user clicks in the 'Three Dots' drop down menu for a row.
     * @type {?}
     */
    PeopleListComponent.prototype.clickAction;
    /** @type {?} */
    PeopleListComponent.prototype.user;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVvcGxlLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1wcm9jZXNzLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsicGVvcGxlL2NvbXBvbmVudHMvcGVvcGxlLWxpc3QvcGVvcGxlLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3hELE9BQU8sRUFBRSx1QkFBdUIsRUFBb0IsTUFBTSxvQkFBb0IsQ0FBQztBQUMvRSxPQUFPLEVBQW1DLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pJLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUU1RTtJQUFBOzs7O1FBbUJJLFlBQU8sR0FBWSxLQUFLLENBQUM7Ozs7UUFJekIsYUFBUSxHQUFtQyxJQUFJLFlBQVksRUFBb0IsQ0FBQzs7OztRQUloRixnQkFBVyxHQUFpQyxJQUFJLFlBQVksRUFBa0IsQ0FBQztJQXFDbkYsQ0FBQzs7OztJQWpDRyxnREFBa0I7OztJQUFsQjtRQUNJLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDdEQsQ0FBQzs7OztJQUVELDZDQUFlOzs7SUFBZjtJQUNBLENBQUM7Ozs7O0lBRUQsd0NBQVU7Ozs7SUFBVixVQUFXLEtBQVU7UUFDakIsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUM1QixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7OztJQUVELHdDQUFVOzs7SUFBVjtRQUNJLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDOzs7OztJQUVELGtEQUFvQjs7OztJQUFwQixVQUFxQixLQUFVOztZQUVyQixZQUFZLEdBQUc7WUFDakIsS0FBSyxFQUFFLFFBQVE7WUFDZixJQUFJLEVBQUUsUUFBUTtTQUNqQjtRQUVELEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHO1lBQ2xCLFlBQVk7U0FDZixDQUFDO0lBQ04sQ0FBQzs7Ozs7SUFFRCxnREFBa0I7Ozs7SUFBbEIsVUFBbUIsS0FBVTs7WUFDbkIsSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLOztZQUNsQixNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU07UUFDMUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxjQUFjLENBQUMsRUFBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEYsQ0FBQzs7Z0JBL0RKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQix3WEFBMkM7O2lCQUU5Qzs7OzZCQUlJLFlBQVksU0FBQyx1QkFBdUI7a0NBRXBDLFNBQVMsU0FBQyxXQUFXO3dCQUlyQixLQUFLOzBCQUlMLEtBQUs7MkJBSUwsTUFBTTs4QkFJTixNQUFNOztJQXNDWCwwQkFBQztDQUFBLEFBaEVELElBZ0VDO1NBMURZLG1CQUFtQjs7O0lBRTVCLHlDQUEyRTs7SUFFM0UsOENBQ29DOzs7OztJQUdwQyxvQ0FDMEI7Ozs7O0lBRzFCLHNDQUN5Qjs7Ozs7SUFHekIsdUNBQ2dGOzs7OztJQUdoRiwwQ0FDK0U7O0lBRS9FLG1DQUF1QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IERhdGFUYWJsZUNvbXBvbmVudCB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBEYXRhQ29sdW1uTGlzdENvbXBvbmVudCwgVXNlclByb2Nlc3NNb2RlbCB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXJFdmVudE1vZGVsIH0gZnJvbSAnLi4vLi4vLi4vdGFzay1saXN0L21vZGVscy91c2VyLWV2ZW50Lm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtcGVvcGxlLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9wZW9wbGUtbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vcGVvcGxlLWxpc3QuY29tcG9uZW50LnNjc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIFBlb3BsZUxpc3RDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBBZnRlckNvbnRlbnRJbml0IHtcblxuICAgIEBDb250ZW50Q2hpbGQoRGF0YUNvbHVtbkxpc3RDb21wb25lbnQpIGNvbHVtbkxpc3Q6IERhdGFDb2x1bW5MaXN0Q29tcG9uZW50O1xuXG4gICAgQFZpZXdDaGlsZCgnZGF0YVRhYmxlJylcbiAgICBwZW9wbGVEYXRhVGFibGU6IERhdGFUYWJsZUNvbXBvbmVudDtcblxuICAgIC8qKiBUaGUgYXJyYXkgb2YgdXNlciBkYXRhIHVzZWQgdG8gcG9wdWxhdGUgdGhlIHBlb3BsZSBsaXN0LiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdXNlcnM6IFVzZXJQcm9jZXNzTW9kZWxbXTtcblxuICAgIC8qKiBUb2dnbGVzIHdoZXRoZXIgb3Igbm90IGFjdGlvbnMgc2hvdWxkIGJlIHZpc2libGUsIGkuZS4gdGhlICdUaHJlZS1Eb3RzJyBtZW51LiAqL1xuICAgIEBJbnB1dCgpXG4gICAgYWN0aW9uczogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgLyoqIEVtaXR0ZWQgd2hlbiB0aGUgdXNlciBjbGlja3MgYSByb3cgaW4gdGhlIHBlb3BsZSBsaXN0LiAqL1xuICAgIEBPdXRwdXQoKVxuICAgIGNsaWNrUm93OiBFdmVudEVtaXR0ZXI8VXNlclByb2Nlc3NNb2RlbD4gPSBuZXcgRXZlbnRFbWl0dGVyPFVzZXJQcm9jZXNzTW9kZWw+KCk7XG5cbiAgICAvKiogRW1pdHRlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBpbiB0aGUgJ1RocmVlIERvdHMnIGRyb3AgZG93biBtZW51IGZvciBhIHJvdy4gKi9cbiAgICBAT3V0cHV0KClcbiAgICBjbGlja0FjdGlvbjogRXZlbnRFbWl0dGVyPFVzZXJFdmVudE1vZGVsPiA9IG5ldyBFdmVudEVtaXR0ZXI8VXNlckV2ZW50TW9kZWw+KCk7XG5cbiAgICB1c2VyOiBVc2VyUHJvY2Vzc01vZGVsO1xuXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgICAgICB0aGlzLnBlb3BsZURhdGFUYWJsZS5jb2x1bW5MaXN0ID0gdGhpcy5jb2x1bW5MaXN0O1xuICAgIH1cblxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB9XG5cbiAgICBzZWxlY3RVc2VyKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgdGhpcy51c2VyID0gZXZlbnQudmFsdWUub2JqO1xuICAgICAgICB0aGlzLmNsaWNrUm93LmVtaXQodGhpcy51c2VyKTtcbiAgICB9XG5cbiAgICBoYXNBY3Rpb25zKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hY3Rpb25zO1xuICAgIH1cblxuICAgIG9uU2hvd1Jvd0FjdGlvbnNNZW51KGV2ZW50OiBhbnkpIHtcblxuICAgICAgICBjb25zdCByZW1vdmVBY3Rpb24gPSB7XG4gICAgICAgICAgICB0aXRsZTogJ1JlbW92ZScsXG4gICAgICAgICAgICBuYW1lOiAncmVtb3ZlJ1xuICAgICAgICB9O1xuXG4gICAgICAgIGV2ZW50LnZhbHVlLmFjdGlvbnMgPSBbXG4gICAgICAgICAgICByZW1vdmVBY3Rpb25cbiAgICAgICAgXTtcbiAgICB9XG5cbiAgICBvbkV4ZWN1dGVSb3dBY3Rpb24oZXZlbnQ6IGFueSkge1xuICAgICAgICBjb25zdCBhcmdzID0gZXZlbnQudmFsdWU7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IGFyZ3MuYWN0aW9uO1xuICAgICAgICB0aGlzLmNsaWNrQWN0aW9uLmVtaXQobmV3IFVzZXJFdmVudE1vZGVsKHt0eXBlOiBhY3Rpb24ubmFtZSwgdmFsdWU6IGFyZ3Mucm93Lm9ian0pKTtcbiAgICB9XG59XG4iXX0=