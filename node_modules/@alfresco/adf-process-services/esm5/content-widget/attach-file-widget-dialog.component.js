/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material';
import { ExternalAlfrescoApiService, AlfrescoApiService, AuthenticationService, LoginDialogPanelComponent, SitesService, SearchService } from '@alfresco/adf-core';
import { DocumentListService, ContentNodeSelectorService } from '@alfresco/adf-content-services';
var AttachFileWidgetDialogComponent = /** @class */ (function () {
    function AttachFileWidgetDialogComponent(data, externalApiService) {
        this.data = data;
        this.externalApiService = externalApiService;
        ((/** @type {?} */ (externalApiService))).init(data.ecmHost, data.context);
        this.buttonActionName = data.actionName ? "ATTACH-FILE.ACTIONS." + data.actionName.toUpperCase() : 'ATTACH-FILE.ACTIONS.CHOOSE';
    }
    /**
     * @return {?}
     */
    AttachFileWidgetDialogComponent.prototype.isLoggedIn = /**
     * @return {?}
     */
    function () {
        return this.externalApiService.getInstance().isLoggedIn();
    };
    /**
     * @return {?}
     */
    AttachFileWidgetDialogComponent.prototype.performLogin = /**
     * @return {?}
     */
    function () {
        this.loginPanel.submitForm();
    };
    /**
     * @return {?}
     */
    AttachFileWidgetDialogComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.data.selected.complete();
    };
    /**
     * @param {?} nodeList
     * @return {?}
     */
    AttachFileWidgetDialogComponent.prototype.onSelect = /**
     * @param {?} nodeList
     * @return {?}
     */
    function (nodeList) {
        if (nodeList && nodeList[0].isFile) {
            this.chosenNode = nodeList;
        }
        else {
            this.chosenNode = null;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    AttachFileWidgetDialogComponent.prototype.onClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.data.selected.next(this.chosenNode);
        this.data.selected.complete();
    };
    AttachFileWidgetDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-attach-file-widget-dialog',
                    template: "<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">{{data?.title}}\n</header>\n\n<mat-dialog-content class=\"adf-login-dialog-content\">\n    <adf-login-dialog-panel id=\"attach-file-login-panel\" #adfLoginPanel *ngIf=\"!isLoggedIn()\">\n    </adf-login-dialog-panel>\n    <adf-content-node-selector-panel *ngIf=\"isLoggedIn()\"\n                                     id=\"attach-file-content-node\"\n                                     [isSelectionValid]=\"data?.isSelectionValid\"\n                                     (select)=\"onSelect($event)\">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"attach-file-dialog-actions-cancel\">{{ 'ATTACH-FILE.ACTIONS.CANCEL' | translate }}\n    </button>\n\n    <button *ngIf=\"!isLoggedIn()\"\n        mat-button\n        (click)=\"performLogin()\"\n        data-automation-id=\"attach-file-dialog-actions-login\">{{ 'ATTACH-FILE.ACTIONS.LOGIN' | translate }}\n    </button>\n\n    <button *ngIf=\"isLoggedIn()\"\n        mat-button\n        [disabled]=\"!chosenNode\"\n        class=\"adf-choose-action\"\n        (click)=\"onClick($event)\"\n        data-automation-id=\"attach-file-dialog-actions-choose\">{{ buttonActionName | translate }}\n    </button>\n\n</mat-dialog-actions>\n",
                    encapsulation: ViewEncapsulation.None,
                    providers: [AuthenticationService,
                        DocumentListService,
                        SitesService,
                        ContentNodeSelectorService,
                        SearchService,
                        { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService }],
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    AttachFileWidgetDialogComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] },
        { type: AlfrescoApiService }
    ]; };
    AttachFileWidgetDialogComponent.propDecorators = {
        loginPanel: [{ type: ViewChild, args: ['adfLoginPanel',] }]
    };
    return AttachFileWidgetDialogComponent;
}());
export { AttachFileWidgetDialogComponent };
if (false) {
    /** @type {?} */
    AttachFileWidgetDialogComponent.prototype.loginPanel;
    /** @type {?} */
    AttachFileWidgetDialogComponent.prototype.chosenNode;
    /** @type {?} */
    AttachFileWidgetDialogComponent.prototype.buttonActionName;
    /** @type {?} */
    AttachFileWidgetDialogComponent.prototype.data;
    /**
     * @type {?}
     * @private
     */
    AttachFileWidgetDialogComponent.prototype.externalApiService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0YWNoLWZpbGUtd2lkZ2V0LWRpYWxvZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLXByb2Nlc3Mtc2VydmljZXMvIiwic291cmNlcyI6WyJjb250ZW50LXdpZGdldC9hdHRhY2gtZmlsZS13aWRnZXQtZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxrQkFBa0IsRUFBRSxxQkFBcUIsRUFBRSx5QkFBeUIsRUFBRSxZQUFZLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDbkssT0FBTyxFQUFFLG1CQUFtQixFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFJakc7SUFvQkkseUNBQTRDLElBQXlDLEVBQ2pFLGtCQUFzQztRQURkLFNBQUksR0FBSixJQUFJLENBQXFDO1FBQ2pFLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEQsQ0FBQyxtQkFBTSxrQkFBa0IsRUFBQSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyx5QkFBdUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUksQ0FBQyxDQUFDLENBQUMsNEJBQTRCLENBQUM7SUFDcEksQ0FBQzs7OztJQUVELG9EQUFVOzs7SUFBVjtRQUNJLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLFdBQVcsRUFBRSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzlELENBQUM7Ozs7SUFFRCxzREFBWTs7O0lBQVo7UUFDSSxJQUFJLENBQUMsVUFBVSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ2pDLENBQUM7Ozs7SUFFRCwrQ0FBSzs7O0lBQUw7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNsQyxDQUFDOzs7OztJQUVELGtEQUFROzs7O0lBQVIsVUFBUyxRQUFnQjtRQUNyQixJQUFJLFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFO1lBQ2hDLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1NBQzlCO2FBQU07WUFDSCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUMxQjtJQUNMLENBQUM7Ozs7O0lBRUQsaURBQU87Ozs7SUFBUCxVQUFRLEtBQVU7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ2xDLENBQUM7O2dCQWpESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLCtCQUErQjtvQkFDekMsNjRDQUF5RDtvQkFFekQsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLFNBQVMsRUFBRSxDQUFFLHFCQUFxQjt3QkFDckIsbUJBQW1CO3dCQUNuQixZQUFZO3dCQUNaLDBCQUEwQjt3QkFDMUIsYUFBYTt3QkFDYixFQUFFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxRQUFRLEVBQUUsMEJBQTBCLEVBQUMsQ0FBRTs7aUJBQ3RGOzs7O2dEQVNnQixNQUFNLFNBQUMsZUFBZTtnQkF6QkYsa0JBQWtCOzs7NkJBbUJsRCxTQUFTLFNBQUMsZUFBZTs7SUFxQzlCLHNDQUFDO0NBQUEsQUFuREQsSUFtREM7U0F2Q1ksK0JBQStCOzs7SUFFeEMscURBQ3NDOztJQUV0QyxxREFBbUI7O0lBQ25CLDJEQUFpQjs7SUFFTCwrQ0FBeUU7Ozs7O0lBQ3pFLDZEQUE4QyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBWaWV3RW5jYXBzdWxhdGlvbiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBFeHRlcm5hbEFsZnJlc2NvQXBpU2VydmljZSwgQWxmcmVzY29BcGlTZXJ2aWNlLCBBdXRoZW50aWNhdGlvblNlcnZpY2UsIExvZ2luRGlhbG9nUGFuZWxDb21wb25lbnQsIFNpdGVzU2VydmljZSwgU2VhcmNoU2VydmljZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBEb2N1bWVudExpc3RTZXJ2aWNlLCBDb250ZW50Tm9kZVNlbGVjdG9yU2VydmljZSB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcyc7XG5pbXBvcnQgeyBBdHRhY2hGaWxlV2lkZ2V0RGlhbG9nQ29tcG9uZW50RGF0YSB9IGZyb20gJy4vYXR0YWNoLWZpbGUtd2lkZ2V0LWRpYWxvZy1jb21wb25lbnQuaW50ZXJmYWNlJztcbmltcG9ydCB7IE5vZGUgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtYXR0YWNoLWZpbGUtd2lkZ2V0LWRpYWxvZycsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2F0dGFjaC1maWxlLXdpZGdldC1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2F0dGFjaC1maWxlLXdpZGdldC1kaWFsb2cuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIHByb3ZpZGVyczogWyBBdXRoZW50aWNhdGlvblNlcnZpY2UsXG4gICAgICAgICAgICAgICAgIERvY3VtZW50TGlzdFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgIFNpdGVzU2VydmljZSxcbiAgICAgICAgICAgICAgICAgQ29udGVudE5vZGVTZWxlY3RvclNlcnZpY2UsXG4gICAgICAgICAgICAgICAgIFNlYXJjaFNlcnZpY2UsXG4gICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogQWxmcmVzY29BcGlTZXJ2aWNlLCB1c2VDbGFzczogRXh0ZXJuYWxBbGZyZXNjb0FwaVNlcnZpY2V9IF1cbn0pXG5leHBvcnQgY2xhc3MgQXR0YWNoRmlsZVdpZGdldERpYWxvZ0NvbXBvbmVudCB7XG5cbiAgICBAVmlld0NoaWxkKCdhZGZMb2dpblBhbmVsJylcbiAgICBsb2dpblBhbmVsOiBMb2dpbkRpYWxvZ1BhbmVsQ29tcG9uZW50O1xuXG4gICAgY2hvc2VuTm9kZTogTm9kZVtdO1xuICAgIGJ1dHRvbkFjdGlvbk5hbWU7XG5cbiAgICBjb25zdHJ1Y3RvcihASW5qZWN0KE1BVF9ESUFMT0dfREFUQSkgcHVibGljIGRhdGE6IEF0dGFjaEZpbGVXaWRnZXREaWFsb2dDb21wb25lbnREYXRhLFxuICAgICAgICAgICAgICAgIHByaXZhdGUgZXh0ZXJuYWxBcGlTZXJ2aWNlOiBBbGZyZXNjb0FwaVNlcnZpY2UpIHtcbiAgICAgICAgKDxhbnk+IGV4dGVybmFsQXBpU2VydmljZSkuaW5pdChkYXRhLmVjbUhvc3QsIGRhdGEuY29udGV4dCk7XG4gICAgICAgIHRoaXMuYnV0dG9uQWN0aW9uTmFtZSA9IGRhdGEuYWN0aW9uTmFtZSA/IGBBVFRBQ0gtRklMRS5BQ1RJT05TLiR7ZGF0YS5hY3Rpb25OYW1lLnRvVXBwZXJDYXNlKCl9YCA6ICdBVFRBQ0gtRklMRS5BQ1RJT05TLkNIT09TRSc7XG4gICAgfVxuXG4gICAgaXNMb2dnZWRJbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXh0ZXJuYWxBcGlTZXJ2aWNlLmdldEluc3RhbmNlKCkuaXNMb2dnZWRJbigpO1xuICAgIH1cblxuICAgIHBlcmZvcm1Mb2dpbigpIHtcbiAgICAgICAgdGhpcy5sb2dpblBhbmVsLnN1Ym1pdEZvcm0oKTtcbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdGVkLmNvbXBsZXRlKCk7XG4gICAgfVxuXG4gICAgb25TZWxlY3Qobm9kZUxpc3Q6IE5vZGVbXSkge1xuICAgICAgICBpZiAobm9kZUxpc3QgJiYgbm9kZUxpc3RbMF0uaXNGaWxlKSB7XG4gICAgICAgICAgICB0aGlzLmNob3Nlbk5vZGUgPSBub2RlTGlzdDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuY2hvc2VuTm9kZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbkNsaWNrKGV2ZW50OiBhbnkpIHtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdGVkLm5leHQodGhpcy5jaG9zZW5Ob2RlKTtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdGVkLmNvbXBsZXRlKCk7XG4gICAgfVxuXG59XG4iXX0=