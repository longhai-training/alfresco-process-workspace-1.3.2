/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ContentChild, Directive, TemplateRef } from '@angular/core';
import { TaskDetailsComponent } from './task-details.component';
/**
 * Directive selectors without adf- prefix will be deprecated on 3.0.0
 */
var NoTaskDetailsTemplateDirective = /** @class */ (function () {
    function NoTaskDetailsTemplateDirective(activitiTaskDetails) {
        this.activitiTaskDetails = activitiTaskDetails;
    }
    /**
     * @return {?}
     */
    NoTaskDetailsTemplateDirective.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.activitiTaskDetails.noTaskDetailsTemplateComponent = this.template;
    };
    NoTaskDetailsTemplateDirective.decorators = [
        { type: Directive, args: [{
                    selector: 'adf-no-task-details-template, no-task-details-template'
                },] }
    ];
    /** @nocollapse */
    NoTaskDetailsTemplateDirective.ctorParameters = function () { return [
        { type: TaskDetailsComponent }
    ]; };
    NoTaskDetailsTemplateDirective.propDecorators = {
        template: [{ type: ContentChild, args: [TemplateRef,] }]
    };
    return NoTaskDetailsTemplateDirective;
}());
export { NoTaskDetailsTemplateDirective };
if (false) {
    /** @type {?} */
    NoTaskDetailsTemplateDirective.prototype.template;
    /**
     * @type {?}
     * @private
     */
    NoTaskDetailsTemplateDirective.prototype.activitiTaskDetails;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm8tdGFzay1kZXRhaWwtdGVtcGxhdGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1wcm9jZXNzLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsidGFzay1saXN0L2NvbXBvbmVudHMvbm8tdGFzay1kZXRhaWwtdGVtcGxhdGUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFFSCxZQUFZLEVBQ1osU0FBUyxFQUNULFdBQVcsRUFDZCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQzs7OztBQUtoRTtJQVFJLHdDQUNZLG1CQUF5QztRQUF6Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXNCO0lBQ3JELENBQUM7Ozs7SUFFRCwyREFBa0I7OztJQUFsQjtRQUNJLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyw4QkFBOEIsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQzVFLENBQUM7O2dCQWRKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsd0RBQXdEO2lCQUNyRTs7OztnQkFQUSxvQkFBb0I7OzsyQkFVeEIsWUFBWSxTQUFDLFdBQVc7O0lBVTdCLHFDQUFDO0NBQUEsQUFmRCxJQWVDO1NBWlksOEJBQThCOzs7SUFFdkMsa0RBQ2M7Ozs7O0lBR1YsNkRBQWlEIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHtcbiAgICBBZnRlckNvbnRlbnRJbml0LFxuICAgIENvbnRlbnRDaGlsZCxcbiAgICBEaXJlY3RpdmUsXG4gICAgVGVtcGxhdGVSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUYXNrRGV0YWlsc0NvbXBvbmVudCB9IGZyb20gJy4vdGFzay1kZXRhaWxzLmNvbXBvbmVudCc7XG5cbi8qKlxuICogRGlyZWN0aXZlIHNlbGVjdG9ycyB3aXRob3V0IGFkZi0gcHJlZml4IHdpbGwgYmUgZGVwcmVjYXRlZCBvbiAzLjAuMFxuICovXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ2FkZi1uby10YXNrLWRldGFpbHMtdGVtcGxhdGUsIG5vLXRhc2stZGV0YWlscy10ZW1wbGF0ZSdcbn0pXG5leHBvcnQgY2xhc3MgTm9UYXNrRGV0YWlsc1RlbXBsYXRlRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG5cbiAgICBAQ29udGVudENoaWxkKFRlbXBsYXRlUmVmKVxuICAgIHRlbXBsYXRlOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSBhY3Rpdml0aVRhc2tEZXRhaWxzOiBUYXNrRGV0YWlsc0NvbXBvbmVudCkge1xuICAgIH1cblxuICAgIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcbiAgICAgICAgdGhpcy5hY3Rpdml0aVRhc2tEZXRhaWxzLm5vVGFza0RldGFpbHNUZW1wbGF0ZUNvbXBvbmVudCA9IHRoaXMudGVtcGxhdGU7XG4gICAgfVxufVxuIl19