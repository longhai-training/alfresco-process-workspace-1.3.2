/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { CoreModule } from '@alfresco/adf-core';
import { ProcessCommentsModule } from '../process-comments/process-comments.module';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MaterialModule } from '../material.module';
import { PeopleModule } from '../people/people.module';
import { ContentWidgetModule } from '../content-widget/content-widget.module';
import { ChecklistComponent } from './components/checklist.component';
import { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';
import { StartTaskComponent } from './components/start-task.component';
import { TaskAuditDirective } from './components/task-audit.directive';
import { TaskDetailsComponent } from './components/task-details.component';
import { TaskFiltersComponent } from './components/task-filters.component';
import { TaskHeaderComponent } from './components/task-header.component';
import { TaskListComponent } from './components/task-list.component';
import { TaskStandaloneComponent } from './components/task-standalone.component';
import { AttachFormComponent } from './components/attach-form.component';
import { FormModule } from '../form/form.module';
var TaskListModule = /** @class */ (function () {
    function TaskListModule() {
    }
    TaskListModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FlexLayoutModule,
                        MaterialModule,
                        FormsModule,
                        FormModule,
                        ReactiveFormsModule,
                        CoreModule.forChild(),
                        PeopleModule,
                        ProcessCommentsModule,
                        ContentWidgetModule
                    ],
                    declarations: [
                        NoTaskDetailsTemplateDirective,
                        TaskFiltersComponent,
                        TaskListComponent,
                        TaskDetailsComponent,
                        TaskAuditDirective,
                        ChecklistComponent,
                        TaskHeaderComponent,
                        StartTaskComponent,
                        TaskStandaloneComponent,
                        AttachFormComponent
                    ],
                    exports: [
                        NoTaskDetailsTemplateDirective,
                        TaskFiltersComponent,
                        TaskListComponent,
                        TaskDetailsComponent,
                        TaskAuditDirective,
                        ChecklistComponent,
                        TaskHeaderComponent,
                        StartTaskComponent,
                        TaskStandaloneComponent,
                        AttachFormComponent
                    ]
                },] }
    ];
    return TaskListModule;
}());
export { TaskListModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFzay1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtcHJvY2Vzcy1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbInRhc2stbGlzdC90YXNrLWxpc3QubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUNwRixPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUU5RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNoRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFakQ7SUFBQTtJQXVDQSxDQUFDOztnQkF2Q0EsUUFBUSxTQUFDO29CQUNOLE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLGdCQUFnQjt3QkFDaEIsY0FBYzt3QkFDZCxXQUFXO3dCQUNYLFVBQVU7d0JBQ1YsbUJBQW1CO3dCQUNuQixVQUFVLENBQUMsUUFBUSxFQUFFO3dCQUNyQixZQUFZO3dCQUNaLHFCQUFxQjt3QkFDckIsbUJBQW1CO3FCQUN0QjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1YsOEJBQThCO3dCQUM5QixvQkFBb0I7d0JBQ3BCLGlCQUFpQjt3QkFDakIsb0JBQW9CO3dCQUNwQixrQkFBa0I7d0JBQ2xCLGtCQUFrQjt3QkFDbEIsbUJBQW1CO3dCQUNuQixrQkFBa0I7d0JBQ2xCLHVCQUF1Qjt3QkFDdkIsbUJBQW1CO3FCQUN0QjtvQkFDRCxPQUFPLEVBQUU7d0JBQ0wsOEJBQThCO3dCQUM5QixvQkFBb0I7d0JBQ3BCLGlCQUFpQjt3QkFDakIsb0JBQW9CO3dCQUNwQixrQkFBa0I7d0JBQ2xCLGtCQUFrQjt3QkFDbEIsbUJBQW1CO3dCQUNuQixrQkFBa0I7d0JBQ2xCLHVCQUF1Qjt3QkFDdkIsbUJBQW1CO3FCQUN0QjtpQkFDSjs7SUFFRCxxQkFBQztDQUFBLEFBdkNELElBdUNDO1NBRFksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRmxleExheW91dE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2ZsZXgtbGF5b3V0JztcbmltcG9ydCB7IENvcmVNb2R1bGUgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgUHJvY2Vzc0NvbW1lbnRzTW9kdWxlIH0gZnJvbSAnLi4vcHJvY2Vzcy1jb21tZW50cy9wcm9jZXNzLWNvbW1lbnRzLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgTWF0ZXJpYWxNb2R1bGUgfSBmcm9tICcuLi9tYXRlcmlhbC5tb2R1bGUnO1xuaW1wb3J0IHsgUGVvcGxlTW9kdWxlIH0gZnJvbSAnLi4vcGVvcGxlL3Blb3BsZS5tb2R1bGUnO1xuaW1wb3J0IHsgQ29udGVudFdpZGdldE1vZHVsZSB9IGZyb20gJy4uL2NvbnRlbnQtd2lkZ2V0L2NvbnRlbnQtd2lkZ2V0Lm1vZHVsZSc7XG5cbmltcG9ydCB7IENoZWNrbGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9jaGVja2xpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IE5vVGFza0RldGFpbHNUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy9uby10YXNrLWRldGFpbC10ZW1wbGF0ZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3RhcnRUYXNrQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3N0YXJ0LXRhc2suY29tcG9uZW50JztcbmltcG9ydCB7IFRhc2tBdWRpdERpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWF1ZGl0LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUYXNrRGV0YWlsc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWRldGFpbHMuY29tcG9uZW50JztcbmltcG9ydCB7IFRhc2tGaWx0ZXJzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Rhc2stZmlsdGVycy5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0hlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGFza0xpc3RDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdGFzay1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYXNrU3RhbmRhbG9uZUNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy90YXNrLXN0YW5kYWxvbmUuY29tcG9uZW50JztcbmltcG9ydCB7IEF0dGFjaEZvcm1Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYXR0YWNoLWZvcm0uY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1Nb2R1bGUgfSBmcm9tICcuLi9mb3JtL2Zvcm0ubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgRmxleExheW91dE1vZHVsZSxcbiAgICAgICAgTWF0ZXJpYWxNb2R1bGUsXG4gICAgICAgIEZvcm1zTW9kdWxlLFxuICAgICAgICBGb3JtTW9kdWxlLFxuICAgICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgICBDb3JlTW9kdWxlLmZvckNoaWxkKCksXG4gICAgICAgIFBlb3BsZU1vZHVsZSxcbiAgICAgICAgUHJvY2Vzc0NvbW1lbnRzTW9kdWxlLFxuICAgICAgICBDb250ZW50V2lkZ2V0TW9kdWxlXG4gICAgXSxcbiAgICBkZWNsYXJhdGlvbnM6IFtcbiAgICAgICAgTm9UYXNrRGV0YWlsc1RlbXBsYXRlRGlyZWN0aXZlLFxuICAgICAgICBUYXNrRmlsdGVyc0NvbXBvbmVudCxcbiAgICAgICAgVGFza0xpc3RDb21wb25lbnQsXG4gICAgICAgIFRhc2tEZXRhaWxzQ29tcG9uZW50LFxuICAgICAgICBUYXNrQXVkaXREaXJlY3RpdmUsXG4gICAgICAgIENoZWNrbGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFza0hlYWRlckNvbXBvbmVudCxcbiAgICAgICAgU3RhcnRUYXNrQ29tcG9uZW50LFxuICAgICAgICBUYXNrU3RhbmRhbG9uZUNvbXBvbmVudCxcbiAgICAgICAgQXR0YWNoRm9ybUNvbXBvbmVudFxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBOb1Rhc2tEZXRhaWxzVGVtcGxhdGVEaXJlY3RpdmUsXG4gICAgICAgIFRhc2tGaWx0ZXJzQ29tcG9uZW50LFxuICAgICAgICBUYXNrTGlzdENvbXBvbmVudCxcbiAgICAgICAgVGFza0RldGFpbHNDb21wb25lbnQsXG4gICAgICAgIFRhc2tBdWRpdERpcmVjdGl2ZSxcbiAgICAgICAgQ2hlY2tsaXN0Q29tcG9uZW50LFxuICAgICAgICBUYXNrSGVhZGVyQ29tcG9uZW50LFxuICAgICAgICBTdGFydFRhc2tDb21wb25lbnQsXG4gICAgICAgIFRhc2tTdGFuZGFsb25lQ29tcG9uZW50LFxuICAgICAgICBBdHRhY2hGb3JtQ29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUYXNrTGlzdE1vZHVsZSB7XG59XG4iXX0=