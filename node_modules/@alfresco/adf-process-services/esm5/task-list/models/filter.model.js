/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { UserTaskFilterRepresentation, TaskQueryRepresentation } from '@alfresco/js-api';
var AppDefinitionRepresentationModel = /** @class */ (function () {
    function AppDefinitionRepresentationModel(obj) {
        if (obj) {
            this.defaultAppId = obj.defaultAppId ? obj.defaultAppId : null;
            this.deploymentId = obj.deploymentId ? obj.deploymentId : null;
            this.name = obj.name ? obj.name : null;
            this.description = obj.description ? obj.description : null;
            this.theme = obj.theme ? obj.theme : null;
            this.icon = obj.icon ? obj.icon : null;
            this.id = obj.id ? obj.id : null;
            this.modelId = obj.modelId ? obj.modelId : null;
            this.tenantId = obj.tenantId ? obj.tenantId : null;
        }
    }
    return AppDefinitionRepresentationModel;
}());
export { AppDefinitionRepresentationModel };
if (false) {
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.defaultAppId;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.deploymentId;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.name;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.description;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.theme;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.icon;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.id;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.modelId;
    /** @type {?} */
    AppDefinitionRepresentationModel.prototype.tenantId;
}
var FilterParamsModel = /** @class */ (function () {
    function FilterParamsModel(obj) {
        if (obj) {
            this.id = obj.id || null;
            this.name = obj.name || null;
            this.index = obj.index;
        }
    }
    return FilterParamsModel;
}());
export { FilterParamsModel };
if (false) {
    /** @type {?} */
    FilterParamsModel.prototype.id;
    /** @type {?} */
    FilterParamsModel.prototype.name;
    /** @type {?} */
    FilterParamsModel.prototype.index;
}
var FilterRepresentationModel = /** @class */ (function () {
    function FilterRepresentationModel(obj) {
        if (obj) {
            this.id = obj.id || null;
            this.appId = obj.appId || null;
            this.name = obj.name || null;
            this.recent = !!obj.recent;
            this.icon = obj.icon || null;
            this.filter = new UserTaskFilterRepresentation(obj.filter);
            this.index = obj.index;
        }
    }
    /**
     * @return {?}
     */
    FilterRepresentationModel.prototype.hasFilter = /**
     * @return {?}
     */
    function () {
        return this.filter ? true : false;
    };
    return FilterRepresentationModel;
}());
export { FilterRepresentationModel };
if (false) {
    /** @type {?} */
    FilterRepresentationModel.prototype.id;
    /** @type {?} */
    FilterRepresentationModel.prototype.appId;
    /** @type {?} */
    FilterRepresentationModel.prototype.name;
    /** @type {?} */
    FilterRepresentationModel.prototype.recent;
    /** @type {?} */
    FilterRepresentationModel.prototype.icon;
    /** @type {?} */
    FilterRepresentationModel.prototype.filter;
    /** @type {?} */
    FilterRepresentationModel.prototype.index;
}
var TaskQueryRequestRepresentationModel = /** @class */ (function (_super) {
    tslib_1.__extends(TaskQueryRequestRepresentationModel, _super);
    function TaskQueryRequestRepresentationModel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TaskQueryRequestRepresentationModel;
}(TaskQueryRepresentation));
export { TaskQueryRequestRepresentationModel };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1wcm9jZXNzLXNlcnZpY2VzLyIsInNvdXJjZXMiOlsidGFzay1saXN0L21vZGVscy9maWx0ZXIubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBNEIsNEJBQTRCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUVuSDtJQVdJLDBDQUFZLEdBQVM7UUFDakIsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUMvRCxJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUMvRCxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUN2QyxJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUM1RCxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUMxQyxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUN2QyxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNqQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUNoRCxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztTQUN0RDtJQUNMLENBQUM7SUFDTCx1Q0FBQztBQUFELENBQUMsQUF4QkQsSUF3QkM7Ozs7SUF2Qkcsd0RBQXFCOztJQUNyQix3REFBcUI7O0lBQ3JCLGdEQUFhOztJQUNiLHVEQUFvQjs7SUFDcEIsaURBQWM7O0lBQ2QsZ0RBQWE7O0lBQ2IsOENBQVc7O0lBQ1gsbURBQWdCOztJQUNoQixvREFBaUI7O0FBaUJyQjtJQUtJLDJCQUFZLEdBQVM7UUFDakIsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsRUFBRSxHQUFHLEdBQUcsQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7WUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1NBQzFCO0lBQ0wsQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0FBQyxBQVpELElBWUM7Ozs7SUFYRywrQkFBVzs7SUFDWCxpQ0FBYTs7SUFDYixrQ0FBYzs7QUFXbEI7SUFTSSxtQ0FBWSxHQUFTO1FBQ2pCLElBQUksR0FBRyxFQUFFO1lBQ0wsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQztZQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDO1lBQy9CLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUM7WUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztZQUMzQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDO1lBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDM0QsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1NBQzFCO0lBQ0wsQ0FBQzs7OztJQUVELDZDQUFTOzs7SUFBVDtRQUNJLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDdEMsQ0FBQztJQUNMLGdDQUFDO0FBQUQsQ0FBQyxBQXhCRCxJQXdCQzs7OztJQXZCRyx1Q0FBVzs7SUFDWCwwQ0FBYzs7SUFDZCx5Q0FBYTs7SUFDYiwyQ0FBZ0I7O0lBQ2hCLHlDQUFhOztJQUNiLDJDQUFpQzs7SUFDakMsMENBQWM7O0FBbUJsQjtJQUF5RCwrREFBdUI7SUFBaEY7O0lBRUEsQ0FBQztJQUFELDBDQUFDO0FBQUQsQ0FBQyxBQUZELENBQXlELHVCQUF1QixHQUUvRSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFRhc2tGaWx0ZXJSZXByZXNlbnRhdGlvbiwgVXNlclRhc2tGaWx0ZXJSZXByZXNlbnRhdGlvbiwgVGFza1F1ZXJ5UmVwcmVzZW50YXRpb24gfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcblxuZXhwb3J0IGNsYXNzIEFwcERlZmluaXRpb25SZXByZXNlbnRhdGlvbk1vZGVsIHtcbiAgICBkZWZhdWx0QXBwSWQ6IHN0cmluZztcbiAgICBkZXBsb3ltZW50SWQ6IHN0cmluZztcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgICB0aGVtZTogc3RyaW5nO1xuICAgIGljb246IHN0cmluZztcbiAgICBpZDogbnVtYmVyO1xuICAgIG1vZGVsSWQ6IG51bWJlcjtcbiAgICB0ZW5hbnRJZDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgIHRoaXMuZGVmYXVsdEFwcElkID0gb2JqLmRlZmF1bHRBcHBJZCA/IG9iai5kZWZhdWx0QXBwSWQgOiBudWxsO1xuICAgICAgICAgICAgdGhpcy5kZXBsb3ltZW50SWQgPSBvYmouZGVwbG95bWVudElkID8gb2JqLmRlcGxveW1lbnRJZCA6IG51bGw7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBvYmoubmFtZSA/IG9iai5uYW1lIDogbnVsbDtcbiAgICAgICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBvYmouZGVzY3JpcHRpb24gPyBvYmouZGVzY3JpcHRpb24gOiBudWxsO1xuICAgICAgICAgICAgdGhpcy50aGVtZSA9IG9iai50aGVtZSA/IG9iai50aGVtZSA6IG51bGw7XG4gICAgICAgICAgICB0aGlzLmljb24gPSBvYmouaWNvbiA/IG9iai5pY29uIDogbnVsbDtcbiAgICAgICAgICAgIHRoaXMuaWQgPSBvYmouaWQgPyBvYmouaWQgOiBudWxsO1xuICAgICAgICAgICAgdGhpcy5tb2RlbElkID0gb2JqLm1vZGVsSWQgPyBvYmoubW9kZWxJZCA6IG51bGw7XG4gICAgICAgICAgICB0aGlzLnRlbmFudElkID0gb2JqLnRlbmFudElkID8gb2JqLnRlbmFudElkIDogbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEZpbHRlclBhcmFtc01vZGVsIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBpbmRleDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgIHRoaXMuaWQgPSBvYmouaWQgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG9iai5uYW1lIHx8IG51bGw7XG4gICAgICAgICAgICB0aGlzLmluZGV4ID0gb2JqLmluZGV4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgY2xhc3MgRmlsdGVyUmVwcmVzZW50YXRpb25Nb2RlbCBpbXBsZW1lbnRzIFVzZXJUYXNrRmlsdGVyUmVwcmVzZW50YXRpb24ge1xuICAgIGlkOiBudW1iZXI7XG4gICAgYXBwSWQ6IG51bWJlcjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgcmVjZW50OiBib29sZWFuO1xuICAgIGljb246IHN0cmluZztcbiAgICBmaWx0ZXI6IFRhc2tGaWx0ZXJSZXByZXNlbnRhdGlvbjtcbiAgICBpbmRleDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3Iob2JqPzogYW55KSB7XG4gICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICAgIHRoaXMuaWQgPSBvYmouaWQgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMuYXBwSWQgPSBvYmouYXBwSWQgfHwgbnVsbDtcbiAgICAgICAgICAgIHRoaXMubmFtZSA9IG9iai5uYW1lIHx8IG51bGw7XG4gICAgICAgICAgICB0aGlzLnJlY2VudCA9ICEhb2JqLnJlY2VudDtcbiAgICAgICAgICAgIHRoaXMuaWNvbiA9IG9iai5pY29uIHx8IG51bGw7XG4gICAgICAgICAgICB0aGlzLmZpbHRlciA9IG5ldyBVc2VyVGFza0ZpbHRlclJlcHJlc2VudGF0aW9uKG9iai5maWx0ZXIpO1xuICAgICAgICAgICAgdGhpcy5pbmRleCA9IG9iai5pbmRleDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhc0ZpbHRlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyID8gdHJ1ZSA6IGZhbHNlO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIFRhc2tRdWVyeVJlcXVlc3RSZXByZXNlbnRhdGlvbk1vZGVsIGV4dGVuZHMgVGFza1F1ZXJ5UmVwcmVzZW50YXRpb24ge1xuXG59XG4iXX0=