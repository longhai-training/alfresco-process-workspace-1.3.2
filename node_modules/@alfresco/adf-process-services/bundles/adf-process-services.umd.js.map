{"version":3,"file":"adf-process-services.umd.js.map","sources":["ng://@alfresco/adf-process-services/process-list/models/filter-process.model.ts","ng://@alfresco/adf-process-services/process-list/services/process-filter.service.ts","ng://@alfresco/adf-process-services/app-list/icon.model.ts","ng://@alfresco/adf-process-services/process-list/components/process-filters.component.ts","ng://@alfresco/adf-process-services/process-list/models/process-definition.model.ts","ng://@alfresco/adf-process-services/process-list/models/process-instance-variable.model.ts","ng://@alfresco/adf-process-services/process-list/models/process-instance.model.ts","ng://@alfresco/adf-process-services/process-list/models/process-list.model.ts","ng://@alfresco/adf-process-services/process-list/services/process.service.ts","ng://@alfresco/adf-process-services/process-list/components/process-instance-details.component.ts","ng://@alfresco/adf-process-services/process-list/components/process-audit.directive.ts","ng://@alfresco/adf-process-services/process-list/components/process-instance-header.component.ts","node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-process-services/task-list/models/filter.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-preset.model.ts","ng://@alfresco/adf-process-services/task-list/models/form.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-details.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-list.model.ts","ng://@alfresco/adf-process-services/task-list/services/tasklist.service.ts","ng://@alfresco/adf-process-services/task-list/components/task-list.component.ts","ng://@alfresco/adf-process-services/task-list/components/checklist.component.ts","ng://@alfresco/adf-process-services/task-list/validators/task-description.validator.ts","ng://@alfresco/adf-process-services/task-list/components/task-header.component.ts","ng://@alfresco/adf-process-services/task-list/components/task-details.component.ts","ng://@alfresco/adf-process-services/task-list/components/no-task-detail-template.directive.ts","ng://@alfresco/adf-process-services/task-list/services/task-filter.service.ts","ng://@alfresco/adf-process-services/task-list/components/task-filters.component.ts","ng://@alfresco/adf-process-services/task-list/components/task-audit.directive.ts","ng://@alfresco/adf-process-services/task-list/components/start-task.component.ts","ng://@alfresco/adf-process-services/task-list/components/task-standalone.component.ts","ng://@alfresco/adf-process-services/task-list/components/attach-form.component.ts","ng://@alfresco/adf-process-services/task-list/services/process-upload.service.ts","ng://@alfresco/adf-process-services/task-list/services/task-upload.service.ts","ng://@alfresco/adf-process-services/task-list/models/start-task.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-details.event.ts","ng://@alfresco/adf-process-services/task-list/models/user-event.model.ts","ng://@alfresco/adf-process-services/task-list/models/user-group.model.ts","ng://@alfresco/adf-process-services/material.module.ts","ng://@alfresco/adf-process-services/process-comments/process-comments.component.ts","ng://@alfresco/adf-process-services/process-comments/process-comments.module.ts","ng://@alfresco/adf-process-services/people/components/people/people.component.ts","ng://@alfresco/adf-process-services/people/components/people-list/people-list.component.ts","ng://@alfresco/adf-process-services/people/components/people-search/people-search.component.ts","ng://@alfresco/adf-process-services/people/helpers/getDisplayUser.ts","ng://@alfresco/adf-process-services/people/components/people-search-field/people-search-field.component.ts","ng://@alfresco/adf-process-services/people/components/people-selector/people-selector.component.ts","ng://@alfresco/adf-process-services/people/directives/people-search-action-label.directive.ts","ng://@alfresco/adf-process-services/people/directives/people-search-title.directive.ts","ng://@alfresco/adf-process-services/people/people.module.ts","ng://@alfresco/adf-process-services/content-widget/attach-file-widget-dialog.component.ts","ng://@alfresco/adf-process-services/content-widget/attach-file-widget-dialog.service.ts","ng://@alfresco/adf-process-services/content-widget/attach-file-widget.component.ts","ng://@alfresco/adf-process-services/content-widget/attach-folder-widget.component.ts","ng://@alfresco/adf-process-services/content-widget/content-widget.module.ts","ng://@alfresco/adf-process-services/form/form.component.ts","ng://@alfresco/adf-process-services/form/start-form.component.ts","ng://@alfresco/adf-process-services/form/form.module.ts","ng://@alfresco/adf-process-services/task-list/task-list.module.ts","ng://@alfresco/adf-process-services/process-list/components/process-instance-tasks.component.ts","ng://@alfresco/adf-process-services/process-list/models/process-preset.model.ts","ng://@alfresco/adf-process-services/process-list/components/process-list.component.ts","ng://@alfresco/adf-process-services/process-list/components/start-process.component.ts","ng://@alfresco/adf-process-services/process-list/models/process-instance-filter.model.ts","ng://@alfresco/adf-process-services/process-list/process-list.module.ts","ng://@alfresco/adf-process-services/app-list/apps-list.component.ts","ng://@alfresco/adf-process-services/app-list/select-apps-dialog-component.ts","ng://@alfresco/adf-process-services/app-list/apps-list.module.ts","ng://@alfresco/adf-process-services/attachment/task-attachment-list.component.ts","ng://@alfresco/adf-process-services/attachment/process-attachment-list.component.ts","ng://@alfresco/adf-process-services/attachment/create-process-attachment.component.ts","ng://@alfresco/adf-process-services/attachment/create-task-attachment.component.ts","ng://@alfresco/adf-process-services/attachment/attachment.module.ts","ng://@alfresco/adf-process-services/process.module.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ProcessFilterRequestRepresentation,\n    ProcessInstanceFilterRepresentation,\n    UserProcessInstanceFilterRepresentation\n} from '@alfresco/js-api';\n\nexport class FilterProcessRepresentationModel implements UserProcessInstanceFilterRepresentation {\n    appId: number;\n    filter: ProcessInstanceFilterRepresentation;\n    icon: string;\n    id: number;\n    index: number;\n    name: string;\n    recent: boolean;\n\n    constructor(obj: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = obj.filter || null;\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter() {\n        return !!this.filter;\n    }\n}\n\n/**\n * This object represent the parameters of a process filter.\n */\nexport class ProcessFilterParamRepresentationModel implements ProcessFilterRequestRepresentation {\n\n    processDefinitionId?: string;\n    processInstanceId?: string;\n    appDefinitionId?: number;\n    state?: any;\n    sort?: any;\n    page?: number;\n    size?: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj.processDefinitionId || null;\n        this.appDefinitionId = obj.appDefinitionId || null;\n        this.processInstanceId = obj.processInstanceId || null;\n        this.state = obj.state || null;\n        this.sort = obj.sort || null;\n        this.page = obj.page || null;\n        this.size = obj.size || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFilterService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets all filters defined for a Process App.\n     * @param appId ID of the target app\n     * @returns Array of filter details\n     */\n    getProcessFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    response.data.forEach((filter: FilterProcessRepresentationModel) => {\n                        const filterModel = new FilterProcessRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterById(filterId: number, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.id === filterId);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by name.\n     * @param filterName Name of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterByName(filterName: string, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.name === filterName);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates and returns the default filters for an app.\n     * @param appId ID of the target app\n     * @returns Default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        const runningFilter = this.getRunningFilterInstance(appId);\n        const runningObservable = this.addProcessFilter(runningFilter);\n\n        const completedFilter = this.getCompletedFilterInstance(appId);\n        const completedObservable = this.addProcessFilter(completedFilter);\n\n        const allFilter = this.getAllFilterInstance(appId);\n        const allObservable = this.addProcessFilter(allFilter);\n\n        return new Observable((observer) => {\n            forkJoin(\n                runningObservable,\n                completedObservable,\n                allObservable\n            ).subscribe(\n                (res) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === runningFilter.name) {\n                            runningFilter.id = filter.id;\n                            filters.push(runningFilter);\n                        } else if (filter.name === completedFilter.name) {\n                            completedFilter.id = filter.id;\n                            filters.push(completedFilter);\n                        } else if (filter.name === allFilter.name) {\n                            allFilter.id = filter.id;\n                            filters.push(allFilter);\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.handleProcessError(err);\n                });\n        });\n    }\n\n    /**\n     * Creates and returns a filter that matches \"running\" process instances.\n     * @param appId ID of the target app\n     * @returns Filter just created\n     */\n    public getRunningFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Running',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-random',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'running' }\n        });\n    }\n\n    /**\n     * Returns a static Completed filter instance.\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    private getCompletedFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Completed',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed' }\n        });\n    }\n\n    /**\n     * Returns a static All filter instance.\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    private getAllFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'All',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-th',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'all' }\n        });\n    }\n\n    /**\n     * Adds a filter.\n     * @param filter The filter to add\n     * @returns The filter just added\n     */\n    addProcessFilter(filter: FilterProcessRepresentationModel): Observable<FilterProcessRepresentationModel> {\n        return from(this.alfrescoApiService.getInstance().activiti.userFiltersApi.createUserProcessInstanceFilter(filter))\n            .pipe(\n                map((response: FilterProcessRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserProcessInstanceFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of filter details\n     */\n    callApiProcessFilters(appId?: number) {\n        if (appId) {\n            return this.alfrescoApiService.getInstance().activiti.userFiltersApi.getUserProcessInstanceFilters({ appId: appId });\n        } else {\n            return this.alfrescoApiService.getInstance().activiti.userFiltersApi.getUserProcessInstanceFilters();\n        }\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nexport class IconModel {\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    private iconsMDL: Map<string, string>;\n\n    constructor() {\n        this.initIconsMDL();\n    }\n\n    mapGlyphiconToMaterialDesignIcons(icon: string) {\n        return this.iconsMDL.get(icon) ? this.iconsMDL.get(icon) : IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON;\n    }\n\n    /**\n     * Map all the bootstrap glyphicon icons with Material design material icon\n     */\n    initIconsMDL() {\n        this.iconsMDL = new Map<string, string>();\n\n        this.iconsMDL.set('glyphicon-asterisk', 'ac_unit');\n        this.iconsMDL.set('glyphicon-plus', 'add');\n        this.iconsMDL.set('glyphicon-euro', 'euro_symbol');\n        this.iconsMDL.set('glyphicon-cloud', 'cloud');\n        this.iconsMDL.set('glyphicon-envelope', 'mail');\n        this.iconsMDL.set('glyphicon-pencil', 'create');\n        this.iconsMDL.set('glyphicon-glass', 'local_bar');\n        this.iconsMDL.set('glyphicon-music', 'music_note');\n        this.iconsMDL.set('glyphicon-search', 'search');\n        this.iconsMDL.set('glyphicon-heart', 'favorite');\n        this.iconsMDL.set('glyphicon-heart-empty', 'favorite_border');\n        this.iconsMDL.set('glyphicon-star', 'star');\n        this.iconsMDL.set('glyphicon-star-empty', 'star_border');\n        this.iconsMDL.set('glyphicon-user', 'person');\n        this.iconsMDL.set('glyphicon-film', 'movie_creation');\n        this.iconsMDL.set('glyphicon-th-large', 'view_comfy');\n        this.iconsMDL.set('glyphicon-th', 'dashboard');\n        this.iconsMDL.set('glyphicon-th-list', 'list');\n        this.iconsMDL.set('glyphicon-ok', 'done');\n        this.iconsMDL.set('glyphicon-remove', 'cancel');\n        this.iconsMDL.set('glyphicon-zoom-in', 'zoom_in');\n        this.iconsMDL.set('glyphicon-zoom-out', 'zoom_out');\n        this.iconsMDL.set('glyphicon-off', 'highlight_off');\n        this.iconsMDL.set('glyphicon-signal', 'signal_cellular_4_bar');\n        this.iconsMDL.set('glyphicon-cog', 'settings');\n        this.iconsMDL.set('glyphicon-trash', 'delete');\n        this.iconsMDL.set('glyphicon-home', 'home');\n        this.iconsMDL.set('glyphicon-file', 'insert_drive_file');\n        this.iconsMDL.set('glyphicon-time', 'access_time');\n        this.iconsMDL.set('glyphicon-road', 'map');\n        this.iconsMDL.set('glyphicon-download-alt', 'file_download');\n        this.iconsMDL.set('glyphicon-download', 'file_download');\n        this.iconsMDL.set('glyphicon-upload', 'file_upload');\n        this.iconsMDL.set('glyphicon-inbox', 'inbox');\n        this.iconsMDL.set('glyphicon-play-circle', 'play_circle_outline');\n        this.iconsMDL.set('glyphicon-repeat', 'refresh');\n        this.iconsMDL.set('glyphicon-refresh', 'sync');\n        this.iconsMDL.set('glyphicon-list-alt', 'event_note');\n        this.iconsMDL.set('glyphicon-lock', 'lock_outline');\n        this.iconsMDL.set('glyphicon-flag', 'assistant_photo');\n        this.iconsMDL.set('glyphicon-headphones', 'headset');\n        this.iconsMDL.set('glyphicon-volume-up', 'volume_up');\n        this.iconsMDL.set('glyphicon-tag', 'local_offer');\n        this.iconsMDL.set('glyphicon-tags', 'local_offer');\n        this.iconsMDL.set('glyphicon-book', 'library_books');\n        this.iconsMDL.set('glyphicon-bookmark', 'collections_bookmark');\n        this.iconsMDL.set('glyphicon-print', 'local_printshop');\n        this.iconsMDL.set('glyphicon-camera', 'local_see');\n        this.iconsMDL.set('glyphicon-list', 'view_list');\n        this.iconsMDL.set('glyphicon-facetime-video', 'video_call');\n        this.iconsMDL.set('glyphicon-picture', 'photo');\n        this.iconsMDL.set('glyphicon-map-marker', 'add_location');\n        this.iconsMDL.set('glyphicon-adjust', 'brightness_4');\n        this.iconsMDL.set('glyphicon-tint', 'invert_colors');\n        this.iconsMDL.set('glyphicon-edit', 'edit');\n        this.iconsMDL.set('glyphicon-share', 'share');\n        this.iconsMDL.set('glyphicon-check', 'assignment_turned_in');\n        this.iconsMDL.set('glyphicon-move', 'open_with');\n        this.iconsMDL.set('glyphicon-play', 'play_arrow');\n        this.iconsMDL.set('glyphicon-eject', 'eject');\n        this.iconsMDL.set('glyphicon-plus-sign', 'add_circle');\n        this.iconsMDL.set('glyphicon-minus-sign', 'remove_circle');\n        this.iconsMDL.set('glyphicon-remove-sign', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-sign', 'check_circle');\n        this.iconsMDL.set('glyphicon-question-sign', 'help');\n        this.iconsMDL.set('glyphicon-info-sign', 'info');\n        this.iconsMDL.set('glyphicon-screenshot', 'flare');\n        this.iconsMDL.set('glyphicon-remove-circle', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-circle', 'add_circle');\n        this.iconsMDL.set('glyphicon-ban-circle', 'block');\n        this.iconsMDL.set('glyphicon-share-alt', 'redo');\n        this.iconsMDL.set('glyphicon-exclamation-sign', 'error');\n        this.iconsMDL.set('glyphicon-gift', 'giftcard');\n        this.iconsMDL.set('glyphicon-leaf', 'spa');\n        this.iconsMDL.set('glyphicon-fire', 'whatshot');\n        this.iconsMDL.set('glyphicon-eye-open', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-eye-close', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-warning-sign', 'warning');\n        this.iconsMDL.set('glyphicon-plane', 'airplanemode_active');\n        this.iconsMDL.set('glyphicon-calendar', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-random', 'shuffle');\n        this.iconsMDL.set('glyphicon-comment', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-magnet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-retweet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-shopping-cart', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-close', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hdd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bullhorn', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bell', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-certificate', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-up', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-down', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hand-left', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-globe', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-wrench', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tasks', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-filter', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-briefcase', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-dashboard', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-paperclip', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-link', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-pushpin', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-usd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-gbp', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-sort', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-flash', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-record', 'radio_button_checked');\n        this.iconsMDL.set('glyphicon-save', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-saved', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-send', 'send');\n        this.iconsMDL.set('glyphicon-floppy-disk', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-credit-card', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cutlery', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-earphone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone-alt', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tower', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-stats', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-download', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-upload', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-conifer', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-deciduous', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-align-left', 'format_align_left');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { ProcessInstanceFilterRepresentation, UserProcessInstanceFilterRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { ProcessFilterService } from './../services/process-filter.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-process-instance-filters',\n    templateUrl: './process-filters.component.html',\n    styleUrls: ['process-filters.component.scss']\n})\nexport class ProcessFiltersComponent implements OnInit, OnChanges {\n\n    /** The parameters to filter the task filter. If there is no match then the default one\n     * (ie, the first filter in the list) is selected.\n     */\n    @Input()\n    filterParam: FilterProcessRepresentationModel;\n\n    /** Emitted when the user selects a filter from the list. */\n    @Output()\n    filterClick: EventEmitter<UserProcessInstanceFilterRepresentation> = new EventEmitter<UserProcessInstanceFilterRepresentation>();\n\n    /** Emitted when the list of filters has been successfully loaded from the server. */\n    @Output()\n    success: EventEmitter<ProcessInstanceFilterRepresentation[]> = new EventEmitter<ProcessInstanceFilterRepresentation[]>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggle to show or hide the filter's icon. */\n    @Input()\n    showIcon: boolean = true;\n\n    /** Emitted when a process filter is selected. */\n    @Output()\n    filterSelected: EventEmitter<ProcessInstanceFilterRepresentation> = new EventEmitter<ProcessInstanceFilterRepresentation>();\n\n    filter$: Observable<ProcessInstanceFilterRepresentation>;\n\n    currentFilter: ProcessInstanceFilterRepresentation;\n\n    filters: UserProcessInstanceFilterRepresentation [] = [];\n\n    private iconsMDL: IconModel;\n\n    constructor(private processFilterService: ProcessFilterService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appId = changes['appId'];\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n\n        if (appId && (appId.currentValue || appId.currentValue === null)) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectProcessFilter(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.processFilterService.getProcessFilters(appId).subscribe(\n            (res: ProcessInstanceFilterRepresentation[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.processFilterService.createDefaultFilters(appId).subscribe(\n                        (resDefault: ProcessInstanceFilterRepresentation[]) => {\n                            this.resetFilter();\n                            this.filters = resDefault;\n                            this.selectProcessFilter(this.filterParam);\n                            this.success.emit(resDefault);\n                        },\n                        (errDefault: any) => {\n                            this.error.emit(errDefault);\n                        }\n                    );\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectProcessFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n                this.selectProcessFilter(this.filterParam);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param filter\n     */\n    public selectFilter(filter: ProcessInstanceFilterRepresentation) {\n        this.currentFilter = filter;\n        this.filterClick.emit(filter);\n    }\n\n    /**\n     * Select the first filter of a list if present\n     */\n    public selectProcessFilter(filterParam: FilterProcessRepresentationModel) {\n        if (filterParam) {\n            this.filters.filter((processFilter: UserProcessInstanceFilterRepresentation, index) => {\n                if (filterParam.name && filterParam.name.toLowerCase() === processFilter.name.toLowerCase() ||\n                    filterParam.id === processFilter.id ||\n                    filterParam.index === index) {\n                    this.currentFilter = processFilter;\n                    this.filterSelected.emit(processFilter);\n                }\n            });\n        }\n        if (this.isCurrentFilterEmpty()) {\n            this.selectDefaultTaskFilter();\n        }\n    }\n\n    /**\n     * Select the Running filter\n     */\n    public selectRunningFilter() {\n        this.selectProcessFilter(this.processFilterService.getRunningFilterInstance(null));\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n            this.filterSelected.emit(this.filters[0]);\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): ProcessInstanceFilterRepresentation {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    private isCurrentFilterEmpty(): boolean {\n        return this.currentFilter === undefined || null;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessDefinitionRepresentation {\n    id: string;\n    name: string;\n    description: string;\n    key: string;\n    category: string;\n    version: number;\n    deploymentId: string;\n    tenantId: string;\n    metaDataValues: any[];\n    hasStartForm: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.key = obj && obj.key || null;\n        this.category = obj && obj.category || null;\n        this.version = obj && obj.version || 0;\n        this.deploymentId = obj && obj.deploymentId || null;\n        this.tenantId = obj && obj.tenantId || null;\n        this.metaDataValues = obj && obj.metaDataValues || [];\n        this.hasStartForm = obj && obj.hasStartForm === true ? true : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstanceVariable implements RestVariable {\n\n    name?: string;\n    scope?: string;\n    type?: string;\n    value?: string;\n    valueUrl?: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name !== undefined ? obj.name : null;\n        this.scope = obj && obj.scope !== undefined ? obj.scope : null;\n        this.value = obj && obj.value !== undefined ? obj.value : null;\n        this.valueUrl = obj && obj.valueUrl !== undefined ? obj.valueUrl : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LightUserRepresentation, ProcessInstanceRepresentation, RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstance implements ProcessInstanceRepresentation {\n\n    businessKey?: string;\n    ended?: Date;\n    graphicalNotationDefined?: boolean;\n    id?: string;\n    name?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    startFormDefined?: boolean;\n    started?: Date;\n    startedBy?: LightUserRepresentation;\n    tenantId?: string;\n    variables?: RestVariable[];\n\n    constructor(data?: any) {\n        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;\n        this.ended = data && data.ended !== undefined ? data.ended : null;\n        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;\n        this.id = data && data.id !== undefined ? data.id : null;\n        this.name = data && data.name !== undefined ? data.name : null;\n        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;\n        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;\n        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;\n        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;\n        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;\n        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;\n        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;\n        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;\n        this.started = data && data.started !== undefined ? data.started : null;\n        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;\n        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;\n        this.variables = data && data.variables !== undefined ? data.variables : null;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProcessInstance } from './process-instance.model';\n\nexport class ProcessListModel {\n    size: number;\n    total: number;\n    start: number;\n    length: number;\n    data: ProcessInstance [];\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.size = obj.size || null;\n            this.total = obj.total || null;\n            this.start = obj.start || null;\n            this.length = obj.length || null;\n            this.data = obj.data || [];\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, FormValues } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { RestVariable } from '@alfresco/js-api';\nimport { Observable, from, throwError, of } from 'rxjs';\nimport { TaskDetailsModel } from '../../task-list';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessDefinitionRepresentation } from '../models/process-definition.model';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessListModel } from '../models/process-list.model';\nimport { map, catchError } from 'rxjs/operators';\n\ndeclare let moment: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets process instances for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of process instances\n     */\n    getProcessInstances(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessInstances(requestNode))\n            .pipe(\n                map((res: any) => {\n                    if (processDefinitionKey) {\n                        const filtered = res.data.filter((process) => process.processDefinitionKey === processDefinitionKey);\n                        res.data = filtered;\n                        return res;\n                    } else {\n                        return res;\n                    }\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets processes for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of processes\n     */\n    getProcesses(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return this.getProcessInstances(requestNode, processDefinitionKey)\n            .pipe(catchError(() => {\n                return of(new ProcessListModel({}));\n            }));\n    }\n\n    /**\n     * Fetches the Process Audit information as a PDF.\n     * @param processId ID of the target process\n     * @returns Binary PDF data\n     */\n    fetchProcessAuditPdfById(processId: string): Observable<Blob> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessAuditPdf(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Fetches the Process Audit information in a JSON format.\n     * @param processId ID of the target process\n     * @returns JSON data\n     */\n    fetchProcessAuditJsonById(processId: string): Observable<any> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessAuditJson(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets Process Instance metadata.\n     * @param processInstanceId ID of the target process\n     * @returns Metadata for the instance\n     */\n    getProcess(processInstanceId: string): Observable<ProcessInstance> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessInstance(processInstanceId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets task instances for a process instance.\n     * @param processInstanceId ID of the process instance\n     * @param state Task state filter (can be \"active\" or \"completed\")\n     * @returns Array of task instance details\n     */\n    getProcessTasks(processInstanceId: string, state?: string): Observable<TaskDetailsModel[]> {\n        const taskOpts = state ? {\n            processInstanceId: processInstanceId,\n            state: state\n        } : {\n                processInstanceId: processInstanceId\n            };\n        return from(this.alfrescoApiService.getInstance().activiti.taskApi.listTasks(taskOpts))\n            .pipe(\n                map(this.extractData),\n                map((tasks) => tasks.map((task: any) => {\n                    task.created = moment(task.created, 'YYYY-MM-DD').format();\n                    return task;\n                })),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions associated with an app.\n     * @param appId ID of a target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appId?: number): Observable<ProcessDefinitionRepresentation[]> {\n        const opts = appId ? {\n            latest: true,\n            appDefinitionId: appId\n        } : {\n                latest: true\n            };\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processApi.getProcessDefinitions(opts)\n        )\n            .pipe(\n                map(this.extractData),\n                map((processDefs) => processDefs.map((pd) => new ProcessDefinitionRepresentation(pd))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Starts a process based on a process definition, name, form values or variables.\n     * @param processDefinitionId Process definition ID\n     * @param name Process name\n     * @param outcome Process outcome\n     * @param startFormValues Values for the start form\n     * @param variables Array of process instance variables\n     * @returns Details of the process instance just started\n     */\n    startProcess(processDefinitionId: string, name: string, outcome?: string, startFormValues?: FormValues, variables?: ProcessInstanceVariable[]): Observable<ProcessInstance> {\n        const startRequest: any = {\n            name: name,\n            processDefinitionId: processDefinitionId\n        };\n        if (outcome) {\n            startRequest.outcome = outcome;\n        }\n        if (startFormValues) {\n            startRequest.values = startFormValues;\n        }\n        if (variables) {\n            startRequest.variables = variables;\n        }\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processApi.startNewProcessInstance(startRequest)\n        )\n            .pipe(\n                map((pd) => new ProcessInstance(pd)),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Cancels a process instance.\n     * @param processInstanceId ID of process to cancel\n     * @returns Null response notifying when the operation is complete\n     */\n    cancelProcess(processInstanceId: string): Observable<void> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processApi.deleteProcessInstance(processInstanceId)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets the variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @returns Array of instance variable info\n     */\n    getProcessInstanceVariables(processInstanceId: string): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId)\n        )\n            .pipe(\n                map((processVars: any[]) => processVars.map((currentProcessVar) => new ProcessInstanceVariable(currentProcessVar))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates or updates variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variables Variables to update\n     * @returns Array of instance variable info\n     */\n    createOrUpdateProcessInstanceVariables(processInstanceId: string, variables: RestVariable[]): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.createOrUpdateProcessInstanceVariables(processInstanceId, variables)\n        ).pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Deletes a variable for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variableName Name of the variable to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteProcessInstanceVariable(processInstanceId: string, variableName: string): Observable<void> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.deleteProcessInstanceVariable(processInstanceId, variableName)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    private extractData(res: any) {\n        return res.data || {};\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { TaskDetailsEvent } from '../../task-list';\n\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { ProcessInstanceHeaderComponent } from './process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './process-instance-tasks.component';\n\n@Component({\n    selector: 'adf-process-instance-details',\n    templateUrl: './process-instance-details.component.html',\n    styleUrls: ['./process-instance-details.component.css']\n})\nexport class ProcessInstanceDetailsComponent implements OnChanges {\n\n    /** (required) The numeric ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    @ViewChild('processInstanceHeader')\n    processInstanceHeader: ProcessInstanceHeaderComponent;\n\n    @ViewChild('processInstanceTasks')\n    tasksList: ProcessInstanceTasksComponent;\n\n    /** Toggles whether to show or hide the title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggles whether to show or hide the refresh button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when the current process is cancelled by the user from within the component. */\n    @Output()\n    processCancelled: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    processInstanceDetails: ProcessInstance;\n\n    /** Emitted when the \"show diagram\" button is clicked. */\n    @Output()\n    showProcessDiagram: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * Constructor\n     * @param translate Translation service\n     * @param activitiProcess   Process service\n     */\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId && !processInstanceId.currentValue) {\n            this.reset();\n            return;\n        }\n        if (processInstanceId && processInstanceId.currentValue) {\n            this.load(processInstanceId.currentValue);\n            return;\n        }\n    }\n\n    /**\n     * Reset the task detail\n     */\n    reset() {\n        this.processInstanceDetails = null;\n    }\n\n    load(processId: string) {\n        if (processId) {\n            this.activitiProcess.getProcess(processId).subscribe(\n                (res: ProcessInstance) => {\n                    this.processInstanceDetails = res;\n                }\n            );\n        }\n    }\n\n    isRunning(): boolean {\n        return this.processInstanceDetails && !this.processInstanceDetails.ended;\n    }\n\n    cancelProcess() {\n        this.activitiProcess.cancelProcess(this.processInstanceId).subscribe(\n            (data) => {\n                this.processCancelled.emit(data);\n            }, (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    // bubbles (taskClick) event\n    onTaskClicked(event: TaskDetailsEvent) {\n        this.taskClick.emit(event);\n    }\n\n    getProcessNameOrDescription(dateFormat): string {\n        let name = '';\n        if (this.processInstanceDetails) {\n            name = this.processInstanceDetails.name ||\n                this.processInstanceDetails.processDefinitionName + ' - ' + this.getFormatDate(this.processInstanceDetails.started, dateFormat);\n        }\n        return name;\n    }\n\n    getFormatDate(value, format: string) {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceHeader: error parsing date ${value} to format ${format}`);\n        }\n    }\n\n    onShowProcessDiagram(processInstanceId: any) {\n        this.showProcessDiagram.emit({value: this.processInstanceId});\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessService } from './../services/process.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    selector: 'button[adf-process-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class ProcessAuditDirective implements OnChanges {\n\n    /** ID of the process. */\n    @Input('process-id')\n    processId: string;\n\n    /** Name of the file to download (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format for the audit information (can be \"pdf\" or \"json\"). */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit file on clicking. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    public audit: any;\n\n    /**\n     *\n     * @param translateService\n     * @param processListService\n     */\n    constructor(private contentService: ContentService,\n                private processListService: ProcessService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType() {\n        if (this.format && (this.isJsonFormat() || this.isPdfFormat())) {\n            return true;\n        }\n        return false;\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.processListService.fetchProcessAuditPdfById(this.processId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.processListService.fetchProcessAuditJsonById(this.processId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfigService, CardViewDateItemModel, CardViewItem, CardViewBaseItemModel, CardViewTextItemModel, TranslationService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ProcessInstance } from '../models/process-instance.model';\n\n@Component({\n    selector: 'adf-process-instance-header',\n    templateUrl: './process-instance-header.component.html',\n    styleUrls: ['./process-instance-header.component.css']\n})\nexport class ProcessInstanceHeaderComponent implements OnChanges {\n\n    /** (**required**) Full details of the process instance to display information about. */\n    @Input()\n    processInstance: ProcessInstance;\n\n    properties: CardViewItem [];\n\n    constructor(private translationService: TranslationService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.refreshData();\n    }\n\n    refreshData(): void {\n        if (this.processInstance) {\n            const defaultProperties = this.initDefaultProperties();\n            const filteredProperties: string[] = this.appConfig.get('adf-process-instance-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private initDefaultProperties(): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.STATUS',\n                    value: this.getProcessStatus(),\n                    key: 'status'\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.END_DATE',\n                    value: this.processInstance.ended,\n                    format: 'MMM DD YYYY',\n                    key: 'ended',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.END_DATE_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CATEGORY',\n                    value: this.processInstance.processDefinitionCategory,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY',\n                    value: this.processInstance.businessKey,\n                    key: 'businessKey',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED_BY',\n                    value: this.getStartedByFullName(),\n                    key: 'assignee',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CREATED_BY_DEFAULT')\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n                    value: this.processInstance.started,\n                    format: 'MMM DD YYYY',\n                    key: 'created'\n                }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.ID',\n                value: this.processInstance.id,\n                key: 'id'\n            }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION',\n                value: this.processInstance.processDefinitionDescription,\n                key: 'description',\n                default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION_DEFAULT')\n            })\n        ];\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    getProcessStatus(): string {\n        if (this.processInstance) {\n            return this.isRunning() ? 'Running' : 'Completed';\n        }\n    }\n\n    getStartedByFullName(): string {\n        let fullName = '';\n        if (this.processInstance && this.processInstance.startedBy) {\n            fullName += this.processInstance.startedBy.firstName || '';\n            fullName += fullName ? ' ' : '';\n            fullName += this.processInstance.startedBy.lastName || '';\n        }\n        return fullName;\n    }\n\n    isRunning(): boolean {\n        return this.processInstance && !this.processInstance.ended;\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskFilterRepresentation, UserTaskFilterRepresentation, TaskQueryRepresentation } from '@alfresco/js-api';\n\nexport class AppDefinitionRepresentationModel {\n    defaultAppId: string;\n    deploymentId: string;\n    name: string;\n    description: string;\n    theme: string;\n    icon: string;\n    id: number;\n    modelId: number;\n    tenantId: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.defaultAppId = obj.defaultAppId ? obj.defaultAppId : null;\n            this.deploymentId = obj.deploymentId ? obj.deploymentId : null;\n            this.name = obj.name ? obj.name : null;\n            this.description = obj.description ? obj.description : null;\n            this.theme = obj.theme ? obj.theme : null;\n            this.icon = obj.icon ? obj.icon : null;\n            this.id = obj.id ? obj.id : null;\n            this.modelId = obj.modelId ? obj.modelId : null;\n            this.tenantId = obj.tenantId ? obj.tenantId : null;\n        }\n    }\n}\n\nexport class FilterParamsModel {\n    id: number;\n    name: string;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.index = obj.index;\n        }\n    }\n}\n\nexport class FilterRepresentationModel implements UserTaskFilterRepresentation {\n    id: number;\n    appId: number;\n    name: string;\n    recent: boolean;\n    icon: string;\n    filter: TaskFilterRepresentation;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = new UserTaskFilterRepresentation(obj.filter);\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter() {\n        return this.filter ? true : false;\n    }\n}\n\nexport class TaskQueryRequestRepresentationModel extends TaskQueryRepresentation {\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let taskPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'assignee',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the Form.\n */\nexport class Form {\n\n    id: number;\n    name: string;\n\n    constructor(id: number, name: string) {\n        this.name = name;\n        this.id = id;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the details of a task.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { TaskRepresentation } from '@alfresco/js-api';\nimport { UserGroupModel } from './user-group.model';\n\nexport class TaskDetailsModel implements TaskRepresentation {\n    id?: string;\n    name?: string;\n    assignee?: UserProcessModel;\n    priority?: number;\n    adhocTaskCanBeReassigned?: boolean;\n    category?: string;\n    created?: Date;\n    description?: string;\n    parentName?: string;\n    dueDate?: Date;\n    duration?: number;\n    endDate?: Date;\n    executionId?: string;\n    formKey?: string;\n    initiatorCanCompleteTask?: boolean;\n    managerOfCandidateGroup?: boolean;\n    memberOfCandidateGroup?: boolean;\n    memberOfCandidateUsers?: boolean;\n    involvedGroups?: UserGroupModel [];\n    involvedPeople?: UserProcessModel [];\n    parentTaskId?: string;\n    parentTaskName?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number = 0;\n    processInstanceId?: string;\n    processInstanceName?: string;\n    processInstanceStartUserId?: string;\n    taskDefinitionKey?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.priority = obj.priority;\n            this.assignee = obj.assignee ? new UserProcessModel(obj.assignee) : null;\n            this.adhocTaskCanBeReassigned = obj.adhocTaskCanBeReassigned;\n            this.category = obj.category || null;\n            this.created = obj.created || null;\n            this.description = obj.description || null;\n            this.dueDate = obj.dueDate || null;\n            this.duration = obj.duration || null;\n            this.endDate = obj.endDate || null;\n            this.executionId = obj.executionId || null;\n            this.formKey = obj.formKey || null;\n            this.initiatorCanCompleteTask = !!obj.initiatorCanCompleteTask;\n            this.managerOfCandidateGroup = !!obj.managerOfCandidateGroup;\n            this.memberOfCandidateGroup = !!obj.memberOfCandidateGroup;\n            this.memberOfCandidateUsers = !!obj.memberOfCandidateUsers;\n            this.involvedGroups = obj.involvedGroups;\n            this.involvedPeople = obj.involvedPeople;\n            this.parentTaskId = obj.parentTaskId || null;\n            this.parentTaskName = obj.parentTaskName || null;\n            this.processDefinitionCategory = obj.processDefinitionCategory || null;\n            this.processDefinitionDeploymentId = obj.processDefinitionDeploymentId || null;\n            this.processDefinitionDescription = obj.processDefinitionDescription || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionVersion = obj.processDefinitionVersion || 0;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processInstanceName = obj.processInstanceName || null;\n            this.processInstanceStartUserId = obj.processInstanceStartUserId || null;\n            this.taskDefinitionKey = obj.taskDefinitionKey || null;\n        }\n    }\n\n    getFullName(): string {\n        let fullName: string = '';\n\n        if (this.assignee) {\n            const firstName: string = this.assignee.firstName ? this.assignee.firstName : '';\n            const lastName: string = this.assignee.lastName ? this.assignee.lastName : '';\n            fullName = `${firstName} ${lastName}`;\n        }\n\n        return fullName.trim();\n    }\n\n    isCompleted(): boolean {\n        return !!this.endDate;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskListModel  {\n    size?: number;\n    total?: number;\n    start?: number;\n    length?: number;\n    data?: TaskDetailsModel[] = [];\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            if (input.data) {\n                this.data = input.data.map((item: any) => {\n                    return new TaskDetailsModel(item);\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError, of } from 'rxjs';\nimport { map, catchError, switchMap, flatMap, filter } from 'rxjs/operators';\nimport { FilterRepresentationModel, TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport {\n    TaskQueryRepresentation,\n    AssigneeIdentifierRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskListService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets all the filters in the list that belong to a task.\n     * @param taskId ID of the target task\n     * @param filterList List of filters to search through\n     * @returns Filters belonging to the task\n     */\n    getFilterForTaskById(taskId: string, filterList: FilterRepresentationModel[]): Observable<FilterRepresentationModel> {\n        return from(filterList)\n            .pipe(\n                flatMap((data: FilterRepresentationModel) => this.isTaskRelatedToFilter(taskId, data)),\n                filter((data: FilterRepresentationModel) => data != null)\n            );\n    }\n\n    /**\n     * Gets the search query for a task based on the supplied filter.\n     * @param filter The filter to use\n     * @returns The search query\n     */\n    private generateTaskRequestNodeFromFilter(filterModel: FilterRepresentationModel): TaskQueryRequestRepresentationModel {\n        const requestNode = {\n            appDefinitionId: filterModel.appId,\n            assignment: filterModel.filter.assignment,\n            state: filterModel.filter.state,\n            sort: filterModel.filter.sort\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    /**\n     * Checks if a taskId is filtered with the given filter.\n     * @param taskId ID of the target task\n     * @param filterModel The filter you want to check\n     * @returns The filter if it is related or null otherwise\n     */\n    isTaskRelatedToFilter(taskId: string, filterModel: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        const requestNodeForFilter = this.generateTaskRequestNodeFromFilter(filterModel);\n        return from(this.callApiTasksFiltered(requestNodeForFilter))\n            .pipe(\n                map((res: any) => {\n                    return res.data.find((element) => element.id === taskId) ? filterModel : null;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks matching the supplied query.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    getTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets tasks matching a query and state value.\n     * @param requestNode Query to search for tasks\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findTasksByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTasks(requestNode)\n            .pipe(catchError(() => of(new TaskListModel())));\n    }\n\n    /**\n     * Gets all tasks matching a query and state value.\n     * @param requestNode Query to search for tasks.\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findAllTaskByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTotalTasks(requestNode)\n            .pipe(\n                switchMap((res: any) => {\n                    requestNode.size = res.total;\n                    return this.getTasks(requestNode);\n                })\n            );\n    }\n\n    /**\n     * Gets all tasks matching the supplied query but ignoring the task state.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    findAllTasksWithoutState(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return forkJoin(\n            this.findTasksByState(requestNode, 'open'),\n            this.findAllTaskByState(requestNode, 'completed'),\n            (activeTasks: TaskListModel, completedTasks: TaskListModel) => {\n                const tasks = Object.assign({}, activeTasks);\n                tasks.total += completedTasks.total;\n                tasks.data = tasks.data.concat(completedTasks.data);\n                return tasks;\n            }\n        );\n    }\n\n    /**\n     * Gets details for a task.\n     * @param taskId ID of the target task.\n     * @returns Task details\n     */\n    getTaskDetails(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiTaskDetails(taskId))\n            .pipe(\n                map((details: any) => {\n                    return new TaskDetailsModel(details);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the checklist for a task.\n     * @param id ID of the target task\n     * @returns Array of checklist task details\n     */\n    getTaskChecklist(id: string): Observable<TaskDetailsModel[]> {\n        return from(this.callApiTaskChecklist(id))\n            .pipe(\n                map((response: any) => {\n                    const checklists: TaskDetailsModel[] = [];\n                    response.data.forEach((checklist) => {\n                        checklists.push(new TaskDetailsModel(checklist));\n                    });\n                    return checklists;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all available reusable forms.\n     * @returns Array of form details\n     */\n    getFormList(): Observable<Form[]> {\n        const opts = {\n            'filter': 'myReusableForms', // String | filter\n            'sort': 'modifiedDesc', // String | sort\n            'modelType': 2 // Integer | modelType\n        };\n\n        return from(this.apiService.getInstance().activiti.modelsApi.getModels(opts))\n            .pipe(\n                map((response: any) => {\n                    const forms: Form[] = [];\n                    response.data.forEach((form) => {\n                        forms.push(new Form(form.id, form.name));\n                    });\n                    return forms;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Attaches a form to a task.\n     * @param taskId ID of the target task\n     * @param formId ID of the form to add\n     * @returns Null response notifying when the operation is complete\n     */\n    attachFormToATask(taskId: string, formId: number): Observable<any> {\n        return from(this.apiService.taskApi.attachForm(taskId, { 'formId': formId }))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a subtask (ie, a checklist task) to a parent task.\n     * @param task The task to add\n     * @returns The subtask that was added\n     */\n    addTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiAddTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a subtask (ie, a checklist task) from a parent task.\n     * @param taskId The task to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a form from a task.\n     * @param taskId Task id related to form\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteForm(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteForm(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gives completed status to a task.\n     * @param taskId ID of the target task\n     * @returns Null response notifying when the operation is complete\n     */\n    completeTask(taskId: string) {\n        return from(this.apiService.taskApi.completeTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the total number of the tasks found by a query.\n     * @param requestNode Query to search for tasks\n     * @returns Number of tasks\n     */\n    public getTotalTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<any> {\n        requestNode.size = 0;\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                map((res: any) => {\n                    return res;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Creates a new standalone task.\n     * @param task Details of the new task\n     * @returns Details of the newly created task\n     */\n    createNewTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiCreateTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user or group.\n     * @param taskId The task to assign\n     * @param requestNode User or group to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTask(taskId: string, requestNode: any): Observable<TaskDetailsModel> {\n        const assignee = { assignee: requestNode.id };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user.\n     * @param taskId ID of the task to assign\n     * @param userId ID of the user to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTaskByUserId(taskId: string, userId: string): Observable<TaskDetailsModel> {\n        const assignee = <AssigneeIdentifierRepresentation> { assignee: userId };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Claims a task for the current user.\n     * @param taskId ID of the task to claim\n     * @returns Details of the claimed task\n     */\n    claimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.apiService.taskApi.claimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Un-claims a task for the current user.\n     * @param taskId ID of the task to unclaim\n     * @returns Null response notifying when the operation is complete\n     */\n    unclaimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.apiService.taskApi.unclaimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Updates the details (name, description, due date) for a task.\n     * @param taskId ID of the task to update\n     * @param updated Data to update the task (as a `TaskUpdateRepresentation` instance).\n     * @returns Updated task details\n     */\n    updateTask(taskId: any, updated): Observable<TaskDetailsModel> {\n        return from(this.apiService.taskApi.updateTask(taskId, updated))\n            .pipe(\n                map((result) => <TaskDetailsModel> result),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetches the Task Audit information in PDF format.\n     * @param taskId ID of the target task\n     * @returns Binary PDF data\n     */\n    fetchTaskAuditPdfById(taskId: string): Observable<Blob> {\n        return from(this.apiService.taskApi.getTaskAuditPdf(taskId))\n            .pipe(\n                map((data) => <Blob> data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetch the Task Audit information in JSON format\n     * @param taskId ID of the target task\n     * @returns JSON data\n     */\n    fetchTaskAuditJsonById(taskId: string): Observable<any> {\n        return from(this.apiService.taskApi.getTaskAuditJson(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiTasksFiltered(requestNode: TaskQueryRepresentation): Promise<TaskListModel> {\n        return this.apiService.taskApi.listTasks(requestNode);\n    }\n\n    private callApiTaskDetails(taskId: string): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.getTask(taskId);\n    }\n\n    private callApiAddTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.addSubtask(task.parentTaskId, task);\n    }\n\n    private callApiDeleteTask(taskId: string): Promise<any> {\n        return this.apiService.taskApi.deleteTask(taskId);\n    }\n\n    private callApiDeleteForm(taskId: string): Promise<any> {\n        return this.apiService.taskApi.removeForm(taskId);\n    }\n\n    private callApiTaskChecklist(taskId: string): Promise<TaskListModel> {\n        return this.apiService.taskApi.getChecklist(taskId);\n    }\n\n    private callApiCreateTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.createNewTask(task);\n    }\n\n    private callApiAssignTask(taskId: string, requestNode: AssigneeIdentifierRepresentation): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.assignTask(taskId, requestNode);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRowEvent, DataTableAdapter, DataTableSchema, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective } from '@alfresco/adf-core';\nimport {\n    AppConfigService, PaginationComponent, PaginatedComponent,\n    UserPreferencesService, UserPreferenceValues, PaginationModel } from '@alfresco/adf-core';\nimport {\n    AfterContentInit, Component, ContentChild, EventEmitter,\n    Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport { taskPresetsDefaultModel } from '../models/task-preset.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-tasklist',\n    templateUrl: './task-list.component.html',\n    styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-task-list.presets';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    requestNode: TaskQueryRequestRepresentationModel;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Instance Id of the process. */\n    @Input()\n    processInstanceId: string;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Current state of the process. Possible values are: `completed`, `active`. */\n    @Input()\n    state: string;\n\n    /** The assignment of the process. Possible values are: \"assignee\" (the current user\n     * is the assignee), \"candidate\" (the current user is a task candidate, \"group_x\" (the task\n     * is assigned to a group where the current user is a member,\n     * no value (the current user is involved).\n     */\n    @Input()\n    assignment: string;\n\n    /** Define the sort order of the tasks. Possible values are : `created-desc`,\n     * `created-asc`, `due-desc`, `due-asc`\n     */\n    @Input()\n    sort: string;\n\n    /** Name of the tasklist. */\n    @Input()\n    name: string;\n\n    /** Define which task id should be selected after reloading. If the task id doesn't\n     * exist or nothing is passed then the first task will be selected.\n     */\n    @Input()\n    landingTaskId: string;\n\n    /**\n     * Data source object that represents the number and the type of the columns that\n     * you want to show.\n     */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** The id of a task */\n    @Input()\n    taskId: string;\n\n    /** Toggles inclusion of Process Instances */\n    @Input()\n    includeProcessInstance: boolean;\n\n    /** Starting point of the list within the full set of tasks. */\n    @Input()\n    start: number;\n\n    /** Emitted when a task in the list is clicked */\n    @Output()\n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when rows are selected/unselected */\n    @Output()\n    rowsSelected: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    /** Emitted when the task list is loaded */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    currentInstanceId: string;\n    selectedInstances: any[];\n    pagination: BehaviorSubject<PaginationModel>;\n\n    /** The page number of the tasks to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of tasks to fetch. Default value: 25. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Filter the tasks. Display only tasks with `created_date` after `dueAfter`. */\n    @Input()\n    dueAfter: string;\n\n    /** Filter the tasks. Display only tasks with `created_date` before `dueBefore`. */\n    @Input()\n    dueBefore: string;\n\n    rows: any[] = [];\n    isLoading: boolean = true;\n    sorting: any[] = ['created', 'desc'];\n\n    /**\n     * Toggles custom data source mode.\n     * When enabled the component reloads data from it's current source instead of the server side.\n     * This allows generating and displaying custom data sets (i.e. filtered out content).\n     *\n     * @memberOf TaskListComponent\n     */\n    hasCustomDataSource: boolean = false;\n\n    constructor(private taskListService: TaskListService,\n                appConfigService: AppConfigService,\n                private userPreferences: UserPreferencesService) {\n        super(appConfigService, TaskListComponent.PRESET_KEY, taskPresetsDefaultModel);\n        this.userPreferences.select(UserPreferenceValues.PaginationSize).subscribe((pageSize) => {\n            this.size = pageSize;\n        });\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId) {\n            this.reload();\n        }\n    }\n\n    setCustomDataSource(rows: any[]): void {\n        if (rows) {\n            this.rows = rows;\n            this.hasCustomDataSource = true;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = true;\n\n        const landingTaskId = changes['landingTaskId'];\n        const page = changes['page'];\n        const size = changes['size'];\n        if (landingTaskId && landingTaskId.currentValue && this.isEqualToCurrentId(landingTaskId.currentValue)) {\n            changed = false;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n\n        return changed;\n    }\n\n    reload(): void {\n        if (!this.hasCustomDataSource) {\n            this.requestNode = this.createRequestNode();\n            this.load(this.requestNode);\n        } else {\n            this.isLoading = false;\n        }\n    }\n\n    private load(requestNode: TaskQueryRequestRepresentationModel) {\n        this.isLoading = true;\n        this.loadTasksByState().subscribe(\n            (tasks) => {\n                this.rows = this.optimizeTaskDetails(tasks.data);\n                this.selectTask(this.landingTaskId);\n                this.success.emit(tasks);\n                this.isLoading = false;\n                this.pagination.next({\n                    count: tasks.data.length,\n                    maxItems: this.size,\n                    skipCount: this.page * this.size,\n                    totalItems: tasks.total\n                });\n            }, (error) => {\n                this.error.emit(error);\n                this.isLoading = false;\n            });\n    }\n\n    private loadTasksByState(): Observable<TaskListModel> {\n        return this.requestNode.state === 'all'\n            ? this.taskListService.findAllTasksWithoutState(this.requestNode)\n            : this.taskListService.findTasksByState(this.requestNode);\n    }\n\n    /**\n     * Select the task given in input if present\n     */\n    selectTask(taskIdSelected: string): void {\n        if (!this.isListEmpty()) {\n            let dataRow = null;\n            if (taskIdSelected) {\n                dataRow = this.rows.find((currentRow: any) => {\n                    return currentRow['id'] === taskIdSelected;\n                });\n            }\n            if (!dataRow && this.selectFirstRow) {\n                dataRow = this.rows[0];\n            }\n            if (dataRow) {\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            }\n        } else {\n            this.currentInstanceId = null;\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the taskId is the same of the selected task\n     * @param taskId\n     */\n    isEqualToCurrentId(taskId: string): boolean {\n        return this.currentInstanceId === taskId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    onRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    onRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    /**\n     * Optimize name field\n     * @param instances\n     */\n    private optimizeTaskDetails(instances: any[]): any[] {\n        instances = instances.map((task) => {\n            if (!task.name) {\n                task.name = 'No name';\n            }\n            return task;\n        });\n        return instances;\n    }\n\n    private createRequestNode() {\n\n        const requestNode = {\n            appDefinitionId: this.appId,\n            dueAfter: this.dueAfter ? moment(this.dueAfter).toDate() : null,\n            dueBefore: this.dueBefore ? moment(this.dueBefore).toDate() : null,\n            processInstanceId: this.processInstanceId,\n            processDefinitionId: this.processDefinitionId,\n            text: this.name,\n            assignment: this.assignment,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: this.start,\n            taskId: this.taskId,\n            includeProcessInstance: this.includeProcessInstance\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\n\n@Component({\n    selector: 'adf-checklist',\n    templateUrl: './checklist.component.html',\n    styleUrls: ['./checklist.component.scss']\n})\nexport class ChecklistComponent implements OnChanges {\n\n    /** (required) The id of the parent task to which subtasks are\n     * attached.\n     */\n    @Input()\n    taskId: string;\n\n    /** Toggle readonly state of the form. All form widgets\n     * will render as readonly if enabled.\n     */\n    @Input()\n    readOnly: boolean = false;\n\n    /** (required) The assignee id that the subtasks are assigned to. */\n    @Input()\n    assignee: string;\n\n    /** Emitted when a new checklist task is created. */\n    @Output()\n    checklistTaskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    checklistTaskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('dialog')\n    addNewDialog: any;\n\n    taskName: string;\n\n    checklist: TaskDetailsModel [] = [];\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     */\n    constructor(private activitiTaskList: TaskListService,\n                private dialog: MatDialog) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getTaskChecklist(taskId.currentValue);\n            return;\n        }\n    }\n\n    public getTaskChecklist(taskId: string) {\n        this.checklist = [];\n        if (this.taskId) {\n            this.activitiTaskList.getTaskChecklist(this.taskId).subscribe(\n                (taskDetailsModel: TaskDetailsModel[]) => {\n                    taskDetailsModel.forEach((task) => {\n                        this.checklist.push(task);\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n        } else {\n            this.checklist = [];\n        }\n    }\n\n    showDialog() {\n        this.dialog.open(this.addNewDialog, { width: '350px' });\n    }\n\n    public add() {\n        const newTask = new TaskDetailsModel({\n            name: this.taskName,\n            parentTaskId: this.taskId,\n            assignee: { id: this.assignee }\n        });\n        this.activitiTaskList.addTask(newTask).subscribe(\n            (taskDetailsModel: TaskDetailsModel) => {\n                this.checklist.push(taskDetailsModel);\n                this.checklistTaskCreated.emit(taskDetailsModel);\n                this.taskName = '';\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n        this.cancel();\n    }\n\n    public delete(taskId: string) {\n        this.activitiTaskList.deleteTask(taskId).subscribe(\n            () => {\n                this.checklist = this.checklist.filter((check) => check.id !== taskId);\n                this.checklistTaskDeleted.emit(taskId);\n            },\n            (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    public cancel() {\n        this.dialog.closeAll();\n        this.taskName = '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '@alfresco/adf-core';\n\nexport class TaskDescriptionValidator implements CardViewItemValidator {\n\n    message: string = 'ADF_CLOUD_TASK_HEADER.FORM_VALIDATION.INVALID_FIELD';\n\n    isValid(value: any): boolean {\n        const isWhitespace = (value || '').trim().length === 0;\n        return value.length === 0 || !isWhitespace;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport {\n    BpmUserService,\n    CardViewDateItemModel,\n    CardViewItem,\n    CardViewMapItemModel,\n    CardViewTextItemModel,\n    CardViewBaseItemModel,\n    LogService,\n    TranslationService,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { TaskDescriptionValidator } from '../validators/task-description.validator';\n\n@Component({\n    selector: 'adf-task-header',\n    templateUrl: './task-header.component.html',\n    styleUrls: ['./task-header.component.scss']\n})\nexport class TaskHeaderComponent implements OnChanges, OnInit {\n\n    /** The name of the form. */\n    @Input()\n    formName: string = null;\n\n    /** (required) Details related to the task. */\n    @Input()\n    taskDetails: TaskDetailsModel;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    claim: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task is unclaimed (ie, requeued). */\n    @Output()\n    unclaim: EventEmitter<any> = new EventEmitter<any>();\n\n    private currentUserId: number;\n\n    properties: CardViewItem [];\n    inEdit: boolean = false;\n\n    constructor(private activitiTaskService: TaskListService,\n                private bpmUserService: BpmUserService,\n                private translationService: TranslationService,\n                private logService: LogService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        this.loadCurrentBpmUserId();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.refreshData();\n    }\n\n    private initDefaultProperties(parentInfoMap) {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n                    value: this.taskDetails.getFullName(),\n                    key: 'assignee',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.ASSIGNEE_DEFAULT'),\n                    clickable: !this.isCompleted(),\n                    icon: 'create'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.STATUS',\n                    value: this.getTaskStatus(),\n                    key: 'status'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PRIORITY',\n                    value: this.taskDetails.priority,\n                    key: 'priority',\n                    editable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DUE_DATE',\n                    value: this.taskDetails.dueDate,\n                    key: 'dueDate',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DUE_DATE_DEFAULT'),\n                    editable: true\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CATEGORY',\n                    value: this.taskDetails.category,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }\n            ),\n            new CardViewMapItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_NAME',\n                    value: parentInfoMap,\n                    key: 'parentName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.PARENT_NAME_DEFAULT'),\n                    clickable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CREATED',\n                    value: this.taskDetails.created,\n                    key: 'created'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DURATION',\n                    value: this.getTaskDuration(),\n                    key: 'duration'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_TASK_ID',\n                    value: this.taskDetails.parentTaskId,\n                    key: 'parentTaskId'\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.END_DATE',\n                    value: this.taskDetails.endDate,\n                    key: 'endDate'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ID',\n                    value: this.taskDetails.id,\n                    key: 'id'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DESCRIPTION',\n                    value: this.taskDetails.description,\n                    key: 'description',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DESCRIPTION_DEFAULT'),\n                    multiline: true,\n                    editable: true,\n                    validators: [new TaskDescriptionValidator()]\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                    value: this.formName,\n                    key: 'formName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'),\n                    clickable: !!this.formName,\n                    icon: 'create'\n                }\n            )\n        ];\n    }\n\n    /**\n     * Refresh the card data\n     */\n    refreshData() {\n        if (this.taskDetails) {\n            const parentInfoMap = this.getParentInfo();\n            const defaultProperties = this.initDefaultProperties(parentInfoMap);\n            const filteredProperties: string[] = this.appConfig.get('adf-task-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    /**\n     * Loads current bpm userId\n     */\n    private loadCurrentBpmUserId(): void {\n        this.bpmUserService.getCurrentUserInfo().subscribe((res) => {\n            this.currentUserId = res ? +res.id : null;\n        });\n    }\n\n    /**\n     * Return the process parent information\n     */\n    getParentInfo() {\n        if (this.taskDetails.processInstanceId && this.taskDetails.processDefinitionName) {\n            return new Map([[this.taskDetails.processInstanceId, this.taskDetails.processDefinitionName]]);\n        }\n    }\n\n    /**\n     * Does the task have an assignee\n     */\n    public hasAssignee(): boolean {\n        return !!this.taskDetails.assignee ? true : false;\n    }\n\n    /**\n     * Returns true if the task is assigned to logged in user\n     */\n    public isAssignedTo(userId): boolean {\n        return this.hasAssignee() ? this.taskDetails.assignee.id === userId : false;\n    }\n\n    /**\n     * Return true if the task assigned\n     */\n    public isAssignedToCurrentUser(): boolean {\n        return this.hasAssignee() && this.isAssignedTo(this.currentUserId);\n    }\n\n    /**\n     * Return true if the user is a candidate member\n     */\n    isCandidateMember() {\n        return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n    }\n\n    /**\n     * Return true if the task claimable\n     */\n    public isTaskClaimable(): boolean {\n        return !this.hasAssignee() && this.isCandidateMember();\n    }\n\n    /**\n     * Return true if the task claimed by candidate member.\n     */\n    public isTaskClaimedByCandidateMember(): boolean {\n        return this.isCandidateMember() && this.isAssignedToCurrentUser() && !this.isCompleted();\n    }\n\n    /**\n     * Returns task's status\n     */\n    getTaskStatus(): string {\n        return (this.taskDetails && this.taskDetails.isCompleted()) ? 'Completed' : 'Running';\n    }\n\n    /**\n     * Claim task\n     *\n     * @param taskId\n     */\n    claimTask(taskId: string) {\n        this.activitiTaskService.claimTask(taskId).subscribe(\n            (res: any) => {\n                this.logService.info('Task claimed');\n                this.claim.emit(taskId);\n            });\n    }\n\n    /**\n     * Unclaim task\n     *\n     * @param taskId\n     */\n    unclaimTask(taskId: string) {\n        this.activitiTaskService.unclaimTask(taskId).subscribe(\n            (res: any) => {\n                this.logService.info('Task unclaimed');\n                this.unclaim.emit(taskId);\n            });\n    }\n\n    /**\n     * Returns true if the task is completed\n     */\n    isCompleted(): boolean {\n        return this.taskDetails && !!this.taskDetails.endDate;\n    }\n\n    getTaskDuration(): string {\n        return this.taskDetails.duration ? `${this.taskDetails.duration} ms` : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PeopleProcessService, UserProcessModel } from '@alfresco/adf-core';\nimport {\n    AuthenticationService,\n    CardViewUpdateService,\n    ClickNotification,\n    LogService,\n    UpdateNotification,\n    CommentsComponent\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Observable, Observer } from 'rxjs';\nimport { ContentLinkModel, FormFieldValidator, FormModel, FormOutcomeEvent } from '@alfresco/adf-core';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-task-details',\n    templateUrl: './task-details.component.html',\n    styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit, OnChanges {\n\n    @ViewChild('activitiComments')\n    activitiComments: CommentsComponent;\n\n    @ViewChild('activitiChecklist')\n    activitiChecklist: any;\n\n    @ViewChild('errorDialog')\n    errorDialog: TemplateRef<any>;\n\n    /** Toggles debug mode. */\n    @Input()\n    debugMode: boolean = false;\n\n    /** (**required**) The id of the task whose details we are asking for. */\n    @Input()\n    taskId: string;\n\n    /** Automatically renders the next task when the current one is completed. */\n    @Input()\n    showNextTask: boolean = true;\n\n    /** Toggles task details Header component. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles collapsed/expanded state of the Header component. */\n    @Input()\n    showHeaderContent: boolean = true;\n\n    /** Toggles `Involve People` feature for the Header component. */\n    @Input()\n    showInvolvePeople: boolean = true;\n\n    /** Toggles `Comments` feature for the Header component. */\n    @Input()\n    showComments: boolean = true;\n\n    /** Toggles `Checklist` feature for the Header component. */\n    @Input()\n    showChecklist: boolean = true;\n\n    /** Toggles rendering of the form title. */\n    @Input()\n    showFormTitle: boolean = false;\n\n    /** Toggles rendering of the `Complete` outcome button. */\n    @Input()\n    showFormCompleteButton: boolean = true;\n\n    /** Toggles rendering of the `Save` outcome button. */\n    @Input()\n    showFormSaveButton: boolean = true;\n\n    /** Toggles read-only state of the form. All form widgets render as read-only\n     * if enabled.\n     */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Toggles rendering of the `Refresh` button. */\n    @Input()\n    showFormRefreshButton: boolean = true;\n\n    /** Field validators for use with the form. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form field content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when a checklist task is created. */\n    @Output()\n    taskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    taskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /** Emitted when a task is assigned. */\n    @Output()\n    assignTask: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when a task is claimed. */\n    @Output()\n    claimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when a task is unclaimed. */\n    @Output()\n    unClaimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    taskDetails: TaskDetailsModel;\n    taskFormName: string = null;\n\n    taskPeople: UserProcessModel[] = [];\n\n    noTaskDetailsTemplateComponent: TemplateRef<any>;\n\n    showAssignee: boolean = false;\n    showAttachForm: boolean = false;\n    internalReadOnlyForm: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    public errorDialogRef: MatDialogRef<TemplateRef<any>>;\n\n    peopleSearch: Observable<UserProcessModel[]>;\n\n    currentLoggedUser: UserRepresentation;\n    data: any;\n\n    constructor(private taskListService: TaskListService,\n                private authService: AuthenticationService,\n                private peopleProcessService: PeopleProcessService,\n                private logService: LogService,\n                private cardViewUpdateService: CardViewUpdateService,\n                private dialog: MatDialog) {\n\n        this.peopleSearch = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer)\n            .pipe(share());\n        this.authService.getBpmLoggedUser().subscribe((user: UserRepresentation) => {\n            this.currentLoggedUser = user;\n        });\n    }\n\n    ngOnInit() {\n        if (this.taskId) {\n            this.loadDetails(this.taskId);\n        }\n\n        this.cardViewUpdateService.itemUpdated$.subscribe(this.updateTaskDetails.bind(this));\n        this.cardViewUpdateService.itemClicked$.subscribe(this.clickTaskDetails.bind(this));\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const taskId = changes.taskId;\n        this.showAssignee = false;\n\n        if (taskId && !taskId.currentValue) {\n            this.reset();\n        } else if (taskId && taskId.currentValue) {\n            this.loadDetails(taskId.currentValue);\n        }\n    }\n\n    isStandaloneTask(): boolean {\n        return !(this.taskDetails && (!!this.taskDetails.processDefinitionId));\n    }\n\n    isStandaloneTaskWithForm(): boolean {\n        return this.isStandaloneTask() && this.hasFormKey();\n    }\n\n    isStandaloneTaskWithoutForm(): boolean {\n        return this.isStandaloneTask() && !this.hasFormKey();\n    }\n\n    isFormComponentVisible(): boolean {\n        return this.hasFormKey() && !this.isShowAttachForm();\n    }\n\n    isTaskStandaloneComponentVisible(): boolean {\n        return this.isStandaloneTaskWithoutForm() && !this.isShowAttachForm();\n    }\n\n    isShowAttachForm(): boolean {\n        return this.showAttachForm;\n    }\n\n    /**\n     * Reset the task details\n     */\n    private reset() {\n        this.taskDetails = null;\n    }\n\n    /**\n     * Check if the task has a form\n     */\n    hasFormKey(): boolean {\n        return (this.taskDetails && (!!this.taskDetails.formKey));\n    }\n\n    isTaskActive() {\n        return this.taskDetails && this.taskDetails.duration === null;\n    }\n\n    /**\n     * Save a task detail and update it after a successful response\n     *\n     * @param updateNotification\n     */\n    private updateTaskDetails(updateNotification: UpdateNotification) {\n        this.taskListService.updateTask(this.taskId, updateNotification.changed)\n            .subscribe(\n                () => {\n                    this.loadDetails(this.taskId);\n                }\n            );\n    }\n\n    private clickTaskDetails(clickNotification: ClickNotification) {\n        if (clickNotification.target.key === 'assignee') {\n            this.showAssignee = true;\n        }\n        if (clickNotification.target.key === 'formName') {\n            this.showAttachForm = true;\n        }\n    }\n\n    /**\n     * Load the activiti task details\n     * @param taskId\n     */\n    private loadDetails(taskId: string) {\n        this.taskPeople = [];\n        this.taskFormName = null;\n\n        if (taskId) {\n            this.taskListService.getTaskDetails(taskId).subscribe(\n                (res: TaskDetailsModel) => {\n                    this.showAttachForm = false;\n                    this.taskDetails = res;\n\n                    if (this.taskDetails.name === 'null') {\n                        this.taskDetails.name = 'No name';\n                    }\n\n                    const endDate: any = res.endDate;\n                    if (endDate && !isNaN(endDate.getTime())) {\n                        this.internalReadOnlyForm = true;\n                    } else {\n                        this.internalReadOnlyForm = this.readOnlyForm;\n                    }\n\n                    if (this.taskDetails && this.taskDetails.involvedPeople) {\n                        this.taskDetails.involvedPeople.forEach((user) => {\n                            this.taskPeople.push(new UserProcessModel(user));\n                        });\n                    }\n                });\n        }\n    }\n\n    isAssigned(): boolean {\n        return !!this.taskDetails.assignee;\n    }\n\n    private hasEmailAddress(): boolean {\n        return this.taskDetails.assignee.email ? true : false;\n    }\n\n    isAssignedToMe(): boolean {\n        return this.isAssigned() && this.hasEmailAddress() ?\n            this.isEmailEqual(this.taskDetails.assignee.email, this.currentLoggedUser.email) :\n            this.isExternalIdEqual(this.taskDetails.assignee.externalId, this.currentLoggedUser.externalId);\n    }\n\n    private isEmailEqual(assigneeMail, currentLoggedEmail): boolean {\n        return assigneeMail.toLocaleLowerCase() === currentLoggedEmail.toLocaleLowerCase();\n    }\n\n    private isExternalIdEqual(assigneeExternalId, currentUserExternalId): boolean {\n        return assigneeExternalId.toLocaleLowerCase() === currentUserExternalId.toLocaleLowerCase();\n    }\n\n    isCompleteButtonEnabled(): boolean {\n        return this.isAssignedToMe() || this.canInitiatorComplete();\n    }\n\n    isCompleteButtonVisible(): boolean {\n        return !this.hasFormKey() && this.isTaskActive() && this.isCompleteButtonEnabled();\n    }\n\n    canInitiatorComplete(): boolean {\n        return this.taskDetails.initiatorCanCompleteTask;\n    }\n\n    isSaveButtonVisible(): boolean {\n        return this.hasSaveButton() && (!this.canInitiatorComplete() || this.isAssignedToMe());\n    }\n\n    hasSaveButton(): boolean {\n        return this.showFormSaveButton;\n    }\n\n    /**\n     * Retrieve the next open task\n     * @param processInstanceId\n     * @param processDefinitionId\n     */\n    private loadNextTask(processInstanceId: string, processDefinitionId: string): void {\n        const requestNode = new TaskQueryRequestRepresentationModel(\n            {\n                processInstanceId: processInstanceId,\n                processDefinitionId: processDefinitionId\n            }\n        );\n        this.taskListService.getTasks(requestNode).subscribe(\n            (response) => {\n                if (response && response.length > 0) {\n                    this.taskDetails = new TaskDetailsModel(response[0]);\n                } else {\n                    this.reset();\n                }\n            }, (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    /**\n     * Complete button clicked\n     */\n    onComplete(): void {\n        this.taskListService.completeTask(this.taskId).subscribe(\n            (res) => this.onFormCompleted(null)\n        );\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm = true;\n    }\n\n    onCancelAttachForm() {\n        this.showAttachForm = false;\n    }\n\n    onCompleteAttachForm() {\n        this.showAttachForm = false;\n        this.loadDetails(this.taskId);\n    }\n\n    onFormContentClick(content: ContentLinkModel): void {\n        this.formContentClicked.emit(content);\n    }\n\n    onFormSaved(form: FormModel): void {\n        this.formSaved.emit(form);\n    }\n\n    onFormCompleted(form: FormModel): void {\n        this.formCompleted.emit(form);\n        if (this.showNextTask && (this.taskDetails.processInstanceId || this.taskDetails.processDefinitionId)) {\n            this.loadNextTask(this.taskDetails.processInstanceId, this.taskDetails.processDefinitionId);\n        }\n    }\n\n    onFormLoaded(form: FormModel): void {\n        this.taskFormName = (form && form.name ? form.name : null);\n        this.formLoaded.emit(form);\n    }\n\n    onChecklistTaskCreated(task: TaskDetailsModel): void {\n        this.taskCreated.emit(task);\n    }\n\n    onChecklistTaskDeleted(taskId: string): void {\n        this.taskDeleted.emit(taskId);\n    }\n\n    onFormError(error: any): void {\n        this.errorDialogRef = this.dialog.open(this.errorDialog, { width: '500px' });\n        this.error.emit(error);\n    }\n\n    onFormExecuteOutcome(event: FormOutcomeEvent): void {\n        this.executeOutcome.emit(event);\n    }\n\n    closeErrorDialog(): void {\n        this.dialog.closeAll();\n    }\n\n    onClaimAction(taskId: string): void {\n        this.claimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    onUnclaimAction(taskId: string): void {\n        this.unClaimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    isCompletedTask(): boolean {\n        return this.taskDetails && this.taskDetails.endDate ? true : undefined;\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(null, searchedWord)\n            .subscribe((users) => {\n                users = users.filter((user) => user.id !== this.taskDetails.assignee.id);\n                this.peopleSearchObserver.next(users);\n            }, (error) => this.logService.error('Could not load users'));\n    }\n\n    onCloseSearch() {\n        this.showAssignee = false;\n    }\n\n    assignTaskToUser(selectedUser: UserProcessModel) {\n        this.taskListService.assignTask(this.taskDetails.id, selectedUser).subscribe(\n            (res: any) => {\n                this.logService.info('Task Assigned to ' + selectedUser.email);\n                this.assignTask.emit();\n            });\n        this.showAssignee = false;\n    }\n\n    getTaskHeaderViewClass(): string {\n        if (this.showAssignee) {\n            return 'assign-edit-view';\n        } else {\n            return 'default-view';\n        }\n    }\n\n    isReadOnlyComment(): boolean {\n        return (this.taskDetails && this.taskDetails.isCompleted()) && (this.taskPeople && this.taskPeople.length === 0);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { TaskDetailsComponent } from './task-details.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-task-details-template, no-task-details-template'\n})\nexport class NoTaskDetailsTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private activitiTaskDetails: TaskDetailsComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.activitiTaskDetails.noTaskDetailsTemplateComponent = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, forkJoin, from, throwError } from 'rxjs';\nimport { FilterRepresentationModel } from '../models/filter.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFilterService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates and returns the default filters for a process app.\n     * @param appId ID of the target app\n     * @returns Array of default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterRepresentationModel[]> {\n        const involvedTasksFilter = this.getInvolvedTasksFilterInstance(appId);\n        const involvedObservable = this.addFilter(involvedTasksFilter);\n\n        const myTasksFilter = this.getMyTasksFilterInstance(appId);\n        const myTaskObservable = this.addFilter(myTasksFilter);\n\n        const queuedTasksFilter = this.getQueuedTasksFilterInstance(appId);\n        const queuedObservable = this.addFilter(queuedTasksFilter);\n\n        const completedTasksFilter = this.getCompletedTasksFilterInstance(appId);\n        const completeObservable = this.addFilter(completedTasksFilter);\n\n        return new Observable((observer) => {\n            forkJoin(\n                involvedObservable,\n                myTaskObservable,\n                queuedObservable,\n                completeObservable\n            ).subscribe(\n                (res) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === involvedTasksFilter.name) {\n                            involvedTasksFilter.id = filter.id;\n                            filters.push(involvedTasksFilter);\n                        } else if (filter.name === myTasksFilter.name) {\n                            myTasksFilter.id = filter.id;\n                            filters.push(myTasksFilter);\n                        } else if (filter.name === queuedTasksFilter.name) {\n                            queuedTasksFilter.id = filter.id;\n                            filters.push(queuedTasksFilter);\n                        } else if (filter.name === completedTasksFilter.name) {\n                            completedTasksFilter.id = filter.id;\n                            filters.push(completedTasksFilter);\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.logService.error(err);\n                });\n        });\n    }\n\n    /**\n     * Gets all task filters for a process app.\n     * @param appId Optional ID for a specific app\n     * @returns Array of task filter details\n     */\n    getTaskListFilters(appId?: number): Observable<FilterRepresentationModel[]> {\n        return from(this.callApiTaskFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    response.data.forEach((filter: FilterRepresentationModel) => {\n                        const filterModel = new FilterRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterById(filterId: number, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.id === filterId)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a task filter by name.\n     * @param taskName Name of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterByName(taskName: string, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.name === taskName)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Adds a new task filter\n     * @param filter The new filter to add\n     * @returns Details of task filter just added\n     */\n    addFilter(filter: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        return from(this.apiService.getInstance().activiti.userFiltersApi.createUserTaskFilter(filter))\n            .pipe(\n                map((response: FilterRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserTaskFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of task filters\n     */\n    callApiTaskFilters(appId?: number): Promise<any> {\n        if (appId) {\n            return this.apiService.getInstance().activiti.userFiltersApi.getUserTaskFilters({appId: appId});\n        } else {\n            return this.apiService.getInstance().activiti.userFiltersApi.getUserTaskFilters();\n        }\n    }\n\n    /**\n     * Creates and returns a filter for \"Involved\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getInvolvedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Involved Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-align-left',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'involved'}\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"My Tasks\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getMyTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'My Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-inbox',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'assignee'}\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Queued Tasks\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getQueuedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Queued Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-record',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'candidate'}\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Completed\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getCompletedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Completed Tasks',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-ok-sign',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'completed', 'assignment': 'involved'}\n        });\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilterParamsModel, FilterRepresentationModel } from '../models/filter.model';\nimport { TaskFilterService } from './../services/task-filter.service';\nimport { TaskListService } from './../services/tasklist.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-task-filters',\n    templateUrl: './task-filters.component.html',\n    styleUrls: ['task-filters.component.scss']\n})\nexport class TaskFiltersComponent implements OnInit, OnChanges {\n\n    /** Parameters to use for the task filter. If there is no match then\n     * the default filter (the first one the list) is selected.\n     */\n    @Input()\n    filterParam: FilterParamsModel;\n\n    /** Emitted when a filter in the list is clicked. */\n    @Output()\n    filterClick: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    /** Emitted when the list is loaded. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs during loading. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggles display of the filter's icon. */\n    @Input()\n    showIcon: boolean;\n\n    filter$: Observable<FilterRepresentationModel>;\n\n    currentFilter: FilterRepresentationModel;\n\n    filters: FilterRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    constructor(private taskFilterService: TaskFilterService,\n                private taskListService: TaskListService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const appId = changes['appId'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (appId && appId.currentValue !== appId.previousValue) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilter(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the task list filtered by appId or by appName\n     * @param appId\n     * @param appName\n     */\n    getFilters(appId?: number, appName?: string) {\n        appName ? this.getFiltersByAppName(appName) : this.getFiltersByAppId(appId);\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.taskFilterService.getTaskListFilters(appId).subscribe(\n            (res: FilterRepresentationModel[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.createFiltersByAppId(appId);\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Create default filters by appId\n     * @param appId\n     */\n    createFiltersByAppId(appId?: number) {\n        this.taskFilterService.createDefaultFilters(appId).subscribe(\n            (resDefault: FilterRepresentationModel[]) => {\n                this.resetFilter();\n                this.filters = resDefault;\n                this.selectFilter(this.filterParam);\n                this.success.emit(resDefault);\n            },\n            (errDefault: any) => {\n                this.error.emit(errDefault);\n            }\n        );\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param filter\n     */\n    public selectFilter(newFilter: FilterParamsModel) {\n        if (newFilter) {\n            this.currentFilter = this.filters.find( (filter, index) =>\n                newFilter.index === index ||\n                newFilter.id === filter.id ||\n                (newFilter.name &&\n                    (newFilter.name.toLocaleLowerCase() === filter.name.toLocaleLowerCase())\n                ));\n        }\n        if (!this.currentFilter) {\n            this.selectDefaultTaskFilter();\n        }\n    }\n\n    public selectFilterAndEmit(newFilter: FilterParamsModel) {\n        this.selectFilter(newFilter);\n        this.filterClick.emit(this.currentFilter);\n    }\n\n    /**\n     * Select filter with task\n     * @param taskId\n     */\n    public selectFilterWithTask(taskId: string) {\n        const filteredFilterList: FilterRepresentationModel[] = [];\n        this.taskListService.getFilterForTaskById(taskId, this.filters).subscribe(\n            (filter: FilterRepresentationModel) => {\n                filteredFilterList.push(filter);\n            },\n            (err) => {\n                this.error.emit(err);\n            },\n            () => {\n                if (filteredFilterList.length > 0) {\n                    this.selectFilter(filteredFilterList[0]);\n                    this.filterClick.emit(this.currentFilter);\n                }\n            });\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     * @param filteredFilterList\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): FilterRepresentationModel {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { TaskListService } from './../services/tasklist.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    selector: 'button[adf-task-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class TaskAuditDirective implements OnChanges {\n\n    /** (**required**) The id of the task. */\n    @Input('task-id')\n    taskId: string;\n\n    /** Name of the downloaded file (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format of the audit information. Can be \"pdf\" or \"json\". */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit when the decorated element is clicked. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    public audit: any;\n\n    /**\n     *\n     * @param translateService\n     * @param taskListService\n     */\n    constructor(private contentService: ContentService,\n                private taskListService: TaskListService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType() {\n        if (this.format && (this.isJsonFormat() || this.isPdfFormat())) {\n            return true;\n        }\n        return false;\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.taskListService.fetchTaskAuditPdfById(this.taskId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.taskListService.fetchTaskAuditJsonById(this.taskId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService, UserPreferencesService, UserPreferenceValues, UserProcessModel, FormFieldModel, FormModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MOMENT_DATE_FORMATS, MomentDateAdapter } from '@alfresco/adf-core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Observable, of } from 'rxjs';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { switchMap, defaultIfEmpty } from 'rxjs/operators';\nimport { FormBuilder, AbstractControl, Validators, FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'adf-start-task',\n    templateUrl: './start-task.component.html',\n    styleUrls: ['./start-task.component.scss'],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartTaskComponent implements OnInit {\n\n    public FORMAT_DATE: string = 'DD/MM/YYYY';\n    MAX_LENGTH: number = 255;\n\n    /** (required) The id of the app. */\n    @Input()\n    appId: number;\n\n    /** Default Task Name. */\n    @Input()\n    name: string = '';\n\n    /** Emitted when the task is successfully created. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the cancel button is clicked by the user. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    taskDetailsModel: TaskDetailsModel = new TaskDetailsModel();\n    forms$: Observable<Form[]>;\n    assigneeId: number;\n    field: FormFieldModel;\n    taskForm: FormGroup;\n    dateError: boolean = false;\n    maxTaskNameLength: number = this.MAX_LENGTH;\n    loading = false;\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     * @param taskService\n     */\n    constructor(private taskService: TaskListService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private formBuilder: FormBuilder,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.name) {\n            this.taskDetailsModel.name = this.name;\n        }\n\n        this.validateMaxTaskNameLength();\n\n        this.field = new FormFieldModel(new FormModel(), { id: this.assigneeId, value: this.assigneeId, placeholder: 'Assignee' });\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        this.loadFormsTask();\n        this.buildForm();\n    }\n\n    buildForm() {\n        this.taskForm = this.formBuilder.group({\n            name: new FormControl(this.taskDetailsModel.name, [Validators.required, Validators.maxLength(this.maxTaskNameLength), this.whitespaceValidator]),\n            description: new FormControl('', [this.whitespaceValidator]),\n            formKey: new FormControl('')\n        });\n\n        this.taskForm.valueChanges.subscribe((taskFormValues) => this.setTaskDetails(taskFormValues));\n    }\n\n    public whitespaceValidator(control: FormControl) {\n        if (control.value) {\n            const isWhitespace = (control.value || '').trim().length === 0;\n            const isValid =  control.value.length === 0 || !isWhitespace;\n            return isValid ? null : { 'whitespace': true };\n        }\n    }\n\n    setTaskDetails(form) {\n        this.taskDetailsModel.name = form.name;\n        this.taskDetailsModel.description = form.description;\n        this.taskDetailsModel.formKey = form.formKey ? form.formKey.toString() : null;\n    }\n\n    isFormValid() {\n        return this.taskForm.valid && !this.dateError && !this.loading;\n    }\n\n    public saveTask(): void {\n        this.loading = true;\n        if (this.appId) {\n            this.taskDetailsModel.category = this.appId.toString();\n        }\n        this.taskService.createNewTask(this.taskDetailsModel)\n            .pipe(\n                switchMap((createRes: any) =>\n                    this.attachForm(createRes.id, this.taskDetailsModel.formKey).pipe(\n                        defaultIfEmpty(createRes),\n                        switchMap((attachRes: any) =>\n                            this.assignTaskByUserId(createRes.id, this.assigneeId).pipe(\n                                defaultIfEmpty(attachRes ? attachRes : createRes)\n                            )\n                        )\n                    )\n                )\n            )\n            .subscribe(\n                (res: any) => {\n                    this.loading = false;\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.loading = false;\n                    this.error.emit(err);\n                    this.logService.error('An error occurred while creating new task');\n                });\n    }\n\n    getAssigneeId(userId) {\n        this.assigneeId = userId;\n    }\n\n    private attachForm(taskId: string, formKey: string): Observable<any> {\n        let response = of();\n        if (taskId && formKey) {\n            response = this.taskService.attachFormToATask(taskId, parseInt(formKey, 10));\n        }\n        return response;\n    }\n\n    private assignTaskByUserId(taskId: string, userId: any): Observable<any> {\n        let response = of();\n        if (taskId && userId) {\n            response = this.taskService.assignTaskByUserId(taskId, userId);\n        }\n        return response;\n    }\n\n    public onCancel(): void {\n        this.cancel.emit();\n    }\n\n    private loadFormsTask(): void {\n        this.forms$ = this.taskService.getFormList();\n    }\n\n    public isUserNameEmpty(user: UserProcessModel): boolean {\n        return !user || (this.isEmpty(user.firstName) && this.isEmpty(user.lastName));\n    }\n\n    private isEmpty(data: string): boolean {\n        return data === undefined || data === null || data.trim().length === 0;\n    }\n\n    public getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    onDateChanged(newDateValue: any) {\n        this.dateError = false;\n\n        if (newDateValue) {\n            let momentDate;\n\n            if (typeof newDateValue === 'string') {\n                momentDate = moment(newDateValue, this.FORMAT_DATE, true);\n            } else {\n                momentDate = newDateValue;\n            }\n\n            if (momentDate.isValid()) {\n                this.taskDetailsModel.dueDate = momentDate.toDate();\n            } else {\n                this.dateError = true;\n                this.taskDetailsModel.dueDate = null;\n            }\n        } else {\n            this.taskDetailsModel.dueDate = null;\n        }\n    }\n\n    private validateMaxTaskNameLength() {\n        if (this.maxTaskNameLength > this.MAX_LENGTH) {\n            this.maxTaskNameLength = this.MAX_LENGTH;\n            this.logService.log(`the task name length cannot be greater than ${this.MAX_LENGTH}`);\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.taskForm.get('name');\n    }\n\n    get descriptionController(): AbstractControl {\n        return this.taskForm.get('description');\n    }\n\n    get formKeyController(): AbstractControl {\n        return this.taskForm.get('formKey');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-task-standalone',\n    templateUrl: './task-standalone.component.html',\n    styleUrls: ['./task-standalone.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class TaskStandaloneComponent {\n\n    /** Name of the task. */\n    @Input()\n    taskName;\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** If true then Task completed message is shown and `Complete` and `Cancel` buttons are hidden. */\n    @Input()\n    isCompleted: boolean = false;\n\n    /** Toggles rendering of the `Complete` button. */\n    @Input()\n    hasCompletePermission: boolean = true;\n\n    // TODO: rename all with show prefix\n    /** Toggles rendering of the `Cancel` button. */\n    @Input()\n    hideCancelButton: boolean = true;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the task is completed. */\n    @Output()\n    complete: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the form task is attached. */\n    @Output()\n    showAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() { }\n\n    onCancelButtonClick(): void {\n        this.cancel.emit();\n    }\n\n    onCompleteButtonClick(): void {\n        this.complete.emit();\n    }\n\n    hasCompleteButton(): boolean {\n        return this.hasCompletePermission && !this.isCompleted;\n    }\n\n    hasCancelButton(): boolean {\n        return !this.hideCancelButton && !this.isCompleted;\n    }\n\n    hasAttachFormButton(): boolean {\n        return !this.isCompleted;\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm.emit();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Form } from '../models/form.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'adf-attach-form',\n    templateUrl: './attach-form.component.html',\n    styleUrls: ['./attach-form.component.scss']\n})\n\nexport class AttachFormComponent implements OnInit, OnChanges {\n    constructor(private taskService: TaskListService,\n                private logService: LogService,\n                private formService: FormService) { }\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** Identifier of the form to attach. */\n    @Input()\n    formKey;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancelAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form is attached successfully. */\n    @Output()\n    success: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    forms: Form[];\n\n    formId: number;\n    disableSubmit: boolean = true;\n    selectedFormId: number;\n\n    attachFormControl: FormControl;\n\n    ngOnInit() {\n        this.attachFormControl = new FormControl('', Validators.required);\n        this.attachFormControl.valueChanges.subscribe( (currentValue) => {\n            if (this.attachFormControl.valid) {\n                if ( this.formId !== currentValue) {\n                    this.disableSubmit = false;\n                } else {\n                    this.disableSubmit = true;\n                }\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.formId = undefined;\n        this.disableSubmit = true;\n        this.loadFormsTask();\n        if (this.formKey) {\n            this.onFormAttached();\n        }\n    }\n\n    onCancelButtonClick(): void {\n        this.selectedFormId = this.formId;\n        this.cancelAttachForm.emit();\n    }\n\n    onRemoveButtonClick(): void {\n        this.taskService.deleteForm(this.taskId).subscribe(\n            () => {\n                this.formId = this.selectedFormId = null;\n                this.success.emit();\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to delete the form');\n            });\n    }\n\n    onAttachFormButtonClick(): void {\n        this.attachForm(this.taskId, this.selectedFormId);\n    }\n\n    private loadFormsTask(): void {\n        this.taskService.getFormList().subscribe((form: Form[]) => {\n                this.forms = form;\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to get the forms');\n            });\n    }\n\n    private onFormAttached() {\n        this.formService.getTaskForm(this.taskId)\n            .subscribe((res) => {\n                this.formService.getFormDefinitionByName(res.name).subscribe((formDef) => {\n                    this.formId = this.selectedFormId = formDef;\n                });\n            }, (err) => {\n                this.error.emit(err);\n                this.logService.error('Could not load forms');\n            });\n    }\n\n    private attachForm(taskId: string, formId: number) {\n        if (taskId && formId) {\n            this.taskService.attachFormToATask(taskId, formId)\n                .subscribe(() => {\n                    this.success.emit();\n                }, (err) => {\n                    this.error.emit(err);\n                    this.logService.error('Could not attach form');\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessUploadService extends UploadService {\n\n    constructor(apiService: AlfrescoApiService, appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const processInstanceId = file.options.parentId;\n        const promise = this.apiService.getInstance().activiti.contentApi.createRelatedContentOnProcessInstance(processInstanceId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskUploadService extends UploadService {\n\n    constructor(apiService: AlfrescoApiService, appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const taskId = file.options.parentId;\n        const promise = this.apiService.getInstance().activiti.contentApi.createRelatedContentOnTask(taskId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the StartTaskModel.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\n\nexport class StartTaskModel {\n\n    name: string;\n    description: string;\n    assignee: UserProcessModel;\n    dueDate: any;\n    formKey: any;\n    category: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.assignee = obj && obj.assignee ? new UserProcessModel(obj.assignee) : null;\n        this.dueDate = obj && obj.dueDate || null;\n        this.formKey = obj && obj.formKey || null;\n        this.category = obj && obj.category || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskDetailsEvent {\n\n    private _value: TaskDetailsModel;\n    private _defaultPrevented: boolean = false;\n\n    get value(): TaskDetailsModel {\n        return this._value;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(value: TaskDetailsModel) {\n        this._value = value;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the User Event.\n */\nexport class UserEventModel {\n    type: string = '';\n    value: any = {};\n\n    constructor(obj?: any) {\n        this.type = obj && obj.type;\n        this.value = obj && obj.value || {};\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user group.*\n */\n\nexport class UserGroupModel {\n    id?: number;\n    name?: string;\n    externalId?: string;\n    status?: string;\n    groups?: any = {};\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id;\n        this.name = obj && obj.name;\n        this.externalId = obj && obj.externalId;\n        this.status = obj && obj.status;\n        this.groups = obj && obj.groups;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MAT_LABEL_GLOBAL_OPTIONS, MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatTooltipModule, MatMenuModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule\n    ];\n}\n\n@NgModule({\n    providers: [\n        {provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'never' }}\n    ],\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel, CommentProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-comments',\n    templateUrl: './process-comments.component.html',\n    styleUrls: ['./process-comments.component.scss']\n})\nexport class ProcessCommentsComponent implements OnChanges {\n\n    /** (**required**) The numeric ID of the process instance to display comments for. */\n    @Input()\n    processInstanceId: string;\n\n    /** Should the comments be read-only? */\n    @Input()\n    readOnly: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService) {\n        this.comment$ = new Observable<CommentModel>((observer) =>  this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId) {\n            if (processInstanceId.currentValue) {\n                this.getProcessInstanceComments(processInstanceId.currentValue);\n            } else {\n                this.resetComments();\n            }\n        }\n    }\n\n    private getProcessInstanceComments(processInstanceId: string): void {\n        this.resetComments();\n        if (processInstanceId) {\n            this.commentProcessService.getProcessInstanceComments(processInstanceId).subscribe(\n                (res: CommentModel[]) => {\n                    res = res.sort((comment1: CommentModel, comment2: CommentModel) => {\n                        const date1 = new Date(comment1.created);\n                        const date2 = new Date(comment2.created);\n                        return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                    });\n                    res.forEach((comment) => {\n                        this.commentObserver.next(comment);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            this.beingAdded = true;\n            this.commentProcessService.addProcessInstanceComment(this.processInstanceId, this.message)\n                .subscribe(\n                    (res: CommentModel) => {\n                        this.comments.unshift(res);\n                        this.message = '';\n                        this.beingAdded = false;\n\n                    },\n                    (err) => {\n                        this.error.emit(err);\n                        this.beingAdded = false;\n                    }\n                );\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    onError(error: any) {\n        this.error.emit(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { ProcessCommentsComponent } from './process-comments.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        ProcessCommentsComponent\n    ],\n    exports: [\n        ProcessCommentsComponent\n    ]\n})\nexport class ProcessCommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService, UserProcessModel } from '@alfresco/adf-core';\nimport { PeopleProcessService } from '@alfresco/adf-core';\nimport { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\nimport { PeopleSearchComponent } from '../people-search/people-search.component';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people',\n    templateUrl: './people.component.html',\n    styleUrls: ['./people.component.scss']\n})\nexport class PeopleComponent implements OnInit, AfterViewInit {\n\n    /** The array of User objects to display. */\n    @Input()\n    people: UserProcessModel[] = [];\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string = '';\n\n    /** Should the data be read-only? */\n    @Input()\n    readOnly: boolean = false;\n\n    @ViewChild('peopleSearch')\n    peopleSearch: PeopleSearchComponent;\n\n    showAssignment: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    peopleSearch$: Observable<UserProcessModel[]>;\n\n    constructor(private logService: LogService, public peopleProcessService: PeopleProcessService) {\n        this.peopleSearch$ = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer)\n            .pipe(\n                share()\n            );\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    involveUserAndCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUserAndClose();\n        }\n    }\n\n    involveUserWithoutCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUser();\n        }\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(this.taskId, searchedWord)\n            .subscribe((users) => {\n                this.peopleSearchObserver.next(users);\n            }, (error) => this.logService.error(error));\n    }\n\n    involveUser(user: UserProcessModel) {\n        this.peopleProcessService.involveUserWithTask(this.taskId, user.id.toString())\n            .subscribe(() => {\n                this.people = [...this.people, user];\n            }, (error) => this.logService.error('Impossible to involve user with task'));\n    }\n\n    removeInvolvedUser(user: UserProcessModel) {\n        this.peopleProcessService.removeInvolvedUser(this.taskId, user.id.toString())\n            .subscribe(() => {\n                this.people = this.people.filter((involvedUser) => {\n                    return involvedUser.id !== user.id;\n                });\n            }, (error) => this.logService.error('Impossible to remove involved user from task'));\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    getInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n\n    onAddAssignment() {\n        this.showAssignment = true;\n    }\n\n    onClickAction(event: UserEventModel) {\n        if (event.type === 'remove') {\n            this.removeInvolvedUser(event.value);\n        }\n    }\n\n    hasPeople() {\n        return this.people && this.people.length > 0;\n    }\n\n    isEditMode() {\n        return !this.readOnly;\n    }\n\n    onCloseSearch() {\n        this.showAssignment = false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataTableComponent } from '@alfresco/adf-core';\nimport { DataColumnListComponent, UserProcessModel } from '@alfresco/adf-core';\nimport { AfterContentInit, AfterViewInit, Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\n\n@Component({\n    selector: 'adf-people-list',\n    templateUrl: './people-list.component.html',\n    styleUrls: ['./people-list.component.scss']\n})\n\nexport class PeopleListComponent implements AfterViewInit, AfterContentInit {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    @ViewChild('dataTable')\n    peopleDataTable: DataTableComponent;\n\n    /** The array of user data used to populate the people list. */\n    @Input()\n    users: UserProcessModel[];\n\n    /** Toggles whether or not actions should be visible, i.e. the 'Three-Dots' menu. */\n    @Input()\n    actions: boolean = false;\n\n    /** Emitted when the user clicks a row in the people list. */\n    @Output()\n    clickRow: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the user clicks in the 'Three Dots' drop down menu for a row. */\n    @Output()\n    clickAction: EventEmitter<UserEventModel> = new EventEmitter<UserEventModel>();\n\n    user: UserProcessModel;\n\n    ngAfterContentInit() {\n        this.peopleDataTable.columnList = this.columnList;\n    }\n\n    ngAfterViewInit() {\n    }\n\n    selectUser(event: any) {\n        this.user = event.value.obj;\n        this.clickRow.emit(this.user);\n    }\n\n    hasActions(): boolean {\n        return this.actions;\n    }\n\n    onShowRowActionsMenu(event: any) {\n\n        const removeAction = {\n            title: 'Remove',\n            name: 'remove'\n        };\n\n        event.value.actions = [\n            removeAction\n        ];\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        this.clickAction.emit(new UserEventModel({type: action.name, value: args.row.obj}));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, OnInit, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people-search',\n    templateUrl: './people-search.component.html',\n    styleUrls: ['./people-search.component.scss'],\n    host: {\n        'class': 'adf-people-search'\n    },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchComponent implements OnInit {\n\n    /** Parameters for displaying the list. */\n    @Input()\n    results: Observable<UserProcessModel[]>;\n\n    /** Emitted when a search is performed with a new keyword. */\n    @Output()\n    searchPeople: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when a user is selected and the action button is clicked. */\n    @Output()\n    success: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the \"close\" button is clicked. */\n    @Output()\n    closeSearch = new EventEmitter();\n\n    filteredResults$: Observable<UserProcessModel[]>;\n    selectedUser: UserProcessModel = {};\n    performSearch: PerformSearchCallback;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.filteredResults$ = this.results\n            .pipe(\n                map((users) => {\n                    return users.filter((user) => user.id !== this.selectedUser.id);\n                })\n            );\n        this.performSearch = this.performSearchCallback.bind(this);\n    }\n\n    private performSearchCallback(event): Observable<UserProcessModel[]> {\n        this.searchPeople.emit(event);\n        return this.filteredResults$;\n    }\n\n    onRowClick(user: UserProcessModel) {\n        this.selectedUser = user;\n    }\n\n    closeSearchList() {\n        this.closeSearch.emit();\n    }\n\n    involveUserAndClose() {\n        this.involveUser();\n        this.closeSearchList();\n    }\n\n    involveUser() {\n        if (this.selectedUser === undefined) {\n            return;\n        }\n        this.success.emit(this.selectedUser);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n    firstName = (firstName !== null ? firstName : '');\n    lastName = (lastName !== null ? lastName : '');\n    return firstName + delimiter + lastName;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel, TranslationService, PeopleProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { getDisplayUser } from '../../helpers/getDisplayUser';\n\n@Component({\n    selector: 'adf-people-search-field',\n    templateUrl: './people-search-field.component.html',\n    styleUrls: ['./people-search-field.component.scss'],\n    host: { 'class': 'adf-people-search-field' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchFieldComponent {\n\n    @Input()\n    performSearch: PerformSearchCallback;\n\n    @Input()\n    placeholder: string;\n\n    @Output()\n    rowClick: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    users$: Observable<UserProcessModel[]>;\n    searchUser: FormControl = new FormControl();\n\n    defaultPlaceholder = 'ADF_TASK_LIST.PEOPLE.SEARCH_USER';\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                private translationService: TranslationService) {\n        this.users$ = this.searchUser.valueChanges\n            .pipe(\n                debounceTime(200),\n                switchMap((searchWord: string) => {\n                    if (searchWord && searchWord.trim()) {\n                        return this.performSearch(searchWord);\n                    } else {\n                        return of([]);\n                    }\n                })\n            );\n\n        this.defaultPlaceholder = this.translationService.instant(this.defaultPlaceholder);\n    }\n\n    public reset() {\n        this.searchUser.reset();\n    }\n\n    get searchPlaceholder() {\n        return this.placeholder || this.defaultPlaceholder;\n    }\n\n    onRowClick(event) {\n        this.rowClick.emit(event);\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        return getDisplayUser(firstName, lastName, delimiter);\n    }\n\n    getInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewChild, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { PeopleProcessService, UserProcessModel, LogService, TranslationService } from '@alfresco/adf-core';\nimport { PeopleSearchFieldComponent } from '../people-search-field/people-search-field.component';\nimport { getDisplayUser } from '../../helpers/getDisplayUser';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst DEFAULT_ASSIGNEE_PLACEHOLDER = 'ADF_TASK_LIST.PEOPLE.ASSIGNEE';\n\n@Component({\n    selector: 'adf-people-selector',\n    templateUrl: './people-selector.component.html',\n    styleUrls: ['./people-selector.component.scss'],\n    host: { 'class': 'adf-people-selector' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSelectorComponent {\n\n    @Input()\n    peopleId: UserProcessModel;\n\n    // Poorly documented Angular magic for [(peopleId)]\n    @Output()\n    peopleIdChange: EventEmitter<number>;\n\n    @ViewChild('peopleSearchField')\n    searchFieldComponent: PeopleSearchFieldComponent;\n\n    performSearch: PerformSearchCallback;\n    selectedUser: UserProcessModel;\n    defaultPlaceholder: string;\n\n    constructor(\n        private peopleProcessService: PeopleProcessService,\n        private logService: LogService,\n        private translationService: TranslationService) {\n\n        this.peopleIdChange = new EventEmitter();\n        this.performSearch = this.searchUser.bind(this);\n        this.defaultPlaceholder = this.translationService.instant(DEFAULT_ASSIGNEE_PLACEHOLDER);\n    }\n\n    searchUser(searchWord: string): Observable<{} | UserProcessModel[]> {\n        return this.peopleProcessService.getWorkflowUsers(undefined, searchWord)\n            .pipe(\n                catchError(this.onSearchUserError.bind(this))\n            );\n    }\n\n    private onSearchUserError(): Observable<UserProcessModel[]> {\n        this.logService.error('getWorkflowUsers threw error');\n        return of([]);\n    }\n\n    userSelected(user: UserProcessModel): void {\n        this.updateUserSelection(user);\n    }\n\n    userDeselected(): void {\n        this.updateUserSelection(undefined);\n    }\n\n    private updateUserSelection(user: UserProcessModel): void {\n        this.selectedUser = user;\n        this.peopleIdChange.emit(user && user.id || undefined);\n        this.searchFieldComponent.reset();\n    }\n\n    get placeholder() {\n        if (!this.selectedUser) {\n            return this.defaultPlaceholder;\n        }\n\n        return getDisplayUser(this.selectedUser.firstName, this.selectedUser.lastName, ' ');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: 'adf-people-search-action-label, people-search-action-label' })\nexport class PeopleSearchActionLabelDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: 'adf-people-search-title, people-search-title' })\nexport class PeopleSearchTitleDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { PeopleComponent } from './components/people/people.component';\nimport { PeopleListComponent } from './components/people-list/people-list.component';\nimport { PeopleSearchComponent } from './components/people-search/people-search.component';\nimport { PeopleSearchFieldComponent } from './components/people-search-field/people-search-field.component';\nimport { PeopleSelectorComponent } from './components/people-selector/people-selector.component';\n\nimport { PeopleSearchActionLabelDirective } from './directives/people-search-action-label.directive';\nimport { PeopleSearchTitleDirective } from './directives/people-search-title.directive';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ],\n    exports: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ]\n})\nexport class PeopleModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ExternalAlfrescoApiService, AlfrescoApiService, AuthenticationService, LoginDialogPanelComponent, SitesService, SearchService } from '@alfresco/adf-core';\nimport { DocumentListService, ContentNodeSelectorService } from '@alfresco/adf-content-services';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-attach-file-widget-dialog',\n    templateUrl: './attach-file-widget-dialog.component.html',\n    styleUrls: ['./attach-file-widget-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ AuthenticationService,\n                 DocumentListService,\n                 SitesService,\n                 ContentNodeSelectorService,\n                 SearchService,\n                 { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService} ]\n})\nexport class AttachFileWidgetDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    chosenNode: Node[];\n    buttonActionName;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AttachFileWidgetDialogComponentData,\n                private externalApiService: AlfrescoApiService) {\n        (<any> externalApiService).init(data.ecmHost, data.context);\n        this.buttonActionName = data.actionName ? `ATTACH-FILE.ACTIONS.${data.actionName.toUpperCase()}` : 'ATTACH-FILE.ACTIONS.CHOOSE';\n    }\n\n    isLoggedIn() {\n        return this.externalApiService.getInstance().isLoggedIn();\n    }\n\n    performLogin() {\n        this.loginPanel.submitForm();\n    }\n\n    close() {\n        this.data.selected.complete();\n    }\n\n    onSelect(nodeList: Node[]) {\n        if (nodeList && nodeList[0].isFile) {\n            this.chosenNode = nodeList;\n        } else {\n            this.chosenNode = null;\n        }\n    }\n\n    onClick(event: any) {\n        this.data.selected.next(this.chosenNode);\n        this.data.selected.complete();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { Node } from '@alfresco/js-api';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AttachFileWidgetDialogService {\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(ecmHost: string, actionName?: string, context?: string): Observable<Node[]> {\n        const titleString: string = `Please log in for ${ecmHost}`;\n        const selected = new Subject<Node[]>();\n        selected.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: AttachFileWidgetDialogComponentData = {\n            title : titleString,\n            actionName,\n            selected,\n            ecmHost,\n            context,\n            isSelectionValid: this.isNodeFile.bind(this)\n        };\n\n        this.openLoginDialog(data, 'adf-attach-file-widget-dialog', '630px');\n        return selected;\n    }\n\n    private openLoginDialog(data: AttachFileWidgetDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AttachFileWidgetDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    private isNodeFile(entry: Node): boolean {\n        return entry.isFile;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n    UploadWidgetComponent,\n    FormService,\n    LogService,\n    ThumbnailService,\n    ProcessContentService,\n    ActivitiContentService,\n    ContentService,\n    FormEvent,\n    AppConfigValues,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { Node, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { from, zip, of } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';\n\n@Component({\n    selector: 'attach-widget',\n    templateUrl: './attach-file-widget.component.html',\n    styleUrls: ['./attach-file-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFileWidgetComponent extends UploadWidgetComponent implements OnInit {\n\n    repositoryList = [];\n    private tempFilesList = [];\n\n    constructor(public formService: FormService,\n                private logger: LogService,\n                public thumbnails: ThumbnailService,\n                public processContentService: ProcessContentService,\n                private activitiContentService: ActivitiContentService,\n                private contentService: ContentService,\n                private contentDialog: ContentNodeDialogService,\n                private appConfigService: AppConfigService,\n                private attachDialogService: AttachFileWidgetDialogService) {\n        super(formService, logger, thumbnails, processContentService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n\n        this.activitiContentService.getAlfrescoRepositories(null, true).subscribe((repoList) => {\n            this.repositoryList = repoList;\n        });\n\n        this.formService.taskSaved.subscribe((formSaved: FormEvent) => {\n            if (formSaved.form.id === this.field.form.id) {\n                this.tempFilesList = [];\n            }\n        });\n    }\n\n    isFileSourceConfigured(): boolean {\n        return !!this.field.params && !!this.field.params.fileSource;\n    }\n\n    isMultipleSourceUpload(): boolean {\n        return !this.field.readOnly && this.isFileSourceConfigured() && !this.isOnlyLocalSourceSelected();\n    }\n\n    isAllFileSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'all-file-sources';\n    }\n\n    isOnlyLocalSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'local-file';\n    }\n\n    isSimpleUploadButton(): boolean {\n        return this.isUploadButtonVisible() &&\n            !this.isFileSourceConfigured() ||\n            this.isOnlyLocalSourceSelected();\n    }\n\n    isUploadButtonVisible(): boolean {\n        return (!this.hasFile || this.multipleOption) && !this.field.readOnly;\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params &&\n            !!this.field.params.fileSource &&\n            !!this.field.params.fileSource.selectedFolder;\n    }\n\n    isTemporaryFile(file): boolean {\n        return this.tempFilesList.findIndex((elem) => elem.name === file.name) >= 0;\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        if (this.isDefinedSourceFolder()) {\n            this.contentDialog.openFileBrowseDialogByFolderId(params.fileSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections,\n                        this.field.params.fileSource.selectedFolder.accountId,\n                        this.field.params.fileSource.selectedFolder.siteId);\n                });\n        }\n    }\n\n    onAttachFileChanged(event: any) {\n        this.tempFilesList.push(...Array.from(event.target.files));\n        this.onFileChanged(event);\n    }\n\n    onRemoveAttachFile(file: File | RelatedContentRepresentation) {\n        if (this.isTemporaryFile(file)) {\n            this.tempFilesList.splice(this.tempFilesList.indexOf((<RelatedContentRepresentation> file).contentBlob), 1);\n        }\n        this.removeFile(file);\n    }\n\n    onAttachFileClicked(file: any) {\n        if (file.isExternal) {\n            this.logger.info(`The file ${file.name} comes from an external source and cannot be showed at this moment`);\n            return;\n        }\n        if (this.isTemporaryFile(file)) {\n            this.formService.formContentClicked.next(file);\n        } else {\n            this.fileClicked(file);\n        }\n    }\n\n    downloadContent(file: any | RelatedContentRepresentation): void {\n        if (this.isTemporaryFile(file)) {\n            this.contentService.downloadBlob((<RelatedContentRepresentation> file).contentBlob, file.name);\n        } else {\n            this.processContentService.getFileRawContent((<any> file).id).subscribe(\n                (blob: Blob) => {\n                    this.contentService.downloadBlob(blob, (<any> file).name);\n                },\n                (err) => {\n                    this.logger.error('Impossible retrieve content for download');\n                }\n            );\n        }\n    }\n\n    openSelectDialog(repository) {\n        const accountIdentifier = 'alfresco-' + repository.id + '-' + repository.name;\n        const currentECMHost = this.getDomainHost(this.appConfigService.get(AppConfigValues.ECMHOST));\n        const chosenRepositoryHost = this.getDomainHost(repository.repositoryUrl);\n        if (chosenRepositoryHost !== currentECMHost) {\n            const formattedRepositoryHost = repository.repositoryUrl.replace('/alfresco', '');\n            this.attachDialogService.openLogin(formattedRepositoryHost).subscribe(\n                (selections: any[]) => {\n                    selections.forEach((node) => node.isExternal = true);\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections, accountIdentifier);\n                });\n        } else {\n            this.contentDialog.openFileBrowseDialogBySite().subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections, accountIdentifier);\n                });\n        }\n    }\n\n    private uploadFileFromCS(fileNodeList: any[], accountId: string, siteId?: string) {\n        const filesSaved = [];\n        from(fileNodeList).pipe(\n            mergeMap((node) =>\n                zip(\n                    of(node.content.mimeType),\n                    this.activitiContentService.applyAlfrescoNode(node, siteId, accountId),\n                    of(node.isExternal)\n                )\n            )\n        )\n            .subscribe(([mimeType, res, isExternal]) => {\n                    res.mimeType = mimeType;\n                    res.isExternal = isExternal;\n                    filesSaved.push(res);\n                },\n                (error) => {\n                    this.logger.error(error);\n                },\n                () => {\n                    this.field.value = filesSaved;\n                    this.field.json.value = filesSaved;\n                    this.hasFile = true;\n                });\n    }\n\n    private getDomainHost(urlToCheck) {\n        const result = urlToCheck.match('^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/?\\n]+)');\n        return result[1];\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector*/\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n    WidgetComponent,\n    FormService,\n    NodesApiService\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'attach-folder-widget',\n    templateUrl: './attach-folder-widget.component.html',\n    styleUrls: ['./attach-folder-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFolderWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFolder: boolean = false;\n    selectedFolderName: string = '';\n\n    constructor(private contentDialog: ContentNodeDialogService,\n                public formService: FormService,\n                private nodeService: NodesApiService) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value) {\n            this.hasFolder = true;\n            this.nodeService.getNode(this.field.value).subscribe((node: Node) => {\n                this.selectedFolderName = node.name;\n            });\n        }\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params &&\n            !!this.field.params.folderSource &&\n            !!this.field.params.folderSource.selectedFolder;\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        if (this.isDefinedSourceFolder()) {\n            this.contentDialog.openFolderBrowseDialogByFolderId(params.folderSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        } else {\n            this.contentDialog.openFolderBrowseDialogBySite().subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        }\n    }\n\n    removeFolder() {\n        this.field.value = null;\n        this.selectedFolderName = '';\n        this.hasFolder = false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentNodeSelectorModule } from '@alfresco/adf-content-services';\n\nimport { AttachFileWidgetComponent } from './attach-file-widget.component';\nimport { AttachFolderWidgetComponent } from './attach-folder-widget.component';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        ContentNodeSelectorModule,\n        MaterialModule\n    ],\n    entryComponents: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ],\n    declarations: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ],\n    exports: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ]\n})\nexport class ContentWidgetModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, Output, ViewEncapsulation, SimpleChanges, OnInit, OnDestroy, OnChanges\n} from '@angular/core';\nimport { AttachFileWidgetComponent, AttachFolderWidgetComponent } from '../content-widget';\nimport { EcmModelService, NodeService, WidgetVisibilityService,\n    FormService, FormRenderingService, FormBaseComponent, FormOutcomeModel,\n    ValidateFormEvent, FormEvent, FormErrorEvent, FormFieldModel,\n    FormModel, FormOutcomeEvent, FormValues, ContentLinkModel } from '@alfresco/adf-core';\n\nimport { Observable, of, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-form',\n    templateUrl: './form.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent extends FormBaseComponent implements OnInit, OnDestroy, OnChanges {\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Content Services node ID for the form metadata. */\n    @Input()\n    nodeId: string;\n\n    /** The id of the form definition to load and display with custom values. */\n    @Input()\n    formId: number;\n\n    /** Name of the form definition to load and display with custom values. */\n    @Input()\n    formName: string;\n\n    /** Toggle saving of form metadata. */\n    @Input()\n    saveMetadata: boolean = false;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: FormValues;\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    debugMode: boolean = false;\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService,\n                protected ecmModelService: EcmModelService,\n                protected nodeService: NodeService,\n                protected formRenderingService: FormRenderingService) {\n        super();\n        this.formRenderingService.setComponentTypeResolver('upload', () => AttachFileWidgetComponent, true);\n        this.formRenderingService.setComponentTypeResolver('select-folder', () => AttachFolderWidgetComponent, true);\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content: ContentLinkModel) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getFormByTaskId(taskId.currentValue);\n            return;\n        }\n\n        const formId = changes['formId'];\n        if (formId && formId.currentValue) {\n            this.getFormDefinitionByFormId(formId.currentValue);\n            return;\n        }\n\n        const formName = changes['formName'];\n        if (formName && formName.currentValue) {\n            this.getFormDefinitionByFormName(formName.currentValue);\n            return;\n        }\n\n        const nodeId = changes['nodeId'];\n        if (nodeId && nodeId.currentValue) {\n            this.loadFormForEcmNode(nodeId.currentValue);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.taskId) {\n            this.getFormByTaskId(this.taskId);\n            return;\n        }\n\n        if (this.formId) {\n            this.getFormDefinitionByFormId(this.formId);\n            return;\n        }\n\n        if (this.formName) {\n            this.getFormDefinitionByFormName(this.formName);\n            return;\n        }\n    }\n\n    findProcessVariablesByTaskId(taskId: string): Observable<any> {\n        return this.formService.getTask(taskId).pipe(\n            switchMap((task: any) => {\n                if (this.isAProcessTask(task)) {\n                    return this.visibilityService.getTaskProcessVariable(taskId);\n                } else {\n                    return of({});\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation) {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(taskId: string): Promise<FormModel> {\n        return new Promise<FormModel>((resolve, reject) => {\n            this.findProcessVariablesByTaskId(taskId).subscribe((processVariables) => {\n                this.formService\n                    .getTaskForm(taskId)\n                    .subscribe(\n                        (form) => {\n                            const parsedForm = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(parsedForm);\n                            parsedForm.validateForm();\n                            this.form = parsedForm;\n                            this.onFormLoaded(this.form);\n                            resolve(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                            // reject(error);\n                            resolve(null);\n                        }\n                    );\n            });\n        });\n    }\n\n    getFormDefinitionByFormId(formId: number) {\n        this.formService\n            .getFormDefinitionById(formId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.name;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    getFormDefinitionByFormName(formName: string) {\n        this.formService\n            .getFormDefinitionByName(formName)\n            .subscribe(\n                (id) => {\n                    this.formService.getFormDefinitionById(id).subscribe(\n                        (form) => {\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                        }\n                    );\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .saveTaskForm(this.form.taskId, this.form.values)\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskSavedError(this.form, error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .completeTaskForm(this.form.taskId, this.form.values, outcome)\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskCompletedError(this.form, error)\n                );\n        }\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    parseForm(json: any): FormModel {\n        if (json) {\n            const form = new FormModel(json, this.data, this.readOnly, this.formService);\n            if (!json.fields) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(form, { id: '$save', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.form.json);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    private loadFormForEcmNode(nodeId: string): void {\n        this.nodeService.getNodeMetadata(nodeId).subscribe((data) => {\n                this.data = data.metadata;\n                this.loadFormFromActiviti(data.nodeType);\n            },\n            this.handleError);\n    }\n\n    loadFormFromActiviti(nodeType: string): any {\n        this.formService.searchFrom(nodeType).subscribe(\n            (form) => {\n                if (!form) {\n                    this.formService.createFormFromANode(nodeType).subscribe((formMetadata) => {\n                        this.loadFormFromFormId(formMetadata.id);\n                    });\n                } else {\n                    this.loadFormFromFormId(form.id);\n                }\n            },\n            (error) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private loadFormFromFormId(formId: number) {\n        this.formId = formId;\n        this.loadForm();\n    }\n\n    protected storeFormAsMetadata() {\n        if (this.saveMetadata) {\n            this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe((type) => {\n                    this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, EcmModelService.MODEL_NAMESPACE, this.form.values, this.path, this.nameNode);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n        }\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n        this.formService.formLoaded.next(new FormEvent(form));\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n        this.formService.formDataRefreshed.next(new FormEvent(form));\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n        this.formService.taskSaved.next(new FormEvent(form));\n    }\n\n    protected onTaskSavedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskSavedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.formService.taskCompleted.next(new FormEvent(form));\n    }\n\n    protected onTaskCompletedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskCompletedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        const args = new FormOutcomeEvent(outcome);\n\n        this.formService.executeOutcome.next(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        return true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ContentLinkModel, FormService, WidgetVisibilityService, FormRenderingService, ValidateFormEvent, FormOutcomeModel } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-start-form',\n    templateUrl: './start-form.component.html',\n    styleUrls: ['./start-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartFormComponent extends FormComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** Definition ID of the process to start. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Process ID of the process to start. */\n    @Input()\n    processId: string;\n\n    /** Should form outcome buttons be shown? */\n    @Input()\n    showOutcomeButtons: boolean = true;\n\n    /** Should the refresh button be shown? */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Is the form read-only (ie, can't be edited)? */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Emitted when the user clicks one of the outcome buttons that completes the form. */\n    @Output()\n    outcomeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a field of the form is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    @ViewChild('outcomesContainer', {})\n    outcomesContainer: ElementRef = null;\n\n    constructor(formService: FormService,\n                visibilityService: WidgetVisibilityService,\n                formRenderingService: FormRenderingService) {\n        super(formService, visibilityService, null, null, formRenderingService);\n        this.showTitle = false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processDefinitionId = changes['processDefinitionId'];\n        if (processDefinitionId && processDefinitionId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(processDefinitionId.currentValue);\n            return;\n        }\n\n        const processId = changes['processId'];\n        if (processId && processId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(processId.currentValue);\n            return;\n        }\n    }\n\n    loadStartForm(processId: string) {\n        this.formService.getProcessInstance(processId)\n            .subscribe((instance: any) => {\n                this.formService\n                    .getStartFormInstance(processId)\n                    .subscribe(\n                        (form) => {\n                            this.formName = form.name;\n                            if (instance.variables) {\n                                form.processVariables = instance.variables;\n                            }\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.form.readOnly = this.readOnlyForm;\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => this.handleError(error)\n                    );\n            });\n    }\n\n    getStartFormDefinition(processId: string) {\n        this.formService\n            .getStartFormDefinition(processId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.processDefinitionName;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.form.readOnly = this.readOnlyForm;\n                    this.onFormLoaded(this.form);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    /** @override */\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.isSystem && (outcome.name === FormOutcomeModel.SAVE_ACTION ||\n            outcome.name === FormOutcomeModel.COMPLETE_ACTION)) {\n            return false;\n        } else if (outcome && outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n            return true;\n        }\n        return super.isOutcomeButtonVisible(outcome, isFormReadOnly);\n    }\n\n    /** @override */\n    saveTaskForm() {\n        // do nothing\n    }\n\n    /** @override */\n    onRefreshClicked() {\n        if (this.processDefinitionId) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n        } else if (this.processId) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(this.processId);\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        this.outcomeClick.emit(outcome);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FormComponent } from './form.component';\nimport { StartFormComponent } from './start-form.component';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MaterialModule\n    ],\n    declarations: [\n        FormComponent,\n        StartFormComponent\n    ],\n    exports: [\n        FormComponent,\n        StartFormComponent\n    ]\n})\nexport class FormModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\n\nimport { ChecklistComponent } from './components/checklist.component';\nimport { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';\nimport { StartTaskComponent } from './components/start-task.component';\nimport { TaskAuditDirective } from './components/task-audit.directive';\nimport { TaskDetailsComponent } from './components/task-details.component';\nimport { TaskFiltersComponent } from './components/task-filters.component';\nimport { TaskHeaderComponent } from './components/task-header.component';\nimport { TaskListComponent } from './components/task-list.component';\nimport { TaskStandaloneComponent } from './components/task-standalone.component';\nimport { AttachFormComponent } from './components/attach-form.component';\nimport { FormModule } from '../form/form.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        FormModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        PeopleModule,\n        ProcessCommentsModule,\n        ContentWidgetModule\n    ],\n    declarations: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent\n    ],\n    exports: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent\n    ]\n})\nexport class TaskListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Observable, Observer } from 'rxjs';\nimport { TaskDetailsEvent, TaskDetailsModel } from '../../task-list';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-tasks',\n    templateUrl: './process-instance-tasks.component.html',\n    styleUrls: ['./process-instance-tasks.component.css']\n})\nexport class ProcessInstanceTasksComponent implements OnInit, OnChanges {\n\n    /** (**required**) The ID of the process instance to display tasks for. */\n    @Input()\n    processInstanceDetails: ProcessInstance;\n\n    /** Toggles whether to show a refresh button next to the list of tasks to allow\n     * it to be updated from the server.\n     */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    activeTasks: TaskDetailsModel[] = [];\n    completedTasks: TaskDetailsModel[] = [];\n\n    private taskObserver: Observer<TaskDetailsModel>;\n    private completedTaskObserver: Observer<TaskDetailsModel>;\n\n    task$: Observable<TaskDetailsModel>;\n    completedTask$: Observable<TaskDetailsModel>;\n\n    message: string;\n    processId: string;\n\n    @ViewChild('startDialog')\n    startDialog: any;\n\n    @ViewChild('taskDetails')\n    taskDetails: any;\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService,\n                private dialog: MatDialog) {\n        this.task$ = new Observable<TaskDetailsModel>((observer) => this.taskObserver = observer)\n            .pipe(share());\n        this.completedTask$ = new Observable<TaskDetailsModel>((observer) => this.completedTaskObserver = observer)\n            .pipe(share());\n    }\n\n    ngOnInit() {\n        this.task$.subscribe((task: TaskDetailsModel) => {\n            this.activeTasks.push(task);\n        });\n        this.completedTask$.subscribe((task: TaskDetailsModel) => {\n            this.completedTasks.push(task);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceDetails = changes['processInstanceDetails'];\n        if (processInstanceDetails && processInstanceDetails.currentValue) {\n            this.load(processInstanceDetails.currentValue.id);\n        }\n    }\n\n    load(processInstanceId: string) {\n        this.loadActive(processInstanceId);\n        this.loadCompleted(processInstanceId);\n    }\n\n    loadActive(processInstanceId: string) {\n        this.activeTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, null).subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.taskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.activeTasks = [];\n        }\n    }\n\n    loadCompleted(processInstanceId: string) {\n        this.completedTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, 'completed').subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.completedTaskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.completedTasks = [];\n        }\n    }\n\n    hasStartFormDefined(): boolean {\n        return this.processInstanceDetails && this.processInstanceDetails.startFormDefined === true;\n    }\n\n    getUserFullName(user: any) {\n        if (user) {\n            return (user.firstName && user.firstName !== 'null'\n                    ? user.firstName + ' ' : '') +\n                user.lastName;\n        }\n        return 'Nobody';\n    }\n\n    getFormatDate(value, format: string) {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceTask: error parsing date ${value} to format ${format}`);\n        }\n    }\n\n    clickTask($event: any, task: TaskDetailsModel) {\n        const args = new TaskDetailsEvent(task);\n        this.taskClick.emit(args);\n    }\n\n    clickStartTask() {\n        this.processId = this.processInstanceDetails.id;\n        this.showStartDialog();\n    }\n\n    showStartDialog() {\n        this.dialog.open(this.startDialog, { height: '500px', width: '700px' });\n    }\n\n    closeStartDialog() {\n        this.dialog.closeAll();\n    }\n\n    onRefreshClicked() {\n        this.load(this.processInstanceDetails.id);\n    }\n\n    onFormContentClick() {\n        this.closeStartDialog();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let processPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataTableSchema,\n    DataRowEvent,\n    DataTableAdapter,\n    CustomEmptyContentTemplateDirective,\n    CustomLoadingContentTemplateDirective\n} from '@alfresco/adf-core';\nimport {\n    AppConfigService,\n    PaginatedComponent,\n    PaginationComponent,\n    PaginationModel,\n    UserPreferencesService\n} from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { processPresetsDefaultModel } from '../models/process-preset.model';\nimport { ProcessService } from '../services/process.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { ProcessListModel } from '../models/process-list.model';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-process-instance-list',\n    styleUrls: ['./process-list.component.css'],\n    templateUrl: './process-list.component.html'\n})\nexport class ProcessInstanceListComponent extends DataTableSchema  implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-process-list.presets';\n    public FORMAT_DATE: string = 'll';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** The id of the process instance. */\n    @Input()\n    processInstanceId: number|string;\n\n    /** Defines the state of the processes. Possible values are `running`, `completed` and `all` */\n    @Input()\n    state: string;\n\n    /** Defines the sort ordering of the list. Possible values are `created-desc`, `created-asc`,\n     * `ended-desc`, `ended-asc`.\n     */\n    @Input()\n    sort: string;\n\n    /** The page number of the processes to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of processes to fetch in each page. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Data source to define the datatable. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** Emitted when a row in the process list is clicked. */\n    @Output()\n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when the list of process instances has been loaded successfully from the server. */\n    @Output()\n    success: EventEmitter<ProcessListModel> = new EventEmitter<ProcessListModel>();\n\n    /** Emitted when an error occurs while loading the list of process instances from the server. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    requestNode: ProcessFilterParamRepresentationModel;\n    currentInstanceId: string;\n    isLoading: boolean = true;\n    rows: any[] = [];\n    sorting: any[] = ['created', 'desc'];\n\n    pagination: BehaviorSubject<PaginationModel>;\n\n    constructor(private processService: ProcessService,\n                private userPreferences: UserPreferencesService,\n                appConfig: AppConfigService) {\n        super(appConfig, ProcessInstanceListComponent.PRESET_KEY, processPresetsDefaultModel);\n        this.size = this.userPreferences.paginationSize;\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId != null) {\n            this.reload();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = false;\n\n        const appId = changes['appId'];\n        const processDefinitionId = changes['processDefinitionId'];\n        const processInstanceId = changes['processInstanceId'];\n        const state = changes['state'];\n        const sort = changes['sort'];\n        const page = changes['page'];\n        const size = changes['size'];\n\n        if (appId && appId.currentValue) {\n            changed = true;\n        } else if (processDefinitionId) {\n            changed = true;\n        } else if (processInstanceId) {\n            changed = true;\n        } else if (state && state.currentValue) {\n            changed = true;\n        } else if (sort && sort.currentValue) {\n            changed = true;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n        return changed;\n    }\n\n    public reload() {\n        this.requestNode = this.createRequestNode();\n        this.load(this.requestNode);\n    }\n\n    private load(requestNode: ProcessFilterParamRepresentationModel) {\n        this.isLoading = true;\n        this.processService.getProcesses(requestNode)\n            .subscribe(\n                (response) => {\n                    this.rows = this.optimizeProcessDetails(response.data);\n                    this.selectFirst();\n                    this.success.emit(response);\n                    this.isLoading = false;\n                    this.pagination.next({\n                        count: response.data.length,\n                        maxItems: this.size,\n                        skipCount: this.page * this.size,\n                        totalItems: response.total\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                    this.isLoading = false;\n                });\n    }\n\n    /**\n     * Select the first instance of a list if present\n     */\n    selectFirst() {\n        if (this.selectFirstRow) {\n            if (!this.isListEmpty()) {\n                const dataRow = this.rows[0];\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            } else {\n                this.currentInstanceId = null;\n            }\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when the row is clicked\n     * @param event\n     */\n    onRowClick(event: DataRowEvent) {\n        const item = event;\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when pressed the Enter key on the selected row\n     * @param event\n     */\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    /**\n     * Optimize name field\n     * @param instances\n     */\n    private optimizeProcessDetails(instances: any[]): any[] {\n        instances = instances.map((instance) => {\n            instance.name = this.getProcessNameOrDescription(instance, 'medium');\n            if (instance.started) {\n                instance.started = moment(instance.started).format(this.FORMAT_DATE);\n            }\n            return instance;\n        });\n        return instances;\n    }\n\n    getProcessNameOrDescription(processInstance, dateFormat): string {\n        let name = '';\n        if (processInstance) {\n            name = processInstance.name ||\n                processInstance.processDefinitionName + ' - ' + this.getFormatDate(processInstance.started, dateFormat);\n        }\n        return name;\n    }\n\n    getFormatDate(value, format: string) {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            return '';\n        }\n    }\n\n    private createRequestNode() {\n        const requestNode = {\n            appDefinitionId: this.appId,\n            processDefinitionId: this.processDefinitionId,\n            processInstanceId: this.processInstanceId,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: 0\n        };\n        return new ProcessFilterParamRepresentationModel(requestNode);\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges, OnInit,\n    Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {\n    ActivitiContentService, AppConfigService, AppConfigValues,\n    FormValues\n} from '@alfresco/adf-core';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessDefinitionRepresentation } from './../models/process-definition.model';\nimport { ProcessInstance } from './../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material';\nimport { StartFormComponent } from '../../form';\n\n@Component({\n    selector: 'adf-start-process',\n    templateUrl: './start-process.component.html',\n    styleUrls: ['./start-process.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartProcessInstanceComponent implements OnChanges, OnInit {\n\n    MAX_LENGTH: number = 255;\n\n    /** (optional) Limit the list of processes that can be started to those\n     * contained in the specified app.\n     */\n    @Input()\n    appId: number;\n\n    /** (optional) Definition name of the process to start. */\n    @Input()\n    processDefinitionName: string;\n\n    /** Variables in the input to the process\n     * [RestVariable](https://github.com/Alfresco/alfresco-js-api/tree/master/src/alfresco-activiti-rest-api/docs/RestVariable.md).\n     */\n    @Input()\n    variables: ProcessInstanceVariable[];\n\n    /** Parameter to pass form field values in the start form if one is associated. */\n    @Input()\n    values: FormValues;\n\n    /** (optional) Name to assign to the current process. */\n    @Input()\n    name: string = '';\n\n    /** Hide or show the process selection dropdown. */\n    @Input()\n    showSelectProcessDropdown: boolean = true;\n\n    /** (optional) Parameter to enable selection of process when filtering. */\n    @Input()\n    processFilterSelector: boolean = true;\n\n    /** Emitted when the process starts. */\n    @Output()\n    start: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    /** Emitted when the process is canceled. */\n    @Output()\n    cancel: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    @ViewChild('startForm')\n    startForm: StartFormComponent;\n\n    @ViewChild(MatAutocompleteTrigger)\n    inputAutocomplete: MatAutocompleteTrigger;\n\n    processDefinitions: ProcessDefinitionRepresentation[] = [];\n    selectedProcessDef: ProcessDefinitionRepresentation = new ProcessDefinitionRepresentation();\n    errorMessageId: string = '';\n    processNameInput: FormControl;\n    processDefinitionInput: FormControl;\n    filteredProcesses: Observable<ProcessDefinitionRepresentation[]>;\n    maxProcessNameLength: number = this.MAX_LENGTH;\n\n    constructor(private activitiProcess: ProcessService,\n                private activitiContentService: ActivitiContentService,\n                private appConfig: AppConfigService) {\n        }\n\n    ngOnInit() {\n        this.processNameInput = new FormControl(this.name, [Validators.required, Validators.maxLength(this.maxProcessNameLength)]);\n        this.processDefinitionInput = new FormControl();\n\n        this.loadStartProcess();\n\n        this.processNameInput.valueChanges.subscribe((name) => this.name = name);\n        this.filteredProcesses = this.processDefinitionInput.valueChanges\n            .pipe(\n                map((value) => this._filter(value))\n            );\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['values'] && changes['values'].currentValue) {\n            this.moveNodeFromCStoPS();\n        }\n\n        if (changes['appId'] && changes['appId'].currentValue) {\n            this.appId = changes['appId'].currentValue;\n        }\n\n        this.loadStartProcess();\n    }\n\n    private _filter(value: string): ProcessDefinitionRepresentation[] {\n        if (value !== null && value !== undefined) {\n            const filterValue = value.toLowerCase();\n            const filteredProcess = this.processDefinitions.filter((option) => option.name.toLowerCase().includes(filterValue));\n\n            if (this.processFilterSelector) {\n                this.selectedProcessDef = this.getSelectedProcess(filterValue);\n            }\n            return filteredProcess;\n        }\n    }\n\n    getSelectedProcess(selectedProcess) {\n        let processSelected = this.processDefinitions.find((process) => process.name.toLowerCase() === selectedProcess);\n\n        if (!processSelected) {\n            processSelected = new ProcessDefinitionRepresentation();\n        }\n        return processSelected;\n    }\n\n    public loadStartProcess() {\n        this.resetSelectedProcessDefinition();\n        this.resetErrorMessage();\n\n        this.activitiProcess.getProcessDefinitions(this.appId).subscribe(\n            (processDefinitionRepresentations: ProcessDefinitionRepresentation[]) => {\n                this.processDefinitions = processDefinitionRepresentations;\n\n                if (!this.isProcessDefinitionsEmpty()) {\n\n                    if (this.processDefinitions.length === 1) {\n                        this.selectedProcessDef = this.processDefinitions[0];\n                    }\n\n                    if (this.processDefinitionName) {\n                        const selectedProcess = this.processDefinitions.find((currentProcessDefinition) => {\n                            return currentProcessDefinition.name === this.processDefinitionName;\n                        });\n                        if (selectedProcess) {\n                            this.selectedProcessDef = selectedProcess;\n                        }\n                    }\n\n                    this.processDefinitionInput.setValue(this.selectedProcessDef.name);\n                }\n            },\n            () => {\n                this.errorMessageId = 'ADF_PROCESS_LIST.START_PROCESS.ERROR.LOAD_PROCESS_DEFS';\n            });\n    }\n\n    isProcessDefinitionsEmpty(): boolean {\n        return this.processDefinitions.length === 0;\n    }\n\n    getAlfrescoRepositoryName(): string {\n        let alfrescoRepositoryName = this.appConfig.get<string>(AppConfigValues.ALFRESCO_REPOSITORY_NAME);\n        if (!alfrescoRepositoryName) {\n            alfrescoRepositoryName = 'alfresco-1';\n        }\n        return alfrescoRepositoryName + 'Alfresco';\n    }\n\n    moveNodeFromCStoPS() {\n        const accountIdentifier = this.getAlfrescoRepositoryName();\n\n        for (const key in this.values) {\n            if (this.values.hasOwnProperty(key)) {\n                const currentValue = this.values[key];\n\n                if (currentValue.isFile) {\n                    this.activitiContentService.applyAlfrescoNode(currentValue, null, accountIdentifier).subscribe((res) => {\n                        this.values[key] = [res];\n                    });\n                }\n            }\n        }\n    }\n\n    public startProcess(outcome?: string) {\n        if (this.selectedProcessDef && this.selectedProcessDef.id && this.name) {\n            this.resetErrorMessage();\n            const formValues = this.startForm ? this.startForm.form.values : undefined;\n            this.activitiProcess.startProcess(this.selectedProcessDef.id, this.name, outcome, formValues, this.variables).subscribe(\n                (res) => {\n                    this.name = '';\n                    this.start.emit(res);\n                },\n                (err) => {\n                    this.errorMessageId = 'ADF_PROCESS_LIST.START_PROCESS.ERROR.START';\n                    this.error.error(err);\n                }\n            );\n        }\n    }\n\n    public cancelStartProcess() {\n        this.cancel.emit();\n    }\n\n    hasStartForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.hasStartForm;\n    }\n\n    isProcessDefinitionEmpty() {\n        return this.processDefinitions ? (this.processDefinitions.length > 0 || this.errorMessageId) : this.errorMessageId;\n    }\n\n    isStartFormMissingOrValid(): boolean {\n        if (this.startForm) {\n            return this.startForm.form && this.startForm.form.isValid;\n        } else {\n            return true;\n        }\n    }\n\n    validateForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.id && this.processNameInput.valid && this.isStartFormMissingOrValid();\n    }\n\n    private resetSelectedProcessDefinition() {\n        this.selectedProcessDef = new ProcessDefinitionRepresentation();\n    }\n\n    private resetErrorMessage(): void {\n        this.errorMessageId = '';\n    }\n\n    hasErrorMessage(): boolean {\n        return this.processDefinitions.length === 0 && !this.errorMessageId;\n    }\n\n    public onOutcomeClick(outcome: string) {\n        this.startProcess(outcome);\n    }\n\n    public reset() {\n        this.resetSelectedProcessDefinition();\n        this.name = '';\n        if (this.startForm) {\n            this.startForm.data = {};\n        }\n        this.resetErrorMessage();\n    }\n\n    hasProcessName(): boolean {\n        return this.name ? true : false;\n    }\n\n    displayFn(process: any) {\n        if (process) {\n            let processName = process;\n            if (typeof process !== 'string') {\n                processName = process.name;\n            }\n            return processName;\n        }\n    }\n\n    displayDropdown(event) {\n        event.stopPropagation();\n        if (!this.inputAutocomplete.panelOpen) {\n            this.processDefinitionInput.setValue('');\n            this.inputAutocomplete.openPanel();\n        } else {\n            this.inputAutocomplete.closePanel();\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.processNameInput;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessFilterRequestRepresentation {\n    processDefinitionId: string;\n    appDefinitionId: string;\n    state: string;\n    sort: string;\n    page: number;\n    size: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj && obj.processDefinitionId || null;\n        this.appDefinitionId = obj && obj.appDefinitionId || null;\n        this.state = obj && obj.state || null;\n        this.sort = obj && obj.sort || null;\n        this.page = obj && obj.page || 0;\n        this.size = obj && obj.size || 25;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { TaskListModule } from '../task-list/task-list.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\n\nimport { ProcessAuditDirective } from './components/process-audit.directive';\nimport { ProcessFiltersComponent } from './components/process-filters.component';\nimport { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';\nimport { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';\nimport { ProcessInstanceListComponent } from './components/process-list.component';\nimport { StartProcessInstanceComponent } from './components/start-process.component';\nimport { FormModule } from '../form/form.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        TaskListModule,\n        PeopleModule,\n        ContentWidgetModule,\n        ProcessCommentsModule,\n        FormModule\n    ],\n    declarations: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    exports: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ]\n})\nexport class ProcessListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService, TranslationService, CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, EventEmitter, Input, OnInit, Output, ContentChild } from '@angular/core';\nimport { Observable, Observer, of } from 'rxjs';\nimport { AppDefinitionRepresentationModel } from '../task-list';\nimport { IconModel } from './icon.model';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-apps',\n    templateUrl: 'apps-list.component.html',\n    styleUrls: ['./apps-list.component.scss']\n})\nexport class AppsListComponent implements OnInit, AfterContentInit {\n\n    public static LAYOUT_LIST: string = 'LIST';\n    public static LAYOUT_GRID: string = 'GRID';\n    public static DEFAULT_TASKS_APP: string = 'tasks';\n    public static DEFAULT_TASKS_APP_NAME: string = 'ADF_TASK_LIST.APPS.TASK_APP_NAME';\n    public static DEFAULT_TASKS_APP_THEME: string = 'theme-2';\n    public static DEFAULT_TASKS_APP_ICON: string = 'glyphicon-asterisk';\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    /** (**required**) Defines the layout of the apps. There are two possible\n     * values, \"GRID\" and \"LIST\".\n     */\n    @Input()\n    layoutType: string = AppsListComponent.LAYOUT_GRID;\n\n    /** Provides a way to filter the apps to show. */\n    @Input()\n    filtersAppId: any[];\n\n    /** Emitted when an app entry is clicked. */\n    @Output()\n    appClick: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    private appsObserver: Observer<AppDefinitionRepresentationModel>;\n    apps$: Observable<AppDefinitionRepresentationModel>;\n\n    currentApp: AppDefinitionRepresentationModel;\n\n    appList: AppDefinitionRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    loading: boolean = false;\n\n    hasEmptyCustomContentTemplate: boolean = false;\n\n    constructor(\n        private appsProcessService: AppsProcessService,\n        private translationService: TranslationService) {\n            this.apps$ = new Observable<AppDefinitionRepresentationModel>((observer) => this.appsObserver = observer)\n                .pipe(share());\n    }\n\n    ngOnInit() {\n        if (!this.isValidType()) {\n            this.setDefaultLayoutType();\n        }\n\n        this.apps$.subscribe((app: any) => {\n            this.appList.push(app);\n        });\n        this.iconsMDL = new IconModel();\n        this.load();\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyCustomContent) {\n            this.hasEmptyCustomContentTemplate = true;\n        }\n    }\n\n    private load() {\n        this.loading = true;\n        this.appsProcessService.getDeployedApplications()\n        .subscribe(\n            (res: AppDefinitionRepresentationModel[]) => {\n                this.filterApps(res).forEach((app: AppDefinitionRepresentationModel) => {\n                    if (this.isDefaultApp(app)) {\n                        app.theme = AppsListComponent.DEFAULT_TASKS_APP_THEME;\n                        app.icon = AppsListComponent.DEFAULT_TASKS_APP_ICON;\n                        this.appsObserver.next(app);\n                    } else if (app.deploymentId) {\n                        this.appsObserver.next(app);\n                    }\n                    this.loading = false;\n                });\n            },\n            (err) => {\n                this.error.emit(err);\n                this.loading = false;\n            }\n        );\n    }\n\n    isDefaultApp(app) {\n        return app.defaultAppId === AppsListComponent.DEFAULT_TASKS_APP;\n    }\n\n    getAppName(app) {\n        return this.isDefaultApp(app)\n            ? this.translationService.get(AppsListComponent.DEFAULT_TASKS_APP_NAME)\n            : of(app.name);\n    }\n\n    /**\n     * Pass the selected app as next\n     * @param app\n     */\n    public selectApp(app: AppDefinitionRepresentationModel) {\n        this.currentApp = app;\n        this.appClick.emit(app);\n    }\n\n    /**\n     * Return true if the appId is the current app\n     * @param appId\n     */\n    isSelected(appId: number): boolean {\n        return (this.currentApp !== undefined && appId === this.currentApp.id);\n    }\n\n    private filterApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        const filteredApps: AppDefinitionRepresentationModel[] = [];\n        if (this.filtersAppId) {\n            apps.filter((app: AppDefinitionRepresentationModel) => {\n                this.filtersAppId.forEach((filter) => {\n                    if (app.defaultAppId === filter.defaultAppId ||\n                        app.deploymentId === filter.deploymentId ||\n                        app.name === filter.name ||\n                        app.id === filter.id ||\n                        app.modelId === filter.modelId ||\n                        app.tenantId === filter.tenantId) {\n                        filteredApps.push(app);\n                    }\n                });\n            });\n        } else {\n            return apps;\n        }\n        return filteredApps;\n    }\n\n    /**\n     * Check if the value of the layoutType property is an allowed value\n     */\n    isValidType(): boolean {\n        if (this.layoutType && (this.layoutType === AppsListComponent.LAYOUT_LIST || this.layoutType === AppsListComponent.LAYOUT_GRID)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Assign the default value to LayoutType\n     */\n    setDefaultLayoutType(): void {\n        this.layoutType = AppsListComponent.LAYOUT_GRID;\n    }\n\n    /**\n     * Return true if the layout type is LIST\n     */\n    isList(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_LIST;\n    }\n\n    /**\n     * Return true if the layout type is GRID\n     */\n    isGrid(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_GRID;\n    }\n\n    isEmpty(): boolean {\n        return this.appList.length === 0;\n    }\n\n    isLoading(): boolean {\n        return this.loading;\n    }\n\n    getTheme(app: AppDefinitionRepresentationModel): string {\n        return app.theme ? app.theme : '';\n    }\n\n    getBackgroundIcon(app: AppDefinitionRepresentationModel): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(app.icon);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n    selector: 'adf-select-apps-dialog',\n    templateUrl: 'select-apps-dialog-component.html'\n})\nexport class SelectAppsDialogComponent {\n\n    processApps: any;\n\n    selectedProcess: any;\n\n    constructor(private appsProcessService: AppsProcessService,\n                public dialogRef: MatDialogRef<SelectAppsDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.appsProcessService.getDeployedApplications().subscribe(\n            (apps: any[]) => {\n                this.processApps = apps.filter((currentApp) => {\n                    return currentApp.id;\n                });\n            }\n        );\n    }\n\n    onStart(): void {\n        this.dialogRef.close(this.selectedProcess);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { AppsListComponent } from './apps-list.component';\nimport { SelectAppsDialogComponent } from './select-apps-dialog-component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ],\n    exports: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ],\n    entryComponents: [\n        SelectAppsDialogComponent\n    ]\n})\nexport class AppsListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, ThumbnailService, EmptyListComponent } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-task-attachment-list',\n    styleUrls: ['./task-attachment-list.component.scss'],\n    templateUrl: './task-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Disable/Enable read only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or a view\n     * option is selected from the context menu by the user from within the component.\n     * Returns a Blob representing the clicked object.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs while fetching the attachments. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.loadAttachmentsByTaskId(changes['taskId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset(): void {\n        this.attachments = [];\n    }\n\n    hasCustomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByTaskId(this.taskId);\n        });\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByTaskId(taskId: string) {\n        if (taskId) {\n            this.isLoading = true;\n            this.reset();\n            const opts = 'true';\n            this.activitiContentService.getTaskRelatedContent(taskId, opts).subscribe(\n                (res: any) => {\n                    const attachList = [];\n                    res.data.forEach((content) => {\n                        attachList.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.attachments = attachList;\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                (res: any) => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, EmptyListComponent , ThumbnailService } from '@alfresco/adf-core';\nimport { AfterContentInit, ContentChild, Component, EventEmitter, Input, NgZone, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-process-attachment-list',\n    styleUrls: ['./process-attachment-list.component.scss'],\n    templateUrl: './process-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Disable/Enable read-only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or the\n     * view option is selected from the context menu by the user from\n     * within the component. Returns a Blob representing the object\n     * that was clicked.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when the attachment list is not able to fetch the attachments\n     * (eg, following a network error).\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.loadAttachmentsByProcessInstanceId(changes['processInstanceId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset() {\n        this.attachments = [];\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByProcessInstanceId(this.processInstanceId);\n        });\n    }\n\n    hasCustomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByProcessInstanceId(processInstanceId: string) {\n        if (processInstanceId) {\n            this.reset();\n            this.isLoading = true;\n            const opts: string =  'true';\n            this.activitiContentService.getProcessRelatedContent(processInstanceId, opts).subscribe(\n                (res: any) => {\n                    res.data.forEach((content) => {\n                        this.attachments.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    private deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                (res: any) => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-process-attachment',\n    styleUrls: ['./create-process-attachment.component.css'],\n    templateUrl: './create-process-attachment.component.html'\n})\nexport class CreateProcessAttachmentComponent implements OnChanges {\n\n    /** (required) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Emitted when an error occurs while creating or uploading an attachment\n     * from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is successfully created or uploaded\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.processInstanceId = changes['processInstanceId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createProcessRelatedContent(this.processInstanceId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-task-attachment',\n    styleUrls: ['./create-task-attachment.component.scss'],\n    templateUrl: './create-task-attachment.component.html'\n})\nexport class AttachmentComponent implements OnChanges {\n\n    /** (required) The numeric ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when an error occurs while creating or uploading an\n     *  attachment from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is created or uploaded successfully\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.taskId = changes['taskId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createTaskRelatedContent(this.taskId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { TaskAttachmentListComponent } from './task-attachment-list.component';\nimport { ProcessAttachmentListComponent } from './process-attachment-list.component';\nimport { CreateProcessAttachmentComponent } from './create-process-attachment.component';\nimport { AttachmentComponent } from './create-task-attachment.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MaterialModule\n    ],\n    declarations: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ],\n    exports: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ]\n})\nexport class AttachmentModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { ProcessListModule } from './process-list/process-list.module';\nimport { TaskListModule } from './task-list/task-list.module';\nimport { AppsListModule } from './app-list/apps-list.module';\nimport { ProcessCommentsModule } from './process-comments/process-comments.module';\nimport { AttachmentModule } from './attachment/attachment.module';\nimport { PeopleModule } from './people/people.module';\nimport { FormModule } from './form/form.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-process-services',\n                source: 'assets/adf-process-services'\n            }\n        }\n    ],\n    exports: [\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule\n    ]\n})\nexport class ProcessModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ProcessModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-process-services',\n                        source: 'assets/adf-process-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ProcessModuleLazy\n        };\n    }\n}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule\n    ],\n    exports: [\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule\n    ]\n})\nexport class ProcessModuleLazy {}\n"],"names":["from","map","catchError","Observable","forkJoin","throwError","Injectable","AlfrescoApiService","EventEmitter","Component","AppsProcessService","Input","Output","of","DatePipe","LogService","ViewChild","Directive","ContentService","CardViewTextItemModel","CardViewDateItemModel","TranslationService","AppConfigService","UserTaskFilterRepresentation","tslib_1.__extends","TaskQueryRepresentation","UserProcessModel","flatMap","filter","switchMap","forms","PaginationComponent","UserPreferenceValues","BehaviorSubject","moment","UserPreferencesService","ContentChild","CustomEmptyContentTemplateDirective","CustomLoadingContentTemplateDirective","DataTableSchema","MatDialog","CardViewMapItemModel","BpmUserService","share","AuthenticationService","PeopleProcessService","CardViewUpdateService","TemplateRef","JSON_FORMAT","PDF_FORMAT","MOMENT_DATE_FORMATS","FormFieldModel","FormModel","FormControl","Validators","defaultIfEmpty","DateAdapter","MomentDateAdapter","MAT_DATE_FORMATS","ViewEncapsulation","FormBuilder","FormService","UploadService","MatAutocompleteModule","MatButtonModule","MatCardModule","MatDialogModule","MatCheckboxModule","MatDatepickerModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatOptionModule","MatRadioModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatProgressSpinnerModule","MatNativeDateModule","MatRippleModule","MatTooltipModule","MatChipsModule","MatMenuModule","NgModule","MAT_LABEL_GLOBAL_OPTIONS","CommentProcessService","FormsModule","ReactiveFormsModule","CommonModule","CoreModule","DataColumnListComponent","debounceTime","DocumentListService","SitesService","ContentNodeSelectorService","SearchService","ExternalAlfrescoApiService","Inject","MAT_DIALOG_DATA","Subject","AppConfigValues","mergeMap","zip","ThumbnailService","ProcessContentService","ActivitiContentService","ContentNodeDialogService","UploadWidgetComponent","NodesApiService","WidgetComponent","ContentNodeSelectorModule","FormOutcomeModel","EcmModelService","FormEvent","FormErrorEvent","FormOutcomeEvent","WidgetVisibilityService","NodeService","FormRenderingService","FormBaseComponent","FlexLayoutModule","MatAutocompleteTrigger","MatDialogRef","NgZone","EmptyListComponent","tslib_1.__values","TRANSLATION_PROVIDER"],"mappings":"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"}
