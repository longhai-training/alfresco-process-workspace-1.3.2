{"version":3,"file":"adf-process-services.js.map","sources":["ng://@alfresco/adf-process-services/process-list/models/filter-process.model.ts","ng://@alfresco/adf-process-services/process-list/services/process-filter.service.ts","ng://@alfresco/adf-process-services/app-list/icon.model.ts","ng://@alfresco/adf-process-services/process-list/components/process-filters.component.ts","ng://@alfresco/adf-process-services/process-list/models/process-definition.model.ts","ng://@alfresco/adf-process-services/process-list/models/process-instance-variable.model.ts","ng://@alfresco/adf-process-services/process-list/models/process-instance.model.ts","ng://@alfresco/adf-process-services/process-list/models/process-list.model.ts","ng://@alfresco/adf-process-services/process-list/services/process.service.ts","ng://@alfresco/adf-process-services/process-list/components/process-instance-header.component.ts","ng://@alfresco/adf-process-services/task-list/models/filter.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-preset.model.ts","ng://@alfresco/adf-process-services/task-list/models/form.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-details.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-list.model.ts","ng://@alfresco/adf-process-services/task-list/services/tasklist.service.ts","ng://@alfresco/adf-process-services/task-list/components/task-list.component.ts","ng://@alfresco/adf-process-services/task-list/components/checklist.component.ts","ng://@alfresco/adf-process-services/task-list/validators/task-description.validator.ts","ng://@alfresco/adf-process-services/task-list/components/task-header.component.ts","ng://@alfresco/adf-process-services/task-list/components/task-details.component.ts","ng://@alfresco/adf-process-services/task-list/components/no-task-detail-template.directive.ts","ng://@alfresco/adf-process-services/task-list/services/task-filter.service.ts","ng://@alfresco/adf-process-services/task-list/components/task-filters.component.ts","ng://@alfresco/adf-process-services/task-list/components/task-audit.directive.ts","ng://@alfresco/adf-process-services/task-list/components/start-task.component.ts","ng://@alfresco/adf-process-services/task-list/components/task-standalone.component.ts","ng://@alfresco/adf-process-services/task-list/components/attach-form.component.ts","ng://@alfresco/adf-process-services/task-list/services/process-upload.service.ts","ng://@alfresco/adf-process-services/task-list/services/task-upload.service.ts","ng://@alfresco/adf-process-services/task-list/models/start-task.model.ts","ng://@alfresco/adf-process-services/task-list/models/task-details.event.ts","ng://@alfresco/adf-process-services/task-list/models/user-event.model.ts","ng://@alfresco/adf-process-services/task-list/models/user-group.model.ts","ng://@alfresco/adf-process-services/material.module.ts","ng://@alfresco/adf-process-services/process-comments/process-comments.component.ts","ng://@alfresco/adf-process-services/process-comments/process-comments.module.ts","ng://@alfresco/adf-process-services/people/components/people-search/people-search.component.ts","ng://@alfresco/adf-process-services/people/components/people/people.component.ts","ng://@alfresco/adf-process-services/people/components/people-list/people-list.component.ts","ng://@alfresco/adf-process-services/people/helpers/getDisplayUser.ts","ng://@alfresco/adf-process-services/people/components/people-search-field/people-search-field.component.ts","ng://@alfresco/adf-process-services/people/components/people-selector/people-selector.component.ts","ng://@alfresco/adf-process-services/people/directives/people-search-action-label.directive.ts","ng://@alfresco/adf-process-services/people/directives/people-search-title.directive.ts","ng://@alfresco/adf-process-services/people/people.module.ts","ng://@alfresco/adf-process-services/content-widget/attach-file-widget-dialog.component.ts","ng://@alfresco/adf-process-services/content-widget/attach-file-widget-dialog.service.ts","ng://@alfresco/adf-process-services/content-widget/attach-file-widget.component.ts","ng://@alfresco/adf-process-services/content-widget/attach-folder-widget.component.ts","ng://@alfresco/adf-process-services/content-widget/content-widget.module.ts","ng://@alfresco/adf-process-services/form/form.component.ts","ng://@alfresco/adf-process-services/form/start-form.component.ts","ng://@alfresco/adf-process-services/form/form.module.ts","ng://@alfresco/adf-process-services/task-list/task-list.module.ts","ng://@alfresco/adf-process-services/process-list/components/process-instance-tasks.component.ts","ng://@alfresco/adf-process-services/process-list/components/process-instance-details.component.ts","ng://@alfresco/adf-process-services/process-list/components/process-audit.directive.ts","ng://@alfresco/adf-process-services/process-list/models/process-preset.model.ts","ng://@alfresco/adf-process-services/process-list/components/process-list.component.ts","ng://@alfresco/adf-process-services/process-list/components/start-process.component.ts","ng://@alfresco/adf-process-services/process-list/models/process-instance-filter.model.ts","ng://@alfresco/adf-process-services/process-list/process-list.module.ts","ng://@alfresco/adf-process-services/app-list/apps-list.component.ts","ng://@alfresco/adf-process-services/app-list/select-apps-dialog-component.ts","ng://@alfresco/adf-process-services/app-list/apps-list.module.ts","ng://@alfresco/adf-process-services/attachment/task-attachment-list.component.ts","ng://@alfresco/adf-process-services/attachment/process-attachment-list.component.ts","ng://@alfresco/adf-process-services/attachment/create-process-attachment.component.ts","ng://@alfresco/adf-process-services/attachment/create-task-attachment.component.ts","ng://@alfresco/adf-process-services/attachment/attachment.module.ts","ng://@alfresco/adf-process-services/process.module.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ProcessFilterRequestRepresentation,\n    ProcessInstanceFilterRepresentation,\n    UserProcessInstanceFilterRepresentation\n} from '@alfresco/js-api';\n\nexport class FilterProcessRepresentationModel implements UserProcessInstanceFilterRepresentation {\n    appId: number;\n    filter: ProcessInstanceFilterRepresentation;\n    icon: string;\n    id: number;\n    index: number;\n    name: string;\n    recent: boolean;\n\n    constructor(obj: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = obj.filter || null;\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter() {\n        return !!this.filter;\n    }\n}\n\n/**\n * This object represent the parameters of a process filter.\n */\nexport class ProcessFilterParamRepresentationModel implements ProcessFilterRequestRepresentation {\n\n    processDefinitionId?: string;\n    processInstanceId?: string;\n    appDefinitionId?: number;\n    state?: any;\n    sort?: any;\n    page?: number;\n    size?: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj.processDefinitionId || null;\n        this.appDefinitionId = obj.appDefinitionId || null;\n        this.processInstanceId = obj.processInstanceId || null;\n        this.state = obj.state || null;\n        this.sort = obj.sort || null;\n        this.page = obj.page || null;\n        this.size = obj.size || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessFilterService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets all filters defined for a Process App.\n     * @param appId ID of the target app\n     * @returns Array of filter details\n     */\n    getProcessFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    response.data.forEach((filter: FilterProcessRepresentationModel) => {\n                        const filterModel = new FilterProcessRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterById(filterId: number, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.id === filterId);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Retrieves the process filter by name.\n     * @param filterName Name of the filter\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    getProcessFilterByName(filterName: string, appId?: number): Observable<FilterProcessRepresentationModel> {\n        return from(this.callApiProcessFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    return response.data.find((filter) => filter.name === filterName);\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates and returns the default filters for an app.\n     * @param appId ID of the target app\n     * @returns Default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterProcessRepresentationModel[]> {\n        const runningFilter = this.getRunningFilterInstance(appId);\n        const runningObservable = this.addProcessFilter(runningFilter);\n\n        const completedFilter = this.getCompletedFilterInstance(appId);\n        const completedObservable = this.addProcessFilter(completedFilter);\n\n        const allFilter = this.getAllFilterInstance(appId);\n        const allObservable = this.addProcessFilter(allFilter);\n\n        return new Observable((observer) => {\n            forkJoin(\n                runningObservable,\n                completedObservable,\n                allObservable\n            ).subscribe(\n                (res) => {\n                    const filters: FilterProcessRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === runningFilter.name) {\n                            runningFilter.id = filter.id;\n                            filters.push(runningFilter);\n                        } else if (filter.name === completedFilter.name) {\n                            completedFilter.id = filter.id;\n                            filters.push(completedFilter);\n                        } else if (filter.name === allFilter.name) {\n                            allFilter.id = filter.id;\n                            filters.push(allFilter);\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.handleProcessError(err);\n                });\n        });\n    }\n\n    /**\n     * Creates and returns a filter that matches \"running\" process instances.\n     * @param appId ID of the target app\n     * @returns Filter just created\n     */\n    public getRunningFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Running',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-random',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'running' }\n        });\n    }\n\n    /**\n     * Returns a static Completed filter instance.\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    private getCompletedFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'Completed',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-ok-sign',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'completed' }\n        });\n    }\n\n    /**\n     * Returns a static All filter instance.\n     * @param appId ID of the target app\n     * @returns Details of the filter\n     */\n    private getAllFilterInstance(appId: number): FilterProcessRepresentationModel {\n        return new FilterProcessRepresentationModel({\n            'name': 'All',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-th',\n            'filter': { 'sort': 'created-desc', 'name': '', 'state': 'all' }\n        });\n    }\n\n    /**\n     * Adds a filter.\n     * @param filter The filter to add\n     * @returns The filter just added\n     */\n    addProcessFilter(filter: FilterProcessRepresentationModel): Observable<FilterProcessRepresentationModel> {\n        return from(this.alfrescoApiService.getInstance().activiti.userFiltersApi.createUserProcessInstanceFilter(filter))\n            .pipe(\n                map((response: FilterProcessRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserProcessInstanceFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of filter details\n     */\n    callApiProcessFilters(appId?: number) {\n        if (appId) {\n            return this.alfrescoApiService.getInstance().activiti.userFiltersApi.getUserProcessInstanceFilters({ appId: appId });\n        } else {\n            return this.alfrescoApiService.getInstance().activiti.userFiltersApi.getUserProcessInstanceFilters();\n        }\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nexport class IconModel {\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    private iconsMDL: Map<string, string>;\n\n    constructor() {\n        this.initIconsMDL();\n    }\n\n    mapGlyphiconToMaterialDesignIcons(icon: string) {\n        return this.iconsMDL.get(icon) ? this.iconsMDL.get(icon) : IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON;\n    }\n\n    /**\n     * Map all the bootstrap glyphicon icons with Material design material icon\n     */\n    initIconsMDL() {\n        this.iconsMDL = new Map<string, string>();\n\n        this.iconsMDL.set('glyphicon-asterisk', 'ac_unit');\n        this.iconsMDL.set('glyphicon-plus', 'add');\n        this.iconsMDL.set('glyphicon-euro', 'euro_symbol');\n        this.iconsMDL.set('glyphicon-cloud', 'cloud');\n        this.iconsMDL.set('glyphicon-envelope', 'mail');\n        this.iconsMDL.set('glyphicon-pencil', 'create');\n        this.iconsMDL.set('glyphicon-glass', 'local_bar');\n        this.iconsMDL.set('glyphicon-music', 'music_note');\n        this.iconsMDL.set('glyphicon-search', 'search');\n        this.iconsMDL.set('glyphicon-heart', 'favorite');\n        this.iconsMDL.set('glyphicon-heart-empty', 'favorite_border');\n        this.iconsMDL.set('glyphicon-star', 'star');\n        this.iconsMDL.set('glyphicon-star-empty', 'star_border');\n        this.iconsMDL.set('glyphicon-user', 'person');\n        this.iconsMDL.set('glyphicon-film', 'movie_creation');\n        this.iconsMDL.set('glyphicon-th-large', 'view_comfy');\n        this.iconsMDL.set('glyphicon-th', 'dashboard');\n        this.iconsMDL.set('glyphicon-th-list', 'list');\n        this.iconsMDL.set('glyphicon-ok', 'done');\n        this.iconsMDL.set('glyphicon-remove', 'cancel');\n        this.iconsMDL.set('glyphicon-zoom-in', 'zoom_in');\n        this.iconsMDL.set('glyphicon-zoom-out', 'zoom_out');\n        this.iconsMDL.set('glyphicon-off', 'highlight_off');\n        this.iconsMDL.set('glyphicon-signal', 'signal_cellular_4_bar');\n        this.iconsMDL.set('glyphicon-cog', 'settings');\n        this.iconsMDL.set('glyphicon-trash', 'delete');\n        this.iconsMDL.set('glyphicon-home', 'home');\n        this.iconsMDL.set('glyphicon-file', 'insert_drive_file');\n        this.iconsMDL.set('glyphicon-time', 'access_time');\n        this.iconsMDL.set('glyphicon-road', 'map');\n        this.iconsMDL.set('glyphicon-download-alt', 'file_download');\n        this.iconsMDL.set('glyphicon-download', 'file_download');\n        this.iconsMDL.set('glyphicon-upload', 'file_upload');\n        this.iconsMDL.set('glyphicon-inbox', 'inbox');\n        this.iconsMDL.set('glyphicon-play-circle', 'play_circle_outline');\n        this.iconsMDL.set('glyphicon-repeat', 'refresh');\n        this.iconsMDL.set('glyphicon-refresh', 'sync');\n        this.iconsMDL.set('glyphicon-list-alt', 'event_note');\n        this.iconsMDL.set('glyphicon-lock', 'lock_outline');\n        this.iconsMDL.set('glyphicon-flag', 'assistant_photo');\n        this.iconsMDL.set('glyphicon-headphones', 'headset');\n        this.iconsMDL.set('glyphicon-volume-up', 'volume_up');\n        this.iconsMDL.set('glyphicon-tag', 'local_offer');\n        this.iconsMDL.set('glyphicon-tags', 'local_offer');\n        this.iconsMDL.set('glyphicon-book', 'library_books');\n        this.iconsMDL.set('glyphicon-bookmark', 'collections_bookmark');\n        this.iconsMDL.set('glyphicon-print', 'local_printshop');\n        this.iconsMDL.set('glyphicon-camera', 'local_see');\n        this.iconsMDL.set('glyphicon-list', 'view_list');\n        this.iconsMDL.set('glyphicon-facetime-video', 'video_call');\n        this.iconsMDL.set('glyphicon-picture', 'photo');\n        this.iconsMDL.set('glyphicon-map-marker', 'add_location');\n        this.iconsMDL.set('glyphicon-adjust', 'brightness_4');\n        this.iconsMDL.set('glyphicon-tint', 'invert_colors');\n        this.iconsMDL.set('glyphicon-edit', 'edit');\n        this.iconsMDL.set('glyphicon-share', 'share');\n        this.iconsMDL.set('glyphicon-check', 'assignment_turned_in');\n        this.iconsMDL.set('glyphicon-move', 'open_with');\n        this.iconsMDL.set('glyphicon-play', 'play_arrow');\n        this.iconsMDL.set('glyphicon-eject', 'eject');\n        this.iconsMDL.set('glyphicon-plus-sign', 'add_circle');\n        this.iconsMDL.set('glyphicon-minus-sign', 'remove_circle');\n        this.iconsMDL.set('glyphicon-remove-sign', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-sign', 'check_circle');\n        this.iconsMDL.set('glyphicon-question-sign', 'help');\n        this.iconsMDL.set('glyphicon-info-sign', 'info');\n        this.iconsMDL.set('glyphicon-screenshot', 'flare');\n        this.iconsMDL.set('glyphicon-remove-circle', 'cancel');\n        this.iconsMDL.set('glyphicon-ok-circle', 'add_circle');\n        this.iconsMDL.set('glyphicon-ban-circle', 'block');\n        this.iconsMDL.set('glyphicon-share-alt', 'redo');\n        this.iconsMDL.set('glyphicon-exclamation-sign', 'error');\n        this.iconsMDL.set('glyphicon-gift', 'giftcard');\n        this.iconsMDL.set('glyphicon-leaf', 'spa');\n        this.iconsMDL.set('glyphicon-fire', 'whatshot');\n        this.iconsMDL.set('glyphicon-eye-open', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-eye-close', 'remove_red_eye');\n        this.iconsMDL.set('glyphicon-warning-sign', 'warning');\n        this.iconsMDL.set('glyphicon-plane', 'airplanemode_active');\n        this.iconsMDL.set('glyphicon-calendar', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-random', 'shuffle');\n        this.iconsMDL.set('glyphicon-comment', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-magnet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-retweet', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-shopping-cart', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-close', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-folder-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hdd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bullhorn', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-bell', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-certificate', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-up', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-thumbs-down', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-hand-left', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-globe', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-wrench', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tasks', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-filter', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-briefcase', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-dashboard', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-paperclip', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-link', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-pushpin', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-usd', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-gbp', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-sort', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-flash', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-record', 'radio_button_checked');\n        this.iconsMDL.set('glyphicon-save', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-open', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-saved', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-send', 'send');\n        this.iconsMDL.set('glyphicon-floppy-disk', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-credit-card', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cutlery', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-earphone', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-phone-alt', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tower', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-stats', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-download', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-cloud-upload', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-conifer', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-tree-deciduous', IconModel.DEFAULT_TASKS_APP_MATERIAL_ICON);\n        this.iconsMDL.set('glyphicon-align-left', 'format_align_left');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { ProcessInstanceFilterRepresentation, UserProcessInstanceFilterRepresentation } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\nimport { FilterProcessRepresentationModel } from '../models/filter-process.model';\nimport { ProcessFilterService } from './../services/process-filter.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-process-instance-filters',\n    templateUrl: './process-filters.component.html',\n    styleUrls: ['process-filters.component.scss']\n})\nexport class ProcessFiltersComponent implements OnInit, OnChanges {\n\n    /** The parameters to filter the task filter. If there is no match then the default one\n     * (ie, the first filter in the list) is selected.\n     */\n    @Input()\n    filterParam: FilterProcessRepresentationModel;\n\n    /** Emitted when the user selects a filter from the list. */\n    @Output()\n    filterClick: EventEmitter<UserProcessInstanceFilterRepresentation> = new EventEmitter<UserProcessInstanceFilterRepresentation>();\n\n    /** Emitted when the list of filters has been successfully loaded from the server. */\n    @Output()\n    success: EventEmitter<ProcessInstanceFilterRepresentation[]> = new EventEmitter<ProcessInstanceFilterRepresentation[]>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggle to show or hide the filter's icon. */\n    @Input()\n    showIcon: boolean = true;\n\n    /** Emitted when a process filter is selected. */\n    @Output()\n    filterSelected: EventEmitter<ProcessInstanceFilterRepresentation> = new EventEmitter<ProcessInstanceFilterRepresentation>();\n\n    filter$: Observable<ProcessInstanceFilterRepresentation>;\n\n    currentFilter: ProcessInstanceFilterRepresentation;\n\n    filters: UserProcessInstanceFilterRepresentation [] = [];\n\n    private iconsMDL: IconModel;\n\n    constructor(private processFilterService: ProcessFilterService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appId = changes['appId'];\n        const appName = changes['appName'];\n        const filter = changes['filterParam'];\n\n        if (appId && (appId.currentValue || appId.currentValue === null)) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectProcessFilter(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.processFilterService.getProcessFilters(appId).subscribe(\n            (res: ProcessInstanceFilterRepresentation[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.processFilterService.createDefaultFilters(appId).subscribe(\n                        (resDefault: ProcessInstanceFilterRepresentation[]) => {\n                            this.resetFilter();\n                            this.filters = resDefault;\n                            this.selectProcessFilter(this.filterParam);\n                            this.success.emit(resDefault);\n                        },\n                        (errDefault: any) => {\n                            this.error.emit(errDefault);\n                        }\n                    );\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectProcessFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n                this.selectProcessFilter(this.filterParam);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param filter\n     */\n    public selectFilter(filter: ProcessInstanceFilterRepresentation) {\n        this.currentFilter = filter;\n        this.filterClick.emit(filter);\n    }\n\n    /**\n     * Select the first filter of a list if present\n     */\n    public selectProcessFilter(filterParam: FilterProcessRepresentationModel) {\n        if (filterParam) {\n            this.filters.filter((processFilter: UserProcessInstanceFilterRepresentation, index) => {\n                if (filterParam.name && filterParam.name.toLowerCase() === processFilter.name.toLowerCase() ||\n                    filterParam.id === processFilter.id ||\n                    filterParam.index === index) {\n                    this.currentFilter = processFilter;\n                    this.filterSelected.emit(processFilter);\n                }\n            });\n        }\n        if (this.isCurrentFilterEmpty()) {\n            this.selectDefaultTaskFilter();\n        }\n    }\n\n    /**\n     * Select the Running filter\n     */\n    public selectRunningFilter() {\n        this.selectProcessFilter(this.processFilterService.getRunningFilterInstance(null));\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n            this.filterSelected.emit(this.filters[0]);\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): ProcessInstanceFilterRepresentation {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    private isCurrentFilterEmpty(): boolean {\n        return this.currentFilter === undefined || null;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessDefinitionRepresentation {\n    id: string;\n    name: string;\n    description: string;\n    key: string;\n    category: string;\n    version: number;\n    deploymentId: string;\n    tenantId: string;\n    metaDataValues: any[];\n    hasStartForm: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.key = obj && obj.key || null;\n        this.category = obj && obj.category || null;\n        this.version = obj && obj.version || 0;\n        this.deploymentId = obj && obj.deploymentId || null;\n        this.tenantId = obj && obj.tenantId || null;\n        this.metaDataValues = obj && obj.metaDataValues || [];\n        this.hasStartForm = obj && obj.hasStartForm === true ? true : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstanceVariable implements RestVariable {\n\n    name?: string;\n    scope?: string;\n    type?: string;\n    value?: string;\n    valueUrl?: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name !== undefined ? obj.name : null;\n        this.scope = obj && obj.scope !== undefined ? obj.scope : null;\n        this.value = obj && obj.value !== undefined ? obj.value : null;\n        this.valueUrl = obj && obj.valueUrl !== undefined ? obj.valueUrl : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LightUserRepresentation, ProcessInstanceRepresentation, RestVariable } from '@alfresco/js-api';\n\nexport class ProcessInstance implements ProcessInstanceRepresentation {\n\n    businessKey?: string;\n    ended?: Date;\n    graphicalNotationDefined?: boolean;\n    id?: string;\n    name?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number;\n    startFormDefined?: boolean;\n    started?: Date;\n    startedBy?: LightUserRepresentation;\n    tenantId?: string;\n    variables?: RestVariable[];\n\n    constructor(data?: any) {\n        this.businessKey = data && data.businessKey !== undefined ? data.businessKey : null;\n        this.ended = data && data.ended !== undefined ? data.ended : null;\n        this.graphicalNotationDefined = data && data.graphicalNotationDefined !== undefined ? data.graphicalNotationDefined : null;\n        this.id = data && data.id !== undefined ? data.id : null;\n        this.name = data && data.name !== undefined ? data.name : null;\n        this.processDefinitionCategory = data && data.processDefinitionCategory !== undefined ? data.processDefinitionCategory : null;\n        this.processDefinitionDeploymentId = data && data.processDefinitionDeploymentId !== undefined ? data.processDefinitionDeploymentId : null;\n        this.processDefinitionDescription = data && data.processDefinitionDescription !== undefined ? data.processDefinitionDescription : null;\n        this.processDefinitionId = data && data.processDefinitionId !== undefined ? data.processDefinitionId : null;\n        this.processDefinitionKey = data && data.processDefinitionKey !== undefined ? data.processDefinitionKey : null;\n        this.processDefinitionName = data && data.processDefinitionName !== undefined ? data.processDefinitionName : null;\n        this.processDefinitionVersion = data && data.processDefinitionVersion !== undefined ? data.processDefinitionVersion : null;\n        this.startFormDefined = data && data.startFormDefined !== undefined ? data.startFormDefined : null;\n        this.started = data && data.started !== undefined ? data.started : null;\n        this.startedBy = data && data.startedBy !== undefined ? data.startedBy : null;\n        this.tenantId = data && data.tenantId !== undefined ? data.tenantId : null;\n        this.variables = data && data.variables !== undefined ? data.variables : null;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ProcessInstance } from './process-instance.model';\n\nexport class ProcessListModel {\n    size: number;\n    total: number;\n    start: number;\n    length: number;\n    data: ProcessInstance [];\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.size = obj.size || null;\n            this.total = obj.total || null;\n            this.start = obj.start || null;\n            this.length = obj.length || null;\n            this.data = obj.data || [];\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, FormValues } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { RestVariable } from '@alfresco/js-api';\nimport { Observable, from, throwError, of } from 'rxjs';\nimport { TaskDetailsModel } from '../../task-list';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { ProcessDefinitionRepresentation } from '../models/process-definition.model';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessListModel } from '../models/process-list.model';\nimport { map, catchError } from 'rxjs/operators';\n\ndeclare let moment: any;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets process instances for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of process instances\n     */\n    getProcessInstances(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessInstances(requestNode))\n            .pipe(\n                map((res: any) => {\n                    if (processDefinitionKey) {\n                        const filtered = res.data.filter((process) => process.processDefinitionKey === processDefinitionKey);\n                        res.data = filtered;\n                        return res;\n                    } else {\n                        return res;\n                    }\n                }),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets processes for a filter and optionally a process definition.\n     * @param requestNode Filter for instances\n     * @param processDefinitionKey Limits returned instances to a process definition\n     * @returns List of processes\n     */\n    getProcesses(requestNode: ProcessFilterParamRepresentationModel, processDefinitionKey?: string): Observable<ProcessListModel> {\n        return this.getProcessInstances(requestNode, processDefinitionKey)\n            .pipe(catchError(() => {\n                return of(new ProcessListModel({}));\n            }));\n    }\n\n    /**\n     * Fetches the Process Audit information as a PDF.\n     * @param processId ID of the target process\n     * @returns Binary PDF data\n     */\n    fetchProcessAuditPdfById(processId: string): Observable<Blob> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessAuditPdf(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Fetches the Process Audit information in a JSON format.\n     * @param processId ID of the target process\n     * @returns JSON data\n     */\n    fetchProcessAuditJsonById(processId: string): Observable<any> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessAuditJson(processId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets Process Instance metadata.\n     * @param processInstanceId ID of the target process\n     * @returns Metadata for the instance\n     */\n    getProcess(processInstanceId: string): Observable<ProcessInstance> {\n        return from(this.alfrescoApiService.getInstance().activiti.processApi.getProcessInstance(processInstanceId))\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets task instances for a process instance.\n     * @param processInstanceId ID of the process instance\n     * @param state Task state filter (can be \"active\" or \"completed\")\n     * @returns Array of task instance details\n     */\n    getProcessTasks(processInstanceId: string, state?: string): Observable<TaskDetailsModel[]> {\n        const taskOpts = state ? {\n            processInstanceId: processInstanceId,\n            state: state\n        } : {\n                processInstanceId: processInstanceId\n            };\n        return from(this.alfrescoApiService.getInstance().activiti.taskApi.listTasks(taskOpts))\n            .pipe(\n                map(this.extractData),\n                map((tasks) => tasks.map((task: any) => {\n                    task.created = moment(task.created, 'YYYY-MM-DD').format();\n                    return task;\n                })),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions associated with an app.\n     * @param appId ID of a target app\n     * @returns Array of process definitions\n     */\n    getProcessDefinitions(appId?: number): Observable<ProcessDefinitionRepresentation[]> {\n        const opts = appId ? {\n            latest: true,\n            appDefinitionId: appId\n        } : {\n                latest: true\n            };\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processApi.getProcessDefinitions(opts)\n        )\n            .pipe(\n                map(this.extractData),\n                map((processDefs) => processDefs.map((pd) => new ProcessDefinitionRepresentation(pd))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Starts a process based on a process definition, name, form values or variables.\n     * @param processDefinitionId Process definition ID\n     * @param name Process name\n     * @param outcome Process outcome\n     * @param startFormValues Values for the start form\n     * @param variables Array of process instance variables\n     * @returns Details of the process instance just started\n     */\n    startProcess(processDefinitionId: string, name: string, outcome?: string, startFormValues?: FormValues, variables?: ProcessInstanceVariable[]): Observable<ProcessInstance> {\n        const startRequest: any = {\n            name: name,\n            processDefinitionId: processDefinitionId\n        };\n        if (outcome) {\n            startRequest.outcome = outcome;\n        }\n        if (startFormValues) {\n            startRequest.values = startFormValues;\n        }\n        if (variables) {\n            startRequest.variables = variables;\n        }\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processApi.startNewProcessInstance(startRequest)\n        )\n            .pipe(\n                map((pd) => new ProcessInstance(pd)),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Cancels a process instance.\n     * @param processInstanceId ID of process to cancel\n     * @returns Null response notifying when the operation is complete\n     */\n    cancelProcess(processInstanceId: string): Observable<void> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processApi.deleteProcessInstance(processInstanceId)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Gets the variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @returns Array of instance variable info\n     */\n    getProcessInstanceVariables(processInstanceId: string): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId)\n        )\n            .pipe(\n                map((processVars: any[]) => processVars.map((currentProcessVar) => new ProcessInstanceVariable(currentProcessVar))),\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Creates or updates variables for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variables Variables to update\n     * @returns Array of instance variable info\n     */\n    createOrUpdateProcessInstanceVariables(processInstanceId: string, variables: RestVariable[]): Observable<ProcessInstanceVariable[]> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.createOrUpdateProcessInstanceVariables(processInstanceId, variables)\n        ).pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    /**\n     * Deletes a variable for a process instance.\n     * @param processInstanceId ID of the target process\n     * @param variableName Name of the variable to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteProcessInstanceVariable(processInstanceId: string, variableName: string): Observable<void> {\n        return from(\n            this.alfrescoApiService.getInstance().activiti.processInstanceVariablesApi.deleteProcessInstanceVariable(processInstanceId, variableName)\n        )\n            .pipe(\n                catchError((err) => this.handleProcessError(err))\n            );\n    }\n\n    private extractData(res: any) {\n        return res.data || {};\n    }\n\n    private handleProcessError(error: any) {\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfigService, CardViewDateItemModel, CardViewItem, CardViewBaseItemModel, CardViewTextItemModel, TranslationService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ProcessInstance } from '../models/process-instance.model';\n\n@Component({\n    selector: 'adf-process-instance-header',\n    templateUrl: './process-instance-header.component.html',\n    styleUrls: ['./process-instance-header.component.css']\n})\nexport class ProcessInstanceHeaderComponent implements OnChanges {\n\n    /** (**required**) Full details of the process instance to display information about. */\n    @Input()\n    processInstance: ProcessInstance;\n\n    properties: CardViewItem [];\n\n    constructor(private translationService: TranslationService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.refreshData();\n    }\n\n    refreshData(): void {\n        if (this.processInstance) {\n            const defaultProperties = this.initDefaultProperties();\n            const filteredProperties: string[] = this.appConfig.get('adf-process-instance-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private initDefaultProperties(): any[] {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.STATUS',\n                    value: this.getProcessStatus(),\n                    key: 'status'\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.END_DATE',\n                    value: this.processInstance.ended,\n                    format: 'MMM DD YYYY',\n                    key: 'ended',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.END_DATE_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CATEGORY',\n                    value: this.processInstance.processDefinitionCategory,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY',\n                    value: this.processInstance.businessKey,\n                    key: 'businessKey',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.BUSINESS_KEY_DEFAULT')\n                }),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED_BY',\n                    value: this.getStartedByFullName(),\n                    key: 'assignee',\n                    default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.CREATED_BY_DEFAULT')\n                }),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n                    value: this.processInstance.started,\n                    format: 'MMM DD YYYY',\n                    key: 'created'\n                }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.ID',\n                value: this.processInstance.id,\n                key: 'id'\n            }),\n            new CardViewTextItemModel(\n                {label: 'ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION',\n                value: this.processInstance.processDefinitionDescription,\n                key: 'description',\n                default: this.translationService.instant('ADF_PROCESS_LIST.PROPERTIES.DESCRIPTION_DEFAULT')\n            })\n        ];\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    getProcessStatus(): string {\n        if (this.processInstance) {\n            return this.isRunning() ? 'Running' : 'Completed';\n        }\n    }\n\n    getStartedByFullName(): string {\n        let fullName = '';\n        if (this.processInstance && this.processInstance.startedBy) {\n            fullName += this.processInstance.startedBy.firstName || '';\n            fullName += fullName ? ' ' : '';\n            fullName += this.processInstance.startedBy.lastName || '';\n        }\n        return fullName;\n    }\n\n    isRunning(): boolean {\n        return this.processInstance && !this.processInstance.ended;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskFilterRepresentation, UserTaskFilterRepresentation, TaskQueryRepresentation } from '@alfresco/js-api';\n\nexport class AppDefinitionRepresentationModel {\n    defaultAppId: string;\n    deploymentId: string;\n    name: string;\n    description: string;\n    theme: string;\n    icon: string;\n    id: number;\n    modelId: number;\n    tenantId: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.defaultAppId = obj.defaultAppId ? obj.defaultAppId : null;\n            this.deploymentId = obj.deploymentId ? obj.deploymentId : null;\n            this.name = obj.name ? obj.name : null;\n            this.description = obj.description ? obj.description : null;\n            this.theme = obj.theme ? obj.theme : null;\n            this.icon = obj.icon ? obj.icon : null;\n            this.id = obj.id ? obj.id : null;\n            this.modelId = obj.modelId ? obj.modelId : null;\n            this.tenantId = obj.tenantId ? obj.tenantId : null;\n        }\n    }\n}\n\nexport class FilterParamsModel {\n    id: number;\n    name: string;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.index = obj.index;\n        }\n    }\n}\n\nexport class FilterRepresentationModel implements UserTaskFilterRepresentation {\n    id: number;\n    appId: number;\n    name: string;\n    recent: boolean;\n    icon: string;\n    filter: TaskFilterRepresentation;\n    index: number;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.appId = obj.appId || null;\n            this.name = obj.name || null;\n            this.recent = !!obj.recent;\n            this.icon = obj.icon || null;\n            this.filter = new UserTaskFilterRepresentation(obj.filter);\n            this.index = obj.index;\n        }\n    }\n\n    hasFilter() {\n        return this.filter ? true : false;\n    }\n}\n\nexport class TaskQueryRequestRepresentationModel extends TaskQueryRepresentation {\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let taskPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        },\n        {\n            'key': 'assignee',\n            'type': 'text',\n            'title': 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the Form.\n */\nexport class Form {\n\n    id: number;\n    name: string;\n\n    constructor(id: number, name: string) {\n        this.name = name;\n        this.id = id;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the details of a task.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { TaskRepresentation } from '@alfresco/js-api';\nimport { UserGroupModel } from './user-group.model';\n\nexport class TaskDetailsModel implements TaskRepresentation {\n    id?: string;\n    name?: string;\n    assignee?: UserProcessModel;\n    priority?: number;\n    adhocTaskCanBeReassigned?: boolean;\n    category?: string;\n    created?: Date;\n    description?: string;\n    parentName?: string;\n    dueDate?: Date;\n    duration?: number;\n    endDate?: Date;\n    executionId?: string;\n    formKey?: string;\n    initiatorCanCompleteTask?: boolean;\n    managerOfCandidateGroup?: boolean;\n    memberOfCandidateGroup?: boolean;\n    memberOfCandidateUsers?: boolean;\n    involvedGroups?: UserGroupModel [];\n    involvedPeople?: UserProcessModel [];\n    parentTaskId?: string;\n    parentTaskName?: string;\n    processDefinitionCategory?: string;\n    processDefinitionDeploymentId?: string;\n    processDefinitionDescription?: string;\n    processDefinitionId?: string;\n    processDefinitionKey?: string;\n    processDefinitionName?: string;\n    processDefinitionVersion?: number = 0;\n    processInstanceId?: string;\n    processInstanceName?: string;\n    processInstanceStartUserId?: string;\n    taskDefinitionKey?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n            this.priority = obj.priority;\n            this.assignee = obj.assignee ? new UserProcessModel(obj.assignee) : null;\n            this.adhocTaskCanBeReassigned = obj.adhocTaskCanBeReassigned;\n            this.category = obj.category || null;\n            this.created = obj.created || null;\n            this.description = obj.description || null;\n            this.dueDate = obj.dueDate || null;\n            this.duration = obj.duration || null;\n            this.endDate = obj.endDate || null;\n            this.executionId = obj.executionId || null;\n            this.formKey = obj.formKey || null;\n            this.initiatorCanCompleteTask = !!obj.initiatorCanCompleteTask;\n            this.managerOfCandidateGroup = !!obj.managerOfCandidateGroup;\n            this.memberOfCandidateGroup = !!obj.memberOfCandidateGroup;\n            this.memberOfCandidateUsers = !!obj.memberOfCandidateUsers;\n            this.involvedGroups = obj.involvedGroups;\n            this.involvedPeople = obj.involvedPeople;\n            this.parentTaskId = obj.parentTaskId || null;\n            this.parentTaskName = obj.parentTaskName || null;\n            this.processDefinitionCategory = obj.processDefinitionCategory || null;\n            this.processDefinitionDeploymentId = obj.processDefinitionDeploymentId || null;\n            this.processDefinitionDescription = obj.processDefinitionDescription || null;\n            this.processDefinitionId = obj.processDefinitionId || null;\n            this.processDefinitionKey = obj.processDefinitionKey || null;\n            this.processDefinitionName = obj.processDefinitionName || null;\n            this.processDefinitionVersion = obj.processDefinitionVersion || 0;\n            this.processInstanceId = obj.processInstanceId || null;\n            this.processInstanceName = obj.processInstanceName || null;\n            this.processInstanceStartUserId = obj.processInstanceStartUserId || null;\n            this.taskDefinitionKey = obj.taskDefinitionKey || null;\n        }\n    }\n\n    getFullName(): string {\n        let fullName: string = '';\n\n        if (this.assignee) {\n            const firstName: string = this.assignee.firstName ? this.assignee.firstName : '';\n            const lastName: string = this.assignee.lastName ? this.assignee.lastName : '';\n            fullName = `${firstName} ${lastName}`;\n        }\n\n        return fullName.trim();\n    }\n\n    isCompleted(): boolean {\n        return !!this.endDate;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskListModel  {\n    size?: number;\n    total?: number;\n    start?: number;\n    length?: number;\n    data?: TaskDetailsModel[] = [];\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n            if (input.data) {\n                this.data = input.data.map((item: any) => {\n                    return new TaskDetailsModel(item);\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, forkJoin, throwError, of } from 'rxjs';\nimport { map, catchError, switchMap, flatMap, filter } from 'rxjs/operators';\nimport { FilterRepresentationModel, TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport {\n    TaskQueryRepresentation,\n    AssigneeIdentifierRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskListService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets all the filters in the list that belong to a task.\n     * @param taskId ID of the target task\n     * @param filterList List of filters to search through\n     * @returns Filters belonging to the task\n     */\n    getFilterForTaskById(taskId: string, filterList: FilterRepresentationModel[]): Observable<FilterRepresentationModel> {\n        return from(filterList)\n            .pipe(\n                flatMap((data: FilterRepresentationModel) => this.isTaskRelatedToFilter(taskId, data)),\n                filter((data: FilterRepresentationModel) => data != null)\n            );\n    }\n\n    /**\n     * Gets the search query for a task based on the supplied filter.\n     * @param filter The filter to use\n     * @returns The search query\n     */\n    private generateTaskRequestNodeFromFilter(filterModel: FilterRepresentationModel): TaskQueryRequestRepresentationModel {\n        const requestNode = {\n            appDefinitionId: filterModel.appId,\n            assignment: filterModel.filter.assignment,\n            state: filterModel.filter.state,\n            sort: filterModel.filter.sort\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    /**\n     * Checks if a taskId is filtered with the given filter.\n     * @param taskId ID of the target task\n     * @param filterModel The filter you want to check\n     * @returns The filter if it is related or null otherwise\n     */\n    isTaskRelatedToFilter(taskId: string, filterModel: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        const requestNodeForFilter = this.generateTaskRequestNodeFromFilter(filterModel);\n        return from(this.callApiTasksFiltered(requestNodeForFilter))\n            .pipe(\n                map((res: any) => {\n                    return res.data.find((element) => element.id === taskId) ? filterModel : null;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks matching the supplied query.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    getTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets tasks matching a query and state value.\n     * @param requestNode Query to search for tasks\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findTasksByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTasks(requestNode)\n            .pipe(catchError(() => of(new TaskListModel())));\n    }\n\n    /**\n     * Gets all tasks matching a query and state value.\n     * @param requestNode Query to search for tasks.\n     * @param state Task state. Can be \"open\" or \"completed\".\n     * @returns List of tasks\n     */\n    findAllTaskByState(requestNode: TaskQueryRequestRepresentationModel, state?: string): Observable<TaskListModel> {\n        if (state) {\n            requestNode.state = state;\n        }\n        return this.getTotalTasks(requestNode)\n            .pipe(\n                switchMap((res: any) => {\n                    requestNode.size = res.total;\n                    return this.getTasks(requestNode);\n                })\n            );\n    }\n\n    /**\n     * Gets all tasks matching the supplied query but ignoring the task state.\n     * @param requestNode Query to search for tasks\n     * @returns List of tasks\n     */\n    findAllTasksWithoutState(requestNode: TaskQueryRequestRepresentationModel): Observable<TaskListModel> {\n        return forkJoin(\n            this.findTasksByState(requestNode, 'open'),\n            this.findAllTaskByState(requestNode, 'completed'),\n            (activeTasks: TaskListModel, completedTasks: TaskListModel) => {\n                const tasks = Object.assign({}, activeTasks);\n                tasks.total += completedTasks.total;\n                tasks.data = tasks.data.concat(completedTasks.data);\n                return tasks;\n            }\n        );\n    }\n\n    /**\n     * Gets details for a task.\n     * @param taskId ID of the target task.\n     * @returns Task details\n     */\n    getTaskDetails(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiTaskDetails(taskId))\n            .pipe(\n                map((details: any) => {\n                    return new TaskDetailsModel(details);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the checklist for a task.\n     * @param id ID of the target task\n     * @returns Array of checklist task details\n     */\n    getTaskChecklist(id: string): Observable<TaskDetailsModel[]> {\n        return from(this.callApiTaskChecklist(id))\n            .pipe(\n                map((response: any) => {\n                    const checklists: TaskDetailsModel[] = [];\n                    response.data.forEach((checklist) => {\n                        checklists.push(new TaskDetailsModel(checklist));\n                    });\n                    return checklists;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all available reusable forms.\n     * @returns Array of form details\n     */\n    getFormList(): Observable<Form[]> {\n        const opts = {\n            'filter': 'myReusableForms', // String | filter\n            'sort': 'modifiedDesc', // String | sort\n            'modelType': 2 // Integer | modelType\n        };\n\n        return from(this.apiService.getInstance().activiti.modelsApi.getModels(opts))\n            .pipe(\n                map((response: any) => {\n                    const forms: Form[] = [];\n                    response.data.forEach((form) => {\n                        forms.push(new Form(form.id, form.name));\n                    });\n                    return forms;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Attaches a form to a task.\n     * @param taskId ID of the target task\n     * @param formId ID of the form to add\n     * @returns Null response notifying when the operation is complete\n     */\n    attachFormToATask(taskId: string, formId: number): Observable<any> {\n        return from(this.apiService.taskApi.attachForm(taskId, { 'formId': formId }))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a subtask (ie, a checklist task) to a parent task.\n     * @param task The task to add\n     * @returns The subtask that was added\n     */\n    addTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiAddTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a subtask (ie, a checklist task) from a parent task.\n     * @param taskId The task to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a form from a task.\n     * @param taskId Task id related to form\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteForm(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.callApiDeleteForm(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gives completed status to a task.\n     * @param taskId ID of the target task\n     * @returns Null response notifying when the operation is complete\n     */\n    completeTask(taskId: string) {\n        return from(this.apiService.taskApi.completeTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the total number of the tasks found by a query.\n     * @param requestNode Query to search for tasks\n     * @returns Number of tasks\n     */\n    public getTotalTasks(requestNode: TaskQueryRequestRepresentationModel): Observable<any> {\n        requestNode.size = 0;\n        return from(this.callApiTasksFiltered(requestNode))\n            .pipe(\n                map((res: any) => {\n                    return res;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Creates a new standalone task.\n     * @param task Details of the new task\n     * @returns Details of the newly created task\n     */\n    createNewTask(task: TaskDetailsModel): Observable<TaskDetailsModel> {\n        return from(this.callApiCreateTask(task))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user or group.\n     * @param taskId The task to assign\n     * @param requestNode User or group to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTask(taskId: string, requestNode: any): Observable<TaskDetailsModel> {\n        const assignee = { assignee: requestNode.id };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Assigns a task to a user.\n     * @param taskId ID of the task to assign\n     * @param userId ID of the user to assign the task to\n     * @returns Details of the assigned task\n     */\n    assignTaskByUserId(taskId: string, userId: string): Observable<TaskDetailsModel> {\n        const assignee = <AssigneeIdentifierRepresentation> { assignee: userId };\n        return from(this.callApiAssignTask(taskId, assignee))\n            .pipe(\n                map((response: TaskDetailsModel) => {\n                    return new TaskDetailsModel(response);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Claims a task for the current user.\n     * @param taskId ID of the task to claim\n     * @returns Details of the claimed task\n     */\n    claimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.apiService.taskApi.claimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Un-claims a task for the current user.\n     * @param taskId ID of the task to unclaim\n     * @returns Null response notifying when the operation is complete\n     */\n    unclaimTask(taskId: string): Observable<TaskDetailsModel> {\n        return from(this.apiService.taskApi.unclaimTask(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Updates the details (name, description, due date) for a task.\n     * @param taskId ID of the task to update\n     * @param updated Data to update the task (as a `TaskUpdateRepresentation` instance).\n     * @returns Updated task details\n     */\n    updateTask(taskId: any, updated): Observable<TaskDetailsModel> {\n        return from(this.apiService.taskApi.updateTask(taskId, updated))\n            .pipe(\n                map((result) => <TaskDetailsModel> result),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetches the Task Audit information in PDF format.\n     * @param taskId ID of the target task\n     * @returns Binary PDF data\n     */\n    fetchTaskAuditPdfById(taskId: string): Observable<Blob> {\n        return from(this.apiService.taskApi.getTaskAuditPdf(taskId))\n            .pipe(\n                map((data) => <Blob> data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Fetch the Task Audit information in JSON format\n     * @param taskId ID of the target task\n     * @returns JSON data\n     */\n    fetchTaskAuditJsonById(taskId: string): Observable<any> {\n        return from(this.apiService.taskApi.getTaskAuditJson(taskId))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiTasksFiltered(requestNode: TaskQueryRepresentation): Promise<TaskListModel> {\n        return this.apiService.taskApi.listTasks(requestNode);\n    }\n\n    private callApiTaskDetails(taskId: string): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.getTask(taskId);\n    }\n\n    private callApiAddTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.addSubtask(task.parentTaskId, task);\n    }\n\n    private callApiDeleteTask(taskId: string): Promise<any> {\n        return this.apiService.taskApi.deleteTask(taskId);\n    }\n\n    private callApiDeleteForm(taskId: string): Promise<any> {\n        return this.apiService.taskApi.removeForm(taskId);\n    }\n\n    private callApiTaskChecklist(taskId: string): Promise<TaskListModel> {\n        return this.apiService.taskApi.getChecklist(taskId);\n    }\n\n    private callApiCreateTask(task: TaskDetailsModel): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.createNewTask(task);\n    }\n\n    private callApiAssignTask(taskId: string, requestNode: AssigneeIdentifierRepresentation): Promise<TaskDetailsModel> {\n        return this.apiService.taskApi.assignTask(taskId, requestNode);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRowEvent, DataTableAdapter, DataTableSchema, CustomEmptyContentTemplateDirective, CustomLoadingContentTemplateDirective } from '@alfresco/adf-core';\nimport {\n    AppConfigService, PaginationComponent, PaginatedComponent,\n    UserPreferencesService, UserPreferenceValues, PaginationModel } from '@alfresco/adf-core';\nimport {\n    AfterContentInit, Component, ContentChild, EventEmitter,\n    Input, OnChanges, Output, SimpleChanges } from '@angular/core';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskListModel } from '../models/task-list.model';\nimport { taskPresetsDefaultModel } from '../models/task-preset.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-tasklist',\n    templateUrl: './task-list.component.html',\n    styleUrls: ['./task-list.component.css']\n})\nexport class TaskListComponent extends DataTableSchema implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-task-list.presets';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    requestNode: TaskQueryRequestRepresentationModel;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Instance Id of the process. */\n    @Input()\n    processInstanceId: string;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Current state of the process. Possible values are: `completed`, `active`. */\n    @Input()\n    state: string;\n\n    /** The assignment of the process. Possible values are: \"assignee\" (the current user\n     * is the assignee), \"candidate\" (the current user is a task candidate, \"group_x\" (the task\n     * is assigned to a group where the current user is a member,\n     * no value (the current user is involved).\n     */\n    @Input()\n    assignment: string;\n\n    /** Define the sort order of the tasks. Possible values are : `created-desc`,\n     * `created-asc`, `due-desc`, `due-asc`\n     */\n    @Input()\n    sort: string;\n\n    /** Name of the tasklist. */\n    @Input()\n    name: string;\n\n    /** Define which task id should be selected after reloading. If the task id doesn't\n     * exist or nothing is passed then the first task will be selected.\n     */\n    @Input()\n    landingTaskId: string;\n\n    /**\n     * Data source object that represents the number and the type of the columns that\n     * you want to show.\n     */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** The id of a task */\n    @Input()\n    taskId: string;\n\n    /** Toggles inclusion of Process Instances */\n    @Input()\n    includeProcessInstance: boolean;\n\n    /** Starting point of the list within the full set of tasks. */\n    @Input()\n    start: number;\n\n    /** Emitted when a task in the list is clicked */\n    @Output()\n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when rows are selected/unselected */\n    @Output()\n    rowsSelected: EventEmitter<any[]> = new EventEmitter<any[]>();\n\n    /** Emitted when the task list is loaded */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    currentInstanceId: string;\n    selectedInstances: any[];\n    pagination: BehaviorSubject<PaginationModel>;\n\n    /** The page number of the tasks to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of tasks to fetch. Default value: 25. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Filter the tasks. Display only tasks with `created_date` after `dueAfter`. */\n    @Input()\n    dueAfter: string;\n\n    /** Filter the tasks. Display only tasks with `created_date` before `dueBefore`. */\n    @Input()\n    dueBefore: string;\n\n    rows: any[] = [];\n    isLoading: boolean = true;\n    sorting: any[] = ['created', 'desc'];\n\n    /**\n     * Toggles custom data source mode.\n     * When enabled the component reloads data from it's current source instead of the server side.\n     * This allows generating and displaying custom data sets (i.e. filtered out content).\n     *\n     * @memberOf TaskListComponent\n     */\n    hasCustomDataSource: boolean = false;\n\n    constructor(private taskListService: TaskListService,\n                appConfigService: AppConfigService,\n                private userPreferences: UserPreferencesService) {\n        super(appConfigService, TaskListComponent.PRESET_KEY, taskPresetsDefaultModel);\n        this.userPreferences.select(UserPreferenceValues.PaginationSize).subscribe((pageSize) => {\n            this.size = pageSize;\n        });\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId) {\n            this.reload();\n        }\n    }\n\n    setCustomDataSource(rows: any[]): void {\n        if (rows) {\n            this.rows = rows;\n            this.hasCustomDataSource = true;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = true;\n\n        const landingTaskId = changes['landingTaskId'];\n        const page = changes['page'];\n        const size = changes['size'];\n        if (landingTaskId && landingTaskId.currentValue && this.isEqualToCurrentId(landingTaskId.currentValue)) {\n            changed = false;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n\n        return changed;\n    }\n\n    reload(): void {\n        if (!this.hasCustomDataSource) {\n            this.requestNode = this.createRequestNode();\n            this.load(this.requestNode);\n        } else {\n            this.isLoading = false;\n        }\n    }\n\n    private load(requestNode: TaskQueryRequestRepresentationModel) {\n        this.isLoading = true;\n        this.loadTasksByState().subscribe(\n            (tasks) => {\n                this.rows = this.optimizeTaskDetails(tasks.data);\n                this.selectTask(this.landingTaskId);\n                this.success.emit(tasks);\n                this.isLoading = false;\n                this.pagination.next({\n                    count: tasks.data.length,\n                    maxItems: this.size,\n                    skipCount: this.page * this.size,\n                    totalItems: tasks.total\n                });\n            }, (error) => {\n                this.error.emit(error);\n                this.isLoading = false;\n            });\n    }\n\n    private loadTasksByState(): Observable<TaskListModel> {\n        return this.requestNode.state === 'all'\n            ? this.taskListService.findAllTasksWithoutState(this.requestNode)\n            : this.taskListService.findTasksByState(this.requestNode);\n    }\n\n    /**\n     * Select the task given in input if present\n     */\n    selectTask(taskIdSelected: string): void {\n        if (!this.isListEmpty()) {\n            let dataRow = null;\n            if (taskIdSelected) {\n                dataRow = this.rows.find((currentRow: any) => {\n                    return currentRow['id'] === taskIdSelected;\n                });\n            }\n            if (!dataRow && this.selectFirstRow) {\n                dataRow = this.rows[0];\n            }\n            if (dataRow) {\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            }\n        } else {\n            this.currentInstanceId = null;\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the taskId is the same of the selected task\n     * @param taskId\n     */\n    isEqualToCurrentId(taskId: string): boolean {\n        return this.currentInstanceId === taskId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    onRowClick(item: DataRowEvent) {\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    onRowSelect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowUnselect(event: CustomEvent) {\n        this.selectedInstances = [...event.detail.selection];\n        this.rowsSelected.emit(this.selectedInstances);\n    }\n\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    /**\n     * Optimize name field\n     * @param instances\n     */\n    private optimizeTaskDetails(instances: any[]): any[] {\n        instances = instances.map((task) => {\n            if (!task.name) {\n                task.name = 'No name';\n            }\n            return task;\n        });\n        return instances;\n    }\n\n    private createRequestNode() {\n\n        const requestNode = {\n            appDefinitionId: this.appId,\n            dueAfter: this.dueAfter ? moment(this.dueAfter).toDate() : null,\n            dueBefore: this.dueBefore ? moment(this.dueBefore).toDate() : null,\n            processInstanceId: this.processInstanceId,\n            processDefinitionId: this.processDefinitionId,\n            text: this.name,\n            assignment: this.assignment,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: this.start,\n            taskId: this.taskId,\n            includeProcessInstance: this.includeProcessInstance\n        };\n        return new TaskQueryRequestRepresentationModel(requestNode);\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\n\n@Component({\n    selector: 'adf-checklist',\n    templateUrl: './checklist.component.html',\n    styleUrls: ['./checklist.component.scss']\n})\nexport class ChecklistComponent implements OnChanges {\n\n    /** (required) The id of the parent task to which subtasks are\n     * attached.\n     */\n    @Input()\n    taskId: string;\n\n    /** Toggle readonly state of the form. All form widgets\n     * will render as readonly if enabled.\n     */\n    @Input()\n    readOnly: boolean = false;\n\n    /** (required) The assignee id that the subtasks are assigned to. */\n    @Input()\n    assignee: string;\n\n    /** Emitted when a new checklist task is created. */\n    @Output()\n    checklistTaskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    checklistTaskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('dialog')\n    addNewDialog: any;\n\n    taskName: string;\n\n    checklist: TaskDetailsModel [] = [];\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     */\n    constructor(private activitiTaskList: TaskListService,\n                private dialog: MatDialog) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getTaskChecklist(taskId.currentValue);\n            return;\n        }\n    }\n\n    public getTaskChecklist(taskId: string) {\n        this.checklist = [];\n        if (this.taskId) {\n            this.activitiTaskList.getTaskChecklist(this.taskId).subscribe(\n                (taskDetailsModel: TaskDetailsModel[]) => {\n                    taskDetailsModel.forEach((task) => {\n                        this.checklist.push(task);\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n        } else {\n            this.checklist = [];\n        }\n    }\n\n    showDialog() {\n        this.dialog.open(this.addNewDialog, { width: '350px' });\n    }\n\n    public add() {\n        const newTask = new TaskDetailsModel({\n            name: this.taskName,\n            parentTaskId: this.taskId,\n            assignee: { id: this.assignee }\n        });\n        this.activitiTaskList.addTask(newTask).subscribe(\n            (taskDetailsModel: TaskDetailsModel) => {\n                this.checklist.push(taskDetailsModel);\n                this.checklistTaskCreated.emit(taskDetailsModel);\n                this.taskName = '';\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n        this.cancel();\n    }\n\n    public delete(taskId: string) {\n        this.activitiTaskList.deleteTask(taskId).subscribe(\n            () => {\n                this.checklist = this.checklist.filter((check) => check.id !== taskId);\n                this.checklistTaskDeleted.emit(taskId);\n            },\n            (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    public cancel() {\n        this.dialog.closeAll();\n        this.taskName = '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '@alfresco/adf-core';\n\nexport class TaskDescriptionValidator implements CardViewItemValidator {\n\n    message: string = 'ADF_CLOUD_TASK_HEADER.FORM_VALIDATION.INVALID_FIELD';\n\n    isValid(value: any): boolean {\n        const isWhitespace = (value || '').trim().length === 0;\n        return value.length === 0 || !isWhitespace;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport {\n    BpmUserService,\n    CardViewDateItemModel,\n    CardViewItem,\n    CardViewMapItemModel,\n    CardViewTextItemModel,\n    CardViewBaseItemModel,\n    LogService,\n    TranslationService,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { TaskDescriptionValidator } from '../validators/task-description.validator';\n\n@Component({\n    selector: 'adf-task-header',\n    templateUrl: './task-header.component.html',\n    styleUrls: ['./task-header.component.scss']\n})\nexport class TaskHeaderComponent implements OnChanges, OnInit {\n\n    /** The name of the form. */\n    @Input()\n    formName: string = null;\n\n    /** (required) Details related to the task. */\n    @Input()\n    taskDetails: TaskDetailsModel;\n\n    /** Emitted when the task is claimed. */\n    @Output()\n    claim: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the task is unclaimed (ie, requeued). */\n    @Output()\n    unclaim: EventEmitter<any> = new EventEmitter<any>();\n\n    private currentUserId: number;\n\n    properties: CardViewItem [];\n    inEdit: boolean = false;\n\n    constructor(private activitiTaskService: TaskListService,\n                private bpmUserService: BpmUserService,\n                private translationService: TranslationService,\n                private logService: LogService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        this.loadCurrentBpmUserId();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.refreshData();\n    }\n\n    private initDefaultProperties(parentInfoMap) {\n        return [\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ASSIGNEE',\n                    value: this.taskDetails.getFullName(),\n                    key: 'assignee',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.ASSIGNEE_DEFAULT'),\n                    clickable: !this.isCompleted(),\n                    icon: 'create'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.STATUS',\n                    value: this.getTaskStatus(),\n                    key: 'status'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PRIORITY',\n                    value: this.taskDetails.priority,\n                    key: 'priority',\n                    editable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DUE_DATE',\n                    value: this.taskDetails.dueDate,\n                    key: 'dueDate',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DUE_DATE_DEFAULT'),\n                    editable: true\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CATEGORY',\n                    value: this.taskDetails.category,\n                    key: 'category',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.CATEGORY_DEFAULT')\n                }\n            ),\n            new CardViewMapItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_NAME',\n                    value: parentInfoMap,\n                    key: 'parentName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.PARENT_NAME_DEFAULT'),\n                    clickable: true\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.CREATED',\n                    value: this.taskDetails.created,\n                    key: 'created'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DURATION',\n                    value: this.getTaskDuration(),\n                    key: 'duration'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.PARENT_TASK_ID',\n                    value: this.taskDetails.parentTaskId,\n                    key: 'parentTaskId'\n                }\n            ),\n            new CardViewDateItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.END_DATE',\n                    value: this.taskDetails.endDate,\n                    key: 'endDate'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.ID',\n                    value: this.taskDetails.id,\n                    key: 'id'\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.DESCRIPTION',\n                    value: this.taskDetails.description,\n                    key: 'description',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.DESCRIPTION_DEFAULT'),\n                    multiline: true,\n                    editable: true,\n                    validators: [new TaskDescriptionValidator()]\n                }\n            ),\n            new CardViewTextItemModel(\n                {\n                    label: 'ADF_TASK_LIST.PROPERTIES.FORM_NAME',\n                    value: this.formName,\n                    key: 'formName',\n                    default: this.translationService.instant('ADF_TASK_LIST.PROPERTIES.FORM_NAME_DEFAULT'),\n                    clickable: !!this.formName,\n                    icon: 'create'\n                }\n            )\n        ];\n    }\n\n    /**\n     * Refresh the card data\n     */\n    refreshData() {\n        if (this.taskDetails) {\n            const parentInfoMap = this.getParentInfo();\n            const defaultProperties = this.initDefaultProperties(parentInfoMap);\n            const filteredProperties: string[] = this.appConfig.get('adf-task-header.presets.properties');\n            this.properties = defaultProperties.filter((cardItem) => this.isValidSelection(filteredProperties, cardItem));\n        }\n    }\n\n    private isValidSelection(filteredProperties: string[], cardItem: CardViewBaseItemModel): boolean {\n        return filteredProperties ? filteredProperties.indexOf(cardItem.key) >= 0 : true;\n    }\n\n    /**\n     * Loads current bpm userId\n     */\n    private loadCurrentBpmUserId(): void {\n        this.bpmUserService.getCurrentUserInfo().subscribe((res) => {\n            this.currentUserId = res ? +res.id : null;\n        });\n    }\n\n    /**\n     * Return the process parent information\n     */\n    getParentInfo() {\n        if (this.taskDetails.processInstanceId && this.taskDetails.processDefinitionName) {\n            return new Map([[this.taskDetails.processInstanceId, this.taskDetails.processDefinitionName]]);\n        }\n    }\n\n    /**\n     * Does the task have an assignee\n     */\n    public hasAssignee(): boolean {\n        return !!this.taskDetails.assignee ? true : false;\n    }\n\n    /**\n     * Returns true if the task is assigned to logged in user\n     */\n    public isAssignedTo(userId): boolean {\n        return this.hasAssignee() ? this.taskDetails.assignee.id === userId : false;\n    }\n\n    /**\n     * Return true if the task assigned\n     */\n    public isAssignedToCurrentUser(): boolean {\n        return this.hasAssignee() && this.isAssignedTo(this.currentUserId);\n    }\n\n    /**\n     * Return true if the user is a candidate member\n     */\n    isCandidateMember() {\n        return this.taskDetails.managerOfCandidateGroup || this.taskDetails.memberOfCandidateGroup || this.taskDetails.memberOfCandidateUsers;\n    }\n\n    /**\n     * Return true if the task claimable\n     */\n    public isTaskClaimable(): boolean {\n        return !this.hasAssignee() && this.isCandidateMember();\n    }\n\n    /**\n     * Return true if the task claimed by candidate member.\n     */\n    public isTaskClaimedByCandidateMember(): boolean {\n        return this.isCandidateMember() && this.isAssignedToCurrentUser() && !this.isCompleted();\n    }\n\n    /**\n     * Returns task's status\n     */\n    getTaskStatus(): string {\n        return (this.taskDetails && this.taskDetails.isCompleted()) ? 'Completed' : 'Running';\n    }\n\n    /**\n     * Claim task\n     *\n     * @param taskId\n     */\n    claimTask(taskId: string) {\n        this.activitiTaskService.claimTask(taskId).subscribe(\n            (res: any) => {\n                this.logService.info('Task claimed');\n                this.claim.emit(taskId);\n            });\n    }\n\n    /**\n     * Unclaim task\n     *\n     * @param taskId\n     */\n    unclaimTask(taskId: string) {\n        this.activitiTaskService.unclaimTask(taskId).subscribe(\n            (res: any) => {\n                this.logService.info('Task unclaimed');\n                this.unclaim.emit(taskId);\n            });\n    }\n\n    /**\n     * Returns true if the task is completed\n     */\n    isCompleted(): boolean {\n        return this.taskDetails && !!this.taskDetails.endDate;\n    }\n\n    getTaskDuration(): string {\n        return this.taskDetails.duration ? `${this.taskDetails.duration} ms` : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PeopleProcessService, UserProcessModel } from '@alfresco/adf-core';\nimport {\n    AuthenticationService,\n    CardViewUpdateService,\n    ClickNotification,\n    LogService,\n    UpdateNotification,\n    CommentsComponent\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { Observable, Observer } from 'rxjs';\nimport { ContentLinkModel, FormFieldValidator, FormModel, FormOutcomeEvent } from '@alfresco/adf-core';\nimport { TaskQueryRequestRepresentationModel } from '../models/filter.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-task-details',\n    templateUrl: './task-details.component.html',\n    styleUrls: ['./task-details.component.scss']\n})\nexport class TaskDetailsComponent implements OnInit, OnChanges {\n\n    @ViewChild('activitiComments')\n    activitiComments: CommentsComponent;\n\n    @ViewChild('activitiChecklist')\n    activitiChecklist: any;\n\n    @ViewChild('errorDialog')\n    errorDialog: TemplateRef<any>;\n\n    /** Toggles debug mode. */\n    @Input()\n    debugMode: boolean = false;\n\n    /** (**required**) The id of the task whose details we are asking for. */\n    @Input()\n    taskId: string;\n\n    /** Automatically renders the next task when the current one is completed. */\n    @Input()\n    showNextTask: boolean = true;\n\n    /** Toggles task details Header component. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles collapsed/expanded state of the Header component. */\n    @Input()\n    showHeaderContent: boolean = true;\n\n    /** Toggles `Involve People` feature for the Header component. */\n    @Input()\n    showInvolvePeople: boolean = true;\n\n    /** Toggles `Comments` feature for the Header component. */\n    @Input()\n    showComments: boolean = true;\n\n    /** Toggles `Checklist` feature for the Header component. */\n    @Input()\n    showChecklist: boolean = true;\n\n    /** Toggles rendering of the form title. */\n    @Input()\n    showFormTitle: boolean = false;\n\n    /** Toggles rendering of the `Complete` outcome button. */\n    @Input()\n    showFormCompleteButton: boolean = true;\n\n    /** Toggles rendering of the `Save` outcome button. */\n    @Input()\n    showFormSaveButton: boolean = true;\n\n    /** Toggles read-only state of the form. All form widgets render as read-only\n     * if enabled.\n     */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Toggles rendering of the `Refresh` button. */\n    @Input()\n    showFormRefreshButton: boolean = true;\n\n    /** Field validators for use with the form. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form field content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when a checklist task is created. */\n    @Output()\n    taskCreated: EventEmitter<TaskDetailsModel> = new EventEmitter<TaskDetailsModel>();\n\n    /** Emitted when a checklist task is deleted. */\n    @Output()\n    taskDeleted: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /** Emitted when a task is assigned. */\n    @Output()\n    assignTask: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when a task is claimed. */\n    @Output()\n    claimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when a task is unclaimed. */\n    @Output()\n    unClaimedTask: EventEmitter<string> = new EventEmitter<string>();\n\n    taskDetails: TaskDetailsModel;\n    taskFormName: string = null;\n\n    taskPeople: UserProcessModel[] = [];\n\n    noTaskDetailsTemplateComponent: TemplateRef<any>;\n\n    showAssignee: boolean = false;\n    showAttachForm: boolean = false;\n    internalReadOnlyForm: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    public errorDialogRef: MatDialogRef<TemplateRef<any>>;\n\n    peopleSearch: Observable<UserProcessModel[]>;\n\n    currentLoggedUser: UserRepresentation;\n    data: any;\n\n    constructor(private taskListService: TaskListService,\n                private authService: AuthenticationService,\n                private peopleProcessService: PeopleProcessService,\n                private logService: LogService,\n                private cardViewUpdateService: CardViewUpdateService,\n                private dialog: MatDialog) {\n\n        this.peopleSearch = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer)\n            .pipe(share());\n        this.authService.getBpmLoggedUser().subscribe((user: UserRepresentation) => {\n            this.currentLoggedUser = user;\n        });\n    }\n\n    ngOnInit() {\n        if (this.taskId) {\n            this.loadDetails(this.taskId);\n        }\n\n        this.cardViewUpdateService.itemUpdated$.subscribe(this.updateTaskDetails.bind(this));\n        this.cardViewUpdateService.itemClicked$.subscribe(this.clickTaskDetails.bind(this));\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const taskId = changes.taskId;\n        this.showAssignee = false;\n\n        if (taskId && !taskId.currentValue) {\n            this.reset();\n        } else if (taskId && taskId.currentValue) {\n            this.loadDetails(taskId.currentValue);\n        }\n    }\n\n    isStandaloneTask(): boolean {\n        return !(this.taskDetails && (!!this.taskDetails.processDefinitionId));\n    }\n\n    isStandaloneTaskWithForm(): boolean {\n        return this.isStandaloneTask() && this.hasFormKey();\n    }\n\n    isStandaloneTaskWithoutForm(): boolean {\n        return this.isStandaloneTask() && !this.hasFormKey();\n    }\n\n    isFormComponentVisible(): boolean {\n        return this.hasFormKey() && !this.isShowAttachForm();\n    }\n\n    isTaskStandaloneComponentVisible(): boolean {\n        return this.isStandaloneTaskWithoutForm() && !this.isShowAttachForm();\n    }\n\n    isShowAttachForm(): boolean {\n        return this.showAttachForm;\n    }\n\n    /**\n     * Reset the task details\n     */\n    private reset() {\n        this.taskDetails = null;\n    }\n\n    /**\n     * Check if the task has a form\n     */\n    hasFormKey(): boolean {\n        return (this.taskDetails && (!!this.taskDetails.formKey));\n    }\n\n    isTaskActive() {\n        return this.taskDetails && this.taskDetails.duration === null;\n    }\n\n    /**\n     * Save a task detail and update it after a successful response\n     *\n     * @param updateNotification\n     */\n    private updateTaskDetails(updateNotification: UpdateNotification) {\n        this.taskListService.updateTask(this.taskId, updateNotification.changed)\n            .subscribe(\n                () => {\n                    this.loadDetails(this.taskId);\n                }\n            );\n    }\n\n    private clickTaskDetails(clickNotification: ClickNotification) {\n        if (clickNotification.target.key === 'assignee') {\n            this.showAssignee = true;\n        }\n        if (clickNotification.target.key === 'formName') {\n            this.showAttachForm = true;\n        }\n    }\n\n    /**\n     * Load the activiti task details\n     * @param taskId\n     */\n    private loadDetails(taskId: string) {\n        this.taskPeople = [];\n        this.taskFormName = null;\n\n        if (taskId) {\n            this.taskListService.getTaskDetails(taskId).subscribe(\n                (res: TaskDetailsModel) => {\n                    this.showAttachForm = false;\n                    this.taskDetails = res;\n\n                    if (this.taskDetails.name === 'null') {\n                        this.taskDetails.name = 'No name';\n                    }\n\n                    const endDate: any = res.endDate;\n                    if (endDate && !isNaN(endDate.getTime())) {\n                        this.internalReadOnlyForm = true;\n                    } else {\n                        this.internalReadOnlyForm = this.readOnlyForm;\n                    }\n\n                    if (this.taskDetails && this.taskDetails.involvedPeople) {\n                        this.taskDetails.involvedPeople.forEach((user) => {\n                            this.taskPeople.push(new UserProcessModel(user));\n                        });\n                    }\n                });\n        }\n    }\n\n    isAssigned(): boolean {\n        return !!this.taskDetails.assignee;\n    }\n\n    private hasEmailAddress(): boolean {\n        return this.taskDetails.assignee.email ? true : false;\n    }\n\n    isAssignedToMe(): boolean {\n        return this.isAssigned() && this.hasEmailAddress() ?\n            this.isEmailEqual(this.taskDetails.assignee.email, this.currentLoggedUser.email) :\n            this.isExternalIdEqual(this.taskDetails.assignee.externalId, this.currentLoggedUser.externalId);\n    }\n\n    private isEmailEqual(assigneeMail, currentLoggedEmail): boolean {\n        return assigneeMail.toLocaleLowerCase() === currentLoggedEmail.toLocaleLowerCase();\n    }\n\n    private isExternalIdEqual(assigneeExternalId, currentUserExternalId): boolean {\n        return assigneeExternalId.toLocaleLowerCase() === currentUserExternalId.toLocaleLowerCase();\n    }\n\n    isCompleteButtonEnabled(): boolean {\n        return this.isAssignedToMe() || this.canInitiatorComplete();\n    }\n\n    isCompleteButtonVisible(): boolean {\n        return !this.hasFormKey() && this.isTaskActive() && this.isCompleteButtonEnabled();\n    }\n\n    canInitiatorComplete(): boolean {\n        return this.taskDetails.initiatorCanCompleteTask;\n    }\n\n    isSaveButtonVisible(): boolean {\n        return this.hasSaveButton() && (!this.canInitiatorComplete() || this.isAssignedToMe());\n    }\n\n    hasSaveButton(): boolean {\n        return this.showFormSaveButton;\n    }\n\n    /**\n     * Retrieve the next open task\n     * @param processInstanceId\n     * @param processDefinitionId\n     */\n    private loadNextTask(processInstanceId: string, processDefinitionId: string): void {\n        const requestNode = new TaskQueryRequestRepresentationModel(\n            {\n                processInstanceId: processInstanceId,\n                processDefinitionId: processDefinitionId\n            }\n        );\n        this.taskListService.getTasks(requestNode).subscribe(\n            (response) => {\n                if (response && response.length > 0) {\n                    this.taskDetails = new TaskDetailsModel(response[0]);\n                } else {\n                    this.reset();\n                }\n            }, (error) => {\n                this.error.emit(error);\n            });\n    }\n\n    /**\n     * Complete button clicked\n     */\n    onComplete(): void {\n        this.taskListService.completeTask(this.taskId).subscribe(\n            (res) => this.onFormCompleted(null)\n        );\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm = true;\n    }\n\n    onCancelAttachForm() {\n        this.showAttachForm = false;\n    }\n\n    onCompleteAttachForm() {\n        this.showAttachForm = false;\n        this.loadDetails(this.taskId);\n    }\n\n    onFormContentClick(content: ContentLinkModel): void {\n        this.formContentClicked.emit(content);\n    }\n\n    onFormSaved(form: FormModel): void {\n        this.formSaved.emit(form);\n    }\n\n    onFormCompleted(form: FormModel): void {\n        this.formCompleted.emit(form);\n        if (this.showNextTask && (this.taskDetails.processInstanceId || this.taskDetails.processDefinitionId)) {\n            this.loadNextTask(this.taskDetails.processInstanceId, this.taskDetails.processDefinitionId);\n        }\n    }\n\n    onFormLoaded(form: FormModel): void {\n        this.taskFormName = (form && form.name ? form.name : null);\n        this.formLoaded.emit(form);\n    }\n\n    onChecklistTaskCreated(task: TaskDetailsModel): void {\n        this.taskCreated.emit(task);\n    }\n\n    onChecklistTaskDeleted(taskId: string): void {\n        this.taskDeleted.emit(taskId);\n    }\n\n    onFormError(error: any): void {\n        this.errorDialogRef = this.dialog.open(this.errorDialog, { width: '500px' });\n        this.error.emit(error);\n    }\n\n    onFormExecuteOutcome(event: FormOutcomeEvent): void {\n        this.executeOutcome.emit(event);\n    }\n\n    closeErrorDialog(): void {\n        this.dialog.closeAll();\n    }\n\n    onClaimAction(taskId: string): void {\n        this.claimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    onUnclaimAction(taskId: string): void {\n        this.unClaimedTask.emit(taskId);\n        this.loadDetails(taskId);\n    }\n\n    isCompletedTask(): boolean {\n        return this.taskDetails && this.taskDetails.endDate ? true : undefined;\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(null, searchedWord)\n            .subscribe((users) => {\n                users = users.filter((user) => user.id !== this.taskDetails.assignee.id);\n                this.peopleSearchObserver.next(users);\n            }, (error) => this.logService.error('Could not load users'));\n    }\n\n    onCloseSearch() {\n        this.showAssignee = false;\n    }\n\n    assignTaskToUser(selectedUser: UserProcessModel) {\n        this.taskListService.assignTask(this.taskDetails.id, selectedUser).subscribe(\n            (res: any) => {\n                this.logService.info('Task Assigned to ' + selectedUser.email);\n                this.assignTask.emit();\n            });\n        this.showAssignee = false;\n    }\n\n    getTaskHeaderViewClass(): string {\n        if (this.showAssignee) {\n            return 'assign-edit-view';\n        } else {\n            return 'default-view';\n        }\n    }\n\n    isReadOnlyComment(): boolean {\n        return (this.taskDetails && this.taskDetails.isCompleted()) && (this.taskPeople && this.taskPeople.length === 0);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { TaskDetailsComponent } from './task-details.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-task-details-template, no-task-details-template'\n})\nexport class NoTaskDetailsTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private activitiTaskDetails: TaskDetailsComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.activitiTaskDetails.noTaskDetailsTemplateComponent = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable, forkJoin, from, throwError } from 'rxjs';\nimport { FilterRepresentationModel } from '../models/filter.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskFilterService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates and returns the default filters for a process app.\n     * @param appId ID of the target app\n     * @returns Array of default filters just created\n     */\n    public createDefaultFilters(appId: number): Observable<FilterRepresentationModel[]> {\n        const involvedTasksFilter = this.getInvolvedTasksFilterInstance(appId);\n        const involvedObservable = this.addFilter(involvedTasksFilter);\n\n        const myTasksFilter = this.getMyTasksFilterInstance(appId);\n        const myTaskObservable = this.addFilter(myTasksFilter);\n\n        const queuedTasksFilter = this.getQueuedTasksFilterInstance(appId);\n        const queuedObservable = this.addFilter(queuedTasksFilter);\n\n        const completedTasksFilter = this.getCompletedTasksFilterInstance(appId);\n        const completeObservable = this.addFilter(completedTasksFilter);\n\n        return new Observable((observer) => {\n            forkJoin(\n                involvedObservable,\n                myTaskObservable,\n                queuedObservable,\n                completeObservable\n            ).subscribe(\n                (res) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    res.forEach((filter) => {\n                        if (filter.name === involvedTasksFilter.name) {\n                            involvedTasksFilter.id = filter.id;\n                            filters.push(involvedTasksFilter);\n                        } else if (filter.name === myTasksFilter.name) {\n                            myTasksFilter.id = filter.id;\n                            filters.push(myTasksFilter);\n                        } else if (filter.name === queuedTasksFilter.name) {\n                            queuedTasksFilter.id = filter.id;\n                            filters.push(queuedTasksFilter);\n                        } else if (filter.name === completedTasksFilter.name) {\n                            completedTasksFilter.id = filter.id;\n                            filters.push(completedTasksFilter);\n                        }\n                    });\n                    observer.next(filters);\n                    observer.complete();\n                },\n                (err: any) => {\n                    this.logService.error(err);\n                });\n        });\n    }\n\n    /**\n     * Gets all task filters for a process app.\n     * @param appId Optional ID for a specific app\n     * @returns Array of task filter details\n     */\n    getTaskListFilters(appId?: number): Observable<FilterRepresentationModel[]> {\n        return from(this.callApiTaskFilters(appId))\n            .pipe(\n                map((response: any) => {\n                    const filters: FilterRepresentationModel[] = [];\n                    response.data.forEach((filter: FilterRepresentationModel) => {\n                        const filterModel = new FilterRepresentationModel(filter);\n                        filters.push(filterModel);\n                    });\n                    return filters;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task filter by ID.\n     * @param filterId ID of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterById(filterId: number, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.id === filterId)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a task filter by name.\n     * @param taskName Name of the filter\n     * @param appId ID of the app for the filter\n     * @returns Details of task filter\n     */\n    getTaskFilterByName(taskName: string, appId?: number): Observable<FilterRepresentationModel> {\n        return from(this.callApiTaskFilters(appId)).pipe(\n            map((response) => response.data.find((filter) => filter.name === taskName)),\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Adds a new task filter\n     * @param filter The new filter to add\n     * @returns Details of task filter just added\n     */\n    addFilter(filter: FilterRepresentationModel): Observable<FilterRepresentationModel> {\n        return from(this.apiService.getInstance().activiti.userFiltersApi.createUserTaskFilter(filter))\n            .pipe(\n                map((response: FilterRepresentationModel) => {\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Calls `getUserTaskFilters` from the Alfresco JS API.\n     * @param appId ID of the target app\n     * @returns List of task filters\n     */\n    callApiTaskFilters(appId?: number): Promise<any> {\n        if (appId) {\n            return this.apiService.getInstance().activiti.userFiltersApi.getUserTaskFilters({appId: appId});\n        } else {\n            return this.apiService.getInstance().activiti.userFiltersApi.getUserTaskFilters();\n        }\n    }\n\n    /**\n     * Creates and returns a filter for \"Involved\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getInvolvedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Involved Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-align-left',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'involved'}\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"My Tasks\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getMyTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'My Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-inbox',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'assignee'}\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Queued Tasks\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getQueuedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Queued Tasks',\n            'appId': appId,\n            'recent': false,\n            'icon': 'glyphicon-record',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'open', 'assignment': 'candidate'}\n        });\n    }\n\n    /**\n     * Creates and returns a filter for \"Completed\" task instances.\n     * @param appId ID of the target app\n     * @returns The newly created filter\n     */\n    getCompletedTasksFilterInstance(appId: number): FilterRepresentationModel {\n        return new FilterRepresentationModel({\n            'name': 'Completed Tasks',\n            'appId': appId,\n            'recent': true,\n            'icon': 'glyphicon-ok-sign',\n            'filter': {'sort': 'created-desc', 'name': '', 'state': 'completed', 'assignment': 'involved'}\n        });\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { FilterParamsModel, FilterRepresentationModel } from '../models/filter.model';\nimport { TaskFilterService } from './../services/task-filter.service';\nimport { TaskListService } from './../services/tasklist.service';\nimport { IconModel } from '../../app-list/icon.model';\n\n@Component({\n    selector: 'adf-task-filters',\n    templateUrl: './task-filters.component.html',\n    styleUrls: ['task-filters.component.scss']\n})\nexport class TaskFiltersComponent implements OnInit, OnChanges {\n\n    /** Parameters to use for the task filter. If there is no match then\n     * the default filter (the first one the list) is selected.\n     */\n    @Input()\n    filterParam: FilterParamsModel;\n\n    /** Emitted when a filter in the list is clicked. */\n    @Output()\n    filterClick: EventEmitter<FilterRepresentationModel> = new EventEmitter<FilterRepresentationModel>();\n\n    /** Emitted when the list is loaded. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs during loading. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Display filters available to the current user for the application with the specified ID. */\n    @Input()\n    appId: number;\n\n    /** Display filters available to the current user for the application with the specified name. */\n    @Input()\n    appName: string;\n\n    /** Toggles display of the filter's icon. */\n    @Input()\n    showIcon: boolean;\n\n    filter$: Observable<FilterRepresentationModel>;\n\n    currentFilter: FilterRepresentationModel;\n\n    filters: FilterRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    constructor(private taskFilterService: TaskFilterService,\n                private taskListService: TaskListService,\n                private appsProcessService: AppsProcessService) {\n    }\n\n    ngOnInit() {\n        this.iconsMDL = new IconModel();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const appName = changes['appName'];\n        const appId = changes['appId'];\n        const filter = changes['filterParam'];\n        if (appName && appName.currentValue) {\n            this.getFiltersByAppName(appName.currentValue);\n        } else if (appId && appId.currentValue !== appId.previousValue) {\n            this.getFiltersByAppId(appId.currentValue);\n        } else if (filter && filter.currentValue !== filter.previousValue) {\n            this.selectFilter(filter.currentValue);\n        }\n    }\n\n    /**\n     * Return the task list filtered by appId or by appName\n     * @param appId\n     * @param appName\n     */\n    getFilters(appId?: number, appName?: string) {\n        appName ? this.getFiltersByAppName(appName) : this.getFiltersByAppId(appId);\n    }\n\n    /**\n     * Return the filter list filtered by appId\n     * @param appId - optional\n     */\n    getFiltersByAppId(appId?: number) {\n        this.taskFilterService.getTaskListFilters(appId).subscribe(\n            (res: FilterRepresentationModel[]) => {\n                if (res.length === 0 && this.isFilterListEmpty()) {\n                    this.createFiltersByAppId(appId);\n                } else {\n                    this.resetFilter();\n                    this.filters = res;\n                    this.selectFilter(this.filterParam);\n                    this.success.emit(res);\n                }\n            },\n            (err: any) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    /**\n     * Return the filter list filtered by appName\n     * @param appName\n     */\n    getFiltersByAppName(appName: string) {\n        this.appsProcessService.getDeployedApplicationsByName(appName).subscribe(\n            (application) => {\n                this.getFiltersByAppId(application.id);\n            },\n            (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    /**\n     * Create default filters by appId\n     * @param appId\n     */\n    createFiltersByAppId(appId?: number) {\n        this.taskFilterService.createDefaultFilters(appId).subscribe(\n            (resDefault: FilterRepresentationModel[]) => {\n                this.resetFilter();\n                this.filters = resDefault;\n                this.selectFilter(this.filterParam);\n                this.success.emit(resDefault);\n            },\n            (errDefault: any) => {\n                this.error.emit(errDefault);\n            }\n        );\n    }\n\n    /**\n     * Pass the selected filter as next\n     * @param filter\n     */\n    public selectFilter(newFilter: FilterParamsModel) {\n        if (newFilter) {\n            this.currentFilter = this.filters.find( (filter, index) =>\n                newFilter.index === index ||\n                newFilter.id === filter.id ||\n                (newFilter.name &&\n                    (newFilter.name.toLocaleLowerCase() === filter.name.toLocaleLowerCase())\n                ));\n        }\n        if (!this.currentFilter) {\n            this.selectDefaultTaskFilter();\n        }\n    }\n\n    public selectFilterAndEmit(newFilter: FilterParamsModel) {\n        this.selectFilter(newFilter);\n        this.filterClick.emit(this.currentFilter);\n    }\n\n    /**\n     * Select filter with task\n     * @param taskId\n     */\n    public selectFilterWithTask(taskId: string) {\n        const filteredFilterList: FilterRepresentationModel[] = [];\n        this.taskListService.getFilterForTaskById(taskId, this.filters).subscribe(\n            (filter: FilterRepresentationModel) => {\n                filteredFilterList.push(filter);\n            },\n            (err) => {\n                this.error.emit(err);\n            },\n            () => {\n                if (filteredFilterList.length > 0) {\n                    this.selectFilter(filteredFilterList[0]);\n                    this.filterClick.emit(this.currentFilter);\n                }\n            });\n    }\n\n    /**\n     * Select as default task filter the first in the list\n     * @param filteredFilterList\n     */\n    public selectDefaultTaskFilter() {\n        if (!this.isFilterListEmpty()) {\n            this.currentFilter = this.filters[0];\n        }\n    }\n\n    /**\n     * Return the current task\n     */\n    getCurrentFilter(): FilterRepresentationModel {\n        return this.currentFilter;\n    }\n\n    /**\n     * Check if the filter list is empty\n     */\n    isFilterListEmpty(): boolean {\n        return this.filters === undefined || (this.filters && this.filters.length === 0);\n    }\n\n    /**\n     * Reset the filters properties\n     */\n    private resetFilter() {\n        this.filters = [];\n        this.currentFilter = undefined;\n    }\n\n    /**\n     * Return current filter icon\n     */\n    getFilterIcon(icon): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(icon);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { TaskListService } from './../services/tasklist.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    selector: 'button[adf-task-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class TaskAuditDirective implements OnChanges {\n\n    /** (**required**) The id of the task. */\n    @Input('task-id')\n    taskId: string;\n\n    /** Name of the downloaded file (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format of the audit information. Can be \"pdf\" or \"json\". */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit when the decorated element is clicked. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    public audit: any;\n\n    /**\n     *\n     * @param translateService\n     * @param taskListService\n     */\n    constructor(private contentService: ContentService,\n                private taskListService: TaskListService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType() {\n        if (this.format && (this.isJsonFormat() || this.isPdfFormat())) {\n            return true;\n        }\n        return false;\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.taskListService.fetchTaskAuditPdfById(this.taskId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.taskListService.fetchTaskAuditJsonById(this.taskId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService, UserPreferencesService, UserPreferenceValues, UserProcessModel, FormFieldModel, FormModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MOMENT_DATE_FORMATS, MomentDateAdapter } from '@alfresco/adf-core';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { Observable, of } from 'rxjs';\nimport { Form } from '../models/form.model';\nimport { TaskDetailsModel } from '../models/task-details.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { switchMap, defaultIfEmpty } from 'rxjs/operators';\nimport { FormBuilder, AbstractControl, Validators, FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n    selector: 'adf-start-task',\n    templateUrl: './start-task.component.html',\n    styleUrls: ['./start-task.component.scss'],\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartTaskComponent implements OnInit {\n\n    public FORMAT_DATE: string = 'DD/MM/YYYY';\n    MAX_LENGTH: number = 255;\n\n    /** (required) The id of the app. */\n    @Input()\n    appId: number;\n\n    /** Default Task Name. */\n    @Input()\n    name: string = '';\n\n    /** Emitted when the task is successfully created. */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the cancel button is clicked by the user. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    taskDetailsModel: TaskDetailsModel = new TaskDetailsModel();\n    forms$: Observable<Form[]>;\n    assigneeId: number;\n    field: FormFieldModel;\n    taskForm: FormGroup;\n    dateError: boolean = false;\n    maxTaskNameLength: number = this.MAX_LENGTH;\n    loading = false;\n\n    /**\n     * Constructor\n     * @param auth\n     * @param translate\n     * @param taskService\n     */\n    constructor(private taskService: TaskListService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService,\n                private formBuilder: FormBuilder,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        if (this.name) {\n            this.taskDetailsModel.name = this.name;\n        }\n\n        this.validateMaxTaskNameLength();\n\n        this.field = new FormFieldModel(new FormModel(), { id: this.assigneeId, value: this.assigneeId, placeholder: 'Assignee' });\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        this.loadFormsTask();\n        this.buildForm();\n    }\n\n    buildForm() {\n        this.taskForm = this.formBuilder.group({\n            name: new FormControl(this.taskDetailsModel.name, [Validators.required, Validators.maxLength(this.maxTaskNameLength), this.whitespaceValidator]),\n            description: new FormControl('', [this.whitespaceValidator]),\n            formKey: new FormControl('')\n        });\n\n        this.taskForm.valueChanges.subscribe((taskFormValues) => this.setTaskDetails(taskFormValues));\n    }\n\n    public whitespaceValidator(control: FormControl) {\n        if (control.value) {\n            const isWhitespace = (control.value || '').trim().length === 0;\n            const isValid =  control.value.length === 0 || !isWhitespace;\n            return isValid ? null : { 'whitespace': true };\n        }\n    }\n\n    setTaskDetails(form) {\n        this.taskDetailsModel.name = form.name;\n        this.taskDetailsModel.description = form.description;\n        this.taskDetailsModel.formKey = form.formKey ? form.formKey.toString() : null;\n    }\n\n    isFormValid() {\n        return this.taskForm.valid && !this.dateError && !this.loading;\n    }\n\n    public saveTask(): void {\n        this.loading = true;\n        if (this.appId) {\n            this.taskDetailsModel.category = this.appId.toString();\n        }\n        this.taskService.createNewTask(this.taskDetailsModel)\n            .pipe(\n                switchMap((createRes: any) =>\n                    this.attachForm(createRes.id, this.taskDetailsModel.formKey).pipe(\n                        defaultIfEmpty(createRes),\n                        switchMap((attachRes: any) =>\n                            this.assignTaskByUserId(createRes.id, this.assigneeId).pipe(\n                                defaultIfEmpty(attachRes ? attachRes : createRes)\n                            )\n                        )\n                    )\n                )\n            )\n            .subscribe(\n                (res: any) => {\n                    this.loading = false;\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.loading = false;\n                    this.error.emit(err);\n                    this.logService.error('An error occurred while creating new task');\n                });\n    }\n\n    getAssigneeId(userId) {\n        this.assigneeId = userId;\n    }\n\n    private attachForm(taskId: string, formKey: string): Observable<any> {\n        let response = of();\n        if (taskId && formKey) {\n            response = this.taskService.attachFormToATask(taskId, parseInt(formKey, 10));\n        }\n        return response;\n    }\n\n    private assignTaskByUserId(taskId: string, userId: any): Observable<any> {\n        let response = of();\n        if (taskId && userId) {\n            response = this.taskService.assignTaskByUserId(taskId, userId);\n        }\n        return response;\n    }\n\n    public onCancel(): void {\n        this.cancel.emit();\n    }\n\n    private loadFormsTask(): void {\n        this.forms$ = this.taskService.getFormList();\n    }\n\n    public isUserNameEmpty(user: UserProcessModel): boolean {\n        return !user || (this.isEmpty(user.firstName) && this.isEmpty(user.lastName));\n    }\n\n    private isEmpty(data: string): boolean {\n        return data === undefined || data === null || data.trim().length === 0;\n    }\n\n    public getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    onDateChanged(newDateValue: any) {\n        this.dateError = false;\n\n        if (newDateValue) {\n            let momentDate;\n\n            if (typeof newDateValue === 'string') {\n                momentDate = moment(newDateValue, this.FORMAT_DATE, true);\n            } else {\n                momentDate = newDateValue;\n            }\n\n            if (momentDate.isValid()) {\n                this.taskDetailsModel.dueDate = momentDate.toDate();\n            } else {\n                this.dateError = true;\n                this.taskDetailsModel.dueDate = null;\n            }\n        } else {\n            this.taskDetailsModel.dueDate = null;\n        }\n    }\n\n    private validateMaxTaskNameLength() {\n        if (this.maxTaskNameLength > this.MAX_LENGTH) {\n            this.maxTaskNameLength = this.MAX_LENGTH;\n            this.logService.log(`the task name length cannot be greater than ${this.MAX_LENGTH}`);\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.taskForm.get('name');\n    }\n\n    get descriptionController(): AbstractControl {\n        return this.taskForm.get('description');\n    }\n\n    get formKeyController(): AbstractControl {\n        return this.taskForm.get('formKey');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-task-standalone',\n    templateUrl: './task-standalone.component.html',\n    styleUrls: ['./task-standalone.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class TaskStandaloneComponent {\n\n    /** Name of the task. */\n    @Input()\n    taskName;\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** If true then Task completed message is shown and `Complete` and `Cancel` buttons are hidden. */\n    @Input()\n    isCompleted: boolean = false;\n\n    /** Toggles rendering of the `Complete` button. */\n    @Input()\n    hasCompletePermission: boolean = true;\n\n    // TODO: rename all with show prefix\n    /** Toggles rendering of the `Cancel` button. */\n    @Input()\n    hideCancelButton: boolean = true;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancel: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the task is completed. */\n    @Output()\n    complete: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form associated with the form task is attached. */\n    @Output()\n    showAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor() { }\n\n    onCancelButtonClick(): void {\n        this.cancel.emit();\n    }\n\n    onCompleteButtonClick(): void {\n        this.complete.emit();\n    }\n\n    hasCompleteButton(): boolean {\n        return this.hasCompletePermission && !this.isCompleted;\n    }\n\n    hasCancelButton(): boolean {\n        return !this.hideCancelButton && !this.isCompleted;\n    }\n\n    hasAttachFormButton(): boolean {\n        return !this.isCompleted;\n    }\n\n    onShowAttachForm() {\n        this.showAttachForm.emit();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { Form } from '../models/form.model';\nimport { TaskListService } from './../services/tasklist.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'adf-attach-form',\n    templateUrl: './attach-form.component.html',\n    styleUrls: ['./attach-form.component.scss']\n})\n\nexport class AttachFormComponent implements OnInit, OnChanges {\n    constructor(private taskService: TaskListService,\n                private logService: LogService,\n                private formService: FormService) { }\n\n    /** Id of the task. */\n    @Input()\n    taskId;\n\n    /** Identifier of the form to attach. */\n    @Input()\n    formKey;\n\n    /** Emitted when the \"Cancel\" button is clicked. */\n    @Output()\n    cancelAttachForm: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when the form is attached successfully. */\n    @Output()\n    success: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    forms: Form[];\n\n    formId: number;\n    disableSubmit: boolean = true;\n    selectedFormId: number;\n\n    attachFormControl: FormControl;\n\n    ngOnInit() {\n        this.attachFormControl = new FormControl('', Validators.required);\n        this.attachFormControl.valueChanges.subscribe( (currentValue) => {\n            if (this.attachFormControl.valid) {\n                if ( this.formId !== currentValue) {\n                    this.disableSubmit = false;\n                } else {\n                    this.disableSubmit = true;\n                }\n            }\n        });\n    }\n\n    ngOnChanges() {\n        this.formId = undefined;\n        this.disableSubmit = true;\n        this.loadFormsTask();\n        if (this.formKey) {\n            this.onFormAttached();\n        }\n    }\n\n    onCancelButtonClick(): void {\n        this.selectedFormId = this.formId;\n        this.cancelAttachForm.emit();\n    }\n\n    onRemoveButtonClick(): void {\n        this.taskService.deleteForm(this.taskId).subscribe(\n            () => {\n                this.formId = this.selectedFormId = null;\n                this.success.emit();\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to delete the form');\n            });\n    }\n\n    onAttachFormButtonClick(): void {\n        this.attachForm(this.taskId, this.selectedFormId);\n    }\n\n    private loadFormsTask(): void {\n        this.taskService.getFormList().subscribe((form: Form[]) => {\n                this.forms = form;\n            },\n            (err) => {\n                this.error.emit(err);\n                this.logService.error('An error occurred while trying to get the forms');\n            });\n    }\n\n    private onFormAttached() {\n        this.formService.getTaskForm(this.taskId)\n            .subscribe((res) => {\n                this.formService.getFormDefinitionByName(res.name).subscribe((formDef) => {\n                    this.formId = this.selectedFormId = formDef;\n                });\n            }, (err) => {\n                this.error.emit(err);\n                this.logService.error('Could not load forms');\n            });\n    }\n\n    private attachForm(taskId: string, formId: number) {\n        if (taskId && formId) {\n            this.taskService.attachFormToATask(taskId, formId)\n                .subscribe(() => {\n                    this.success.emit();\n                }, (err) => {\n                    this.error.emit(err);\n                    this.logService.error('Could not attach form');\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessUploadService extends UploadService {\n\n    constructor(apiService: AlfrescoApiService, appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const processInstanceId = file.options.parentId;\n        const promise = this.apiService.getInstance().activiti.contentApi.createRelatedContentOnProcessInstance(processInstanceId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, AppConfigService, UploadService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TaskUploadService extends UploadService {\n\n    constructor(apiService: AlfrescoApiService, appConfigService: AppConfigService) {\n        super(apiService, appConfigService);\n    }\n\n    getUploadPromise(file: any): any {\n        const opts = {\n            isRelatedContent: true\n        };\n        const taskId = file.options.parentId;\n        const promise = this.apiService.getInstance().activiti.contentApi.createRelatedContentOnTask(taskId, file.file, opts);\n\n        promise.catch((err) => this.handleError(err));\n\n        return promise;\n    }\n\n    private handleError(error: any) {\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent of the StartTaskModel.\n */\nimport { UserProcessModel } from '@alfresco/adf-core';\n\nexport class StartTaskModel {\n\n    name: string;\n    description: string;\n    assignee: UserProcessModel;\n    dueDate: any;\n    formKey: any;\n    category: string;\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name || null;\n        this.description = obj && obj.description || null;\n        this.assignee = obj && obj.assignee ? new UserProcessModel(obj.assignee) : null;\n        this.dueDate = obj && obj.dueDate || null;\n        this.formKey = obj && obj.formKey || null;\n        this.category = obj && obj.category || null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TaskDetailsModel } from './task-details.model';\n\nexport class TaskDetailsEvent {\n\n    private _value: TaskDetailsModel;\n    private _defaultPrevented: boolean = false;\n\n    get value(): TaskDetailsModel {\n        return this._value;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(value: TaskDetailsModel) {\n        this._value = value;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the User Event.\n */\nexport class UserEventModel {\n    type: string = '';\n    value: any = {};\n\n    constructor(obj?: any) {\n        this.type = obj && obj.type;\n        this.value = obj && obj.value || {};\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user group.*\n */\n\nexport class UserGroupModel {\n    id?: number;\n    name?: string;\n    externalId?: string;\n    status?: string;\n    groups?: any = {};\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id;\n        this.name = obj && obj.name;\n        this.externalId = obj && obj.externalId;\n        this.status = obj && obj.status;\n        this.groups = obj && obj.groups;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MAT_LABEL_GLOBAL_OPTIONS, MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatTooltipModule, MatMenuModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatDialogModule,\n        MatCheckboxModule, MatDatepickerModule, MatGridListModule, MatIconModule, MatInputModule,\n        MatListModule, MatOptionModule, MatRadioModule, MatSelectModule, MatSlideToggleModule, MatTableModule,\n        MatTabsModule, MatProgressSpinnerModule, MatNativeDateModule, MatRippleModule, MatTooltipModule,\n        MatChipsModule, MatMenuModule\n    ];\n}\n\n@NgModule({\n    providers: [\n        {provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: { float: 'never' }}\n    ],\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel, CommentProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-comments',\n    templateUrl: './process-comments.component.html',\n    styleUrls: ['./process-comments.component.scss']\n})\nexport class ProcessCommentsComponent implements OnChanges {\n\n    /** (**required**) The numeric ID of the process instance to display comments for. */\n    @Input()\n    processInstanceId: string;\n\n    /** Should the comments be read-only? */\n    @Input()\n    readOnly: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService) {\n        this.comment$ = new Observable<CommentModel>((observer) =>  this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId) {\n            if (processInstanceId.currentValue) {\n                this.getProcessInstanceComments(processInstanceId.currentValue);\n            } else {\n                this.resetComments();\n            }\n        }\n    }\n\n    private getProcessInstanceComments(processInstanceId: string): void {\n        this.resetComments();\n        if (processInstanceId) {\n            this.commentProcessService.getProcessInstanceComments(processInstanceId).subscribe(\n                (res: CommentModel[]) => {\n                    res = res.sort((comment1: CommentModel, comment2: CommentModel) => {\n                        const date1 = new Date(comment1.created);\n                        const date2 = new Date(comment2.created);\n                        return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                    });\n                    res.forEach((comment) => {\n                        this.commentObserver.next(comment);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            this.beingAdded = true;\n            this.commentProcessService.addProcessInstanceComment(this.processInstanceId, this.message)\n                .subscribe(\n                    (res: CommentModel) => {\n                        this.comments.unshift(res);\n                        this.message = '';\n                        this.beingAdded = false;\n\n                    },\n                    (err) => {\n                        this.error.emit(err);\n                        this.beingAdded = false;\n                    }\n                );\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    onError(error: any) {\n        this.error.emit(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { ProcessCommentsComponent } from './process-comments.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        ProcessCommentsComponent\n    ],\n    exports: [\n        ProcessCommentsComponent\n    ]\n})\nexport class ProcessCommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel } from '@alfresco/adf-core';\nimport { Component, EventEmitter, OnInit, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people-search',\n    templateUrl: './people-search.component.html',\n    styleUrls: ['./people-search.component.scss'],\n    host: {\n        'class': 'adf-people-search'\n    },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchComponent implements OnInit {\n\n    /** Parameters for displaying the list. */\n    @Input()\n    results: Observable<UserProcessModel[]>;\n\n    /** Emitted when a search is performed with a new keyword. */\n    @Output()\n    searchPeople: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when a user is selected and the action button is clicked. */\n    @Output()\n    success: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the \"close\" button is clicked. */\n    @Output()\n    closeSearch = new EventEmitter();\n\n    filteredResults$: Observable<UserProcessModel[]>;\n    selectedUser: UserProcessModel = {};\n    performSearch: PerformSearchCallback;\n\n    constructor() {}\n\n    ngOnInit() {\n        this.filteredResults$ = this.results\n            .pipe(\n                map((users) => {\n                    return users.filter((user) => user.id !== this.selectedUser.id);\n                })\n            );\n        this.performSearch = this.performSearchCallback.bind(this);\n    }\n\n    private performSearchCallback(event): Observable<UserProcessModel[]> {\n        this.searchPeople.emit(event);\n        return this.filteredResults$;\n    }\n\n    onRowClick(user: UserProcessModel) {\n        this.selectedUser = user;\n    }\n\n    closeSearchList() {\n        this.closeSearch.emit();\n    }\n\n    involveUserAndClose() {\n        this.involveUser();\n        this.closeSearchList();\n    }\n\n    involveUser() {\n        if (this.selectedUser === undefined) {\n            return;\n        }\n        this.success.emit(this.selectedUser);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService, UserProcessModel } from '@alfresco/adf-core';\nimport { PeopleProcessService } from '@alfresco/adf-core';\nimport { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\nimport { PeopleSearchComponent } from '../people-search/people-search.component';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-people',\n    templateUrl: './people.component.html',\n    styleUrls: ['./people.component.scss']\n})\nexport class PeopleComponent implements OnInit, AfterViewInit {\n\n    /** The array of User objects to display. */\n    @Input()\n    people: UserProcessModel[] = [];\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string = '';\n\n    /** Should the data be read-only? */\n    @Input()\n    readOnly: boolean = false;\n\n    @ViewChild('peopleSearch')\n    peopleSearch: PeopleSearchComponent;\n\n    showAssignment: boolean = false;\n\n    private peopleSearchObserver: Observer<UserProcessModel[]>;\n    peopleSearch$: Observable<UserProcessModel[]>;\n\n    constructor(private logService: LogService, public peopleProcessService: PeopleProcessService) {\n        this.peopleSearch$ = new Observable<UserProcessModel[]>((observer) => this.peopleSearchObserver = observer)\n            .pipe(\n                share()\n            );\n    }\n\n    ngOnInit() {\n    }\n\n    ngAfterViewInit() {\n    }\n\n    involveUserAndCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUserAndClose();\n        }\n    }\n\n    involveUserWithoutCloseSearch() {\n        if (this.peopleSearch) {\n            this.peopleSearch.involveUser();\n        }\n    }\n\n    searchUser(searchedWord: string) {\n        this.peopleProcessService.getWorkflowUsers(this.taskId, searchedWord)\n            .subscribe((users) => {\n                this.peopleSearchObserver.next(users);\n            }, (error) => this.logService.error(error));\n    }\n\n    involveUser(user: UserProcessModel) {\n        this.peopleProcessService.involveUserWithTask(this.taskId, user.id.toString())\n            .subscribe(() => {\n                this.people = [...this.people, user];\n            }, (error) => this.logService.error('Impossible to involve user with task'));\n    }\n\n    removeInvolvedUser(user: UserProcessModel) {\n        this.peopleProcessService.removeInvolvedUser(this.taskId, user.id.toString())\n            .subscribe(() => {\n                this.people = this.people.filter((involvedUser) => {\n                    return involvedUser.id !== user.id;\n                });\n            }, (error) => this.logService.error('Impossible to remove involved user from task'));\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        firstName = (firstName !== null ? firstName : '');\n        lastName = (lastName !== null ? lastName : '');\n        return firstName + delimiter + lastName;\n    }\n\n    getInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n\n    onAddAssignment() {\n        this.showAssignment = true;\n    }\n\n    onClickAction(event: UserEventModel) {\n        if (event.type === 'remove') {\n            this.removeInvolvedUser(event.value);\n        }\n    }\n\n    hasPeople() {\n        return this.people && this.people.length > 0;\n    }\n\n    isEditMode() {\n        return !this.readOnly;\n    }\n\n    onCloseSearch() {\n        this.showAssignment = false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataTableComponent } from '@alfresco/adf-core';\nimport { DataColumnListComponent, UserProcessModel } from '@alfresco/adf-core';\nimport { AfterContentInit, AfterViewInit, Component, ContentChild, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { UserEventModel } from '../../../task-list/models/user-event.model';\n\n@Component({\n    selector: 'adf-people-list',\n    templateUrl: './people-list.component.html',\n    styleUrls: ['./people-list.component.scss']\n})\n\nexport class PeopleListComponent implements AfterViewInit, AfterContentInit {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    @ViewChild('dataTable')\n    peopleDataTable: DataTableComponent;\n\n    /** The array of user data used to populate the people list. */\n    @Input()\n    users: UserProcessModel[];\n\n    /** Toggles whether or not actions should be visible, i.e. the 'Three-Dots' menu. */\n    @Input()\n    actions: boolean = false;\n\n    /** Emitted when the user clicks a row in the people list. */\n    @Output()\n    clickRow: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    /** Emitted when the user clicks in the 'Three Dots' drop down menu for a row. */\n    @Output()\n    clickAction: EventEmitter<UserEventModel> = new EventEmitter<UserEventModel>();\n\n    user: UserProcessModel;\n\n    ngAfterContentInit() {\n        this.peopleDataTable.columnList = this.columnList;\n    }\n\n    ngAfterViewInit() {\n    }\n\n    selectUser(event: any) {\n        this.user = event.value.obj;\n        this.clickRow.emit(this.user);\n    }\n\n    hasActions(): boolean {\n        return this.actions;\n    }\n\n    onShowRowActionsMenu(event: any) {\n\n        const removeAction = {\n            title: 'Remove',\n            name: 'remove'\n        };\n\n        event.value.actions = [\n            removeAction\n        ];\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        this.clickAction.emit(new UserEventModel({type: action.name, value: args.row.obj}));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n    firstName = (firstName !== null ? firstName : '');\n    lastName = (lastName !== null ? lastName : '');\n    return firstName + delimiter + lastName;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserProcessModel, TranslationService, PeopleProcessService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { getDisplayUser } from '../../helpers/getDisplayUser';\n\n@Component({\n    selector: 'adf-people-search-field',\n    templateUrl: './people-search-field.component.html',\n    styleUrls: ['./people-search-field.component.scss'],\n    host: { 'class': 'adf-people-search-field' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSearchFieldComponent {\n\n    @Input()\n    performSearch: PerformSearchCallback;\n\n    @Input()\n    placeholder: string;\n\n    @Output()\n    rowClick: EventEmitter<UserProcessModel> = new EventEmitter<UserProcessModel>();\n\n    users$: Observable<UserProcessModel[]>;\n    searchUser: FormControl = new FormControl();\n\n    defaultPlaceholder = 'ADF_TASK_LIST.PEOPLE.SEARCH_USER';\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                private translationService: TranslationService) {\n        this.users$ = this.searchUser.valueChanges\n            .pipe(\n                debounceTime(200),\n                switchMap((searchWord: string) => {\n                    if (searchWord && searchWord.trim()) {\n                        return this.performSearch(searchWord);\n                    } else {\n                        return of([]);\n                    }\n                })\n            );\n\n        this.defaultPlaceholder = this.translationService.instant(this.defaultPlaceholder);\n    }\n\n    public reset() {\n        this.searchUser.reset();\n    }\n\n    get searchPlaceholder() {\n        return this.placeholder || this.defaultPlaceholder;\n    }\n\n    onRowClick(event) {\n        this.rowClick.emit(event);\n    }\n\n    getDisplayUser(firstName: string, lastName: string, delimiter: string = '-'): string {\n        return getDisplayUser(firstName, lastName, delimiter);\n    }\n\n    getInitialUserName(firstName: string, lastName: string) {\n        firstName = (firstName !== null && firstName !== '' ? firstName[0] : '');\n        lastName = (lastName !== null && lastName !== '' ? lastName[0] : '');\n        return this.getDisplayUser(firstName, lastName, '');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewChild, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { PerformSearchCallback } from '../../interfaces/perform-search-callback.interface';\nimport { PeopleProcessService, UserProcessModel, LogService, TranslationService } from '@alfresco/adf-core';\nimport { PeopleSearchFieldComponent } from '../people-search-field/people-search-field.component';\nimport { getDisplayUser } from '../../helpers/getDisplayUser';\nimport { Observable, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nconst DEFAULT_ASSIGNEE_PLACEHOLDER = 'ADF_TASK_LIST.PEOPLE.ASSIGNEE';\n\n@Component({\n    selector: 'adf-people-selector',\n    templateUrl: './people-selector.component.html',\n    styleUrls: ['./people-selector.component.scss'],\n    host: { 'class': 'adf-people-selector' },\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class PeopleSelectorComponent {\n\n    @Input()\n    peopleId: UserProcessModel;\n\n    // Poorly documented Angular magic for [(peopleId)]\n    @Output()\n    peopleIdChange: EventEmitter<number>;\n\n    @ViewChild('peopleSearchField')\n    searchFieldComponent: PeopleSearchFieldComponent;\n\n    performSearch: PerformSearchCallback;\n    selectedUser: UserProcessModel;\n    defaultPlaceholder: string;\n\n    constructor(\n        private peopleProcessService: PeopleProcessService,\n        private logService: LogService,\n        private translationService: TranslationService) {\n\n        this.peopleIdChange = new EventEmitter();\n        this.performSearch = this.searchUser.bind(this);\n        this.defaultPlaceholder = this.translationService.instant(DEFAULT_ASSIGNEE_PLACEHOLDER);\n    }\n\n    searchUser(searchWord: string): Observable<{} | UserProcessModel[]> {\n        return this.peopleProcessService.getWorkflowUsers(undefined, searchWord)\n            .pipe(\n                catchError(this.onSearchUserError.bind(this))\n            );\n    }\n\n    private onSearchUserError(): Observable<UserProcessModel[]> {\n        this.logService.error('getWorkflowUsers threw error');\n        return of([]);\n    }\n\n    userSelected(user: UserProcessModel): void {\n        this.updateUserSelection(user);\n    }\n\n    userDeselected(): void {\n        this.updateUserSelection(undefined);\n    }\n\n    private updateUserSelection(user: UserProcessModel): void {\n        this.selectedUser = user;\n        this.peopleIdChange.emit(user && user.id || undefined);\n        this.searchFieldComponent.reset();\n    }\n\n    get placeholder() {\n        if (!this.selectedUser) {\n            return this.defaultPlaceholder;\n        }\n\n        return getDisplayUser(this.selectedUser.firstName, this.selectedUser.lastName, ' ');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: 'adf-people-search-action-label, people-search-action-label' })\nexport class PeopleSearchActionLabelDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: 'adf-people-search-title, people-search-title' })\nexport class PeopleSearchTitleDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { PeopleComponent } from './components/people/people.component';\nimport { PeopleListComponent } from './components/people-list/people-list.component';\nimport { PeopleSearchComponent } from './components/people-search/people-search.component';\nimport { PeopleSearchFieldComponent } from './components/people-search-field/people-search-field.component';\nimport { PeopleSelectorComponent } from './components/people-selector/people-selector.component';\n\nimport { PeopleSearchActionLabelDirective } from './directives/people-search-action-label.directive';\nimport { PeopleSearchTitleDirective } from './directives/people-search-title.directive';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ],\n    exports: [\n        PeopleComponent,\n        PeopleSearchComponent,\n        PeopleSearchFieldComponent,\n        PeopleSelectorComponent,\n        PeopleSearchTitleDirective,\n        PeopleSearchActionLabelDirective,\n        PeopleListComponent\n    ]\n})\nexport class PeopleModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ExternalAlfrescoApiService, AlfrescoApiService, AuthenticationService, LoginDialogPanelComponent, SitesService, SearchService } from '@alfresco/adf-core';\nimport { DocumentListService, ContentNodeSelectorService } from '@alfresco/adf-content-services';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-attach-file-widget-dialog',\n    templateUrl: './attach-file-widget-dialog.component.html',\n    styleUrls: ['./attach-file-widget-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [ AuthenticationService,\n                 DocumentListService,\n                 SitesService,\n                 ContentNodeSelectorService,\n                 SearchService,\n                 { provide: AlfrescoApiService, useClass: ExternalAlfrescoApiService} ]\n})\nexport class AttachFileWidgetDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    chosenNode: Node[];\n    buttonActionName;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AttachFileWidgetDialogComponentData,\n                private externalApiService: AlfrescoApiService) {\n        (<any> externalApiService).init(data.ecmHost, data.context);\n        this.buttonActionName = data.actionName ? `ATTACH-FILE.ACTIONS.${data.actionName.toUpperCase()}` : 'ATTACH-FILE.ACTIONS.CHOOSE';\n    }\n\n    isLoggedIn() {\n        return this.externalApiService.getInstance().isLoggedIn();\n    }\n\n    performLogin() {\n        this.loginPanel.submitForm();\n    }\n\n    close() {\n        this.data.selected.complete();\n    }\n\n    onSelect(nodeList: Node[]) {\n        if (nodeList && nodeList[0].isFile) {\n            this.chosenNode = nodeList;\n        } else {\n            this.chosenNode = null;\n        }\n    }\n\n    onClick(event: any) {\n        this.data.selected.next(this.chosenNode);\n        this.data.selected.complete();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { AttachFileWidgetDialogComponentData } from './attach-file-widget-dialog-component.interface';\nimport { Node } from '@alfresco/js-api';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AttachFileWidgetDialogService {\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(ecmHost: string, actionName?: string, context?: string): Observable<Node[]> {\n        const titleString: string = `Please log in for ${ecmHost}`;\n        const selected = new Subject<Node[]>();\n        selected.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: AttachFileWidgetDialogComponentData = {\n            title : titleString,\n            actionName,\n            selected,\n            ecmHost,\n            context,\n            isSelectionValid: this.isNodeFile.bind(this)\n        };\n\n        this.openLoginDialog(data, 'adf-attach-file-widget-dialog', '630px');\n        return selected;\n    }\n\n    private openLoginDialog(data: AttachFileWidgetDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AttachFileWidgetDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    private isNodeFile(entry: Node): boolean {\n        return entry.isFile;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n    UploadWidgetComponent,\n    FormService,\n    LogService,\n    ThumbnailService,\n    ProcessContentService,\n    ActivitiContentService,\n    ContentService,\n    FormEvent,\n    AppConfigValues,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { Node, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { from, zip, of } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { AttachFileWidgetDialogService } from './attach-file-widget-dialog.service';\n\n@Component({\n    selector: 'attach-widget',\n    templateUrl: './attach-file-widget.component.html',\n    styleUrls: ['./attach-file-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFileWidgetComponent extends UploadWidgetComponent implements OnInit {\n\n    repositoryList = [];\n    private tempFilesList = [];\n\n    constructor(public formService: FormService,\n                private logger: LogService,\n                public thumbnails: ThumbnailService,\n                public processContentService: ProcessContentService,\n                private activitiContentService: ActivitiContentService,\n                private contentService: ContentService,\n                private contentDialog: ContentNodeDialogService,\n                private appConfigService: AppConfigService,\n                private attachDialogService: AttachFileWidgetDialogService) {\n        super(formService, logger, thumbnails, processContentService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n\n        this.activitiContentService.getAlfrescoRepositories(null, true).subscribe((repoList) => {\n            this.repositoryList = repoList;\n        });\n\n        this.formService.taskSaved.subscribe((formSaved: FormEvent) => {\n            if (formSaved.form.id === this.field.form.id) {\n                this.tempFilesList = [];\n            }\n        });\n    }\n\n    isFileSourceConfigured(): boolean {\n        return !!this.field.params && !!this.field.params.fileSource;\n    }\n\n    isMultipleSourceUpload(): boolean {\n        return !this.field.readOnly && this.isFileSourceConfigured() && !this.isOnlyLocalSourceSelected();\n    }\n\n    isAllFileSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'all-file-sources';\n    }\n\n    isOnlyLocalSourceSelected(): boolean {\n        return this.field.params &&\n            this.field.params.fileSource &&\n            this.field.params.fileSource.serviceId === 'local-file';\n    }\n\n    isSimpleUploadButton(): boolean {\n        return this.isUploadButtonVisible() &&\n            !this.isFileSourceConfigured() ||\n            this.isOnlyLocalSourceSelected();\n    }\n\n    isUploadButtonVisible(): boolean {\n        return (!this.hasFile || this.multipleOption) && !this.field.readOnly;\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params &&\n            !!this.field.params.fileSource &&\n            !!this.field.params.fileSource.selectedFolder;\n    }\n\n    isTemporaryFile(file): boolean {\n        return this.tempFilesList.findIndex((elem) => elem.name === file.name) >= 0;\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        if (this.isDefinedSourceFolder()) {\n            this.contentDialog.openFileBrowseDialogByFolderId(params.fileSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections,\n                        this.field.params.fileSource.selectedFolder.accountId,\n                        this.field.params.fileSource.selectedFolder.siteId);\n                });\n        }\n    }\n\n    onAttachFileChanged(event: any) {\n        this.tempFilesList.push(...Array.from(event.target.files));\n        this.onFileChanged(event);\n    }\n\n    onRemoveAttachFile(file: File | RelatedContentRepresentation) {\n        if (this.isTemporaryFile(file)) {\n            this.tempFilesList.splice(this.tempFilesList.indexOf((<RelatedContentRepresentation> file).contentBlob), 1);\n        }\n        this.removeFile(file);\n    }\n\n    onAttachFileClicked(file: any) {\n        if (file.isExternal) {\n            this.logger.info(`The file ${file.name} comes from an external source and cannot be showed at this moment`);\n            return;\n        }\n        if (this.isTemporaryFile(file)) {\n            this.formService.formContentClicked.next(file);\n        } else {\n            this.fileClicked(file);\n        }\n    }\n\n    downloadContent(file: any | RelatedContentRepresentation): void {\n        if (this.isTemporaryFile(file)) {\n            this.contentService.downloadBlob((<RelatedContentRepresentation> file).contentBlob, file.name);\n        } else {\n            this.processContentService.getFileRawContent((<any> file).id).subscribe(\n                (blob: Blob) => {\n                    this.contentService.downloadBlob(blob, (<any> file).name);\n                },\n                (err) => {\n                    this.logger.error('Impossible retrieve content for download');\n                }\n            );\n        }\n    }\n\n    openSelectDialog(repository) {\n        const accountIdentifier = 'alfresco-' + repository.id + '-' + repository.name;\n        const currentECMHost = this.getDomainHost(this.appConfigService.get(AppConfigValues.ECMHOST));\n        const chosenRepositoryHost = this.getDomainHost(repository.repositoryUrl);\n        if (chosenRepositoryHost !== currentECMHost) {\n            const formattedRepositoryHost = repository.repositoryUrl.replace('/alfresco', '');\n            this.attachDialogService.openLogin(formattedRepositoryHost).subscribe(\n                (selections: any[]) => {\n                    selections.forEach((node) => node.isExternal = true);\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections, accountIdentifier);\n                });\n        } else {\n            this.contentDialog.openFileBrowseDialogBySite().subscribe(\n                (selections: Node[]) => {\n                    this.tempFilesList.push(...selections);\n                    this.uploadFileFromCS(selections, accountIdentifier);\n                });\n        }\n    }\n\n    private uploadFileFromCS(fileNodeList: any[], accountId: string, siteId?: string) {\n        const filesSaved = [];\n        from(fileNodeList).pipe(\n            mergeMap((node) =>\n                zip(\n                    of(node.content.mimeType),\n                    this.activitiContentService.applyAlfrescoNode(node, siteId, accountId),\n                    of(node.isExternal)\n                )\n            )\n        )\n            .subscribe(([mimeType, res, isExternal]) => {\n                    res.mimeType = mimeType;\n                    res.isExternal = isExternal;\n                    filesSaved.push(res);\n                },\n                (error) => {\n                    this.logger.error(error);\n                },\n                () => {\n                    this.field.value = filesSaved;\n                    this.field.json.value = filesSaved;\n                    this.hasFile = true;\n                });\n    }\n\n    private getDomainHost(urlToCheck) {\n        const result = urlToCheck.match('^(?:https?:\\/\\/)?(?:[^@\\/\\n]+@)?(?:www\\.)?([^:\\/?\\n]+)');\n        return result[1];\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector*/\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport {\n    WidgetComponent,\n    FormService,\n    NodesApiService\n} from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '@alfresco/adf-content-services';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'attach-folder-widget',\n    templateUrl: './attach-folder-widget.component.html',\n    styleUrls: ['./attach-folder-widget.component.scss'],\n    host: {\n        '(click)': 'event($event)',\n        '(blur)': 'event($event)',\n        '(change)': 'event($event)',\n        '(focus)': 'event($event)',\n        '(focusin)': 'event($event)',\n        '(focusout)': 'event($event)',\n        '(input)': 'event($event)',\n        '(invalid)': 'event($event)',\n        '(select)': 'event($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AttachFolderWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFolder: boolean = false;\n    selectedFolderName: string = '';\n\n    constructor(private contentDialog: ContentNodeDialogService,\n                public formService: FormService,\n                private nodeService: NodesApiService) {\n        super();\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value) {\n            this.hasFolder = true;\n            this.nodeService.getNode(this.field.value).subscribe((node: Node) => {\n                this.selectedFolderName = node.name;\n            });\n        }\n    }\n\n    isDefinedSourceFolder(): boolean {\n        return !!this.field.params &&\n            !!this.field.params.folderSource &&\n            !!this.field.params.folderSource.selectedFolder;\n    }\n\n    openSelectDialogFromFileSource() {\n        const params = this.field.params;\n        if (this.isDefinedSourceFolder()) {\n            this.contentDialog.openFolderBrowseDialogByFolderId(params.folderSource.selectedFolder.pathId).subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        } else {\n            this.contentDialog.openFolderBrowseDialogBySite().subscribe(\n                (selections: Node[]) => {\n                    this.selectedFolderName = selections[0].name;\n                    this.field.value = selections[0].id;\n                    this.hasFolder = true;\n                });\n        }\n    }\n\n    removeFolder() {\n        this.field.value = null;\n        this.selectedFolderName = '';\n        this.hasFolder = false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentNodeSelectorModule } from '@alfresco/adf-content-services';\n\nimport { AttachFileWidgetComponent } from './attach-file-widget.component';\nimport { AttachFolderWidgetComponent } from './attach-folder-widget.component';\nimport { AttachFileWidgetDialogComponent } from './attach-file-widget-dialog.component';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        ContentNodeSelectorModule,\n        MaterialModule\n    ],\n    entryComponents: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ],\n    declarations: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ],\n    exports: [\n        AttachFileWidgetComponent,\n        AttachFolderWidgetComponent,\n        AttachFileWidgetDialogComponent\n    ]\n})\nexport class ContentWidgetModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, Output, ViewEncapsulation, SimpleChanges, OnInit, OnDestroy, OnChanges\n} from '@angular/core';\nimport { AttachFileWidgetComponent, AttachFolderWidgetComponent } from '../content-widget';\nimport { EcmModelService, NodeService, WidgetVisibilityService,\n    FormService, FormRenderingService, FormBaseComponent, FormOutcomeModel,\n    ValidateFormEvent, FormEvent, FormErrorEvent, FormFieldModel,\n    FormModel, FormOutcomeEvent, FormValues, ContentLinkModel } from '@alfresco/adf-core';\n\nimport { Observable, of, Subscription } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-form',\n    templateUrl: './form.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormComponent extends FormBaseComponent implements OnInit, OnDestroy, OnChanges {\n\n    /** Underlying form model instance. */\n    @Input()\n    form: FormModel;\n\n    /** Task id to fetch corresponding form and values. */\n    @Input()\n    taskId: string;\n\n    /** Content Services node ID for the form metadata. */\n    @Input()\n    nodeId: string;\n\n    /** The id of the form definition to load and display with custom values. */\n    @Input()\n    formId: number;\n\n    /** Name of the form definition to load and display with custom values. */\n    @Input()\n    formName: string;\n\n    /** Toggle saving of form metadata. */\n    @Input()\n    saveMetadata: boolean = false;\n\n    /** Custom form values map to be used with the rendered form. */\n    @Input()\n    data: FormValues;\n\n    /** Emitted when the form is submitted with the `Save` or custom outcomes. */\n    @Output()\n    formSaved: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when the form is submitted with the `Complete` outcome. */\n    @Output()\n    formCompleted: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form content is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    /** Emitted when the form is loaded or reloaded. */\n    @Output()\n    formLoaded: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    /** Emitted when form values are refreshed due to a data property change. */\n    @Output()\n    formDataRefreshed: EventEmitter<FormModel> = new EventEmitter<FormModel>();\n\n    debugMode: boolean = false;\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected formService: FormService,\n                protected visibilityService: WidgetVisibilityService,\n                protected ecmModelService: EcmModelService,\n                protected nodeService: NodeService,\n                protected formRenderingService: FormRenderingService) {\n        super();\n        this.formRenderingService.setComponentTypeResolver('upload', () => AttachFileWidgetComponent, true);\n        this.formRenderingService.setComponentTypeResolver('select-folder', () => AttachFolderWidgetComponent, true);\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content: ContentLinkModel) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const taskId = changes['taskId'];\n        if (taskId && taskId.currentValue) {\n            this.getFormByTaskId(taskId.currentValue);\n            return;\n        }\n\n        const formId = changes['formId'];\n        if (formId && formId.currentValue) {\n            this.getFormDefinitionByFormId(formId.currentValue);\n            return;\n        }\n\n        const formName = changes['formName'];\n        if (formName && formName.currentValue) {\n            this.getFormDefinitionByFormName(formName.currentValue);\n            return;\n        }\n\n        const nodeId = changes['nodeId'];\n        if (nodeId && nodeId.currentValue) {\n            this.loadFormForEcmNode(nodeId.currentValue);\n            return;\n        }\n\n        const data = changes['data'];\n        if (data && data.currentValue) {\n            this.refreshFormData();\n            return;\n        }\n    }\n\n    /**\n     * Invoked when user clicks form refresh button.\n     */\n    onRefreshClicked() {\n        this.loadForm();\n    }\n\n    loadForm() {\n        if (this.taskId) {\n            this.getFormByTaskId(this.taskId);\n            return;\n        }\n\n        if (this.formId) {\n            this.getFormDefinitionByFormId(this.formId);\n            return;\n        }\n\n        if (this.formName) {\n            this.getFormDefinitionByFormName(this.formName);\n            return;\n        }\n    }\n\n    findProcessVariablesByTaskId(taskId: string): Observable<any> {\n        return this.formService.getTask(taskId).pipe(\n            switchMap((task: any) => {\n                if (this.isAProcessTask(task)) {\n                    return this.visibilityService.getTaskProcessVariable(taskId);\n                } else {\n                    return of({});\n                }\n            })\n        );\n    }\n\n    isAProcessTask(taskRepresentation) {\n        return taskRepresentation.processDefinitionId && taskRepresentation.processDefinitionDeploymentId !== 'null';\n    }\n\n    getFormByTaskId(taskId: string): Promise<FormModel> {\n        return new Promise<FormModel>((resolve, reject) => {\n            this.findProcessVariablesByTaskId(taskId).subscribe((processVariables) => {\n                this.formService\n                    .getTaskForm(taskId)\n                    .subscribe(\n                        (form) => {\n                            const parsedForm = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(parsedForm);\n                            parsedForm.validateForm();\n                            this.form = parsedForm;\n                            this.onFormLoaded(this.form);\n                            resolve(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                            // reject(error);\n                            resolve(null);\n                        }\n                    );\n            });\n        });\n    }\n\n    getFormDefinitionByFormId(formId: number) {\n        this.formService\n            .getFormDefinitionById(formId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.name;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.onFormLoaded(this.form);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    getFormDefinitionByFormName(formName: string) {\n        this.formService\n            .getFormDefinitionByName(formName)\n            .subscribe(\n                (id) => {\n                    this.formService.getFormDefinitionById(id).subscribe(\n                        (form) => {\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => {\n                            this.handleError(error);\n                        }\n                    );\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n    }\n\n    saveTaskForm() {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .saveTaskForm(this.form.taskId, this.form.values)\n                .subscribe(\n                    () => {\n                        this.onTaskSaved(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskSavedError(this.form, error)\n                );\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        if (this.form && this.form.taskId) {\n            this.formService\n                .completeTaskForm(this.form.taskId, this.form.values, outcome)\n                .subscribe(\n                    () => {\n                        this.onTaskCompleted(this.form);\n                        this.storeFormAsMetadata();\n                    },\n                    (error) => this.onTaskCompletedError(this.form, error)\n                );\n        }\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    parseForm(json: any): FormModel {\n        if (json) {\n            const form = new FormModel(json, this.data, this.readOnly, this.formService);\n            if (!json.fields) {\n                form.outcomes = this.getFormDefinitionOutcomes(form);\n            }\n            if (this.fieldValidators && this.fieldValidators.length > 0) {\n                form.fieldValidators = this.fieldValidators;\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Get custom set of outcomes for a Form Definition.\n     * @param form Form definition model.\n     */\n    getFormDefinitionOutcomes(form: FormModel): FormOutcomeModel[] {\n        return [\n            new FormOutcomeModel(form, { id: '$save', name: FormOutcomeModel.SAVE_ACTION, isSystem: true })\n        ];\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        if (field && field.form) {\n            this.visibilityService.refreshVisibility(field.form);\n        }\n    }\n\n    private refreshFormData() {\n        this.form = this.parseForm(this.form.json);\n        this.onFormLoaded(this.form);\n        this.onFormDataRefreshed(this.form);\n    }\n\n    private loadFormForEcmNode(nodeId: string): void {\n        this.nodeService.getNodeMetadata(nodeId).subscribe((data) => {\n                this.data = data.metadata;\n                this.loadFormFromActiviti(data.nodeType);\n            },\n            this.handleError);\n    }\n\n    loadFormFromActiviti(nodeType: string): any {\n        this.formService.searchFrom(nodeType).subscribe(\n            (form) => {\n                if (!form) {\n                    this.formService.createFormFromANode(nodeType).subscribe((formMetadata) => {\n                        this.loadFormFromFormId(formMetadata.id);\n                    });\n                } else {\n                    this.loadFormFromFormId(form.id);\n                }\n            },\n            (error) => {\n                this.handleError(error);\n            }\n        );\n    }\n\n    private loadFormFromFormId(formId: number) {\n        this.formId = formId;\n        this.loadForm();\n    }\n\n    protected storeFormAsMetadata() {\n        if (this.saveMetadata) {\n            this.ecmModelService.createEcmTypeForActivitiForm(this.formName, this.form).subscribe((type) => {\n                    this.nodeService.createNodeMetadata(type.nodeType || type.entry.prefixedName, EcmModelService.MODEL_NAMESPACE, this.form.values, this.path, this.nameNode);\n                },\n                (error) => {\n                    this.handleError(error);\n                }\n            );\n        }\n    }\n\n    protected onFormLoaded(form: FormModel) {\n        this.formLoaded.emit(form);\n        this.formService.formLoaded.next(new FormEvent(form));\n    }\n\n    protected onFormDataRefreshed(form: FormModel) {\n        this.formDataRefreshed.emit(form);\n        this.formService.formDataRefreshed.next(new FormEvent(form));\n    }\n\n    protected onTaskSaved(form: FormModel) {\n        this.formSaved.emit(form);\n        this.formService.taskSaved.next(new FormEvent(form));\n    }\n\n    protected onTaskSavedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskSavedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onTaskCompleted(form: FormModel) {\n        this.formCompleted.emit(form);\n        this.formService.taskCompleted.next(new FormEvent(form));\n    }\n\n    protected onTaskCompletedError(form: FormModel, error: any) {\n        this.handleError(error);\n        this.formService.taskCompletedError.next(new FormErrorEvent(form, error));\n    }\n\n    protected onExecuteOutcome(outcome: FormOutcomeModel): boolean {\n        const args = new FormOutcomeEvent(outcome);\n\n        this.formService.executeOutcome.next(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        this.executeOutcome.emit(args);\n        if (args.defaultPrevented) {\n            return false;\n        }\n\n        return true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ContentLinkModel, FormService, WidgetVisibilityService, FormRenderingService, ValidateFormEvent, FormOutcomeModel } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-start-form',\n    templateUrl: './start-form.component.html',\n    styleUrls: ['./start-form.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartFormComponent extends FormComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** Definition ID of the process to start. */\n    @Input()\n    processDefinitionId: string;\n\n    /** Process ID of the process to start. */\n    @Input()\n    processId: string;\n\n    /** Should form outcome buttons be shown? */\n    @Input()\n    showOutcomeButtons: boolean = true;\n\n    /** Should the refresh button be shown? */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Is the form read-only (ie, can't be edited)? */\n    @Input()\n    readOnlyForm: boolean = false;\n\n    /** Emitted when the user clicks one of the outcome buttons that completes the form. */\n    @Output()\n    outcomeClick: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a field of the form is clicked. */\n    @Output()\n    formContentClicked: EventEmitter<ContentLinkModel> = new EventEmitter<ContentLinkModel>();\n\n    @ViewChild('outcomesContainer', {})\n    outcomesContainer: ElementRef = null;\n\n    constructor(formService: FormService,\n                visibilityService: WidgetVisibilityService,\n                formRenderingService: FormRenderingService) {\n        super(formService, visibilityService, null, null, formRenderingService);\n        this.showTitle = false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.formService.formContentClicked.subscribe((content) => {\n                this.formContentClicked.emit(content);\n            }),\n            this.formService.validateForm.subscribe((validateFormEvent: ValidateFormEvent) => {\n                if (validateFormEvent.errorsField.length > 0) {\n                    this.formError.next(validateFormEvent.errorsField);\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processDefinitionId = changes['processDefinitionId'];\n        if (processDefinitionId && processDefinitionId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(processDefinitionId.currentValue);\n            return;\n        }\n\n        const processId = changes['processId'];\n        if (processId && processId.currentValue) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(processId.currentValue);\n            return;\n        }\n    }\n\n    loadStartForm(processId: string) {\n        this.formService.getProcessInstance(processId)\n            .subscribe((instance: any) => {\n                this.formService\n                    .getStartFormInstance(processId)\n                    .subscribe(\n                        (form) => {\n                            this.formName = form.name;\n                            if (instance.variables) {\n                                form.processVariables = instance.variables;\n                            }\n                            this.form = this.parseForm(form);\n                            this.visibilityService.refreshVisibility(this.form);\n                            this.form.validateForm();\n                            this.form.readOnly = this.readOnlyForm;\n                            this.onFormLoaded(this.form);\n                        },\n                        (error) => this.handleError(error)\n                    );\n            });\n    }\n\n    getStartFormDefinition(processId: string) {\n        this.formService\n            .getStartFormDefinition(processId)\n            .subscribe(\n                (form) => {\n                    this.formName = form.processDefinitionName;\n                    this.form = this.parseForm(form);\n                    this.visibilityService.refreshVisibility(this.form);\n                    this.form.validateForm();\n                    this.form.readOnly = this.readOnlyForm;\n                    this.onFormLoaded(this.form);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    /** @override */\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.isSystem && (outcome.name === FormOutcomeModel.SAVE_ACTION ||\n            outcome.name === FormOutcomeModel.COMPLETE_ACTION)) {\n            return false;\n        } else if (outcome && outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n            return true;\n        }\n        return super.isOutcomeButtonVisible(outcome, isFormReadOnly);\n    }\n\n    /** @override */\n    saveTaskForm() {\n        // do nothing\n    }\n\n    /** @override */\n    onRefreshClicked() {\n        if (this.processDefinitionId) {\n            this.visibilityService.cleanProcessVariable();\n            this.getStartFormDefinition(this.processDefinitionId);\n        } else if (this.processId) {\n            this.visibilityService.cleanProcessVariable();\n            this.loadStartForm(this.processId);\n        }\n    }\n\n    completeTaskForm(outcome?: string) {\n        this.outcomeClick.emit(outcome);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FormComponent } from './form.component';\nimport { StartFormComponent } from './start-form.component';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MaterialModule\n    ],\n    declarations: [\n        FormComponent,\n        StartFormComponent\n    ],\n    exports: [\n        FormComponent,\n        StartFormComponent\n    ]\n})\nexport class FormModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\n\nimport { ChecklistComponent } from './components/checklist.component';\nimport { NoTaskDetailsTemplateDirective } from './components/no-task-detail-template.directive';\nimport { StartTaskComponent } from './components/start-task.component';\nimport { TaskAuditDirective } from './components/task-audit.directive';\nimport { TaskDetailsComponent } from './components/task-details.component';\nimport { TaskFiltersComponent } from './components/task-filters.component';\nimport { TaskHeaderComponent } from './components/task-header.component';\nimport { TaskListComponent } from './components/task-list.component';\nimport { TaskStandaloneComponent } from './components/task-standalone.component';\nimport { AttachFormComponent } from './components/attach-form.component';\nimport { FormModule } from '../form/form.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        FormsModule,\n        FormModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        PeopleModule,\n        ProcessCommentsModule,\n        ContentWidgetModule\n    ],\n    declarations: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent\n    ],\n    exports: [\n        NoTaskDetailsTemplateDirective,\n        TaskFiltersComponent,\n        TaskListComponent,\n        TaskDetailsComponent,\n        TaskAuditDirective,\n        ChecklistComponent,\n        TaskHeaderComponent,\n        StartTaskComponent,\n        TaskStandaloneComponent,\n        AttachFormComponent\n    ]\n})\nexport class TaskListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Observable, Observer } from 'rxjs';\nimport { TaskDetailsEvent, TaskDetailsModel } from '../../task-list';\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-process-instance-tasks',\n    templateUrl: './process-instance-tasks.component.html',\n    styleUrls: ['./process-instance-tasks.component.css']\n})\nexport class ProcessInstanceTasksComponent implements OnInit, OnChanges {\n\n    /** (**required**) The ID of the process instance to display tasks for. */\n    @Input()\n    processInstanceDetails: ProcessInstance;\n\n    /** Toggles whether to show a refresh button next to the list of tasks to allow\n     * it to be updated from the server.\n     */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    activeTasks: TaskDetailsModel[] = [];\n    completedTasks: TaskDetailsModel[] = [];\n\n    private taskObserver: Observer<TaskDetailsModel>;\n    private completedTaskObserver: Observer<TaskDetailsModel>;\n\n    task$: Observable<TaskDetailsModel>;\n    completedTask$: Observable<TaskDetailsModel>;\n\n    message: string;\n    processId: string;\n\n    @ViewChild('startDialog')\n    startDialog: any;\n\n    @ViewChild('taskDetails')\n    taskDetails: any;\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService,\n                private dialog: MatDialog) {\n        this.task$ = new Observable<TaskDetailsModel>((observer) => this.taskObserver = observer)\n            .pipe(share());\n        this.completedTask$ = new Observable<TaskDetailsModel>((observer) => this.completedTaskObserver = observer)\n            .pipe(share());\n    }\n\n    ngOnInit() {\n        this.task$.subscribe((task: TaskDetailsModel) => {\n            this.activeTasks.push(task);\n        });\n        this.completedTask$.subscribe((task: TaskDetailsModel) => {\n            this.completedTasks.push(task);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceDetails = changes['processInstanceDetails'];\n        if (processInstanceDetails && processInstanceDetails.currentValue) {\n            this.load(processInstanceDetails.currentValue.id);\n        }\n    }\n\n    load(processInstanceId: string) {\n        this.loadActive(processInstanceId);\n        this.loadCompleted(processInstanceId);\n    }\n\n    loadActive(processInstanceId: string) {\n        this.activeTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, null).subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.taskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.activeTasks = [];\n        }\n    }\n\n    loadCompleted(processInstanceId: string) {\n        this.completedTasks = [];\n        if (processInstanceId) {\n            this.activitiProcess.getProcessTasks(processInstanceId, 'completed').subscribe(\n                (res: TaskDetailsModel[]) => {\n                    res.forEach((task) => {\n                        this.completedTaskObserver.next(task);\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        } else {\n            this.completedTasks = [];\n        }\n    }\n\n    hasStartFormDefined(): boolean {\n        return this.processInstanceDetails && this.processInstanceDetails.startFormDefined === true;\n    }\n\n    getUserFullName(user: any) {\n        if (user) {\n            return (user.firstName && user.firstName !== 'null'\n                    ? user.firstName + ' ' : '') +\n                user.lastName;\n        }\n        return 'Nobody';\n    }\n\n    getFormatDate(value, format: string) {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceTask: error parsing date ${value} to format ${format}`);\n        }\n    }\n\n    clickTask($event: any, task: TaskDetailsModel) {\n        const args = new TaskDetailsEvent(task);\n        this.taskClick.emit(args);\n    }\n\n    clickStartTask() {\n        this.processId = this.processInstanceDetails.id;\n        this.showStartDialog();\n    }\n\n    showStartDialog() {\n        this.dialog.open(this.startDialog, { height: '500px', width: '700px' });\n    }\n\n    closeStartDialog() {\n        this.dialog.closeAll();\n    }\n\n    onRefreshClicked() {\n        this.load(this.processInstanceDetails.id);\n    }\n\n    onFormContentClick() {\n        this.closeStartDialog();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { TaskDetailsEvent } from '../../task-list';\n\nimport { ProcessInstance } from '../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { ProcessInstanceHeaderComponent } from './process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './process-instance-tasks.component';\n\n@Component({\n    selector: 'adf-process-instance-details',\n    templateUrl: './process-instance-details.component.html',\n    styleUrls: ['./process-instance-details.component.css']\n})\nexport class ProcessInstanceDetailsComponent implements OnChanges {\n\n    /** (required) The numeric ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    @ViewChild('processInstanceHeader')\n    processInstanceHeader: ProcessInstanceHeaderComponent;\n\n    @ViewChild('processInstanceTasks')\n    tasksList: ProcessInstanceTasksComponent;\n\n    /** Toggles whether to show or hide the title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggles whether to show or hide the refresh button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Emitted when the current process is cancelled by the user from within the component. */\n    @Output()\n    processCancelled: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when a task is clicked. */\n    @Output()\n    taskClick: EventEmitter<TaskDetailsEvent> = new EventEmitter<TaskDetailsEvent>();\n\n    processInstanceDetails: ProcessInstance;\n\n    /** Emitted when the \"show diagram\" button is clicked. */\n    @Output()\n    showProcessDiagram: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * Constructor\n     * @param translate Translation service\n     * @param activitiProcess   Process service\n     */\n    constructor(private activitiProcess: ProcessService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const processInstanceId = changes['processInstanceId'];\n        if (processInstanceId && !processInstanceId.currentValue) {\n            this.reset();\n            return;\n        }\n        if (processInstanceId && processInstanceId.currentValue) {\n            this.load(processInstanceId.currentValue);\n            return;\n        }\n    }\n\n    /**\n     * Reset the task detail\n     */\n    reset() {\n        this.processInstanceDetails = null;\n    }\n\n    load(processId: string) {\n        if (processId) {\n            this.activitiProcess.getProcess(processId).subscribe(\n                (res: ProcessInstance) => {\n                    this.processInstanceDetails = res;\n                }\n            );\n        }\n    }\n\n    isRunning(): boolean {\n        return this.processInstanceDetails && !this.processInstanceDetails.ended;\n    }\n\n    cancelProcess() {\n        this.activitiProcess.cancelProcess(this.processInstanceId).subscribe(\n            (data) => {\n                this.processCancelled.emit(data);\n            }, (err) => {\n                this.error.emit(err);\n            });\n    }\n\n    // bubbles (taskClick) event\n    onTaskClicked(event: TaskDetailsEvent) {\n        this.taskClick.emit(event);\n    }\n\n    getProcessNameOrDescription(dateFormat): string {\n        let name = '';\n        if (this.processInstanceDetails) {\n            name = this.processInstanceDetails.name ||\n                this.processInstanceDetails.processDefinitionName + ' - ' + this.getFormatDate(this.processInstanceDetails.started, dateFormat);\n        }\n        return name;\n    }\n\n    getFormatDate(value, format: string) {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            this.logService.error(`ProcessListInstanceHeader: error parsing date ${value} to format ${format}`);\n        }\n    }\n\n    onShowProcessDiagram(processInstanceId: any) {\n        this.showProcessDiagram.emit({value: this.processInstanceId});\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ContentService } from '@alfresco/adf-core';\nimport { Directive, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessService } from './../services/process.service';\n\nconst JSON_FORMAT: string = 'json';\nconst PDF_FORMAT: string = 'pdf';\n\n@Directive({\n    selector: 'button[adf-process-audit]',\n    host: {\n        'role': 'button',\n        '(click)': 'onClickAudit()'\n    }\n})\nexport class ProcessAuditDirective implements OnChanges {\n\n    /** ID of the process. */\n    @Input('process-id')\n    processId: string;\n\n    /** Name of the file to download (for PDF downloads). */\n    @Input()\n    fileName: string = 'Audit';\n\n    /** Format for the audit information (can be \"pdf\" or \"json\"). */\n    @Input()\n    format: string = 'pdf';\n\n    /** Enables downloading of the audit file on clicking. */\n    @Input()\n    download: boolean = true;\n\n    /** Emitted when the decorated element is clicked. */\n    @Output()\n    clicked: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    public audit: any;\n\n    /**\n     *\n     * @param translateService\n     * @param processListService\n     */\n    constructor(private contentService: ContentService,\n                private processListService: ProcessService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (!this.isValidType()) {\n            this.setDefaultFormatType();\n        }\n    }\n\n    isValidType() {\n        if (this.format && (this.isJsonFormat() || this.isPdfFormat())) {\n            return true;\n        }\n        return false;\n    }\n\n    setDefaultFormatType(): void {\n        this.format = PDF_FORMAT;\n    }\n\n    /**\n     * fetch the audit information in the requested format\n     */\n    fetchAuditInfo(): void {\n        if (this.isPdfFormat()) {\n            this.processListService.fetchProcessAuditPdfById(this.processId).subscribe(\n                (blob: Blob) => {\n                    this.audit = blob;\n                    if (this.download) {\n                        this.contentService.downloadBlob(this.audit, this.fileName + '.pdf');\n                    }\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        } else {\n            this.processListService.fetchProcessAuditJsonById(this.processId).subscribe(\n                (res) => {\n                    this.audit = res;\n                    this.clicked.emit({ format: this.format, value: this.audit, fileName: this.fileName });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    onClickAudit() {\n        this.fetchAuditInfo();\n    }\n\n    isJsonFormat() {\n        return this.format === JSON_FORMAT;\n    }\n\n    isPdfFormat() {\n        return this.format === PDF_FORMAT;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let processPresetsDefaultModel = {\n    'default': [\n        {\n            'key': 'name',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.NAME',\n            'sortable': true\n        },\n        {\n            'key': 'created',\n            'type': 'text',\n            'title': 'ADF_PROCESS_LIST.PROPERTIES.CREATED',\n            'cssClass': 'hidden',\n            'sortable': true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataTableSchema,\n    DataRowEvent,\n    DataTableAdapter,\n    CustomEmptyContentTemplateDirective,\n    CustomLoadingContentTemplateDirective\n} from '@alfresco/adf-core';\nimport {\n    AppConfigService,\n    PaginatedComponent,\n    PaginationComponent,\n    PaginationModel,\n    UserPreferencesService\n} from '@alfresco/adf-core';\nimport { DatePipe } from '@angular/common';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { ProcessFilterParamRepresentationModel } from '../models/filter-process.model';\nimport { processPresetsDefaultModel } from '../models/process-preset.model';\nimport { ProcessService } from '../services/process.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { ProcessListModel } from '../models/process-list.model';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-process-instance-list',\n    styleUrls: ['./process-list.component.css'],\n    templateUrl: './process-list.component.html'\n})\nexport class ProcessInstanceListComponent extends DataTableSchema  implements OnChanges, AfterContentInit, PaginatedComponent {\n\n    static PRESET_KEY = 'adf-process-list.presets';\n    public FORMAT_DATE: string = 'll';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customEmptyContent: CustomEmptyContentTemplateDirective;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    /** The id of the app. */\n    @Input()\n    appId: number;\n\n    /** The Definition Id of the process. */\n    @Input()\n    processDefinitionId: string;\n\n    /** The id of the process instance. */\n    @Input()\n    processInstanceId: number|string;\n\n    /** Defines the state of the processes. Possible values are `running`, `completed` and `all` */\n    @Input()\n    state: string;\n\n    /** Defines the sort ordering of the list. Possible values are `created-desc`, `created-asc`,\n     * `ended-desc`, `ended-asc`.\n     */\n    @Input()\n    sort: string;\n\n    /** The page number of the processes to fetch. */\n    @Input()\n    page: number = 0;\n\n    /** The number of processes to fetch in each page. */\n    @Input()\n    size: number = PaginationComponent.DEFAULT_PAGINATION.maxItems;\n\n    /** Data source to define the datatable. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for\n     * multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles default selection of the first row */\n    @Input()\n    selectFirstRow: boolean = true;\n\n    /** Emitted when a row in the process list is clicked. */\n    @Output()\n    rowClick: EventEmitter<string> = new EventEmitter<string>();\n\n    /** Emitted when the list of process instances has been loaded successfully from the server. */\n    @Output()\n    success: EventEmitter<ProcessListModel> = new EventEmitter<ProcessListModel>();\n\n    /** Emitted when an error occurs while loading the list of process instances from the server. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    requestNode: ProcessFilterParamRepresentationModel;\n    currentInstanceId: string;\n    isLoading: boolean = true;\n    rows: any[] = [];\n    sorting: any[] = ['created', 'desc'];\n\n    pagination: BehaviorSubject<PaginationModel>;\n\n    constructor(private processService: ProcessService,\n                private userPreferences: UserPreferencesService,\n                appConfig: AppConfigService) {\n        super(appConfig, ProcessInstanceListComponent.PRESET_KEY, processPresetsDefaultModel);\n        this.size = this.userPreferences.paginationSize;\n\n        this.pagination = new BehaviorSubject<PaginationModel>(<PaginationModel> {\n            maxItems: this.size,\n            skipCount: 0,\n            totalItems: 0\n        });\n    }\n\n    ngAfterContentInit() {\n        this.createDatatableSchema();\n        if (this.data && this.data.getColumns().length === 0) {\n            this.data.setColumns(this.columns);\n        }\n\n        if (this.appId != null) {\n            this.reload();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.isPropertyChanged(changes)) {\n            if (this.isSortChanged(changes)) {\n                this.sorting = this.sort ? this.sort.split('-') : this.sorting;\n            }\n            this.reload();\n        }\n    }\n\n    private isSortChanged(changes: SimpleChanges): boolean {\n        const actualSort = changes['sort'];\n        return actualSort && actualSort.currentValue && actualSort.currentValue !== actualSort.previousValue;\n    }\n\n    private isPropertyChanged(changes: SimpleChanges): boolean {\n        let changed: boolean = false;\n\n        const appId = changes['appId'];\n        const processDefinitionId = changes['processDefinitionId'];\n        const processInstanceId = changes['processInstanceId'];\n        const state = changes['state'];\n        const sort = changes['sort'];\n        const page = changes['page'];\n        const size = changes['size'];\n\n        if (appId && appId.currentValue) {\n            changed = true;\n        } else if (processDefinitionId) {\n            changed = true;\n        } else if (processInstanceId) {\n            changed = true;\n        } else if (state && state.currentValue) {\n            changed = true;\n        } else if (sort && sort.currentValue) {\n            changed = true;\n        } else if (page && page.currentValue !== page.previousValue) {\n            changed = true;\n        } else if (size && size.currentValue !== size.previousValue) {\n            changed = true;\n        }\n        return changed;\n    }\n\n    public reload() {\n        this.requestNode = this.createRequestNode();\n        this.load(this.requestNode);\n    }\n\n    private load(requestNode: ProcessFilterParamRepresentationModel) {\n        this.isLoading = true;\n        this.processService.getProcesses(requestNode)\n            .subscribe(\n                (response) => {\n                    this.rows = this.optimizeProcessDetails(response.data);\n                    this.selectFirst();\n                    this.success.emit(response);\n                    this.isLoading = false;\n                    this.pagination.next({\n                        count: response.data.length,\n                        maxItems: this.size,\n                        skipCount: this.page * this.size,\n                        totalItems: response.total\n                    });\n                },\n                (error) => {\n                    this.error.emit(error);\n                    this.isLoading = false;\n                });\n    }\n\n    /**\n     * Select the first instance of a list if present\n     */\n    selectFirst() {\n        if (this.selectFirstRow) {\n            if (!this.isListEmpty()) {\n                const dataRow = this.rows[0];\n                dataRow.isSelected = true;\n                this.currentInstanceId = dataRow['id'];\n            } else {\n                this.currentInstanceId = null;\n            }\n        }\n    }\n\n    /**\n     * Return the current id\n     */\n    getCurrentId(): string {\n        return this.currentInstanceId;\n    }\n\n    /**\n     * Check if the list is empty\n     */\n    isListEmpty(): boolean {\n        return !this.rows || this.rows.length === 0;\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when the row is clicked\n     * @param event\n     */\n    onRowClick(event: DataRowEvent) {\n        const item = event;\n        this.currentInstanceId = item.value.getValue('id');\n        this.rowClick.emit(this.currentInstanceId);\n    }\n\n    /**\n     * Emit the event rowClick passing the current task id when pressed the Enter key on the selected row\n     * @param event\n     */\n    onRowKeyUp(event: CustomEvent) {\n        if (event.detail.keyboardEvent.key === 'Enter') {\n            event.preventDefault();\n            this.currentInstanceId = event.detail.row.getValue('id');\n            this.rowClick.emit(this.currentInstanceId);\n        }\n    }\n\n    /**\n     * Optimize name field\n     * @param instances\n     */\n    private optimizeProcessDetails(instances: any[]): any[] {\n        instances = instances.map((instance) => {\n            instance.name = this.getProcessNameOrDescription(instance, 'medium');\n            if (instance.started) {\n                instance.started = moment(instance.started).format(this.FORMAT_DATE);\n            }\n            return instance;\n        });\n        return instances;\n    }\n\n    getProcessNameOrDescription(processInstance, dateFormat): string {\n        let name = '';\n        if (processInstance) {\n            name = processInstance.name ||\n                processInstance.processDefinitionName + ' - ' + this.getFormatDate(processInstance.started, dateFormat);\n        }\n        return name;\n    }\n\n    getFormatDate(value, format: string) {\n        const datePipe = new DatePipe('en-US');\n        try {\n            return datePipe.transform(value, format);\n        } catch (err) {\n            return '';\n        }\n    }\n\n    private createRequestNode() {\n        const requestNode = {\n            appDefinitionId: this.appId,\n            processDefinitionId: this.processDefinitionId,\n            processInstanceId: this.processInstanceId,\n            state: this.state,\n            sort: this.sort,\n            page: this.page,\n            size: this.size,\n            start: 0\n        };\n        return new ProcessFilterParamRepresentationModel(requestNode);\n    }\n\n    updatePagination(params: PaginationModel) {\n        const needsReload = params.maxItems || params.skipCount;\n        this.size = params.maxItems;\n        this.page = this.currentPage(params.skipCount, params.maxItems);\n        if (needsReload) {\n            this.reload();\n        }\n    }\n\n    currentPage(skipCount: number, maxItems: number): number {\n        return (skipCount && maxItems) ? Math.floor(skipCount / maxItems) : 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter, Input, OnChanges, OnInit,\n    Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport {\n    ActivitiContentService, AppConfigService, AppConfigValues,\n    FormValues\n} from '@alfresco/adf-core';\nimport { ProcessInstanceVariable } from '../models/process-instance-variable.model';\nimport { ProcessDefinitionRepresentation } from './../models/process-definition.model';\nimport { ProcessInstance } from './../models/process-instance.model';\nimport { ProcessService } from './../services/process.service';\nimport { FormControl, Validators, AbstractControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatAutocompleteTrigger } from '@angular/material';\nimport { StartFormComponent } from '../../form';\n\n@Component({\n    selector: 'adf-start-process',\n    templateUrl: './start-process.component.html',\n    styleUrls: ['./start-process.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class StartProcessInstanceComponent implements OnChanges, OnInit {\n\n    MAX_LENGTH: number = 255;\n\n    /** (optional) Limit the list of processes that can be started to those\n     * contained in the specified app.\n     */\n    @Input()\n    appId: number;\n\n    /** (optional) Definition name of the process to start. */\n    @Input()\n    processDefinitionName: string;\n\n    /** Variables in the input to the process\n     * [RestVariable](https://github.com/Alfresco/alfresco-js-api/tree/master/src/alfresco-activiti-rest-api/docs/RestVariable.md).\n     */\n    @Input()\n    variables: ProcessInstanceVariable[];\n\n    /** Parameter to pass form field values in the start form if one is associated. */\n    @Input()\n    values: FormValues;\n\n    /** (optional) Name to assign to the current process. */\n    @Input()\n    name: string = '';\n\n    /** Hide or show the process selection dropdown. */\n    @Input()\n    showSelectProcessDropdown: boolean = true;\n\n    /** (optional) Parameter to enable selection of process when filtering. */\n    @Input()\n    processFilterSelector: boolean = true;\n\n    /** Emitted when the process starts. */\n    @Output()\n    start: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    /** Emitted when the process is canceled. */\n    @Output()\n    cancel: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<ProcessInstance> = new EventEmitter<ProcessInstance>();\n\n    @ViewChild('startForm')\n    startForm: StartFormComponent;\n\n    @ViewChild(MatAutocompleteTrigger)\n    inputAutocomplete: MatAutocompleteTrigger;\n\n    processDefinitions: ProcessDefinitionRepresentation[] = [];\n    selectedProcessDef: ProcessDefinitionRepresentation = new ProcessDefinitionRepresentation();\n    errorMessageId: string = '';\n    processNameInput: FormControl;\n    processDefinitionInput: FormControl;\n    filteredProcesses: Observable<ProcessDefinitionRepresentation[]>;\n    maxProcessNameLength: number = this.MAX_LENGTH;\n\n    constructor(private activitiProcess: ProcessService,\n                private activitiContentService: ActivitiContentService,\n                private appConfig: AppConfigService) {\n        }\n\n    ngOnInit() {\n        this.processNameInput = new FormControl(this.name, [Validators.required, Validators.maxLength(this.maxProcessNameLength)]);\n        this.processDefinitionInput = new FormControl();\n\n        this.loadStartProcess();\n\n        this.processNameInput.valueChanges.subscribe((name) => this.name = name);\n        this.filteredProcesses = this.processDefinitionInput.valueChanges\n            .pipe(\n                map((value) => this._filter(value))\n            );\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['values'] && changes['values'].currentValue) {\n            this.moveNodeFromCStoPS();\n        }\n\n        if (changes['appId'] && changes['appId'].currentValue) {\n            this.appId = changes['appId'].currentValue;\n        }\n\n        this.loadStartProcess();\n    }\n\n    private _filter(value: string): ProcessDefinitionRepresentation[] {\n        if (value !== null && value !== undefined) {\n            const filterValue = value.toLowerCase();\n            const filteredProcess = this.processDefinitions.filter((option) => option.name.toLowerCase().includes(filterValue));\n\n            if (this.processFilterSelector) {\n                this.selectedProcessDef = this.getSelectedProcess(filterValue);\n            }\n            return filteredProcess;\n        }\n    }\n\n    getSelectedProcess(selectedProcess) {\n        let processSelected = this.processDefinitions.find((process) => process.name.toLowerCase() === selectedProcess);\n\n        if (!processSelected) {\n            processSelected = new ProcessDefinitionRepresentation();\n        }\n        return processSelected;\n    }\n\n    public loadStartProcess() {\n        this.resetSelectedProcessDefinition();\n        this.resetErrorMessage();\n\n        this.activitiProcess.getProcessDefinitions(this.appId).subscribe(\n            (processDefinitionRepresentations: ProcessDefinitionRepresentation[]) => {\n                this.processDefinitions = processDefinitionRepresentations;\n\n                if (!this.isProcessDefinitionsEmpty()) {\n\n                    if (this.processDefinitions.length === 1) {\n                        this.selectedProcessDef = this.processDefinitions[0];\n                    }\n\n                    if (this.processDefinitionName) {\n                        const selectedProcess = this.processDefinitions.find((currentProcessDefinition) => {\n                            return currentProcessDefinition.name === this.processDefinitionName;\n                        });\n                        if (selectedProcess) {\n                            this.selectedProcessDef = selectedProcess;\n                        }\n                    }\n\n                    this.processDefinitionInput.setValue(this.selectedProcessDef.name);\n                }\n            },\n            () => {\n                this.errorMessageId = 'ADF_PROCESS_LIST.START_PROCESS.ERROR.LOAD_PROCESS_DEFS';\n            });\n    }\n\n    isProcessDefinitionsEmpty(): boolean {\n        return this.processDefinitions.length === 0;\n    }\n\n    getAlfrescoRepositoryName(): string {\n        let alfrescoRepositoryName = this.appConfig.get<string>(AppConfigValues.ALFRESCO_REPOSITORY_NAME);\n        if (!alfrescoRepositoryName) {\n            alfrescoRepositoryName = 'alfresco-1';\n        }\n        return alfrescoRepositoryName + 'Alfresco';\n    }\n\n    moveNodeFromCStoPS() {\n        const accountIdentifier = this.getAlfrescoRepositoryName();\n\n        for (const key in this.values) {\n            if (this.values.hasOwnProperty(key)) {\n                const currentValue = this.values[key];\n\n                if (currentValue.isFile) {\n                    this.activitiContentService.applyAlfrescoNode(currentValue, null, accountIdentifier).subscribe((res) => {\n                        this.values[key] = [res];\n                    });\n                }\n            }\n        }\n    }\n\n    public startProcess(outcome?: string) {\n        if (this.selectedProcessDef && this.selectedProcessDef.id && this.name) {\n            this.resetErrorMessage();\n            const formValues = this.startForm ? this.startForm.form.values : undefined;\n            this.activitiProcess.startProcess(this.selectedProcessDef.id, this.name, outcome, formValues, this.variables).subscribe(\n                (res) => {\n                    this.name = '';\n                    this.start.emit(res);\n                },\n                (err) => {\n                    this.errorMessageId = 'ADF_PROCESS_LIST.START_PROCESS.ERROR.START';\n                    this.error.error(err);\n                }\n            );\n        }\n    }\n\n    public cancelStartProcess() {\n        this.cancel.emit();\n    }\n\n    hasStartForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.hasStartForm;\n    }\n\n    isProcessDefinitionEmpty() {\n        return this.processDefinitions ? (this.processDefinitions.length > 0 || this.errorMessageId) : this.errorMessageId;\n    }\n\n    isStartFormMissingOrValid(): boolean {\n        if (this.startForm) {\n            return this.startForm.form && this.startForm.form.isValid;\n        } else {\n            return true;\n        }\n    }\n\n    validateForm(): boolean {\n        return this.selectedProcessDef && this.selectedProcessDef.id && this.processNameInput.valid && this.isStartFormMissingOrValid();\n    }\n\n    private resetSelectedProcessDefinition() {\n        this.selectedProcessDef = new ProcessDefinitionRepresentation();\n    }\n\n    private resetErrorMessage(): void {\n        this.errorMessageId = '';\n    }\n\n    hasErrorMessage(): boolean {\n        return this.processDefinitions.length === 0 && !this.errorMessageId;\n    }\n\n    public onOutcomeClick(outcome: string) {\n        this.startProcess(outcome);\n    }\n\n    public reset() {\n        this.resetSelectedProcessDefinition();\n        this.name = '';\n        if (this.startForm) {\n            this.startForm.data = {};\n        }\n        this.resetErrorMessage();\n    }\n\n    hasProcessName(): boolean {\n        return this.name ? true : false;\n    }\n\n    displayFn(process: any) {\n        if (process) {\n            let processName = process;\n            if (typeof process !== 'string') {\n                processName = process.name;\n            }\n            return processName;\n        }\n    }\n\n    displayDropdown(event) {\n        event.stopPropagation();\n        if (!this.inputAutocomplete.panelOpen) {\n            this.processDefinitionInput.setValue('');\n            this.inputAutocomplete.openPanel();\n        } else {\n            this.inputAutocomplete.closePanel();\n        }\n    }\n\n    get nameController(): AbstractControl {\n        return this.processNameInput;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ProcessFilterRequestRepresentation {\n    processDefinitionId: string;\n    appDefinitionId: string;\n    state: string;\n    sort: string;\n    page: number;\n    size: number;\n\n    constructor(obj?: any) {\n        this.processDefinitionId = obj && obj.processDefinitionId || null;\n        this.appDefinitionId = obj && obj.appDefinitionId || null;\n        this.state = obj && obj.state || null;\n        this.sort = obj && obj.sort || null;\n        this.page = obj && obj.page || 0;\n        this.size = obj && obj.size || 25;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ProcessCommentsModule } from '../process-comments/process-comments.module';\nimport { TaskListModule } from '../task-list/task-list.module';\nimport { PeopleModule } from '../people/people.module';\nimport { ContentWidgetModule } from '../content-widget/content-widget.module';\n\nimport { ProcessAuditDirective } from './components/process-audit.directive';\nimport { ProcessFiltersComponent } from './components/process-filters.component';\nimport { ProcessInstanceDetailsComponent } from './components/process-instance-details.component';\nimport { ProcessInstanceHeaderComponent } from './components/process-instance-header.component';\nimport { ProcessInstanceTasksComponent } from './components/process-instance-tasks.component';\nimport { ProcessInstanceListComponent } from './components/process-list.component';\nimport { StartProcessInstanceComponent } from './components/start-process.component';\nimport { FormModule } from '../form/form.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        TaskListModule,\n        PeopleModule,\n        ContentWidgetModule,\n        ProcessCommentsModule,\n        FormModule\n    ],\n    declarations: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ],\n    exports: [\n        ProcessInstanceListComponent,\n        ProcessFiltersComponent,\n        ProcessInstanceDetailsComponent,\n        ProcessAuditDirective,\n        ProcessInstanceHeaderComponent,\n        ProcessInstanceTasksComponent,\n        StartProcessInstanceComponent\n    ]\n})\nexport class ProcessListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService, TranslationService, CustomEmptyContentTemplateDirective } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, EventEmitter, Input, OnInit, Output, ContentChild } from '@angular/core';\nimport { Observable, Observer, of } from 'rxjs';\nimport { AppDefinitionRepresentationModel } from '../task-list';\nimport { IconModel } from './icon.model';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-apps',\n    templateUrl: 'apps-list.component.html',\n    styleUrls: ['./apps-list.component.scss']\n})\nexport class AppsListComponent implements OnInit, AfterContentInit {\n\n    public static LAYOUT_LIST: string = 'LIST';\n    public static LAYOUT_GRID: string = 'GRID';\n    public static DEFAULT_TASKS_APP: string = 'tasks';\n    public static DEFAULT_TASKS_APP_NAME: string = 'ADF_TASK_LIST.APPS.TASK_APP_NAME';\n    public static DEFAULT_TASKS_APP_THEME: string = 'theme-2';\n    public static DEFAULT_TASKS_APP_ICON: string = 'glyphicon-asterisk';\n    public static DEFAULT_TASKS_APP_MATERIAL_ICON: string = 'favorite_border';\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    emptyCustomContent: CustomEmptyContentTemplateDirective;\n\n    /** (**required**) Defines the layout of the apps. There are two possible\n     * values, \"GRID\" and \"LIST\".\n     */\n    @Input()\n    layoutType: string = AppsListComponent.LAYOUT_GRID;\n\n    /** Provides a way to filter the apps to show. */\n    @Input()\n    filtersAppId: any[];\n\n    /** Emitted when an app entry is clicked. */\n    @Output()\n    appClick: EventEmitter<AppDefinitionRepresentationModel> = new EventEmitter<AppDefinitionRepresentationModel>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    private appsObserver: Observer<AppDefinitionRepresentationModel>;\n    apps$: Observable<AppDefinitionRepresentationModel>;\n\n    currentApp: AppDefinitionRepresentationModel;\n\n    appList: AppDefinitionRepresentationModel [] = [];\n\n    private iconsMDL: IconModel;\n\n    loading: boolean = false;\n\n    hasEmptyCustomContentTemplate: boolean = false;\n\n    constructor(\n        private appsProcessService: AppsProcessService,\n        private translationService: TranslationService) {\n            this.apps$ = new Observable<AppDefinitionRepresentationModel>((observer) => this.appsObserver = observer)\n                .pipe(share());\n    }\n\n    ngOnInit() {\n        if (!this.isValidType()) {\n            this.setDefaultLayoutType();\n        }\n\n        this.apps$.subscribe((app: any) => {\n            this.appList.push(app);\n        });\n        this.iconsMDL = new IconModel();\n        this.load();\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyCustomContent) {\n            this.hasEmptyCustomContentTemplate = true;\n        }\n    }\n\n    private load() {\n        this.loading = true;\n        this.appsProcessService.getDeployedApplications()\n        .subscribe(\n            (res: AppDefinitionRepresentationModel[]) => {\n                this.filterApps(res).forEach((app: AppDefinitionRepresentationModel) => {\n                    if (this.isDefaultApp(app)) {\n                        app.theme = AppsListComponent.DEFAULT_TASKS_APP_THEME;\n                        app.icon = AppsListComponent.DEFAULT_TASKS_APP_ICON;\n                        this.appsObserver.next(app);\n                    } else if (app.deploymentId) {\n                        this.appsObserver.next(app);\n                    }\n                    this.loading = false;\n                });\n            },\n            (err) => {\n                this.error.emit(err);\n                this.loading = false;\n            }\n        );\n    }\n\n    isDefaultApp(app) {\n        return app.defaultAppId === AppsListComponent.DEFAULT_TASKS_APP;\n    }\n\n    getAppName(app) {\n        return this.isDefaultApp(app)\n            ? this.translationService.get(AppsListComponent.DEFAULT_TASKS_APP_NAME)\n            : of(app.name);\n    }\n\n    /**\n     * Pass the selected app as next\n     * @param app\n     */\n    public selectApp(app: AppDefinitionRepresentationModel) {\n        this.currentApp = app;\n        this.appClick.emit(app);\n    }\n\n    /**\n     * Return true if the appId is the current app\n     * @param appId\n     */\n    isSelected(appId: number): boolean {\n        return (this.currentApp !== undefined && appId === this.currentApp.id);\n    }\n\n    private filterApps(apps: AppDefinitionRepresentationModel []): AppDefinitionRepresentationModel[] {\n        const filteredApps: AppDefinitionRepresentationModel[] = [];\n        if (this.filtersAppId) {\n            apps.filter((app: AppDefinitionRepresentationModel) => {\n                this.filtersAppId.forEach((filter) => {\n                    if (app.defaultAppId === filter.defaultAppId ||\n                        app.deploymentId === filter.deploymentId ||\n                        app.name === filter.name ||\n                        app.id === filter.id ||\n                        app.modelId === filter.modelId ||\n                        app.tenantId === filter.tenantId) {\n                        filteredApps.push(app);\n                    }\n                });\n            });\n        } else {\n            return apps;\n        }\n        return filteredApps;\n    }\n\n    /**\n     * Check if the value of the layoutType property is an allowed value\n     */\n    isValidType(): boolean {\n        if (this.layoutType && (this.layoutType === AppsListComponent.LAYOUT_LIST || this.layoutType === AppsListComponent.LAYOUT_GRID)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Assign the default value to LayoutType\n     */\n    setDefaultLayoutType(): void {\n        this.layoutType = AppsListComponent.LAYOUT_GRID;\n    }\n\n    /**\n     * Return true if the layout type is LIST\n     */\n    isList(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_LIST;\n    }\n\n    /**\n     * Return true if the layout type is GRID\n     */\n    isGrid(): boolean {\n        return this.layoutType === AppsListComponent.LAYOUT_GRID;\n    }\n\n    isEmpty(): boolean {\n        return this.appList.length === 0;\n    }\n\n    isLoading(): boolean {\n        return this.loading;\n    }\n\n    getTheme(app: AppDefinitionRepresentationModel): string {\n        return app.theme ? app.theme : '';\n    }\n\n    getBackgroundIcon(app: AppDefinitionRepresentationModel): string {\n        return this.iconsMDL.mapGlyphiconToMaterialDesignIcons(app.icon);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppsProcessService } from '@alfresco/adf-core';\nimport { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\n@Component({\n    selector: 'adf-select-apps-dialog',\n    templateUrl: 'select-apps-dialog-component.html'\n})\nexport class SelectAppsDialogComponent {\n\n    processApps: any;\n\n    selectedProcess: any;\n\n    constructor(private appsProcessService: AppsProcessService,\n                public dialogRef: MatDialogRef<SelectAppsDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) public data: any) {\n\n        this.appsProcessService.getDeployedApplications().subscribe(\n            (apps: any[]) => {\n                this.processApps = apps.filter((currentApp) => {\n                    return currentApp.id;\n                });\n            }\n        );\n    }\n\n    onStart(): void {\n        this.dialogRef.close(this.selectedProcess);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { AppsListComponent } from './apps-list.component';\nimport { SelectAppsDialogComponent } from './select-apps-dialog-component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ],\n    exports: [\n        AppsListComponent,\n        SelectAppsDialogComponent\n    ],\n    entryComponents: [\n        SelectAppsDialogComponent\n    ]\n})\nexport class AppsListModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, ThumbnailService, EmptyListComponent } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    ContentChild,\n    Component,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnChanges,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-task-attachment-list',\n    styleUrls: ['./task-attachment-list.component.scss'],\n    templateUrl: './task-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TaskAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Disable/Enable read only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or a view\n     * option is selected from the context menu by the user from within the component.\n     * Returns a Blob representing the clicked object.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs while fetching the attachments. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.loadAttachmentsByTaskId(changes['taskId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset(): void {\n        this.attachments = [];\n    }\n\n    hasCustomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByTaskId(this.taskId);\n        });\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByTaskId(taskId: string) {\n        if (taskId) {\n            this.isLoading = true;\n            this.reset();\n            const opts = 'true';\n            this.activitiContentService.getTaskRelatedContent(taskId, opts).subscribe(\n                (res: any) => {\n                    const attachList = [];\n                    res.data.forEach((content) => {\n                        attachList.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.attachments = attachList;\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                (res: any) => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_TASK_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, EmptyListComponent , ThumbnailService } from '@alfresco/adf-core';\nimport { AfterContentInit, ContentChild, Component, EventEmitter, Input, NgZone, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-process-attachment-list',\n    styleUrls: ['./process-attachment-list.component.scss'],\n    templateUrl: './process-attachment-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ProcessAttachmentListComponent implements OnChanges, AfterContentInit {\n\n    @ContentChild(EmptyListComponent)\n    emptyTemplate: EmptyListComponent;\n\n    /** (**required**) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Disable/Enable read-only mode for attachment list. */\n    @Input()\n    disabled: boolean = false;\n\n    /** Emitted when the attachment is double-clicked or the\n     * view option is selected from the context menu by the user from\n     * within the component. Returns a Blob representing the object\n     * that was clicked.\n     */\n    @Output()\n    attachmentClick = new EventEmitter();\n\n    /** Emitted when the attachment list has fetched all the attachments.\n     * Returns a list of attachments.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when the attachment list is not able to fetch the attachments\n     * (eg, following a network error).\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    hasCustomTemplate: boolean = false;\n\n    attachments: any[] = [];\n    isLoading: boolean = false;\n\n    constructor(private activitiContentService: ProcessContentService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private ngZone: NgZone) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.loadAttachmentsByProcessInstanceId(changes['processInstanceId'].currentValue);\n        }\n    }\n\n    ngAfterContentInit() {\n        if (this.emptyTemplate) {\n            this.hasCustomTemplate = true;\n        }\n    }\n\n    reset() {\n        this.attachments = [];\n    }\n\n    reload(): void {\n        this.ngZone.run(() => {\n            this.loadAttachmentsByProcessInstanceId(this.processInstanceId);\n        });\n    }\n\n    hasCustomEmptyTemplate() {\n        return !!this.emptyTemplate;\n    }\n\n    add(content: any): void {\n        this.ngZone.run(() => {\n            this.attachments.push({\n                id: content.id,\n                name: content.name,\n                created: content.created,\n                createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n            });\n        });\n    }\n\n    private loadAttachmentsByProcessInstanceId(processInstanceId: string) {\n        if (processInstanceId) {\n            this.reset();\n            this.isLoading = true;\n            const opts: string =  'true';\n            this.activitiContentService.getProcessRelatedContent(processInstanceId, opts).subscribe(\n                (res: any) => {\n                    res.data.forEach((content) => {\n                        this.attachments.push({\n                            id: content.id,\n                            name: content.name,\n                            created: content.created,\n                            createdBy: content.createdBy.firstName + ' ' + content.createdBy.lastName,\n                            icon: this.thumbnailService.getMimeTypeIcon(content.mimeType)\n                        });\n                    });\n                    this.success.emit(this.attachments);\n                    this.isLoading = false;\n                },\n                (err) => {\n                    this.error.emit(err);\n                    this.isLoading = false;\n                });\n        }\n    }\n\n    private deleteAttachmentById(contentId: number) {\n        if (contentId) {\n            this.activitiContentService.deleteRelatedContent(contentId).subscribe(\n                (res: any) => {\n                    this.attachments = this.attachments.filter((content) => {\n                        return content.id !== contentId;\n                    });\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.attachments && this.attachments.length === 0;\n    }\n\n    onShowRowActionsMenu(event: any) {\n        const viewAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.VIEW_CONTENT',\n            name: 'view'\n        };\n\n        const removeAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.REMOVE_CONTENT',\n            name: 'remove'\n        };\n\n        const downloadAction = {\n            title: 'ADF_PROCESS_LIST.MENU_ACTIONS.DOWNLOAD_CONTENT',\n            name: 'download'\n        };\n\n        event.value.actions = [\n            viewAction,\n            downloadAction\n        ];\n\n        if (!this.disabled) {\n            event.value.actions.splice(1, 0, removeAction);\n        }\n    }\n\n    onExecuteRowAction(event: any) {\n        const args = event.value;\n        const action = args.action;\n        if (action.name === 'view') {\n            this.emitDocumentContent(args.row.obj);\n        } else if (action.name === 'remove') {\n            this.deleteAttachmentById(args.row.obj.id);\n        } else if (action.name === 'download') {\n            this.downloadContent(args.row.obj);\n        }\n    }\n\n    openContent(event: any): void {\n        const content = event.value.obj;\n        this.emitDocumentContent(content);\n    }\n\n    emitDocumentContent(content: any) {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.attachmentClick.emit(content);\n            },\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    downloadContent(content: any): void {\n        this.activitiContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (err) => {\n                this.error.emit(err);\n            }\n        );\n    }\n\n    isDisabled(): boolean {\n        return this.disabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-process-attachment',\n    styleUrls: ['./create-process-attachment.component.css'],\n    templateUrl: './create-process-attachment.component.html'\n})\nexport class CreateProcessAttachmentComponent implements OnChanges {\n\n    /** (required) The ID of the process instance to display. */\n    @Input()\n    processInstanceId: string;\n\n    /** Emitted when an error occurs while creating or uploading an attachment\n     * from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is successfully created or uploaded\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['processInstanceId'] && changes['processInstanceId'].currentValue) {\n            this.processInstanceId = changes['processInstanceId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createProcessRelatedContent(this.processInstanceId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { ProcessContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-create-task-attachment',\n    styleUrls: ['./create-task-attachment.component.scss'],\n    templateUrl: './create-task-attachment.component.html'\n})\nexport class AttachmentComponent implements OnChanges {\n\n    /** (required) The numeric ID of the task to display. */\n    @Input()\n    taskId: string;\n\n    /** Emitted when an error occurs while creating or uploading an\n     *  attachment from the user within the component.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an attachment is created or uploaded successfully\n     * from within the component.\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private activitiContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['taskId'] && changes['taskId'].currentValue) {\n            this.taskId = changes['taskId'].currentValue;\n        }\n    }\n\n    onFileUpload(event: any) {\n        const filesList: File[] = event.detail.files.map((obj) => obj.file);\n\n        for (const fileInfoObj of filesList) {\n            const file: File = fileInfoObj;\n            const opts = {\n                isRelatedContent: true\n            };\n            this.activitiContentService.createTaskRelatedContent(this.taskId, file, opts).subscribe(\n                (res) => {\n                    this.success.emit(res);\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { TaskAttachmentListComponent } from './task-attachment-list.component';\nimport { ProcessAttachmentListComponent } from './process-attachment-list.component';\nimport { CreateProcessAttachmentComponent } from './create-process-attachment.component';\nimport { AttachmentComponent } from './create-task-attachment.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        MaterialModule\n    ],\n    declarations: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ],\n    exports: [\n        TaskAttachmentListComponent,\n        ProcessAttachmentListComponent,\n        CreateProcessAttachmentComponent,\n        CreateProcessAttachmentComponent,\n        AttachmentComponent\n    ]\n})\nexport class AttachmentModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { ProcessListModule } from './process-list/process-list.module';\nimport { TaskListModule } from './task-list/task-list.module';\nimport { AppsListModule } from './app-list/apps-list.module';\nimport { ProcessCommentsModule } from './process-comments/process-comments.module';\nimport { AttachmentModule } from './attachment/attachment.module';\nimport { PeopleModule } from './people/people.module';\nimport { FormModule } from './form/form.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-process-services',\n                source: 'assets/adf-process-services'\n            }\n        }\n    ],\n    exports: [\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule,\n        FormModule\n    ]\n})\nexport class ProcessModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ProcessModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-process-services',\n                        source: 'assets/adf-process-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ProcessModuleLazy\n        };\n    }\n}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule\n    ],\n    exports: [\n        CommonModule,\n        ProcessCommentsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        ProcessListModule,\n        TaskListModule,\n        AppsListModule,\n        AttachmentModule,\n        PeopleModule\n    ]\n})\nexport class ProcessModuleLazy {}\n"],"names":["filter","tslib_1.__extends","moment","JSON_FORMAT","PDF_FORMAT","tslib_1.__values"],"mappings":"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"}
