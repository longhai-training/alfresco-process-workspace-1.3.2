/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import { RecordCategoryChildEntry } from '../model/recordCategoryChildEntry';
import { RecordCategoryChildPaging } from '../model/recordCategoryChildPaging';
import { RecordCategoryEntry } from '../model/recordCategoryEntry';
import { BaseApi } from './base.api';
export class RecordCategoriesApi extends BaseApi {
    createRecordCategoryChild(recordCategoryId, nodeBodyCreate, opts) {
        opts = opts || {};
        let postBody = nodeBodyCreate;
        if (recordCategoryId === undefined || recordCategoryId === null) {
            throw new Error("Required param 'recordCategoryId' in createRecordCategoryChild");
        }
        if (nodeBodyCreate === undefined || nodeBodyCreate === null) {
            throw new Error("Required param 'nodeBodyCreate' in createRecordCategoryChild");
        }
        let pathParams = {
            'recordCategoryId': recordCategoryId
        };
        let queryParams = {
            'autoRename': opts['autoRename'],
            'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
            'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json', 'multipart/form-data'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/record-categories/{recordCategoryId}/children', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RecordCategoryChildEntry);
    }
    deleteRecordCategory(recordCategoryId) {
        let postBody = null;
        if (recordCategoryId === undefined || recordCategoryId === null) {
            throw new Error("Required param 'recordCategoryId' in deleteRecordCategory");
        }
        let pathParams = {
            'recordCategoryId': recordCategoryId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/record-categories/{recordCategoryId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    getRecordCategory(recordCategoryId, opts) {
        opts = opts || {};
        let postBody = null;
        if (recordCategoryId === undefined || recordCategoryId === null) {
            throw new Error("Required param 'recordCategoryId' in getRecordCategory");
        }
        let pathParams = {
            'recordCategoryId': recordCategoryId
        };
        let queryParams = {
            'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
            'relativePath': opts['relativePath'],
            'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/record-categories/{recordCategoryId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RecordCategoryEntry);
    }
    listRecordCategoryChildren(recordCategoryId, opts) {
        opts = opts || {};
        let postBody = null;
        if (recordCategoryId === undefined || recordCategoryId === null) {
            throw new Error("Required param 'recordCategoryId' in listRecordCategoryChildren");
        }
        let pathParams = {
            'recordCategoryId': recordCategoryId
        };
        let queryParams = {
            'skipCount': opts['skipCount'],
            'maxItems': opts['maxItems'],
            'where': opts['where'],
            'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
            'relativePath': opts['relativePath'],
            'includeSource': opts['includeSource'],
            'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/record-categories/{recordCategoryId}/children', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RecordCategoryChildPaging);
    }
    updateRecordCategory(recordCategoryId, recordCategoryBodyUpdate, opts) {
        opts = opts || {};
        let postBody = recordCategoryBodyUpdate;
        if (recordCategoryId === undefined || recordCategoryId === null) {
            throw new Error("Required param 'recordCategoryId' in updateRecordCategory");
        }
        if (recordCategoryBodyUpdate === undefined || recordCategoryBodyUpdate === null) {
            throw new Error("Required param 'recordCategoryBodyUpdate' in updateRecordCategory");
        }
        let pathParams = {
            'recordCategoryId': recordCategoryId
        };
        let queryParams = {
            'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
            'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/record-categories/{recordCategoryId}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RecordCategoryEntry);
    }
}
//# sourceMappingURL=recordCategories.api.js.map