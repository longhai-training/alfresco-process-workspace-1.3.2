"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const resultListDataRepresentationTaskRepresentation_1 = require("../model/resultListDataRepresentationTaskRepresentation");
const taskRepresentation_1 = require("../model/taskRepresentation");
const base_api_1 = require("./base.api");
class ChecklistsApi extends base_api_1.BaseApi {
    addSubtask(taskId, taskRepresentation) {
        let postBody = taskRepresentation;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in addSubtask");
        }
        if (taskRepresentation === undefined || taskRepresentation === null) {
            throw new Error("Required param 'taskRepresentation' in addSubtask");
        }
        let pathParams = {
            'taskId': taskId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/tasks/{taskId}/checklist', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, taskRepresentation_1.TaskRepresentation);
    }
    getChecklist(taskId) {
        let postBody = null;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in getChecklist");
        }
        let pathParams = {
            'taskId': taskId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/tasks/{taskId}/checklist', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, resultListDataRepresentationTaskRepresentation_1.ResultListDataRepresentationTaskRepresentation);
    }
    orderChecklist(taskId, orderRepresentation) {
        let postBody = orderRepresentation;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in orderChecklist");
        }
        if (orderRepresentation === undefined || orderRepresentation === null) {
            throw new Error("Required param 'orderRepresentation' in orderChecklist");
        }
        let pathParams = {
            'taskId': taskId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/tasks/{taskId}/checklist', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
}
exports.ChecklistsApi = ChecklistsApi;
//# sourceMappingURL=checklists.api.js.map