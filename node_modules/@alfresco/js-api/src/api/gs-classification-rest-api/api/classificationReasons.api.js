"use strict";
/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const classificationReasonEntry_1 = require("../model/classificationReasonEntry");
const classificationReasonsPaging_1 = require("../model/classificationReasonsPaging");
const base_api_1 = require("./base.api");
class ClassificationReasonsApi extends base_api_1.BaseApi {
    createClassificationReason(classificationReason) {
        let postBody = classificationReason;
        if (classificationReason === undefined || classificationReason === null) {
            throw new Error("Required param 'classificationReason' in createClassificationReason");
        }
        let pathParams = {};
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/classification-reasons', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, classificationReasonEntry_1.ClassificationReasonEntry);
    }
    deleteClassificationReason(classificationReasonId) {
        let postBody = null;
        if (classificationReasonId === undefined || classificationReasonId === null) {
            throw new Error("Required param 'classificationReasonId' in deleteClassificationReason");
        }
        let pathParams = {
            'classificationReasonId': classificationReasonId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/classification-reasons/{classificationReasonId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    }
    listClassificationReasons(opts) {
        opts = opts || {};
        let postBody = null;
        let pathParams = {};
        let queryParams = {
            'skipCount': opts['skipCount'],
            'maxItems': opts['maxItems'],
            'fields': this.apiClient.buildCollectionParam(opts['fields'], 'csv')
        };
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/classification-reasons', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, classificationReasonsPaging_1.ClassificationReasonsPaging);
    }
    showClassificationReasonById(classificationReasonId) {
        let postBody = null;
        if (classificationReasonId === undefined || classificationReasonId === null) {
            throw new Error("Required param 'classificationReasonId' in showClassificationReasonById");
        }
        let pathParams = {
            'classificationReasonId': classificationReasonId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/classification-reasons/{classificationReasonId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, classificationReasonEntry_1.ClassificationReasonEntry);
    }
    updateClassificationReason(classificationReasonId, classificationReason) {
        let postBody = classificationReason;
        if (classificationReasonId === undefined || classificationReasonId === null) {
            throw new Error("Required param 'classificationReasonId' in updateClassificationReason");
        }
        if (classificationReason === undefined || classificationReason === null) {
            throw new Error("Required param 'classificationReason' in updateClassificationReason");
        }
        let pathParams = {
            'classificationReasonId': classificationReasonId
        };
        let queryParams = {};
        let headerParams = {};
        let formParams = {};
        let contentTypes = ['application/json'];
        let accepts = ['application/json'];
        return this.apiClient.callApi('/classification-reasons/{classificationReasonId}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, classificationReasonEntry_1.ClassificationReasonEntry);
    }
}
exports.ClassificationReasonsApi = ClassificationReasonsApi;
//# sourceMappingURL=classificationReasons.api.js.map