/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import * as tslib_1 from "tslib";
import { RestVariable } from '../model/restVariable';
import { BaseApi } from './base.api';
var ProcessInstanceVariablesApi = (function (_super) {
    tslib_1.__extends(ProcessInstanceVariablesApi, _super);
    function ProcessInstanceVariablesApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ProcessInstanceVariablesApi.prototype.createOrUpdateProcessInstanceVariables = function (processInstanceId, restVariables) {
        var postBody = restVariables;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw new Error("Required param 'processInstanceId' in createOrUpdateProcessInstanceVariables");
        }
        if (restVariables === undefined || restVariables === null) {
            throw new Error("Required param 'restVariables' in createOrUpdateProcessInstanceVariables");
        }
        var pathParams = {
            'processInstanceId': processInstanceId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-instances/{processInstanceId}/variables', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ProcessInstanceVariablesApi.prototype.createProcessInstanceVariables = function (processInstanceId, restVariables) {
        var postBody = restVariables;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw new Error("Required param 'processInstanceId' in createProcessInstanceVariables");
        }
        if (restVariables === undefined || restVariables === null) {
            throw new Error("Required param 'restVariables' in createProcessInstanceVariables");
        }
        var pathParams = {
            'processInstanceId': processInstanceId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-instances/{processInstanceId}/variables', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ProcessInstanceVariablesApi.prototype.deleteProcessInstanceVariable = function (processInstanceId, variableName) {
        var postBody = null;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw new Error("Required param 'processInstanceId' in deleteProcessInstanceVariable");
        }
        if (variableName === undefined || variableName === null) {
            throw new Error("Required param 'variableName' in deleteProcessInstanceVariable");
        }
        var pathParams = {
            'processInstanceId': processInstanceId, 'variableName': variableName
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-instances/{processInstanceId}/variables/{variableName}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ProcessInstanceVariablesApi.prototype.getProcessInstanceVariable = function (processInstanceId, variableName) {
        var postBody = null;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw new Error("Required param 'processInstanceId' in getProcessInstanceVariable");
        }
        if (variableName === undefined || variableName === null) {
            throw new Error("Required param 'variableName' in getProcessInstanceVariable");
        }
        var pathParams = {
            'processInstanceId': processInstanceId, 'variableName': variableName
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-instances/{processInstanceId}/variables/{variableName}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RestVariable);
    };
    ProcessInstanceVariablesApi.prototype.getProcessInstanceVariables = function (processInstanceId) {
        var postBody = null;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw new Error("Required param 'processInstanceId' in getProcessInstanceVariables");
        }
        var pathParams = {
            'processInstanceId': processInstanceId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-instances/{processInstanceId}/variables', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    ProcessInstanceVariablesApi.prototype.updateProcessInstanceVariable = function (processInstanceId, variableName, restVariable) {
        var postBody = restVariable;
        if (processInstanceId === undefined || processInstanceId === null) {
            throw new Error("Required param 'processInstanceId' in updateProcessInstanceVariable");
        }
        if (variableName === undefined || variableName === null) {
            throw new Error("Required param 'variableName' in updateProcessInstanceVariable");
        }
        if (restVariable === undefined || restVariable === null) {
            throw new Error("Required param 'restVariable' in updateProcessInstanceVariable");
        }
        var pathParams = {
            'processInstanceId': processInstanceId, 'variableName': variableName
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/process-instances/{processInstanceId}/variables/{variableName}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, RestVariable);
    };
    return ProcessInstanceVariablesApi;
}(BaseApi));
export { ProcessInstanceVariablesApi };
//# sourceMappingURL=processInstanceVariables.api.js.map