/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import * as tslib_1 from "tslib";
import { FormDefinitionRepresentation } from '../model/formDefinitionRepresentation';
import { FormValueRepresentation } from '../model/formValueRepresentation';
import { ProcessInstanceVariableRepresentation } from '../model/processInstanceVariableRepresentation';
import { BaseApi } from './base.api';
var TaskFormsApi = (function (_super) {
    tslib_1.__extends(TaskFormsApi, _super);
    function TaskFormsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TaskFormsApi.prototype.completeTaskForm = function (taskId, completeTaskFormRepresentation) {
        var postBody = completeTaskFormRepresentation;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in completeTaskForm");
        }
        if (completeTaskFormRepresentation === undefined || completeTaskFormRepresentation === null) {
            throw new Error("Required param 'completeTaskFormRepresentation' in completeTaskForm");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    TaskFormsApi.prototype.getProcessInstanceVariables = function (taskId) {
        var postBody = null;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in getProcessInstanceVariables");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}/variables', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ProcessInstanceVariableRepresentation);
    };
    TaskFormsApi.prototype.getRestFieldColumnValues = function (taskId, field, column) {
        var postBody = null;
        if (taskId === undefined || taskId === null) {
            throw "Missing param 'taskId' in getRestFieldValues";
        }
        if (field === undefined || field === null) {
            throw "Missing param 'field' in getRestFieldValues";
        }
        if (column === undefined || column === null) {
            throw "Missing param 'column' in getRestFieldValues";
        }
        var pathParams = {
            'taskId': taskId,
            'field': field,
            'column': column
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}/form-values/{field}/{column}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    TaskFormsApi.prototype.getRestFieldValues = function (taskId, field) {
        var postBody = null;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in getRestFieldValues");
        }
        if (field === undefined || field === null) {
            throw new Error("Required param 'field' in getRestFieldValues");
        }
        var pathParams = {
            'taskId': taskId, 'field': field
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}/form-values/{field}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, FormValueRepresentation);
    };
    TaskFormsApi.prototype.getTaskForm = function (taskId) {
        var postBody = null;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in getTaskForm");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, FormDefinitionRepresentation);
    };
    TaskFormsApi.prototype.saveTaskForm = function (taskId, saveTaskFormRepresentation) {
        var postBody = saveTaskFormRepresentation;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in saveTaskForm");
        }
        if (saveTaskFormRepresentation === undefined || saveTaskFormRepresentation === null) {
            throw new Error("Required param 'saveTaskFormRepresentation' in saveTaskForm");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}/save-form', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    TaskFormsApi.prototype.getTaskFormVariables = function (taskId) {
        var postBody = null;
        if (taskId === undefined || taskId === null) {
            throw "Missing param 'taskId' in getTaskFormVariables";
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/task-forms/{taskId}/variables', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    return TaskFormsApi;
}(BaseApi));
export { TaskFormsApi };
//# sourceMappingURL=taskForms.api.js.map