/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import * as tslib_1 from "tslib";
import { ModelRepresentation } from '../model/modelRepresentation';
import { ResultListDataRepresentationModelRepresentation } from '../model/resultListDataRepresentationModelRepresentation';
import { BaseApi } from './base.api';
var ModelsHistoryApi = (function (_super) {
    tslib_1.__extends(ModelsHistoryApi, _super);
    function ModelsHistoryApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelsHistoryApi.prototype.getModelHistoryCollection = function (modelId, opts) {
        opts = opts || {};
        var postBody = null;
        if (modelId === undefined || modelId === null) {
            throw new Error("Required param 'modelId' in getModelHistoryCollection");
        }
        var pathParams = {
            'modelId': modelId
        };
        var queryParams = {
            'includeLatestVersion': opts['includeLatestVersion']
        };
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/models/{modelId}/history', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ResultListDataRepresentationModelRepresentation);
    };
    ModelsHistoryApi.prototype.getProcessModelHistory = function (modelId, modelHistoryId) {
        var postBody = null;
        if (modelId === undefined || modelId === null) {
            throw new Error("Required param 'modelId' in getProcessModelHistory");
        }
        if (modelHistoryId === undefined || modelHistoryId === null) {
            throw new Error("Required param 'modelHistoryId' in getProcessModelHistory");
        }
        var pathParams = {
            'modelId': modelId, 'modelHistoryId': modelHistoryId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/models/{modelId}/history/{modelHistoryId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ModelRepresentation);
    };
    return ModelsHistoryApi;
}(BaseApi));
export { ModelsHistoryApi };
//# sourceMappingURL=modelsHistory.api.js.map