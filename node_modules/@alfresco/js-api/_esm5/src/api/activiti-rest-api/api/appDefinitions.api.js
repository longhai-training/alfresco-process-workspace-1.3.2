/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import * as tslib_1 from "tslib";
import { AppDefinitionRepresentation } from '../model/appDefinitionRepresentation';
import { AppDefinitionUpdateResultRepresentation } from '../model/appDefinitionUpdateResultRepresentation';
import { BaseApi } from './base.api';
var AppDefinitionsApi = (function (_super) {
    tslib_1.__extends(AppDefinitionsApi, _super);
    function AppDefinitionsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppDefinitionsApi.prototype.deleteAppDefinition = function (appDefinitionId) {
        var postBody = null;
        if (appDefinitionId === undefined || appDefinitionId === null) {
            throw new Error("Required param 'appDefinitionId' in deleteAppDefinition");
        }
        var pathParams = {
            'appDefinitionId': appDefinitionId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/app-definitions/{appDefinitionId}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    AppDefinitionsApi.prototype.exportAppDefinition = function (modelId) {
        var postBody = null;
        if (modelId === undefined || modelId === null) {
            throw new Error("Required param 'modelId' in exportAppDefinition");
        }
        var pathParams = {
            'modelId': modelId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json', 'application/zip'];
        return this.apiClient.callApi('/api/enterprise/app-definitions/{modelId}/export', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    AppDefinitionsApi.prototype.getAppDefinition = function (modelId) {
        var postBody = null;
        if (modelId === undefined || modelId === null) {
            throw new Error("Required param 'modelId' in getAppDefinition");
        }
        var pathParams = {
            'modelId': modelId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/app-definitions/{modelId}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, AppDefinitionRepresentation);
    };
    AppDefinitionsApi.prototype.importAndPublishApp = function (file) {
        var postBody = null;
        if (file === undefined || file === null) {
            throw new Error("Required param 'file' in importAndPublishApp");
        }
        var pathParams = {};
        var queryParams = {};
        var headerParams = {};
        var formParams = {
            'file': file
        };
        var contentTypes = ['multipart/form-data'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/app-definitions/publish-app', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, AppDefinitionUpdateResultRepresentation);
    };
    AppDefinitionsApi.prototype.importAppDefinition = function (file, opts) {
        opts = opts || {};
        var postBody = null;
        if (file === undefined || file === null) {
            throw new Error("Required param 'file' in importAppDefinition");
        }
        var pathParams = {};
        var queryParams = {
            'renewIdmEntries': opts['renewIdmEntries']
        };
        var headerParams = {};
        var formParams = {
            'file': file
        };
        var contentTypes = ['multipart/form-data'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/app-definitions/import', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, AppDefinitionRepresentation);
    };
    AppDefinitionsApi.prototype.publishAppDefinition = function (modelId, publishModel) {
        var postBody = publishModel;
        if (modelId === undefined || modelId === null) {
            throw new Error("Required param 'modelId' in publishAppDefinition");
        }
        if (publishModel === undefined || publishModel === null) {
            throw new Error("Required param 'publishModel' in publishAppDefinition");
        }
        var pathParams = {
            'modelId': modelId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/app-definitions/{modelId}/publish', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, AppDefinitionUpdateResultRepresentation);
    };
    AppDefinitionsApi.prototype.updateAppDefinition = function (modelId, updatedModel) {
        var postBody = updatedModel;
        if (modelId === undefined || modelId === null) {
            throw new Error("Required param 'modelId' in updateAppDefinition");
        }
        if (updatedModel === undefined || updatedModel === null) {
            throw new Error("Required param 'updatedModel' in updateAppDefinition");
        }
        var pathParams = {
            'modelId': modelId
        };
        var queryParams = {};
        var headerParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        if (!updatedModel['appDefinition']) {
            contentTypes = ['multipart/form-data'];
            var formParams = {
                'file': updatedModel
            };
            return this.apiClient.callApi('/api/enterprise/app-definitions/{modelId}/import', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
        }
        else {
            var formParams = {};
            return this.apiClient.callApi('/api/enterprise/app-definitions/{modelId}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
        }
    };
    return AppDefinitionsApi;
}(BaseApi));
export { AppDefinitionsApi };
//# sourceMappingURL=appDefinitions.api.js.map