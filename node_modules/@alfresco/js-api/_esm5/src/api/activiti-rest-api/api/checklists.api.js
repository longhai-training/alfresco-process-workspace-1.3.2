/*!
* @license
* Copyright 2018 Alfresco Software, Ltd.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import * as tslib_1 from "tslib";
import { ResultListDataRepresentationTaskRepresentation } from '../model/resultListDataRepresentationTaskRepresentation';
import { TaskRepresentation } from '../model/taskRepresentation';
import { BaseApi } from './base.api';
var ChecklistsApi = (function (_super) {
    tslib_1.__extends(ChecklistsApi, _super);
    function ChecklistsApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChecklistsApi.prototype.addSubtask = function (taskId, taskRepresentation) {
        var postBody = taskRepresentation;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in addSubtask");
        }
        if (taskRepresentation === undefined || taskRepresentation === null) {
            throw new Error("Required param 'taskRepresentation' in addSubtask");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/tasks/{taskId}/checklist', 'POST', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, TaskRepresentation);
    };
    ChecklistsApi.prototype.getChecklist = function (taskId) {
        var postBody = null;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in getChecklist");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/tasks/{taskId}/checklist', 'GET', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts, ResultListDataRepresentationTaskRepresentation);
    };
    ChecklistsApi.prototype.orderChecklist = function (taskId, orderRepresentation) {
        var postBody = orderRepresentation;
        if (taskId === undefined || taskId === null) {
            throw new Error("Required param 'taskId' in orderChecklist");
        }
        if (orderRepresentation === undefined || orderRepresentation === null) {
            throw new Error("Required param 'orderRepresentation' in orderChecklist");
        }
        var pathParams = {
            'taskId': taskId
        };
        var queryParams = {};
        var headerParams = {};
        var formParams = {};
        var contentTypes = ['application/json'];
        var accepts = ['application/json'];
        return this.apiClient.callApi('/api/enterprise/tasks/{taskId}/checklist', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, contentTypes, accepts);
    };
    return ChecklistsApi;
}(BaseApi));
export { ChecklistsApi };
//# sourceMappingURL=checklists.api.js.map