/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var BpmUserModel = /** @class */ (function () {
    function BpmUserModel(input) {
        if (input) {
            this.apps = input.apps;
            this.capabilities = input.capabilities;
            this.company = input.company;
            this.created = input.created;
            this.email = input.email;
            this.externalId = input.externalId;
            this.firstName = input.firstName;
            this.lastName = input.lastName;
            this.fullname = input.fullname;
            this.groups = input.groups;
            this.id = input.id;
            this.lastUpdate = input.lastUpdate;
            this.latestSyncTimeStamp = input.latestSyncTimeStamp;
            this.password = input.password;
            this.pictureId = input.pictureId;
            this.status = input.status;
            this.tenantId = input.tenantId;
            this.tenantName = input.tenantName;
            this.tenantPictureId = input.tenantPictureId;
            this.type = input.type;
        }
    }
    return BpmUserModel;
}());
export { BpmUserModel };
if (false) {
    /** @type {?} */
    BpmUserModel.prototype.apps;
    /** @type {?} */
    BpmUserModel.prototype.capabilities;
    /** @type {?} */
    BpmUserModel.prototype.company;
    /** @type {?} */
    BpmUserModel.prototype.created;
    /** @type {?} */
    BpmUserModel.prototype.email;
    /** @type {?} */
    BpmUserModel.prototype.externalId;
    /** @type {?} */
    BpmUserModel.prototype.firstName;
    /** @type {?} */
    BpmUserModel.prototype.lastName;
    /** @type {?} */
    BpmUserModel.prototype.fullname;
    /** @type {?} */
    BpmUserModel.prototype.groups;
    /** @type {?} */
    BpmUserModel.prototype.id;
    /** @type {?} */
    BpmUserModel.prototype.lastUpdate;
    /** @type {?} */
    BpmUserModel.prototype.latestSyncTimeStamp;
    /** @type {?} */
    BpmUserModel.prototype.password;
    /** @type {?} */
    BpmUserModel.prototype.pictureId;
    /** @type {?} */
    BpmUserModel.prototype.status;
    /** @type {?} */
    BpmUserModel.prototype.tenantId;
    /** @type {?} */
    BpmUserModel.prototype.tenantName;
    /** @type {?} */
    BpmUserModel.prototype.tenantPictureId;
    /** @type {?} */
    BpmUserModel.prototype.type;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnBtLXVzZXIubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJ1c2VyaW5mby9tb2RlbHMvYnBtLXVzZXIubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFtQkE7SUFzQkksc0JBQVksS0FBVztRQUNuQixJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztZQUN2QixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUM7WUFDdkMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDO1lBQzdCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztZQUM3QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQ25DLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQztZQUNqQyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUM7WUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQy9CLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztZQUMzQixJQUFJLENBQUMsRUFBRSxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUM7WUFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQ25DLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxLQUFLLENBQUMsbUJBQW1CLENBQUM7WUFDckQsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQztZQUNqQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUM7WUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDO1lBQy9CLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQztZQUNuQyxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxlQUFlLENBQUM7WUFDN0MsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1NBQzFCO0lBQ0wsQ0FBQztJQUNMLG1CQUFDO0FBQUQsQ0FBQyxBQTlDRCxJQThDQzs7OztJQTdDRyw0QkFBVTs7SUFDVixvQ0FBdUI7O0lBQ3ZCLCtCQUFnQjs7SUFDaEIsK0JBQWM7O0lBQ2QsNkJBQWM7O0lBQ2Qsa0NBQW1COztJQUNuQixpQ0FBa0I7O0lBQ2xCLGdDQUFpQjs7SUFDakIsZ0NBQWlCOztJQUNqQiw4QkFBWTs7SUFDWiwwQkFBVzs7SUFDWCxrQ0FBaUI7O0lBQ2pCLDJDQUEwQjs7SUFDMUIsZ0NBQWlCOztJQUNqQixpQ0FBa0I7O0lBQ2xCLDhCQUFlOztJQUNmLGdDQUFpQjs7SUFDakIsa0NBQW1COztJQUNuQix1Q0FBd0I7O0lBQ3hCLDRCQUFhIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgVXNlclJlcHJlc2VudGF0aW9uIH0gZnJvbSAnQGFsZnJlc2NvL2pzLWFwaSc7XG5cbmV4cG9ydCBjbGFzcyBCcG1Vc2VyTW9kZWwgaW1wbGVtZW50cyBVc2VyUmVwcmVzZW50YXRpb24ge1xuICAgIGFwcHM6IGFueTtcbiAgICBjYXBhYmlsaXRpZXM6IHN0cmluZ1tdO1xuICAgIGNvbXBhbnk6IHN0cmluZztcbiAgICBjcmVhdGVkOiBEYXRlO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gICAgZXh0ZXJuYWxJZDogc3RyaW5nO1xuICAgIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIGxhc3ROYW1lOiBzdHJpbmc7XG4gICAgZnVsbG5hbWU6IHN0cmluZztcbiAgICBncm91cHM6IGFueTtcbiAgICBpZDogbnVtYmVyO1xuICAgIGxhc3RVcGRhdGU6IERhdGU7XG4gICAgbGF0ZXN0U3luY1RpbWVTdGFtcDogRGF0ZTtcbiAgICBwYXNzd29yZDogc3RyaW5nO1xuICAgIHBpY3R1cmVJZDogbnVtYmVyO1xuICAgIHN0YXR1czogc3RyaW5nO1xuICAgIHRlbmFudElkOiBudW1iZXI7XG4gICAgdGVuYW50TmFtZTogc3RyaW5nO1xuICAgIHRlbmFudFBpY3R1cmVJZDogbnVtYmVyO1xuICAgIHR5cGU6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGlucHV0PzogYW55KSB7XG4gICAgICAgIGlmIChpbnB1dCkge1xuICAgICAgICAgICAgdGhpcy5hcHBzID0gaW5wdXQuYXBwcztcbiAgICAgICAgICAgIHRoaXMuY2FwYWJpbGl0aWVzID0gaW5wdXQuY2FwYWJpbGl0aWVzO1xuICAgICAgICAgICAgdGhpcy5jb21wYW55ID0gaW5wdXQuY29tcGFueTtcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlZCA9IGlucHV0LmNyZWF0ZWQ7XG4gICAgICAgICAgICB0aGlzLmVtYWlsID0gaW5wdXQuZW1haWw7XG4gICAgICAgICAgICB0aGlzLmV4dGVybmFsSWQgPSBpbnB1dC5leHRlcm5hbElkO1xuICAgICAgICAgICAgdGhpcy5maXJzdE5hbWUgPSBpbnB1dC5maXJzdE5hbWU7XG4gICAgICAgICAgICB0aGlzLmxhc3ROYW1lID0gaW5wdXQubGFzdE5hbWU7XG4gICAgICAgICAgICB0aGlzLmZ1bGxuYW1lID0gaW5wdXQuZnVsbG5hbWU7XG4gICAgICAgICAgICB0aGlzLmdyb3VwcyA9IGlucHV0Lmdyb3VwcztcbiAgICAgICAgICAgIHRoaXMuaWQgPSBpbnB1dC5pZDtcbiAgICAgICAgICAgIHRoaXMubGFzdFVwZGF0ZSA9IGlucHV0Lmxhc3RVcGRhdGU7XG4gICAgICAgICAgICB0aGlzLmxhdGVzdFN5bmNUaW1lU3RhbXAgPSBpbnB1dC5sYXRlc3RTeW5jVGltZVN0YW1wO1xuICAgICAgICAgICAgdGhpcy5wYXNzd29yZCA9IGlucHV0LnBhc3N3b3JkO1xuICAgICAgICAgICAgdGhpcy5waWN0dXJlSWQgPSBpbnB1dC5waWN0dXJlSWQ7XG4gICAgICAgICAgICB0aGlzLnN0YXR1cyA9IGlucHV0LnN0YXR1cztcbiAgICAgICAgICAgIHRoaXMudGVuYW50SWQgPSBpbnB1dC50ZW5hbnRJZDtcbiAgICAgICAgICAgIHRoaXMudGVuYW50TmFtZSA9IGlucHV0LnRlbmFudE5hbWU7XG4gICAgICAgICAgICB0aGlzLnRlbmFudFBpY3R1cmVJZCA9IGlucHV0LnRlbmFudFBpY3R1cmVJZDtcbiAgICAgICAgICAgIHRoaXMudHlwZSA9IGlucHV0LnR5cGU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=