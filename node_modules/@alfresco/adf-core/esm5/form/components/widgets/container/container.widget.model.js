/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector  */
import { ContainerModel } from './../core/container.model';
import { FormFieldTypes } from './../core/form-field-types';
var ContainerWidgetComponentModel = /** @class */ (function (_super) {
    tslib_1.__extends(ContainerWidgetComponentModel, _super);
    function ContainerWidgetComponentModel(field) {
        var _this = _super.call(this, field) || this;
        _this.columns = [];
        _this.isExpanded = true;
        _this.rowspan = 1;
        _this.colspan = 1;
        if (_this.field) {
            _this.columns = _this.field.columns || [];
            _this.isExpanded = !_this.isCollapsedByDefault();
            _this.colspan = field.colspan;
            _this.rowspan = field.rowspan;
        }
        return _this;
    }
    /**
     * @return {?}
     */
    ContainerWidgetComponentModel.prototype.isGroup = /**
     * @return {?}
     */
    function () {
        return this.type === FormFieldTypes.GROUP;
    };
    /**
     * @return {?}
     */
    ContainerWidgetComponentModel.prototype.isCollapsible = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var allowCollapse = false;
        if (this.isGroup() && this.field.params['allowCollapse']) {
            allowCollapse = (/** @type {?} */ (this.field.params['allowCollapse']));
        }
        return allowCollapse;
    };
    /**
     * @return {?}
     */
    ContainerWidgetComponentModel.prototype.isCollapsedByDefault = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var collapseByDefault = false;
        if (this.isCollapsible() && this.field.params['collapseByDefault']) {
            collapseByDefault = (/** @type {?} */ (this.field.params['collapseByDefault']));
        }
        return collapseByDefault;
    };
    return ContainerWidgetComponentModel;
}(ContainerModel));
export { ContainerWidgetComponentModel };
if (false) {
    /** @type {?} */
    ContainerWidgetComponentModel.prototype.columns;
    /** @type {?} */
    ContainerWidgetComponentModel.prototype.isExpanded;
    /** @type {?} */
    ContainerWidgetComponentModel.prototype.rowspan;
    /** @type {?} */
    ContainerWidgetComponentModel.prototype.colspan;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGFpbmVyLndpZGdldC5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImZvcm0vY29tcG9uZW50cy93aWRnZXRzL2NvbnRhaW5lci9jb250YWluZXIud2lkZ2V0Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzNELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUc1RDtJQUFtRCx5REFBYztJQStCN0QsdUNBQVksS0FBcUI7UUFBakMsWUFDSSxrQkFBTSxLQUFLLENBQUMsU0FRZjtRQXRDRCxhQUFPLEdBQTJCLEVBQUUsQ0FBQztRQUNyQyxnQkFBVSxHQUFZLElBQUksQ0FBQztRQUMzQixhQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQ3BCLGFBQU8sR0FBVyxDQUFDLENBQUM7UUE2QmhCLElBQUksS0FBSSxDQUFDLEtBQUssRUFBRTtZQUNaLEtBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO1lBQ3hDLEtBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxLQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztZQUMvQyxLQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUM7WUFDN0IsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDO1NBQ2hDOztJQUNMLENBQUM7Ozs7SUFqQ0QsK0NBQU87OztJQUFQO1FBQ0ksT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLGNBQWMsQ0FBQyxLQUFLLENBQUM7SUFDOUMsQ0FBQzs7OztJQUVELHFEQUFhOzs7SUFBYjs7WUFDUSxhQUFhLEdBQUcsS0FBSztRQUV6QixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsRUFBRTtZQUN0RCxhQUFhLEdBQUcsbUJBQVUsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLEVBQUEsQ0FBQztTQUNoRTtRQUVELE9BQU8sYUFBYSxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFFRCw0REFBb0I7OztJQUFwQjs7WUFDUSxpQkFBaUIsR0FBRyxLQUFLO1FBRTdCLElBQUksSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLEVBQUU7WUFDaEUsaUJBQWlCLEdBQUcsbUJBQVUsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsRUFBQSxDQUFDO1NBQ3hFO1FBRUQsT0FBTyxpQkFBaUIsQ0FBQztJQUM3QixDQUFDO0lBWUwsb0NBQUM7QUFBRCxDQUFDLEFBekNELENBQW1ELGNBQWMsR0F5Q2hFOzs7O0lBdkNHLGdEQUFxQzs7SUFDckMsbURBQTJCOztJQUMzQixnREFBb0I7O0lBQ3BCLGdEQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuaW1wb3J0IHsgQ29udGFpbmVyQ29sdW1uTW9kZWwgfSBmcm9tICcuLy4uL2NvcmUvY29udGFpbmVyLWNvbHVtbi5tb2RlbCc7XG5pbXBvcnQgeyBDb250YWluZXJNb2RlbCB9IGZyb20gJy4vLi4vY29yZS9jb250YWluZXIubW9kZWwnO1xuaW1wb3J0IHsgRm9ybUZpZWxkVHlwZXMgfSBmcm9tICcuLy4uL2NvcmUvZm9ybS1maWVsZC10eXBlcyc7XG5pbXBvcnQgeyBGb3JtRmllbGRNb2RlbCB9IGZyb20gJy4vLi4vY29yZS9mb3JtLWZpZWxkLm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIENvbnRhaW5lcldpZGdldENvbXBvbmVudE1vZGVsIGV4dGVuZHMgQ29udGFpbmVyTW9kZWwge1xuXG4gICAgY29sdW1uczogQ29udGFpbmVyQ29sdW1uTW9kZWxbXSA9IFtdO1xuICAgIGlzRXhwYW5kZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgIHJvd3NwYW46IG51bWJlciA9IDE7XG4gICAgY29sc3BhbjogbnVtYmVyID0gMTtcblxuICAgIGlzR3JvdXAoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IEZvcm1GaWVsZFR5cGVzLkdST1VQO1xuICAgIH1cblxuICAgIGlzQ29sbGFwc2libGUoKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBhbGxvd0NvbGxhcHNlID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKHRoaXMuaXNHcm91cCgpICYmIHRoaXMuZmllbGQucGFyYW1zWydhbGxvd0NvbGxhcHNlJ10pIHtcbiAgICAgICAgICAgIGFsbG93Q29sbGFwc2UgPSA8Ym9vbGVhbj4gdGhpcy5maWVsZC5wYXJhbXNbJ2FsbG93Q29sbGFwc2UnXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhbGxvd0NvbGxhcHNlO1xuICAgIH1cblxuICAgIGlzQ29sbGFwc2VkQnlEZWZhdWx0KCk6IGJvb2xlYW4ge1xuICAgICAgICBsZXQgY29sbGFwc2VCeURlZmF1bHQgPSBmYWxzZTtcblxuICAgICAgICBpZiAodGhpcy5pc0NvbGxhcHNpYmxlKCkgJiYgdGhpcy5maWVsZC5wYXJhbXNbJ2NvbGxhcHNlQnlEZWZhdWx0J10pIHtcbiAgICAgICAgICAgIGNvbGxhcHNlQnlEZWZhdWx0ID0gPGJvb2xlYW4+IHRoaXMuZmllbGQucGFyYW1zWydjb2xsYXBzZUJ5RGVmYXVsdCddO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNvbGxhcHNlQnlEZWZhdWx0O1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKGZpZWxkOiBGb3JtRmllbGRNb2RlbCkge1xuICAgICAgICBzdXBlcihmaWVsZCk7XG5cbiAgICAgICAgaWYgKHRoaXMuZmllbGQpIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1ucyA9IHRoaXMuZmllbGQuY29sdW1ucyB8fCBbXTtcbiAgICAgICAgICAgIHRoaXMuaXNFeHBhbmRlZCA9ICF0aGlzLmlzQ29sbGFwc2VkQnlEZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLmNvbHNwYW4gPSBmaWVsZC5jb2xzcGFuO1xuICAgICAgICAgICAgdGhpcy5yb3dzcGFuID0gZmllbGQucm93c3BhbjtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==