/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FormOutcomeModel } from './widgets';
import { EventEmitter, Input, Output } from '@angular/core';
/**
 * @abstract
 */
var FormBaseComponent = /** @class */ (function () {
    function FormBaseComponent() {
        /**
         * Toggle rendering of the form title.
         */
        this.showTitle = true;
        /**
         * Toggle rendering of the `Complete` outcome button.
         */
        this.showCompleteButton = true;
        /**
         * If true then the `Complete` outcome button is shown but it will be disabled.
         */
        this.disableCompleteButton = false;
        /**
         * If true then the `Start Process` outcome button is shown but it will be disabled.
         */
        this.disableStartProcessButton = false;
        /**
         * Toggle rendering of the `Save` outcome button.
         */
        this.showSaveButton = true;
        /**
         * Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled.
         */
        this.readOnly = false;
        /**
         * Toggle rendering of the `Refresh` button.
         */
        this.showRefreshButton = true;
        /**
         * Toggle rendering of the validation icon next to the form title.
         */
        this.showValidationIcon = true;
        /**
         * Contains a list of form field validator instances.
         */
        this.fieldValidators = [];
        /**
         * Emitted when the supplied form values have a validation error.
         */
        this.formError = new EventEmitter();
        /**
         * Emitted when any outcome is executed. Default behaviour can be prevented
         * via `event.preventDefault()`.
         */
        this.executeOutcome = new EventEmitter();
        /**
         * Emitted when any error occurs.
         */
        this.error = new EventEmitter();
    }
    /**
     * @return {?}
     */
    FormBaseComponent.prototype.getParsedFormDefinition = /**
     * @return {?}
     */
    function () {
        return this;
    };
    /**
     * @return {?}
     */
    FormBaseComponent.prototype.hasForm = /**
     * @return {?}
     */
    function () {
        return this.form ? true : false;
    };
    /**
     * @return {?}
     */
    FormBaseComponent.prototype.isTitleEnabled = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var titleEnabled = false;
        if (this.showTitle && this.form) {
            titleEnabled = true;
        }
        return titleEnabled;
    };
    /**
     * @param {?} outcomeName
     * @return {?}
     */
    FormBaseComponent.prototype.getColorForOutcome = /**
     * @param {?} outcomeName
     * @return {?}
     */
    function (outcomeName) {
        return outcomeName === FormBaseComponent.COMPLETE_OUTCOME_NAME ? FormBaseComponent.COMPLETE_BUTTON_COLOR : '';
    };
    /**
     * @param {?} outcome
     * @return {?}
     */
    FormBaseComponent.prototype.isOutcomeButtonEnabled = /**
     * @param {?} outcome
     * @return {?}
     */
    function (outcome) {
        if (this.form.readOnly) {
            return false;
        }
        if (outcome) {
            // Make 'Save' button always available
            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {
                return true;
            }
            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {
                return this.disableCompleteButton ? false : this.form.isValid;
            }
            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {
                return this.disableStartProcessButton ? false : this.form.isValid;
            }
            return this.form.isValid;
        }
        return false;
    };
    /**
     * @param {?} outcome
     * @param {?} isFormReadOnly
     * @return {?}
     */
    FormBaseComponent.prototype.isOutcomeButtonVisible = /**
     * @param {?} outcome
     * @param {?} isFormReadOnly
     * @return {?}
     */
    function (outcome, isFormReadOnly) {
        if (outcome && outcome.name) {
            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {
                return this.showCompleteButton;
            }
            if (isFormReadOnly) {
                return outcome.isSelected;
            }
            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {
                return this.showSaveButton;
            }
            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {
                return false;
            }
            return true;
        }
        return false;
    };
    /**
     * Invoked when user clicks outcome button.
     * @param outcome Form outcome model
     */
    /**
     * Invoked when user clicks outcome button.
     * @param {?} outcome Form outcome model
     * @return {?}
     */
    FormBaseComponent.prototype.onOutcomeClicked = /**
     * Invoked when user clicks outcome button.
     * @param {?} outcome Form outcome model
     * @return {?}
     */
    function (outcome) {
        if (!this.readOnly && outcome && this.form) {
            if (!this.onExecuteOutcome(outcome)) {
                return false;
            }
            if (outcome.isSystem) {
                if (outcome.id === FormBaseComponent.SAVE_OUTCOME_ID) {
                    this.saveTaskForm();
                    return true;
                }
                if (outcome.id === FormBaseComponent.COMPLETE_OUTCOME_ID) {
                    this.completeTaskForm();
                    return true;
                }
                if (outcome.id === FormBaseComponent.START_PROCESS_OUTCOME_ID) {
                    this.completeTaskForm();
                    return true;
                }
                if (outcome.id === FormBaseComponent.CUSTOM_OUTCOME_ID) {
                    this.onTaskSaved(this.form);
                    this.storeFormAsMetadata();
                    return true;
                }
            }
            else {
                // Note: Activiti is using NAME field rather than ID for outcomes
                if (outcome.name) {
                    this.onTaskSaved(this.form);
                    this.completeTaskForm(outcome.name);
                    return true;
                }
            }
        }
        return false;
    };
    /**
     * @param {?} err
     * @return {?}
     */
    FormBaseComponent.prototype.handleError = /**
     * @param {?} err
     * @return {?}
     */
    function (err) {
        this.error.emit(err);
    };
    FormBaseComponent.SAVE_OUTCOME_ID = '$save';
    FormBaseComponent.COMPLETE_OUTCOME_ID = '$complete';
    FormBaseComponent.START_PROCESS_OUTCOME_ID = '$startProcess';
    FormBaseComponent.CUSTOM_OUTCOME_ID = '$custom';
    FormBaseComponent.COMPLETE_BUTTON_COLOR = 'primary';
    FormBaseComponent.COMPLETE_OUTCOME_NAME = 'COMPLETE';
    FormBaseComponent.propDecorators = {
        path: [{ type: Input }],
        nameNode: [{ type: Input }],
        showTitle: [{ type: Input }],
        showCompleteButton: [{ type: Input }],
        disableCompleteButton: [{ type: Input }],
        disableStartProcessButton: [{ type: Input }],
        showSaveButton: [{ type: Input }],
        readOnly: [{ type: Input }],
        showRefreshButton: [{ type: Input }],
        showValidationIcon: [{ type: Input }],
        fieldValidators: [{ type: Input }],
        formError: [{ type: Output }],
        executeOutcome: [{ type: Output }],
        error: [{ type: Output }]
    };
    return FormBaseComponent;
}());
export { FormBaseComponent };
if (false) {
    /** @type {?} */
    FormBaseComponent.SAVE_OUTCOME_ID;
    /** @type {?} */
    FormBaseComponent.COMPLETE_OUTCOME_ID;
    /** @type {?} */
    FormBaseComponent.START_PROCESS_OUTCOME_ID;
    /** @type {?} */
    FormBaseComponent.CUSTOM_OUTCOME_ID;
    /** @type {?} */
    FormBaseComponent.COMPLETE_BUTTON_COLOR;
    /** @type {?} */
    FormBaseComponent.COMPLETE_OUTCOME_NAME;
    /**
     * Path of the folder where the metadata will be stored.
     * @type {?}
     */
    FormBaseComponent.prototype.path;
    /**
     * Name to assign to the new node where the metadata are stored.
     * @type {?}
     */
    FormBaseComponent.prototype.nameNode;
    /**
     * Toggle rendering of the form title.
     * @type {?}
     */
    FormBaseComponent.prototype.showTitle;
    /**
     * Toggle rendering of the `Complete` outcome button.
     * @type {?}
     */
    FormBaseComponent.prototype.showCompleteButton;
    /**
     * If true then the `Complete` outcome button is shown but it will be disabled.
     * @type {?}
     */
    FormBaseComponent.prototype.disableCompleteButton;
    /**
     * If true then the `Start Process` outcome button is shown but it will be disabled.
     * @type {?}
     */
    FormBaseComponent.prototype.disableStartProcessButton;
    /**
     * Toggle rendering of the `Save` outcome button.
     * @type {?}
     */
    FormBaseComponent.prototype.showSaveButton;
    /**
     * Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled.
     * @type {?}
     */
    FormBaseComponent.prototype.readOnly;
    /**
     * Toggle rendering of the `Refresh` button.
     * @type {?}
     */
    FormBaseComponent.prototype.showRefreshButton;
    /**
     * Toggle rendering of the validation icon next to the form title.
     * @type {?}
     */
    FormBaseComponent.prototype.showValidationIcon;
    /**
     * Contains a list of form field validator instances.
     * @type {?}
     */
    FormBaseComponent.prototype.fieldValidators;
    /**
     * Emitted when the supplied form values have a validation error.
     * @type {?}
     */
    FormBaseComponent.prototype.formError;
    /**
     * Emitted when any outcome is executed. Default behaviour can be prevented
     * via `event.preventDefault()`.
     * @type {?}
     */
    FormBaseComponent.prototype.executeOutcome;
    /**
     * Emitted when any error occurs.
     * @type {?}
     */
    FormBaseComponent.prototype.error;
    /** @type {?} */
    FormBaseComponent.prototype.form;
    /**
     * @abstract
     * @return {?}
     */
    FormBaseComponent.prototype.onRefreshClicked = function () { };
    /**
     * @abstract
     * @return {?}
     */
    FormBaseComponent.prototype.saveTaskForm = function () { };
    /**
     * @abstract
     * @param {?=} outcome
     * @return {?}
     */
    FormBaseComponent.prototype.completeTaskForm = function (outcome) { };
    /**
     * @abstract
     * @protected
     * @param {?} form
     * @return {?}
     */
    FormBaseComponent.prototype.onTaskSaved = function (form) { };
    /**
     * @abstract
     * @protected
     * @return {?}
     */
    FormBaseComponent.prototype.storeFormAsMetadata = function () { };
    /**
     * @abstract
     * @protected
     * @param {?} outcome
     * @return {?}
     */
    FormBaseComponent.prototype.onExecuteOutcome = function (outcome) { };
}
//# sourceMappingURL=data:application/json;base64,