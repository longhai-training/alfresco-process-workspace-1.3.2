/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @record
 */
export function FileUploadProgress() { }
if (false) {
    /** @type {?} */
    FileUploadProgress.prototype.loaded;
    /** @type {?} */
    FileUploadProgress.prototype.total;
    /** @type {?} */
    FileUploadProgress.prototype.percent;
}
var FileUploadOptions = /** @class */ (function () {
    function FileUploadOptions() {
    }
    return FileUploadOptions;
}());
export { FileUploadOptions };
if (false) {
    /** @type {?} */
    FileUploadOptions.prototype.comment;
    /** @type {?} */
    FileUploadOptions.prototype.newVersion;
    /** @type {?} */
    FileUploadOptions.prototype.majorVersion;
    /** @type {?} */
    FileUploadOptions.prototype.parentId;
    /** @type {?} */
    FileUploadOptions.prototype.path;
    /** @type {?} */
    FileUploadOptions.prototype.nodeType;
    /** @type {?} */
    FileUploadOptions.prototype.properties;
    /** @type {?} */
    FileUploadOptions.prototype.association;
    /** @type {?} */
    FileUploadOptions.prototype.secondaryChildren;
    /** @type {?} */
    FileUploadOptions.prototype.targets;
}
/** @enum {number} */
var FileUploadStatus = {
    Pending: 0,
    Complete: 1,
    Starting: 2,
    Progress: 3,
    Cancelled: 4,
    Aborted: 5,
    Error: 6,
    Deleted: 7,
};
export { FileUploadStatus };
FileUploadStatus[FileUploadStatus.Pending] = 'Pending';
FileUploadStatus[FileUploadStatus.Complete] = 'Complete';
FileUploadStatus[FileUploadStatus.Starting] = 'Starting';
FileUploadStatus[FileUploadStatus.Progress] = 'Progress';
FileUploadStatus[FileUploadStatus.Cancelled] = 'Cancelled';
FileUploadStatus[FileUploadStatus.Aborted] = 'Aborted';
FileUploadStatus[FileUploadStatus.Error] = 'Error';
FileUploadStatus[FileUploadStatus.Deleted] = 'Deleted';
var FileModel = /** @class */ (function () {
    function FileModel(file, options, id) {
        this.status = FileUploadStatus.Pending;
        this.file = file;
        this.id = id;
        this.name = file.name;
        this.size = file.size;
        this.data = null;
        this.errorCode = null;
        this.progress = {
            loaded: 0,
            total: 0,
            percent: 0
        };
        this.options = Object.assign({}, {
            newVersion: false
        }, options);
    }
    Object.defineProperty(FileModel.prototype, "extension", {
        get: /**
         * @return {?}
         */
        function () {
            return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);
        },
        enumerable: true,
        configurable: true
    });
    return FileModel;
}());
export { FileModel };
if (false) {
    /** @type {?} */
    FileModel.prototype.name;
    /** @type {?} */
    FileModel.prototype.size;
    /** @type {?} */
    FileModel.prototype.file;
    /** @type {?} */
    FileModel.prototype.id;
    /** @type {?} */
    FileModel.prototype.status;
    /** @type {?} */
    FileModel.prototype.errorCode;
    /** @type {?} */
    FileModel.prototype.progress;
    /** @type {?} */
    FileModel.prototype.options;
    /** @type {?} */
    FileModel.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbIm1vZGVscy9maWxlLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLHdDQUlDOzs7SUFIRyxvQ0FBZTs7SUFDZixtQ0FBYzs7SUFDZCxxQ0FBZ0I7O0FBR3BCO0lBQUE7SUFXQSxDQUFDO0lBQUQsd0JBQUM7QUFBRCxDQUFDLEFBWEQsSUFXQzs7OztJQVZHLG9DQUFpQjs7SUFDakIsdUNBQXFCOztJQUNyQix5Q0FBdUI7O0lBQ3ZCLHFDQUFrQjs7SUFDbEIsaUNBQWM7O0lBQ2QscUNBQWtCOztJQUNsQix1Q0FBaUI7O0lBQ2pCLHdDQUFrQjs7SUFDbEIsOENBQXFDOztJQUNyQyxvQ0FBNEI7Ozs7SUFJNUIsVUFBVztJQUNYLFdBQVk7SUFDWixXQUFZO0lBQ1osV0FBWTtJQUNaLFlBQWE7SUFDYixVQUFXO0lBQ1gsUUFBUztJQUNULFVBQVc7Ozs7Ozs7Ozs7O0FBR2Y7SUFZSSxtQkFBWSxJQUFVLEVBQUUsT0FBMkIsRUFBRSxFQUFXO1FBTmhFLFdBQU0sR0FBcUIsZ0JBQWdCLENBQUMsT0FBTyxDQUFDO1FBT2hELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUV0QixJQUFJLENBQUMsUUFBUSxHQUFHO1lBQ1osTUFBTSxFQUFFLENBQUM7WUFDVCxLQUFLLEVBQUUsQ0FBQztZQUNSLE9BQU8sRUFBRSxDQUFDO1NBQ2IsQ0FBQztRQUVGLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUU7WUFDN0IsVUFBVSxFQUFFLEtBQUs7U0FDcEIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUNoQixDQUFDO0lBRUQsc0JBQUksZ0NBQVM7Ozs7UUFBYjtZQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3RGLENBQUM7OztPQUFBO0lBQ0wsZ0JBQUM7QUFBRCxDQUFDLEFBbENELElBa0NDOzs7O0lBakNHLHlCQUFzQjs7SUFDdEIseUJBQXNCOztJQUN0Qix5QkFBb0I7O0lBRXBCLHVCQUFXOztJQUNYLDJCQUFvRDs7SUFDcEQsOEJBQWtCOztJQUNsQiw2QkFBNkI7O0lBQzdCLDRCQUEyQjs7SUFDM0IseUJBQVUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBBc3NvY0NoaWxkQm9keSwgQXNzb2NpYXRpb25Cb2R5IH0gZnJvbSAnQGFsZnJlc2NvL2pzLWFwaSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRmlsZVVwbG9hZFByb2dyZXNzIHtcbiAgICBsb2FkZWQ6IG51bWJlcjtcbiAgICB0b3RhbDogbnVtYmVyO1xuICAgIHBlcmNlbnQ6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWRPcHRpb25zIHtcbiAgICBjb21tZW50Pzogc3RyaW5nO1xuICAgIG5ld1ZlcnNpb24/OiBib29sZWFuO1xuICAgIG1ham9yVmVyc2lvbj86IGJvb2xlYW47XG4gICAgcGFyZW50SWQ/OiBzdHJpbmc7XG4gICAgcGF0aD86IHN0cmluZztcbiAgICBub2RlVHlwZT86IHN0cmluZztcbiAgICBwcm9wZXJ0aWVzPzogYW55O1xuICAgIGFzc29jaWF0aW9uPzogYW55O1xuICAgIHNlY29uZGFyeUNoaWxkcmVuPzogQXNzb2NDaGlsZEJvZHlbXTtcbiAgICB0YXJnZXRzPzogQXNzb2NpYXRpb25Cb2R5W107XG59XG5cbmV4cG9ydCBlbnVtIEZpbGVVcGxvYWRTdGF0dXMge1xuICAgIFBlbmRpbmcgPSAwLFxuICAgIENvbXBsZXRlID0gMSxcbiAgICBTdGFydGluZyA9IDIsXG4gICAgUHJvZ3Jlc3MgPSAzLFxuICAgIENhbmNlbGxlZCA9IDQsXG4gICAgQWJvcnRlZCA9IDUsXG4gICAgRXJyb3IgPSA2LFxuICAgIERlbGV0ZWQgPSA3XG59XG5cbmV4cG9ydCBjbGFzcyBGaWxlTW9kZWwge1xuICAgIHJlYWRvbmx5IG5hbWU6IHN0cmluZztcbiAgICByZWFkb25seSBzaXplOiBudW1iZXI7XG4gICAgcmVhZG9ubHkgZmlsZTogRmlsZTtcblxuICAgIGlkOiBzdHJpbmc7XG4gICAgc3RhdHVzOiBGaWxlVXBsb2FkU3RhdHVzID0gRmlsZVVwbG9hZFN0YXR1cy5QZW5kaW5nO1xuICAgIGVycm9yQ29kZTogbnVtYmVyO1xuICAgIHByb2dyZXNzOiBGaWxlVXBsb2FkUHJvZ3Jlc3M7XG4gICAgb3B0aW9uczogRmlsZVVwbG9hZE9wdGlvbnM7XG4gICAgZGF0YTogYW55O1xuXG4gICAgY29uc3RydWN0b3IoZmlsZTogRmlsZSwgb3B0aW9ucz86IEZpbGVVcGxvYWRPcHRpb25zLCBpZD86IHN0cmluZykge1xuICAgICAgICB0aGlzLmZpbGUgPSBmaWxlO1xuICAgICAgICB0aGlzLmlkID0gaWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IGZpbGUubmFtZTtcbiAgICAgICAgdGhpcy5zaXplID0gZmlsZS5zaXplO1xuICAgICAgICB0aGlzLmRhdGEgPSBudWxsO1xuICAgICAgICB0aGlzLmVycm9yQ29kZSA9IG51bGw7XG5cbiAgICAgICAgdGhpcy5wcm9ncmVzcyA9IHtcbiAgICAgICAgICAgIGxvYWRlZDogMCxcbiAgICAgICAgICAgIHRvdGFsOiAwLFxuICAgICAgICAgICAgcGVyY2VudDogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIHtcbiAgICAgICAgICAgIG5ld1ZlcnNpb246IGZhbHNlXG4gICAgICAgIH0sIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIGdldCBleHRlbnNpb24oKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubmFtZS5zbGljZSgoTWF0aC5tYXgoMCwgdGhpcy5uYW1lLmxhc3RJbmRleE9mKCcuJykpIHx8IEluZmluaXR5KSArIDEpO1xuICAgIH1cbn1cbiJdfQ==