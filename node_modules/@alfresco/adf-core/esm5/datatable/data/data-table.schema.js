/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ContentChild, Input } from '@angular/core';
import { DataColumnListComponent } from '../../data-column/data-column-list.component';
import { ObjectDataColumn } from './object-datacolumn.model';
/**
 * @abstract
 */
var DataTableSchema = /** @class */ (function () {
    function DataTableSchema(appConfigService, presetKey, presetsModel) {
        this.appConfigService = appConfigService;
        this.presetKey = presetKey;
        this.presetsModel = presetsModel;
        this.layoutPresets = {};
    }
    /**
     * @return {?}
     */
    DataTableSchema.prototype.createDatatableSchema = /**
     * @return {?}
     */
    function () {
        this.loadLayoutPresets();
        if (!this.columns || this.columns.length === 0) {
            this.columns = this.mergeJsonAndHtmlSchema();
        }
    };
    /**
     * @return {?}
     */
    DataTableSchema.prototype.loadLayoutPresets = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var externalSettings = this.appConfigService.get(this.presetKey, null);
        if (externalSettings) {
            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);
        }
        else {
            this.layoutPresets = this.presetsModel;
        }
    };
    /**
     * @return {?}
     */
    DataTableSchema.prototype.mergeJsonAndHtmlSchema = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));
        if (customSchemaColumns.length === 0) {
            customSchemaColumns = this.getDefaultLayoutPreset();
        }
        return customSchemaColumns;
    };
    /**
     * @param {?} columnList
     * @return {?}
     */
    DataTableSchema.prototype.getSchemaFromHtml = /**
     * @param {?} columnList
     * @return {?}
     */
    function (columnList) {
        /** @type {?} */
        var schema = [];
        if (columnList && columnList.columns && columnList.columns.length > 0) {
            schema = columnList.columns.map((/**
             * @param {?} c
             * @return {?}
             */
            function (c) { return (/** @type {?} */ (c)); }));
        }
        return schema;
    };
    /**
     * @param {?} presetColumn
     * @return {?}
     */
    DataTableSchema.prototype.getSchemaFromConfig = /**
     * @param {?} presetColumn
     * @return {?}
     */
    function (presetColumn) {
        return presetColumn ? (this.layoutPresets[presetColumn]).map((/**
         * @param {?} col
         * @return {?}
         */
        function (col) { return new ObjectDataColumn(col); })) : [];
    };
    /**
     * @private
     * @return {?}
     */
    DataTableSchema.prototype.getDefaultLayoutPreset = /**
     * @private
     * @return {?}
     */
    function () {
        return (this.layoutPresets['default']).map((/**
         * @param {?} col
         * @return {?}
         */
        function (col) { return new ObjectDataColumn(col); }));
    };
    DataTableSchema.propDecorators = {
        columnList: [{ type: ContentChild, args: [DataColumnListComponent,] }],
        presetColumn: [{ type: Input }]
    };
    return DataTableSchema;
}());
export { DataTableSchema };
if (false) {
    /** @type {?} */
    DataTableSchema.prototype.columnList;
    /**
     * Custom preset column schema in JSON format.
     * @type {?}
     */
    DataTableSchema.prototype.presetColumn;
    /** @type {?} */
    DataTableSchema.prototype.columns;
    /**
     * @type {?}
     * @private
     */
    DataTableSchema.prototype.layoutPresets;
    /**
     * @type {?}
     * @private
     */
    DataTableSchema.prototype.appConfigService;
    /**
     * @type {?}
     * @protected
     */
    DataTableSchema.prototype.presetKey;
    /**
     * @type {?}
     * @protected
     */
    DataTableSchema.prototype.presetsModel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS10YWJsZS5zY2hlbWEuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJkYXRhdGFibGUvZGF0YS9kYXRhLXRhYmxlLnNjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVwRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUV2RixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7OztBQUU3RDtJQVlJLHlCQUFvQixnQkFBa0MsRUFDaEMsU0FBaUIsRUFDakIsWUFBaUI7UUFGbkIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNoQyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQ2pCLGlCQUFZLEdBQVosWUFBWSxDQUFLO1FBSi9CLGtCQUFhLEdBQUcsRUFBRSxDQUFDO0lBSWdCLENBQUM7Ozs7SUFFckMsK0NBQXFCOzs7SUFBNUI7UUFDSSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDNUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztTQUNoRDtJQUNMLENBQUM7Ozs7SUFFTSwyQ0FBaUI7OztJQUF4Qjs7WUFDVSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDO1FBQ3hFLElBQUksZ0JBQWdCLEVBQUU7WUFDbEIsSUFBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLGdCQUFnQixDQUFDLENBQUM7U0FDL0U7YUFBTTtZQUNILElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztTQUMxQztJQUNMLENBQUM7Ozs7SUFFTSxnREFBc0I7OztJQUE3Qjs7WUFDUSxtQkFBbUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3JILElBQUksbUJBQW1CLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtZQUNsQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztTQUN2RDtRQUNELE9BQU8sbUJBQW1CLENBQUM7SUFDL0IsQ0FBQzs7Ozs7SUFFTSwyQ0FBaUI7Ozs7SUFBeEIsVUFBeUIsVUFBbUM7O1lBQ3BELE1BQU0sR0FBRyxFQUFFO1FBQ2YsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLE9BQU8sSUFBSSxVQUFVLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDbkUsTUFBTSxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUMsR0FBRzs7OztZQUFDLFVBQUMsQ0FBQyxXQUFLLG1CQUFhLENBQUMsRUFBQSxHQUFBLEVBQUMsQ0FBQztTQUMxRDtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7Ozs7O0lBRUssNkNBQW1COzs7O0lBQTFCLFVBQTJCLFlBQW9CO1FBQzFDLE9BQU8sWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHOzs7O1FBQUMsVUFBQyxHQUFHLElBQUssT0FBQSxJQUFJLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxFQUF6QixDQUF5QixFQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUMxRyxDQUFDOzs7OztJQUVPLGdEQUFzQjs7OztJQUE5QjtRQUNJLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRzs7OztRQUFDLFVBQUMsR0FBRyxJQUFLLE9BQUEsSUFBSSxnQkFBZ0IsQ0FBQyxHQUFHLENBQUMsRUFBekIsQ0FBeUIsRUFBQyxDQUFDO0lBQ25GLENBQUM7OzZCQXBEQSxZQUFZLFNBQUMsdUJBQXVCOytCQUdwQyxLQUFLOztJQWtEVixzQkFBQztDQUFBLEFBdkRELElBdURDO1NBdkRxQixlQUFlOzs7SUFFakMscUNBQTJFOzs7OztJQUczRSx1Q0FDcUI7O0lBRXJCLGtDQUFhOzs7OztJQUViLHdDQUEyQjs7Ozs7SUFFZiwyQ0FBMEM7Ozs7O0lBQzFDLG9DQUEyQjs7Ozs7SUFDM0IsdUNBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29udGVudENoaWxkLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQXBwQ29uZmlnU2VydmljZSB9IGZyb20gJy4uLy4uL2FwcC1jb25maWcvYXBwLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IERhdGFDb2x1bW5MaXN0Q29tcG9uZW50IH0gZnJvbSAnLi4vLi4vZGF0YS1jb2x1bW4vZGF0YS1jb2x1bW4tbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0YUNvbHVtbiB9IGZyb20gJy4vZGF0YS1jb2x1bW4ubW9kZWwnO1xuaW1wb3J0IHsgT2JqZWN0RGF0YUNvbHVtbiB9IGZyb20gJy4vb2JqZWN0LWRhdGFjb2x1bW4ubW9kZWwnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgRGF0YVRhYmxlU2NoZW1hIHtcblxuICAgIEBDb250ZW50Q2hpbGQoRGF0YUNvbHVtbkxpc3RDb21wb25lbnQpIGNvbHVtbkxpc3Q6IERhdGFDb2x1bW5MaXN0Q29tcG9uZW50O1xuXG4gICAgLyoqIEN1c3RvbSBwcmVzZXQgY29sdW1uIHNjaGVtYSBpbiBKU09OIGZvcm1hdC4gKi9cbiAgICBASW5wdXQoKVxuICAgIHByZXNldENvbHVtbjogc3RyaW5nO1xuXG4gICAgY29sdW1uczogYW55O1xuXG4gICAgcHJpdmF0ZSBsYXlvdXRQcmVzZXRzID0ge307XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcENvbmZpZ1NlcnZpY2U6IEFwcENvbmZpZ1NlcnZpY2UsXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkIHByZXNldEtleTogc3RyaW5nLFxuICAgICAgICAgICAgICAgIHByb3RlY3RlZCBwcmVzZXRzTW9kZWw6IGFueSkgeyB9XG5cbiAgICBwdWJsaWMgY3JlYXRlRGF0YXRhYmxlU2NoZW1hKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmxvYWRMYXlvdXRQcmVzZXRzKCk7XG4gICAgICAgIGlmICghdGhpcy5jb2x1bW5zIHx8IHRoaXMuY29sdW1ucy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuY29sdW1ucyA9IHRoaXMubWVyZ2VKc29uQW5kSHRtbFNjaGVtYSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGxvYWRMYXlvdXRQcmVzZXRzKCk6IHZvaWQge1xuICAgICAgICBjb25zdCBleHRlcm5hbFNldHRpbmdzID0gdGhpcy5hcHBDb25maWdTZXJ2aWNlLmdldCh0aGlzLnByZXNldEtleSwgbnVsbCk7XG4gICAgICAgIGlmIChleHRlcm5hbFNldHRpbmdzKSB7XG4gICAgICAgICAgICB0aGlzLmxheW91dFByZXNldHMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnByZXNldHNNb2RlbCwgZXh0ZXJuYWxTZXR0aW5ncyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxheW91dFByZXNldHMgPSB0aGlzLnByZXNldHNNb2RlbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBtZXJnZUpzb25BbmRIdG1sU2NoZW1hKCk6IGFueSB7XG4gICAgICAgIGxldCBjdXN0b21TY2hlbWFDb2x1bW5zID0gdGhpcy5nZXRTY2hlbWFGcm9tQ29uZmlnKHRoaXMucHJlc2V0Q29sdW1uKS5jb25jYXQodGhpcy5nZXRTY2hlbWFGcm9tSHRtbCh0aGlzLmNvbHVtbkxpc3QpKTtcbiAgICAgICAgaWYgKGN1c3RvbVNjaGVtYUNvbHVtbnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBjdXN0b21TY2hlbWFDb2x1bW5zID0gdGhpcy5nZXREZWZhdWx0TGF5b3V0UHJlc2V0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGN1c3RvbVNjaGVtYUNvbHVtbnM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldFNjaGVtYUZyb21IdG1sKGNvbHVtbkxpc3Q6IERhdGFDb2x1bW5MaXN0Q29tcG9uZW50KTogYW55IHtcbiAgICAgICAgbGV0IHNjaGVtYSA9IFtdO1xuICAgICAgICBpZiAoY29sdW1uTGlzdCAmJiBjb2x1bW5MaXN0LmNvbHVtbnMgJiYgY29sdW1uTGlzdC5jb2x1bW5zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNjaGVtYSA9IGNvbHVtbkxpc3QuY29sdW1ucy5tYXAoKGMpID0+IDxEYXRhQ29sdW1uPiBjKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2NoZW1hO1xuICAgIH1cblxuICAgcHVibGljIGdldFNjaGVtYUZyb21Db25maWcocHJlc2V0Q29sdW1uOiBzdHJpbmcpOiBEYXRhQ29sdW1uW10ge1xuICAgICAgICByZXR1cm4gcHJlc2V0Q29sdW1uID8gKHRoaXMubGF5b3V0UHJlc2V0c1twcmVzZXRDb2x1bW5dKS5tYXAoKGNvbCkgPT4gbmV3IE9iamVjdERhdGFDb2x1bW4oY29sKSkgOiBbXTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGdldERlZmF1bHRMYXlvdXRQcmVzZXQoKTogRGF0YUNvbHVtbltdIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmxheW91dFByZXNldHNbJ2RlZmF1bHQnXSkubWFwKChjb2wpID0+IG5ldyBPYmplY3REYXRhQ29sdW1uKGNvbCkpO1xuICAgIH1cbn1cbiJdfQ==