/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material';
import { LoginDialogPanelComponent } from './login-dialog-panel.component';
var LoginDialogComponent = /** @class */ (function () {
    function LoginDialogComponent(data) {
        this.data = data;
        this.buttonActionName = '';
        this.buttonActionName = data.actionName ? "LOGIN.DIALOG." + data.actionName.toUpperCase() : 'LOGIN.DIALOG.CHOOSE';
    }
    /**
     * @return {?}
     */
    LoginDialogComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.data.logged.complete();
    };
    /**
     * @return {?}
     */
    LoginDialogComponent.prototype.submitForm = /**
     * @return {?}
     */
    function () {
        this.loginPanel.submitForm();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    LoginDialogComponent.prototype.onLoginSuccess = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.data.logged.next(event);
        this.close();
    };
    /**
     * @return {?}
     */
    LoginDialogComponent.prototype.isFormValid = /**
     * @return {?}
     */
    function () {
        return this.loginPanel ? this.loginPanel.isValid() : false;
    };
    LoginDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-login-dialog',
                    template: "<header\n    mat-dialog-title\n    data-automation-id=\"login-dialog-title\">{{data?.title}}\n</header>\n\n<mat-dialog-content class=\"adf-login-dialog-content\">\n    <adf-login-dialog-panel #adfLoginPanel\n                            (success)=\"onLoginSuccess($event)\">\n    </adf-login-dialog-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"login-dialog-actions-cancel\">{{ 'LOGIN.DIALOG.CANCEL' | translate }}\n    </button>\n\n    <button mat-button\n        class=\"choose-action\"\n        data-automation-id=\"login-dialog-actions-perform\"\n        [disabled]=\"!isFormValid()\"\n        (click)=\"submitForm()\">{{ buttonActionName | translate}}\n    </button>\n</mat-dialog-actions>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    LoginDialogComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    LoginDialogComponent.propDecorators = {
        loginPanel: [{ type: ViewChild, args: ['adfLoginPanel',] }]
    };
    return LoginDialogComponent;
}());
export { LoginDialogComponent };
if (false) {
    /** @type {?} */
    LoginDialogComponent.prototype.loginPanel;
    /** @type {?} */
    LoginDialogComponent.prototype.buttonActionName;
    /** @type {?} */
    LoginDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4tZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImxvZ2luL2NvbXBvbmVudHMvbG9naW4tZGlhbG9nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDaEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRXBELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFO0lBYUksOEJBQTRDLElBQThCO1FBQTlCLFNBQUksR0FBSixJQUFJLENBQTBCO1FBRjFFLHFCQUFnQixHQUFHLEVBQUUsQ0FBQztRQUdsQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsa0JBQWdCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFJLENBQUMsQ0FBQyxDQUFDLHFCQUFxQixDQUFDO0lBQ3RILENBQUM7Ozs7SUFFRCxvQ0FBSzs7O0lBQUw7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQseUNBQVU7OztJQUFWO1FBQ0ksSUFBSSxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzs7OztJQUVELDZDQUFjOzs7O0lBQWQsVUFBZSxLQUFVO1FBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7OztJQUVELDBDQUFXOzs7SUFBWDtRQUNJLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQy9ELENBQUM7O2dCQWhDSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIscXpCQUE0QztvQkFFNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O2lCQUN4Qzs7OztnREFRZ0IsTUFBTSxTQUFDLGVBQWU7Ozs2QkFMbEMsU0FBUyxTQUFDLGVBQWU7O0lBeUI5QiwyQkFBQztDQUFBLEFBakNELElBaUNDO1NBM0JZLG9CQUFvQjs7O0lBRTdCLDBDQUNzQzs7SUFFdEMsZ0RBQXNCOztJQUVWLG9DQUE4RCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBWaWV3RW5jYXBzdWxhdGlvbiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNQVRfRElBTE9HX0RBVEEgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbCc7XG5pbXBvcnQgeyBMb2dpbkRpYWxvZ0NvbXBvbmVudERhdGEgfSBmcm9tICcuL2xvZ2luLWRpYWxvZy1jb21wb25lbnQtZGF0YS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTG9naW5EaWFsb2dQYW5lbENvbXBvbmVudCB9IGZyb20gJy4vbG9naW4tZGlhbG9nLXBhbmVsLmNvbXBvbmVudCc7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1sb2dpbi1kaWFsb2cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9sb2dpbi1kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2xvZ2luLWRpYWxvZy5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgTG9naW5EaWFsb2dDb21wb25lbnQge1xuXG4gICAgQFZpZXdDaGlsZCgnYWRmTG9naW5QYW5lbCcpXG4gICAgbG9naW5QYW5lbDogTG9naW5EaWFsb2dQYW5lbENvbXBvbmVudDtcblxuICAgIGJ1dHRvbkFjdGlvbk5hbWUgPSAnJztcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogTG9naW5EaWFsb2dDb21wb25lbnREYXRhKSB7XG4gICAgICAgIHRoaXMuYnV0dG9uQWN0aW9uTmFtZSA9IGRhdGEuYWN0aW9uTmFtZSA/IGBMT0dJTi5ESUFMT0cuJHtkYXRhLmFjdGlvbk5hbWUudG9VcHBlckNhc2UoKX1gIDogJ0xPR0lOLkRJQUxPRy5DSE9PU0UnO1xuICAgIH1cblxuICAgIGNsb3NlKCkge1xuICAgICAgICB0aGlzLmRhdGEubG9nZ2VkLmNvbXBsZXRlKCk7XG4gICAgfVxuXG4gICAgc3VibWl0Rm9ybSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5sb2dpblBhbmVsLnN1Ym1pdEZvcm0oKTtcbiAgICB9XG5cbiAgICBvbkxvZ2luU3VjY2VzcyhldmVudDogYW55KSB7XG4gICAgICAgIHRoaXMuZGF0YS5sb2dnZWQubmV4dChldmVudCk7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG5cbiAgICBpc0Zvcm1WYWxpZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubG9naW5QYW5lbCA/IHRoaXMubG9naW5QYW5lbC5pc1ZhbGlkKCkgOiBmYWxzZTtcbiAgICB9XG59XG4iXX0=