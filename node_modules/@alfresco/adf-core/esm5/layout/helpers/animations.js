/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { trigger, transition, animate, style, state } from '@angular/animations';
/** @type {?} */
export var sidenavAnimation = trigger('sidenavAnimation', [
    state('expanded', style({ width: '{{ width }}px' }), { params: { width: 0 } }),
    state('compact', style({ width: '{{ width }}px' }), { params: { width: 0 } }),
    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))
]);
/** @type {?} */
export var contentAnimationLeft = trigger('contentAnimationLeft', [
    state('expanded', style({ 'margin-left': '{{ margin }}px' }), { params: { margin: 0 } }),
    state('compact', style({ 'margin-left': '{{ margin }}px' }), { params: { margin: 0 } }),
    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))
]);
/** @type {?} */
export var contentAnimationRight = trigger('contentAnimationRight', [
    state('expanded', style({ 'margin-right': '{{ margin }}px' }), { params: { margin: 0 } }),
    state('compact', style({ 'margin-right': '{{ margin }}px' }), { params: { margin: 0 } }),
    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImxheW91dC9oZWxwZXJzL2FuaW1hdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQTRCLE1BQU0scUJBQXFCLENBQUM7O0FBRTNHLE1BQU0sS0FBTyxnQkFBZ0IsR0FBNkIsT0FBTyxDQUFDLGtCQUFrQixFQUFFO0lBQ2xGLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLEVBQUUsS0FBSyxFQUFFLGVBQWUsRUFBRSxDQUFDLEVBQUUsRUFBRSxNQUFNLEVBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUMvRSxLQUFLLENBQUMsU0FBUyxFQUFHLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQUUsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFHLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDL0UsVUFBVSxDQUFDLHNCQUFzQixFQUFFLE9BQU8sQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO0NBQ3ZGLENBQUM7O0FBRUYsTUFBTSxLQUFPLG9CQUFvQixHQUE2QixPQUFPLENBQUMsc0JBQXNCLEVBQUU7SUFDMUYsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsRUFBRSxhQUFhLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDekYsS0FBSyxDQUFDLFNBQVMsRUFBRyxLQUFLLENBQUMsRUFBQyxhQUFhLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDeEYsVUFBVSxDQUFDLHNCQUFzQixFQUFFLE9BQU8sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO0NBQ3hGLENBQUM7O0FBRUYsTUFBTSxLQUFPLHFCQUFxQixHQUE2QixPQUFPLENBQUMsdUJBQXVCLEVBQUU7SUFDNUYsS0FBSyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDMUYsS0FBSyxDQUFDLFNBQVMsRUFBRyxLQUFLLENBQUMsRUFBQyxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFHLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7SUFDekYsVUFBVSxDQUFDLHNCQUFzQixFQUFFLE9BQU8sQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO0NBQ3hGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyB0cmlnZ2VyLCB0cmFuc2l0aW9uLCBhbmltYXRlLCBzdHlsZSwgc3RhdGUsIEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YSB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG5leHBvcnQgY29uc3Qgc2lkZW5hdkFuaW1hdGlvbjogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhID0gdHJpZ2dlcignc2lkZW5hdkFuaW1hdGlvbicsIFtcbiAgICBzdGF0ZSgnZXhwYW5kZWQnLCBzdHlsZSh7IHdpZHRoOiAne3sgd2lkdGggfX1weCcgfSksIHsgcGFyYW1zIDogeyB3aWR0aDogMCB9IH0pLFxuICAgIHN0YXRlKCdjb21wYWN0JywgIHN0eWxlKHsgd2lkdGg6ICd7eyB3aWR0aCB9fXB4JyB9KSwgeyBwYXJhbXMgOiB7IHdpZHRoOiAwIH0gfSksXG4gICAgdHJhbnNpdGlvbignY29tcGFjdCA8PT4gZXhwYW5kZWQnLCBhbmltYXRlKCcwLjRzIGN1YmljLWJlemllcigwLjI1LCAwLjgsIDAuMjUsIDEpJykpXG5dKTtcblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRBbmltYXRpb25MZWZ0OiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCdjb250ZW50QW5pbWF0aW9uTGVmdCcsIFtcbiAgICBzdGF0ZSgnZXhwYW5kZWQnLCBzdHlsZSh7ICdtYXJnaW4tbGVmdCc6ICd7eyBtYXJnaW4gfX1weCcgfSksIHsgcGFyYW1zIDogeyBtYXJnaW46IDAgfSB9KSxcbiAgICBzdGF0ZSgnY29tcGFjdCcsICBzdHlsZSh7J21hcmdpbi1sZWZ0JzogJ3t7IG1hcmdpbiB9fXB4JyB9KSwgeyBwYXJhbXMgOiB7IG1hcmdpbjogMCB9IH0pLFxuICAgIHRyYW5zaXRpb24oJ2V4cGFuZGVkIDw9PiBjb21wYWN0JywgYW5pbWF0ZSgnNDAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSknKSlcbl0pO1xuXG5leHBvcnQgY29uc3QgY29udGVudEFuaW1hdGlvblJpZ2h0OiBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEgPSB0cmlnZ2VyKCdjb250ZW50QW5pbWF0aW9uUmlnaHQnLCBbXG4gICAgc3RhdGUoJ2V4cGFuZGVkJywgc3R5bGUoeyAnbWFyZ2luLXJpZ2h0JzogJ3t7IG1hcmdpbiB9fXB4JyB9KSwgeyBwYXJhbXMgOiB7IG1hcmdpbjogMCB9IH0pLFxuICAgIHN0YXRlKCdjb21wYWN0JywgIHN0eWxlKHsnbWFyZ2luLXJpZ2h0JzogJ3t7IG1hcmdpbiB9fXB4JyB9KSwgeyBwYXJhbXMgOiB7IG1hcmdpbjogMCB9IH0pLFxuICAgIHRyYW5zaXRpb24oJ2V4cGFuZGVkIDw9PiBjb21wYWN0JywgYW5pbWF0ZSgnNDAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSknKSlcbl0pO1xuIl19