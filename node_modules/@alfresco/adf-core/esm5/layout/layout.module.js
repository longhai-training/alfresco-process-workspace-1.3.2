/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { MaterialModule } from '../material.module';
import { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';
import { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';
import { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';
import { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';
import { LayoutContainerComponent } from './components/layout-container/layout-container.component';
import { SidebarActionMenuComponent, SidebarMenuDirective, SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';
import { HeaderLayoutComponent } from './components/header/header.component';
import { TranslateModule } from '@ngx-translate/core';
var LayoutModule = /** @class */ (function () {
    function LayoutModule() {
    }
    LayoutModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        MaterialModule,
                        RouterModule,
                        TranslateModule.forChild()
                    ],
                    exports: [
                        SidenavLayoutHeaderDirective,
                        SidenavLayoutContentDirective,
                        SidenavLayoutNavigationDirective,
                        SidenavLayoutComponent,
                        LayoutContainerComponent,
                        SidebarActionMenuComponent,
                        SidebarMenuDirective,
                        SidebarMenuExpandIconDirective,
                        SidebarMenuTitleIconDirective,
                        HeaderLayoutComponent
                    ],
                    declarations: [
                        SidenavLayoutHeaderDirective,
                        SidenavLayoutContentDirective,
                        SidenavLayoutNavigationDirective,
                        SidenavLayoutComponent,
                        LayoutContainerComponent,
                        SidebarActionMenuComponent,
                        SidebarMenuDirective,
                        SidebarMenuExpandIconDirective,
                        SidebarMenuTitleIconDirective,
                        HeaderLayoutComponent
                    ]
                },] }
    ];
    return LayoutModule;
}());
export { LayoutModule };
export { LayoutModule as SidenavLayoutModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImxheW91dC9sYXlvdXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDcEQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDOUYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDNUYsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDcEcsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDOUYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMERBQTBELENBQUM7QUFDcEcsT0FBTyxFQUFFLDBCQUEwQixFQUFFLG9CQUFvQixFQUNyRCw4QkFBOEIsRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDJEQUEyRCxDQUFDO0FBQ3JJLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RDtJQUFBO0lBZ0MyQixDQUFDOztnQkFoQzNCLFFBQVEsU0FBQztvQkFDTixPQUFPLEVBQUU7d0JBQ0wsWUFBWTt3QkFDWixjQUFjO3dCQUNkLFlBQVk7d0JBQ1osZUFBZSxDQUFDLFFBQVEsRUFBRTtxQkFDN0I7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLDRCQUE0Qjt3QkFDNUIsNkJBQTZCO3dCQUM3QixnQ0FBZ0M7d0JBQ2hDLHNCQUFzQjt3QkFDdEIsd0JBQXdCO3dCQUN4QiwwQkFBMEI7d0JBQzFCLG9CQUFvQjt3QkFDcEIsOEJBQThCO3dCQUM5Qiw2QkFBNkI7d0JBQzdCLHFCQUFxQjtxQkFDeEI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNWLDRCQUE0Qjt3QkFDNUIsNkJBQTZCO3dCQUM3QixnQ0FBZ0M7d0JBQ2hDLHNCQUFzQjt3QkFDdEIsd0JBQXdCO3dCQUN4QiwwQkFBMEI7d0JBQzFCLG9CQUFvQjt3QkFDcEIsOEJBQThCO3dCQUM5Qiw2QkFBNkI7d0JBQzdCLHFCQUFxQjtxQkFDeEI7aUJBQ0o7O0lBQzBCLG1CQUFDO0NBQUEsQUFoQzVCLElBZ0M0QjtTQUFmLFlBQVk7QUFDekIsT0FBTyxFQUFFLFlBQVksSUFBSSxtQkFBbUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTWF0ZXJpYWxNb2R1bGUgfSBmcm9tICcuLi9tYXRlcmlhbC5tb2R1bGUnO1xuaW1wb3J0IHsgU2lkZW5hdkxheW91dENvbnRlbnREaXJlY3RpdmUgfSBmcm9tICcuL2RpcmVjdGl2ZXMvc2lkZW5hdi1sYXlvdXQtY29udGVudC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2lkZW5hdkxheW91dEhlYWRlckRpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9zaWRlbmF2LWxheW91dC1oZWFkZXIuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNpZGVuYXZMYXlvdXROYXZpZ2F0aW9uRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzL3NpZGVuYXYtbGF5b3V0LW5hdmlnYXRpb24uZGlyZWN0aXZlJztcbmltcG9ydCB7IFNpZGVuYXZMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2lkZW5hdi1sYXlvdXQvc2lkZW5hdi1sYXlvdXQuY29tcG9uZW50JztcbmltcG9ydCB7IExheW91dENvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9sYXlvdXQtY29udGFpbmVyL2xheW91dC1jb250YWluZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFNpZGViYXJBY3Rpb25NZW51Q29tcG9uZW50LCBTaWRlYmFyTWVudURpcmVjdGl2ZSxcbiAgICBTaWRlYmFyTWVudUV4cGFuZEljb25EaXJlY3RpdmUsIFNpZGViYXJNZW51VGl0bGVJY29uRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3NpZGViYXItYWN0aW9uL3NpZGViYXItYWN0aW9uLW1lbnUuY29tcG9uZW50JztcbmltcG9ydCB7IEhlYWRlckxheW91dENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbkBOZ01vZHVsZSh7XG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIE1hdGVyaWFsTW9kdWxlLFxuICAgICAgICBSb3V0ZXJNb2R1bGUsXG4gICAgICAgIFRyYW5zbGF0ZU1vZHVsZS5mb3JDaGlsZCgpXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFNpZGVuYXZMYXlvdXRIZWFkZXJEaXJlY3RpdmUsXG4gICAgICAgIFNpZGVuYXZMYXlvdXRDb250ZW50RGlyZWN0aXZlLFxuICAgICAgICBTaWRlbmF2TGF5b3V0TmF2aWdhdGlvbkRpcmVjdGl2ZSxcbiAgICAgICAgU2lkZW5hdkxheW91dENvbXBvbmVudCxcbiAgICAgICAgTGF5b3V0Q29udGFpbmVyQ29tcG9uZW50LFxuICAgICAgICBTaWRlYmFyQWN0aW9uTWVudUNvbXBvbmVudCxcbiAgICAgICAgU2lkZWJhck1lbnVEaXJlY3RpdmUsXG4gICAgICAgIFNpZGViYXJNZW51RXhwYW5kSWNvbkRpcmVjdGl2ZSxcbiAgICAgICAgU2lkZWJhck1lbnVUaXRsZUljb25EaXJlY3RpdmUsXG4gICAgICAgIEhlYWRlckxheW91dENvbXBvbmVudFxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFNpZGVuYXZMYXlvdXRIZWFkZXJEaXJlY3RpdmUsXG4gICAgICAgIFNpZGVuYXZMYXlvdXRDb250ZW50RGlyZWN0aXZlLFxuICAgICAgICBTaWRlbmF2TGF5b3V0TmF2aWdhdGlvbkRpcmVjdGl2ZSxcbiAgICAgICAgU2lkZW5hdkxheW91dENvbXBvbmVudCxcbiAgICAgICAgTGF5b3V0Q29udGFpbmVyQ29tcG9uZW50LFxuICAgICAgICBTaWRlYmFyQWN0aW9uTWVudUNvbXBvbmVudCxcbiAgICAgICAgU2lkZWJhck1lbnVEaXJlY3RpdmUsXG4gICAgICAgIFNpZGViYXJNZW51RXhwYW5kSWNvbkRpcmVjdGl2ZSxcbiAgICAgICAgU2lkZWJhck1lbnVUaXRsZUljb25EaXJlY3RpdmUsXG4gICAgICAgIEhlYWRlckxheW91dENvbXBvbmVudFxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgTGF5b3V0TW9kdWxlIHt9XG5leHBvcnQgeyBMYXlvdXRNb2R1bGUgYXMgU2lkZW5hdkxheW91dE1vZHVsZSB9O1xuIl19