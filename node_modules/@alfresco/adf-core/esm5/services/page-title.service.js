/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
import { Title } from '@angular/platform-browser';
import { AppConfigService } from '../app-config/app-config.service';
import { TranslationService } from './translation.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
import * as i2 from "../app-config/app-config.service";
import * as i3 from "./translation.service";
var PageTitleService = /** @class */ (function () {
    function PageTitleService(titleService, appConfig, translationService) {
        var _this = this;
        this.titleService = titleService;
        this.appConfig = appConfig;
        this.translationService = translationService;
        this.originalTitle = '';
        this.translatedTitle = '';
        translationService.translate.onLangChange.subscribe((/**
         * @return {?}
         */
        function () { return _this.onLanguageChanged(); }));
        translationService.translate.onTranslationChange.subscribe((/**
         * @return {?}
         */
        function () { return _this.onLanguageChanged(); }));
    }
    /**
     * Sets the page title.
     * @param value The new title
     */
    /**
     * Sets the page title.
     * @param {?=} value The new title
     * @return {?}
     */
    PageTitleService.prototype.setTitle = /**
     * Sets the page title.
     * @param {?=} value The new title
     * @return {?}
     */
    function (value) {
        if (value === void 0) { value = ''; }
        this.originalTitle = value;
        this.translatedTitle = this.translationService.instant(value);
        this.updateTitle();
    };
    /**
     * @private
     * @return {?}
     */
    PageTitleService.prototype.onLanguageChanged = /**
     * @private
     * @return {?}
     */
    function () {
        this.translatedTitle = this.translationService.instant(this.originalTitle);
        this.updateTitle();
    };
    /**
     * @private
     * @return {?}
     */
    PageTitleService.prototype.updateTitle = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var name = this.appConfig.get('application.name') || 'Alfresco ADF Application';
        /** @type {?} */
        var title = this.translatedTitle ? this.translatedTitle + " - " + name : "" + name;
        this.titleService.setTitle(title);
    };
    PageTitleService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    PageTitleService.ctorParameters = function () { return [
        { type: Title },
        { type: AppConfigService },
        { type: TranslationService }
    ]; };
    /** @nocollapse */ PageTitleService.ngInjectableDef = i0.defineInjectable({ factory: function PageTitleService_Factory() { return new PageTitleService(i0.inject(i1.Title), i0.inject(i2.AppConfigService), i0.inject(i3.TranslationService)); }, token: PageTitleService, providedIn: "root" });
    return PageTitleService;
}());
export { PageTitleService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.originalTitle;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.translatedTitle;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.titleService;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.appConfig;
    /**
     * @type {?}
     * @private
     */
    PageTitleService.prototype.translationService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS10aXRsZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsic2VydmljZXMvcGFnZS10aXRsZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOzs7OztBQUUzRDtJQVFJLDBCQUNZLFlBQW1CLEVBQ25CLFNBQTJCLEVBQzNCLGtCQUFzQztRQUhsRCxpQkFNQztRQUxXLGlCQUFZLEdBQVosWUFBWSxDQUFPO1FBQ25CLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBQzNCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFOMUMsa0JBQWEsR0FBVyxFQUFFLENBQUM7UUFDM0Isb0JBQWUsR0FBVyxFQUFFLENBQUM7UUFNakMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxTQUFTOzs7UUFBQyxjQUFNLE9BQUEsS0FBSSxDQUFDLGlCQUFpQixFQUFFLEVBQXhCLENBQXdCLEVBQUMsQ0FBQztRQUNwRixrQkFBa0IsQ0FBQyxTQUFTLENBQUMsbUJBQW1CLENBQUMsU0FBUzs7O1FBQUMsY0FBTSxPQUFBLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxFQUF4QixDQUF3QixFQUFDLENBQUM7SUFDL0YsQ0FBQztJQUVEOzs7T0FHRzs7Ozs7O0lBQ0gsbUNBQVE7Ozs7O0lBQVIsVUFBUyxLQUFrQjtRQUFsQixzQkFBQSxFQUFBLFVBQWtCO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUU5RCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQzs7Ozs7SUFFTyw0Q0FBaUI7Ozs7SUFBekI7UUFDSSxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QixDQUFDOzs7OztJQUVPLHNDQUFXOzs7O0lBQW5COztZQUNVLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLDBCQUEwQjs7WUFFM0UsS0FBSyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFJLElBQUksQ0FBQyxlQUFlLFdBQU0sSUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFHLElBQU07UUFDcEYsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7Z0JBckNKLFVBQVUsU0FBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7Ozs7Z0JBTlEsS0FBSztnQkFDTCxnQkFBZ0I7Z0JBQ2hCLGtCQUFrQjs7OzJCQXBCM0I7Q0E0REMsQUF0Q0QsSUFzQ0M7U0FuQ1ksZ0JBQWdCOzs7Ozs7SUFFekIseUNBQW1DOzs7OztJQUNuQywyQ0FBcUM7Ozs7O0lBR2pDLHdDQUEyQjs7Ozs7SUFDM0IscUNBQW1DOzs7OztJQUNuQyw4Q0FBOEMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaXRsZSB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgQXBwQ29uZmlnU2VydmljZSB9IGZyb20gJy4uL2FwcC1jb25maWcvYXBwLWNvbmZpZy5zZXJ2aWNlJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4vdHJhbnNsYXRpb24uc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgUGFnZVRpdGxlU2VydmljZSB7XG5cbiAgICBwcml2YXRlIG9yaWdpbmFsVGl0bGU6IHN0cmluZyA9ICcnO1xuICAgIHByaXZhdGUgdHJhbnNsYXRlZFRpdGxlOiBzdHJpbmcgPSAnJztcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHRpdGxlU2VydmljZTogVGl0bGUsXG4gICAgICAgIHByaXZhdGUgYXBwQ29uZmlnOiBBcHBDb25maWdTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHRyYW5zbGF0aW9uU2VydmljZTogVHJhbnNsYXRpb25TZXJ2aWNlKSB7XG4gICAgICAgIHRyYW5zbGF0aW9uU2VydmljZS50cmFuc2xhdGUub25MYW5nQ2hhbmdlLnN1YnNjcmliZSgoKSA9PiB0aGlzLm9uTGFuZ3VhZ2VDaGFuZ2VkKCkpO1xuICAgICAgICB0cmFuc2xhdGlvblNlcnZpY2UudHJhbnNsYXRlLm9uVHJhbnNsYXRpb25DaGFuZ2Uuc3Vic2NyaWJlKCgpID0+IHRoaXMub25MYW5ndWFnZUNoYW5nZWQoKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0cyB0aGUgcGFnZSB0aXRsZS5cbiAgICAgKiBAcGFyYW0gdmFsdWUgVGhlIG5ldyB0aXRsZVxuICAgICAqL1xuICAgIHNldFRpdGxlKHZhbHVlOiBzdHJpbmcgPSAnJykge1xuICAgICAgICB0aGlzLm9yaWdpbmFsVGl0bGUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy50cmFuc2xhdGVkVGl0bGUgPSB0aGlzLnRyYW5zbGF0aW9uU2VydmljZS5pbnN0YW50KHZhbHVlKTtcblxuICAgICAgICB0aGlzLnVwZGF0ZVRpdGxlKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkxhbmd1YWdlQ2hhbmdlZCgpIHtcbiAgICAgICAgdGhpcy50cmFuc2xhdGVkVGl0bGUgPSB0aGlzLnRyYW5zbGF0aW9uU2VydmljZS5pbnN0YW50KHRoaXMub3JpZ2luYWxUaXRsZSk7XG4gICAgICAgIHRoaXMudXBkYXRlVGl0bGUoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZVRpdGxlKCkge1xuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5hcHBDb25maWcuZ2V0KCdhcHBsaWNhdGlvbi5uYW1lJykgfHwgJ0FsZnJlc2NvIEFERiBBcHBsaWNhdGlvbic7XG5cbiAgICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLnRyYW5zbGF0ZWRUaXRsZSA/IGAke3RoaXMudHJhbnNsYXRlZFRpdGxlfSAtICR7bmFtZX1gIDogYCR7bmFtZX1gO1xuICAgICAgICB0aGlzLnRpdGxlU2VydmljZS5zZXRUaXRsZSh0aXRsZSk7XG4gICAgfVxufVxuIl19