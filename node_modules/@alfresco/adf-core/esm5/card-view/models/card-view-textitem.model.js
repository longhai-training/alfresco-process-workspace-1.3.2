/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CardViewBaseItemModel } from './card-view-baseitem.model';
var CardViewTextItemModel = /** @class */ (function (_super) {
    tslib_1.__extends(CardViewTextItemModel, _super);
    function CardViewTextItemModel(cardViewTextItemProperties) {
        var _this = _super.call(this, cardViewTextItemProperties) || this;
        _this.type = 'text';
        _this.multiline = !!cardViewTextItemProperties.multiline;
        _this.multivalued = !!cardViewTextItemProperties.multivalued;
        _this.pipes = cardViewTextItemProperties.pipes || [];
        _this.clickCallBack = cardViewTextItemProperties.clickCallBack ? cardViewTextItemProperties.clickCallBack : null;
        return _this;
    }
    Object.defineProperty(CardViewTextItemModel.prototype, "displayValue", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.isEmpty()) {
                return this.default;
            }
            else {
                return this.applyPipes(this.value);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @param {?} displayValue
     * @return {?}
     */
    CardViewTextItemModel.prototype.applyPipes = /**
     * @private
     * @param {?} displayValue
     * @return {?}
     */
    function (displayValue) {
        if (this.pipes.length) {
            displayValue = this.pipes.reduce((/**
             * @param {?} accumulator
             * @param {?} __1
             * @return {?}
             */
            function (accumulator, _a) {
                var pipe = _a.pipe, _b = _a.params, params = _b === void 0 ? [] : _b;
                return pipe.transform.apply(pipe, tslib_1.__spread([accumulator], params));
            }), displayValue);
        }
        return displayValue;
    };
    return CardViewTextItemModel;
}(CardViewBaseItemModel));
export { CardViewTextItemModel };
if (false) {
    /** @type {?} */
    CardViewTextItemModel.prototype.type;
    /** @type {?} */
    CardViewTextItemModel.prototype.multiline;
    /** @type {?} */
    CardViewTextItemModel.prototype.multivalued;
    /** @type {?} */
    CardViewTextItemModel.prototype.pipes;
    /** @type {?} */
    CardViewTextItemModel.prototype.clickCallBack;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LXRleHRpdGVtLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsiY2FyZC12aWV3L21vZGVscy9jYXJkLXZpZXctdGV4dGl0ZW0ubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBR25FO0lBQTJDLGlEQUFxQjtJQU81RCwrQkFBWSwwQkFBc0Q7UUFBbEUsWUFDSSxrQkFBTSwwQkFBMEIsQ0FBQyxTQUtwQztRQVpELFVBQUksR0FBVyxNQUFNLENBQUM7UUFRbEIsS0FBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsMEJBQTBCLENBQUMsU0FBUyxDQUFDO1FBQ3hELEtBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLDBCQUEwQixDQUFDLFdBQVcsQ0FBQztRQUM1RCxLQUFJLENBQUMsS0FBSyxHQUFHLDBCQUEwQixDQUFDLEtBQUssSUFBSSxFQUFFLENBQUM7UUFDcEQsS0FBSSxDQUFDLGFBQWEsR0FBRywwQkFBMEIsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLDBCQUEwQixDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDOztJQUNwSCxDQUFDO0lBRUQsc0JBQUksK0NBQVk7Ozs7UUFBaEI7WUFDSSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRTtnQkFDaEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO2FBQ3ZCO2lCQUFNO2dCQUNILE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDdEM7UUFDTCxDQUFDOzs7T0FBQTs7Ozs7O0lBRU8sMENBQVU7Ozs7O0lBQWxCLFVBQW1CLFlBQVk7UUFDM0IsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtZQUNuQixZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNOzs7OztZQUFDLFVBQUMsV0FBVyxFQUFFLEVBQXFCO29CQUFuQixjQUFJLEVBQUUsY0FBVyxFQUFYLGdDQUFXO2dCQUM5RCxPQUFPLElBQUksQ0FBQyxTQUFTLE9BQWQsSUFBSSxvQkFBVyxXQUFXLEdBQUssTUFBTSxHQUFFO1lBQ2xELENBQUMsR0FBRSxZQUFZLENBQUMsQ0FBQztTQUNwQjtRQUVELE9BQU8sWUFBWSxDQUFDO0lBQ3hCLENBQUM7SUFDTCw0QkFBQztBQUFELENBQUMsQUFoQ0QsQ0FBMkMscUJBQXFCLEdBZ0MvRDs7OztJQS9CRyxxQ0FBc0I7O0lBQ3RCLDBDQUFvQjs7SUFDcEIsNENBQXNCOztJQUN0QixzQ0FBdUM7O0lBQ3ZDLDhDQUFvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENhcmRWaWV3SXRlbSB9IGZyb20gJy4uL2ludGVyZmFjZXMvY2FyZC12aWV3LWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IER5bmFtaWNDb21wb25lbnRNb2RlbCB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2R5bmFtaWMtY29tcG9uZW50LW1hcHBlci5zZXJ2aWNlJztcbmltcG9ydCB7IENhcmRWaWV3QmFzZUl0ZW1Nb2RlbCB9IGZyb20gJy4vY2FyZC12aWV3LWJhc2VpdGVtLm1vZGVsJztcbmltcG9ydCB7IENhcmRWaWV3VGV4dEl0ZW1QaXBlUHJvcGVydHksIENhcmRWaWV3VGV4dEl0ZW1Qcm9wZXJ0aWVzIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9jYXJkLXZpZXcuaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBjbGFzcyBDYXJkVmlld1RleHRJdGVtTW9kZWwgZXh0ZW5kcyBDYXJkVmlld0Jhc2VJdGVtTW9kZWwgaW1wbGVtZW50cyBDYXJkVmlld0l0ZW0sIER5bmFtaWNDb21wb25lbnRNb2RlbCB7XG4gICAgdHlwZTogc3RyaW5nID0gJ3RleHQnO1xuICAgIG11bHRpbGluZT86IGJvb2xlYW47XG4gICAgbXVsdGl2YWx1ZWQ/OiBib29sZWFuO1xuICAgIHBpcGVzPzogQ2FyZFZpZXdUZXh0SXRlbVBpcGVQcm9wZXJ0eVtdO1xuICAgIGNsaWNrQ2FsbEJhY2s/OiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcihjYXJkVmlld1RleHRJdGVtUHJvcGVydGllczogQ2FyZFZpZXdUZXh0SXRlbVByb3BlcnRpZXMpIHtcbiAgICAgICAgc3VwZXIoY2FyZFZpZXdUZXh0SXRlbVByb3BlcnRpZXMpO1xuICAgICAgICB0aGlzLm11bHRpbGluZSA9ICEhY2FyZFZpZXdUZXh0SXRlbVByb3BlcnRpZXMubXVsdGlsaW5lO1xuICAgICAgICB0aGlzLm11bHRpdmFsdWVkID0gISFjYXJkVmlld1RleHRJdGVtUHJvcGVydGllcy5tdWx0aXZhbHVlZDtcbiAgICAgICAgdGhpcy5waXBlcyA9IGNhcmRWaWV3VGV4dEl0ZW1Qcm9wZXJ0aWVzLnBpcGVzIHx8IFtdO1xuICAgICAgICB0aGlzLmNsaWNrQ2FsbEJhY2sgPSBjYXJkVmlld1RleHRJdGVtUHJvcGVydGllcy5jbGlja0NhbGxCYWNrID8gY2FyZFZpZXdUZXh0SXRlbVByb3BlcnRpZXMuY2xpY2tDYWxsQmFjayA6IG51bGw7XG4gICAgfVxuXG4gICAgZ2V0IGRpc3BsYXlWYWx1ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNFbXB0eSgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kZWZhdWx0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXBwbHlQaXBlcyh0aGlzLnZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYXBwbHlQaXBlcyhkaXNwbGF5VmFsdWUpIHtcbiAgICAgICAgaWYgKHRoaXMucGlwZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBkaXNwbGF5VmFsdWUgPSB0aGlzLnBpcGVzLnJlZHVjZSgoYWNjdW11bGF0b3IsIHsgcGlwZSwgcGFyYW1zID0gW10gfSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBwaXBlLnRyYW5zZm9ybShhY2N1bXVsYXRvciwgLi4ucGFyYW1zKTtcbiAgICAgICAgICAgIH0sIGRpc3BsYXlWYWx1ZSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZGlzcGxheVZhbHVlO1xuICAgIH1cbn1cbiJdfQ==