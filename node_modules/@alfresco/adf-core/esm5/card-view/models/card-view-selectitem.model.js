/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { CardViewBaseItemModel } from './card-view-baseitem.model';
import { of } from 'rxjs';
import { switchMap } from 'rxjs/operators';
/**
 * @template T
 */
var /**
 * @template T
 */
CardViewSelectItemModel = /** @class */ (function (_super) {
    tslib_1.__extends(CardViewSelectItemModel, _super);
    function CardViewSelectItemModel(cardViewSelectItemProperties) {
        var _this = _super.call(this, cardViewSelectItemProperties) || this;
        _this.type = 'select';
        _this.options$ = cardViewSelectItemProperties.options$;
        return _this;
    }
    Object.defineProperty(CardViewSelectItemModel.prototype, "displayValue", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            return this.options$.pipe(switchMap((/**
             * @param {?} options
             * @return {?}
             */
            function (options) {
                /** @type {?} */
                var option = options.find((/**
                 * @param {?} o
                 * @return {?}
                 */
                function (o) { return o.key === _this.value; }));
                return of(option ? option.label : '');
            })));
        },
        enumerable: true,
        configurable: true
    });
    return CardViewSelectItemModel;
}(CardViewBaseItemModel));
/**
 * @template T
 */
export { CardViewSelectItemModel };
if (false) {
    /** @type {?} */
    CardViewSelectItemModel.prototype.type;
    /** @type {?} */
    CardViewSelectItemModel.prototype.options$;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC12aWV3LXNlbGVjdGl0ZW0ubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJjYXJkLXZpZXcvbW9kZWxzL2NhcmQtdmlldy1zZWxlY3RpdGVtLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVuRSxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUUzQzs7OztJQUFnRCxtREFBcUI7SUFJakUsaUNBQVksNEJBQTZEO1FBQXpFLFlBQ0ksa0JBQU0sNEJBQTRCLENBQUMsU0FHdEM7UUFQRCxVQUFJLEdBQVcsUUFBUSxDQUFDO1FBTXBCLEtBQUksQ0FBQyxRQUFRLEdBQUcsNEJBQTRCLENBQUMsUUFBUSxDQUFDOztJQUMxRCxDQUFDO0lBRUQsc0JBQUksaURBQVk7Ozs7UUFBaEI7WUFBQSxpQkFPQztZQU5HLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQ3JCLFNBQVM7Ozs7WUFBQyxVQUFDLE9BQU87O29CQUNSLE1BQU0sR0FBRyxPQUFPLENBQUMsSUFBSTs7OztnQkFBQyxVQUFDLENBQUMsSUFBSyxPQUFBLENBQUMsQ0FBQyxHQUFHLEtBQUssS0FBSSxDQUFDLEtBQUssRUFBcEIsQ0FBb0IsRUFBQztnQkFDeEQsT0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUMxQyxDQUFDLEVBQUMsQ0FDTCxDQUFDO1FBQ04sQ0FBQzs7O09BQUE7SUFDTCw4QkFBQztBQUFELENBQUMsQUFsQkQsQ0FBZ0QscUJBQXFCLEdBa0JwRTs7Ozs7OztJQWpCRyx1Q0FBd0I7O0lBQ3hCLDJDQUFvRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENhcmRWaWV3SXRlbSB9IGZyb20gJy4uL2ludGVyZmFjZXMvY2FyZC12aWV3LWl0ZW0uaW50ZXJmYWNlJztcbmltcG9ydCB7IER5bmFtaWNDb21wb25lbnRNb2RlbCB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2R5bmFtaWMtY29tcG9uZW50LW1hcHBlci5zZXJ2aWNlJztcbmltcG9ydCB7IENhcmRWaWV3QmFzZUl0ZW1Nb2RlbCB9IGZyb20gJy4vY2FyZC12aWV3LWJhc2VpdGVtLm1vZGVsJztcbmltcG9ydCB7IENhcmRWaWV3U2VsZWN0SXRlbVByb3BlcnRpZXMsIENhcmRWaWV3U2VsZWN0SXRlbU9wdGlvbiB9IGZyb20gJy4uL2ludGVyZmFjZXMvY2FyZC12aWV3LmludGVyZmFjZXMnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHN3aXRjaE1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IGNsYXNzIENhcmRWaWV3U2VsZWN0SXRlbU1vZGVsPFQ+IGV4dGVuZHMgQ2FyZFZpZXdCYXNlSXRlbU1vZGVsIGltcGxlbWVudHMgQ2FyZFZpZXdJdGVtLCBEeW5hbWljQ29tcG9uZW50TW9kZWwge1xuICAgIHR5cGU6IHN0cmluZyA9ICdzZWxlY3QnO1xuICAgIG9wdGlvbnMkOiBPYnNlcnZhYmxlPENhcmRWaWV3U2VsZWN0SXRlbU9wdGlvbjxUPltdPjtcblxuICAgIGNvbnN0cnVjdG9yKGNhcmRWaWV3U2VsZWN0SXRlbVByb3BlcnRpZXM6IENhcmRWaWV3U2VsZWN0SXRlbVByb3BlcnRpZXM8VD4pIHtcbiAgICAgICAgc3VwZXIoY2FyZFZpZXdTZWxlY3RJdGVtUHJvcGVydGllcyk7XG5cbiAgICAgICAgdGhpcy5vcHRpb25zJCA9IGNhcmRWaWV3U2VsZWN0SXRlbVByb3BlcnRpZXMub3B0aW9ucyQ7XG4gICAgfVxuXG4gICAgZ2V0IGRpc3BsYXlWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucyQucGlwZShcbiAgICAgICAgICAgIHN3aXRjaE1hcCgob3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbiA9IG9wdGlvbnMuZmluZCgobykgPT4gby5rZXkgPT09IHRoaXMudmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBvZihvcHRpb24gPyBvcHRpb24ubGFiZWwgOiAnJyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==