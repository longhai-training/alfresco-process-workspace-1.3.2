/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
import { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';
import { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';
import { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';
import { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';
import { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';
import { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';
import { DynamicComponentMapper, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';
import * as i0 from "@angular/core";
var CardItemTypeService = /** @class */ (function (_super) {
    tslib_1.__extends(CardItemTypeService, _super);
    function CardItemTypeService() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultValue = CardViewTextItemComponent;
        _this.types = {
            'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),
            'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),
            'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),
            'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),
            'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),
            'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),
            'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),
            'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),
            'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)
        };
        return _this;
    }
    CardItemTypeService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ CardItemTypeService.ngInjectableDef = i0.defineInjectable({ factory: function CardItemTypeService_Factory() { return new CardItemTypeService(); }, token: CardItemTypeService, providedIn: "root" });
    return CardItemTypeService;
}(DynamicComponentMapper));
export { CardItemTypeService };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    CardItemTypeService.prototype.defaultValue;
    /**
     * @type {?}
     * @protected
     */
    CardItemTypeService.prototype.types;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC1pdGVtLXR5cGVzLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJjYXJkLXZpZXcvc2VydmljZXMvY2FyZC1pdGVtLXR5cGVzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxVQUFVLEVBQVEsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0RBQStELENBQUM7QUFDMUcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNkRBQTZELENBQUM7QUFDdkcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0RBQStELENBQUM7QUFDMUcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sbUVBQW1FLENBQUM7QUFDaEgsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0RBQStELENBQUM7QUFDMUcsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0saUZBQWlGLENBQUM7QUFDckksT0FBTyxFQUFFLHNCQUFzQixFQUFtQyx3QkFBd0IsRUFBRSxNQUFNLGlEQUFpRCxDQUFDOztBQUVwSjtJQUd5QywrQ0FBc0I7SUFIL0Q7UUFBQSxxRUFrQkM7UUFiYSxrQkFBWSxHQUFhLHlCQUF5QixDQUFDO1FBRW5ELFdBQUssR0FBdUQ7WUFDbEUsTUFBTSxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQztZQUNwRSxRQUFRLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLDJCQUEyQixDQUFDO1lBQ3hFLEtBQUssRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMseUJBQXlCLENBQUM7WUFDbkUsT0FBTyxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQztZQUNyRSxNQUFNLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLHlCQUF5QixDQUFDO1lBQ3BFLFVBQVUsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMseUJBQXlCLENBQUM7WUFDeEUsTUFBTSxFQUFFLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQztZQUNwRSxLQUFLLEVBQUUsd0JBQXdCLENBQUMsUUFBUSxDQUFDLHdCQUF3QixDQUFDO1lBQ2xFLGVBQWUsRUFBRSx3QkFBd0IsQ0FBQyxRQUFRLENBQUMsa0NBQWtDLENBQUM7U0FDekYsQ0FBQzs7S0FDTDs7Z0JBbEJBLFVBQVUsU0FBQztvQkFDUixVQUFVLEVBQUUsTUFBTTtpQkFDckI7Ozs4QkE1QkQ7Q0E0Q0MsQUFsQkQsQ0FHeUMsc0JBQXNCLEdBZTlEO1NBZlksbUJBQW1COzs7Ozs7SUFFNUIsMkNBQTZEOzs7OztJQUU3RCxvQ0FVRSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcmRWaWV3RGF0ZUl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL2NhcmQtdmlldy1kYXRlaXRlbS9jYXJkLXZpZXctZGF0ZWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENhcmRWaWV3TWFwSXRlbUNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvY2FyZC12aWV3LW1hcGl0ZW0vY2FyZC12aWV3LW1hcGl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENhcmRWaWV3VGV4dEl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL2NhcmQtdmlldy10ZXh0aXRlbS9jYXJkLXZpZXctdGV4dGl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENhcmRWaWV3U2VsZWN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4uL2NvbXBvbmVudHMvY2FyZC12aWV3LXNlbGVjdGl0ZW0vY2FyZC12aWV3LXNlbGVjdGl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENhcmRWaWV3Qm9vbEl0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL2NhcmQtdmlldy1ib29saXRlbS9jYXJkLXZpZXctYm9vbGl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IENhcmRWaWV3S2V5VmFsdWVQYWlyc0l0ZW1Db21wb25lbnQgfSBmcm9tICcuLi9jb21wb25lbnRzL2NhcmQtdmlldy1rZXl2YWx1ZXBhaXJzaXRlbS9jYXJkLXZpZXcta2V5dmFsdWVwYWlyc2l0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IER5bmFtaWNDb21wb25lbnRNYXBwZXIsIER5bmFtaWNDb21wb25lbnRSZXNvbHZlRnVuY3Rpb24sIER5bmFtaWNDb21wb25lbnRSZXNvbHZlciB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2R5bmFtaWMtY29tcG9uZW50LW1hcHBlci5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICAgIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBDYXJkSXRlbVR5cGVTZXJ2aWNlIGV4dGVuZHMgRHluYW1pY0NvbXBvbmVudE1hcHBlciB7XG5cbiAgICBwcm90ZWN0ZWQgZGVmYXVsdFZhbHVlOiBUeXBlPHt9PiA9IENhcmRWaWV3VGV4dEl0ZW1Db21wb25lbnQ7XG5cbiAgICBwcm90ZWN0ZWQgdHlwZXM6IHsgW2tleTogc3RyaW5nXTogRHluYW1pY0NvbXBvbmVudFJlc29sdmVGdW5jdGlvbiB9ID0ge1xuICAgICAgICAndGV4dCc6IER5bmFtaWNDb21wb25lbnRSZXNvbHZlci5mcm9tVHlwZShDYXJkVmlld1RleHRJdGVtQ29tcG9uZW50KSxcbiAgICAgICAgJ3NlbGVjdCc6IER5bmFtaWNDb21wb25lbnRSZXNvbHZlci5mcm9tVHlwZShDYXJkVmlld1NlbGVjdEl0ZW1Db21wb25lbnQpLFxuICAgICAgICAnaW50JzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKENhcmRWaWV3VGV4dEl0ZW1Db21wb25lbnQpLFxuICAgICAgICAnZmxvYXQnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUoQ2FyZFZpZXdUZXh0SXRlbUNvbXBvbmVudCksXG4gICAgICAgICdkYXRlJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKENhcmRWaWV3RGF0ZUl0ZW1Db21wb25lbnQpLFxuICAgICAgICAnZGF0ZXRpbWUnOiBEeW5hbWljQ29tcG9uZW50UmVzb2x2ZXIuZnJvbVR5cGUoQ2FyZFZpZXdEYXRlSXRlbUNvbXBvbmVudCksXG4gICAgICAgICdib29sJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKENhcmRWaWV3Qm9vbEl0ZW1Db21wb25lbnQpLFxuICAgICAgICAnbWFwJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKENhcmRWaWV3TWFwSXRlbUNvbXBvbmVudCksXG4gICAgICAgICdrZXl2YWx1ZXBhaXJzJzogRHluYW1pY0NvbXBvbmVudFJlc29sdmVyLmZyb21UeXBlKENhcmRWaWV3S2V5VmFsdWVQYWlyc0l0ZW1Db21wb25lbnQpXG4gICAgfTtcbn1cbiJdfQ==