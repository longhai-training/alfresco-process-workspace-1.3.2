/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Input, ContentChild, TemplateRef, HostListener, ElementRef, ViewEncapsulation } from '@angular/core';
var PdfThumbListComponent = /** @class */ (function () {
    function PdfThumbListComponent(element) {
        this.element = element;
        this.virtualHeight = 0;
        this.translateY = 0;
        this.renderItems = [];
        this.width = 91;
        this.currentHeight = 0;
        this.items = [];
        this.margin = 15;
        this.itemHeight = 114 + this.margin;
        this.calculateItems = this.calculateItems.bind(this);
        this.onPageChange = this.onPageChange.bind(this);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    PdfThumbListComponent.prototype.onResize = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.calculateItems();
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /* cspell:disable-next-line */
        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);
        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);
        this.setHeight(this.pdfViewer.currentPageNumber);
        this.items = this.getPages();
        this.calculateItems();
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.scrollInto(_this.pdfViewer.currentPageNumber); }), 0);
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);
        /* cspell:disable-next-line */
        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    PdfThumbListComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return item.id;
    };
    /**
     * @param {?} pageNum
     * @return {?}
     */
    PdfThumbListComponent.prototype.isSelected = /**
     * @param {?} pageNum
     * @return {?}
     */
    function (pageNum) {
        return this.pdfViewer.currentPageNumber === pageNum;
    };
    /**
     * @param {?} pageNum
     * @return {?}
     */
    PdfThumbListComponent.prototype.goTo = /**
     * @param {?} pageNum
     * @return {?}
     */
    function (pageNum) {
        this.pdfViewer.currentPageNumber = pageNum;
    };
    /**
     * @param {?} item
     * @return {?}
     */
    PdfThumbListComponent.prototype.scrollInto = /**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (this.items.length) {
            /** @type {?} */
            var index = this.items.findIndex((/**
             * @param {?} element
             * @return {?}
             */
            function (element) { return element.id === item; }));
            if (index < 0 || index >= this.items.length) {
                return;
            }
            this.element.nativeElement.scrollTop = index * this.itemHeight;
            this.calculateItems();
        }
    };
    /**
     * @return {?}
     */
    PdfThumbListComponent.prototype.getPages = /**
     * @return {?}
     */
    function () {
        var _this = this;
        return this.pdfViewer._pages.map((/**
         * @param {?} page
         * @return {?}
         */
        function (page) { return ({
            id: page.id,
            getWidth: (/**
             * @return {?}
             */
            function () { return _this.width; }),
            getHeight: (/**
             * @return {?}
             */
            function () { return _this.currentHeight; }),
            getPage: (/**
             * @return {?}
             */
            function () { return _this.pdfViewer.pdfDocument.getPage(page.id); })
        }); }));
    };
    /**
     * @private
     * @param {?} id
     * @return {?}
     */
    PdfThumbListComponent.prototype.setHeight = /**
     * @private
     * @param {?} id
     * @return {?}
     */
    function (id) {
        var _this = this;
        /** @type {?} */
        var height = this.pdfViewer.pdfDocument.getPage(id).then((/**
         * @param {?} page
         * @return {?}
         */
        function (page) { return _this.calculateHeight(page); }));
        return height;
    };
    /**
     * @private
     * @param {?} page
     * @return {?}
     */
    PdfThumbListComponent.prototype.calculateHeight = /**
     * @private
     * @param {?} page
     * @return {?}
     */
    function (page) {
        /** @type {?} */
        var viewport = page.getViewport(1);
        /** @type {?} */
        var pageRatio = viewport.width / viewport.height;
        /** @type {?} */
        var height = Math.floor(this.width / pageRatio);
        this.currentHeight = height;
        this.itemHeight = height + this.margin;
    };
    /**
     * @private
     * @return {?}
     */
    PdfThumbListComponent.prototype.calculateItems = /**
     * @private
     * @return {?}
     */
    function () {
        var _a = this.getContainerSetup(), element = _a.element, viewPort = _a.viewPort, itemsInView = _a.itemsInView;
        /** @type {?} */
        var indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;
        /** @type {?} */
        var start = Math.floor(indexByScrollTop);
        /** @type {?} */
        var end = Math.ceil(indexByScrollTop) + (itemsInView);
        this.translateY = this.itemHeight * Math.ceil(start);
        this.virtualHeight = this.itemHeight * this.items.length - this.translateY;
        this.renderItems = this.items.slice(start, end);
    };
    /**
     * @private
     * @return {?}
     */
    PdfThumbListComponent.prototype.getContainerSetup = /**
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var element = this.element.nativeElement;
        /** @type {?} */
        var elementRec = element.getBoundingClientRect();
        /** @type {?} */
        var itemsInView = Math.ceil(elementRec.height / this.itemHeight);
        /** @type {?} */
        var viewPort = (this.itemHeight * this.items.length) / itemsInView;
        return {
            element: element,
            viewPort: viewPort,
            itemsInView: itemsInView
        };
    };
    /**
     * @private
     * @param {?} event
     * @return {?}
     */
    PdfThumbListComponent.prototype.onPageChange = /**
     * @private
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var index = this.renderItems.findIndex((/**
         * @param {?} element
         * @return {?}
         */
        function (element) { return element.id === event.pageNumber; }));
        if (index < 0) {
            this.scrollInto(event.pageNumber);
        }
        if (index >= this.renderItems.length - 1) {
            this.element.nativeElement.scrollTop += this.itemHeight;
        }
    };
    PdfThumbListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-pdf-thumbnails',
                    template: "<div class=\"adf-pdf-thumbnails__content\"\n    data-automation-id='adf-thumbnails-content'\n    [style.height.px]=\"virtualHeight\"\n    [style.transform]=\"'translate(-50%, ' + translateY + 'px)'\">\n    <adf-pdf-thumb *ngFor=\"let page of renderItems; trackBy: trackByFn\"\n        class=\"adf-pdf-thumbnails__thumb\"\n        [ngClass]=\"{'adf-pdf-thumbnails__thumb--selected' : isSelected(page.id)}\"\n        [page]=\"page\"\n        (click)=\"goTo(page.id)\">\n    </adf-pdf-thumb>\n</div>\n",
                    host: { 'class': 'adf-pdf-thumbnails' },
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    PdfThumbListComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    PdfThumbListComponent.propDecorators = {
        pdfViewer: [{ type: Input }],
        template: [{ type: ContentChild, args: [TemplateRef,] }],
        onResize: [{ type: HostListener, args: ['window:resize', ['$event'],] }]
    };
    return PdfThumbListComponent;
}());
export { PdfThumbListComponent };
if (false) {
    /** @type {?} */
    PdfThumbListComponent.prototype.pdfViewer;
    /** @type {?} */
    PdfThumbListComponent.prototype.virtualHeight;
    /** @type {?} */
    PdfThumbListComponent.prototype.translateY;
    /** @type {?} */
    PdfThumbListComponent.prototype.renderItems;
    /** @type {?} */
    PdfThumbListComponent.prototype.width;
    /** @type {?} */
    PdfThumbListComponent.prototype.currentHeight;
    /**
     * @type {?}
     * @private
     */
    PdfThumbListComponent.prototype.items;
    /**
     * @type {?}
     * @private
     */
    PdfThumbListComponent.prototype.margin;
    /**
     * @type {?}
     * @private
     */
    PdfThumbListComponent.prototype.itemHeight;
    /** @type {?} */
    PdfThumbListComponent.prototype.template;
    /**
     * @type {?}
     * @private
     */
    PdfThumbListComponent.prototype.element;
}
//# sourceMappingURL=data:application/json;base64,