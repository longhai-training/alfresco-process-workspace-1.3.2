/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';
import { FormControl, Validators } from '@angular/forms';
var PdfPasswordDialogComponent = /** @class */ (function () {
    function PdfPasswordDialogComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    /**
     * @return {?}
     */
    PdfPasswordDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.passwordFormControl = new FormControl('', [Validators.required]);
    };
    /**
     * @return {?}
     */
    PdfPasswordDialogComponent.prototype.isError = /**
     * @return {?}
     */
    function () {
        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;
    };
    /**
     * @return {?}
     */
    PdfPasswordDialogComponent.prototype.isValid = /**
     * @return {?}
     */
    function () {
        return !this.passwordFormControl.hasError('required');
    };
    /**
     * @return {?}
     */
    PdfPasswordDialogComponent.prototype.submit = /**
     * @return {?}
     */
    function () {
        this.dialogRef.close(this.passwordFormControl.value);
    };
    PdfPasswordDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-pdf-viewer-password-dialog',
                    template: "<div mat-dialog-title>\n    <mat-icon>lock</mat-icon>\n</div>\n\n<mat-dialog-content>\n    <form (submit)=\"submit()\">\n        <mat-form-field class=\"adf-full-width\">\n            <input matInput\n                   data-automation-id='adf-password-dialog-input'\n                   type=\"password\"\n                   placeholder=\"{{ 'ADF_VIEWER.PDF_DIALOG.PLACEHOLDER' | translate }}\"\n                   [formControl]=\"passwordFormControl\" />\n        </mat-form-field>\n\n        <mat-error *ngIf=\"isError()\" data-automation-id='adf-password-dialog-error'>{{ 'ADF_VIEWER.PDF_DIALOG.ERROR' | translate }}</mat-error>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions class=\"adf-dialog-buttons\">\n    <span class=\"adf-fill-remaining-space\"></span>\n\n    <button mat-button mat-dialog-close>{{ 'ADF_VIEWER.PDF_DIALOG.CLOSE' | translate }}</button>\n\n    <button mat-button\n            data-automation-id='adf-password-dialog-submit'\n            class=\"adf-dialog-action-button\"\n            [disabled]=\"!isValid()\"\n            (click)=\"submit()\">\n        {{ 'ADF_VIEWER.PDF_DIALOG.SUBMIT' | translate }}\n    </button>\n</mat-dialog-actions>\n",
                    styles: [".adf-fill-remaining-space{flex:1 1 auto}.adf-full-width{width:100%}"]
                }] }
    ];
    /** @nocollapse */
    PdfPasswordDialogComponent.ctorParameters = function () { return [
        { type: MatDialogRef },
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return PdfPasswordDialogComponent;
}());
export { PdfPasswordDialogComponent };
if (false) {
    /** @type {?} */
    PdfPasswordDialogComponent.prototype.passwordFormControl;
    /**
     * @type {?}
     * @private
     */
    PdfPasswordDialogComponent.prototype.dialogRef;
    /** @type {?} */
    PdfPasswordDialogComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGRmVmlld2VyLXBhc3N3b3JkLWRpYWxvZy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbInZpZXdlci9jb21wb25lbnRzL3BkZlZpZXdlci1wYXNzd29yZC1kaWFsb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFFLFlBQVksRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBSXpEO0lBUUksb0NBQ1ksU0FBbUQsRUFDM0IsSUFBUztRQURqQyxjQUFTLEdBQVQsU0FBUyxDQUEwQztRQUMzQixTQUFJLEdBQUosSUFBSSxDQUFLO0lBQzFDLENBQUM7Ozs7SUFFSiw2Q0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxXQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDMUUsQ0FBQzs7OztJQUVELDRDQUFPOzs7SUFBUDtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssUUFBUSxDQUFDLGlCQUFpQixDQUFDLGtCQUFrQixDQUFDO0lBQzlFLENBQUM7Ozs7SUFFRCw0Q0FBTzs7O0lBQVA7UUFDSSxPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUMxRCxDQUFDOzs7O0lBRUQsMkNBQU07OztJQUFOO1FBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pELENBQUM7O2dCQTNCSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGdDQUFnQztvQkFDMUMseXFDQUErQzs7aUJBRWxEOzs7O2dCQVRRLFlBQVk7Z0RBZVosTUFBTSxTQUFDLGVBQWU7O0lBa0IvQixpQ0FBQztDQUFBLEFBNUJELElBNEJDO1NBdkJZLDBCQUEwQjs7O0lBQ25DLHlEQUFpQzs7Ozs7SUFHN0IsK0NBQTJEOztJQUMzRCwwQ0FBeUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNYXREaWFsb2dSZWYsIE1BVF9ESUFMT0dfREFUQSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcbmltcG9ydCB7IEZvcm1Db250cm9sLCBWYWxpZGF0b3JzIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5kZWNsYXJlIGNvbnN0IHBkZmpzTGliOiBhbnk7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXBkZi12aWV3ZXItcGFzc3dvcmQtZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vcGRmVmlld2VyLXBhc3N3b3JkLWRpYWxvZy5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsgJy4vcGRmVmlld2VyLXBhc3N3b3JkLWRpYWxvZy5zY3NzJyBdXG59KVxuZXhwb3J0IGNsYXNzIFBkZlBhc3N3b3JkRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwYXNzd29yZEZvcm1Db250cm9sOiBGb3JtQ29udHJvbDtcblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIGRpYWxvZ1JlZjogTWF0RGlhbG9nUmVmPFBkZlBhc3N3b3JkRGlhbG9nQ29tcG9uZW50PixcbiAgICAgICAgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBhbnlcbiAgICApIHt9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5wYXNzd29yZEZvcm1Db250cm9sID0gbmV3IEZvcm1Db250cm9sKCcnLCBbVmFsaWRhdG9ycy5yZXF1aXJlZF0pO1xuICAgIH1cblxuICAgIGlzRXJyb3IoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGEucmVhc29uID09PSBwZGZqc0xpYi5QYXNzd29yZFJlc3BvbnNlcy5JTkNPUlJFQ1RfUEFTU1dPUkQ7XG4gICAgfVxuXG4gICAgaXNWYWxpZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLnBhc3N3b3JkRm9ybUNvbnRyb2wuaGFzRXJyb3IoJ3JlcXVpcmVkJyk7XG4gICAgfVxuXG4gICAgc3VibWl0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmRpYWxvZ1JlZi5jbG9zZSh0aGlzLnBhc3N3b3JkRm9ybUNvbnRyb2wudmFsdWUpO1xuICAgIH1cbn1cbiJdfQ==