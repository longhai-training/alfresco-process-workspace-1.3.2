/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Pipe } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var InitialUsernamePipe = /** @class */ (function () {
    function InitialUsernamePipe(sanitized) {
        this.sanitized = sanitized;
    }
    /**
     * @param {?} user
     * @param {?=} className
     * @param {?=} delimiter
     * @return {?}
     */
    InitialUsernamePipe.prototype.transform = /**
     * @param {?} user
     * @param {?=} className
     * @param {?=} delimiter
     * @return {?}
     */
    function (user, className, delimiter) {
        if (className === void 0) { className = ''; }
        if (delimiter === void 0) { delimiter = ''; }
        /** @type {?} */
        var safeHtml = '';
        if (user) {
            /** @type {?} */
            var initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);
            safeHtml = this.sanitized.bypassSecurityTrustHtml("<div id=\"user-initials-image\" class=\"" + className + "\">" + initialResult + "</div>");
        }
        return safeHtml;
    };
    /**
     * @param {?} firstName
     * @param {?} lastName
     * @param {?} delimiter
     * @return {?}
     */
    InitialUsernamePipe.prototype.getInitialUserName = /**
     * @param {?} firstName
     * @param {?} lastName
     * @param {?} delimiter
     * @return {?}
     */
    function (firstName, lastName, delimiter) {
        firstName = (firstName ? firstName[0] : '');
        lastName = (lastName ? lastName[0] : '');
        return firstName + delimiter + lastName;
    };
    InitialUsernamePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'usernameInitials'
                },] }
    ];
    /** @nocollapse */
    InitialUsernamePipe.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    return InitialUsernamePipe;
}());
export { InitialUsernamePipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    InitialUsernamePipe.prototype.sanitized;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1pbml0aWFsLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJwaXBlcy91c2VyLWluaXRpYWwucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFZLE1BQU0sMkJBQTJCLENBQUM7QUFJbkU7SUFLSSw2QkFBb0IsU0FBdUI7UUFBdkIsY0FBUyxHQUFULFNBQVMsQ0FBYztJQUMzQyxDQUFDOzs7Ozs7O0lBRUQsdUNBQVM7Ozs7OztJQUFULFVBQVUsSUFBcUMsRUFBRSxTQUFzQixFQUFFLFNBQXNCO1FBQTlDLDBCQUFBLEVBQUEsY0FBc0I7UUFBRSwwQkFBQSxFQUFBLGNBQXNCOztZQUN2RixRQUFRLEdBQWEsRUFBRTtRQUMzQixJQUFJLElBQUksRUFBRTs7Z0JBQ0EsYUFBYSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsU0FBUyxDQUFDO1lBQ3ZGLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLDZDQUF3QyxTQUFTLFdBQUssYUFBYSxXQUFRLENBQUMsQ0FBQztTQUNsSTtRQUNELE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Ozs7Ozs7SUFFRCxnREFBa0I7Ozs7OztJQUFsQixVQUFtQixTQUFpQixFQUFFLFFBQWdCLEVBQUUsU0FBaUI7UUFDckUsU0FBUyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLFFBQVEsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6QyxPQUFPLFNBQVMsR0FBRyxTQUFTLEdBQUcsUUFBUSxDQUFDO0lBQzVDLENBQUM7O2dCQXJCSixJQUFJLFNBQUM7b0JBQ0YsSUFBSSxFQUFFLGtCQUFrQjtpQkFDM0I7Ozs7Z0JBTlEsWUFBWTs7SUEwQnJCLDBCQUFDO0NBQUEsQUF0QkQsSUFzQkM7U0FuQlksbUJBQW1COzs7Ozs7SUFFaEIsd0NBQStCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyLCBTYWZlSHRtbCB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXInO1xuaW1wb3J0IHsgVXNlclByb2Nlc3NNb2RlbCB9IGZyb20gJy4uL21vZGVscy91c2VyLXByb2Nlc3MubW9kZWwnO1xuaW1wb3J0IHsgRWNtVXNlck1vZGVsIH0gZnJvbSAnLi4vdXNlcmluZm8vbW9kZWxzL2VjbS11c2VyLm1vZGVsJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICd1c2VybmFtZUluaXRpYWxzJ1xufSlcbmV4cG9ydCBjbGFzcyBJbml0aWFsVXNlcm5hbWVQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhbml0aXplZDogRG9tU2FuaXRpemVyKSB7XG4gICAgfVxuXG4gICAgdHJhbnNmb3JtKHVzZXI6IFVzZXJQcm9jZXNzTW9kZWwgfCBFY21Vc2VyTW9kZWwsIGNsYXNzTmFtZTogc3RyaW5nID0gJycsIGRlbGltaXRlcjogc3RyaW5nID0gJycpOiBTYWZlSHRtbCB7XG4gICAgICAgIGxldCBzYWZlSHRtbDogU2FmZUh0bWwgPSAnJztcbiAgICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGluaXRpYWxSZXN1bHQgPSB0aGlzLmdldEluaXRpYWxVc2VyTmFtZSh1c2VyLmZpcnN0TmFtZSwgdXNlci5sYXN0TmFtZSwgZGVsaW1pdGVyKTtcbiAgICAgICAgICAgIHNhZmVIdG1sID0gdGhpcy5zYW5pdGl6ZWQuYnlwYXNzU2VjdXJpdHlUcnVzdEh0bWwoYDxkaXYgaWQ9XCJ1c2VyLWluaXRpYWxzLWltYWdlXCIgY2xhc3M9XCIke2NsYXNzTmFtZX1cIj4ke2luaXRpYWxSZXN1bHR9PC9kaXY+YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNhZmVIdG1sO1xuICAgIH1cblxuICAgIGdldEluaXRpYWxVc2VyTmFtZShmaXJzdE5hbWU6IHN0cmluZywgbGFzdE5hbWU6IHN0cmluZywgZGVsaW1pdGVyOiBzdHJpbmcpIHtcbiAgICAgICAgZmlyc3ROYW1lID0gKGZpcnN0TmFtZSA/IGZpcnN0TmFtZVswXSA6ICcnKTtcbiAgICAgICAgbGFzdE5hbWUgPSAobGFzdE5hbWUgPyBsYXN0TmFtZVswXSA6ICcnKTtcbiAgICAgICAgcmV0dXJuIGZpcnN0TmFtZSArIGRlbGltaXRlciArIGxhc3ROYW1lO1xuICAgIH1cbn1cbiJdfQ==