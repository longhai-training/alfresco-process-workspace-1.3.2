/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Pipe } from '@angular/core';
var FormatSpacePipe = /** @class */ (function () {
    function FormatSpacePipe() {
    }
    /**
     * @param {?} inputValue
     * @param {?=} replaceChar
     * @param {?=} lowerCase
     * @return {?}
     */
    FormatSpacePipe.prototype.transform = /**
     * @param {?} inputValue
     * @param {?=} replaceChar
     * @param {?=} lowerCase
     * @return {?}
     */
    function (inputValue, replaceChar, lowerCase) {
        if (replaceChar === void 0) { replaceChar = '_'; }
        if (lowerCase === void 0) { lowerCase = true; }
        /** @type {?} */
        var transformedString = '';
        if (inputValue) {
            transformedString = lowerCase ? inputValue.trim().split(' ').join(replaceChar).toLocaleLowerCase() :
                inputValue.trim().split(' ').join(replaceChar);
        }
        return transformedString;
    };
    FormatSpacePipe.decorators = [
        { type: Pipe, args: [{
                    name: 'formatSpace'
                },] }
    ];
    return FormatSpacePipe;
}());
export { FormatSpacePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LXNwYWNlLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJwaXBlcy9mb3JtYXQtc3BhY2UucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUVwRDtJQUFBO0lBY0EsQ0FBQzs7Ozs7OztJQVRHLG1DQUFTOzs7Ozs7SUFBVCxVQUFVLFVBQWtCLEVBQUUsV0FBeUIsRUFBRSxTQUF5QjtRQUFwRCw0QkFBQSxFQUFBLGlCQUF5QjtRQUFFLDBCQUFBLEVBQUEsZ0JBQXlCOztZQUMxRSxpQkFBaUIsR0FBRyxFQUFFO1FBQzFCLElBQUksVUFBVSxFQUFFO1lBQ1osaUJBQWlCLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUM7Z0JBQ2hHLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ3REO1FBQ0QsT0FBTyxpQkFBaUIsQ0FBQztJQUM3QixDQUFDOztnQkFaSixJQUFJLFNBQUM7b0JBQ0YsSUFBSSxFQUFFLGFBQWE7aUJBQ3RCOztJQVlELHNCQUFDO0NBQUEsQUFkRCxJQWNDO1NBWFksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdmb3JtYXRTcGFjZSdcbn0pXG5leHBvcnQgY2xhc3MgRm9ybWF0U3BhY2VQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG5cbiAgICB0cmFuc2Zvcm0oaW5wdXRWYWx1ZTogc3RyaW5nLCByZXBsYWNlQ2hhcjogc3RyaW5nID0gJ18nLCBsb3dlckNhc2U6IGJvb2xlYW4gPSB0cnVlKTogc3RyaW5nIHtcbiAgICAgICAgbGV0IHRyYW5zZm9ybWVkU3RyaW5nID0gJyc7XG4gICAgICAgIGlmIChpbnB1dFZhbHVlKSB7XG4gICAgICAgICAgICB0cmFuc2Zvcm1lZFN0cmluZyA9IGxvd2VyQ2FzZSA/IGlucHV0VmFsdWUudHJpbSgpLnNwbGl0KCcgJykuam9pbihyZXBsYWNlQ2hhcikudG9Mb2NhbGVMb3dlckNhc2UoKSA6XG4gICAgICAgICAgICAgICAgaW5wdXRWYWx1ZS50cmltKCkuc3BsaXQoJyAnKS5qb2luKHJlcGxhY2VDaGFyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtZWRTdHJpbmc7XG4gICAgfVxuXG59XG4iXX0=