/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileUploadStatus } from '../models/file.model';
var FileUploadEvent = /** @class */ (function () {
    function FileUploadEvent(file, status, error) {
        if (status === void 0) { status = FileUploadStatus.Pending; }
        if (error === void 0) { error = null; }
        this.file = file;
        this.status = status;
        this.error = error;
    }
    return FileUploadEvent;
}());
export { FileUploadEvent };
if (false) {
    /** @type {?} */
    FileUploadEvent.prototype.file;
    /** @type {?} */
    FileUploadEvent.prototype.status;
    /** @type {?} */
    FileUploadEvent.prototype.error;
}
var FileUploadCompleteEvent = /** @class */ (function (_super) {
    tslib_1.__extends(FileUploadCompleteEvent, _super);
    function FileUploadCompleteEvent(file, totalComplete, data, totalAborted) {
        if (totalComplete === void 0) { totalComplete = 0; }
        if (totalAborted === void 0) { totalAborted = 0; }
        var _this = _super.call(this, file, FileUploadStatus.Complete) || this;
        _this.totalComplete = totalComplete;
        _this.data = data;
        _this.totalAborted = totalAborted;
        return _this;
    }
    return FileUploadCompleteEvent;
}(FileUploadEvent));
export { FileUploadCompleteEvent };
if (false) {
    /** @type {?} */
    FileUploadCompleteEvent.prototype.totalComplete;
    /** @type {?} */
    FileUploadCompleteEvent.prototype.data;
    /** @type {?} */
    FileUploadCompleteEvent.prototype.totalAborted;
}
var FileUploadDeleteEvent = /** @class */ (function (_super) {
    tslib_1.__extends(FileUploadDeleteEvent, _super);
    function FileUploadDeleteEvent(file, totalComplete) {
        if (totalComplete === void 0) { totalComplete = 0; }
        var _this = _super.call(this, file, FileUploadStatus.Deleted) || this;
        _this.totalComplete = totalComplete;
        return _this;
    }
    return FileUploadDeleteEvent;
}(FileUploadEvent));
export { FileUploadDeleteEvent };
if (false) {
    /** @type {?} */
    FileUploadDeleteEvent.prototype.totalComplete;
}
var FileUploadErrorEvent = /** @class */ (function (_super) {
    tslib_1.__extends(FileUploadErrorEvent, _super);
    function FileUploadErrorEvent(file, error, totalError) {
        if (totalError === void 0) { totalError = 0; }
        var _this = _super.call(this, file, FileUploadStatus.Error) || this;
        _this.error = error;
        _this.totalError = totalError;
        return _this;
    }
    return FileUploadErrorEvent;
}(FileUploadEvent));
export { FileUploadErrorEvent };
if (false) {
    /** @type {?} */
    FileUploadErrorEvent.prototype.error;
    /** @type {?} */
    FileUploadErrorEvent.prototype.totalError;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS5ldmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImV2ZW50cy9maWxlLmV2ZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQWEsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVuRTtJQUVJLHlCQUNvQixJQUFlLEVBQ2YsTUFBbUQsRUFDbkQsS0FBaUI7UUFEakIsdUJBQUEsRUFBQSxTQUEyQixnQkFBZ0IsQ0FBQyxPQUFPO1FBQ25ELHNCQUFBLEVBQUEsWUFBaUI7UUFGakIsU0FBSSxHQUFKLElBQUksQ0FBVztRQUNmLFdBQU0sR0FBTixNQUFNLENBQTZDO1FBQ25ELFVBQUssR0FBTCxLQUFLLENBQVk7SUFDckMsQ0FBQztJQUVMLHNCQUFDO0FBQUQsQ0FBQyxBQVJELElBUUM7Ozs7SUFMTywrQkFBK0I7O0lBQy9CLGlDQUFtRTs7SUFDbkUsZ0NBQWlDOztBQUt6QztJQUE2QyxtREFBZTtJQUV4RCxpQ0FBWSxJQUFlLEVBQVMsYUFBeUIsRUFBUyxJQUFVLEVBQVMsWUFBd0I7UUFBN0UsOEJBQUEsRUFBQSxpQkFBeUI7UUFBNEIsNkJBQUEsRUFBQSxnQkFBd0I7UUFBakgsWUFDSSxrQkFBTSxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLFNBQ3pDO1FBRm1DLG1CQUFhLEdBQWIsYUFBYSxDQUFZO1FBQVMsVUFBSSxHQUFKLElBQUksQ0FBTTtRQUFTLGtCQUFZLEdBQVosWUFBWSxDQUFZOztJQUVqSCxDQUFDO0lBRUwsOEJBQUM7QUFBRCxDQUFDLEFBTkQsQ0FBNkMsZUFBZSxHQU0zRDs7OztJQUpnQyxnREFBZ0M7O0lBQUUsdUNBQWlCOztJQUFFLCtDQUErQjs7QUFNckg7SUFBMkMsaURBQWU7SUFFdEQsK0JBQVksSUFBZSxFQUFTLGFBQXlCO1FBQXpCLDhCQUFBLEVBQUEsaUJBQXlCO1FBQTdELFlBQ0ksa0JBQU0sSUFBSSxFQUFFLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxTQUN4QztRQUZtQyxtQkFBYSxHQUFiLGFBQWEsQ0FBWTs7SUFFN0QsQ0FBQztJQUVMLDRCQUFDO0FBQUQsQ0FBQyxBQU5ELENBQTJDLGVBQWUsR0FNekQ7Ozs7SUFKZ0MsOENBQWdDOztBQU1qRTtJQUEwQyxnREFBZTtJQUVyRCw4QkFBWSxJQUFlLEVBQVMsS0FBVSxFQUFTLFVBQXNCO1FBQXRCLDJCQUFBLEVBQUEsY0FBc0I7UUFBN0UsWUFDSSxrQkFBTSxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLFNBQ3RDO1FBRm1DLFdBQUssR0FBTCxLQUFLLENBQUs7UUFBUyxnQkFBVSxHQUFWLFVBQVUsQ0FBWTs7SUFFN0UsQ0FBQztJQUVMLDJCQUFDO0FBQUQsQ0FBQyxBQU5ELENBQTBDLGVBQWUsR0FNeEQ7Ozs7SUFKZ0MscUNBQWlCOztJQUFFLDBDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEZpbGVNb2RlbCwgRmlsZVVwbG9hZFN0YXR1cyB9IGZyb20gJy4uL21vZGVscy9maWxlLm1vZGVsJztcblxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWRFdmVudCB7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IGZpbGU6IEZpbGVNb2RlbCxcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IHN0YXR1czogRmlsZVVwbG9hZFN0YXR1cyA9IEZpbGVVcGxvYWRTdGF0dXMuUGVuZGluZyxcbiAgICAgICAgcHVibGljIHJlYWRvbmx5IGVycm9yOiBhbnkgPSBudWxsKSB7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkQ29tcGxldGVFdmVudCBleHRlbmRzIEZpbGVVcGxvYWRFdmVudCB7XG5cbiAgICBjb25zdHJ1Y3RvcihmaWxlOiBGaWxlTW9kZWwsIHB1YmxpYyB0b3RhbENvbXBsZXRlOiBudW1iZXIgPSAwLCBwdWJsaWMgZGF0YT86IGFueSwgcHVibGljIHRvdGFsQWJvcnRlZDogbnVtYmVyID0gMCkge1xuICAgICAgICBzdXBlcihmaWxlLCBGaWxlVXBsb2FkU3RhdHVzLkNvbXBsZXRlKTtcbiAgICB9XG5cbn1cblxuZXhwb3J0IGNsYXNzIEZpbGVVcGxvYWREZWxldGVFdmVudCBleHRlbmRzIEZpbGVVcGxvYWRFdmVudCB7XG5cbiAgICBjb25zdHJ1Y3RvcihmaWxlOiBGaWxlTW9kZWwsIHB1YmxpYyB0b3RhbENvbXBsZXRlOiBudW1iZXIgPSAwKSB7XG4gICAgICAgIHN1cGVyKGZpbGUsIEZpbGVVcGxvYWRTdGF0dXMuRGVsZXRlZCk7XG4gICAgfVxuXG59XG5cbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkRXJyb3JFdmVudCBleHRlbmRzIEZpbGVVcGxvYWRFdmVudCB7XG5cbiAgICBjb25zdHJ1Y3RvcihmaWxlOiBGaWxlTW9kZWwsIHB1YmxpYyBlcnJvcjogYW55LCBwdWJsaWMgdG90YWxFcnJvcjogbnVtYmVyID0gMCkge1xuICAgICAgICBzdXBlcihmaWxlLCBGaWxlVXBsb2FkU3RhdHVzLkVycm9yKTtcbiAgICB9XG5cbn1cbiJdfQ==