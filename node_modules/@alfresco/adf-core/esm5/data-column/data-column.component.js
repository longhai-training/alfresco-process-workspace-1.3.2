/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector no-input-rename  */
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
var DataColumnComponent = /** @class */ (function () {
    function DataColumnComponent() {
        /**
         * Value type for the column. Possible settings are 'text', 'image',
         * 'date', 'fileSize', 'location', and 'json'.
         */
        this.type = 'text';
        /**
         * Toggles ability to sort by this column, for example by clicking the column header.
         */
        this.sortable = true;
        /**
         * Display title of the column, typically used for column headers. You can use the
         * i18n resource key to get it translated automatically.
         */
        this.title = '';
    }
    /**
     * @return {?}
     */
    DataColumnComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.srTitle && this.key === '$thumbnail') {
            this.srTitle = 'Thumbnail';
        }
    };
    DataColumnComponent.decorators = [
        { type: Component, args: [{
                    selector: 'data-column',
                    template: ''
                }] }
    ];
    DataColumnComponent.propDecorators = {
        key: [{ type: Input }],
        type: [{ type: Input }],
        format: [{ type: Input }],
        sortable: [{ type: Input }],
        title: [{ type: Input }],
        template: [{ type: ContentChild, args: [TemplateRef,] }],
        formatTooltip: [{ type: Input }],
        srTitle: [{ type: Input, args: ['sr-title',] }],
        cssClass: [{ type: Input, args: ['class',] }],
        copyContent: [{ type: Input }]
    };
    return DataColumnComponent;
}());
export { DataColumnComponent };
if (false) {
    /**
     * Data source key. Can be either a column/property key like `title`
     *  or a property path like `createdBy.name`.
     * @type {?}
     */
    DataColumnComponent.prototype.key;
    /**
     * Value type for the column. Possible settings are 'text', 'image',
     * 'date', 'fileSize', 'location', and 'json'.
     * @type {?}
     */
    DataColumnComponent.prototype.type;
    /**
     * Value format (if supported by the parent component), for example format of the date.
     * @type {?}
     */
    DataColumnComponent.prototype.format;
    /**
     * Toggles ability to sort by this column, for example by clicking the column header.
     * @type {?}
     */
    DataColumnComponent.prototype.sortable;
    /**
     * Display title of the column, typically used for column headers. You can use the
     * i18n resource key to get it translated automatically.
     * @type {?}
     */
    DataColumnComponent.prototype.title;
    /** @type {?} */
    DataColumnComponent.prototype.template;
    /**
     * Custom tooltip formatter function.
     * @type {?}
     */
    DataColumnComponent.prototype.formatTooltip;
    /**
     * Title to be used for screen readers.
     * @type {?}
     */
    DataColumnComponent.prototype.srTitle;
    /**
     * Additional CSS class to be applied to column (header and cells).
     * @type {?}
     */
    DataColumnComponent.prototype.cssClass;
    /**
     * Enables/disables a Clipboard directive to allow copying of cell contents.
     * @type {?}
     */
    DataColumnComponent.prototype.copyContent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsiZGF0YS1jb2x1bW4vZGF0YS1jb2x1bW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXBGO0lBQUE7Ozs7O1FBZ0JJLFNBQUksR0FBVyxNQUFNLENBQUM7Ozs7UUFRdEIsYUFBUSxHQUFZLElBQUksQ0FBQzs7Ozs7UUFNekIsVUFBSyxHQUFXLEVBQUUsQ0FBQztJQTBCdkIsQ0FBQzs7OztJQUxHLHNDQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssWUFBWSxFQUFFO1lBQzVDLElBQUksQ0FBQyxPQUFPLEdBQUcsV0FBVyxDQUFDO1NBQzlCO0lBQ0wsQ0FBQzs7Z0JBdkRKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsUUFBUSxFQUFFLEVBQUU7aUJBQ2Y7OztzQkFNSSxLQUFLO3VCQU1MLEtBQUs7eUJBSUwsS0FBSzsyQkFJTCxLQUFLO3dCQU1MLEtBQUs7MkJBR0wsWUFBWSxTQUFDLFdBQVc7Z0NBSXhCLEtBQUs7MEJBSUwsS0FBSyxTQUFDLFVBQVU7MkJBSWhCLEtBQUssU0FBQyxPQUFPOzhCQUliLEtBQUs7O0lBUVYsMEJBQUM7Q0FBQSxBQXhERCxJQXdEQztTQXBEWSxtQkFBbUI7Ozs7Ozs7SUFLNUIsa0NBQ1k7Ozs7OztJQUtaLG1DQUNzQjs7Ozs7SUFHdEIscUNBQ2U7Ozs7O0lBR2YsdUNBQ3lCOzs7Ozs7SUFLekIsb0NBQ21COztJQUVuQix1Q0FDYzs7Ozs7SUFHZCw0Q0FDd0I7Ozs7O0lBR3hCLHNDQUNnQjs7Ozs7SUFHaEIsdUNBQ2lCOzs7OztJQUdqQiwwQ0FDcUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4gLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yIG5vLWlucHV0LXJlbmFtZSAgKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZGF0YS1jb2x1bW4nLFxuICAgIHRlbXBsYXRlOiAnJ1xufSlcbmV4cG9ydCBjbGFzcyBEYXRhQ29sdW1uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICAgIC8qKiBEYXRhIHNvdXJjZSBrZXkuIENhbiBiZSBlaXRoZXIgYSBjb2x1bW4vcHJvcGVydHkga2V5IGxpa2UgYHRpdGxlYFxuICAgICAqICBvciBhIHByb3BlcnR5IHBhdGggbGlrZSBgY3JlYXRlZEJ5Lm5hbWVgLlxuICAgICAqL1xuICAgIEBJbnB1dCgpXG4gICAga2V5OiBzdHJpbmc7XG5cbiAgICAvKiogVmFsdWUgdHlwZSBmb3IgdGhlIGNvbHVtbi4gUG9zc2libGUgc2V0dGluZ3MgYXJlICd0ZXh0JywgJ2ltYWdlJyxcbiAgICAgKiAnZGF0ZScsICdmaWxlU2l6ZScsICdsb2NhdGlvbicsIGFuZCAnanNvbicuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICB0eXBlOiBzdHJpbmcgPSAndGV4dCc7XG5cbiAgICAvKiogVmFsdWUgZm9ybWF0IChpZiBzdXBwb3J0ZWQgYnkgdGhlIHBhcmVudCBjb21wb25lbnQpLCBmb3IgZXhhbXBsZSBmb3JtYXQgb2YgdGhlIGRhdGUuICovXG4gICAgQElucHV0KClcbiAgICBmb3JtYXQ6IHN0cmluZztcblxuICAgIC8qKiBUb2dnbGVzIGFiaWxpdHkgdG8gc29ydCBieSB0aGlzIGNvbHVtbiwgZm9yIGV4YW1wbGUgYnkgY2xpY2tpbmcgdGhlIGNvbHVtbiBoZWFkZXIuICovXG4gICAgQElucHV0KClcbiAgICBzb3J0YWJsZTogYm9vbGVhbiA9IHRydWU7XG5cbiAgICAvKiogRGlzcGxheSB0aXRsZSBvZiB0aGUgY29sdW1uLCB0eXBpY2FsbHkgdXNlZCBmb3IgY29sdW1uIGhlYWRlcnMuIFlvdSBjYW4gdXNlIHRoZVxuICAgICAqIGkxOG4gcmVzb3VyY2Uga2V5IHRvIGdldCBpdCB0cmFuc2xhdGVkIGF1dG9tYXRpY2FsbHkuXG4gICAgICovXG4gICAgQElucHV0KClcbiAgICB0aXRsZTogc3RyaW5nID0gJyc7XG5cbiAgICBAQ29udGVudENoaWxkKFRlbXBsYXRlUmVmKVxuICAgIHRlbXBsYXRlOiBhbnk7XG5cbiAgICAvKiogQ3VzdG9tIHRvb2x0aXAgZm9ybWF0dGVyIGZ1bmN0aW9uLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgZm9ybWF0VG9vbHRpcDogRnVuY3Rpb247XG5cbiAgICAvKiogVGl0bGUgdG8gYmUgdXNlZCBmb3Igc2NyZWVuIHJlYWRlcnMuICovXG4gICAgQElucHV0KCdzci10aXRsZScpXG4gICAgc3JUaXRsZTogc3RyaW5nO1xuXG4gICAgLyoqIEFkZGl0aW9uYWwgQ1NTIGNsYXNzIHRvIGJlIGFwcGxpZWQgdG8gY29sdW1uIChoZWFkZXIgYW5kIGNlbGxzKS4gKi9cbiAgICBASW5wdXQoJ2NsYXNzJylcbiAgICBjc3NDbGFzczogc3RyaW5nO1xuXG4gICAgIC8qKiBFbmFibGVzL2Rpc2FibGVzIGEgQ2xpcGJvYXJkIGRpcmVjdGl2ZSB0byBhbGxvdyBjb3B5aW5nIG9mIGNlbGwgY29udGVudHMuICovXG4gICAgQElucHV0KClcbiAgICBjb3B5Q29udGVudDogYm9vbGVhbjtcblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICBpZiAoIXRoaXMuc3JUaXRsZSAmJiB0aGlzLmtleSA9PT0gJyR0aHVtYm5haWwnKSB7XG4gICAgICAgICAgICB0aGlzLnNyVGl0bGUgPSAnVGh1bWJuYWlsJztcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==