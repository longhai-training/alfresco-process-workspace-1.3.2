/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FormModel } from '../../form/components/widgets/core/index';
/** @type {?} */
export var formTest = new FormModel({});
/** @type {?} */
export var fakeTaskProcessVariableModels = [
    { id: 'TEST_VAR_1', type: 'string', value: 'test_value_1' },
    { id: 'TEST_VAR_2', type: 'string', value: 'test_value_2' },
    { id: 'TEST_VAR_3', type: 'string', value: 'test_value_3' }
];
/** @type {?} */
export var formValues = {
    'test_1': 'value_1',
    'test_2': 'value_2',
    'test_3': 'value_1',
    'test_4': 'dropdown_id',
    'test_5': 'dropdown_label',
    'dropdown': { 'id': 'dropdown_id', 'name': 'dropdown_label' }
};
/** @type {?} */
export var fakeFormJson = {
    id: '9999',
    name: 'FORM_VISIBILITY',
    processDefinitionId: 'PROCESS_TEST:9:9999',
    processDefinitionName: 'PROCESS_TEST',
    processDefinitionKey: 'PROCESS_TEST',
    taskId: '999',
    taskName: 'TEST',
    fields: [
        {
            fieldType: 'ContainerRepresentation',
            id: '000000000000000000',
            name: 'Label',
            type: 'container',
            value: null,
            numberOfColumns: 2,
            fields: {
                1: [
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'FIELD_TEST',
                        name: 'FIELD_TEST',
                        type: 'text',
                        value: 'RIGHT_FORM_FIELD_VALUE',
                        visibilityCondition: null,
                        isVisible: true
                    },
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'FIELD_WITH_CONDITION',
                        name: 'FIELD_WITH_CONDITION',
                        type: 'text',
                        value: 'field_with_condition_value',
                        visibilityCondition: null,
                        isVisible: true
                    },
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'LEFT_FORM_FIELD_ID',
                        name: 'LEFT_FORM_FIELD_NAME',
                        type: 'text',
                        value: 'LEFT_FORM_FIELD_VALUE',
                        visibilityCondition: null,
                        isVisible: true
                    }
                ],
                2: [
                    {
                        fieldType: 'FormFieldRepresentation',
                        id: 'RIGHT_FORM_FIELD_ID',
                        name: 'RIGHT_FORM_FIELD_NAME',
                        type: 'text',
                        value: 'RIGHT_FORM_FIELD_VALUE',
                        visibilityCondition: null,
                        isVisible: true
                    }
                ]
            }
        }
    ]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0LXZpc2liaWxpdHkuc2VydmljZS5tb2NrLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsibW9jay9mb3JtL3dpZGdldC12aXNpYmlsaXR5LnNlcnZpY2UubW9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFjLE1BQU0sMENBQTBDLENBQUM7O0FBRWpGLE1BQU0sS0FBSyxRQUFRLEdBQUcsSUFBSSxTQUFTLENBQUMsRUFBRSxDQUFDOztBQUV2QyxNQUFNLEtBQUssNkJBQTZCLEdBQUc7SUFDdkMsRUFBQyxFQUFFLEVBQUUsWUFBWSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLGNBQWMsRUFBQztJQUN6RCxFQUFDLEVBQUUsRUFBRSxZQUFZLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFDO0lBQ3pELEVBQUMsRUFBRSxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUM7Q0FDNUQ7O0FBRUQsTUFBTSxLQUFLLFVBQVUsR0FBZTtJQUNoQyxRQUFRLEVBQUUsU0FBUztJQUNuQixRQUFRLEVBQUUsU0FBUztJQUNuQixRQUFRLEVBQUUsU0FBUztJQUNuQixRQUFRLEVBQUUsYUFBYTtJQUN2QixRQUFRLEVBQUUsZ0JBQWdCO0lBQzFCLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFDO0NBQzlEOztBQUVELE1BQU0sS0FBSyxZQUFZLEdBQUc7SUFDdEIsRUFBRSxFQUFFLE1BQU07SUFDVixJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLG1CQUFtQixFQUFFLHFCQUFxQjtJQUMxQyxxQkFBcUIsRUFBRSxjQUFjO0lBQ3JDLG9CQUFvQixFQUFFLGNBQWM7SUFDcEMsTUFBTSxFQUFFLEtBQUs7SUFDYixRQUFRLEVBQUUsTUFBTTtJQUNoQixNQUFNLEVBQUU7UUFDSjtZQUNJLFNBQVMsRUFBRSx5QkFBeUI7WUFDcEMsRUFBRSxFQUFFLG9CQUFvQjtZQUN4QixJQUFJLEVBQUUsT0FBTztZQUNiLElBQUksRUFBRSxXQUFXO1lBQ2pCLEtBQUssRUFBRSxJQUFJO1lBQ1gsZUFBZSxFQUFFLENBQUM7WUFDbEIsTUFBTSxFQUFFO2dCQUNKLENBQUMsRUFBRTtvQkFDQzt3QkFDSSxTQUFTLEVBQUUseUJBQXlCO3dCQUNwQyxFQUFFLEVBQUUsWUFBWTt3QkFDaEIsSUFBSSxFQUFFLFlBQVk7d0JBQ2xCLElBQUksRUFBRSxNQUFNO3dCQUNaLEtBQUssRUFBRSx3QkFBd0I7d0JBQy9CLG1CQUFtQixFQUFFLElBQUk7d0JBQ3pCLFNBQVMsRUFBRSxJQUFJO3FCQUNsQjtvQkFDRDt3QkFDSSxTQUFTLEVBQUUseUJBQXlCO3dCQUNwQyxFQUFFLEVBQUUsc0JBQXNCO3dCQUMxQixJQUFJLEVBQUUsc0JBQXNCO3dCQUM1QixJQUFJLEVBQUUsTUFBTTt3QkFDWixLQUFLLEVBQUUsNEJBQTRCO3dCQUNuQyxtQkFBbUIsRUFBRSxJQUFJO3dCQUN6QixTQUFTLEVBQUUsSUFBSTtxQkFDbEI7b0JBQ0Q7d0JBQ0ksU0FBUyxFQUFFLHlCQUF5Qjt3QkFDcEMsRUFBRSxFQUFFLG9CQUFvQjt3QkFDeEIsSUFBSSxFQUFFLHNCQUFzQjt3QkFDNUIsSUFBSSxFQUFFLE1BQU07d0JBQ1osS0FBSyxFQUFFLHVCQUF1Qjt3QkFDOUIsbUJBQW1CLEVBQUUsSUFBSTt3QkFDekIsU0FBUyxFQUFFLElBQUk7cUJBQ2xCO2lCQUNKO2dCQUNELENBQUMsRUFBRTtvQkFDQzt3QkFDSSxTQUFTLEVBQUUseUJBQXlCO3dCQUNwQyxFQUFFLEVBQUUscUJBQXFCO3dCQUN6QixJQUFJLEVBQUUsdUJBQXVCO3dCQUM3QixJQUFJLEVBQUUsTUFBTTt3QkFDWixLQUFLLEVBQUUsd0JBQXdCO3dCQUMvQixtQkFBbUIsRUFBRSxJQUFJO3dCQUN6QixTQUFTLEVBQUUsSUFBSTtxQkFDbEI7aUJBQ0o7YUFDSjtTQUNKO0tBQ0o7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEZvcm1Nb2RlbCwgRm9ybVZhbHVlcyB9IGZyb20gJy4uLy4uL2Zvcm0vY29tcG9uZW50cy93aWRnZXRzL2NvcmUvaW5kZXgnO1xuXG5leHBvcnQgbGV0IGZvcm1UZXN0ID0gbmV3IEZvcm1Nb2RlbCh7fSk7XG5cbmV4cG9ydCBsZXQgZmFrZVRhc2tQcm9jZXNzVmFyaWFibGVNb2RlbHMgPSBbXG4gICAge2lkOiAnVEVTVF9WQVJfMScsIHR5cGU6ICdzdHJpbmcnLCB2YWx1ZTogJ3Rlc3RfdmFsdWVfMSd9LFxuICAgIHtpZDogJ1RFU1RfVkFSXzInLCB0eXBlOiAnc3RyaW5nJywgdmFsdWU6ICd0ZXN0X3ZhbHVlXzInfSxcbiAgICB7aWQ6ICdURVNUX1ZBUl8zJywgdHlwZTogJ3N0cmluZycsIHZhbHVlOiAndGVzdF92YWx1ZV8zJ31cbl07XG5cbmV4cG9ydCBsZXQgZm9ybVZhbHVlczogRm9ybVZhbHVlcyA9IHtcbiAgICAndGVzdF8xJzogJ3ZhbHVlXzEnLFxuICAgICd0ZXN0XzInOiAndmFsdWVfMicsXG4gICAgJ3Rlc3RfMyc6ICd2YWx1ZV8xJyxcbiAgICAndGVzdF80JzogJ2Ryb3Bkb3duX2lkJyxcbiAgICAndGVzdF81JzogJ2Ryb3Bkb3duX2xhYmVsJyxcbiAgICAnZHJvcGRvd24nOiB7J2lkJzogJ2Ryb3Bkb3duX2lkJywgJ25hbWUnOiAnZHJvcGRvd25fbGFiZWwnfVxufTtcblxuZXhwb3J0IGxldCBmYWtlRm9ybUpzb24gPSB7XG4gICAgaWQ6ICc5OTk5JyxcbiAgICBuYW1lOiAnRk9STV9WSVNJQklMSVRZJyxcbiAgICBwcm9jZXNzRGVmaW5pdGlvbklkOiAnUFJPQ0VTU19URVNUOjk6OTk5OScsXG4gICAgcHJvY2Vzc0RlZmluaXRpb25OYW1lOiAnUFJPQ0VTU19URVNUJyxcbiAgICBwcm9jZXNzRGVmaW5pdGlvbktleTogJ1BST0NFU1NfVEVTVCcsXG4gICAgdGFza0lkOiAnOTk5JyxcbiAgICB0YXNrTmFtZTogJ1RFU1QnLFxuICAgIGZpZWxkczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBmaWVsZFR5cGU6ICdDb250YWluZXJSZXByZXNlbnRhdGlvbicsXG4gICAgICAgICAgICBpZDogJzAwMDAwMDAwMDAwMDAwMDAwMCcsXG4gICAgICAgICAgICBuYW1lOiAnTGFiZWwnLFxuICAgICAgICAgICAgdHlwZTogJ2NvbnRhaW5lcicsXG4gICAgICAgICAgICB2YWx1ZTogbnVsbCxcbiAgICAgICAgICAgIG51bWJlck9mQ29sdW1uczogMixcbiAgICAgICAgICAgIGZpZWxkczoge1xuICAgICAgICAgICAgICAgIDE6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmllbGRUeXBlOiAnRm9ybUZpZWxkUmVwcmVzZW50YXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICdGSUVMRF9URVNUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdGSUVMRF9URVNUJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnUklHSFRfRk9STV9GSUVMRF9WQUxVRScsXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5Q29uZGl0aW9uOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNWaXNpYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkVHlwZTogJ0Zvcm1GaWVsZFJlcHJlc2VudGF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAnRklFTERfV0lUSF9DT05ESVRJT04nLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0ZJRUxEX1dJVEhfQ09ORElUSU9OJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnZmllbGRfd2l0aF9jb25kaXRpb25fdmFsdWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eUNvbmRpdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzVmlzaWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZFR5cGU6ICdGb3JtRmllbGRSZXByZXNlbnRhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogJ0xFRlRfRk9STV9GSUVMRF9JRCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnTEVGVF9GT1JNX0ZJRUxEX05BTUUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdMRUZUX0ZPUk1fRklFTERfVkFMVUUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmlzaWJpbGl0eUNvbmRpdGlvbjogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzVmlzaWJsZTogdHJ1ZVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAyOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkVHlwZTogJ0Zvcm1GaWVsZFJlcHJlc2VudGF0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAnUklHSFRfRk9STV9GSUVMRF9JRCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnUklHSFRfRk9STV9GSUVMRF9OQU1FJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnUklHSFRfRk9STV9GSUVMRF9WQUxVRScsXG4gICAgICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5Q29uZGl0aW9uOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNWaXNpYmxlOiB0cnVlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBdXG59O1xuIl19