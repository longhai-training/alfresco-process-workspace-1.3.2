/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @type {?} */
export var fakeSearch = {
    list: {
        pagination: {
            count: 1,
            hasMoreItems: false,
            totalItems: 1,
            skipCount: 0,
            maxItems: 100
        },
        entries: [
            {
                entry: {
                    id: '123',
                    name: 'MyDoc',
                    content: {
                        mimetype: 'text/plain'
                    },
                    createdByUser: {
                        displayName: 'John Doe'
                    },
                    modifiedByUser: {
                        displayName: 'John Doe'
                    }
                }
            }
        ]
    }
};
/** @type {?} */
export var mockError = {
    error: {
        errorKey: 'Search failed',
        statusCode: 400,
        briefSummary: '08220082 search failed',
        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',
        descriptionURL: 'https://api-explorer.alfresco.com'
    }
};
/** @type {?} */
export var searchMockApi = {
    core: {
        queriesApi: {
            findNodes: (/**
             * @param {?} term
             * @param {?} opts
             * @return {?}
             */
            function (term, opts) { return Promise.resolve(fakeSearch); })
        }
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLnNlcnZpY2UubW9jay5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbIm1vY2svc2VhcmNoLnNlcnZpY2UubW9jay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsTUFBTSxLQUFLLFVBQVUsR0FBRztJQUNwQixJQUFJLEVBQUU7UUFDRixVQUFVLEVBQUU7WUFDUixLQUFLLEVBQUUsQ0FBQztZQUNSLFlBQVksRUFBRSxLQUFLO1lBQ25CLFVBQVUsRUFBRSxDQUFDO1lBQ2IsU0FBUyxFQUFFLENBQUM7WUFDWixRQUFRLEVBQUUsR0FBRztTQUNoQjtRQUNELE9BQU8sRUFBRTtZQUNMO2dCQUNJLEtBQUssRUFBRTtvQkFDSCxFQUFFLEVBQUUsS0FBSztvQkFDVCxJQUFJLEVBQUUsT0FBTztvQkFDYixPQUFPLEVBQUU7d0JBQ0wsUUFBUSxFQUFFLFlBQVk7cUJBQ3pCO29CQUNELGFBQWEsRUFBRTt3QkFDWCxXQUFXLEVBQUUsVUFBVTtxQkFDMUI7b0JBQ0QsY0FBYyxFQUFFO3dCQUNaLFdBQVcsRUFBRSxVQUFVO3FCQUMxQjtpQkFDSjthQUNKO1NBQ0o7S0FDSjtDQUNKOztBQUVELE1BQU0sS0FBSyxTQUFTLEdBQUc7SUFDbkIsS0FBSyxFQUFFO1FBQ0gsUUFBUSxFQUFFLGVBQWU7UUFDekIsVUFBVSxFQUFFLEdBQUc7UUFDZixZQUFZLEVBQUUsd0JBQXdCO1FBQ3RDLFVBQVUsRUFBRSw4R0FBOEc7UUFDMUgsY0FBYyxFQUFFLG1DQUFtQztLQUN0RDtDQUNKOztBQUVELE1BQU0sS0FBSyxhQUFhLEdBQUc7SUFDdkIsSUFBSSxFQUFFO1FBQ0YsVUFBVSxFQUFFO1lBQ1IsU0FBUzs7Ozs7WUFBRSxVQUFDLElBQUksRUFBRSxJQUFJLElBQUssT0FBQSxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUEzQixDQUEyQixDQUFBO1NBQ3pEO0tBQ0o7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmV4cG9ydCBsZXQgZmFrZVNlYXJjaCA9IHtcbiAgICBsaXN0OiB7XG4gICAgICAgIHBhZ2luYXRpb246IHtcbiAgICAgICAgICAgIGNvdW50OiAxLFxuICAgICAgICAgICAgaGFzTW9yZUl0ZW1zOiBmYWxzZSxcbiAgICAgICAgICAgIHRvdGFsSXRlbXM6IDEsXG4gICAgICAgICAgICBza2lwQ291bnQ6IDAsXG4gICAgICAgICAgICBtYXhJdGVtczogMTAwXG4gICAgICAgIH0sXG4gICAgICAgIGVudHJpZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBlbnRyeToge1xuICAgICAgICAgICAgICAgICAgICBpZDogJzEyMycsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdNeURvYycsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbWV0eXBlOiAndGV4dC9wbGFpbidcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY3JlYXRlZEJ5VXNlcjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6ICdKb2huIERvZSdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgbW9kaWZpZWRCeVVzZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiAnSm9obiBEb2UnXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9XG59O1xuXG5leHBvcnQgbGV0IG1vY2tFcnJvciA9IHtcbiAgICBlcnJvcjoge1xuICAgICAgICBlcnJvcktleTogJ1NlYXJjaCBmYWlsZWQnLFxuICAgICAgICBzdGF0dXNDb2RlOiA0MDAsXG4gICAgICAgIGJyaWVmU3VtbWFyeTogJzA4MjIwMDgyIHNlYXJjaCBmYWlsZWQnLFxuICAgICAgICBzdGFja1RyYWNlOiAnRm9yIHNlY3VyaXR5IHJlYXNvbnMgdGhlIHN0YWNrIHRyYWNlIGlzIG5vIGxvbmdlciBkaXNwbGF5ZWQsIGJ1dCB0aGUgcHJvcGVydHkgaXMga2VwdCBmb3IgcHJldmlvdXMgdmVyc2lvbnMuJyxcbiAgICAgICAgZGVzY3JpcHRpb25VUkw6ICdodHRwczovL2FwaS1leHBsb3Jlci5hbGZyZXNjby5jb20nXG4gICAgfVxufTtcblxuZXhwb3J0IGxldCBzZWFyY2hNb2NrQXBpID0ge1xuICAgIGNvcmU6IHtcbiAgICAgICAgcXVlcmllc0FwaToge1xuICAgICAgICAgICAgZmluZE5vZGVzOiAodGVybSwgb3B0cykgPT4gUHJvbWlzZS5yZXNvbHZlKGZha2VTZWFyY2gpXG4gICAgICAgIH1cbiAgICB9XG59O1xuIl19