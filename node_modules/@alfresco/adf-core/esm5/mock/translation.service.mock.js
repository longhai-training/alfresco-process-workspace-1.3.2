/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { EventEmitter } from '@angular/core';
import { of } from 'rxjs';
/**
 * @record
 */
export function LangChangeEvent() { }
if (false) {
    /** @type {?} */
    LangChangeEvent.prototype.lang;
    /** @type {?} */
    LangChangeEvent.prototype.translations;
}
var TranslationMock = /** @class */ (function () {
    function TranslationMock() {
        this.defaultLang = 'en';
        this.translate = {
            onLangChange: new EventEmitter()
        };
    }
    /**
     * @return {?}
     */
    TranslationMock.prototype.addTranslationFolder = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    TranslationMock.prototype.onTranslationChanged = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    TranslationMock.prototype.use = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    TranslationMock.prototype.loadTranslation = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} key
     * @param {?=} interpolateParams
     * @return {?}
     */
    TranslationMock.prototype.get = /**
     * @param {?} key
     * @param {?=} interpolateParams
     * @return {?}
     */
    function (key, interpolateParams) {
        return of(key);
    };
    /**
     * @param {?} key
     * @param {?=} interpolateParams
     * @return {?}
     */
    TranslationMock.prototype.instant = /**
     * @param {?} key
     * @param {?=} interpolateParams
     * @return {?}
     */
    function (key, interpolateParams) {
        return key;
    };
    return TranslationMock;
}());
export { TranslationMock };
if (false) {
    /** @type {?} */
    TranslationMock.prototype.defaultLang;
    /** @type {?} */
    TranslationMock.prototype.userLang;
    /** @type {?} */
    TranslationMock.prototype.customLoader;
    /** @type {?} */
    TranslationMock.prototype.translate;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRpb24uc2VydmljZS5tb2NrLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb3JlLyIsInNvdXJjZXMiOlsibW9jay90cmFuc2xhdGlvbi5zZXJ2aWNlLm1vY2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3QyxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDOzs7O0FBR3RDLHFDQUdDOzs7SUFGRywrQkFBYTs7SUFDYix1Q0FBa0I7O0FBR3RCO0lBQUE7UUFFSSxnQkFBVyxHQUFXLElBQUksQ0FBQztRQUkzQixjQUFTLEdBQVE7WUFDYixZQUFZLEVBQUUsSUFBSSxZQUFZLEVBQW1CO1NBQ3BELENBQUM7SUFrQk4sQ0FBQzs7OztJQWhCRyw4Q0FBb0I7OztJQUFwQixjQUF3QixDQUFDOzs7O0lBRXpCLDhDQUFvQjs7O0lBQXBCLGNBQXdCLENBQUM7Ozs7SUFFekIsNkJBQUc7OztJQUFILGNBQVksQ0FBQzs7OztJQUViLHlDQUFlOzs7SUFBZixjQUFtQixDQUFDOzs7Ozs7SUFFcEIsNkJBQUc7Ozs7O0lBQUgsVUFBSSxHQUEyQixFQUFFLGlCQUEwQjtRQUN2RCxPQUFPLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQixDQUFDOzs7Ozs7SUFFRCxpQ0FBTzs7Ozs7SUFBUCxVQUFRLEdBQTJCLEVBQUUsaUJBQTBCO1FBQzNELE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVMLHNCQUFDO0FBQUQsQ0FBQyxBQTFCRCxJQTBCQzs7OztJQXhCRyxzQ0FBMkI7O0lBQzNCLG1DQUFpQjs7SUFDakIsdUNBQWtCOztJQUVsQixvQ0FFRSIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFRyYW5zbGF0aW9uU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3RyYW5zbGF0aW9uLnNlcnZpY2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIExhbmdDaGFuZ2VFdmVudCB7XG4gICAgbGFuZzogc3RyaW5nO1xuICAgIHRyYW5zbGF0aW9uczogYW55O1xufVxuXG5leHBvcnQgY2xhc3MgVHJhbnNsYXRpb25Nb2NrIGltcGxlbWVudHMgVHJhbnNsYXRpb25TZXJ2aWNlIHtcblxuICAgIGRlZmF1bHRMYW5nOiBzdHJpbmcgPSAnZW4nO1xuICAgIHVzZXJMYW5nOiBzdHJpbmc7XG4gICAgY3VzdG9tTG9hZGVyOiBhbnk7XG5cbiAgICB0cmFuc2xhdGU6IGFueSA9IHtcbiAgICAgICAgb25MYW5nQ2hhbmdlOiBuZXcgRXZlbnRFbWl0dGVyPExhbmdDaGFuZ2VFdmVudD4oKVxuICAgIH07XG5cbiAgICBhZGRUcmFuc2xhdGlvbkZvbGRlcigpIHt9XG5cbiAgICBvblRyYW5zbGF0aW9uQ2hhbmdlZCgpIHt9XG5cbiAgICB1c2UoKTogYW55IHt9XG5cbiAgICBsb2FkVHJhbnNsYXRpb24oKSB7fVxuXG4gICAgZ2V0KGtleTogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPiwgaW50ZXJwb2xhdGVQYXJhbXM/OiBPYmplY3QpOiBPYnNlcnZhYmxlPHN0cmluZyB8IGFueT4ge1xuICAgICAgICByZXR1cm4gb2Yoa2V5KTtcbiAgICB9XG5cbiAgICBpbnN0YW50KGtleTogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPiwgaW50ZXJwb2xhdGVQYXJhbXM/OiBPYmplY3QpOiBzdHJpbmcgfCBhbnkge1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgIH1cblxufVxuIl19