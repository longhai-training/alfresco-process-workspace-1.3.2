/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';
var EmptyContentComponent = /** @class */ (function () {
    function EmptyContentComponent() {
        /**
         * Material Icon to use.
         */
        this.icon = 'cake';
        /**
         * String or Resource Key for the title.
         */
        this.title = '';
        /**
         * String or Resource Key for the subtitle.
         */
        this.subtitle = '';
    }
    EmptyContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-empty-content',
                    template: "<div class=\"adf-empty-content\">\n    <mat-icon class=\"adf-empty-content__icon\">{{ icon }}</mat-icon>\n    <div class=\"adf-empty-content__title\">{{ title | translate }}</div>\n    <div class=\"adf-empty-content__subtitle\">{{ subtitle | translate }}</div>\n    <ng-content></ng-content>\n</div>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-empty-content' },
                    styles: [""]
                }] }
    ];
    EmptyContentComponent.propDecorators = {
        icon: [{ type: Input }],
        title: [{ type: Input }],
        subtitle: [{ type: Input }]
    };
    return EmptyContentComponent;
}());
export { EmptyContentComponent };
if (false) {
    /**
     * Material Icon to use.
     * @type {?}
     */
    EmptyContentComponent.prototype.icon;
    /**
     * String or Resource Key for the title.
     * @type {?}
     */
    EmptyContentComponent.prototype.title;
    /**
     * String or Resource Key for the subtitle.
     * @type {?}
     */
    EmptyContentComponent.prototype.subtitle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHktY29udGVudC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJ0ZW1wbGF0ZXMvZW1wdHktY29udGVudC9lbXB0eS1jb250ZW50LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLGlCQUFpQixFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3RjtJQUFBOzs7O1FBWUksU0FBSSxHQUFHLE1BQU0sQ0FBQzs7OztRQUlkLFVBQUssR0FBRyxFQUFFLENBQUM7Ozs7UUFJWCxhQUFRLEdBQUcsRUFBRSxDQUFDO0lBRWxCLENBQUM7O2dCQXRCQSxTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IseVRBQTZDO29CQUU3QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7b0JBQ3JDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxtQkFBbUIsRUFBRTs7aUJBQ3ZDOzs7dUJBSUksS0FBSzt3QkFJTCxLQUFLOzJCQUlMLEtBQUs7O0lBR1YsNEJBQUM7Q0FBQSxBQXRCRCxJQXNCQztTQWRZLHFCQUFxQjs7Ozs7O0lBRzlCLHFDQUNjOzs7OztJQUdkLHNDQUNXOzs7OztJQUdYLHlDQUNjIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLWVtcHR5LWNvbnRlbnQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9lbXB0eS1jb250ZW50LmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9lbXB0eS1jb250ZW50LmNvbXBvbmVudC5zY3NzJ10sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7IGNsYXNzOiAnYWRmLWVtcHR5LWNvbnRlbnQnIH1cbn0pXG5leHBvcnQgY2xhc3MgRW1wdHlDb250ZW50Q29tcG9uZW50IHtcblxuICAgIC8qKiBNYXRlcmlhbCBJY29uIHRvIHVzZS4gKi9cbiAgICBASW5wdXQoKVxuICAgIGljb24gPSAnY2FrZSc7XG5cbiAgICAvKiogU3RyaW5nIG9yIFJlc291cmNlIEtleSBmb3IgdGhlIHRpdGxlLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdGl0bGUgPSAnJztcblxuICAgIC8qKiBTdHJpbmcgb3IgUmVzb3VyY2UgS2V5IGZvciB0aGUgc3VidGl0bGUuICovXG4gICAgQElucHV0KClcbiAgICBzdWJ0aXRsZSA9ICcnO1xuXG59XG4iXX0=