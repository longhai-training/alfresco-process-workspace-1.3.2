{"version":3,"file":"adf-core.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-core/utils/object-utils.ts","ng://@alfresco/adf-core/app-config/app-config.service.ts","ng://@alfresco/adf-core/services/alfresco-api.service.ts","ng://@alfresco/adf-core/services/cookie.service.ts","ng://@alfresco/adf-core/models/log-levels.model.ts","ng://@alfresco/adf-core/services/log.service.ts","ng://@alfresco/adf-core/services/authentication.service.ts","ng://@alfresco/adf-core/models/product-version.model.ts","ng://@alfresco/adf-core/services/discovery-api.service.ts","ng://@alfresco/adf-core/utils/file-utils.ts","ng://@alfresco/adf-core/utils/moment-date-formats.model.ts","ng://@alfresco/adf-core/utils/momentDateAdapter.ts","ng://@alfresco/adf-core/datatable/data/object-datarow.model.ts","ng://@alfresco/adf-core/datatable/data/object-datacolumn.model.ts","ng://@alfresco/adf-core/datatable/data/data-sorting.model.ts","ng://@alfresco/adf-core/datatable/data/object-datatable-adapter.ts","ng://@alfresco/adf-core/about/about.component.ts","ng://@alfresco/adf-core/material.module.ts","ng://@alfresco/adf-core/context-menu/context-menu.service.ts","ng://@alfresco/adf-core/context-menu/context-menu-holder.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.ts","ng://@alfresco/adf-core/context-menu/context-menu.tokens.ts","ng://@alfresco/adf-core/context-menu/animations.ts","ng://@alfresco/adf-core/context-menu/context-menu-list.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.service.ts","ng://@alfresco/adf-core/context-menu/context-menu.directive.ts","ng://@alfresco/adf-core/context-menu/context-menu.module.ts","ng://@alfresco/adf-core/services/storage.service.ts","ng://@alfresco/adf-core/services/user-preferences.service.ts","ng://@alfresco/adf-core/services/translation.service.ts","ng://@alfresco/adf-core/pipes/file-size.pipe.ts","ng://@alfresco/adf-core/models/permissions.enum.ts","ng://@alfresco/adf-core/models/allowable-operations.enum.ts","ng://@alfresco/adf-core/services/content.service.ts","ng://@alfresco/adf-core/services/thumbnail.service.ts","ng://@alfresco/adf-core/pipes/mime-type-icon.pipe.ts","ng://@alfresco/adf-core/pipes/node-name-tooltip.pipe.ts","ng://@alfresco/adf-core/services/highlight-transform.service.ts","ng://@alfresco/adf-core/pipes/text-highlight.pipe.ts","ng://@alfresco/adf-core/pipes/time-ago.pipe.ts","ng://@alfresco/adf-core/pipes/user-initial.pipe.ts","ng://@alfresco/adf-core/pipes/full-name.pipe.ts","ng://@alfresco/adf-core/pipes/format-space.pipe.ts","ng://@alfresco/adf-core/pipes/file-type.pipe.ts","ng://@alfresco/adf-core/pipes/multi-value.pipe.ts","ng://@alfresco/adf-core/pipes/pipe.module.ts","ng://@alfresco/adf-core/directives/highlight.directive.ts","ng://@alfresco/adf-core/directives/logout.directive.ts","ng://@alfresco/adf-core/directives/node-delete.directive.ts","ng://@alfresco/adf-core/directives/node-favorite.directive.ts","ng://@alfresco/adf-core/interface/injection.tokens.ts","ng://@alfresco/adf-core/directives/check-allowable-operation.directive.ts","ng://@alfresco/adf-core/directives/node-restore.directive.ts","ng://@alfresco/adf-core/directives/upload.directive.ts","ng://@alfresco/adf-core/services/download-zip.service.ts","ng://@alfresco/adf-core/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-core/directives/node-download.directive.ts","ng://@alfresco/adf-core/directives/directive.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable-cell.component.ts","ng://@alfresco/adf-core/data-column/data-column.component.ts","ng://@alfresco/adf-core/data-column/data-column-list.component.ts","ng://@alfresco/adf-core/events/base.event.ts","ng://@alfresco/adf-core/events/base-ui.event.ts","ng://@alfresco/adf-core/models/file.model.ts","ng://@alfresco/adf-core/events/file.event.ts","ng://@alfresco/adf-core/datatable/data/data-row-event.model.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-cell.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-row-action.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/date-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/empty-list.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/filesize-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/location-cell.component.ts","ng://@alfresco/adf-core/datatable/directives/loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-empty-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/components/datatable/json-cell.component.ts","ng://@alfresco/adf-core/services/notification.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.directive.ts","ng://@alfresco/adf-core/clipboard/clipboard.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/drop-zone.directive.ts","ng://@alfresco/adf-core/datatable/datatable.module.ts","ng://@alfresco/adf-core/data-column/data-column.module.ts","ng://@alfresco/adf-core/about/about.module.ts","ng://@alfresco/adf-core/viewer/services/view-util.service.ts","ng://@alfresco/adf-core/services/previous-route.service.ts","ng://@alfresco/adf-core/viewer/components/viewer-more-actions.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-open-with.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-sidebar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer.component.ts","ng://@alfresco/adf-core/viewer/components/imgViewer.component.ts","ng://@alfresco/adf-core/viewer/components/mediaPlayer.component.ts","ng://@alfresco/adf-core/viewer/services/rendering-queue.services.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-password-dialog.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumbnails.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumb.component.ts","ng://@alfresco/adf-core/viewer/components/txtViewer.component.ts","ng://@alfresco/adf-core/viewer/components/unknown-format/unknown-format.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar-actions.component.ts","ng://@alfresco/adf-core/viewer/directives/viewer-extension.directive.ts","ng://@alfresco/adf-core/toolbar/toolbar-divider.component.ts","ng://@alfresco/adf-core/toolbar/toolbar-title.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.module.ts","ng://@alfresco/adf-core/viewer/viewer.module.ts","ng://@alfresco/adf-core/userinfo/models/bpm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/bpm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/ecm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/ecm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/identity-user.model.ts","ng://@alfresco/adf-core/services/jwt-helper.service.ts","ng://@alfresco/adf-core/userinfo/services/identity-user.service.ts","ng://@alfresco/adf-core/userinfo/components/user-info.component.ts","ng://@alfresco/adf-core/userinfo/models/identity-role.model.ts","ng://@alfresco/adf-core/userinfo/userinfo.module.ts","ng://@alfresco/adf-core/settings/host-settings.component.ts","ng://@alfresco/adf-core/settings/host-settings.module.ts","ng://@alfresco/adf-core/pagination/pagination.component.ts","ng://@alfresco/adf-core/pagination/infinite-pagination.component.ts","ng://@alfresco/adf-core/pagination/pagination.module.ts","ng://@alfresco/adf-core/login/models/login-error.event.ts","ng://@alfresco/adf-core/login/models/login-submit.event.ts","ng://@alfresco/adf-core/login/models/login-success.event.ts","ng://@alfresco/adf-core/login/components/login.component.ts","ng://@alfresco/adf-core/login/directives/login-header.directive.ts","ng://@alfresco/adf-core/login/directives/login-footer.directive.ts","ng://@alfresco/adf-core/login/components/login-dialog.component.ts","ng://@alfresco/adf-core/login/components/login-dialog-panel.component.ts","ng://@alfresco/adf-core/login/login.module.ts","ng://@alfresco/adf-core/language-menu/language-menu.component.ts","ng://@alfresco/adf-core/language-menu/language-menu.module.ts","ng://@alfresco/adf-core/info-drawer/info-drawer-layout.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.module.ts","ng://@alfresco/adf-core/datatable/data/data-table.schema.ts","ng://@alfresco/adf-core/card-view/components/card-view/card-view.component.ts","ng://@alfresco/adf-core/card-view/services/card-view-update.service.ts","ng://@alfresco/adf-core/card-view/components/card-view-boolitem/card-view-boolitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-dateitem/card-view-dateitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-mapitem/card-view-mapitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-textitem/card-view-textitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-selectitem/card-view-selectitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component.ts","ng://@alfresco/adf-core/services/get-type.ts","ng://@alfresco/adf-core/services/dynamic-component-mapper.service.ts","ng://@alfresco/adf-core/card-view/services/card-item-types.service.ts","ng://@alfresco/adf-core/card-view/directives/card-view-content-proxy.directive.ts","ng://@alfresco/adf-core/card-view/components/card-view-item-dispatcher/card-view-item-dispatcher.component.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-int.validator.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-float.validator.ts","ng://@alfresco/adf-core/card-view/models/card-view-baseitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-boolitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-dateitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-datetimeitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-textitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-floatitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-intitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-mapitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-keyvaluepairs.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-selectitem.model.ts","ng://@alfresco/adf-core/card-view/card-view.module.ts","ng://@alfresco/adf-core/app-config/debug-app-config.service.ts","ng://@alfresco/adf-core/app-config/app-config.pipe.ts","ng://@alfresco/adf-core/app-config/app-config.module.ts","ng://@alfresco/adf-core/form/models/form-definition.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-types.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container-column.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/error-message.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-validator.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field.model.ts","ng://@alfresco/adf-core/form/events/form.event.ts","ng://@alfresco/adf-core/form/events/form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form.event.ts","ng://@alfresco/adf-core/form/components/widgets/core/container.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/tab.model.ts","ng://@alfresco/adf-core/form/components/form-base.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome-event.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/content-link.model.ts","ng://@alfresco/adf-core/form/services/ecm-model.service.ts","ng://@alfresco/adf-core/form/services/form.service.ts","ng://@alfresco/adf-core/form/components/widgets/widget.component.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.ts","ng://@alfresco/adf-core/form/components/widgets/tabs/tabs.widget.ts","ng://@alfresco/adf-core/form/components/widgets/unknown/unknown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/amount/amount.widget.ts","ng://@alfresco/adf-core/form/components/widgets/checkbox/checkbox.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date/date.widget.ts","ng://@alfresco/adf-core/form/components/widgets/display-text/display-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/document/document.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dropdown/dropdown.widget.ts","ng://@alfresco/adf-core/form/services/widget-visibility.service.ts","ng://@alfresco/adf-core/form/events/validate-dynamic-table-row.event.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/date-cell-validator-model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-row-validation-summary.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/number-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/required-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/boolean/boolean.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/date/date.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/datetime/datetime.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/dropdown/dropdown.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/row.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/text/text.editor.ts","ng://@alfresco/adf-core/form/components/widgets/error/error.component.ts","ng://@alfresco/adf-core/form/components/widgets/functional-group/functional-group.widget.ts","ng://@alfresco/adf-core/form/components/widgets/hyperlink/hyperlink.widget.ts","ng://@alfresco/adf-core/form/components/widgets/multiline-text/multiline-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/number/number.widget.ts","ng://@alfresco/adf-core/services/people-process.service.ts","ng://@alfresco/adf-core/form/components/widgets/people/people.widget.ts","ng://@alfresco/adf-core/form/components/widgets/radio-buttons/radio-buttons.widget.ts","ng://@alfresco/adf-core/form/components/widgets/text/text-mask.component.ts","ng://@alfresco/adf-core/form/components/widgets/text/text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/typeahead/typeahead.widget.ts","ng://@alfresco/adf-core/form/services/process-content.service.ts","ng://@alfresco/adf-core/form/components/widgets/upload/upload.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date-time/date-time.widget.ts","ng://@alfresco/adf-core/form/components/widgets/index.ts","ng://@alfresco/adf-core/form/components/form-base.component.ts","ng://@alfresco/adf-core/form/components/form-list.component.ts","ng://@alfresco/adf-core/form/components/widgets/content/content.widget.ts","ng://@alfresco/adf-core/form/components/form-renderer.component.ts","ng://@alfresco/adf-core/form/services/activiti-alfresco.service.ts","ng://@alfresco/adf-core/form/services/form-rendering.service.ts","ng://@alfresco/adf-core/form/models/node-metadata.model.ts","ng://@alfresco/adf-core/form/services/node.service.ts","ng://@alfresco/adf-core/form/events/form-error.event.ts","ng://@alfresco/adf-core/form/components/form-custom-button.directive.ts","ng://@alfresco/adf-core/form/components/form-field/form-field.component.ts","ng://@alfresco/adf-core/form/form-base.module.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-content.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-header.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-navigation.directive.ts","ng://@alfresco/adf-core/layout/components/sidenav-layout/sidenav-layout.component.ts","ng://@alfresco/adf-core/layout/helpers/animations.ts","ng://@alfresco/adf-core/layout/components/layout-container/layout-container.component.ts","ng://@alfresco/adf-core/layout/components/sidebar-action/sidebar-action-menu.component.ts","ng://@alfresco/adf-core/layout/components/header/header.component.ts","ng://@alfresco/adf-core/layout/layout.module.ts","ng://@alfresco/adf-core/comments/comment-list.component.ts","ng://@alfresco/adf-core/models/comment.model.ts","ng://@alfresco/adf-core/models/user-process.model.ts","ng://@alfresco/adf-core/services/comment-process.service.ts","ng://@alfresco/adf-core/services/comment-content.service.ts","ng://@alfresco/adf-core/comments/comments.component.ts","ng://@alfresco/adf-core/comments/comments.module.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.component.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.module.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.component.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.module.ts","ng://@alfresco/adf-core/templates/error-content/error-content.component.ts","ng://@alfresco/adf-core/templates/empty-content/empty-content.component.ts","ng://@alfresco/adf-core/templates/template.module.ts","ng://@alfresco/adf-core/services/auth-guard-base.ts","ng://@alfresco/adf-core/services/auth-guard.service.ts","ng://@alfresco/adf-core/services/auth-guard-ecm.service.ts","ng://@alfresco/adf-core/services/auth-guard-bpm.service.ts","ng://@alfresco/adf-core/services/auth-guard-sso-role.service.ts","ng://@alfresco/adf-core/services/apps-process.service.ts","ng://@alfresco/adf-core/services/page-title.service.ts","ng://@alfresco/adf-core/services/renditions.service.ts","ng://@alfresco/adf-core/models/component.model.ts","ng://@alfresco/adf-core/services/translate-loader.service.ts","ng://@alfresco/adf-core/services/upload.service.ts","ng://@alfresco/adf-core/services/deleted-nodes-api.service.ts","ng://@alfresco/adf-core/services/favorites-api.service.ts","ng://@alfresco/adf-core/services/nodes-api.service.ts","ng://@alfresco/adf-core/services/people-content.service.ts","ng://@alfresco/adf-core/services/search-configuration.service.ts","ng://@alfresco/adf-core/services/search.service.ts","ng://@alfresco/adf-core/services/shared-links-api.service.ts","ng://@alfresco/adf-core/services/sites.service.ts","ng://@alfresco/adf-core/services/login-dialog.service.ts","ng://@alfresco/adf-core/services/external-alfresco-api.service.ts","ng://@alfresco/adf-core/services/lock.service.ts","ng://@alfresco/adf-core/services/automation.service.ts","ng://@alfresco/adf-core/dialogs/dialog.module.ts","ng://@alfresco/adf-core/icon/icon.component.ts","ng://@alfresco/adf-core/icon/icon.module.ts","ng://@alfresco/adf-core/models/ecm-company.model.ts","ng://@alfresco/adf-core/models/redirection.model.ts","ng://@alfresco/adf-core/models/pagination.model.ts","ng://@alfresco/adf-core/models/request-pagination.model.ts","ng://@alfresco/adf-core/mock/AlfrescoApi.mock.ts","ng://@alfresco/adf-core/mock/app-config.service.mock.ts","ng://@alfresco/adf-core/mock/apps-service.mock.ts","ng://@alfresco/adf-core/mock/authentication.service.mock.ts","ng://@alfresco/adf-core/mock/bpm-user.service.mock.ts","ng://@alfresco/adf-core/mock/comment-process-service.mock.ts","ng://@alfresco/adf-core/mock/cookie.service.mock.ts","ng://@alfresco/adf-core/mock/ecm-user.service.mock.ts","ng://@alfresco/adf-core/mock/event.mock.ts","ng://@alfresco/adf-core/mock/renditionsService.mock.ts","ng://@alfresco/adf-core/mock/search.service.mock.ts","ng://@alfresco/adf-core/mock/translation.service.mock.ts","ng://@alfresco/adf-core/mock/alfresco-api.service.mock.ts","ng://@alfresco/adf-core/mock/form/form.component.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinition.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionReadonly.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionVisibility.mock.ts","ng://@alfresco/adf-core/mock/form/start-form.component.mock.ts","ng://@alfresco/adf-core/mock/form/form.service.mock.ts","ng://@alfresco/adf-core/mock/form/widget-visibility.service.mock.ts","ng://@alfresco/adf-core/mock/jwt-helper.service.spec.ts","ng://@alfresco/adf-core/testing/setupTestBed.ts","ng://@alfresco/adf-core/services/startup-service-factory.ts","ng://@alfresco/adf-core/core.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        const keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            const value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        const result = {};\n\n        objects.forEach((source) => {\n            Object.keys(source).forEach((prop) => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\n/* spellchecker: disable */\nexport enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = 'languages',\n    PROVIDERS = 'providers',\n    OAUTHCONFIG = 'oauth2',\n    ECMHOST = 'ecmHost',\n    BASESHAREURL = 'baseShareUrl',\n    BPMHOST = 'bpmHost',\n    IDENTITY_HOST = 'identityHost',\n    AUTHTYPE = 'authType',\n    CONTEXTROOTECM = 'contextRootEcm',\n    CONTEXTROOTBPM = 'contextRootBpm',\n    ALFRESCO_REPOSITORY_NAME = 'alfrescoRepositoryName',\n    LOG_LEVEL = 'logLevel',\n    LOGIN_ROUTE = 'loginRoute',\n    DISABLECSRF = 'disableCSRF',\n    AUTH_WITH_CREDENTIALS = 'auth.withCredentials',\n    APPLICATION = 'application',\n    NOTIFY_DURATION = 'notificationDefaultDuration'\n}\n\nexport enum Status {\n    INIT = 'init',\n    LOADING = 'loading',\n    LOADED = 'loaded'\n}\n\n/* spellchecker: enable */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent',\n        alfrescoRepositoryName: 'alfresco-1'\n    };\n\n    status: Status = Status.INIT;\n    protected onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.onLoadSubject = new Subject();\n        this.onLoad = this.onLoadSubject.asObservable();\n    }\n\n    /**\n     * Requests notification of a property value when it is loaded.\n     * @param property The desired property value\n     * @returns Property value, when loaded\n     */\n    select(property: string): Observable<any> {\n        return this.onLoadSubject\n            .pipe(\n                map((config) => config[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets the value of a named property.\n     * @param key Name of the property\n     * @param defaultValue Value to return if the key is not found\n     * @returns Value of the property\n     */\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const keywords = new Map<string, string>();\n            keywords.set('hostname', this.getLocationHostname());\n            keywords.set(':port', this.getLocationPort(':'));\n            keywords.set('port', this.getLocationPort());\n            keywords.set('protocol', this.getLocationProtocol());\n            result = this.formatString(result, keywords);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    /**\n     * Gets the location.protocol value.\n     * @returns The location.protocol string\n     */\n    getLocationProtocol(): string {\n        return location.protocol;\n    }\n\n    /**\n     * Gets the location.hostname property.\n     * @returns Value of the property\n     */\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    /**\n     * Gets the location.port property.\n     * @param prefix Text added before port value\n     * @returns Port with prefix\n     */\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    /**\n     * Loads the config file.\n     * @returns Notification when loading is complete\n     */\n    load(): Promise<any> {\n        return new Promise(async (resolve) => {\n            const configUrl = `app.config.json?v=${Date.now()}`;\n\n            if (this.status === Status.INIT) {\n                this.status = Status.LOADING;\n                await this.http.get(configUrl).subscribe(\n                    (data: any) => {\n                        this.status = Status.LOADED;\n                        this.config = Object.assign({}, this.config, data || {});\n                        this.onLoadSubject.next(this.config);\n                        resolve(this.config);\n                    },\n                    () => {\n                        resolve(this.config);\n                    }\n                );\n            } else if (this.status === Status.LOADED) {\n                resolve(this.config);\n            } else if (this.status === Status.LOADING) {\n                this.onLoad.subscribe(() => {\n                    resolve(this.config);\n                });\n            }\n        });\n    }\n\n    private formatString(str: string, keywords: Map<string, string>): string {\n        let result = str;\n\n        keywords.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ContentApi,\n    Core,\n    Activiti,\n    SearchApi,\n    Node\n} from '@alfresco/js-api';\nimport { AlfrescoApiCompatibility, AlfrescoApiConfig } from '@alfresco/js-api';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Subject } from 'rxjs';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlfrescoApiService {\n    /**\n     * Publish/subscribe to events related to node updates.\n     */\n    nodeUpdated = new Subject<Node>();\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    lastConfig: AlfrescoApiConfig;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get taskApi(): Activiti.TaskApi {\n        return this.getInstance().activiti.taskApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): Core.RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): Core.SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): Core.SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): Core.FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): Core.PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi(): SearchApi {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): Core.VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    get classesApi(): Core.ClassesApi {\n        return this.getInstance().core.classesApi;\n    }\n\n    get groupsApi(): Core.GroupsApi {\n        return this.getInstance().core.groupsApi;\n    }\n\n    constructor(protected appConfig: AppConfigService) {\n    }\n\n    async load() {\n        await this.appConfig.load().then(() => {\n            this.initAlfrescoApi();\n        });\n    }\n\n    async reset() {\n        this.initAlfrescoApi();\n    }\n\n    protected initAlfrescoApi() {\n        const oauth: OauthConfigModel = Object.assign({}, this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null));\n        if (oauth) {\n            oauth.redirectUri = window.location.origin + (oauth.redirectUri || '/');\n            oauth.redirectUriLogout = window.location.origin + (oauth.redirectUriLogout || '/');\n        }\n\n        const config = new AlfrescoApiConfig({\n            provider: this.appConfig.get<string>(AppConfigValues.PROVIDERS),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF),\n            withCredentials: this.appConfig.get<boolean>(AppConfigValues.AUTH_WITH_CREDENTIALS, false),\n            oauth2: oauth\n        });\n\n        if (this.alfrescoApi && this.isDifferentConfig(this.lastConfig, config)) {\n            this.lastConfig = config;\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.lastConfig = config;\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n\n    }\n\n    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig) {\n        return JSON.stringify(lastConfig) !== JSON.stringify(newConfig);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CookieService {\n\n    /**\n     * Checks if cookies are enabled.\n     * @returns True if enabled, false otherwise\n     */\n    isEnabled(): boolean {\n        // for certain scenarios Chrome may say 'true' but have cookies still disabled\n        if (navigator.cookieEnabled === false) {\n            return false;\n        }\n\n        document.cookie = 'test-cookie';\n        return document.cookie.indexOf('test-cookie') >= 0;\n    }\n\n    /**\n     * Retrieves a cookie by its key.\n     * @param key Key to identify the cookie\n     * @returns The cookie data or null if it is not found\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Sets a cookie.\n     * @param key Key to identify the cookie\n     * @param data Data value to set for the cookie\n     * @param expiration Expiration date of the data\n     * @param path \"Pathname\" to store the cookie\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n\n    /** Placeholder for testing purposes - do not use. */\n    clear() {\n        /* placeholder for testing purposes */\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console  */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n\n    get currentLogLevel() {\n        const configLevel: string = this.appConfig.get<string>(AppConfigValues.LOG_LEVEL);\n\n        if (configLevel) {\n            return this.getLogLevel(configLevel);\n        }\n\n        return LogLevelsEnum.TRACE;\n    }\n\n    onMessage: Subject<any>;\n\n    constructor(private appConfig: AppConfigService) {\n        this.onMessage = new Subject();\n    }\n\n    /**\n     * Logs a message at the \"ERROR\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n\n            this.messageBus(message, 'ERROR');\n\n            console.error(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"DEBUG\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n\n            this.messageBus(message, 'DEBUG');\n\n            console.debug(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"INFO\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n\n            this.messageBus(message, 'INFO');\n\n            console.info(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at any level from \"TRACE\" upwards.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'LOG');\n\n            console.log(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"TRACE\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'TRACE');\n\n            console.trace(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"WARN\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n\n            this.messageBus(message, 'WARN');\n\n            console.warn(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message if a boolean test fails.\n     * @param test Test value (typically a boolean expression)\n     * @param message Message to show if test is false\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    assert(test?: boolean, message?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n\n            this.messageBus(message, 'ASSERT');\n\n            console.assert(test, message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Starts an indented group of log messages.\n     * @param groupTitle Title shown at the start of the group\n     * @param optionalParams Interpolation values for the title in \"printf\" format\n     */\n    group(groupTitle?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.group(groupTitle, ...optionalParams);\n        }\n    }\n\n    /**\n     * Ends a indented group of log messages.\n     */\n    groupEnd() {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.groupEnd();\n        }\n    }\n\n    /**\n     * Converts a log level name string into its numeric equivalent.\n     * @param level Level name\n     * @returns Numeric log level\n     */\n    getLogLevel(level: string): LogLevelsEnum {\n        const referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n\n    /**\n     * Triggers notification callback for log messages.\n     * @param text Message text\n     * @param logLevel Log level for the message\n     */\n    messageBus(text: string, logLevel: string) {\n        this.onMessage.next({ text: text, type: logLevel });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, throwError, Observer } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { RedirectionModel } from '../models/redirection.model';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n    private redirectUrl: RedirectionModel = null;\n\n    private bearerExcludedUrls: string[] = ['auth/realms', 'resources/', 'assets/'];\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private appConfig: AppConfigService,\n        private alfrescoApi: AlfrescoApiService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * Checks if the user logged in.\n     * @returns True if logged in, false otherwise\n     */\n    isLoggedIn(): boolean {\n        if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n            return false;\n        }\n        return this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Does the provider support OAuth?\n     * @returns True if supported, false otherwise\n     */\n    isOauth(): boolean {\n        return this.alfrescoApi.getInstance().isOauthConfiguration();\n    }\n\n    /**\n     * Does the provider support ECM?\n     * @returns True if supported, false otherwise\n     */\n    isECMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmConfiguration();\n    }\n\n    /**\n     * Does the provider support BPM?\n     * @returns True if supported, false otherwise\n     */\n    isBPMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isBpmConfiguration();\n    }\n\n    /**\n     * Does the provider support both ECM and BPM?\n     * @returns True if both are supported, false otherwise\n     */\n    isALLProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmBpmConfiguration();\n    }\n\n    /**\n     * Logs the user in.\n     * @param username Username for the login\n     * @param password Password for the login\n     * @param rememberMe Stores the user's login details if true\n     * @returns Object with auth type (\"ECM\", \"BPM\" or \"ALL\") and auth ticket\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        return from(this.alfrescoApi.getInstance().login(username, password))\n            .pipe(\n                map((response: any) => {\n                    this.saveRememberMeCookie(rememberMe);\n                    this.onLogin.next(response);\n                    return {\n                        type: this.appConfig.get(AppConfigValues.PROVIDERS),\n                        ticket: response\n                    };\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Logs the user in with SSO\n     */\n    ssoImplicitLogin() {\n        this.alfrescoApi.getInstance().implicitLogin();\n    }\n\n    /**\n     * Saves the \"remember me\" cookie as either a long-life cookie or a session cookie.\n     * @param rememberMe Enables a long-life cookie\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * Checks whether the \"remember me\" cookie was set or not.\n     * @returns True if set, false otherwise\n     */\n    isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Logs the user out.\n     * @returns Response event called when logout is complete\n     */\n    logout() {\n        return from(this.callApiLogout())\n            .pipe(\n                tap((response) => {\n                    this.onLogout.next(response);\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Gets the ECM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketEcm();\n    }\n\n    /**\n     * Gets the BPM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketBpm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketBpm();\n    }\n\n    /**\n     * Gets the BPM ticket from the Storage in Base 64 format.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcmBase64(): string | null {\n        const ticket = this.alfrescoApi.getInstance().getTicketEcm();\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * Checks if the user is logged in on an ECM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isEcmLoggedIn(): boolean {\n        if (this.isECMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isEcmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the user is logged in on a BPM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isBpmLoggedIn(): boolean {\n        if (this.isBPMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isBpmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Gets the ECM username.\n     * @returns The ECM username\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().getEcmUsername();\n    }\n\n    /**\n     * Gets the BPM username\n     * @returns The BPM username\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().getBpmUsername();\n    }\n\n    /** Sets the URL to redirect to after login.\n     * @param url URL to redirect to\n     */\n    setRedirect(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    /** Gets the URL to redirect to after login.\n     * @returns The redirect URL\n     */\n    getRedirect(): string {\n        const provider = <string> this.appConfig.get(AppConfigValues.PROVIDERS);\n        return this.hasValidRedirection(provider) ? this.redirectUrl.url : null;\n    }\n\n    /**\n     * Gets information about the user currently logged into APS.\n     * @returns User information\n     */\n    getBpmLoggedUser(): Observable<UserRepresentation> {\n        return from(this.alfrescoApi.getInstance().activiti.profileApi.getProfile());\n    }\n\n    private hasValidRedirection(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === provider || this.hasSelectedProviderAll(provider));\n    }\n\n    private hasSelectedProviderAll(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === 'ALL' || provider === 'ALL');\n    }\n\n    /**\n     * Prints an error message in the console browser\n     * @param error Error message\n     * @returns Object representing the error message\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return throwError(error || 'Server error');\n    }\n\n    /**\n     * Gets the set of URLs that the token bearer is excluded from.\n     * @returns Array of URL strings\n     */\n    getBearerExcludedUrls(): string[] {\n        return this.bearerExcludedUrls;\n    }\n\n    /**\n     * Gets the auth token.\n     * @returns Auth token string\n     */\n    getToken(): string {\n        return localStorage.getItem('access_token');\n    }\n\n    /**\n     * Adds the auth token to an HTTP header using the 'bearer' scheme.\n     * @param headersArg Header that will receive the token\n     * @returns The new header with the token added\n     */\n    addTokenToHeader(headersArg?: HttpHeaders): Observable<HttpHeaders> {\n        return new Observable((observer: Observer<any>) => {\n            let headers = headersArg;\n            if (!headers) {\n                headers = new HttpHeaders();\n            }\n            try {\n                const token: string = this.getToken();\n                headers = headers.set('Authorization', 'bearer ' + token);\n                observer.next(headers);\n                observer.complete();\n            } catch (error) {\n                observer.error(error);\n            }\n        });\n    }\n\n    /**\n     * Checks if SSO is configured correctly.\n     * @returns True if configured correctly, false otherwise\n     */\n    isSSODiscoveryConfigured() {\n        return this.alfrescoApi.getInstance().storage.getItem('discovery') ? true : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { from, throwError } from 'rxjs';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets product information for Content Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getEcmProductInfo(): Observable<EcmProductVersionModel> {\n        return from(this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .pipe(\n                map((res) => new EcmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n\n    /**\n     * Gets product information for Process Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getBpmProductInfo(): Observable<BpmProductVersionModel> {\n        return from(this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .pipe(\n                map((res) => new BpmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: any;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flatten(folder: any): Promise<FileInfo[]> {\n        const reader = folder.createReader();\n        const files: FileInfo[] = [];\n        return new Promise((resolve) => {\n            const iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(() => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map((entry) => {\n                            if (entry.isFile) {\n                                return new Promise((resolveFile) => {\n                                    entry.file(function (file: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: file,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flatten(entry).then((result) => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        const result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDateFormats } from '@angular/material';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport moment from 'moment-es6';\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplayFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map((month) => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        const dateNames: string[] = [];\n        for (let date = 1; date <= 31; date++) {\n            dateNames.push(String(date));\n        }\n\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        const locale = this.locale || 'en';\n        return date.clone().locale(locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        const locale = this.locale || 'en';\n        return moment().locale(locale);\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        const locale = this.locale || 'en';\n\n        if (value && typeof value === 'string') {\n            let m = moment(value, parseFormat, locale, true);\n            if (!m.isValid()) {\n                // use strict parsing because Moment's parser is very forgiving, and this can lead to undesired behavior.\n                m = moment(value, this.overrideDisplayFormat, locale, true);\n            }\n            if (m.isValid()) {\n                // if user omits year, it defaults to 2001, so check for that issue.\n                if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                    // if 2001 not actually in the value string, change to current year\n                    const currentYear = new Date().getFullYear();\n                    m.set('year', currentYear);\n                    // if date is in the future, set previous year\n                    if (m.isAfter(moment())) {\n                        m.set('year', currentYear - 1);\n                    }\n                }\n            }\n            return m;\n        }\n\n        return value ? moment(value).locale(locale) : null;\n    }\n\n    format(date: Moment, displayFormat: any): string {\n        date = this.clone(date);\n        displayFormat = this.overrideDisplayFormat ? this.overrideDisplayFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        super.setLocale(locale);\n\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        const locale = this.locale || 'en';\n        const d = moment(iso8601String, moment.ISO_8601).locale(locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectUtils } from '../../utils';\nimport { DataRow } from './data-row.model';\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    imageErrorResolver(event: Event): string {\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { DataColumn } from './data-column.model';\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n    copyContent?: boolean;\n\n    constructor(input: any) {\n        this.key = input.key;\n        this.type = input.type || 'text';\n        this.format = input.format;\n        this.sortable = input.sortable;\n        this.title = input.title;\n        this.srTitle = input.srTitle;\n        this.cssClass = input.cssClass;\n        this.template = input.template;\n        this.copyContent = input.copyContent;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn } from './data-column.model';\nimport { DataRow } from './data-row.model';\nimport { ObjectDataRow } from './object-datarow.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\nimport { DataSorting } from './data-sorting.model';\nimport { DataTableAdapter } from './datatable-adapter';\nimport { Subject } from 'rxjs';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n    rowsChanged: Subject<Array<DataRow>>;\n\n    static generateSchema(data: any[]) {\n        const schema = [];\n\n        if (data && data.length) {\n            const rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (const key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map((item) => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map((item) => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            const sortable = this._columns.filter((column) => column.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n\n        this.rowsChanged = new Subject<Array<DataRow>>();\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n        this.rowsChanged.next(this._rows);\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        const value = row.getValue(col.key);\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { DiscoveryApiService } from '../services/discovery-api.service';\nimport { ObjectDataTableAdapter } from '../datatable/data/object-datatable-adapter';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Observable } from 'rxjs';\nimport { ExtensionRef, AppExtensionService } from '@alfresco/adf-extensions';\n\n@Component({\n    selector: 'adf-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AboutComponent implements OnInit {\n\n    data: ObjectDataTableAdapter;\n    status: ObjectDataTableAdapter;\n    license: ObjectDataTableAdapter;\n    modules: ObjectDataTableAdapter;\n    extensionColumns: string[] = ['$id', '$name', '$version', '$vendor', '$license', '$runtime', '$description'];\n    extensions$: Observable<ExtensionRef[]>;\n\n    /** Commit corresponding to the version of ADF to be used. */\n    @Input()\n    githubUrlCommitAlpha = 'https://github.com/Alfresco/alfresco-ng2-components/commits/';\n\n    /** Toggles showing/hiding of extensions block. */\n    @Input()\n    showExtensions = true;\n\n    /** Regular expression for filtering dependencies packages. */\n    @Input() regexp = '^(@alfresco)';\n\n    ecmHost = '';\n    bpmHost = '';\n\n    ecmVersion: EcmProductVersionModel = null;\n    bpmVersion: BpmProductVersionModel = null;\n\n    constructor(private http: HttpClient,\n                private appConfig: AppConfigService,\n                private authService: AuthenticationService,\n                private discovery: DiscoveryApiService,\n                appExtensions: AppExtensionService) {\n        this.extensions$ = appExtensions.references$;\n    }\n\n    ngOnInit() {\n\n        if (this.authService.isEcmLoggedIn()) {\n            this.discovery.getEcmProductInfo().subscribe((ecmVers) => {\n                this.ecmVersion = ecmVers;\n\n                this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [\n                    { type: 'text', key: 'id', title: 'ABOUT.TABLE_HEADERS.MODULES.ID', sortable: true },\n                    { type: 'text', key: 'title', title: 'ABOUT.TABLE_HEADERS.MODULES.TITLE', sortable: true },\n                    { type: 'text', key: 'version', title: 'ABOUT.TABLE_HEADERS.MODULES.DESCRIPTION', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'installDate',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_DATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'installState',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_STATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMin',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MIN',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMax',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MAX',\n                        sortable: true\n                    }\n                ]);\n\n                this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [\n                    { type: 'text', key: 'isReadOnly', title: 'ABOUT.TABLE_HEADERS.STATUS.READ_ONLY', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isAuditEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.AUDIT_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isQuickShareEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.QUICK_SHARE_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isThumbnailGenerationEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.THUMBNAIL_ENABLED',\n                        sortable: true\n                    }\n                ]);\n\n                this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [\n                    { type: 'text', key: 'issuedAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.ISSUES_AT', sortable: true },\n                    { type: 'text', key: 'expiresAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.EXPIRES_AT', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'remainingDays',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.REMAINING_DAYS',\n                        sortable: true\n                    },\n                    { type: 'text', key: 'holder', title: 'ABOUT.TABLE_HEADERS.LICENSE.HOLDER', sortable: true },\n                    { type: 'text', key: 'mode', title: 'ABOUT.TABLE_HEADERS.LICENSE.MODE', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isClusterEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CLUSTER_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isCryptodocEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CRYPTODOC_ENABLED',\n                        sortable: true\n                    }\n                ]);\n            });\n        }\n\n        if (this.authService.isBpmLoggedIn()) {\n            this.discovery.getBpmProductInfo().subscribe((bpmVers) => {\n                this.bpmVersion = bpmVers;\n            });\n        }\n\n        this.http.get('/versions.json?' + new Date()).subscribe((response: any) => {\n\n            const alfrescoPackages = Object.keys(response.dependencies).filter((val) => {\n                return new RegExp(this.regexp).test(val);\n            });\n\n            const alfrescoPackagesTableRepresentation = [];\n            alfrescoPackages.forEach((val) => {\n                alfrescoPackagesTableRepresentation.push({\n                    name: val,\n                    version: (response.dependencies[val].version || response.dependencies[val].required.version)\n                });\n            });\n\n            this.gitHubLinkCreation(alfrescoPackagesTableRepresentation);\n\n            this.data = new ObjectDataTableAdapter(alfrescoPackagesTableRepresentation, [\n                { type: 'text', key: 'name', title: 'Name', sortable: true },\n                { type: 'text', key: 'version', title: 'Version', sortable: true }\n            ]);\n\n        });\n\n        this.ecmHost = this.appConfig.get<string>(AppConfigValues.ECMHOST);\n        this.bpmHost = this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    private gitHubLinkCreation(alfrescoPackagesTableRepresentation): void {\n        const corePackage = alfrescoPackagesTableRepresentation.find((packageUp) => {\n            return packageUp.name === '@alfresco/adf-core';\n        });\n\n        if (corePackage) {\n            const commitIsh = corePackage.version.split('-');\n            if (commitIsh.length > 1) {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + commitIsh[1];\n            } else {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + corePackage.version;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n    MatTooltipModule, MatExpansionModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule, MatExpansionModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n    selector: 'adf-context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <ng-container *ngFor=\"let link of links\">\n                <button *ngIf=\"link.model?.visible\"\n                        [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                        mat-menu-item\n                        [disabled]=\"link.model?.disabled\"\n                        (click)=\"onMenuItemClick($event, link)\">\n                    <mat-icon *ngIf=\"showIcons && link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                    {{ (link.title || link.model?.title) | translate }}\n                </button>\n            </ng-container>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = { left: 0, top: 0 };\n    private menuElement = null;\n    private subscriptions: Subscription[] = [];\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    constructor(\n        private viewport: ViewportRuler,\n        private overlayContainer: OverlayContainer,\n        private contextMenuService: ContextMenuService,\n        private renderer: Renderer2\n    ) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.contextMenuService.show.subscribe((mouseEvent) => this.showMenu(mouseEvent.event, mouseEvent.obj)),\n\n            this.menuTrigger.onMenuOpen.subscribe(() => {\n                const container = this.overlayContainer.getContainerElement();\n                if (container) {\n                    this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (contextmenuEvent: Event) => {\n                        contextmenuEvent.preventDefault();\n                    });\n                }\n                this.menuElement = this.getContextMenuElement();\n            }),\n\n            this.menuTrigger.onMenuClose.subscribe(() => {\n                this.menuElement = null;\n                if (this.contextMenuListenerFn) {\n                    this.contextMenuListenerFn();\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(mouseEvent, links) {\n        this.links = links;\n\n        if (mouseEvent) {\n            this.mouseLocation = {\n                left: mouseEvent.clientX,\n                top: mouseEvent.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private updatePosition() {\n        setTimeout(() => {\n            if (this.mdMenuElement.parentElement) {\n                if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n                    this.menuTrigger.menu.xPosition = 'before';\n                    this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n                } else {\n                    this.menuTrigger.menu.xPosition = 'after';\n                    this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n                }\n\n                if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n                    this.menuTrigger.menu.yPosition = 'above';\n                    this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n                } else {\n                    this.menuTrigger.menu.yPosition = 'below';\n                    this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n                }\n            }\n        }, 0);\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ContextMenuOverlayRef {\n\n    constructor(private overlayRef: OverlayRef) { }\n\n    close(): void {\n        this.overlayRef.dispose();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_DATA = new InjectionToken<any>('CONTEXT_MENU_DATA');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    sequence,\n    AnimationStateMetadata,\n    AnimationTransitionMetadata\n} from '@angular/animations';\n\nexport const contextMenuAnimation: ( AnimationStateMetadata | AnimationTransitionMetadata)[] = [\n    state('void', style({\n        opacity: 0,\n        transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => *', sequence([\n        query('.mat-menu-content', style({ opacity: 0 })),\n        animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n        group([\n            query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n                style({ opacity: 1 })\n            )),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' }))\n        ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ViewEncapsulation, HostListener, AfterViewInit,\n    Optional, Inject, QueryList, ViewChildren\n} from '@angular/core';\nimport { trigger } from '@angular/animations';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatMenuItem } from '@angular/material';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { contextMenuAnimation } from './animations';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\n\n@Component({\n    selector: 'adf-context-menu',\n    template: `\n        <div mat-menu class=\"mat-menu-panel\" @panelAnimation>\n            <div id=\"adf-context-menu-content\" class=\"mat-menu-content\">\n                <ng-container *ngFor=\"let link of links\">\n                    <button *ngIf=\"link.model?.visible\"\n                            [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                            mat-menu-item\n                            [disabled]=\"link.model?.disabled\"\n                            (click)=\"onMenuItemClick($event, link)\">\n                        <mat-icon *ngIf=\"link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                        <span>{{ (link.title || link.model?.title) | translate }}</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    host: {\n        role: 'menu',\n        class: 'adf-context-menu'\n    },\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('panelAnimation', contextMenuAnimation)\n    ]\n})\nexport class ContextMenuListComponent implements AfterViewInit {\n    private keyManager: FocusKeyManager<MatMenuItem>;\n    @ViewChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n    links: any[];\n\n    @HostListener('document:keydown.Escape', ['$event'])\n    handleKeydownEscape(event: KeyboardEvent) {\n        if (event) {\n            this.contextMenuOverlayRef.close();\n        }\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeydownEvent(event: KeyboardEvent) {\n        if (event) {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                this.keyManager.onKeydown(event);\n            }\n        }\n    }\n\n    constructor(\n        @Inject(ContextMenuOverlayRef) private contextMenuOverlayRef: ContextMenuOverlayRef,\n        @Optional() @Inject(CONTEXT_MENU_DATA) private data: any\n    ) {\n        this.links = this.data;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any) {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n\n        menuItem.subject.next(menuItem);\n        this.contextMenuOverlayRef.close();\n    }\n\n    ngAfterViewInit() {\n        this.keyManager = new FocusKeyManager<MatMenuItem>(this.items);\n        this.keyManager.setFirstItemActive();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Injector, ElementRef, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { ContextMenuOverlayConfig } from './interfaces';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\nconst DEFAULT_CONFIG: ContextMenuOverlayConfig = {\n    panelClass: 'cdk-overlay-pane',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n    hasBackdrop: true\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuOverlayService {\n\n    constructor( private injector: Injector, private overlay: Overlay) { }\n\n    open(config: ContextMenuOverlayConfig): ContextMenuOverlayRef {\n        const overlayConfig = { ...DEFAULT_CONFIG, ...config };\n\n        const overlay = this.createOverlay(overlayConfig);\n\n        const overlayRef = new ContextMenuOverlayRef(overlay);\n\n        this.attachDialogContainer(overlay, config, overlayRef);\n\n        overlay.backdropClick().subscribe(() => overlayRef.close());\n\n        // prevent native contextmenu on overlay element if config.hasBackdrop is true\n        if (overlayConfig.hasBackdrop) {\n            (<any> overlay)._backdropElement\n                .addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    (<any> overlay)._backdropClick.next(null);\n                }, true);\n        }\n\n        return overlayRef;\n    }\n\n    private createOverlay(config: ContextMenuOverlayConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(overlay: OverlayRef, config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef) {\n        const injector = this.createInjector(config, contextMenuOverlayRef);\n\n        const containerPortal = new ComponentPortal(ContextMenuListComponent, null, injector);\n        const containerRef: ComponentRef<ContextMenuListComponent> = overlay.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createInjector(config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(ContextMenuOverlayRef, contextMenuOverlayRef);\n        injectionTokens.set(CONTEXT_MENU_DATA, config.data);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private getOverlayConfig(config: ContextMenuOverlayConfig): OverlayConfig {\n        const { clientY, clientX  } = config.source;\n\n        const fakeElement: any = {\n            getBoundingClientRect: (): ClientRect => ({\n                bottom: clientY,\n                height: 0,\n                left: clientX,\n                right: clientX,\n                top: clientY,\n                width: 0\n            })\n        };\n\n        const positionStrategy = this.overlay.position()\n            .connectedTo(\n                new ElementRef(fakeElement),\n                { originX: 'start', originY: 'bottom' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'top' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'center' },\n                { overlayX: 'start', overlayY: 'center' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'center' },\n                { overlayX: 'end', overlayY: 'center' }\n            );\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.close(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuOverlayService } from './context-menu-overlay.service';\n\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    /** Items for the menu. */\n    @Input('adf-context-menu')\n    links: any[];\n\n    /** Is the menu enabled? */\n    @Input('adf-context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private contextMenuService: ContextMenuOverlayService) {}\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                this.contextMenuService.open({\n                    source: event,\n                    data: this.links\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective,\n        ContextMenuListComponent\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    entryComponents: [\n        ContextMenuListComponent\n    ]\n})\nexport class ContextMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n    storagePrefix: string;\n\n    constructor(private appConfigService: AppConfigService) {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n        this.appConfigService.onLoad.subscribe(this.getAppPrefix.bind(this));\n    }\n\n    /**\n     * Gets an item.\n     * @param key Key to identify the item\n     * @returns The item (if any) retrieved by the key\n     */\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.storagePrefix + key);\n        } else {\n            return this.memoryStore.hasOwnProperty(this.storagePrefix + key) ? this.memoryStore[this.storagePrefix + key] : null;\n        }\n    }\n\n    /**\n     * Stores an item\n     * @param key Key to identify the item\n     * @param data Data to store\n     */\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(this.storagePrefix + key, data);\n        } else {\n            this.memoryStore[this.storagePrefix + key] = data.toString();\n        }\n    }\n\n    /** Removes all currently stored items. */\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    /**\n     * Removes a single item.\n     * @param key Key to identify the item\n     */\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(this.storagePrefix + key);\n        } else {\n            delete this.memoryStore[this.storagePrefix + key];\n        }\n    }\n\n    /**\n     * Is any item currently stored under `key`?\n     * @param key Key identifying item to check\n     * @returns True if key retrieves an item, false otherwise\n     */\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.storagePrefix + key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            const storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Sets the prefix that is used for the local storage of the app\n     * It assigns the string that is defined i the app config,\n     * empty prefix otherwise.\n     */\n    getAppPrefix() {\n        const appConfiguration = this.appConfigService.get<any>('application');\n        if (appConfiguration && appConfiguration.storagePrefix) {\n            this.storagePrefix = appConfiguration.storagePrefix + '_';\n        } else {\n            this.storagePrefix = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from './storage.service';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum UserPreferenceValues {\n    PaginationSize = 'paginationSize',\n    Locale = 'locale',\n    SupportedPageSizes = 'supportedPageSizes',\n    ExpandedSideNavStatus = 'expandedSidenav'\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n    defaults = {\n        paginationSize: 25,\n        supportedPageSizes: [5, 10, 15, 20],\n        locale: 'en',\n        expandedSidenav: true\n    };\n\n    private userPreferenceStatus: any = this.defaults;\n    private onChangeSubject: BehaviorSubject<any>;\n    onChange: Observable<any>;\n\n    constructor(public translate: TranslateService,\n                private appConfig: AppConfigService,\n                private storage: StorageService) {\n        this.appConfig.onLoad.subscribe(this.initUserPreferenceStatus.bind(this));\n        this.onChangeSubject = new BehaviorSubject(this.userPreferenceStatus);\n        this.onChange = this.onChangeSubject.asObservable();\n    }\n\n    private initUserPreferenceStatus() {\n        this.initUserLanguage();\n        this.set(UserPreferenceValues.PaginationSize, this.paginationSize);\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(this.supportedPageSizes));\n    }\n\n    private initUserLanguage() {\n        if (this.locale || this.appConfig.get<string>(UserPreferenceValues.Locale)) {\n            this.set(UserPreferenceValues.Locale, (this.locale || this.getDefaultLocale()));\n        } else {\n            this.setWithoutStore(UserPreferenceValues.Locale, (this.locale || this.getDefaultLocale()));\n        }\n    }\n\n    /**\n     * Sets up a callback to notify when a property has changed.\n     * @param property The property to watch\n     * @returns Notification callback\n     */\n    select(property: string): Observable<any> {\n        return this.onChange\n            .pipe(\n                map((userPreferenceStatus) => userPreferenceStatus[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets a preference property.\n     * @param property Name of the property\n     * @param defaultValue Default to return if the property is not found\n     * @returns Preference property\n     */\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    set(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    setWithoutStore(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Check if an item is present in the storage\n     * @param property Name of the property\n     * @returns True if the item is present, false otherwise\n     */\n    hasItem(property: string) {\n        if (!property) {\n            return;\n        }\n        return this.storage.hasItem(\n            this.getPropertyKey(property)\n        );\n    }\n\n    /**\n     * Gets the active storage prefix for preferences.\n     * @returns Storage prefix\n     */\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    /**\n     * Sets the active storage prefix for preferences.\n     * @param value Name of the prefix\n     */\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n        this.initUserPreferenceStatus();\n    }\n\n    /**\n     * Gets the full property key with prefix.\n     * @param property The property name\n     * @returns Property key\n     */\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    /**\n     * Gets an array containing the available page sizes.\n     * @returns Array of page size values\n     */\n    get supportedPageSizes(): number[] {\n        const supportedPageSizes = this.get(UserPreferenceValues.SupportedPageSizes);\n\n        if (supportedPageSizes) {\n            return JSON.parse(supportedPageSizes);\n        } else {\n            return this.appConfig.get('pagination.supportedPageSizes', this.defaults.supportedPageSizes);\n        }\n    }\n\n    set supportedPageSizes(value: number[]) {\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(value));\n    }\n\n    /** Pagination size. */\n    set paginationSize(value: number) {\n        this.set(UserPreferenceValues.PaginationSize, value);\n    }\n\n    get paginationSize(): number {\n        const paginationSize = this.get(UserPreferenceValues.PaginationSize);\n\n        if (paginationSize) {\n            return Number(paginationSize);\n        } else {\n            return Number(this.appConfig.get('pagination.size', this.defaults.paginationSize));\n        }\n    }\n\n    /** Current locale setting. */\n    get locale(): string {\n        return this.get(UserPreferenceValues.Locale);\n    }\n\n    set locale(value: string) {\n        this.set(UserPreferenceValues.Locale, value);\n    }\n\n    /**\n     * Gets the default locale.\n     * @returns Default locale language code\n     */\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>(UserPreferenceValues.Locale) || this.translate.getBrowserCultureLang() || 'en';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { TranslateLoaderService } from './translate-loader.service';\nimport { UserPreferencesService, UserPreferenceValues } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: TranslateLoaderService;\n\n    constructor(public translate: TranslateService,\n                userPreferencesService: UserPreferencesService,\n                @Optional() @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <TranslateLoaderService> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n        this.customLoader.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (const provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            if (locale) {\n                this.userLang = locale;\n                this.use(this.userLang);\n            }\n        });\n    }\n\n    /**\n     * Adds a new folder of translation source files.\n     * @param name Name for the translation provider\n     * @param path Path to the folder\n     */\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n\n            if (this.userLang) {\n                this.loadTranslation(this.userLang, this.defaultLang);\n            } else {\n                this.loadTranslation(this.defaultLang);\n            }\n        }\n    }\n\n    /**\n     * Loads a translation file.\n     * @param lang Language code for the language to load\n     * @param fallback Language code to fall back to if the first one was unavailable\n     */\n    loadTranslation(lang: string, fallback?: string) {\n        this.translate.getTranslation(lang).subscribe(\n            () => {\n                this.translate.use(lang);\n                this.onTranslationChanged(lang);\n            },\n            () => {\n                if (fallback && fallback !== lang) {\n                    this.loadTranslation(fallback);\n                }\n            }\n        );\n    }\n\n    /**\n     * Triggers a notification callback when the translation language changes.\n     * @param lang The new language code\n     */\n    onTranslationChanged(lang: string): void {\n        this.translate.onTranslationChange.next({\n            lang: lang,\n            translations: this.customLoader.getFullTranslationJSON(lang)\n        });\n    }\n\n    /**\n     * Sets the target language for translations.\n     * @param lang Code name for the language\n     * @returns Translations available for the language\n     */\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    /**\n     * Gets the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n    /**\n     * Directly returns the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key ? this.translate.instant(key, interpolateParams) : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n    name: 'adfFileSize',\n    pure: false\n})\nexport class FileSizePipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 ' + this.translation.instant('CORE.FILE_SIZE.BYTES');\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['BYTES', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        const i18nSize = this.translation.instant(`CORE.FILE_SIZE.${sizes[i]}`);\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + i18nSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class PermissionsEnum extends String {\n    static CONTRIBUTOR: string = 'Contributor';\n    static CONSUMER: string = 'Consumer';\n    static COLLABORATOR: string = 'Collaborator';\n    static MANAGER: string = 'Manager';\n    static EDITOR: string = 'Editor';\n    static COORDINATOR: string = 'Coordinator';\n    static NOT_CONTRIBUTOR: string = '!Contributor';\n    static NOT_CONSUMER: string = '!Consumer';\n    static NOT_COLLABORATOR: string = '!Collaborator';\n    static NOT_MANAGER: string = '!Manager';\n    static NOT_EDITOR: string = '!Editor';\n    static NOT_COORDINATOR: string = '!Coordinator';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class AllowableOperationsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static COPY: string = 'copy';\n    static LOCK: string = 'lock';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNode, Node, NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { catchError } from 'rxjs/operators';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AllowableOperationsEnum } from '../models/allowable-operations.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentService {\n\n    private saveData: Function;\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNode> = new Subject<MinimalNode>();\n    folderEdit: Subject<MinimalNode> = new Subject<MinimalNode>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService,\n                private sanitizer: DomSanitizer) {\n        this.saveData = (function () {\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function (fileData, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([fileData], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    const json = JSON.stringify(fileData);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n\n                    if (typeof window.navigator !== 'undefined' && window.navigator.msSaveOrOpenBlob) {\n                        navigator.msSaveOrOpenBlob(blob, fileName);\n                    } else {\n                        const url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        }());\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.saveData(json, 'json', fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param  blob Data to wrap into object URL\n     * @returns URL string\n     */\n    createTrustedUrl(blob: Blob): string {\n        const url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getDocumentThumbnailUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getContentUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getContentUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets content for the given node.\n     * @param nodeId ID of the target node\n     * @returns Content data\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @param opts Options supported by JS-API\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts));\n    }\n\n    /**\n     * Checks if the user has permission on that node\n     * @param node Node to check permissions\n     * @param permission Required permission type\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasPermissions(node: Node, permission: PermissionsEnum | string): boolean {\n        let hasPermissions = false;\n\n        if (node && node.permissions && node.permissions.locallySet) {\n            if (permission && permission.startsWith('!')) {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission) ? true : false;\n            }\n\n        } else {\n\n            if (permission === PermissionsEnum.CONSUMER) {\n                hasPermissions = true;\n            } else if (permission === PermissionsEnum.NOT_CONSUMER) {\n                hasPermissions = false;\n            } else if (permission && permission.startsWith('!')) {\n                hasPermissions = true;\n            }\n        }\n\n        return hasPermissions;\n    }\n\n    /**\n     * Checks if the user has permissions on that node\n     * @param node Node to check allowableOperations\n     * @param allowableOperation Create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasAllowableOperations(node: Node, allowableOperation: AllowableOperationsEnum | string): boolean {\n        let hasAllowableOperations = false;\n\n        if (node && node.allowableOperations) {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation.replace('!', '')) ? false : true;\n            } else {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation) ? true : false;\n            }\n\n        } else {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = true;\n            }\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.COPY) {\n            hasAllowableOperations = true;\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.LOCK) {\n            hasAllowableOperations = node.isFile;\n\n            if (node.isLocked && node.allowableOperations) {\n                hasAllowableOperations = !!~node.allowableOperations.indexOf('updatePermissions');\n            }\n        }\n\n        return hasAllowableOperations;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentService } from './content.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = './assets/images/ft_ic_miscellaneous.svg';\n\n    mimeTypeIcons: any = {\n        'image/png': './assets/images/ft_ic_raster_image.svg',\n        'image/jpeg': './assets/images/ft_ic_raster_image.svg',\n        'image/gif': './assets/images/ft_ic_raster_image.svg',\n        'image/bmp': './assets/images/ft_ic_raster_image.svg',\n        'image/cgm': './assets/images/ft_ic_raster_image.svg',\n        'image/ief': './assets/images/ft_ic_raster_image.svg',\n        'image/jp2': './assets/images/ft_ic_raster_image.svg',\n        'image/tiff': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.photoshop': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.premiere': './assets/images/ft_ic_raster_image.svg',\n        'image/x-cmu-raster': './assets/images/ft_ic_raster_image.svg',\n        'image/x-dwt': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-anymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-bitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-graymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-pixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-adobe': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-canon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-fuji': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-hasselblad': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-kodak': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-leica': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-minolta': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-nikon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-olympus': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-panasonic': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-pentax': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-red': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sigma': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sony': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xbitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xpixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xwindowdump': './assets/images/ft_ic_raster_image.svg',\n        'image/svg+xml': './assets/images/ft_ic_vector_image.svg',\n        'application/eps': './assets/images/ft_ic_raster_image.svg',\n        'application/illustrator': './assets/images/ft_ic_raster_image.svg',\n        'application/pdf': './assets/images/ft_ic_pdf.svg',\n        'application/vnd.ms-excel': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.addin.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.binary.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.template.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-outlook': './assets/images/ft_ic_document.svg',\n        'application/msword': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.document.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.template.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer.template': './assets/images/ft_ic_ms_word.svg',\n        'application/rtf': './assets/images/ft_ic_ms_word.svg',\n        'text/rtf': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-powerpoint': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation-template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slide': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.spreadsheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.oasis.opendocument.spreadsheet-template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-powerpoint.addin.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.presentation.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slide.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slideshow.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.template.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'video/mp4': './assets/images/ft_ic_video.svg',\n        'video/3gpp': './assets/images/ft_ic_video.svg',\n        'video/3gpp2': './assets/images/ft_ic_video.svg',\n        'video/mp2t': './assets/images/ft_ic_video.svg',\n        'video/mpeg': './assets/images/ft_ic_video.svg',\n        'video/mpeg2': './assets/images/ft_ic_video.svg',\n        'video/ogg': './assets/images/ft_ic_video.svg',\n        'video/quicktime': './assets/images/ft_ic_video.svg',\n        'video/webm': './assets/images/ft_ic_video.svg',\n        'video/x-flv': './assets/images/ft_ic_video.svg',\n        'video/x-m4v': './assets/images/ft_ic_video.svg',\n        'video/x-ms-asf': './assets/images/ft_ic_video.svg',\n        'video/x-ms-wmv': './assets/images/ft_ic_video.svg',\n        'video/x-msvideo': './assets/images/ft_ic_video.svg',\n        'video/x-rad-screenplay':  './assets/images/ft_ic_video.svg',\n        'video/x-sgi-movie': './assets/images/ft_ic_video.svg',\n        'video/x-matroska': './assets/images/ft_ic_video.svg',\n        'audio/mpeg': './assets/images/ft_ic_audio.svg',\n        'audio/ogg': './assets/images/ft_ic_audio.svg',\n        'audio/wav': './assets/images/ft_ic_audio.svg',\n        'audio/basic': './assets/images/ft_ic_audio.svg',\n        'audio/mp4': './assets/images/ft_ic_audio.svg',\n        'audio/vnd.adobe.soundbooth': './assets/images/ft_ic_audio.svg',\n        'audio/vorbis': './assets/images/ft_ic_audio.svg',\n        'audio/x-aiff': './assets/images/ft_ic_audio.svg',\n        'audio/x-flac': './assets/images/ft_ic_audio.svg',\n        'audio/x-ms-wma': './assets/images/ft_ic_audio.svg',\n        'audio/x-wav': './assets/images/ft_ic_audio.svg',\n        'x-world/x-vrml': './assets/images/ft_ic_video.svg',\n        'text/plain': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text-template': './assets/images/ft_ic_document.svg',\n        'application/x-javascript': './assets/images/ft_ic_document.svg',\n        'application/json': './assets/images/ft_ic_document.svg',\n        'text/csv': './assets/images/ft_ic_document.svg',\n        'text/xml': './assets/images/ft_ic_document.svg',\n        'text/html': './assets/images/ft_ic_website.svg',\n        'application/x-compressed': './assets/images/ft_ic_archive.svg',\n        'application/x-zip-compressed': './assets/images/ft_ic_archive.svg',\n        'application/zip': './assets/images/ft_ic_archive.svg',\n        'application/x-tar': './assets/images/ft_ic_archive.svg',\n        'application/vnd.apple.keynote': './assets/images/ft_ic_presentation.svg',\n        'application/vnd.apple.pages': './assets/images/ft_ic_document.svg',\n        'application/vnd.apple.numbers': './assets/images/ft_ic_spreadsheet.svg',\n        'application/vnd.visio': './assets/images/ft_ic_document.svg',\n        'application/wordperfect': './assets/images/ft_ic_document.svg',\n        'application/x-cpio': './assets/images/ft_ic_document.svg',\n        'folder': './assets/images/ft_ic_folder.svg',\n        'smartFolder': './assets/images/ft_ic_smart_folder.svg',\n        'ruleFolder': './assets/images/ft_ic_folder_rule.svg',\n        'linkFolder': './assets/images/ft_ic_folder_shortcut_link.svg',\n        'disable/folder': './assets/images/ft_ic_folder_disable.svg',\n        'selected': './assets/images/ft_ic_selected.svg'\n    };\n\n    constructor(public contentService: ContentService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        Object.keys(this.mimeTypeIcons).forEach((key) => {\n            const url = sanitizer.bypassSecurityTrustResourceUrl(this.mimeTypeIcons[key]);\n\n            matIconRegistry.addSvgIcon(key, url);\n            matIconRegistry.addSvgIconInNamespace('adf', key, url);\n        });\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns URL string\n     */\n    public getDocumentThumbnailUrl(node: any): string {\n        const thumbnail = this.contentService.getDocumentThumbnailUrl(node);\n        return thumbnail || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Gets a thumbnail URL for a MIME type.\n     * @param mimeType MIME type for the thumbnail\n     * @returns URL string\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        const icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Gets a \"miscellaneous\" thumbnail URL for types with no other icon defined.\n     * @returns URL string\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: NodeEntry): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: NodeEntry): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport interface HighlightTransformResult {\n    text: string;\n    changed: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HighlightTransformService {\n\n    /**\n     * Searches for `search` string(s) within `text` and highlights all occurrences.\n     * @param text Text to search within\n     * @param search Text pattern to search for\n     * @param wrapperClass CSS class used to provide highlighting style\n     * @returns New text along with boolean value to indicate whether anything was highlighted\n     */\n    public highlight(text: string, search: string, wrapperClass: string = 'adf-highlight'): HighlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(/<[^>]+>/g, '').replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n\n            return { text: result, changed: isMatching };\n        } else {\n            return { text: result, changed: isMatching };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return highlightTransformResult.text;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n    defaultLocale = 'en-US';\n\n    transform(value: Date, locale?: string) {\n        if (value !== null && value !== undefined ) {\n            const actualLocale = locale ? locale : this.defaultLocale;\n            const then = moment(value);\n            const diff = moment().locale(actualLocale).diff(then, 'days');\n            return diff > 7 ? then.locale(actualLocale).format('DD/MM/YYYY HH:mm') : then.locale(actualLocale).fromNow();\n        }\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { EcmUserModel } from '../userinfo/models/ecm-user.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {\n    }\n\n    transform(user: UserProcessModel | EcmUserModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let safeHtml: SafeHtml = '';\n        if (user) {\n            const initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            safeHtml = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return safeHtml;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'fullName' })\nexport class FullNamePipe implements PipeTransform {\n    transform(user: any): string {\n        let fullName = '';\n        if (user) {\n            if (user.firstName) {\n                fullName += user.firstName;\n            }\n            if (user.lastName) {\n                fullName += fullName.length > 0 ? ' ' : '';\n                fullName += user.lastName;\n            }\n        }\n        return fullName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'formatSpace'\n})\nexport class FormatSpacePipe implements PipeTransform {\n\n    transform(inputValue: string, replaceChar: string = '_', lowerCase: boolean = true): string {\n        let transformedString = '';\n        if (inputValue) {\n            transformedString = lowerCase ? inputValue.trim().split(' ').join(replaceChar).toLocaleLowerCase() :\n                inputValue.trim().split(' ').join(replaceChar);\n        }\n        return transformedString;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'fileType',\n    pure: true\n})\nexport class FileTypePipe implements PipeTransform {\n\n    transform(value: string) {\n\n        if ( value == null || value === undefined ) {\n            return '';\n        } else {\n            const fileInfo = value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '');\n            return fileInfo.split('_').pop();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'multiValue' })\nexport class MultiValuePipe implements PipeTransform {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    transform(values: string | string [], valueSeparator: string = MultiValuePipe.DEFAULT_SEPARATOR): string {\n\n        if (values && values instanceof Array) {\n            const valueList = values.map((value) => value.trim());\n            return valueList.join(valueSeparator);\n        }\n\n        return <string> values;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nimport { MimeTypeIconPipe } from './mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './node-name-tooltip.pipe';\nimport { HighlightPipe } from './text-highlight.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { InitialUsernamePipe } from './user-initial.pipe';\nimport { FullNamePipe } from './full-name.pipe';\nimport { FormatSpacePipe } from './format-space.pipe';\nimport { FileTypePipe } from './file-type.pipe';\nimport { MultiValuePipe } from './multi-value.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe\n    ],\n    providers: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe\n    ],\n    exports: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe\n    ]\n})\nexport class PipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Input, Renderer2, AfterViewChecked } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective implements AfterViewChecked {\n\n    /** Class selector for highlightable elements. */\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    /** Text to highlight. */\n    @Input('adf-highlight')\n    search: string = '';\n\n    /** CSS class used to apply highlighting. */\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private highlightTransformService: HighlightTransformService) {\n    }\n\n    ngAfterViewChecked() {\n        this.highlight();\n    }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (highlightTransformResult.changed) {\n                    this.renderer.setProperty(element, 'innerHTML', highlightTransformResult.text);\n                }\n            });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    /** URI to redirect to after logging out. */\n    @Input()\n    redirectUri: string = '/login';\n\n    /** Enable redirecting after logout */\n    @Input()\n    enableRedirect: boolean = true;\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private router: Router,\n                private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToUri(),\n            () => this.redirectToUri()\n        );\n    }\n\n    redirectToUri() {\n        if (this.enableRedirect) {\n            this.router.navigate([this.redirectUri]);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { NodeEntry, Node, DeletedNodeEntity, DeletedNode } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { map, catchError } from 'rxjs/operators';\n\ninterface ProcessedNodeData {\n    entry: Node | DeletedNode;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    /** Array of nodes to delete. */\n    @Input('adf-delete')\n    selection: NodeEntry[] | DeletedNodeEntity[];\n\n    /** If true then the nodes are deleted immediately rather than being put in the trash */\n    @Input()\n    permanent: boolean = false;\n\n    /** Emitted when the nodes have been deleted. */\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-check-allowable-operation')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: NodeEntry[] | DeletedNodeEntity[]) {\n        if (selection && selection.length) {\n\n            const batch = this.getDeleteNodesBatch(selection);\n\n            forkJoin(...batch)\n                .subscribe((data: ProcessedNodeData[]) => {\n                    const processedItems: ProcessStatus = this.processStatus(data);\n                    const message = this.getMessage(processedItems);\n\n                    this.delete.emit(message);\n                });\n        }\n    }\n\n    private getDeleteNodesBatch(selection: any): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: NodeEntry | DeletedNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        let promise;\n\n        if (node.entry.hasOwnProperty('archivedAt')) {\n            promise = this.alfrescoApiService.nodesApi.purgeDeletedNode(id);\n        } else {\n            promise = this.alfrescoApiService.nodesApi.deleteNode(id, { permanent: this.permanent });\n        }\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: node.entry,\n                status: 1\n            })),\n            catchError(() => of({\n                entry: node.entry,\n                status: 0\n            }))\n        );\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private getMessage(status): string {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                { number: status.failed.length }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PLURAL',\n                { number: status.success.length }\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                { name: status.failed[0].entry.name }\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.SINGULAR',\n                { name: status.success[0].entry.name }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, NodeEntry, SharedLinkEntry, Node, SharedLink } from '@alfresco/js-api';\nimport { Observable, from, forkJoin, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    favorites: any[] = [];\n\n    /** Array of nodes to toggle as favorites. */\n    @Input('adf-node-favorite')\n    selection: NodeEntry[] = [];\n\n    /** Emitted when the favorite setting is complete. */\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the favorite setting fails. */\n    @Output() error: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected: NodeEntry | SharedLinkEntry) => {\n                // shared files have nodeId\n                const id = (<SharedLinkEntry> selected).entry.nodeId || selected.entry.id;\n\n                return from(this.alfrescoApiService.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            forkJoin(batch).subscribe(\n                () => {\n                    this.favorites.map((selected) => selected.entry.isFavorite = false);\n                    this.toggle.emit();\n                },\n                (error) => this.error.emit(error)\n            );\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            from(this.alfrescoApiService.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(\n                    () => {\n                        notFavorite.map((selected) => selected.entry.isFavorite = true);\n                        this.toggle.emit();\n                    },\n                    (error) => this.error.emit(error)\n                );\n        }\n    }\n\n    markFavoritesNodes(selection: NodeEntry[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        forkJoin(batch).subscribe((data) => {\n            this.favorites.push(...data);\n        });\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: NodeEntry) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: NodeEntry | SharedLinkEntry): Observable<any> {\n        const node: Node | SharedLink = selected.entry;\n\n        // ACS 6.x with 'isFavorite' include\n        if (node && node.hasOwnProperty('isFavorite')) {\n            return of(selected);\n        }\n\n        // ACS 5.x and 6.x without 'isFavorite' include\n        const { name, isFile, isFolder } = <Node> node;\n        const id =  (<SharedLink> node).nodeId || node.id;\n\n        const promise = this.alfrescoApiService.favoritesApi.getFavorite('-me-', id);\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            })),\n            catchError(() => {\n                return of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            })\n        );\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map((item) => item.entry.id);\n\n        return list.filter((item) => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map((item) => item.entry.id);\n\n        return patch.filter((item) => ids.includes(item.entry.id) ? item : null);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ChangeDetectorRef, Directive, ElementRef, Host, Inject, Input, OnChanges, Optional, Renderer2,  SimpleChanges } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ContentService } from './../services/content.service';\nimport { EXTENDIBLE_COMPONENT } from './../interface/injection.tokens';\n\nexport interface NodeAllowableOperationSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-check-allowable-operation]'\n})\nexport class CheckAllowableOperationDirective implements OnChanges {\n\n    /** Node permission to check (create, delete, update, updatePermissions,\n     * !create, !delete, !update, !updatePermissions).\n     */\n    @Input('adf-check-allowable-operation')\n    permission: string  = null;\n\n    /** Nodes to check permission for. */\n    @Input('adf-nodes')\n    nodes: NodeEntry[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private contentService: ContentService,\n                private changeDetector: ChangeDetectorRef,\n\n                @Host()\n                @Optional()\n                @Inject(EXTENDIBLE_COMPONENT) private parentComponent?: NodeAllowableOperationSubject) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    updateElement(): boolean {\n        const enable = this.hasAllowableOperations(this.nodes, this.permission);\n\n        if (enable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n\n        return enable;\n    }\n\n    private enable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = false;\n            this.changeDetector.detectChanges();\n        } else {\n            this.enableElement();\n        }\n    }\n\n    private disable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = true;\n            this.changeDetector.detectChanges();\n        } else {\n            this.disableElement();\n        }\n    }\n\n    /**\n     * Enables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    enableElement(): void {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n    }\n\n    /**\n     * Disables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    disableElement(): void {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param  nodes Node collection to check\n     * @param  permission Permission to check for each node\n     * @memberof CheckAllowableOperationDirective\n     */\n    hasAllowableOperations(nodes: NodeEntry[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every((node) => this.contentService.hasAllowableOperations(node.entry, permission));\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\n\nexport class RestoreMessageModel {\n    message: string;\n    path: PathInfoEntity;\n    action: string;\n}\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    /** Array of deleted nodes to restore. */\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    /** Emitted when restoration is complete. */\n    @Output()\n    restore: EventEmitter<RestoreMessageModel> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any) {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && nodesWithPath.length) {\n\n            this.restoreNodesBatch(nodesWithPath).pipe(\n                tap((restoredNodes) => {\n                    const status = this.processStatus(restoredNodes);\n\n                    this.restoreProcessStatus.fail.push(...status.fail);\n                    this.restoreProcessStatus.success.push(...status.success);\n                }),\n                mergeMap(() => this.getDeletedNodes())\n            )\n            .subscribe((deletedNodesList) => {\n                const { entries: nodeList } = deletedNodesList.list;\n                const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                const remainingNodes = this.diff(selectedNodes, nodeList);\n\n                if (!remainingNodes.length) {\n                    this.notification();\n                } else {\n                    this.recover(remainingNodes);\n                }\n            });\n        } else {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.notification();\n            return;\n        }\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: ['path'] });\n\n        return from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return from(promise).pipe(\n            map(() => ({\n                status: 1,\n                entry\n            })),\n            catchError((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            })\n        );\n    }\n\n    private diff(selection, list, fromList = true): any {\n        const ids = selection.map((item) => item.entry.id);\n\n        return list.filter((item) => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): string {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private notification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        const message = this.getRestoreMessage();\n        this.reset();\n\n        const action = (status.oneSucceeded && !status.someFailed) ? this.translation.instant('CORE.RESTORE_NODE.VIEW') : '';\n\n        let path;\n        if (status.success && status.success.length > 0) {\n            path = status.success[0].entry.path;\n        }\n        this.restore.emit({\n            message: message,\n            action: action,\n            path: path\n        });\n    }\n\n    private reset(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    /** Enables/disables uploading. */\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    /** Data to upload. */\n    @Input('adf-upload-data')\n    data: any;\n\n    /** Upload mode. Can be \"drop\" (receives dropped files) or \"click\"\n     * (clicking opens a file dialog). Both modes can be active at once.\n     */\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    /** Toggles multiple file uploads. */\n    @Input()\n    multiple: boolean;\n\n    /** (Click mode only) MIME type filter for files to accept. */\n    @Input()\n    accept: string;\n\n    /** (Click mode only) Toggles uploading of directories. */\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            const inputUpload = this.renderer.createElement('input');\n            this.upload = this.el.nativeElement.parentElement.appendChild(inputUpload);\n\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', (event) => this.onSelectFiles(event));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTransfer = this.getDataTransfer(event);\n            if (dataTransfer) {\n                this.getFilesDropped(dataTransfer).then((files) => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            const customEvent = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(customEvent);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise((resolve) => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            const item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise((resolveFolder) => {\n                                        FileUtils.flatten(item).then((files) => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    const files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map((file) => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then((result) => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param event DOM event\n     */\n    onSelectFiles(event: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> event.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map((file) => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            event.target.value = '';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, DownloadEntry, DownloadBodyCreate } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { LogService } from './log.service';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadZipService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates a new download.\n     * @param payload Object containing the node IDs of the items to add to the ZIP file\n     * @returns Status object for the download\n     */\n    createDownload(payload: DownloadBodyCreate): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.createDownload(payload)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param nodeId Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @returns URL string\n     */\n    getContentUrl(nodeId: string, attachment?: boolean): string {\n        return this.apiService.getInstance().content.getContentUrl(nodeId, attachment);\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @returns Details of the node\n     */\n    getNode(nodeId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().core.nodesApi.getNode(nodeId));\n    }\n\n    /**\n     * Gets status information for a download node.\n     * @param downloadId ID of the download node\n     * @returns Status object for the download\n     */\n    getDownload(downloadId: string): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.getDownload(downloadId));\n    }\n\n    /**\n     * Cancels a download.\n     * @param downloadId ID of the target download node\n     */\n    cancelDownload(downloadId: string) {\n        this.apiService.getInstance().core.downloadsApi.cancelDownload(downloadId);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, NodeEntry } from '@alfresco/js-api';\nimport { LogService } from '../services/log.service';\nimport { DownloadZipService } from '../services/download-zip.service';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    cancelled = false;\n    downloadId: string;\n\n    constructor(private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA)\n                public data: any,\n                private logService: LogService,\n                private downloadZipService: DownloadZipService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.downloadZipService.cancelDownload(this.downloadId);\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            this.downloadZipService.createDownload({ nodeIds }).subscribe((data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.downloadZipService.getContentUrl(data.entry.id, true);\n\n                    this.downloadZipService.getNode(data.entry.id).subscribe((downloadNode: NodeEntry) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.downloadId = data.entry.id;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadZipService.getDownload(downloadId).subscribe((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\nimport { NodeEntry } from '@alfresco/js-api';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-node-download], [adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: NodeEntry | NodeEntry[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: NodeEntry | Array<NodeEntry>) {\n\n        if (!this.isSelectionValid(selection)) {\n            return;\n        }\n        if (selection instanceof Array) {\n            if (selection.length === 1) {\n                this.downloadNode(selection[0]);\n            } else {\n                this.downloadZip(selection);\n            }\n        } else {\n            this.downloadNode(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: NodeEntry) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private isSelectionValid(selection: NodeEntry | Array<NodeEntry>) {\n        return selection || (selection instanceof Array && selection.length > 0);\n    }\n\n    private downloadFile(node: NodeEntry) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<NodeEntry>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { LogoutDirective } from './logout.directive';\nimport { NodeDeleteDirective } from './node-delete.directive';\nimport { NodeFavoriteDirective } from './node-favorite.directive';\nimport { CheckAllowableOperationDirective } from './check-allowable-operation.directive';\nimport { NodeRestoreDirective } from './node-restore.directive';\nimport { UploadDirective } from './upload.directive';\nimport { NodeDownloadDirective } from './node-download.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ],\n    exports: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ]\n})\nexport class DirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultCell\"\n                adf-clipboard=\"CLIPBOARD.CLICK_TO_COPY\"\n                [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\"\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n                >{{ value$ | async }}</span>\n        </ng-container>\n        <ng-template #defaultCell>\n            <span\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n            >{{ value$ | async }}</span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class DataTableCellComponent implements OnInit, OnDestroy {\n    /** Data table adapter instance. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Data that defines the column. */\n    @Input()\n    column: DataColumn;\n\n    /** Data that defines the row. */\n    @Input()\n    row: DataRow;\n\n    value$ = new BehaviorSubject<any>('');\n\n    /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n    @Input()\n    copyContent: boolean;\n\n    /** Text for the cell's tooltip. */\n    @Input()\n    tooltip: string;\n\n    private sub: Subscription;\n\n    constructor(protected alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe((node: Node) => {\n            if (this.row) {\n                if (this.row['node'].entry.id === node.id) {\n                    this.row['node'].entry = node;\n                    this.row['cache'][this.column.key] = this.column.key.split('.').reduce((source, key) => source[key], node);\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const value = this.data.getValue(this.row, this.column);\n\n            this.value$.next(value);\n\n            if (!this.tooltip) {\n                this.tooltip = value;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    /** Data source key. Can be either a column/property key like `title`\n     *  or a property path like `createdBy.name`.\n     */\n    @Input()\n    key: string;\n\n    /** Value type for the column. Possible settings are 'text', 'image',\n     * 'date', 'fileSize', 'location', and 'json'.\n     */\n    @Input()\n    type: string = 'text';\n\n    /** Value format (if supported by the parent component), for example format of the date. */\n    @Input()\n    format: string;\n\n    /** Toggles ability to sort by this column, for example by clicking the column header. */\n    @Input()\n    sortable: boolean = true;\n\n    /** Display title of the column, typically used for column headers. You can use the\n     * i18n resource key to get it translated automatically.\n     */\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /** Custom tooltip formatter function. */\n    @Input()\n    formatTooltip: Function;\n\n    /** Title to be used for screen readers. */\n    @Input('sr-title')\n    srTitle: string;\n\n    /** Additional CSS class to be applied to column (header and cells). */\n    @Input('class')\n    cssClass: string;\n\n     /** Enables/disables a Clipboard directive to allow copying of cell contents. */\n    @Input()\n    copyContent: boolean;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AssocChildBody, AssociationBody } from '@alfresco/js-api';\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport class FileUploadOptions {\n    comment?: string;\n    newVersion?: boolean;\n    majorVersion?: boolean;\n    parentId?: string;\n    path?: string;\n    nodeType?: string;\n    properties?: any;\n    association?: any;\n    secondaryChildren?: AssocChildBody[];\n    targets?: AssociationBody[];\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    id: string;\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    errorCode: number;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions, id?: string) {\n        this.file = file;\n        this.id = id;\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n        this.errorCode = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        }, options);\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseUIEvent } from '../../events';\nimport { DataRow } from './data-row.model';\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { DataColumnListComponent } from '../../../data-column/data-column-list.component';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRowEvent } from '../../data/data-row-event.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataSorting } from '../../data/data-sorting.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\nimport { ObjectDataRow } from '../../data/object-datarow.model';\nimport { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\nimport { share, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nexport enum DisplayMode {\n    List = 'list',\n    Gallery = 'gallery'\n}\n\n@Component({\n    selector: 'adf-datatable',\n    styleUrls: ['./datatable.component.scss'],\n    templateUrl: './datatable.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable' }\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck, OnDestroy {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Data source for the table */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Selects the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** The rows that the datatable will show. */\n    @Input()\n    rows: any[] = [];\n\n    /** Define the sort order of the datatable. Possible values are :\n     * [`created`, `desc`], [`created`, `asc`], [`due`, `desc`], [`due`, `asc`]\n     */\n    @Input()\n    sorting: any[] = [];\n\n    /** The columns that the datatable will show. */\n    @Input()\n    columns: any[] = [];\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the data actions column. */\n    @Input()\n    actions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Fallback image for rows where the thumbnail is missing. */\n    @Input()\n    fallbackThumbnail: string;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    contextMenu: boolean = false;\n\n    /** Toggles file drop support for rows (see\n     * [Upload directive](upload.directive.md) for further details).\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** The inline style to apply to every row. See\n     * [NgStyle](https://angular.io/docs/ts/latest/api/common/index/NgStyle-directive.html)\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row. */\n    @Input()\n    rowStyleClass: string = '';\n\n    /** Toggles the header. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Emitted when the user clicks a row. */\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted when the user double-clicks a row. */\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Flag that indicates if the datatable is in loading state and needs to show the\n     * loading template (see the docs to learn how to configure a loading template).\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Flag that indicates if the datatable should show the \"no permission\" template. */\n    @Input()\n    noPermission: boolean = false;\n\n    /**\n     * Should the items for the row actions menu be cached for reuse after they are loaded\n     * the first time?\n     */\n    @Input()\n    rowMenuCacheEnabled = true;\n\n    noContentTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    /** This array of fake rows fix the flex layout for the gallery view */\n    fakeRows = [];\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private subscriptions: Subscription[] = [];\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n    private dataRowsChanged: Subscription;\n\n    constructor(private elementRef: ElementRef,\n                differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>((observer) => this.clickObserver = observer)\n            .pipe(share());\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.datatableLayoutFix();\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n                this.resetSelection();\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n\n        if (this.isPropertyChanged(changes['sorting'])) {\n            this.setTableSorting(changes['sorting'].currentValue);\n        }\n\n        if (this.isPropertyChanged(changes['display'])) {\n            this.datatableLayoutFix();\n        }\n    }\n\n    ngDoCheck() {\n        const changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map((row) => new ObjectDataRow(row, row.isSelected));\n    }\n\n    convertToDataSorting(sorting: any[]): DataSorting {\n        if (sorting && sorting.length > 0) {\n            return new DataSorting(sorting[0], sorting[1]);\n        }\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        const singleClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length === 1)\n            );\n\n        this.singleClickStreamSub = singleClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.handleRowSelection(event.value, <MouseEvent | KeyboardEvent> event.event);\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        const multiClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length >= 2)\n            );\n\n        this.multiClickStreamSub = multiClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n            this.singleClickStreamSub = null;\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n            this.multiClickStreamSub = null;\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.columns);\n        this.setTableSorting(this.sorting);\n        this.resetSelection();\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows: any[]) {\n        if (this.data) {\n            this.resetSelection();\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        let schema = [];\n        if (!this.columns || this.columns.length === 0) {\n            schema = this.getSchemaFromHtml();\n        } else {\n            schema = this.columns.concat(this.getSchemaFromHtml());\n        }\n\n        this.columns = schema;\n\n        if (this.data && this.columns && this.columns.length > 0) {\n            this.data.setColumns(this.columns);\n        }\n    }\n\n    private setTableSorting(sorting) {\n        if (this.data) {\n            this.data.setSorting(this.convertToDataSorting(sorting));\n        }\n    }\n\n    public getSchemaFromHtml(): any {\n        let schema = [];\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n    onRowClick(row: DataRow, mouseEvent: MouseEvent) {\n        if (mouseEvent) {\n            mouseEvent.preventDefault();\n        }\n\n        if (row) {\n            const dataRowEvent = new DataRowEvent(row, mouseEvent, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    onEnterKeyPressed(row: DataRow, e: KeyboardEvent) {\n        if (row) {\n            this.handleRowSelection(row, e);\n        }\n    }\n\n    private handleRowSelection(row: DataRow, e: KeyboardEvent | MouseEvent) {\n        if (this.data) {\n            if (this.isSingleSelectionMode()) {\n                this.resetSelection();\n                this.selectRow(row, true);\n                this.emitRowSelectionEvent('row-select', row);\n            }\n\n            if (this.isMultiSelectionMode()) {\n                const modifier = e && (e.metaKey || e.ctrlKey);\n                let newValue: boolean;\n                if (this.selection.length === 1) {\n                    newValue = !row.isSelected;\n                } else {\n                    newValue = modifier ? !row.isSelected : true;\n                }\n                const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                if (!modifier) {\n                    this.resetSelection();\n                }\n                this.selectRow(row, newValue);\n                this.emitRowSelectionEvent(domEventName, row);\n            }\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach((r) => r.isSelected = false);\n            }\n            this.selection = [];\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, event?: Event) {\n        if (event) {\n            event.preventDefault();\n        }\n        const dataRowEvent = new DataRowEvent(row, event, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent) {\n            keyboardEvent.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, keyboardEvent, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            const current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n            this.emitSortingChangedEvent(column.key, newDirection);\n        }\n    }\n\n    onSelectAllClick(matCheckboxChange: MatCheckboxChange) {\n        this.isSelectAllChecked = matCheckboxChange.checked;\n\n        if (this.multiselect) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], matCheckboxChange.checked);\n                }\n            }\n\n            const domEventName = matCheckboxChange.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MatCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event, row: DataRow) {\n        if (event) {\n            const element = <any> event.target;\n\n            if (this.fallbackThumbnail) {\n                element.src = this.fallbackThumbnail;\n            } else {\n                element.src = row.imageErrorResolver(event);\n            }\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            const value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            const value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '') : '';\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            const sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        const event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col?: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            const event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            if (!this.rowMenuCacheEnabled) {\n                return event.value.actions;\n            }\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    getSortingKey(): string {\n        if (this.data.getSorting()) {\n            return this.data.getSorting().key;\n        }\n    }\n\n    selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    getSortableColumns() {\n        return this.data.getColumns().filter((column) => {\n            return column.sortable === true;\n        });\n    }\n\n    isEmpty() {\n        return this.data.getRows().length === 0;\n    }\n\n    isHeaderVisible() {\n        return !this.loading && !this.isEmpty() && !this.noPermission;\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    private emitSortingChangedEvent(key: string, direction: string) {\n        const domEvent = new CustomEvent('sorting-changed', {\n            detail: {\n                key,\n                direction\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribeClickStream();\n\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.dataRowsChanged) {\n            this.dataRowsChanged.unsubscribe();\n            this.dataRowsChanged = null;\n        }\n    }\n\n    datatableLayoutFix() {\n        const maxGalleryRows = 25;\n\n        if (this.display === 'gallery') {\n            for (let i = 0; i < maxGalleryRows; i++) {\n               this.fakeRows.push('');\n            }\n        } else {\n            this.fakeRows = [];\n        }\n    }\n\n    getNameColumnValue() {\n        return this.data.getColumns().find( (el: any) => {\n            return el.key.includes('name');\n        });\n    }\n\n    getAutomationValue(row: DataRow, col: DataColumn) {\n        const name = this.getNameColumnValue();\n        return name ? row.getValue(name.key) : '';\n    }\n}\n\nexport interface DataTableDropEvent {\n    detail: {\n        target: 'cell' | 'header';\n        event: Event;\n        column: DataColumn;\n        row?: DataRow\n    };\n\n    preventDefault(): void;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport {\n    UserPreferencesService,\n    UserPreferenceValues\n} from '../../../services/user-preferences.service';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-date-cell',\n\n    template: `\n        <ng-container>\n            <span\n                [attr.aria-label]=\"value$ | async | adfTimeAgo: currentLocale\"\n                title=\"{{ tooltip | date: 'medium' }}\"\n                class=\"adf-datatable-cell-value\"\n                *ngIf=\"format === 'timeAgo'; else standard_date\"\n            >\n                {{ value$ | async | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span\n                title=\"{{ tooltip | date: format }}\"\n                class=\"adf-datatable-cell-value\"\n                [attr.aria-label]=\"value$ | async | date: format\"\n            >\n                {{ value$ | async | date: format }}\n            </span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell adf-datatable-content-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {\n    currentLocale: string;\n\n    get format(): string {\n        if (this.column) {\n            return this.column.format || 'medium';\n        }\n        return 'medium';\n    }\n\n    constructor(\n        userPreferenceService: UserPreferencesService,\n        alfrescoApiService: AlfrescoApiService\n    ) {\n        super(alfrescoApiService);\n\n        if (userPreferenceService) {\n            userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .subscribe((locale) => {\n                    this.currentLocale = locale;\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styleUrls: ['./empty-list.component.scss'],\n    templateUrl: './empty-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    template: `\n        <ng-container>\n            <span\n                [title]=\"tooltip\"\n                [attr.aria-label]=\"value$ | async | adfFileSize\"\n                >{{ value$ | async | adfFileSize }}</span\n            >\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { PathInfoEntity } from '@alfresco/js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ value$ | async }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell adf-datatable-content-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n    @Input()\n    link: any[];\n\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n\n    /** @override */\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(\n                this.row,\n                this.column\n            );\n\n            if (path && path.name && path.elements) {\n                this.value$.next(path.name.split('/').pop());\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [this.column.format, parent.id];\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-loading-content-template, loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-content-template, no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-permission-template, no-permission-template'\n})\nexport class NoPermissionTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noPermissionTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The empty-folder-content selector will be deprecated as it has been replace by\n * adf-custom-empty-content-template.\n */\n@Directive({\n    selector: 'adf-custom-empty-content-template, empty-folder-content'\n})\n\nexport class CustomEmptyContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n    selector: 'adf-custom-loading-content-template'\n})\nexport class CustomLoadingContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The no-permission-content selector will be deprecated as it has been replace by\n * adf-custom-no-permission-template.\n */\n@Directive({\n    selector: 'adf-custom-no-permission-template, no-permission-content'\n})\nexport class CustomNoPermissionTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-json-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultJsonTemplate\" class=\"adf-datatable-cell-value\">\n                <pre\n                    class=\"adf-datatable-json-cell\"\n                    [adf-clipboard]=\"'CLIPBOARD.CLICK_TO_COPY'\"\n                    [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-container>\n        <ng-template #defaultJsonTemplate>\n            <span class=\"adf-datatable-cell-value\">\n                <pre class=\"adf-datatable-json-cell\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-template>\n    `,\n    styleUrls: ['./json-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class JsonCellComponent extends DataTableCellComponent implements OnInit {\n\n     /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n     @Input()\n     copyContent: boolean;\n\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            this.value$.next(this.data.getValue(this.row, this.column));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { TranslationService } from './translation.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    constructor(private snackBar: MatSnackBar,\n                private translationService: TranslationService,\n                private appConfigService: AppConfigService) {\n        this.DEFAULT_DURATION_MESSAGE = this.appConfigService.get<number>(AppConfigValues.NOTIFY_DURATION) || this.DEFAULT_DURATION_MESSAGE;\n\n    }\n\n    /**\n     * Opens a SnackBar notification to show a message.\n     * @param message The message (or resource key) to show.\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessage(message: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, null, config);\n    }\n\n    /**\n     * Opens a SnackBar notification with a message and a response button.\n     * @param message The message (or resource key) to show.\n     * @param action Caption for the response button\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessageAction(message: string, action: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, action, config);\n    }\n\n    /**\n     *  dismiss the notification snackbar\n     */\n    dismissSnackMessageAction() {\n        return this.snackBar.dismiss();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { LogService } from '../services/log.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable()\nexport class ClipboardService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private logService: LogService,\n        private notificationService: NotificationService) {}\n\n    /**\n     * Checks if the target element can have its text copied.\n     * @param target Target HTML element\n     * @returns True if the text can be copied, false otherwise\n     */\n    isTargetValid(target: HTMLInputElement | HTMLTextAreaElement) {\n        if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n            return !target.hasAttribute('disabled');\n        }\n        return false;\n    }\n\n    /**\n     * Copies text from an HTML element to the clipboard.\n     * @param target HTML element to be copied\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyToClipboard(target: HTMLInputElement | HTMLTextAreaElement, message?: string) {\n        if (this.isTargetValid(target)) {\n            try {\n                target.select();\n                target.setSelectionRange(0, target.value.length);\n                this.document.execCommand('copy');\n                this.notify(message);\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    /**\n     * Copies a text string to the clipboard.\n     * @param content Text to copy\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyContentToClipboard(content: string, message: string) {\n        try {\n            document.addEventListener('copy', (e: ClipboardEvent) => {\n                e.clipboardData.setData('text/plain', (content));\n                e.preventDefault();\n                document.removeEventListener('copy', null);\n              });\n            document.execCommand('copy');\n            this.notify(message);\n        } catch (error) {\n            this.logService.error(error);\n        }\n    }\n\n    private notify(message) {\n        if (message) {\n            this.notificationService.openSnackMessage(message);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, Component, ViewContainerRef, ComponentFactoryResolver, ViewEncapsulation, OnInit } from '@angular/core';\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    selector: '[adf-clipboard]',\n    exportAs: 'adfClipboard'\n})\nexport class ClipboardDirective {\n    /** Translation key or message for the tooltip. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-clipboard')\n    placeholder: string;\n\n    /** Reference to the HTML element containing the text to copy. */\n    @Input()\n    target: HTMLInputElement | HTMLTextAreaElement;\n\n    /** Translation key or message for snackbar notification. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('clipboard-notification') message: string;\n\n    constructor(private clipboardService: ClipboardService,\n                public viewContainerRef: ViewContainerRef,\n                private resolver: ComponentFactoryResolver) {}\n\n    @HostListener('click', ['$event'])\n    handleClickEvent(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.copyToClipboard();\n    }\n\n    @HostListener('mouseenter')\n    showTooltip() {\n        if (this.placeholder) {\n            const componentFactory = this.resolver.resolveComponentFactory(ClipboardComponent);\n            const componentRef = this.viewContainerRef.createComponent(componentFactory).instance;\n            componentRef.placeholder = this.placeholder;\n        }\n    }\n\n    @HostListener('mouseleave')\n    closeTooltip() {\n        this.viewContainerRef.remove();\n    }\n\n    private copyToClipboard() {\n        const isValidTarget = this.clipboardService.isTargetValid(this.target);\n\n        if (isValidTarget) {\n            this.clipboardService.copyToClipboard(this.target, this.message);\n        } else {\n            this.copyContentToClipboard(this.viewContainerRef.element.nativeElement.innerHTML);\n        }\n    }\n\n    private copyContentToClipboard(content) {\n        this.clipboardService.copyContentToClipboard(content, this.message);\n    }\n}\n\n@Component({\n    selector: 'adf-copy-content-tooltip',\n    template: `\n        <span class='adf-copy-tooltip'>{{ placeholder | translate }} </span>\n        `,\n    styleUrls: ['./clipboard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClipboardComponent implements OnInit {\n    placeholder: string;\n\n    ngOnInit() {\n        this.placeholder = this.placeholder || 'CLIPBOARD.CLICK_TO_COPY';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClipboardDirective, ClipboardComponent } from './clipboard.directive';\nimport { ClipboardService } from './clipboard.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    providers: [\n        ClipboardService\n    ],\n    declarations: [\n        ClipboardDirective,\n        ClipboardComponent\n    ],\n    exports: [\n        ClipboardDirective\n    ],\n    entryComponents: [ClipboardComponent]\n})\n\nexport class ClipboardModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, ElementRef, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataColumn } from '../../data/data-column.model';\n\n@Directive({\n    selector: '[adf-drop-zone]'\n})\nexport class DropZoneDirective implements OnInit, OnDestroy {\n    private element: HTMLElement;\n\n    @Input()\n    dropTarget: 'header' | 'cell' = 'cell';\n\n    @Input()\n    dropRow: DataRow;\n\n    @Input()\n    dropColumn: DataColumn;\n\n    constructor(elementRef: ElementRef, private ngZone: NgZone) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('drop', this.onDrop.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    onDragOver(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-dragover`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    onDrop(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-drop`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { ContextMenuModule } from '../context-menu/context-menu.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { DirectiveModule } from '../directives/directive.module';\nimport { DataTableCellComponent } from './components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './components/datatable/datatable.component';\nimport { DateCellComponent } from './components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './directives/no-content-template.directive';\nimport { NoPermissionTemplateDirective } from './directives/no-permission-template.directive';\nimport { CustomEmptyContentTemplateDirective } from './directives/custom-empty-content-template.directive';\nimport { CustomLoadingContentTemplateDirective } from './directives/custom-loading-template.directive';\nimport { CustomNoPermissionTemplateDirective } from './directives/custom-no-permission-template.directive';\nimport { JsonCellComponent } from './components/datatable/json-cell.component';\nimport { ClipboardModule } from '../clipboard/clipboard.module';\nimport { DropZoneDirective } from './components/datatable/drop-zone.directive';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild(),\n        ContextMenuModule,\n        PipeModule,\n        DirectiveModule,\n        ClipboardModule\n    ],\n    declarations: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ],\n    exports: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ]\n\n})\nexport class DataTableModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataColumnListComponent } from './data-column-list.component';\nimport { DataColumnComponent } from './data-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ],\n    exports: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ]\n})\nexport class DataColumnModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { AboutComponent } from './about.component';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        AboutComponent\n    ],\n    exports: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewUtilService {\n    static TARGET = '_new';\n\n    /**\n     * Content groups based on categorization of files that can be viewed in the web browser. This\n     * implementation or grouping is tied to the definition the ng component: ViewerComponent\n     */\n        // tslint:disable-next-line:variable-name\n    static ContentGroup = {\n        IMAGE: 'image',\n        MEDIA: 'media',\n        PDF: 'pdf',\n        TEXT: 'text'\n    };\n\n    /**\n     * Based on ViewerComponent Implementation, this value is used to determine how many times we try\n     * to get the rendition of a file for preview, or printing.\n     */\n    maxRetries = 5;\n\n    /**\n     * Mime-type grouping based on the ViewerComponent.\n     */\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * This method takes a url to trigger the print dialog against, and the type of artifact that it\n     * is.\n     * This URL should be one that can be rendered in the browser, for example PDF, Image, or Text\n     */\n    printFile(url: string, type: string): void {\n        const pwa = window.open(url, ViewUtilService.TARGET);\n        if (pwa) {\n            // Because of the way chrome focus and close image window vs. pdf preview window\n            if (type === ViewUtilService.ContentGroup.IMAGE) {\n                pwa.onfocus = () => {\n                    setTimeout(() => {\n                        pwa.close();\n                    }, 500);\n                };\n            }\n\n            pwa.onload = () => {\n                pwa.print();\n            };\n        }\n    }\n\n    /**\n     * Launch the File Print dialog from anywhere other than the preview service, which resolves the\n     * rendition of the object that can be printed from a web browser.\n     * These are: images, PDF files, or PDF rendition of files.\n     * We also force PDF rendition for TEXT type objects, otherwise the default URL is to download.\n     * TODO there are different TEXT type objects, (HTML, plaintext, xml, etc. we should determine how these are handled)\n     */\n    printFileGeneric(objectId: string, mimeType: string): void {\n        const nodeId = objectId;\n        const type: string = this.getViewerTypeByMimeType(mimeType);\n\n        this.getRendition(nodeId, ViewUtilService.ContentGroup.PDF)\n            .then((value) => {\n                const url: string = this.getRenditionUrl(nodeId, type, (value ? true : false));\n                const printType = (type === ViewUtilService.ContentGroup.PDF\n                    || type === ViewUtilService.ContentGroup.TEXT)\n                    ? ViewUtilService.ContentGroup.PDF : type;\n                this.printFile(url, printType);\n            })\n            .catch((err) => {\n                this.logService.error('Error with Printing');\n                this.logService.error(err);\n            });\n    }\n\n    getRenditionUrl(nodeId: string, type: string, renditionExists: boolean): string {\n        return (renditionExists && type !== ViewUtilService.ContentGroup.IMAGE) ?\n            this.apiService.contentApi.getRenditionUrl(nodeId, ViewUtilService.ContentGroup.PDF) :\n            this.apiService.contentApi.getContentUrl(nodeId, false);\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        const rendition = await this.apiService.renditionsApi.getRendition(nodeId, renditionId);\n\n        if (this.maxRetries < retries) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'CREATED') {\n                return rendition;\n            } else {\n                retries += 1;\n                await this.wait(1000);\n                return await this.waitRendition(nodeId, renditionId, retries);\n            }\n        }\n    }\n\n    getViewerTypeByMimeType(mimeType: string): string {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    wait(ms: number): Promise<any> {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    async getRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        const renditionPaging: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n        let rendition: RenditionEntry = renditionPaging.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId });\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n        return new Promise<RenditionEntry>((resolve) => resolve(rendition));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PreviousRouteService {\n\n    private previousUrl: string;\n    private currentUrl: string;\n\n    constructor(private router: Router) {\n        this.currentUrl = this.router.url;\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getPreviousUrl(): string {\n        return this.previousUrl;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-more-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-more-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerMoreActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-open-with',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-open-with' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerOpenWithComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-sidebar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-sidebar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerSidebarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@angular/common';\nimport {\n    Component, ContentChild, EventEmitter, HostListener, ElementRef,\n    Input, OnChanges, Output, SimpleChanges, TemplateRef,\n    ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { RenditionPaging, SharedLinkEntry, Node, RenditionEntry, NodeEntry } from '@alfresco/js-api';\nimport { BaseEvent } from '../../events';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { PreviousRouteService } from '../../services/previous-route.service';\nimport { ViewerMoreActionsComponent } from './viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './viewer-open-with.component';\nimport { ViewerSidebarComponent } from './viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './viewer-toolbar.component';\nimport { Subscription } from 'rxjs';\nimport { ViewUtilService } from '../services/view-util.service';\nimport { AppExtensionService, ViewerExtensionRef } from '@alfresco/adf-extensions';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'adf-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    host: { 'class': 'adf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ViewerComponent implements OnChanges, OnInit, OnDestroy {\n\n    @ContentChild(ViewerToolbarComponent)\n    toolbar: ViewerToolbarComponent;\n\n    @ContentChild(ViewerSidebarComponent)\n    sidebar: ViewerSidebarComponent;\n\n    @ContentChild(ViewerOpenWithComponent)\n    mnuOpenWith: ViewerOpenWithComponent;\n\n    @ContentChild(ViewerMoreActionsComponent)\n    mnuMoreActions: ViewerMoreActionsComponent;\n\n    /** If you want to load an external file that does not come from ACS you\n     * can use this URL to specify where to load the file from.\n     */\n    @Input()\n    urlFile = '';\n\n    /** Viewer to use with the `urlFile` address (`pdf`, `image`, `media`, `text`).\n     * Used when `urlFile` has no filename and extension.\n     */\n    @Input()\n    urlFileViewer: string = null;\n\n    /** Loads a Blob File */\n    @Input()\n    blobFile: Blob;\n\n    /** Node Id of the file to load. */\n    @Input()\n    nodeId: string = null;\n\n    /** Shared link id (to display shared file). */\n    @Input()\n    sharedLinkId: string = null;\n\n    /** If `true` then show the Viewer as a full page over the current content.\n     * Otherwise fit inside the parent div.\n     */\n    @Input()\n    overlayMode = false;\n\n    /** Hide or show the viewer */\n    @Input()\n    showViewer = true;\n\n    /** Hide or show the toolbar */\n    @Input()\n    showToolbar = true;\n\n    /** Specifies the name of the file when it is not available from the URL. */\n    @Input()\n    displayName: string;\n\n    /** Allows `back` navigation */\n    @Input()\n    allowGoBack = true;\n\n    /** Toggles downloading. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles printing. */\n    @Input()\n    allowPrint = false;\n\n    /** Toggles the 'Full Screen' feature. */\n    @Input()\n    allowFullScreen = true;\n\n    /** Toggles before/next navigation. You can use the arrow buttons to navigate\n     * between documents in the collection.\n     */\n    @Input()\n    allowNavigate = false;\n\n    /** Toggles the \"before\" (\"<\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateBefore = true;\n\n    /** Toggles the next (\">\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateNext = true;\n\n    /** Allow the left the sidebar. */\n    @Input()\n    allowLeftSidebar = false;\n\n    /** Allow the right sidebar. */\n    @Input()\n    allowRightSidebar = false;\n\n    /** Toggles PDF thumbnails. */\n    @Input()\n    allowThumbnails = true;\n\n    /** Toggles right sidebar visibility. Requires `allowRightSidebar` to be set to `true`. */\n    @Input()\n    showRightSidebar = false;\n\n    /** Toggles left sidebar visibility. Requires `allowLeftSidebar` to be set to `true`. */\n    @Input()\n    showLeftSidebar = false;\n\n    /** The template for the right sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarRightTemplate: TemplateRef<any> = null;\n\n    /** The template for the left sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarLeftTemplate: TemplateRef<any> = null;\n\n    /** The template for the pdf thumbnails. */\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    /** MIME type of the file content (when not determined by the filename extension). */\n    @Input()\n    mimeType: string;\n\n    /** Content filename. */\n    @Input()\n    fileName: string;\n\n    /** Number of times the Viewer will retry fetching content Rendition.\n     * There is a delay of at least one second between attempts.\n     */\n    @Input()\n    maxRetries = 10;\n\n    /** Emitted when user clicks the 'Back' button. */\n    @Output()\n    goBack = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Print' button. */\n    @Output()\n    print = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when the viewer is shown or hidden. */\n    @Output()\n    showViewerChange = new EventEmitter<boolean>();\n\n    /** Emitted when the filename extension changes. */\n    @Output()\n    extensionChange = new EventEmitter<string>();\n\n    /** Emitted when user clicks 'Navigate Before' (\"<\") button. */\n    @Output()\n    navigateBefore = new EventEmitter();\n\n    /** Emitted when user clicks 'Navigate Next' (\">\") button. */\n    @Output()\n    navigateNext = new EventEmitter();\n\n    /** Emitted when the shared link used is not valid. */\n    @Output()\n    invalidSharedLink = new EventEmitter();\n\n    viewerType = 'unknown';\n    isLoading = false;\n    nodeEntry: NodeEntry;\n\n    extensionTemplates: { template: TemplateRef<any>, isVisible: boolean }[] = [];\n    externalExtensions: string[] = [];\n    urlFileContent: string;\n    otherMenu: any;\n    extension: string;\n    sidebarRightTemplateContext: { node: Node } = { node: null };\n    sidebarLeftTemplateContext: { node: Node } = { node: null };\n    fileTitle: string;\n    viewerExtensions: Array<ViewerExtensionRef> = [];\n\n    private cacheBusterNumber;\n\n    private subscriptions: Subscription[] = [];\n\n    // Extensions that are supported by the Viewer without conversion\n    private extensions = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],\n        media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],\n        text: ['txt', 'xml', 'html', 'json', 'ts', 'css', 'md'],\n        pdf: ['pdf']\n    };\n\n    // Mime types that are supported by the Viewer without conversion\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private viewUtils: ViewUtilService,\n                private logService: LogService,\n                private location: Location,\n                private extensionService: AppExtensionService,\n                private el: ElementRef,\n                private router: Router,\n                private previousRouteService: PreviousRouteService) {\n    }\n\n    isSourceDefined(): boolean {\n        return (this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId) ? true : false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.apiService.nodeUpdated.subscribe((node) => this.onNodeUpdated(node))\n        );\n\n        this.loadExtensions();\n    }\n\n    private loadExtensions() {\n        this.viewerExtensions = this.extensionService.getViewerExtensions();\n        this.viewerExtensions\n            .forEach((extension: ViewerExtensionRef) => {\n                this.externalExtensions.push(extension.fileExtension);\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private onNodeUpdated(node: Node) {\n        if (node && node.id === this.nodeId) {\n            this.generateCacheBusterNumber();\n            this.isLoading = true;\n            this.setUpNodeFile(node).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showViewer) {\n            if (!this.isSourceDefined()) {\n                throw new Error('A content source attribute value is missing.');\n            }\n            this.isLoading = true;\n\n            if (this.blobFile) {\n                this.setUpBlobData();\n                this.isLoading = false;\n            } else if (this.urlFile) {\n                this.setUpUrlFile();\n                this.isLoading = false;\n            } else if (this.nodeId) {\n                this.apiService.nodesApi.getNode(this.nodeId, { include: ['allowableOperations'] }).then(\n                    (node: NodeEntry) => {\n                        this.nodeEntry = node;\n                        this.setUpNodeFile(node.entry).then(() => {\n                            this.isLoading = false;\n                        });\n                    },\n                    (error) => {\n                        this.isLoading = false;\n                        this.logService.error('This node does not exist');\n                    }\n                );\n            } else if (this.sharedLinkId) {\n                this.allowGoBack = false;\n\n                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then(\n                    (sharedLinkEntry: SharedLinkEntry) => {\n                        this.setUpSharedLinkFile(sharedLinkEntry);\n                        this.isLoading = false;\n                    },\n                    () => {\n                        this.isLoading = false;\n                        this.logService.error('This sharedLink does not exist');\n                        this.invalidSharedLink.next();\n                    });\n            }\n        }\n    }\n\n    private setUpBlobData() {\n        this.fileTitle = this.getDisplayName('Unknown');\n        this.mimeType = this.blobFile.type;\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n\n        this.allowDownload = false;\n        // TODO: wrap blob into the data url and allow downloading\n\n        this.extensionChange.emit(this.mimeType);\n        this.scrollTop();\n    }\n\n    private setUpUrlFile() {\n        const filenameFromUrl = this.getFilenameFromUrl(this.urlFile);\n        this.fileTitle = this.getDisplayName(filenameFromUrl);\n        this.extension = this.getFileExtension(filenameFromUrl);\n        this.urlFileContent = this.urlFile;\n\n        this.fileName = this.displayName;\n\n        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.scrollTop();\n    }\n\n    private async setUpNodeFile(data: Node) {\n        let setupNode;\n\n        if (data.content) {\n            this.mimeType = data.content.mimeType;\n        }\n\n        this.fileTitle = this.getDisplayName(data.name);\n\n        this.urlFileContent = this.apiService.contentApi.getContentUrl(data.id);\n        this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + this.cacheBusterNumber : this.urlFileContent;\n\n        this.extension = this.getFileExtension(data.name);\n\n        this.fileName = data.name;\n\n        this.viewerType = this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        if (this.viewerType === 'unknown') {\n            setupNode = this.displayNodeRendition(data.id);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.sidebarRightTemplateContext.node = data;\n        this.sidebarLeftTemplateContext.node = data;\n        this.scrollTop();\n\n        return setupNode;\n    }\n\n    private setUpSharedLinkFile(details: any) {\n        this.mimeType = details.entry.content.mimeType;\n        this.fileTitle = this.getDisplayName(details.entry.name);\n        this.extension = this.getFileExtension(details.entry.name);\n        this.fileName = details.entry.name;\n\n        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);\n\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByExtension(this.extension);\n        }\n\n        if (this.viewerType === 'unknown') {\n            this.displaySharedLinkRendition(this.sharedLinkId);\n        }\n\n        this.extensionChange.emit(this.extension);\n    }\n\n    toggleSidebar() {\n        this.showRightSidebar = !this.showRightSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarRightTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    toggleLeftSidebar() {\n        this.showLeftSidebar = !this.showLeftSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarLeftTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    private getDisplayName(name) {\n        return this.displayName || name;\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 1);\n    }\n\n    getViewerTypeByMimeType(mimeType: string) {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    getViewerTypeByExtension(extension: string) {\n        if (extension) {\n            extension = extension.toLowerCase();\n        }\n\n        if (this.isCustomViewerExtension(extension)) {\n            return 'custom';\n        }\n\n        if (this.extensions.image.indexOf(extension) >= 0) {\n            return 'image';\n        }\n\n        if (this.extensions.media.indexOf(extension) >= 0) {\n            return 'media';\n        }\n\n        if (this.extensions.text.indexOf(extension) >= 0) {\n            return 'text';\n        }\n\n        if (this.extensions.pdf.indexOf(extension) >= 0) {\n            return 'pdf';\n        }\n\n        return 'unknown';\n    }\n\n    onBackButtonClick() {\n        if (this.overlayMode) {\n            this.close();\n        } else {\n            const event = new BaseEvent<any>();\n            this.goBack.next(event);\n\n            if (!event.defaultPrevented) {\n\n                const previousUrl = this.previousRouteService.getPreviousUrl();\n\n                if (previousUrl && previousUrl.includes('login') || window.history.length <= 2) {\n                    this.router.navigate([{outlets: {overlay: null, primary: ['home']}}]);\n                } else {\n                    this.location.back();\n                }\n            }\n        }\n    }\n\n    onNavigateBeforeClick() {\n        this.navigateBefore.next();\n    }\n\n    onNavigateNextClick() {\n        this.navigateNext.next();\n    }\n\n    /**\n     * close the viewer\n     */\n    close() {\n        if (this.otherMenu) {\n            this.otherMenu.hidden = false;\n        }\n        this.showViewer = false;\n        this.showViewerChange.emit(this.showViewer);\n    }\n\n    /**\n     * get File name from url\n     *\n     * @param  url - url file\n     */\n    getFilenameFromUrl(url: string): string {\n        const anchor = url.indexOf('#');\n        const query = url.indexOf('?');\n        const end = Math.min(\n            anchor > 0 ? anchor : url.length,\n            query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf('/', end) + 1, end);\n    }\n\n    /**\n     * Get file extension from the string.\n     * Supports the URL formats like:\n     * http://localhost/test.jpg?cache=1000\n     * http://localhost/test.jpg#cache=1000\n     *\n     * @param fileName - file name\n     */\n    getFileExtension(fileName: string): string {\n        if (fileName) {\n            const match = fileName.match(/\\.([^\\./\\?\\#]+)($|\\?|\\#)/);\n            return match ? match[1] : null;\n        }\n        return null;\n    }\n\n    isCustomViewerExtension(extension: string): boolean {\n        const extensions: any = this.externalExtensions || [];\n\n        if (extension && extensions.length > 0) {\n            extension = extension.toLowerCase();\n            return extensions.flat().indexOf(extension) >= 0;\n        }\n\n        return false;\n    }\n\n    /**\n     * Keyboard event listener\n     * @param  event\n     */\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n\n        // Esc\n        if (key === 27 && this.overlayMode) { // esc\n            this.close();\n        }\n\n        // Left arrow\n        if (key === 37 && this.canNavigateBefore) {\n            event.preventDefault();\n            this.onNavigateBeforeClick();\n        }\n\n        // Right arrow\n        if (key === 39 && this.canNavigateNext) {\n            event.preventDefault();\n            this.onNavigateNextClick();\n        }\n\n        // Ctrl+F\n        if (key === 70 && event.ctrlKey) {\n            event.preventDefault();\n            this.enterFullScreen();\n        }\n    }\n\n    printContent() {\n        if (this.allowPrint) {\n            const args = new BaseEvent();\n            this.print.next(args);\n\n            if (!args.defaultPrevented) {\n                this.viewUtils.printFileGeneric(this.nodeId, this.mimeType);\n            }\n        }\n    }\n\n    /**\n     * Triggers full screen mode with a main content area displayed.\n     */\n    enterFullScreen(): void {\n        if (this.allowFullScreen) {\n            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');\n            if (container) {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n        }\n    }\n\n    private async displayNodeRendition(nodeId: string) {\n        try {\n            const rendition = await this.resolveRendition(nodeId, 'pdf');\n            if (rendition) {\n                const renditionId = rendition.entry.id;\n\n                if (renditionId === 'pdf') {\n                    this.viewerType = 'pdf';\n                } else if (renditionId === 'imgpreview') {\n                    this.viewerType = 'image';\n                }\n\n                this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n            }\n        } catch (err) {\n            this.logService.error(err);\n        }\n    }\n\n    private async displaySharedLinkRendition(sharedId: string) {\n        try {\n            const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');\n            if (rendition.entry.status.toString() === 'CREATED') {\n                this.viewerType = 'pdf';\n                this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');\n            }\n        } catch (error) {\n            this.logService.error(error);\n            try {\n                const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');\n                if (rendition.entry.status.toString() === 'CREATED') {\n                    this.viewerType = 'image';\n                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');\n                }\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private async resolveRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        renditionId = renditionId.toLowerCase();\n\n        const supportedRendition: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n\n        let rendition: RenditionEntry = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        if (!rendition) {\n            renditionId = 'imgpreview';\n            rendition = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        }\n\n        if (rendition) {\n            const status: string = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId }).then(() => {\n                        this.viewerType = 'in_creation';\n                    });\n                    rendition = await this.waitRendition(nodeId, renditionId);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n\n        return rendition;\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        let currentRetry: number = 0;\n        return new Promise<RenditionEntry>((resolve, reject) => {\n            const intervalId = setInterval(() => {\n                currentRetry++;\n                if (this.maxRetries >= currentRetry) {\n                    this.apiService.renditionsApi.getRendition(nodeId, renditionId).then((rendition: RenditionEntry) => {\n                        const status: string = rendition.entry.status.toString();\n                        if (status === 'CREATED') {\n\n                            if (renditionId === 'pdf') {\n                                this.viewerType = 'pdf';\n                            } else if (renditionId === 'imgpreview') {\n                                this.viewerType = 'image';\n                            }\n\n                            this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n\n                            clearInterval(intervalId);\n                            return resolve(rendition);\n                        }\n                    }, () => {\n                        this.viewerType = 'error_in_creation';\n                        return reject();\n                    });\n                }\n            }, 1000);\n        });\n    }\n\n    checkExtensions(extensionAllowed) {\n        if (typeof extensionAllowed ===  'string') {\n            return this.extension.toLowerCase() === extensionAllowed.toLowerCase();\n        } else if (extensionAllowed.length > 0) {\n            return extensionAllowed.find((currentExtension) => {\n                return this.extension.toLowerCase() === currentExtension.toLowerCase();\n            });\n        }\n\n    }\n\n    private generateCacheBusterNumber() {\n        this.cacheBusterNumber = Date.now();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewEncapsulation,\n    ElementRef,\n    OnInit,\n    OnDestroy\n} from '@angular/core';\nimport { ContentService } from '../../services/content.service';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-img-viewer',\n    templateUrl: './imgViewer.component.html',\n    styleUrls: ['./imgViewer.component.scss'],\n    host: { 'class': 'adf-image-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ImgViewerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    showToolbar = true;\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    rotate: number = 0;\n    scaleX: number = 1.0;\n    scaleY: number = 1.0;\n    offsetX: number = 0;\n    offsetY: number = 0;\n    isDragged: boolean = false;\n\n    private drag = { x: 0, y: 0 };\n    private delta = { x: 0, y: 0 };\n\n    get transform(): string {\n        return `scale(${this.scaleX}, ${this.scaleY}) rotate(${this.rotate}deg) translate(${this.offsetX}px, ${this.offsetY}px)`;\n    }\n\n    get currentScaleText(): string {\n        return Math.round(this.scaleX * 100) + '%';\n    }\n\n    private element: HTMLElement;\n\n    constructor(\n        private appConfigService: AppConfigService,\n        private contentService: ContentService,\n        private el: ElementRef) {\n        this.initializeScaling();\n    }\n\n    initializeScaling() {\n        const scaling = this.appConfigService.get<number>('adf-viewer.image-viewer-scaling', undefined) / 100;\n        if (scaling) {\n            this.scaleX = scaling;\n            this.scaleY = scaling;\n        }\n    }\n\n    ngOnInit() {\n        this.element = <HTMLElement> this.el.nativeElement.querySelector('#viewer-image');\n\n        if (this.element) {\n            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));\n            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));\n            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));\n            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.removeEventListener('mousedown', this.onMouseDown);\n            this.element.removeEventListener('mouseup', this.onMouseUp);\n            this.element.removeEventListener('mouseleave', this.onMouseLeave);\n            this.element.removeEventListener('mouseout', this.onMouseOut);\n            this.element.removeEventListener('mousemove', this.onMouseMove);\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        event.preventDefault();\n        this.isDragged = true;\n        this.drag = { x: event.pageX, y: event.pageY };\n    }\n\n    onMouseMove(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n\n            this.delta.x = event.pageX - this.drag.x;\n            this.delta.y = event.pageY - this.drag.y;\n\n            this.drag.x = event.pageX;\n            this.drag.y = event.pageY;\n\n            const scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);\n            const scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);\n\n            this.offsetX += (this.delta.x / scaleX);\n            this.offsetY += (this.delta.y / scaleY);\n        }\n    }\n\n    onMouseUp(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseLeave(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseOut(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    zoomIn() {\n        const ratio = +((this.scaleX + 0.2).toFixed(1));\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    zoomOut() {\n        let ratio = +((this.scaleX - 0.2).toFixed(1));\n        if (ratio < 0.2) {\n            ratio = 0.2;\n        }\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    rotateLeft() {\n        const angle = this.rotate - 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    rotateRight() {\n        const angle = this.rotate + 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    reset() {\n        this.rotate = 0;\n        this.scaleX = 1.0;\n        this.scaleY = 1.0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-media-player',\n    templateUrl: './mediaPlayer.component.html',\n    styleUrls: ['./mediaPlayer.component.scss'],\n    host: { 'class': 'adf-media-player' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class MediaPlayerComponent implements OnChanges {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    mimeType: string;\n\n    @Input()\n    nameFile: string;\n\n    constructor(private contentService: ContentService ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n}\n","/* tslint:disable:adf-license-banner  */\n\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n *\n * RenderingQueueServices rendering of the views for pages and thumbnails.\n *\n */\n@Injectable()\nexport class RenderingQueueServices {\n\n    renderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n    };\n\n    CLEANUP_TIMEOUT: number = 30000;\n\n    pdfViewer: any = null;\n    pdfThumbnailViewer: any = null;\n    onIdle: any = null;\n\n    highestPriorityPage: any = null;\n    idleTimeout: any = null;\n    printing: any = false;\n    isThumbnailViewEnabled: any = false;\n\n    /**\n     * @param pdfViewer\n     */\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param  view\n     */\n    isHighestPriority(view: any): boolean {\n        return this.highestPriorityPage === view.renderingId;\n    }\n\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering so check thumbnails.\n        if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n                return;\n            }\n        }\n\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), this.CLEANUP_TIMEOUT);\n        }\n    }\n\n    getHighestPriority(visible, views, scrolledDown) {\n        // The state has changed figure out which page has the highest priority to\n        // render next (if any).\n        // Priority:\n        // 1 visible pages\n        // 2 if last scrolled down page after the visible pages\n        // 2 if last scrolled up page before the visible pages\n        const visibleViews = visible.views;\n\n        const numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return false;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n\n        // All the visible views have rendered, try to render next/previous pages.\n        if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n            // ID's start at 1 so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        } else {\n            const previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n\n    /**\n     * @param view\n     */\n    isViewFinished(view): boolean {\n        return view.renderingState === this.renderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * false.\n     * @param view\n     */\n    renderView(view: any) {\n        const state = view.renderingState;\n        switch (state) {\n            case this.renderingStates.FINISHED:\n                return false;\n            case this.renderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case this.renderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case this.renderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                const continueRendering = function () {\n                    this.renderHighestPriority();\n                }.bind(this);\n                view.draw().then(continueRendering, continueRendering);\n                break;\n            default:\n                break;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n\ndeclare const pdfjsLib: any;\n\n@Component({\n    selector: 'adf-pdf-viewer-password-dialog',\n    templateUrl: './pdfViewer-password-dialog.html',\n    styleUrls: [ './pdfViewer-password-dialog.scss' ]\n})\nexport class PdfPasswordDialogComponent implements OnInit {\n    passwordFormControl: FormControl;\n\n    constructor(\n        private dialogRef: MatDialogRef<PdfPasswordDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n\n    isError(): boolean {\n        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;\n    }\n\n    isValid(): boolean {\n        return !this.passwordFormControl.hasError('required');\n    }\n\n    submit(): void {\n        this.dialogRef.close(this.passwordFormControl.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    TemplateRef,\n    HostListener,\n    Output,\n    Input,\n    OnChanges,\n    OnDestroy,\n    ViewEncapsulation,\n    EventEmitter,\n    SimpleChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { LogService } from '../../services/log.service';\nimport { RenderingQueueServices } from '../services/rendering-queue.services';\nimport { PdfPasswordDialogComponent } from './pdfViewer-password-dialog';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\ndeclare const pdfjsLib: any;\ndeclare const pdfjsViewer: any;\n\nexport interface PdfDocumentOptions {\n    url?: string;\n    data?: any;\n    withCredentials?: boolean;\n}\n\n@Component({\n    selector: 'adf-pdf-viewer',\n    templateUrl: './pdfViewer.component.html',\n    styleUrls: [\n        './pdfViewer.component.scss',\n        './pdfViewerHost.component.scss'\n    ],\n    providers: [RenderingQueueServices],\n    host: { 'class': 'adf-pdf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfViewerComponent implements OnChanges, OnDestroy {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    @Input()\n    showToolbar: boolean = true;\n\n    @Input()\n    allowThumbnails = false;\n\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    @Output()\n    rendered = new EventEmitter<any>();\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    loadingTask: any;\n    currentPdfDocument: any;\n    page: number;\n    displayPage: number;\n    totalPages: number;\n    loadingPercent: number;\n    pdfViewer: any;\n    documentContainer: any;\n    currentScaleMode: string = 'auto';\n    currentScale: number = 1;\n\n    MAX_AUTO_SCALE: number = 1.25;\n    DEFAULT_SCALE_DELTA: number = 1.1;\n    MIN_SCALE: number = 0.25;\n    MAX_SCALE: number = 10.0;\n\n    isPanelDisabled = true;\n    showThumbnails: boolean = false;\n    pdfThumbnailsContext: { viewer: any } = { viewer: null };\n    randomPdfId: string;\n\n    get currentScaleText(): string {\n        return Math.round(this.currentScale * 100) + '%';\n    }\n\n    constructor(\n        private dialog: MatDialog,\n        private renderingQueueServices: RenderingQueueServices,\n        private logService: LogService,\n        private appConfigService: AppConfigService) {\n        // needed to preserve \"this\" context\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onPagesLoaded = this.onPagesLoaded.bind(this);\n        this.onPageRendered = this.onPageRendered.bind(this);\n        this.randomPdfId = this.generateUuid();\n        this.currentScale = this.getUserScaling();\n    }\n\n    getUserScaling(): number {\n        const scaleConfig = this.appConfigService.get<number>('adf-viewer.pdf-viewer-scaling', undefined) / 100;\n        if (scaleConfig) {\n            return this.checkLimits(scaleConfig);\n        } else {\n            return 1;\n        }\n    }\n\n    checkLimits(scaleConfig: number): number {\n        if (scaleConfig > this.MAX_SCALE) {\n            return this.MAX_SCALE;\n        } else if (scaleConfig < this.MIN_SCALE) {\n            return this.MIN_SCALE;\n        } else {\n            return scaleConfig;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n\n        if (blobFile && blobFile.currentValue) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const options = {\n                    data: reader.result,\n                    withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n                };\n                this.executePdf(options);\n            };\n            reader.readAsArrayBuffer(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            const options = {\n                url: urlFile.currentValue,\n                withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n            };\n            this.executePdf(options);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    executePdf(pdfOptions: PdfDocumentOptions) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n\n        this.loadingTask = pdfjsLib.getDocument(pdfOptions);\n\n        this.loadingTask.onPassword = (callback, reason) => {\n            this.onPdfPassword(callback, reason);\n        };\n\n        this.loadingTask.onProgress = (progressData) => {\n            const level = progressData.loaded / progressData.total;\n            this.loadingPercent = Math.round(level * 100);\n        };\n\n        this.loadingTask.then((pdfDocument) => {\n            this.currentPdfDocument = pdfDocument;\n            this.totalPages = pdfDocument.numPages;\n            this.page = 1;\n            this.displayPage = 1;\n            this.initPDFViewer(this.currentPdfDocument);\n\n            this.currentPdfDocument.getPage(1).then(() => {\n                this.scalePage('auto');\n            }, (error) => {\n                this.error.emit();\n            });\n\n        }, (error) => {\n            this.error.emit();\n        });\n    }\n\n    initPDFViewer(pdfDocument: any) {\n        const viewer: any = document.getElementById(`${this.randomPdfId}-viewer-viewerPdf`);\n        const container = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (viewer && container) {\n            this.documentContainer = container;\n\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('textlayerrendered', this.onPageRendered, true);\n\n            this.pdfViewer = new pdfjsViewer.PDFViewer({\n                container: this.documentContainer,\n                viewer: viewer,\n                renderingQueue: this.renderingQueueServices\n            });\n\n            this.renderingQueueServices.setViewer(this.pdfViewer);\n            this.pdfViewer.setDocument(pdfDocument);\n            this.pdfThumbnailsContext.viewer = this.pdfViewer;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentContainer) {\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('textlayerrendered', this.onPageRendered, true);\n        }\n\n        if (this.loadingTask) {\n            try {\n                this.loadingTask.destroy();\n            } catch {\n            }\n\n            this.loadingTask = null;\n        }\n    }\n\n    toggleThumbnails() {\n        this.showThumbnails = !this.showThumbnails;\n    }\n\n    /**\n     * Method to scale the page current support implementation\n     *\n     * @param scaleMode - new scale mode\n     */\n    scalePage(scaleMode) {\n        this.currentScaleMode = scaleMode;\n\n        const viewerContainer = document.getElementById(`${this.randomPdfId}-viewer-main-container`);\n        const documentContainer = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (this.pdfViewer && documentContainer) {\n\n            let widthContainer;\n            let heightContainer;\n\n            if (viewerContainer && viewerContainer.clientWidth <= documentContainer.clientWidth) {\n                widthContainer = viewerContainer.clientWidth;\n                heightContainer = viewerContainer.clientHeight;\n            } else {\n                widthContainer = documentContainer.clientWidth;\n                heightContainer = documentContainer.clientHeight;\n            }\n\n            const currentPage = this.pdfViewer._pages[this.pdfViewer._currentPageNumber - 1];\n\n            const padding = 20;\n            const pageWidthScale = (widthContainer - padding) / currentPage.width * currentPage.scale;\n            const pageHeightScale = (heightContainer - padding) / currentPage.width * currentPage.scale;\n\n            let scale = this.getUserScaling();\n            if (!scale) {\n                switch (this.currentScaleMode) {\n                    case 'page-actual':\n                        scale = 1;\n                        break;\n                    case 'page-width':\n                        scale = pageWidthScale;\n                        break;\n                    case 'page-height':\n                        scale = pageHeightScale;\n                        break;\n                    case 'page-fit':\n                        scale = Math.min(pageWidthScale, pageHeightScale);\n                        break;\n                    case 'auto':\n                        let horizontalScale;\n                        if (this.isLandscape) {\n                            horizontalScale = Math.min(pageHeightScale, pageWidthScale);\n                        } else {\n                            horizontalScale = pageWidthScale;\n                        }\n                        horizontalScale = Math.round(horizontalScale);\n                        scale = Math.min(this.MAX_AUTO_SCALE, horizontalScale);\n\n                        break;\n                    default:\n                        this.logService.error('pdfViewSetScale: \\'' + scaleMode + '\\' is an unknown zoom value.');\n                        return;\n                }\n\n                this.setScaleUpdatePages(scale);\n            } else {\n                this.currentScale = 0;\n                this.setScaleUpdatePages(scale);\n            }\n        }\n    }\n\n    /**\n     * Update all the pages with the newScale scale\n     *\n     * @param newScale - new scale page\n     */\n    setScaleUpdatePages(newScale: number) {\n        if (this.pdfViewer) {\n            if (!this.isSameScale(this.currentScale, newScale)) {\n                this.currentScale = newScale;\n\n                this.pdfViewer._pages.forEach(function (currentPage) {\n                    currentPage.update(newScale);\n                });\n            }\n\n            this.pdfViewer.update();\n        }\n    }\n\n    /**\n     * Check if the request scale of the page is the same for avoid useless re-rendering\n     *\n     * @param oldScale - old scale page\n     * @param newScale - new scale page\n     *\n     */\n    isSameScale(oldScale: number, newScale: number): boolean {\n        return (newScale === oldScale);\n    }\n\n    /**\n     * Check if is a land scape view\n     *\n     * @param width\n     * @param height\n     */\n    isLandscape(width: number, height: number): boolean {\n        return (width > height);\n    }\n\n    /**\n     * Method triggered when the page is resized\n     */\n    onResize() {\n        this.scalePage(this.currentScaleMode);\n    }\n\n    /**\n     * toggle the fit page pdf\n     */\n    pageFit() {\n        if (this.currentScaleMode !== 'page-fit') {\n            this.scalePage('page-fit');\n        } else {\n            this.scalePage('auto');\n        }\n    }\n\n    /**\n     * zoom in page pdf\n     *\n     * @param ticks\n     */\n    zoomIn(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale * this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(this.MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < this.MAX_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * zoom out page pdf\n     *\n     * @param ticks\n     */\n    zoomOut(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale / this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(this.MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > this.MIN_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * load the previous page\n     */\n    previousPage() {\n        if (this.pdfViewer && this.page > 1) {\n            this.page--;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the next page\n     */\n    nextPage() {\n        if (this.pdfViewer && this.page < this.totalPages) {\n            this.page++;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the page in input\n     *\n     * @param page to load\n     */\n    inputPage(page: string) {\n        const pageInput = parseInt(page, 10);\n\n        if (!isNaN(pageInput) && pageInput > 0 && pageInput <= this.totalPages) {\n            this.page = pageInput;\n            this.displayPage = this.page;\n            this.pdfViewer.currentPageNumber = this.page;\n        } else {\n            this.displayPage = this.page;\n        }\n    }\n\n    /**\n     * Page Change Event\n     *\n     * @param event\n     */\n    onPageChange(event) {\n        this.page = event.pageNumber;\n        this.displayPage = event.pageNumber;\n    }\n\n    onPdfPassword(callback, reason) {\n        this.dialog\n            .open(PdfPasswordDialogComponent, {\n                width: '400px',\n                disableClose: true,\n                data: { reason }\n            })\n            .afterClosed().subscribe((password) => {\n            if (password) {\n                callback(password);\n            }\n        });\n    }\n\n    /**\n     * Page Rendered Event\n     */\n    onPageRendered() {\n        this.rendered.emit();\n    }\n\n    /**\n     * Pages Loaded Event\n     *\n     * @param event\n     */\n    onPagesLoaded(event) {\n        this.isPanelDisabled = false;\n    }\n\n    /**\n     * Keyboard Event Listener\n     * @param KeyboardEvent event\n     */\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n        if (key === 39) { // right arrow\n            this.nextPage();\n        } else if (key === 37) {// left arrow\n            this.previousPage();\n        }\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, Input, ContentChild, TemplateRef, HostListener, OnInit,\n    AfterViewInit, ElementRef, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-pdf-thumbnails',\n    templateUrl: './pdfViewer-thumbnails.component.html',\n    styleUrls: ['./pdfViewer-thumbnails.component.scss'],\n    host: { 'class': 'adf-pdf-thumbnails' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() pdfViewer: any;\n\n    virtualHeight: number = 0;\n    translateY: number = 0;\n    renderItems = [];\n    width: number = 91;\n    currentHeight: number = 0;\n\n    private items = [];\n    private margin: number = 15;\n    private itemHeight: number = 114 + this.margin;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.calculateItems();\n    }\n\n    constructor(private element: ElementRef) {\n        this.calculateItems = this.calculateItems.bind(this);\n        this.onPageChange = this.onPageChange.bind(this);\n    }\n\n    ngOnInit() {\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);\n        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);\n\n        this.setHeight(this.pdfViewer.currentPageNumber);\n        this.items = this.getPages();\n        this.calculateItems();\n\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.scrollInto(this.pdfViewer.currentPageNumber), 0);\n    }\n\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);\n    }\n\n    trackByFn(index: number, item: any): number {\n        return item.id;\n    }\n\n    isSelected(pageNum: number) {\n        return this.pdfViewer.currentPageNumber === pageNum;\n    }\n\n    goTo(pageNum: number) {\n        this.pdfViewer.currentPageNumber = pageNum;\n    }\n\n    scrollInto(item: any) {\n        if (this.items.length) {\n            const index: number = this.items.findIndex((element) => element.id === item);\n\n            if (index < 0 || index >= this.items.length) {\n                return;\n            }\n\n            this.element.nativeElement.scrollTop = index * this.itemHeight;\n\n            this.calculateItems();\n        }\n    }\n\n    getPages() {\n        return this.pdfViewer._pages.map((page) => ({\n            id: page.id,\n            getWidth: () => { return this.width; },\n            getHeight: () => { return this.currentHeight; },\n            getPage: () => this.pdfViewer.pdfDocument.getPage(page.id)\n        }));\n    }\n\n    private setHeight(id): number {\n        const height = this.pdfViewer.pdfDocument.getPage(id).then((page) => this.calculateHeight(page));\n        return height;\n    }\n\n    private calculateHeight(page) {\n        const viewport = page.getViewport(1);\n        const pageRatio = viewport.width / viewport.height;\n        const height = Math.floor(this.width / pageRatio);\n\n        this.currentHeight = height;\n        this.itemHeight = height + this.margin;\n    }\n\n    private calculateItems() {\n        const { element, viewPort, itemsInView } = this.getContainerSetup();\n\n        const indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;\n\n        const start = Math.floor(indexByScrollTop);\n\n        const end = Math.ceil(indexByScrollTop) + (itemsInView);\n\n        this.translateY = this.itemHeight * Math.ceil(start);\n        this.virtualHeight = this.itemHeight * this.items.length  - this.translateY;\n        this.renderItems = this.items.slice(start, end);\n    }\n\n    private getContainerSetup() {\n        const element = this.element.nativeElement;\n        const elementRec = element.getBoundingClientRect();\n        const itemsInView = Math.ceil(elementRec.height / this.itemHeight);\n        const viewPort = (this.itemHeight * this.items.length) / itemsInView;\n\n        return {\n            element,\n            viewPort,\n            itemsInView\n        };\n    }\n\n    private onPageChange(event) {\n        const index = this.renderItems.findIndex((element) => element.id === event.pageNumber);\n\n        if (index < 0) {\n            this.scrollInto(event.pageNumber);\n        }\n\n        if (index >= this.renderItems.length - 1) {\n            this.element.nativeElement.scrollTop += this.itemHeight;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-pdf-thumb',\n    templateUrl: './pdfViewer-thumb.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbComponent implements OnInit {\n\n    @Input()\n    page: any = null;\n\n    image$: Promise<string>;\n\n    constructor(private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.image$ = this.page.getPage().then((page) => this.getThumb(page));\n    }\n\n    private getThumb(page): Promise<string> {\n        const viewport = page.getViewport(1);\n\n        const pageRatio = viewport.width / viewport.height;\n        const canvas = this.getCanvas(pageRatio);\n        const scale = Math.min((canvas.height / viewport.height), (canvas.width / viewport.width));\n\n        return page.render({\n            canvasContext: canvas.getContext('2d'),\n            viewport: page.getViewport(scale)\n        })\n        .then(() => {\n            const imageSource = canvas.toDataURL();\n            return this.sanitizer.bypassSecurityTrustUrl(imageSource);\n        });\n    }\n\n    private getCanvas(pageRatio): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.page.getWidth();\n        canvas.height = this.page.getHeight();\n        return canvas;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-txt-viewer',\n    templateUrl: './txtViewer.component.html',\n    styleUrls: ['./txtViewer.component.scss'],\n    host: { 'class': 'adf-txt-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TxtViewerComponent implements OnChanges {\n\n    @Input()\n    urlFile: any;\n\n    @Input()\n    blobFile: Blob;\n\n    content: string | ArrayBuffer;\n\n    constructor(private http: HttpClient, private appConfigService: AppConfigService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): Promise<any> {\n\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            return this.readBlob(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            return this.getUrlContent(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    private getUrlContent(url: string): Promise<any> {\n        const withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        return new Promise((resolve, reject) => {\n            this.http.get(url, { responseType: 'text', withCredentials: withCredentialsMode }).subscribe((res) => {\n                this.content = res;\n                resolve();\n            }, (event) => {\n                reject(event);\n            });\n        });\n    }\n\n    private readBlob(blob: Blob): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                this.content = reader.result;\n                resolve();\n            };\n\n            reader.onerror = (error: any) => {\n                reject(error);\n            };\n\n            reader.readAsText(blob);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-unknown-format',\n    templateUrl: 'unknown-format.component.html',\n    styleUrls: ['unknown-format.component.scss']\n})\nexport class UnknownFormatComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, Input, TemplateRef } from '@angular/core';\nimport { ViewerComponent } from '../components/viewer.component';\n\n@Directive({\n    selector: 'adf-viewer-extension'\n})\nexport class ViewerExtensionDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    urlFileContent: string;\n\n    @Input()\n    extension: string;\n\n    @Input()\n    supportedExtensions: string[];\n\n    templateModel: any;\n\n    constructor(private viewerComponent: ViewerComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.templateModel = { template: this.template, isVisible: false };\n\n        this.viewerComponent.extensionTemplates.push(this.templateModel);\n\n        this.viewerComponent.extensionChange.subscribe((fileExtension) => {\n            this.templateModel.isVisible = this.isVisible(fileExtension);\n        });\n\n        if (this.supportedExtensions instanceof Array) {\n            this.supportedExtensions.forEach((extension) => {\n                this.viewerComponent.externalExtensions.push(extension);\n            });\n        }\n    }\n\n    /**\n     * check if the current extension in the viewer is compatible with this extension checking against supportedExtensions\n     */\n    isVisible(fileExtension): boolean {\n        let supportedExtension: string;\n\n        if (this.supportedExtensions && (this.supportedExtensions instanceof Array)) {\n            supportedExtension = this.supportedExtensions.find((extension) => {\n                return extension.toLowerCase() === fileExtension;\n\n            });\n        }\n\n        return !!supportedExtension;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarDividerComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    /** Toolbar title. */\n    @Input()\n    title: string = '';\n\n    /** Toolbar color. Can be changed to empty value (default), `primary`, `accent` or `warn`. */\n    @Input()\n    color: string;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\n\nimport { MaterialModule } from '../material.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { ImgViewerComponent } from './components/imgViewer.component';\nimport { MediaPlayerComponent } from './components/mediaPlayer.component';\nimport { PdfViewerComponent } from './components/pdfViewer.component';\nimport { PdfPasswordDialogComponent } from './components/pdfViewer-password-dialog';\nimport { PdfThumbComponent } from './components/pdfViewer-thumb.component';\nimport { PdfThumbListComponent } from './components/pdfViewer-thumbnails.component';\nimport { TxtViewerComponent } from './components/txtViewer.component';\nimport { UnknownFormatComponent } from './components/unknown-format/unknown-format.component';\nimport { ViewerMoreActionsComponent } from './components/viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './components/viewer-open-with.component';\nimport { ViewerSidebarComponent } from './components/viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './components/viewer-toolbar.component';\nimport { ViewerComponent } from './components/viewer.component';\nimport { ViewerExtensionDirective } from './directives/viewer-extension.directive';\nimport { ViewerToolbarActionsComponent } from './components/viewer-toolbar-actions.component';\nimport { DirectiveModule } from '../directives/directive.module';\n\n@NgModule({\n    imports: [\n        ExtensionsModule,\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ToolbarModule,\n        PipeModule,\n        FlexLayoutModule,\n        DirectiveModule\n    ],\n    declarations: [\n        PdfPasswordDialogComponent,\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ],\n    entryComponents: [\n        PdfPasswordDialogComponent\n    ],\n    exports: [\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfPasswordDialogComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ]\n})\nexport class ViewerModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserRepresentation } from '@alfresco/js-api';\n\nexport class BpmUserModel implements UserRepresentation {\n    apps: any;\n    capabilities: string[];\n    company: string;\n    created: Date;\n    email: string;\n    externalId: string;\n    firstName: string;\n    lastName: string;\n    fullname: string;\n    groups: any;\n    id: number;\n    lastUpdate: Date;\n    latestSyncTimeStamp: Date;\n    password: string;\n    pictureId: number;\n    status: string;\n    tenantId: number;\n    tenantName: string;\n    tenantPictureId: number;\n    type: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.apps = input.apps;\n            this.capabilities = input.capabilities;\n            this.company = input.company;\n            this.created = input.created;\n            this.email = input.email;\n            this.externalId = input.externalId;\n            this.firstName = input.firstName;\n            this.lastName = input.lastName;\n            this.fullname = input.fullname;\n            this.groups = input.groups;\n            this.id = input.id;\n            this.lastUpdate = input.lastUpdate;\n            this.latestSyncTimeStamp = input.latestSyncTimeStamp;\n            this.password = input.password;\n            this.pictureId = input.pictureId;\n            this.status = input.status;\n            this.tenantId = input.tenantId;\n            this.tenantName = input.tenantName;\n            this.tenantPictureId = input.tenantPictureId;\n            this.type = input.type;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { BpmUserModel } from '../models/bpm-user.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserRepresentation } from '@alfresco/js-api';\n\n/**\n *\n * BPMUserService retrieve all the information of an Ecm user.\n *\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class BpmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about the current user.\n     * @returns User information object\n     */\n    getCurrentUserInfo(): Observable<BpmUserModel> {\n        return from(this.apiService.getInstance().activiti.profileApi.getProfile())\n            .pipe(\n                map((userRepresentation: UserRepresentation) => {\n                    return new BpmUserModel(userRepresentation);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the current user's profile image as a URL.\n     * @returns URL string\n     */\n    getCurrentUserProfileImage(): string {\n        return this.apiService.getInstance().activiti.profileApi.getProfilePictureUrl();\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Person } from '@alfresco/js-api';\nimport { EcmCompanyModel } from '../../models/ecm-company.model';\n\nexport class EcmUserModel implements Person {\n    id: string;\n    firstName: string;\n    lastName: string;\n    description: string;\n    avatarId: string;\n    email: string;\n    skypeId: string;\n    googleId: string;\n    instantMessageId: string;\n    jobTitle: string;\n    location: string;\n    company: EcmCompanyModel;\n    mobile: string;\n    telephone: string;\n    statusUpdatedAt: Date;\n    userStatus: string;\n    enabled: boolean;\n    emailNotificationsEnabled: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.firstName = obj && obj.firstName;\n        this.lastName = obj && obj.lastName;\n        this.description = obj && obj.description || null;\n        this.avatarId = obj && obj.avatarId || null;\n        this.email = obj && obj.email || null;\n        this.skypeId = obj && obj.skypeId;\n        this.googleId = obj && obj.googleId;\n        this.instantMessageId = obj && obj.instantMessageId;\n        this.jobTitle = obj && obj.jobTitle || null;\n        this.location = obj && obj.location || null;\n        this.company = obj && obj.company;\n        this.mobile = obj && obj.mobile;\n        this.telephone = obj && obj.telephone;\n        this.statusUpdatedAt = obj && obj.statusUpdatedAt;\n        this.userStatus = obj && obj.userStatus;\n        this.enabled = obj && obj.enabled;\n        this.emailNotificationsEnabled = obj && obj.emailNotificationsEnabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ContentService } from '../../services/content.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { EcmUserModel } from '../models/ecm-user.model';\nimport { PersonEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private contentService: ContentService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param userName Target username\n     * @returns User information\n     */\n    getUserInfo(userName: string): Observable<EcmUserModel> {\n        return from(this.apiService.getInstance().core.peopleApi.getPerson(userName))\n            .pipe(\n                map((personEntry: PersonEntry) => {\n                    return new EcmUserModel(personEntry.entry);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets information about the user who is currently logged-in.\n     * @returns User information as for getUserInfo\n     */\n    getCurrentUserInfo() {\n        return this.getUserInfo('-me-');\n    }\n\n    /**\n     * Returns a profile image as a URL.\n     * @param avatarId Target avatar\n     * @returns Image URL\n     */\n    getUserProfileImage(avatarId: string) {\n        if (avatarId) {\n            const nodeObj = {entry: {id: avatarId}};\n            return this.contentService.getContentUrl(nodeObj);\n        }\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class IdentityUserModel {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    username: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.email = obj.email || null;\n            this.username = obj.username || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtHelperService {\n\n    constructor() {}\n\n    /**\n     * Decodes a JSON web token into a JS object.\n     * @param token Token in encoded form\n     * @returns Decoded token data object\n     */\n    decodeToken(token): Object {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    private urlBase64Decode(token): string {\n        let output = token.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return decodeURIComponent(escape(window.atob(output)));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { IdentityUserModel } from '../models/identity-user.model';\nimport { JwtHelperService } from '../../services/jwt-helper.service';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { IdentityRoleModel } from '../models/identity-role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IdentityUserService {\n\n    static USER_NAME = 'name';\n    static FAMILY_NAME = 'family_name';\n    static GIVEN_NAME = 'given_name';\n    static USER_EMAIL = 'email';\n    static USER_ACCESS_TOKEN = 'access_token';\n    static USER_PREFERRED_USERNAME = 'preferred_username';\n\n    constructor(\n        private helper: JwtHelperService,\n        private apiService: AlfrescoApiService,\n        private appConfigService: AppConfigService) { }\n\n    /**\n     * Gets the name and other basic details of the current user.\n     * @returns The user's details\n     */\n    getCurrentUserInfo(): IdentityUserModel {\n        const familyName = this.getValueFromToken<string>(IdentityUserService.FAMILY_NAME);\n        const givenName = this.getValueFromToken<string>(IdentityUserService.GIVEN_NAME);\n        const email = this.getValueFromToken<string>(IdentityUserService.USER_EMAIL);\n        const username = this.getValueFromToken<string>(IdentityUserService.USER_PREFERRED_USERNAME);\n        const user = { firstName: givenName, lastName: familyName, email: email, username: username };\n        return new IdentityUserModel(user);\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromToken<T>(key: string): T {\n        let value;\n        const token = localStorage.getItem(IdentityUserService.USER_ACCESS_TOKEN);\n        if (token) {\n            const tokenPayload = this.helper.decodeToken(token);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n\n    /**\n     * Find users based on search input.\n     * @param search Search query string\n     * @returns List of users\n     */\n    findUsersByName(search: string): Observable<any> {\n        if (search === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { search: search }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on username input.\n     * @param username Search query string\n     * @returns List of users\n     */\n    findUserByUsername(username: string): Observable<any> {\n        if (username === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { username: username }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on email input.\n     * @param email Search query string\n     * @returns List of users\n     */\n    findUserByEmail(email: string): Observable<any> {\n        if (email === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { email: email }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on id input.\n     * @param id Search query string\n     * @returns users object\n     */\n    findUserById(id: string): Observable<any> {\n        if (id === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl() + '/' + id;\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Get client roles of a user for a particular client.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns List of client roles\n     */\n    getClientRoles(userId: string, clientId: string): Observable<any[]> {\n        const url = this.buildUserClientRoleMapping(userId, clientId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        );\n    }\n\n    /**\n     * Checks whether user has access to a client app.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasClientApp(userId: string, clientId: string): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                if (clientRoles.length > 0) {\n                    return true;\n                }\n                return false;\n            })\n        );\n    }\n\n    /**\n     * Checks whether a user has any of the client app roles.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyClientAppRole(userId: string, clientId: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                let hasRole = false;\n                if (clientRoles.length > 0) {\n                    roleNames.forEach((roleName) => {\n                        const role = clientRoles.find((availableRole) => {\n                            return availableRole.name === roleName;\n                        });\n\n                        if (role) {\n                            hasRole = true;\n                            return;\n                        }\n                    });\n                }\n                return hasRole;\n            })\n        );\n    }\n\n    /**\n     * Gets the client ID for an application.\n     * @param applicationName Name of the application\n     * @returns Client ID string\n     */\n    getClientIdByApplicationName(applicationName: string): Observable<string> {\n        const url = this.buildGetClientsUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { clientId: applicationName }, bodyParam = {}, headerParams = {}, formParams = {},\n            contentTypes = ['application/json'], accepts = ['application/json'];\n        return from(this.apiService.getInstance()\n            .oauth2Auth.callCustomApi(url, httpMethod, pathParams, queryParams, headerParams,\n                formParams, bodyParam, contentTypes,\n                accepts, Object, null, null)\n        ).pipe(\n            map((response: any[]) => {\n                const clientId = response && response.length > 0 ? response[0].id : '';\n                return clientId;\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has access to an application.\n     * @param userId ID of the user\n     * @param applicationName Name of the application\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasApplicationAccess(userId: string, applicationName: string): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasClientApp(userId, clientId);\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has any application role.\n     * @param userId ID of the target user\n     * @param applicationName Name of the application\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyApplicationRole(userId: string, applicationName: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasAnyClientAppRole(userId, clientId, roleNames);\n            })\n        );\n    }\n\n    /**\n     * Gets details for all users.\n     * @returns Array of user info objects\n     */\n    getUsers(): Observable<IdentityUserModel[]> {\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, authNames = [], contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam, authNames,\n            contentTypes, accepts, null, null)\n        ).pipe(\n            map((response: IdentityUserModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets a list of roles for a user.\n     * @param userId ID of the user\n     * @returns Array of role info objects\n     */\n    getUserRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildRolesUrl(userId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ).pipe(\n            map((response: IdentityRoleModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets an array of users (including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const users = await this.getUsers().toPromise();\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    /**\n     * Gets an array of users (not including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithoutCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const currentUser = this.getCurrentUserInfo();\n            let users = await this.getUsers().toPromise();\n\n            users = users.filter((user) => { return user.username !== currentUser.username; });\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    private async userHasAnyRole(userId: string, roleNames: string[]): Promise<boolean> {\n        const userRoles = await this.getUserRoles(userId).toPromise();\n        const hasAnyRole = roleNames.some((roleName) => {\n            const filteredRoles = userRoles.filter((userRole) => {\n                return userRole.name.toLocaleLowerCase() === roleName.toLocaleLowerCase();\n            });\n\n            return filteredRoles.length > 0;\n        });\n\n        return hasAnyRole;\n    }\n\n    /**\n     * Checks if a user has one of the roles from a list.\n     * @param userId ID of the target user\n     * @param roleNames Array of roles to check for\n     * @returns True if the user has one of the roles, false otherwise\n     */\n    checkUserHasRole(userId: string, roleNames: string[]): Observable<boolean> {\n        return this.getUserRoles(userId).pipe(map((userRoles: IdentityRoleModel[]) => {\n            let hasRole = false;\n            if (userRoles && userRoles.length > 0) {\n                roleNames.forEach((roleName: string) => {\n                    const role = userRoles.find((userRole) => {\n                        return roleName === userRole.name;\n                    });\n                    if (role) {\n                        hasRole = true;\n                        return;\n                    }\n                });\n            }\n            return hasRole;\n        }));\n    }\n\n    private buildUserUrl(): any {\n        return `${this.appConfigService.get('identityHost')}/users`;\n    }\n\n    private buildUserClientRoleMapping(userId: string, clientId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/clients/${clientId}`;\n    }\n\n    private buildRolesUrl(userId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/realm/composite`;\n    }\n\n    private buildGetClientsUrl() {\n        return `${this.appConfigService.get('identityHost')}/clients`;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from './../models/bpm-user.model';\nimport { EcmUserModel } from './../models/ecm-user.model';\nimport { IdentityUserModel } from './../models/identity-user.model';\nimport { BpmUserService } from './../services/bpm-user.service';\nimport { EcmUserService } from './../services/ecm-user.service';\nimport { IdentityUserService } from '../services/identity-user.service';\nimport { of, Observable } from 'rxjs';\nimport { MatMenuTrigger } from '@angular/material';\n\n@Component({\n    selector: 'adf-userinfo',\n    styleUrls: ['./user-info.component.scss'],\n    templateUrl: './user-info.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserInfoComponent implements OnInit {\n\n    @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\n    /** Custom path for the background banner image for ACS users. */\n    @Input()\n    ecmBackgroundImage: string = './assets/images/ecm-background.png';\n\n    /** Custom path for the background banner image for APS users. */\n    @Input()\n    bpmBackgroundImage: string = './assets/images/bpm-background.png';\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    /** Shows/hides the username next to the user info button. */\n    @Input()\n    showName: boolean = true;\n\n    /** When the username is shown, this defines its position relative to the user info button.\n     * Can be `right` or `left`.\n     */\n    @Input()\n    namePosition: string = 'right';\n\n    ecmUser$: Observable<EcmUserModel>;\n    bpmUser$: Observable<BpmUserModel>;\n    identityUser$: Observable<IdentityUserModel>;\n    selectedIndex: number;\n\n    constructor(private ecmUserService: EcmUserService,\n                private bpmUserService: BpmUserService,\n                private identityUserService: IdentityUserService,\n                private authService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getUserInfo();\n    }\n\n    getUserInfo() {\n        if (this.authService.isOauth()) {\n            this.loadIdentityUserInfo();\n        } else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {\n            this.loadEcmUserInfo();\n            this.loadBpmUserInfo();\n        } else if (this.authService.isEcmLoggedIn()) {\n            this.loadEcmUserInfo();\n        } else if (this.authService.isBpmLoggedIn()) {\n            this.loadBpmUserInfo();\n        }\n    }\n\n    onKeyPress(event: KeyboardEvent) {\n        this.closeUserModal(event);\n    }\n\n    private closeUserModal($event: KeyboardEvent) {\n        if ($event.keyCode === 27 ) {\n            this.trigger.closeMenu();\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isLoggedIn();\n    }\n\n    loadEcmUserInfo(): void {\n        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();\n    }\n\n    loadBpmUserInfo() {\n        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();\n    }\n\n    loadIdentityUserInfo() {\n        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());\n    }\n\n    stopClosing(event) {\n        event.stopPropagation();\n    }\n\n    getEcmAvatar(avatarId: any ): string {\n        return this.ecmUserService.getUserProfileImage(avatarId);\n    }\n\n    getBpmUserImage(): string {\n        return this.bpmUserService.getCurrentUserProfileImage();\n    }\n\n    showOnRight(): boolean {\n        return this.namePosition === 'right';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class IdentityRoleModel {\n\n    id: string;\n    name: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { UserInfoComponent } from './components/user-info.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        UserInfoComponent\n    ],\n    exports: [\n        UserInfoComponent\n    ]\n})\nexport class UserInfoModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl, FormControl } from '@angular/forms';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\nimport { ENTER } from '@angular/cdk/keycodes';\n\n@Component({\n    selector: 'adf-host-settings',\n    templateUrl: 'host-settings.component.html',\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styleUrls: ['host-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent implements OnInit {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    /**\n     * Tells the component which provider options are available. Possible valid values\n     * are \"ECM\" (Content), \"BPM\" (Process) , \"ALL\" (Content and Process), 'OAUTH2' SSO.\n     */\n    @Input()\n    providers: string[] = ['BPM', 'ECM', 'ALL'];\n\n    showSelectProviders = true;\n\n    form: FormGroup;\n\n    /** Emitted when the URL is invalid. */\n    @Output()\n    error = new EventEmitter<string>();\n\n    /** Emitted when the user cancels the changes. */\n    @Output()\n    cancel = new EventEmitter<boolean>();\n\n    /** Emitted when the changes are successfully applied. */\n    @Output()\n    success = new EventEmitter<boolean>();\n\n    constructor(private formBuilder: FormBuilder,\n                private storageService: StorageService,\n                private alfrescoApiService: AlfrescoApiService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        if (this.providers.length === 1) {\n            this.showSelectProviders = false;\n        }\n\n        const providerSelected = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n        const authType = this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC');\n\n        this.form = this.formBuilder.group({\n            providersControl: [providerSelected, Validators.required],\n            authType: authType\n        });\n\n        this.addFormGroups();\n\n        if (authType === 'OAUTH') {\n            this.addOAuthFormGroup();\n            this.addIdentityHostFormControl();\n        }\n\n        this.form.get('authType').valueChanges.subscribe((value) => {\n            if (value === 'BASIC') {\n                this.form.removeControl('oauthConfig');\n                this.form.removeControl('identityHost');\n            } else {\n                this.addOAuthFormGroup();\n                this.addIdentityHostFormControl();\n            }\n        });\n\n        this.providersControl.valueChanges.subscribe(() => {\n            this.removeFormGroups();\n            this.addFormGroups();\n        });\n    }\n\n    private removeFormGroups() {\n        this.form.removeControl('bpmHost');\n        this.form.removeControl('ecmHost');\n    }\n\n    private addFormGroups() {\n        this.addBPMFormControl();\n        this.addECMFormControl();\n    }\n\n    private addOAuthFormGroup() {\n        const oauthFormGroup = this.createOAuthFormGroup();\n        this.form.addControl('oauthConfig', oauthFormGroup);\n    }\n\n    private addBPMFormControl() {\n        if ((this.isBPM() || this.isALL() || this.isOAUTH()) && !this.bpmHost) {\n            const bpmFormControl = this.createBPMFormControl();\n            this.form.addControl('bpmHost', bpmFormControl);\n        }\n    }\n\n    private addIdentityHostFormControl() {\n        const identityHostFormControl = this.createIdentityFormControl();\n        this.form.addControl('identityHost', identityHostFormControl);\n    }\n\n    private addECMFormControl() {\n        if ((this.isECM() || this.isALL()) && !this.ecmHost) {\n            const ecmFormControl = this.createECMFormControl();\n            this.form.addControl('ecmHost', ecmFormControl);\n        }\n    }\n\n    private createOAuthFormGroup(): AbstractControl {\n        const oauth = <OauthConfigModel> this.appConfig.get(AppConfigValues.OAUTHCONFIG, {});\n\n        return this.formBuilder.group({\n            host: [oauth.host, [Validators.required, Validators.pattern(this.HOST_REGEX)]],\n            clientId: [oauth.clientId, Validators.required],\n            redirectUri: [oauth.redirectUri, Validators.required],\n            redirectUriLogout: [oauth.redirectUriLogout],\n            scope: [oauth.scope, Validators.required],\n            secret: oauth.secret,\n            silentLogin: oauth.silentLogin,\n            implicitFlow: oauth.implicitFlow\n        });\n    }\n\n    private createBPMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.BPMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createIdentityFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.IDENTITY_HOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createECMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.ECMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    onCancel() {\n        this.cancel.emit(true);\n    }\n\n    onSubmit(values: any) {\n        this.storageService.setItem(AppConfigValues.PROVIDERS, values.providersControl);\n\n        if (this.isBPM()) {\n            this.saveBPMValues(values);\n        } else if (this.isECM()) {\n            this.saveECMValues(values);\n        } else if (this.isALL()) {\n            this.saveECMValues(values);\n            this.saveBPMValues(values);\n        }\n\n        if (this.isOAUTH()) {\n            this.saveOAuthValues(values);\n        }\n\n        this.storageService.setItem(AppConfigValues.AUTHTYPE, values.authType);\n\n        this.alfrescoApiService.reset();\n        this.alfrescoApiService.getInstance().invalidateSession();\n        this.success.emit(true);\n    }\n\n    keyDownFunction(event: any) {\n        if (event.keyCode === ENTER && this.form.valid) {\n            this.onSubmit(this.form.value);\n        }\n    }\n\n    private saveOAuthValues(values: any) {\n        this.storageService.setItem(AppConfigValues.OAUTHCONFIG, JSON.stringify(values.oauthConfig));\n        this.storageService.setItem(AppConfigValues.IDENTITY_HOST, values.identityHost);\n    }\n\n    private saveBPMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.BPMHOST, values.bpmHost);\n    }\n\n    private saveECMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.ECMHOST, values.ecmHost);\n    }\n\n    isBPM(): boolean {\n        return this.providersControl.value === 'BPM';\n    }\n\n    isECM(): boolean {\n        return this.providersControl.value === 'ECM';\n    }\n\n    isALL(): boolean {\n        return this.providersControl.value === 'ALL';\n    }\n\n    isOAUTH(): boolean {\n        return this.form.get('authType').value === 'OAUTH';\n    }\n\n    get providersControl(): AbstractControl {\n        return this.form.get('providersControl');\n    }\n\n    get bpmHost(): AbstractControl {\n        return this.form.get('bpmHost');\n    }\n\n    get ecmHost(): AbstractControl {\n        return this.form.get('ecmHost');\n    }\n\n    get host(): AbstractControl {\n        return this.oauthConfig.get('host');\n    }\n\n    get identityHost(): AbstractControl {\n        return this.form.get('identityHost');\n    }\n\n    get clientId(): AbstractControl {\n        return this.oauthConfig.get('clientId');\n    }\n\n    get scope(): AbstractControl {\n        return this.oauthConfig.get('scope');\n    }\n\n    get secretId(): AbstractControl {\n        return this.oauthConfig.get('secretId');\n    }\n\n    get implicitFlow(): AbstractControl {\n        return this.oauthConfig.get('implicitFlow');\n    }\n\n    get silentLogin(): AbstractControl {\n        return this.oauthConfig.get('silentLogin');\n    }\n\n    get redirectUri(): AbstractControl {\n        return this.oauthConfig.get('redirectUri');\n    }\n\n    get redirectUriLogout(): AbstractControl {\n        return this.oauthConfig.get('redirectUriLogout');\n    }\n\n    get oauthConfig(): AbstractControl {\n        return this.form.get('oauthConfig');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HostSettingsComponent } from './host-settings.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HostSettingsComponent\n    ],\n    exports: [\n        HostSettingsComponent\n    ]\n})\nexport class HostSettingsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation,\n    ChangeDetectorRef, OnDestroy, HostBinding\n} from '@angular/core';\n\nimport { Pagination } from '@alfresco/js-api';\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** An array of page sizes. */\n    @Input()\n    supportedPageSizes: number[];\n\n    /** Pagination object. */\n    @Input()\n    pagination: PaginationModel = PaginationComponent.DEFAULT_PAGINATION;\n\n    /** Emitted when pagination changes in any way. */\n    @Output()\n    change: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page number changes. */\n    @Output()\n    changePageNumber: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page size changes. */\n    @Output()\n    changePageSize: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the next page is requested. */\n    @Output()\n    nextPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the previous page is requested. */\n    @Output()\n    prevPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.pagination.maxItems = pagSize;\n        });\n    }\n\n    ngOnInit() {\n        if (!this.supportedPageSizes) {\n            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;\n        }\n\n        if (this.target) {\n            this.paginationSubscription = this.target.pagination.subscribe((pagination: PaginationModel) => {\n\n                if (pagination.count === 0 && !this.isFirstPage) {\n                    this.goPrevious();\n                }\n\n                this.pagination = pagination;\n                this.cdr.detectChanges();\n            });\n        }\n\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        return this.current === this.lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        return this.isLastPage ? this.current : this.current + 1;\n    }\n\n    get previous(): number {\n        return this.isFirstPage ? 1 : this.current - 1;\n    }\n\n    get hasItems(): boolean {\n        return this.pagination && this.pagination.count > 0;\n    }\n\n    @HostBinding('class.adf-pagination__empty')\n    get isEmpty(): boolean {\n        return !this.hasItems;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [start, end];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.next - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    goPrevious() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.previous - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (pageNumber - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.pagination.skipCount = 0;\n        this.userPreferencesService.paginationSize = maxItems;\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    handlePaginationEvent(action: string, params: PaginationModel) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const paginationModel: PaginationModel = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(paginationModel);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(paginationModel);\n        }\n\n        change.emit(params);\n\n        if (this.target) {\n            this.target.updatePagination(params);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnInit, Output, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { PaginationModel } from '../models/pagination.model';\nimport { RequestPaginationModel } from '../models/request-pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Pagination } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    templateUrl: './infinite-pagination.component.html',\n    styleUrls: ['./infinite-pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    _target: PaginatedComponent;\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    set target(target: PaginatedComponent) {\n        if (target) {\n            this._target = target;\n            this.paginationSubscription = target.pagination.subscribe((pagination: PaginationModel) => {\n                this.isLoading = false;\n                this.pagination = pagination;\n\n                if (!this.pagination.hasMoreItems) {\n                    this.pagination.hasMoreItems = false;\n                }\n\n                this.cdr.detectChanges();\n            });\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    /** Number of items that are added with each \"load more\" event. */\n    @Input()\n    pageSize: number;\n\n    /** Is a new page loading? */\n    @Input('loading')\n    isLoading: boolean = false;\n\n    /** Emitted when the \"Load More\" button is clicked. */\n    @Output()\n    loadMore: EventEmitter<RequestPaginationModel> = new EventEmitter<RequestPaginationModel>();\n\n    pagination: PaginationModel = InfinitePaginationComponent.DEFAULT_PAGINATION;\n\n    requestPaginationModel: RequestPaginationModel = {\n        skipCount: 0,\n        merge: true\n    };\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pageSize: number) => {\n            this.pageSize = this.pageSize || pageSize;\n            this.requestPaginationModel.maxItems = this.pageSize;\n        });\n    }\n\n    onLoadMore() {\n        this.requestPaginationModel.skipCount = 0;\n        this.requestPaginationModel.merge = false;\n\n        this.requestPaginationModel.maxItems += this.pageSize;\n\n        this.loadMore.next(this.requestPaginationModel);\n\n        if (this._target) {\n            this.isLoading = true;\n            this._target.updatePagination(<RequestPaginationModel> this.requestPaginationModel);\n        }\n    }\n\n    reset() {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = this.pageSize;\n\n        if (this._target) {\n            this._target.updatePagination(this.pagination);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { InfinitePaginationComponent } from './infinite-pagination.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    exports: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ]\n})\nexport class PaginationModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginErrorEvent {\n    constructor(public err: any) {}\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSubmitEvent {\n\n    private _values: any;\n    private _defaultPrevented: boolean = false;\n\n    get values(): any {\n        return this._values;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(_values: any) {\n        this._values = _values;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSuccessEvent {\n    constructor(\n        public token: any,\n        public username: string,\n        public password: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter,\n    Input, OnInit, Output, TemplateRef, ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LogService } from '../../services/log.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\nimport { LoginErrorEvent } from '../models/login-error.event';\nimport { LoginSubmitEvent } from '../models/login-submit.event';\nimport { LoginSuccessEvent } from '../models/login-success.event';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../../app-config/app-config.service';\nimport { OauthConfigModel } from '../../models/oauth-config.model';\n\nenum LoginSteps {\n    Landing = 0,\n    Checking = 1,\n    Welcome = 2\n}\n\ninterface ValidationMessage {\n    value: string;\n    params?: any;\n}\n\n@Component({\n    selector: 'adf-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-login'\n    }\n})\nexport class LoginComponent implements OnInit {\n    isPasswordShow: boolean = false;\n\n    /**\n     * Should the `Remember me` checkbox be shown? When selected, this\n     * option will remember the logged-in user after the browser is closed\n     * to avoid logging in repeatedly.\n     */\n    @Input()\n    showRememberMe: boolean = true;\n\n    /** Should the extra actions (`Need Help`, `Register`, etc) be shown? */\n    @Input()\n    showLoginActions: boolean = true;\n\n    /** Sets the URL of the NEED HELP link in the footer. */\n    @Input()\n    needHelpLink: string = '';\n\n    /** Sets the URL of the REGISTER link in the footer. */\n    @Input()\n    registerLink: string = '';\n\n    /** Path to a custom logo image. */\n    @Input()\n    logoImageUrl: string = './assets/images/alfresco-logo.svg';\n\n    /** Path to a custom background image. */\n    @Input()\n    backgroundImageUrl: string = './assets/images/background.svg';\n\n    /** The copyright text below the login box. */\n    @Input()\n    copyrightText: string = '\\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';\n\n    /** Custom validation rules for the login form. */\n    @Input()\n    fieldsValidation: any;\n\n    /** Route to redirect to on successful login. */\n    @Input()\n    successRoute: string = null;\n\n    /** Emitted when the login is successful. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    /** Emitted when the login fails. */\n    @Output()\n    error = new EventEmitter<LoginErrorEvent>();\n\n    /** Emitted when the login form is submitted. */\n    @Output()\n    executeSubmit = new EventEmitter<LoginSubmitEvent>();\n\n    implicitFlow: boolean = false;\n\n    form: FormGroup;\n    isError: boolean = false;\n    errorMsg: string;\n    actualLoginStep: any = LoginSteps.Landing;\n    LoginSteps: any = LoginSteps;\n    rememberMe: boolean = true;\n    formError: { [id: string]: string };\n    minLength: number = 2;\n    footerTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    data: any;\n\n    private _message: { [id: string]: { [id: string]: ValidationMessage } };\n\n    /**\n     * Constructor\n     * @param _fb\n     * @param authService\n     * @param translate\n     */\n    constructor(\n        private _fb: FormBuilder,\n        private authService: AuthenticationService,\n        private translateService: TranslationService,\n        private logService: LogService,\n        private router: Router,\n        private appConfig: AppConfigService,\n        private userPreferences: UserPreferencesService,\n        private location: Location,\n        private route: ActivatedRoute\n    ) {\n        this.initFormError();\n        this.initFormFieldsMessages();\n    }\n\n    ngOnInit() {\n        if (this.authService.isOauth()) {\n            const oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n            if (oauth && oauth.implicitFlow) {\n                this.implicitFlow = true;\n            }\n        }\n\n        if (this.authService.isEcmLoggedIn() || this.authService.isBpmLoggedIn()) {\n            this.location.forward();\n        } else {\n            this.route.queryParams.subscribe((params: Params) => {\n                const url = params['redirectUrl'];\n                const provider = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n                this.authService.setRedirect({ provider, url });\n              });\n        }\n\n        if (this.hasCustomFieldsValidation()) {\n            this.form = this._fb.group(this.fieldsValidation);\n        } else {\n            this.initFormFieldsDefault();\n            this.initFormFieldsMessagesDefault();\n        }\n        this.form.valueChanges.subscribe((data) => this.onValueChanged(data));\n    }\n\n    submit() {\n        this.onSubmit(this.form.value);\n    }\n\n    /**\n     * Method called on submit form\n     * @param values\n     * @param event\n     */\n    onSubmit(values: any) {\n        this.disableError();\n\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            const args = new LoginSubmitEvent({\n                controls: { username: this.form.controls.username }\n            });\n            this.executeSubmit.emit(args);\n\n            if (args.defaultPrevented) {\n                return false;\n            } else {\n                this.performLogin(values);\n            }\n        }\n    }\n\n    implicitLogin() {\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            this.authService.ssoImplicitLogin();\n        }\n    }\n\n    /**\n     * The method check the error in the form and push the error in the formError object\n     * @param data\n     */\n    onValueChanged(data: any) {\n        this.disableError();\n        for (const field in this.formError) {\n            if (field) {\n                this.formError[field] = '';\n                const hasError =\n                    (this.form.controls[field].errors && data[field] !== '') ||\n                    (this.form.controls[field].dirty &&\n                        !this.form.controls[field].valid);\n                if (hasError) {\n                    for (const key in this.form.controls[field].errors) {\n                        if (key) {\n                            const message = this._message[field][key];\n                            if (message && message.value) {\n                                const translated = this.translateService.instant(message.value, message.params);\n                                this.formError[field] += translated;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private performLogin(values: any) {\n        this.actualLoginStep = LoginSteps.Checking;\n        this.authService\n            .login(values.username, values.password, this.rememberMe)\n            .subscribe(\n                (token: any) => {\n                    const redirectUrl = this.authService.getRedirect();\n\n                    this.actualLoginStep = LoginSteps.Welcome;\n                    this.userPreferences.setStoragePrefix(values.username);\n                    values.password = null;\n                    this.success.emit(\n                        new LoginSuccessEvent(token, values.username, null)\n                    );\n\n                    if (redirectUrl) {\n                        this.authService.setRedirect(null);\n                        this.router.navigateByUrl(redirectUrl);\n                    } else if (this.successRoute) {\n                        this.router.navigate([this.successRoute]);\n                    }\n                },\n                (err: any) => {\n                    this.actualLoginStep = LoginSteps.Landing;\n                    this.displayErrorMessage(err);\n                    this.isError = true;\n                    this.error.emit(new LoginErrorEvent(err));\n                },\n                () => this.logService.info('Login done')\n            );\n    }\n\n    /**\n     * Check and display the right error message in the UI\n     */\n    private displayErrorMessage(err: any): void {\n        if (\n            err.error &&\n            err.error.crossDomain &&\n            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1\n        ) {\n            this.errorMsg = err.error.message;\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('Invalid CSRF-token') !== -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('The system is currently in read-only mode') !==\n            -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';\n        } else {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';\n        }\n    }\n\n    /**\n     * Add a custom form error for a field\n     * @param field\n     * @param msg\n     */\n    public addCustomFormError(field: string, msg: string) {\n        this.formError[field] += msg;\n    }\n\n    /**\n     * Add a custom validation rule error for a field\n     * @param field\n     * @param ruleId - i.e. required | minlength | maxlength\n     * @param msg\n     */\n    addCustomValidationError(\n        field: string,\n        ruleId: string,\n        msg: string,\n        params?: any\n    ) {\n        this._message[field][ruleId] = {\n            value: msg,\n            params\n        };\n    }\n\n    /**\n     * Display and hide the password value.\n     */\n    toggleShowPassword() {\n        this.isPasswordShow = !this.isPasswordShow;\n    }\n\n    /**\n     * The method return if a field is valid or not\n     * @param field\n     */\n    isErrorStyle(field: AbstractControl) {\n        return !field.valid && field.dirty && !field.pristine;\n    }\n\n    /**\n     * Trim username\n     */\n    trimUsername(event: any) {\n        event.target.value = event.target.value.trim();\n    }\n\n    /**\n     * Default formError values\n     */\n    private initFormError() {\n        this.formError = {\n            username: '',\n            password: ''\n        };\n    }\n\n    /**\n     * Init form fields messages\n     */\n    private initFormFieldsMessages() {\n        this._message = {\n            username: {},\n            password: {}\n        };\n    }\n\n    /**\n     * Default form fields messages\n     */\n    private initFormFieldsMessagesDefault() {\n        this._message = {\n            username: {\n                required: {\n                    value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'\n                },\n                minLength: {\n                    value: 'LOGIN.MESSAGES.USERNAME-MIN',\n                    params: {\n                        get minLength() {\n                            return this.minLength;\n                        }\n                    }\n                }\n\n            },\n            password: {\n                required: {\n                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'\n                }\n            }\n        };\n    }\n\n    private initFormFieldsDefault() {\n        this.form = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Disable the error flag\n     */\n    private disableError() {\n        this.isError = false;\n        this.initFormError();\n    }\n\n    private hasCustomFieldsValidation(): boolean {\n        return this.fieldsValidation !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-header, login-header'\n})\nexport class LoginHeaderDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.headerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-footer, login-footer'\n})\nexport class LoginFooterDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.footerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginDialogComponentData } from './login-dialog-component-data.interface';\nimport { LoginDialogPanelComponent } from './login-dialog-panel.component';\n@Component({\n    selector: 'adf-login-dialog',\n    templateUrl: './login-dialog.component.html',\n    styleUrls: ['./login-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    buttonActionName = '';\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: LoginDialogComponentData) {\n        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';\n    }\n\n    close() {\n        this.data.logged.complete();\n    }\n\n    submitForm(): void {\n        this.loginPanel.submitForm();\n    }\n\n    onLoginSuccess(event: any) {\n        this.data.logged.next(event);\n        this.close();\n    }\n\n    isFormValid() {\n        return this.loginPanel ? this.loginPanel.isValid() : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { LoginSuccessEvent } from '../models/login-success.event';\n\n@Component({\n    selector: 'adf-login-dialog-panel',\n    templateUrl: './login-dialog-panel.component.html',\n    styleUrls: ['./login-dialog-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogPanelComponent {\n    /** Emitted when the login succeeds. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    @ViewChild('adfLogin')\n    login: LoginComponent;\n\n    submitForm(): void {\n        this.login.submit();\n    }\n\n    onLoginSuccess(event: LoginSuccessEvent) {\n        this.success.emit(event);\n    }\n\n    isValid() {\n        return this.login && this.login.form ? this.login.form.valid : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LoginComponent } from './components/login.component';\nimport { LoginFooterDirective } from './directives/login-footer.directive';\nimport { LoginHeaderDirective } from './directives/login-header.directive';\nimport { LoginDialogComponent } from './components/login-dialog.component';\nimport { LoginDialogPanelComponent } from './components/login-dialog-panel.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ],\n    entryComponents: [LoginDialogComponent, LoginDialogPanelComponent],\n    exports: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ]\n})\nexport class LoginModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserPreferencesService } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-language-menu',\n    templateUrl: 'language-menu.component.html'\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<any> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesConfigApp = this.appConfig.get<Array<any>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesConfigApp) {\n            this.languages = languagesConfigApp;\n        }\n    }\n\n    changeLanguage(lang: string) {\n        this.userPreference.locale = lang;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LanguageMenuComponent } from './language-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        LanguageMenuComponent\n    ],\n    exports: [\n        LanguageMenuComponent\n    ]\n})\nexport class LanguageMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    templateUrl: './info-drawer-layout.component.html',\n    styleUrls: ['./info-drawer-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-info-drawer-title], [info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[adf-info-drawer-buttons], [info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[adf-info-drawer-content], [info-drawer-content]' }) export class InfoDrawerContentDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    /** The title of the tab. */\n    @Input()\n    label: string = '';\n\n    /** Icon to render for the tab. */\n    @Input()\n    icon: string = null;\n\n    @ViewChild(TemplateRef)\n    content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    templateUrl: './info-drawer.component.html',\n    styleUrls: ['./info-drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    /** The title of the info drawer. */\n    @Input()\n    title: string|null = null;\n\n    /** The selected index tab. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Emitted when the currently active tab changes. */\n    @Output()\n    currentTab: EventEmitter<number> = new EventEmitter<number>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        this.currentTab.emit(event.index);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';\n\nexport function declarations() {\n    return [\n        InfoDrawerLayoutComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: declarations(),\n    exports: declarations()\n})\nexport class InfoDrawerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Input } from '@angular/core';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { DataColumnListComponent } from '../../data-column/data-column-list.component';\nimport { DataColumn } from './data-column.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\n\nexport abstract class DataTableSchema {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    /** Custom preset column schema in JSON format. */\n    @Input()\n    presetColumn: string;\n\n    columns: any;\n\n    private layoutPresets = {};\n\n    constructor(private appConfigService: AppConfigService,\n                protected presetKey: string,\n                protected presetsModel: any) { }\n\n    public createDatatableSchema(): void {\n        this.loadLayoutPresets();\n        if (!this.columns || this.columns.length === 0) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    public loadLayoutPresets(): void {\n        const externalSettings = this.appConfigService.get(this.presetKey, null);\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);\n        } else {\n            this.layoutPresets = this.presetsModel;\n        }\n    }\n\n    public mergeJsonAndHtmlSchema(): any {\n        let customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));\n        if (customSchemaColumns.length === 0) {\n            customSchemaColumns = this.getDefaultLayoutPreset();\n        }\n        return customSchemaColumns;\n    }\n\n    public getSchemaFromHtml(columnList: DataColumnListComponent): any {\n        let schema = [];\n        if (columnList && columnList.columns && columnList.columns.length > 0) {\n            schema = columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n   public getSchemaFromConfig(presetColumn: string): DataColumn[] {\n        return presetColumn ? (this.layoutPresets[presetColumn]).map((col) => new ObjectDataColumn(col)) : [];\n    }\n\n    private getDefaultLayoutPreset(): DataColumn[] {\n        return (this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    templateUrl: './card-view.component.html',\n    styleUrls: ['./card-view.component.scss']\n})\nexport class CardViewComponent {\n    /** (**required**) Items to show in the card view. */\n    @Input()\n    properties: CardViewItem [];\n\n    /** Toggles whether or not the items can be edited. */\n    @Input()\n    editable: boolean;\n\n    /** Toggles whether or not to show empty items in non-editable mode. */\n    @Input()\n    displayEmpty: boolean = true;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\nexport function transformKeyToObject(key: string, value): Object {\n    const objectLevels: string[] = key.split('.').reverse();\n\n    return objectLevels.reduce<{}>((previousValue, currentValue) => {\n        return { [currentValue]: previousValue};\n    }, value);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardViewUpdateService {\n\n    // Observable sources\n    private itemUpdatedSource = new Subject<UpdateNotification>();\n    private itemClickedSource = new Subject<ClickNotification>();\n\n    // Observable streams\n    public itemUpdated$ = <Observable<UpdateNotification>> this.itemUpdatedSource.asObservable();\n    public itemClicked$ = <Observable<ClickNotification>> this.itemClickedSource.asObservable();\n\n    update(property: CardViewBaseItemModel, newValue: any) {\n        this.itemUpdatedSource.next({\n            target: property,\n            changed: transformKeyToObject(property.key, newValue)\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClickedSource.next({\n            target: property\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { CardViewBoolItemModel } from '../../models/card-view-boolitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-boolitem.component.html',\n    styleUrls: ['./card-view-boolitem.component.scss']\n})\n\nexport class CardViewBoolItemComponent {\n\n    @Input()\n    property: CardViewBoolItemModel;\n\n    @Input()\n    editable: boolean;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    changed(change: MatCheckboxChange) {\n        this.cardViewUpdateService.update(this.property, change.checked );\n        this.property.value = change.checked;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MatDatetimepicker, DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../utils/moment-date-formats.model';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'adf-card-view-dateitem',\n    templateUrl: './card-view-dateitem.component.html',\n    styleUrls: ['./card-view-dateitem.component.scss']\n})\nexport class CardViewDateItemComponent implements OnInit {\n\n    public SHOW_FORMAT: string = 'MMM DD YY';\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('datetimePicker')\n    public datepicker: MatDatetimepicker<any>;\n\n    valueDate: Moment;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        (<MomentDateAdapter> this.dateAdapter).overrideDisplayFormat = this.SHOW_FORMAT;\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.SHOW_FORMAT);\n        }\n    }\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            const momentDate = moment(newDateValue.value, this.SHOW_FORMAT, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, momentDate.toDate());\n                this.property.value = momentDate.toDate();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    templateUrl: './card-view-mapitem.component.html',\n    styleUrls: ['./card-view-mapitem.component.scss']\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { AppConfigService } from '../../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    templateUrl: './card-view-textitem.component.html',\n    styleUrls: ['./card-view-textitem.component.scss']\n})\nexport class CardViewTextItemComponent implements OnChanges {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n    errorMessages: string[];\n    valueSeparator: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator') || CardViewTextItemComponent.DEFAULT_SEPARATOR;\n    }\n\n    ngOnChanges(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable(): boolean {\n        return !!this.property.clickable;\n    }\n\n    hasIcon(): boolean {\n        return !!this.property.icon;\n    }\n\n    hasErrors(): boolean {\n        return this.errorMessages && this.errorMessages.length > 0;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            if (this.editorInput) {\n                this.editorInput.nativeElement.click();\n            }\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n        this.setEditMode(false);\n        this.resetErrorMessages();\n    }\n\n    private resetErrorMessages() {\n        this.errorMessages = [];\n    }\n\n    update(): void {\n        if (this.property.isValid(this.editedValue)) {\n            const updatedValue = this.prepareValueForUpload(this.property, this.editedValue);\n            this.cardViewUpdateService.update(this.property, updatedValue);\n            this.property.value = updatedValue;\n            this.setEditMode(false);\n            this.resetErrorMessages();\n        } else {\n            this.errorMessages = this.property.getValidationErrors(this.editedValue);\n        }\n    }\n\n    prepareValueForUpload(property: CardViewTextItemModel, value: string): string | string [] {\n        if (property.multivalued) {\n            const listOfValues = value.split(this.valueSeparator.trim()).map((item) => item.trim());\n            return listOfValues;\n        }\n        return value;\n    }\n\n    onTextAreaInputChange() {\n        this.errorMessages = this.property.getValidationErrors(this.editedValue);\n    }\n\n    clicked(): void {\n        if (typeof this.property.clickCallBack === 'function') {\n            this.property.clickCallBack();\n        } else {\n            this.cardViewUpdateService.clicked(this.property);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-selectitem',\n    templateUrl: './card-view-selectitem.component.html',\n    styleUrls: ['./card-view-selectitem.component.scss']\n})\nexport class CardViewSelectItemComponent implements OnChanges {\n    @Input() property: CardViewSelectItemModel<string>;\n\n    @Input() editable: boolean = false;\n\n    @Input() options$: Observable<CardViewSelectItemOption<string>[]>;\n\n    value: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges(): void {\n        this.value = this.property.value;\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    getOptions(): Observable<CardViewSelectItemOption<string>[]> {\n        return this.options$ || this.property.options$;\n    }\n\n    onChange(event: MatSelectChange): void {\n        this.cardViewUpdateService.update(this.property, event.value);\n        this.property.value = event.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { CardViewKeyValuePairsItemModel } from '../../models/card-view.models';\nimport { CardViewKeyValuePairsItemType } from '../../interfaces/card-view.interfaces';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-keyvaluepairsitem.component.html',\n    styleUrls: ['./card-view-keyvaluepairsitem.component.scss']\n})\n\nexport class CardViewKeyValuePairsItemComponent implements OnChanges {\n\n    @Input()\n    property: CardViewKeyValuePairsItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    values: CardViewKeyValuePairsItemType[];\n    matTableValues: MatTableDataSource<CardViewKeyValuePairsItemType>;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.values = this.property.value || [];\n        this.matTableValues = new MatTableDataSource(this.values);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    add(): void {\n        this.values.push({ name: '', value: '' });\n    }\n\n    remove(index: number): void {\n        this.values.splice(index, 1);\n        this.save(true);\n    }\n\n    onBlur(value): void {\n        if (value.length) {\n            this.save();\n        }\n    }\n\n    save(remove?: boolean): void {\n        const validValues = this.values.filter((i) => i.name.length && i.value.length);\n\n        if (remove || validValues.length) {\n            this.cardViewUpdateService.update(this.property, validValues);\n            this.property.value = validValues;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getType(type: any): any {\n    return () => type;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Type } from '@angular/core';\nimport { getType } from './get-type';\n\nexport interface DynamicComponentModel { type: string; }\nexport type DynamicComponentResolveFunction = (model: DynamicComponentModel) => Type<{}>;\nexport class DynamicComponentResolver {\n    static fromType(type: Type<{}>): DynamicComponentResolveFunction {\n        return getType(type);\n    }\n}\n\nexport abstract class DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = undefined;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {};\n\n    /**\n     * Gets the currently active DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want\n     * @param defaultValue Default type returned for types that are not yet mapped\n     * @returns Resolver function\n     */\n    getComponentTypeResolver(type: string, defaultValue: Type<{}> = this.defaultValue): DynamicComponentResolveFunction {\n        if (type) {\n            return this.types[type] || DynamicComponentResolver.fromType(defaultValue);\n        }\n        return DynamicComponentResolver.fromType(defaultValue);\n    }\n\n    /**\n     * Sets or optionally replaces a DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want to set\n     * @param resolver The new resolver function\n     * @param override The new resolver will only replace an existing one if this parameter is true\n     */\n    setComponentTypeResolver(type: string, resolver: DynamicComponentResolveFunction, override: boolean = true) {\n        if (!type) {\n            throw new Error(`type is null or not defined`);\n        }\n\n        if (!resolver) {\n            throw new Error(`resolver is null or not defined`);\n        }\n\n        const existing = this.types[type];\n        if (existing && !override) {\n            throw new Error(`already mapped, use override option if you intend replacing existing mapping.`);\n        }\n\n        this.types[type] = resolver;\n    }\n\n    /**\n     * Finds the component type that is needed to render a form field.\n     * @param model Form field model for the field to render\n     * @param defaultValue Default type returned for field types that are not yet mapped.\n     * @returns Component type\n     */\n    resolveComponentType(model: DynamicComponentModel, defaultValue: Type<{}> = this.defaultValue): Type<{}> {\n        if (model) {\n            const resolver = this.getComponentTypeResolver(model.type, defaultValue);\n            return resolver(model);\n        }\n        return defaultValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';\nimport { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';\nimport { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardItemTypeService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = CardViewTextItemComponent;\n\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),\n        'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),\n        'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),\n        'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\nimport { CardItemTypeService } from '../../services/card-item-types.service';\nimport { CardViewContentProxyDirective } from '../../directives/card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private cardItemTypeService: CardItemTypeService,\n                private resolver: ComponentFactoryResolver) {\n        const dynamicLifeCycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifeCycleMethods.forEach((method) => {\n            this[method] = this.proxy.bind(this, method);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        Object.keys(changes)\n            .map((changeName) => [changeName, changes[changeName]])\n            .forEach(([inputParamName, simpleChange]: [string, SimpleChange]) => {\n                this.componentReference.instance[inputParamName] = simpleChange.currentValue;\n            });\n\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const factoryClass = this.cardItemTypeService.resolveComponentType(this.property);\n\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n        this.componentReference.instance.displayEmpty = this.displayEmpty;\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemIntValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.INT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemFloatValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.FLOAT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemProperties, CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: any;\n    editable: boolean;\n    clickable: boolean;\n    icon?: string;\n    validators?: CardViewItemValidator[];\n    data?: any;\n\n    constructor(cardViewItemProperties: CardViewItemProperties) {\n        this.label = cardViewItemProperties.label || '';\n        this.value = cardViewItemProperties.value;\n        this.key = cardViewItemProperties.key;\n        this.default = cardViewItemProperties.default;\n        this.editable = !!cardViewItemProperties.editable;\n        this.clickable = !!cardViewItemProperties.clickable;\n        this.icon = cardViewItemProperties.icon || '';\n        this.validators = cardViewItemProperties.validators || [];\n        this.data = cardViewItemProperties.data || null;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n\n    isValid(newValue: any): boolean {\n        if (!this.validators.length) {\n            return true;\n        }\n\n        return this.validators\n            .map((validator) => validator.isValid(newValue))\n            .reduce((isValidUntilNow, isValid) => isValidUntilNow && isValid, true);\n    }\n\n    getValidationErrors(value): string[] {\n        if (!this.validators.length) {\n            return [];\n        }\n\n        return this.validators.filter((validator) => !validator.isValid(value)).map((validator) => validator.message);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewBoolItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewBoolItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'bool';\n    value: boolean = false;\n    default: boolean;\n\n    constructor(cardViewBoolItemProperties: CardViewBoolItemProperties) {\n        super(cardViewBoolItemProperties);\n\n        if (cardViewBoolItemProperties.value !== undefined) {\n            this.value = !!JSON.parse(cardViewBoolItemProperties.value);\n        }\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.value;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewDateItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'date';\n    format: string = 'MMM DD YYYY';\n\n    constructor(cardViewDateItemProperties: CardViewDateItemProperties) {\n        super(cardViewDateItemProperties);\n\n        if (cardViewDateItemProperties.format) {\n            this.format = cardViewDateItemProperties.format;\n        }\n\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            return moment(this.value).format(this.format);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewDateItemModel } from './card-view-dateitem.model';\n\nexport class CardViewDatetimeItemModel extends CardViewDateItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'datetime';\n    format: string = 'MMM DD YYYY HH:mm';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewTextItemPipeProperty, CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'text';\n    multiline?: boolean;\n    multivalued?: boolean;\n    pipes?: CardViewTextItemPipeProperty[];\n    clickCallBack?: any;\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n        this.multiline = !!cardViewTextItemProperties.multiline;\n        this.multivalued = !!cardViewTextItemProperties.multivalued;\n        this.pipes = cardViewTextItemProperties.pipes || [];\n        this.clickCallBack = cardViewTextItemProperties.clickCallBack ? cardViewTextItemProperties.clickCallBack : null;\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.applyPipes(this.value);\n        }\n    }\n\n    private applyPipes(displayValue) {\n        if (this.pipes.length) {\n            displayValue = this.pipes.reduce((accumulator, { pipe, params = [] }) => {\n                return pipe.transform(accumulator, ...params);\n            }, displayValue);\n        }\n\n        return displayValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemFloatValidator } from '..//validators/card-view.validators';\n\nexport class CardViewFloatItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'float';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemFloatValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseFloat(cardViewTextItemProperties.value);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemIntValidator } from '../validators/card-view.validators';\n\nexport class CardViewIntItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'int';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemIntValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseInt(cardViewTextItemProperties.value, 10);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewKeyValuePairsItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewKeyValuePairsItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'keyvaluepairs';\n\n    constructor(cardViewKeyValuePairsItemProperties: CardViewKeyValuePairsItemProperties) {\n        super(cardViewKeyValuePairsItemProperties);\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewSelectItemProperties, CardViewSelectItemOption } from '../interfaces/card-view.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport class CardViewSelectItemModel<T> extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'select';\n    options$: Observable<CardViewSelectItemOption<T>[]>;\n\n    constructor(cardViewSelectItemProperties: CardViewSelectItemProperties<T>) {\n        super(cardViewSelectItemProperties);\n\n        this.options$ = cardViewSelectItemProperties.options$;\n    }\n\n    get displayValue() {\n        return this.options$.pipe(\n            switchMap((options) => {\n                const option = options.find((o) => o.key === this.value);\n                return of(option ? option.label : '');\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatSelectModule\n} from '@angular/material';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CardViewContentProxyDirective } from './directives/card-view-content-proxy.directive';\nimport { CardViewComponent } from './components/card-view/card-view.component';\nimport { CardViewBoolItemComponent } from './components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewDateItemComponent } from './components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './components/card-view-item-dispatcher/card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './components/card-view-textitem/card-view-textitem.component';\nimport { CardViewKeyValuePairsItemComponent } from './components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { CardViewSelectItemComponent } from './components/card-view-selectitem/card-view-selectitem.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        TranslateModule.forChild(),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewKeyValuePairsItemComponent,\n        CardViewSelectItemComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective\n    ],\n    entryComponents: [\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ]\n})\nexport class CardViewModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable()\nexport class DebugAppConfigService extends AppConfigService {\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    /** @override */\n    get<T>(key: string, defaultValue?: T): T {\n        if (key === AppConfigValues.OAUTHCONFIG) {\n            return <T> (JSON.parse(this.getItem(key)) || super.get<T>(key, defaultValue));\n        } else if (key === AppConfigValues.APPLICATION) {\n            return undefined;\n        } else {\n            return <T> (<any> this.getItem(key) || super.get<T>(key, defaultValue));\n        }\n    }\n\n    getItem(key: string): string | null {\n        return localStorage.getItem(key);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\n\n@Pipe({\n    name: 'adfAppConfig'\n})\nexport class AppConfigPipe implements PipeTransform {\n    constructor(private config: AppConfigService) {}\n\n    transform(value: string, fallback: any): any {\n        return this.config.get(value, fallback);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppConfigPipe } from './app-config.pipe';\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    declarations: [\n        AppConfigPipe\n    ],\n    exports: [\n        AppConfigPipe\n    ]\n})\nexport class AppConfigModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormSaveRepresentation } from '@alfresco/js-api';\n\nexport class FormDefinitionModel extends FormSaveRepresentation {\n    reusable: boolean = false;\n    newVersion: boolean = false;\n    formRepresentation: any;\n    formImageBase64: string = '';\n\n    constructor(id: string, name: any, lastUpdatedByFullName: string, lastUpdated: string, metadata: any) {\n        super();\n        this.formRepresentation = {\n            id: id,\n            name: name,\n            description: '',\n            version: 1,\n            lastUpdatedBy: 1,\n            lastUpdatedByFullName: lastUpdatedByFullName,\n            lastUpdated: lastUpdated,\n            stencilSetId: 0,\n            referenceId: null,\n            formDefinition: {\n                fields: [{\n                    name: 'Label',\n                    type: 'container',\n                    fieldType: 'ContainerRepresentation',\n                    numberOfColumns: 2,\n                    required: false,\n                    readOnly: false,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: -1,\n                    col: -1,\n                    fields: {'1': this.metadataToFields(metadata)}\n                }],\n                gridsterForm: false,\n                javascriptEvents: [],\n                metadata: {},\n                outcomes: [],\n                className: '',\n                style: '',\n                tabs: [],\n                variables: []\n            }\n        };\n    }\n\n    private metadataToFields(metadata: any): any[] {\n        const fields = [];\n        if (metadata) {\n            metadata.forEach(function(property) {\n                if (property) {\n                    const field = {\n                        type: 'text',\n                        id: property.name,\n                        name: property.name,\n                        required: false,\n                        readOnly: false,\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        colspan: 1,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        layout: {\n                            colspan: 1,\n                            row: -1,\n                            column: -1\n                        }\n                    };\n                    fields.push(field);\n                }\n            });\n        }\n\n        return fields;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nexport class FormFieldTypes {\n    static CONTAINER: string = 'container';\n    static GROUP: string = 'group';\n    static DYNAMIC_TABLE: string = 'dynamic-table';\n    static TEXT: string = 'text';\n    static MULTILINE_TEXT: string = 'multi-line-text';\n    static DROPDOWN: string = 'dropdown';\n    static HYPERLINK: string = 'hyperlink';\n    static RADIO_BUTTONS: string = 'radio-buttons';\n    static DISPLAY_VALUE: string = 'readonly';\n    static READONLY_TEXT: string = 'readonly-text';\n    static UPLOAD: string = 'upload';\n    static TYPEAHEAD: string = 'typeahead';\n    static FUNCTIONAL_GROUP: string = 'functional-group';\n    static PEOPLE: string = 'people';\n    static BOOLEAN: string = 'boolean';\n    static NUMBER: string = 'integer';\n    static DATE: string = 'date';\n    static AMOUNT: string = 'amount';\n    static DOCUMENT: string = 'document';\n    static DATETIME: string = 'datetime';\n    static ATTACH_FOLDER: string = 'select-folder';\n\n    static READONLY_TYPES: string[] = [\n        FormFieldTypes.HYPERLINK,\n        FormFieldTypes.DISPLAY_VALUE,\n        FormFieldTypes.READONLY_TEXT\n    ];\n\n    static isReadOnlyType(type: string) {\n        return FormFieldTypes.READONLY_TYPES.indexOf(type) > -1;\n    }\n\n    static isContainerType(type: string) {\n        return type === FormFieldTypes.CONTAINER || type === FormFieldTypes.GROUP;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormModel } from './form.model';\n\nexport abstract class FormWidgetModel {\n\n    readonly fieldType: string;\n    readonly id: string;\n    readonly name: string;\n    readonly type: string;\n    readonly tab: string;\n\n    readonly form: any;\n    readonly json: any;\n\n    constructor(form: FormModel, json: any) {\n        this.form = form;\n        this.json = json;\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this.tab = json.tab;\n        }\n    }\n}\n\nexport interface FormWidgetModelCache<T extends FormWidgetModel> {\n    [key: string]: T;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\n\nexport class ContainerColumnModel {\n\n    size: number = 12;\n    fields: FormFieldModel[] = [];\n    colspan: number = 1;\n    rowspan: number = 1;\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nexport class ErrorMessageModel {\n\n    message: string = '';\n    attributes: Map<string, string> = null;\n\n    constructor(obj?: any) {\n        this.message = obj && obj.message ? obj.message : '';\n        this.attributes = new Map();\n    }\n\n    isActive() {\n        return this.message ? true : false;\n    }\n\n    getAttributesAsJsonObj() {\n        let result = {};\n        if (this.attributes.size > 0) {\n            const obj = Object.create(null);\n            this.attributes.forEach((value, key) => {\n                obj[key] = value;\n            });\n            result = JSON.stringify(obj);\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\n\nexport interface FormFieldValidator {\n\n    isSupported(field: FormFieldModel): boolean;\n\n    validate(field: FormFieldModel): boolean;\n\n}\n\nexport class RequiredFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT,\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.BOOLEAN,\n        FormFieldTypes.TYPEAHEAD,\n        FormFieldTypes.DROPDOWN,\n        FormFieldTypes.PEOPLE,\n        FormFieldTypes.FUNCTIONAL_GROUP,\n        FormFieldTypes.RADIO_BUTTONS,\n        FormFieldTypes.UPLOAD,\n        FormFieldTypes.AMOUNT,\n        FormFieldTypes.DYNAMIC_TABLE,\n        FormFieldTypes.DATE,\n        FormFieldTypes.DATETIME,\n        FormFieldTypes.ATTACH_FOLDER\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.required;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n\n            if (field.type === FormFieldTypes.DROPDOWN) {\n                if (field.hasEmptyValue && field.emptyOption) {\n                    if (field.value === field.emptyOption.id) {\n                        return false;\n                    }\n                }\n            }\n\n            if (field.type === FormFieldTypes.RADIO_BUTTONS) {\n                const option = field.options.find((opt) => opt.id === field.value);\n                return !!option;\n            }\n\n            if (field.type === FormFieldTypes.UPLOAD) {\n                return field.value && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.DYNAMIC_TABLE) {\n                return field.value && field.value instanceof Array && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.BOOLEAN) {\n                return field.value ? true : false;\n            }\n\n            if (field.value === null || field.value === undefined || field.value === '') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nexport class NumberFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    static isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (field.value === null ||\n                field.value === undefined ||\n                field.value === '') {\n                return true;\n            }\n            const valueStr = '' + field.value;\n            let pattern = new RegExp(/^-?\\d+$/);\n            if (field.enableFractions) {\n                pattern = new RegExp(/^-?[0-9]+(\\.[0-9]{1,2})?$/);\n            }\n            if (valueStr.match(pattern)) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_NUMBER';\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class DateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    // Validates that the input string is a valid date formatted as <dateFormat> (default D-M-YYYY)\n    static isValidDate(inputDate: string, dateFormat: string = 'D-M-YYYY'): boolean {\n        if (inputDate) {\n            const d = moment(inputDate, dateFormat, true);\n            return d.isValid();\n        }\n\n        return false;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (DateFieldValidator.isValidDate(field.value, field.dateDisplayFormat)) {\n                return true;\n            }\n            field.validationSummary.message = field.dateDisplayFormat;\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinDateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDate(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDate(field: FormFieldModel, dateFormat: string): boolean {\n        const MIN_DATE_FORMAT = 'DD-MM-YYYY';\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n        const min = moment(field.minValue, MIN_DATE_FORMAT);\n\n        if (fieldValueData.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateFieldValidator implements FormFieldValidator {\n\n    MAX_DATE_FORMAT = 'DD-MM-YYYY';\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                return false;\n            }\n\n            // remove time and timezone info\n            let d;\n            if (typeof field.value === 'string') {\n                d = moment(field.value.split('T')[0], dateFormat);\n            } else {\n                d = field.value;\n            }\n            const max = moment(field.maxValue, this.MAX_DATE_FORMAT);\n\n            if (d.isAfter(max)) {\n                field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n                field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).toLocaleUpperCase());\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport class MinDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MIN_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const min = moment(field.minValue, this.MIN_DATETIME_FORMAT);\n\n        if (fieldValueDate.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MAX_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const max = moment(field.maxValue, this.MAX_DATETIME_FORMAT);\n\n        if (fieldValueDate.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MinLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.minLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length >= field.minLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.AT_LEAST_LONG`;\n            field.validationSummary.attributes.set('minLength', field.minLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MaxLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.maxLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length <= field.maxLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NO_LONGER_THAN`;\n            field.validationSummary.attributes.set('maxLength', field.maxLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.minValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const minValue: number = +field.minValue;\n\n            if (value >= minValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', field.minValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class MaxValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.maxValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const maxValue: number = +field.maxValue;\n\n            if (value <= maxValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', field.maxValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class RegExFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport class FixedValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TYPEAHEAD\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    hasValidNameOrValidId(field: FormFieldModel): boolean {\n        return this.hasValidName(field) || this.hasValidId(field);\n    }\n\n    hasValidName(field: FormFieldModel) {\n        return field.options.find((item) => item.name && item.name.toLocaleLowerCase() === field.value.toLocaleLowerCase()) ? true : false;\n    }\n\n    hasValidId(field: FormFieldModel): boolean {\n        return field.options.find((item) => item.id === field.value) ? true : false;\n    }\n\n    hasStringValue(field: FormFieldModel) {\n        return field.value && typeof field.value === 'string';\n    }\n\n    hasOptions(field: FormFieldModel) {\n        return field.options && field.options.length > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (this.hasStringValue(field) && this.hasOptions(field) && !this.hasValidNameOrValidId(field)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport const FORM_FIELD_VALIDATORS = [\n    new RequiredFieldValidator(),\n    new NumberFieldValidator(),\n    new MinLengthFieldValidator(),\n    new MaxLengthFieldValidator(),\n    new MinValueFieldValidator(),\n    new MaxValueFieldValidator(),\n    new RegExFieldValidator(),\n    new DateFieldValidator(),\n    new MinDateFieldValidator(),\n    new MaxDateFieldValidator(),\n    new FixedValueFieldValidator(),\n    new MinDateTimeFieldValidator(),\n    new MaxDateTimeFieldValidator()\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\nimport moment from 'moment-es6';\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { ContainerColumnModel } from './container-column.model';\nimport { ErrorMessageModel } from './error-message.model';\nimport { FormFieldMetadata } from './form-field-metadata';\nimport { FormFieldOption } from './form-field-option';\nimport { FormFieldTypes } from './form-field-types';\nimport { NumberFieldValidator } from './form-field-validator';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\n// Maps to FormFieldRepresentation\nexport class FormFieldModel extends FormWidgetModel {\n\n    private _value: string;\n    private _readOnly: boolean = false;\n    private _isValid: boolean = true;\n    private _required: boolean = false;\n\n    readonly defaultDateFormat: string = 'D-M-YYYY';\n    readonly defaultDateTimeFormat: string = 'D-M-YYYY hh:mm A';\n\n    // model members\n    fieldType: string;\n    id: string;\n    name: string;\n    type: string;\n    overrideId: boolean;\n    tab: string;\n    rowspan: number = 1;\n    colspan: number = 1;\n    placeholder: string = null;\n    minLength: number = 0;\n    maxLength: number = 0;\n    minValue: string;\n    maxValue: string;\n    regexPattern: string;\n    options: FormFieldOption[] = [];\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n    hasEmptyValue: boolean;\n    className: string;\n    optionType: string;\n    params: FormFieldMetadata = {};\n    hyperlinkUrl: string;\n    displayText: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel = null;\n    enableFractions: boolean = false;\n    currency: string = null;\n    dateDisplayFormat: string = this.dateDisplayFormat || this.defaultDateFormat;\n\n    // container model members\n    numberOfColumns: number = 1;\n    fields: FormFieldModel[] = [];\n    columns: ContainerColumnModel[] = [];\n\n    // util members\n    emptyOption: FormFieldOption;\n    validationSummary: ErrorMessageModel;\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(v: any) {\n        this._value = v;\n        this.updateForm();\n    }\n\n    get readOnly(): boolean {\n        if (this.form && this.form.readOnly) {\n            return true;\n        }\n        return this._readOnly;\n    }\n\n    set readOnly(readOnly: boolean) {\n        this._readOnly = readOnly;\n        this.updateForm();\n    }\n\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = value;\n        this.updateForm();\n    }\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    validate(): boolean {\n        this.validationSummary = new ErrorMessageModel();\n\n        if (!this.readOnly) {\n            const validators = this.form.fieldValidators || [];\n            for (const validator of validators) {\n                if (!validator.validate(this)) {\n                    this._isValid = false;\n                    return this._isValid;\n                }\n            }\n        }\n\n        this._isValid = true;\n        return this._isValid;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this._required = <boolean> json.required;\n            this._readOnly = <boolean> json.readOnly || json.type === 'readonly';\n            this.overrideId = <boolean> json.overrideId;\n            this.tab = json.tab;\n            this.restUrl = json.restUrl;\n            this.restResponsePath = json.restResponsePath;\n            this.restIdProperty = json.restIdProperty;\n            this.restLabelProperty = json.restLabelProperty;\n            this.colspan = <number> json.colspan;\n            this.minLength = <number> json.minLength || 0;\n            this.maxLength = <number> json.maxLength || 0;\n            this.minValue = json.minValue;\n            this.maxValue = json.maxValue;\n            this.regexPattern = json.regexPattern;\n            this.options = <FormFieldOption[]> json.options || [];\n            this.hasEmptyValue = <boolean> json.hasEmptyValue;\n            this.className = json.className;\n            this.optionType = json.optionType;\n            this.params = <FormFieldMetadata> json.params || {};\n            this.hyperlinkUrl = json.hyperlinkUrl;\n            this.displayText = json.displayText;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n            this.enableFractions = <boolean> json.enableFractions;\n            this.currency = json.currency;\n            this.dateDisplayFormat = json.dateDisplayFormat || this.getDefaultDateFormat(json);\n            this._value = this.parseValue(json);\n            this.validationSummary = new ErrorMessageModel();\n\n            if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {\n                this.placeholder = json.placeholder;\n            }\n\n            if (FormFieldTypes.isReadOnlyType(json.type)) {\n                if (json.params && json.params.field) {\n                    if (form.processVariables) {\n                        const processVariable = this.getProcessVariableValue(json.params.field, form);\n                        if (processVariable) {\n                            this.value = processVariable;\n                        }\n                    } else if (json.params.field.responseVariable) {\n                        const formVariable = this.getVariablesValue(json.params.field.name, form);\n                        if (formVariable) {\n                            this.value = formVariable;\n                        }\n                    }\n                }\n            }\n\n            if (FormFieldTypes.isContainerType(json.type)) {\n                this.containerFactory(json, form);\n            }\n        }\n\n        if (this.hasEmptyValue && this.options && this.options.length > 0) {\n            this.emptyOption = this.options[0];\n        }\n\n        this.updateForm();\n    }\n\n    private getDefaultDateFormat(jsonField: any): string {\n        let originalType = jsonField.type;\n        if (FormFieldTypes.isReadOnlyType(jsonField.type) &&\n            jsonField.params &&\n            jsonField.params.field) {\n            originalType = jsonField.params.field.type;\n        }\n        return originalType === FormFieldTypes.DATETIME ? this.defaultDateTimeFormat : this.defaultDateFormat;\n    }\n\n    private isTypeaheadFieldType(type: string): boolean {\n        return type === 'typeahead' ? true : false;\n    }\n\n    private getFieldNameWithLabel(name: string): string {\n        return name += '_LABEL';\n    }\n\n    private getProcessVariableValue(field: any, form: FormModel) {\n        let fieldName = field.name;\n        if (this.isTypeaheadFieldType(field.type)) {\n            fieldName = this.getFieldNameWithLabel(field.id);\n        }\n        return this.findProcessVariableValue(fieldName, form);\n    }\n\n    private getVariablesValue(variableName: string, form: FormModel) {\n        const variable = form.json.variables.find((currentVariable) => {\n            return currentVariable.name === variableName;\n        });\n\n        if (variable) {\n            if (variable.type === 'boolean') {\n                return JSON.parse(variable.value);\n            }\n\n            return variable.value;\n        }\n\n        return null;\n    }\n\n    private findProcessVariableValue(variableName: string, form: FormModel) {\n        if (form.processVariables) {\n            const variable = form.processVariables.find((currentVariable) => {\n                return currentVariable.name === variableName;\n            });\n\n            if (variable) {\n                return variable.type === 'boolean' ? JSON.parse(variable.value) : variable.value;\n            }\n        }\n\n        return undefined;\n    }\n\n    private containerFactory(json: any, form: FormModel): void {\n        this.numberOfColumns = <number> json.numberOfColumns || 1;\n\n        this.fields = json.fields;\n\n        this.rowspan = 1;\n        this.colspan = 1;\n\n        if (json.fields) {\n            for (const currentField in json.fields) {\n                if (json.fields.hasOwnProperty(currentField)) {\n                    const col = new ContainerColumnModel();\n\n                    const fields: FormFieldModel[] = (json.fields[currentField] || []).map((f) => new FormFieldModel(form, f));\n                    col.fields = fields;\n                    col.rowspan = json.fields[currentField].length;\n\n                    col.fields.forEach((colFields: any) => {\n                        this.colspan = colFields.colspan > this.colspan ? colFields.colspan : this.colspan;\n                    });\n\n                    this.rowspan = this.rowspan < col.rowspan ? col.rowspan : this.rowspan;\n                    this.columns.push(col);\n                }\n            }\n        }\n    }\n\n    parseValue(json: any): any {\n        let value = json.value;\n\n        /*\n         This is needed due to Activiti issue related to reading dropdown values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.DROPDOWN) {\n            if (json.hasEmptyValue && json.options) {\n                const options = <FormFieldOption[]> json.options || [];\n                if (options.length > 0) {\n                    const emptyOption = json.options[0];\n                    if (value === '' || value === emptyOption.id || value === emptyOption.name) {\n                        value = emptyOption.id;\n                    } else if (value.id && value.name) {\n                        value = value.id;\n                    }\n                }\n            }\n        }\n\n        /*\n         This is needed due to Activiti issue related to reading radio button values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.RADIO_BUTTONS) {\n            // Activiti has a bug with default radio button value where initial selection passed as `name` value\n            // so try resolving current one with a fallback to first entry via name or id\n            // TODO: needs to be reported and fixed at Activiti side\n            const entry: FormFieldOption[] = this.options.filter((opt) =>\n                opt.id === value || opt.name === value || (value && (opt.id === value.id || opt.name === value.name)));\n            if (entry.length > 0) {\n                value = entry[0].id;\n            }\n        }\n\n        /*\n         This is needed due to Activiti displaying/editing dates in d-M-YYYY format\n         but storing on server in ISO8601 format (i.e. 2013-02-04T22:44:30.652Z)\n         */\n        if (this.isDateField(json) || this.isDateTimeField(json)) {\n            if (value) {\n                let dateValue;\n                if (NumberFieldValidator.isNumber(value)) {\n                    dateValue = moment(value);\n                } else {\n                    dateValue = this.isDateTimeField(json) ? moment(value, 'YYYY-MM-DD hh:mm A') : moment(value.split('T')[0], 'YYYY-M-D');\n                }\n                if (dateValue && dateValue.isValid()) {\n                    value = dateValue.format(this.dateDisplayFormat);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    updateForm() {\n        if (!this.form) {\n            return;\n        }\n\n        switch (this.type) {\n            case FormFieldTypes.DROPDOWN:\n                /*\n                 This is needed due to Activiti reading dropdown values as string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                if (this.value === 'empty' || this.value === '') {\n                    this.form.values[this.id] = {};\n                } else {\n                    const entry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                    if (entry.length > 0) {\n                        this.form.values[this.id] = entry[0];\n                    }\n                }\n                break;\n            case FormFieldTypes.RADIO_BUTTONS:\n                /*\n                 This is needed due to Activiti issue related to reading radio button values as value string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                const rbEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                if (rbEntry.length > 0) {\n                    this.form.values[this.id] = rbEntry[0];\n                }\n                break;\n            case FormFieldTypes.UPLOAD:\n                this.form.hasUpload = true;\n                if (this.value && this.value.length > 0) {\n                    this.form.values[this.id] = this.value.map((elem) => elem.id).join(',');\n                } else {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.TYPEAHEAD:\n                const taEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value || opt.name === this.value);\n                if (taEntry.length > 0) {\n                    this.form.values[this.id] = taEntry[0];\n                } else if (this.options.length > 0) {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.DATE:\n                const dateValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateValue && dateValue.isValid()) {\n                    this.form.values[this.id] = `${dateValue.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.DATETIME:\n                const dateTimeValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateTimeValue && dateTimeValue.isValid()) {\n                    /* cspell:disable-next-line */\n                    this.form.values[this.id] = dateTimeValue.format('YYYY-MM-DDTHH:mm:ssZ');\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.NUMBER:\n                this.form.values[this.id] = parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.AMOUNT:\n                this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);\n                break;\n            default:\n                if (!FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {\n                    this.form.values[this.id] = this.value;\n                }\n        }\n\n        this.form.onFormFieldChanged(this);\n    }\n\n    /**\n     * Skip the invalid field type\n     * @param type\n     */\n    isInvalidFieldType(type: string) {\n        if (type === 'container') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getOptionName(): string {\n        const option: FormFieldOption = this.options.find((opt) => opt.id === this.value);\n        return option ? option.name : null;\n    }\n\n    hasOptions() {\n        return this.options && this.options.length > 0;\n    }\n\n    private isDateField(json: any) {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATE ) ||\n                json.type === FormFieldTypes.DATE;\n    }\n\n    private isDateTimeField(json: any): boolean {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATETIME) ||\n                json.type === FormFieldTypes.DATETIME;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\n\nexport class FormEvent {\n\n    private isDefaultPrevented: boolean = false;\n\n    readonly form: FormModel;\n\n    constructor(form: FormModel) {\n        this.form = form;\n    }\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormFieldEvent extends FormEvent {\n\n    readonly field: FormFieldModel;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form);\n        this.field = field;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateFormFieldEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\nimport { FormFieldModel } from '../components/widgets/core/form-field.model';\n\nexport class ValidateFormEvent extends FormEvent {\n\n    isValid = true;\n    errorsField: FormFieldModel[] = [];\n\n    constructor(form: FormModel) {\n        super(form);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\nimport { FormWidgetModel } from './form-widget.model';\n\nexport class ContainerModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n\n    get isVisible(): boolean {\n        return this.field.isVisible;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field.form, field.json);\n\n        if (field) {\n            this.field = field;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class FormOutcomeModel extends FormWidgetModel {\n\n    static SAVE_ACTION: string = 'SAVE';            // Activiti 'Save' action name\n    static COMPLETE_ACTION: string = 'COMPLETE';    // Activiti 'Complete' action name\n    static START_PROCESS_ACTION: string = 'START PROCESS';    // Activiti 'Start Process' action name\n\n    isSystem: boolean = false;\n    isSelected: boolean = false;\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.isSystem = json.isSystem ? true : false;\n            this.isSelected = form && json.name === form.selectedOutcome ? true : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class TabModel extends FormWidgetModel {\n\n    title: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel;\n\n    fields: FormWidgetModel[] = [];\n\n    hasContent(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.title = json.title;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormValues } from './widgets/core/form-values';\nimport { TabModel } from './widgets/core/tab.model';\nimport { FormWidgetModel } from './widgets/core/form-widget.model';\nimport { FormOutcomeModel } from './widgets/core/form-outcome.model';\nimport { FormFieldModel } from './widgets/core/form-field.model';\nimport { ContainerModel } from './widgets/core/container.model';\n\nexport abstract class FormBaseModel {\n\n    static UNSET_TASK_NAME: string = 'Nameless task';\n    static SAVE_OUTCOME: string = '$save';\n    static COMPLETE_OUTCOME: string = '$complete';\n    static START_PROCESS_OUTCOME: string = '$startProcess';\n\n    json: any;\n    isValid: boolean;\n\n    values: FormValues = {};\n    tabs: TabModel[] = [];\n    fields: FormWidgetModel[] = [];\n    outcomes: FormOutcomeModel[] = [];\n\n    className: string;\n    readOnly: boolean = false;\n    taskName;\n\n    hasTabs(): boolean {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    hasOutcomes(): boolean {\n        return this.outcomes && this.outcomes.length > 0;\n    }\n\n    getFieldById(fieldId: string): FormFieldModel {\n        return this.getFormFields().find((field) => field.id === fieldId);\n    }\n\n    // TODO: consider evaluating and caching once the form is loaded\n    getFormFields(): FormFieldModel[] {\n        const formFieldModel: FormFieldModel[] = [];\n\n        for (let i = 0; i < this.fields.length; i++) {\n            const field = this.fields[i];\n\n            if (field instanceof ContainerModel) {\n                const container = <ContainerModel> field;\n                formFieldModel.push(container.field);\n\n                container.field.columns.forEach((column) => {\n                    formFieldModel.push(...column.fields);\n                });\n            }\n        }\n\n        return formFieldModel;\n    }\n\n    abstract validateForm();\n    abstract validateField(field: FormFieldModel);\n    abstract onFormFieldChanged(field: FormFieldModel);\n    abstract markAsInvalid();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldEvent } from './../../../events/form-field.event';\nimport { ValidateFormFieldEvent } from './../../../events/validate-form-field.event';\nimport { ValidateFormEvent } from './../../../events/validate-form.event';\nimport { FormService } from './../../../services/form.service';\nimport { ContainerModel } from './container.model';\nimport { FormFieldTemplates } from './form-field-templates';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\nimport { FormOutcomeModel } from './form-outcome.model';\nimport { FormValues } from './form-values';\nimport { FormWidgetModel, FormWidgetModelCache } from './form-widget.model';\nimport { TabModel } from './tab.model';\n\nimport {\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator\n} from './form-field-validator';\nimport { FormBaseModel } from '../../form-base.model';\n\nexport class FormModel extends FormBaseModel {\n\n    readonly id: number;\n    readonly name: string;\n    readonly taskId: string;\n    readonly taskName: string = FormModel.UNSET_TASK_NAME;\n    processDefinitionId: string;\n    private _isValid: boolean = true;\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    customFieldTemplates: FormFieldTemplates = {};\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n    readonly selectedOutcome: string;\n\n    processVariables: any;\n\n    constructor(json?: any, formValues?: FormValues, readOnly: boolean = false, protected formService?: FormService) {\n        super();\n        this.readOnly = readOnly;\n\n        if (json) {\n            this.json = json;\n\n            this.id = json.id;\n            this.name = json.name;\n            this.taskId = json.taskId;\n            this.taskName = json.taskName || json.name || FormModel.UNSET_TASK_NAME;\n            this.processDefinitionId = json.processDefinitionId;\n            this.customFieldTemplates = json.customFieldTemplates || {};\n            this.selectedOutcome = json.selectedOutcome || {};\n            this.className = json.className || '';\n\n            const tabCache: FormWidgetModelCache<TabModel> = {};\n\n            this.processVariables = json.processVariables;\n\n            this.tabs = (json.tabs || []).map((t) => {\n                const model = new TabModel(this, t);\n                tabCache[model.id] = model;\n                return model;\n            });\n\n            this.fields = this.parseRootFields(json);\n\n            if (formValues) {\n                this.loadData(formValues);\n            }\n\n            for (let i = 0; i < this.fields.length; i++) {\n                const field = this.fields[i];\n                if (field.tab) {\n                    const tab = tabCache[field.tab];\n                    if (tab) {\n                        tab.fields.push(field);\n                    }\n                }\n            }\n\n            if (json.fields) {\n                const saveOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.SAVE_OUTCOME,\n                    name: 'SAVE',\n                    isSystem: true\n                });\n                const completeOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.COMPLETE_OUTCOME,\n                    name: 'COMPLETE',\n                    isSystem: true\n                });\n                const startProcessOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.START_PROCESS_OUTCOME,\n                    name: 'START PROCESS',\n                    isSystem: true\n                });\n\n                const customOutcomes = (json.outcomes || []).map((obj) => new FormOutcomeModel(this, obj));\n\n                this.outcomes = [saveOutcome].concat(\n                    customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]\n                );\n            }\n        }\n\n        this.validateForm();\n    }\n\n    onFormFieldChanged(field: FormFieldModel) {\n        this.validateField(field);\n        if (this.formService) {\n            this.formService.formFieldValueChanged.next(new FormFieldEvent(this, field));\n        }\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    /**\n     * Validates entire form and all form fields.\n     *\n     * @memberof FormModel\n     */\n    validateForm(): void {\n        const validateFormEvent: any = new ValidateFormEvent(this);\n\n        const errorsField: FormFieldModel[] = [];\n\n        const fields = this.getFormFields();\n        for (let i = 0; i < fields.length; i++) {\n            if (!fields[i].validate()) {\n                errorsField.push(fields[i]);\n            }\n        }\n\n        this._isValid = errorsField.length > 0 ? false : true;\n\n        if (this.formService) {\n            validateFormEvent.isValid = this._isValid;\n            validateFormEvent.errorsField = errorsField;\n            this.formService.validateForm.next(validateFormEvent);\n        }\n\n    }\n\n    /**\n     * Validates a specific form field, triggers form validation.\n     *\n     * @param field Form field to validate.\n     * @memberof FormModel\n     */\n    validateField(field: FormFieldModel): void {\n        if (!field) {\n            return;\n        }\n\n        const validateFieldEvent = new ValidateFormFieldEvent(this, field);\n\n        if (this.formService) {\n            this.formService.validateFormField.next(validateFieldEvent);\n        }\n\n        if (!validateFieldEvent.isValid) {\n            this._isValid = false;\n            return;\n        }\n\n        if (validateFieldEvent.defaultPrevented) {\n            return;\n        }\n\n        if (!field.validate()) {\n            this._isValid = false;\n        }\n\n        this.validateForm();\n    }\n\n    // Activiti supports 3 types of root fields: container|group|dynamic-table\n    private parseRootFields(json: any): FormWidgetModel[] {\n        let fields = [];\n\n        if (json.fields) {\n            fields = json.fields;\n        } else if (json.formDefinition && json.formDefinition.fields) {\n            fields = json.formDefinition.fields;\n        }\n\n        const formWidgetModel: FormWidgetModel[] = [];\n\n        for (const field of fields) {\n            if (field.type === FormFieldTypes.DISPLAY_VALUE) {\n                // workaround for dynamic table on a completed/readonly form\n                if (field.params) {\n                    const originalField = field.params['field'];\n                    if (originalField.type === FormFieldTypes.DYNAMIC_TABLE) {\n                        formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n                    }\n                }\n            } else {\n                formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n            }\n        }\n\n        return formWidgetModel;\n    }\n\n    // Loads external data and overrides field values\n    // Typically used when form definition and form data coming from different sources\n    private loadData(formValues: FormValues) {\n        for (const field of this.getFormFields()) {\n            if (formValues[field.id]) {\n                field.json.value = formValues[field.id];\n                field.value = field.parseValue(field.json);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormOutcomeModel } from './form-outcome.model';\n\nexport class FormOutcomeEvent {\n\n    private _outcome: FormOutcomeModel;\n    private _defaultPrevented: boolean = false;\n\n    get outcome(): FormOutcomeModel {\n        return this._outcome;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(outcome: FormOutcomeModel) {\n        this._outcome = outcome;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n import { RelatedContentRepresentation } from '@alfresco/js-api';\n\n export class ContentLinkModel implements RelatedContentRepresentation {\n\n    contentAvailable: boolean;\n    created: Date;\n    createdBy: any;\n    id: number;\n    link: boolean;\n    mimeType: string;\n    name: string;\n    previewStatus: string;\n    relatedContent: boolean;\n    simpleType: string;\n    thumbnailUrl: string;\n    contentRawUrl: string;\n    contentBlob: Blob;\n    thumbnailStatus: string;\n\n    constructor(obj?: any) {\n        this.contentAvailable = obj && obj.contentAvailable;\n        this.created = obj && obj.created;\n        this.createdBy = obj && obj.createdBy || {};\n        this.id = obj && obj.id;\n        this.link = obj && obj.link;\n        this.mimeType = obj && obj.mimeType;\n        this.name = obj && obj.name;\n        this.previewStatus = obj && obj.previewStatus;\n        this.relatedContent = obj && obj.relatedContent;\n        this.simpleType = obj && obj.simpleType;\n        this.thumbnailStatus = obj && obj.thumbnailStatus;\n    }\n\n    hasPreviewStatus(): boolean {\n        return this.previewStatus === 'supported' ? true : false;\n    }\n\n    isTypeImage(): boolean {\n        return this.simpleType === 'image' ? true : false;\n    }\n\n    isTypePdf(): boolean {\n        return this.simpleType === 'pdf' ? true : false;\n    }\n\n    isTypeDoc(): boolean {\n        return this.simpleType === 'word' || this.simpleType === 'content' ? true : false;\n    }\n\n    isThumbnailReady(): boolean {\n        return this.thumbnailStatus === 'created';\n    }\n\n    isThumbnailSupported(): boolean {\n        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmModelService {\n\n    public static MODEL_NAMESPACE: string = 'activitiForms';\n    public static MODEL_NAME: string = 'activitiFormsModel';\n    public static TYPE_MODEL: string = 'cm:folder';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchActivitiEcmModel().subscribe(\n                (model) => {\n                    if (!model) {\n                        this.createActivitiEcmModel(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    } else {\n                        this.saveFomType(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n\n    }\n\n    searchActivitiEcmModel() {\n        return this.getEcmModels().pipe(map(function (ecmModels: any) {\n            return ecmModels.list.entries.find((model) => model.entry.name === EcmModelService.MODEL_NAME);\n        }));\n    }\n\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmModel(EcmModelService.MODEL_NAME, EcmModelService.MODEL_NAMESPACE).subscribe(\n                (model) => {\n                    this.logService.info('model created', model);\n                    this.activeEcmModel(EcmModelService.MODEL_NAME).subscribe(\n                        (modelActive) => {\n                            this.logService.info('model active', modelActive);\n                            this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                                observer.next(typeCreated);\n                                observer.complete();\n                            });\n                        },\n                        (err) => this.handleError(err)\n                    );\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    saveFomType(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                (ecmType) => {\n                    this.logService.info('custom types', ecmType);\n                    if (!ecmType) {\n                        this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                            observer.next(typeCreated);\n                            observer.complete();\n                        });\n                    } else {\n                        observer.next(ecmType);\n                        observer.complete();\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    public createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmType(formName, EcmModelService.MODEL_NAME, EcmModelService.TYPE_MODEL).subscribe(\n                (typeCreated) => {\n                    this.logService.info('type Created', typeCreated);\n                    this.addPropertyToAType(EcmModelService.MODEL_NAME, formName, form).subscribe(\n                        (propertyAdded) => {\n                            this.logService.info('property Added', propertyAdded);\n                            observer.next(typeCreated);\n                            observer.complete();\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    public searchEcmType(typeName: string, modelName: string): Observable<any> {\n        return this.getEcmType(modelName).pipe(map(function (customTypes: any) {\n            return customTypes.list.entries.find((type) => type.entry.prefixedName === typeName || type.entry.title === typeName);\n        }));\n    }\n\n    public activeEcmModel(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmModel(modelName: string, nameSpace: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmModels(): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomModel())\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmType(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmType(typeName: string, modelName: string, parentType: string): Observable<any> {\n        const name = this.cleanNameType(typeName);\n\n        return from(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, ''))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public addPropertyToAType(modelName: string, typeName: string, formFields: any) {\n        const name = this.cleanNameType(typeName);\n\n        const properties = [];\n        if (formFields && formFields.values) {\n            for (const key in formFields.values) {\n                if (key) {\n                    properties.push({\n                        name: key,\n                        title: key,\n                        description: key,\n                        dataType: 'd:text',\n                        multiValued: false,\n                        mandatory: false,\n                        mandatoryEnforced: false\n                    });\n                }\n            }\n        }\n\n        return from(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n\n    }\n\n    cleanNameType(name: string): string {\n        let cleanName = name;\n        if (name.indexOf(':') !== -1) {\n            cleanName = name.split(':')[1];\n        }\n        return cleanName.replace(/[^a-zA-Z ]/g, '');\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    handleError(err: any): any {\n        this.logService.error(err);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { UserProcessModel } from '../../models';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, of, throwError } from 'rxjs';\nimport { FormDefinitionModel } from '../models/form-definition.model';\nimport { ContentLinkModel } from './../components/widgets/core/content-link.model';\nimport { GroupModel } from './../components/widgets/core/group.model';\nimport { FormModel, FormOutcomeEvent, FormOutcomeModel, FormValues } from './../components/widgets/core/index';\nimport {\n    FormErrorEvent, FormEvent, FormFieldEvent,\n    ValidateDynamicTableRowEvent, ValidateFormEvent, ValidateFormFieldEvent\n} from './../events/index';\nimport { EcmModelService } from './ecm-model.service';\nimport { map, catchError, switchMap, combineAll, defaultIfEmpty } from 'rxjs/operators';\nimport {\n    Activiti,\n    CompleteFormRepresentation,\n    SaveFormRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    formLoaded = new Subject<FormEvent>();\n    formDataRefreshed = new Subject<FormEvent>();\n    formFieldValueChanged = new Subject<FormFieldEvent>();\n    formEvents = new Subject<Event>();\n    taskCompleted = new Subject<FormEvent>();\n    taskCompletedError = new Subject<FormErrorEvent>();\n    taskSaved = new Subject<FormEvent>();\n    taskSavedError = new Subject<FormErrorEvent>();\n    formContentClicked = new Subject<ContentLinkModel>();\n\n    validateForm = new Subject<ValidateFormEvent>();\n    validateFormField = new Subject<ValidateFormFieldEvent>();\n    validateDynamicTableRow = new Subject<ValidateDynamicTableRowEvent>();\n\n    executeOutcome = new Subject<FormOutcomeEvent>();\n\n    constructor(private ecmModelService: EcmModelService,\n                private apiService: AlfrescoApiService,\n                protected logService: LogService) {\n    }\n\n    private get taskApi(): Activiti.TaskApi {\n        return this.apiService.getInstance().activiti.taskApi;\n    }\n\n    private get modelsApi(): Activiti.ModelsApi {\n        return this.apiService.getInstance().activiti.modelsApi;\n    }\n\n    private get editorApi(): Activiti.EditorApi {\n        return this.apiService.getInstance().activiti.editorApi;\n    }\n\n    private get processApi(): Activiti.ProcessApi {\n        return this.apiService.getInstance().activiti.processApi;\n    }\n\n    private get processInstanceVariablesApi(): Activiti.ProcessInstanceVariablesApi {\n        return this.apiService.getInstance().activiti.processInstanceVariablesApi;\n    }\n\n    private get usersWorkflowApi(): Activiti.UsersWorkflowApi {\n        return this.apiService.getInstance().activiti.usersWorkflowApi;\n    }\n\n    private get groupsApi(): Activiti.GroupsApi {\n        return this.apiService.getInstance().activiti.groupsApi;\n    }\n\n    /**\n     * Parses JSON data to create a corresponding Form model.\n     * @param json JSON to create the form\n     * @param data Values for the form fields\n     * @param readOnly Should the form fields be read-only?\n     * @returns Form model created from input data\n     */\n    parseForm(json: any, data?: FormValues, readOnly: boolean = false): FormModel {\n        if (json) {\n            const form = new FormModel(json, data, readOnly, this);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(form, {\n                        id: '$save',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Creates a Form with a field for each metadata property.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createFormFromANode(formName: string): Observable<any> {\n        return new Observable((observer) => {\n            this.createForm(formName).subscribe(\n                (form) => {\n                    this.ecmModelService.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                        (customType) => {\n                            const formDefinitionModel = new FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);\n                            from(\n                                this.editorApi.saveForm(form.id, formDefinitionModel)\n                            ).subscribe((formData) => {\n                                observer.next(formData);\n                                observer.complete();\n                            }, (err) => this.handleError(err));\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    /**\n     * Create a Form.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createForm(formName: string): Observable<any> {\n        const dataModel = {\n            name: formName,\n            description: '',\n            modelType: 2,\n            stencilSet: 0\n        };\n\n        return from(\n            this.modelsApi.createModel(dataModel)\n        );\n    }\n\n    /**\n     * Saves a form.\n     * @param formId ID of the form to save\n     * @param formModel Model data for the form\n     * @returns Data for the saved form\n     */\n    saveForm(formId: number, formModel: FormDefinitionModel): Observable<any> {\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Searches for a form by name.\n     * @param name The form name to search for\n     * @returns Form model(s) matching the search name\n     */\n    searchFrom(name: string): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(\n            this.modelsApi.getModels(opts)\n        )\n            .pipe(\n                map(function (forms: any) {\n                    return forms.data.find((formData) => formData.name === name);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the forms.\n     * @returns List of form models\n     */\n    getForms(): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions.\n     * @returns List of process definitions\n     */\n    getProcessDefinitions(): Observable<any> {\n        return from(this.processApi.getProcessDefinitions({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets instance variables for a process.\n     * @param processInstanceId ID of the target process\n     * @returns List of instance variable information\n     */\n    getProcessVariablesById(processInstanceId: string): Observable<any[]> {\n        return from(this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks.\n     * @returns List of tasks\n     */\n    getTasks(): Observable<any> {\n        return from(this.taskApi.listTasks({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task.\n     * @param taskId Task Id\n     * @returns Task info\n     */\n    getTask(taskId: string): Observable<any> {\n        return from(this.taskApi.getTask(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Saves a task form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @returns Null response when the operation is complete\n     */\n    saveTaskForm(taskId: string, formValues: FormValues): Observable<any> {\n        const saveFormRepresentation = <SaveFormRepresentation> { values: formValues };\n\n        return from(this.taskApi.saveTaskForm(taskId, saveFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Completes a Task Form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @param outcome Form Outcome\n     * @returns Null response when the operation is complete\n     */\n    completeTaskForm(taskId: string, formValues: FormValues, outcome?: string): Observable<any> {\n        const completeFormRepresentation: any = <CompleteFormRepresentation> { values: formValues };\n        if (outcome) {\n            completeFormRepresentation.outcome = outcome;\n        }\n\n        return from(this.taskApi.completeTaskForm(taskId, completeFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form related to a task.\n     * @param taskId ID of the target task\n     * @returns Form definition\n     */\n    getTaskForm(taskId: string): Observable<any> {\n        return from(this.taskApi.getTaskForm(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param formId ID of the target form\n     * @returns Form definition\n     */\n    getFormDefinitionById(formId: number): Observable<any> {\n        return from(this.editorApi.getForm(formId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the form definition with a given name.\n     * @param name The form name\n     * @returns Form definition\n     */\n    getFormDefinitionByName(name: string): Observable<any> {\n        const opts = {\n            'filter': 'myReusableForms',\n            'filterText': name,\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.getFormId),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form instance for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstanceStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a process instance.\n     * @param processId ID of the process to get\n     * @returns Process instance\n     */\n    getProcessInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstance(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form definition for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormDefinition(processId: string): Observable<any> {\n        return from(this.processApi.getProcessDefinitionStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValues(taskId: string, field: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValues(taskId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValuesByProcessId(processDefinitionId: string, field: string): Observable<any> {\n        return from(this.processApi.getRestFieldValues(processDefinitionId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumnByProcessId(processDefinitionId: string, field: string, column?: string): Observable<any> {\n        return from(this.processApi.getRestTableFieldValues(processDefinitionId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumn(taskId: string, field: string, column?: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValuesColumn(taskId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a URL for the profile picture of a user.\n     * @param userId ID of the target user\n     * @returns URL string\n     */\n    getUserProfileImageApi(userId: number): string {\n        return this.apiService.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Gets a list of workflow users.\n     * @param filter Filter to select specific users\n     * @param groupId Group ID for the search\n     * @returns Array of users\n     */\n    getWorkflowUsers(filter: string, groupId?: string): Observable<UserProcessModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.usersWorkflowApi.getUsers(option))\n            .pipe(\n                switchMap((response: any) => <UserProcessModel[]> response.data || []),\n                map((user: any) => {\n                    user.userImage = this.getUserProfileImageApi(user.id);\n                    return of(user);\n                }),\n                combineAll(),\n                defaultIfEmpty([]),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of groups in a workflow.\n     * @param filter Filter to select specific groups\n     * @param groupId Group ID for the search\n     * @returns Array of groups\n     */\n    getWorkflowGroups(filter: string, groupId?: string): Observable<GroupModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.groupsApi.getGroups(option))\n            .pipe(\n                map((response: any) => <GroupModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the ID of a form.\n     * @param form Object representing a form\n     * @returns ID string\n     */\n    getFormId(form: any): string {\n        let result = null;\n\n        if (form && form.data && form.data.length > 0) {\n            result = form.data[0].id;\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates a JSON representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Error message\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = FormService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : FormService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../services/form.service';\nimport { FormFieldModel } from './core/index';\n\nexport const baseHost = {\n    '(click)': 'event($event)',\n    '(blur)': 'event($event)',\n    '(change)': 'event($event)',\n    '(focus)': 'event($event)',\n    '(focusin)': 'event($event)',\n    '(focusout)': 'event($event)',\n    '(input)': 'event($event)',\n    '(invalid)': 'event($event)',\n    '(select)': 'event($event)'\n};\n\n/**\n * Base widget component.\n */\n@Component({\n    selector: 'base-widget',\n    template: '',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class WidgetComponent implements AfterViewInit {\n\n    static DEFAULT_HYPERLINK_URL: string = '#';\n    static DEFAULT_HYPERLINK_SCHEME: string = 'http://';\n\n    /** Does the widget show a read-only value? (ie, can't be edited) */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Data to be displayed in the field */\n    @Input()\n    field: FormFieldModel;\n\n    /**\n     * Emitted when a field value changes.\n     */\n    @Output()\n    fieldChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    constructor(public formService?: FormService) {\n    }\n\n    hasField() {\n        return this.field ? true : false;\n    }\n\n    // Note for developers:\n    // returns <any> object to be able binding it to the <element required=\"required\"> attribute\n    isRequired(): any {\n        if (this.field && this.field.required) {\n            return true;\n        }\n        return null;\n    }\n\n    isValid(): boolean {\n        return this.field.validationSummary ? true : false;\n    }\n\n    hasValue(): boolean {\n        return this.field &&\n            this.field.value !== null &&\n            this.field.value !== undefined;\n    }\n\n    isInvalidFieldRequired() {\n        return !this.field.isValid && !this.field.validationSummary && this.isRequired();\n    }\n\n    ngAfterViewInit() {\n        this.fieldChanged.emit(this.field);\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    onFieldChanged(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    protected getHyperlinkUrl(field: FormFieldModel) {\n        let url = WidgetComponent.DEFAULT_HYPERLINK_URL;\n        if (field && field.hyperlinkUrl) {\n            url = field.hyperlinkUrl;\n            if (!/^https?:\\/\\//i.test(url)) {\n                url = `${WidgetComponent.DEFAULT_HYPERLINK_SCHEME}${url}`;\n            }\n        }\n        return url;\n    }\n\n    protected getHyperlinkText(field: FormFieldModel) {\n        if (field) {\n            return field.displayText || field.hyperlinkUrl;\n        }\n        return null;\n    }\n\n    event(event: Event): void {\n        this.formService.formEvents.next(event);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ContainerColumnModel } from './../core/container-column.model';\nimport { ContainerModel } from './../core/container.model';\nimport { FormFieldTypes } from './../core/form-field-types';\nimport { FormFieldModel } from './../core/form-field.model';\n\nexport class ContainerWidgetComponentModel extends ContainerModel {\n\n    columns: ContainerColumnModel[] = [];\n    isExpanded: boolean = true;\n    rowspan: number = 1;\n    colspan: number = 1;\n\n    isGroup(): boolean {\n        return this.type === FormFieldTypes.GROUP;\n    }\n\n    isCollapsible(): boolean {\n        let allowCollapse = false;\n\n        if (this.isGroup() && this.field.params['allowCollapse']) {\n            allowCollapse = <boolean> this.field.params['allowCollapse'];\n        }\n\n        return allowCollapse;\n    }\n\n    isCollapsedByDefault(): boolean {\n        let collapseByDefault = false;\n\n        if (this.isCollapsible() && this.field.params['collapseByDefault']) {\n            collapseByDefault = <boolean> this.field.params['collapseByDefault'];\n        }\n\n        return collapseByDefault;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field);\n\n        if (this.field) {\n            this.columns = this.field.columns || [];\n            this.isExpanded = !this.isCollapsedByDefault();\n            this.colspan = field.colspan;\n            this.rowspan = field.rowspan;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { ContainerWidgetComponentModel } from './container.widget.model';\n\n@Component({\n    selector: 'container-widget',\n    templateUrl: './container.widget.html',\n    styleUrls: ['./container.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContainerWidgetComponent extends WidgetComponent implements OnInit, AfterViewInit {\n\n    content: ContainerWidgetComponentModel;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    onExpanderClicked() {\n        if (this.content && this.content.isCollapsible()) {\n            this.content.isExpanded = !this.content.isExpanded;\n        }\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new ContainerWidgetComponentModel(this.field);\n        }\n    }\n\n    /**\n     * Serializes column fields\n     */\n    get fields(): FormFieldModel[] {\n        const fields = [];\n\n        let rowContainsElement = true,\n            rowIndex = 0;\n\n        while (rowContainsElement) {\n            rowContainsElement = false;\n            for (let i = 0; i < this.content.columns.length; i++ ) {\n                const field = this.content.columns[i].fields[rowIndex];\n                if (field) {\n                    rowContainsElement = true;\n                }\n\n                fields.push(field);\n            }\n            rowIndex++;\n        }\n\n        return fields;\n    }\n\n    /**\n     * Calculate the column width based on the numberOfColumns and current field's colspan property\n     *\n     * @param field\n     */\n    getColumnWith(field: FormFieldModel): string {\n        const colspan = field ? field.colspan : 1;\n        return (100 / this.content.json.numberOfColumns) * colspan + '%';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentChecked, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormFieldModel, TabModel } from './../core/index';\n\n@Component({\n    selector: 'tabs-widget',\n    templateUrl: './tabs.widget.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsWidgetComponent implements AfterContentChecked {\n\n    @Input()\n    tabs: TabModel[] = [];\n\n    @Output()\n    formTabChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    visibleTabs: TabModel[] = [];\n\n    hasTabs() {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    ngAfterContentChecked() {\n        this.filterVisibleTabs();\n    }\n\n    filterVisibleTabs() {\n        this.visibleTabs = this.tabs.filter((tab) => {\n            return tab.isVisible;\n        });\n    }\n\n    tabChanged(field: FormFieldModel) {\n        this.formTabChanged.emit(field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'unknown-widget',\n    template: `\n            <mat-list class=\"adf-unknown-widget\">\n                <mat-list-item>\n                     <mat-icon class=\"mat-24\">error_outline</mat-icon>\n                     <span class=\"adf-unknown-text\">Unknown type: {{field.type}}</span>\n                </mat-list-item>\n            </mat-list>\n\n    `,\n    styleUrls: ['./unknown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UnknownWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'amount-widget',\n    templateUrl: './amount.widget.html',\n    styleUrls: ['./amount.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AmountWidgetComponent extends WidgetComponent implements OnInit {\n\n    static DEFAULT_CURRENCY: string = '$';\n\n    currency: string = AmountWidgetComponent.DEFAULT_CURRENCY;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.currency) {\n            this.currency = this.field.currency;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'checkbox-widget',\n    templateUrl: './checkbox.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date.widget.html',\n    styleUrls: ['./date.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'DD/MM/YYYY');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'DD/MM/YYYY');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'display-text-widget',\n    templateUrl: './display-text.widget.html',\n    styleUrls: ['./display-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DisplayTextWidgetComponentComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'adf-form-document-widget',\n    templateUrl: 'document.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentWidgetComponent extends WidgetComponent implements OnInit {\n\n    fileId: string = null;\n    hasFile: boolean = false;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const file = this.field.value;\n\n            if (file) {\n                this.fileId = file.id;\n                this.hasFile = true;\n            } else {\n                this.fileId = null;\n                this.hasFile = false;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'dropdown-widget',\n    templateUrl: './dropdown.widget.html',\n    styleUrls: ['./dropdown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getValuesByTaskId();\n            } else {\n                this.getValuesByProcessDefinitionId();\n            }\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string {\n        let optionValue: string = '';\n        if (option.id === 'empty' || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { Observable, from, throwError } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel } from '../models/widget-visibility.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetVisibilityService {\n\n    private processVarList: TaskProcessVariableModel[];\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public refreshVisibility(form: FormModel) {\n        if (form && form.tabs && form.tabs.length > 0) {\n            form.tabs.map((tabModel) => this.refreshEntityVisibility(tabModel));\n        }\n\n        if (form) {\n            form.getFormFields().map((field) => this.refreshEntityVisibility(field));\n        }\n    }\n\n    refreshEntityVisibility(element: FormFieldModel | TabModel) {\n        const visible = this.evaluateVisibility(element.form, element.visibilityCondition);\n        element.isVisible = visible;\n    }\n\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        const isLeftFieldPresent = visibilityObj && ( visibilityObj.leftFormFieldId || visibilityObj.leftRestResponseId );\n        if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {\n            return true;\n        } else {\n            return this.isFieldVisible(form, visibilityObj);\n        }\n    }\n\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        const leftValue = this.getLeftValue(form, visibilityObj);\n        const rightValue = this.getRightValue(form, visibilityObj);\n        const actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);\n        if (visibilityObj.nextCondition) {\n            return this.evaluateLogicalOperation(\n                visibilityObj.nextConditionOperator,\n                actualResult,\n                this.isFieldVisible(form, visibilityObj.nextCondition)\n            );\n        } else {\n            return actualResult;\n        }\n    }\n\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let leftValue = '';\n        if (visibilityObj.leftRestResponseId && visibilityObj.leftRestResponseId !== 'null') {\n            leftValue = this.getVariableValue(form, visibilityObj.leftRestResponseId, this.processVarList);\n        } else if (visibilityObj.leftFormFieldId) {\n            leftValue = this.getFormValue(form, visibilityObj.leftFormFieldId);\n            leftValue = leftValue ? leftValue : this.getVariableValue(form, visibilityObj.leftFormFieldId, this.processVarList);\n        }\n        return leftValue;\n    }\n\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let valueFound = '';\n        if (visibilityObj.rightRestResponseId) {\n            valueFound = this.getVariableValue(form, visibilityObj.rightRestResponseId, this.processVarList);\n        } else if (visibilityObj.rightFormFieldId) {\n            valueFound = this.getFormValue(form, visibilityObj.rightFormFieldId);\n        } else {\n            if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {\n                valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';\n            } else {\n                valueFound = visibilityObj.rightValue;\n            }\n        }\n        return valueFound;\n    }\n\n    getFormValue(form: FormModel, fieldId: string) {\n        let value = this.getFieldValue(form.values, fieldId);\n\n        if (!value) {\n            value = this.searchValueInForm(form, fieldId);\n        }\n\n        return value;\n    }\n\n    getFieldValue(valueList: any, fieldId: string) {\n        let dropDownFilterByName, valueFound;\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            dropDownFilterByName = fieldId.substring(0, fieldId.length - 6);\n            if (valueList[dropDownFilterByName]) {\n                valueFound = valueList[dropDownFilterByName].name;\n            }\n        } else if (valueList[fieldId] && valueList[fieldId].id) {\n            valueFound = valueList[fieldId].id;\n        } else {\n            valueFound = valueList[fieldId];\n        }\n        return valueFound;\n    }\n\n    searchValueInForm(form: FormModel, fieldId: string) {\n        let fieldValue = '';\n        form.getFormFields().forEach((formField: FormFieldModel) => {\n            if (this.isSearchedField(formField, fieldId)) {\n                fieldValue = this.getObjectValue(formField, fieldId);\n                if (!fieldValue) {\n                    if (formField.value && formField.value.id) {\n                        fieldValue = formField.value.id;\n                    } else {\n                        fieldValue = formField.value;\n                    }\n                }\n            }\n        });\n\n        return fieldValue;\n    }\n\n    private getObjectValue(field: FormFieldModel, fieldId: string) {\n        let value = '';\n        if (field.value && field.value.name) {\n            value = field.value.name;\n        } else if (field.options) {\n            const option = field.options.find((opt) => opt.id === field.value);\n            if (option) {\n                value = this.getValueFromOption(fieldId, option);\n            }\n        }\n        return value;\n    }\n\n    private getValueFromOption(fieldId: string, option): string {\n        let optionValue = '';\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            optionValue = option.name;\n        } else {\n            optionValue = option.id;\n        }\n        return optionValue;\n    }\n\n    private isSearchedField(field: FormFieldModel, fieldToFind: string): boolean {\n        const formattedFieldName = this.removeLabel(field, fieldToFind);\n        return field.id ? field.id.toUpperCase() === formattedFieldName.toUpperCase() : false;\n    }\n\n    private removeLabel(field: FormFieldModel, fieldToFind): string {\n        let formattedFieldName = fieldToFind || '';\n        if (field.fieldType === 'RestFieldRepresentation' && fieldToFind.indexOf('_LABEL') > 0) {\n            formattedFieldName = fieldToFind.substring(0, fieldToFind.length - 6);\n        }\n        return formattedFieldName;\n    }\n\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]) {\n        return this.getFormVariableValue(form, name) ||\n            this.getProcessVariableValue(name, processVarList);\n    }\n\n    private getFormVariableValue(form: FormModel, name: string) {\n        if (form.json.variables) {\n            const formVariable = form.json.variables.find((formVar) => formVar.name === name);\n            return formVariable ? formVariable.value : formVariable;\n        }\n    }\n\n    private getProcessVariableValue(name: string, processVarList: TaskProcessVariableModel[]) {\n        if (this.processVarList) {\n            const processVariable = this.processVarList.find((variable) => variable.id === name);\n            return processVariable ? processVariable.value : processVariable;\n        }\n    }\n\n    evaluateLogicalOperation(logicOp, previousValue, newValue): boolean {\n        switch (logicOp) {\n            case 'and':\n                return previousValue && newValue;\n            case 'or' :\n                return previousValue || newValue;\n            case 'and-not':\n                return previousValue && !newValue;\n            case 'or-not':\n                return previousValue || !newValue;\n            default:\n                this.logService.error('NO valid operation! wrong op request : ' + logicOp);\n                break;\n        }\n    }\n\n    evaluateCondition(leftValue, rightValue, operator): boolean {\n        switch (operator) {\n            case '==':\n                return leftValue + '' === rightValue + '';\n            case '<':\n                return leftValue < rightValue;\n            case '!=':\n                return leftValue + '' !== rightValue + '';\n            case '>':\n                return leftValue > rightValue;\n            case '>=':\n                return leftValue >= rightValue;\n            case '<=':\n                return leftValue <= rightValue;\n            case 'empty':\n                return leftValue ? leftValue === '' : true;\n            case '!empty':\n                return leftValue ? leftValue !== '' : false;\n            default:\n                this.logService.error('NO valid operation!');\n                break;\n        }\n        return;\n    }\n\n    cleanProcessVariable() {\n        this.processVarList = [];\n    }\n\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]> {\n        return from(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId))\n            .pipe(\n                map((res) => {\n                    const jsonRes = this.toJson(res);\n                    this.processVarList = <TaskProcessVariableModel[]> jsonRes;\n                    return jsonRes;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    toJson(res: any) {\n        return res || {};\n    }\n\n    private handleError(err) {\n        this.logService.error('Error while performing a call');\n        return throwError('Error while performing a call - Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicRowValidationSummary } from '../components/widgets/dynamic-table/dynamic-row-validation-summary.model';\nimport { DynamicTableRow } from '../components/widgets/dynamic-table/dynamic-table-row.model';\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateDynamicTableRowEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel,\n                field: FormFieldModel,\n                public row: DynamicTableRow,\n                public summary: DynamicRowValidationSummary) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class DateCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Date'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            const dateValue = moment(value, 'D-M-YYYY');\n            if (!dateValue.isValid()) {\n                if (summary) {\n                    summary.isValid = false;\n                    summary.message = `Invalid '${column.name}' format.`;\n                }\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ErrorMessageModel } from '../core/index';\n\nexport class DynamicRowValidationSummary extends ErrorMessageModel {\n\n    isValid: boolean;\n\n    constructor(json?: any) {\n        super(json);\n        this.isValid = json.isValid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class NumberCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Number',\n        'Amount'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (value === null ||\n                value === undefined ||\n                value === '' ||\n                this.isNumber(value)) {\n                return true;\n            }\n\n            if (summary) {\n                summary.isValid = false;\n                summary.message = `Field '${column.name}' must be a number.`;\n            }\n            return false;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class RequiredCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'String',\n        'Number',\n        'Amount',\n        'Date',\n        'Dropdown'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (column.required) {\n                if (value === null || value === undefined || value === '') {\n                    if (summary) {\n                        summary.isValid = false;\n                        summary.message = `Field '${column.name}' is required.`;\n                    }\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { ValidateDynamicTableRowEvent } from '../../../events/validate-dynamic-table-row.event';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { FormWidgetModel } from './../core/form-widget.model';\nimport { CellValidator } from './cell-validator.model';\nimport { DateCellValidator } from './date-cell-validator-model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { NumberCellValidator } from './number-cell-validator.model';\nimport { RequiredCellValidator } from './required-cell-validator.model';\n\nexport class DynamicTableModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n    columns: DynamicTableColumn[] = [];\n    visibleColumns: DynamicTableColumn[] = [];\n    rows: DynamicTableRow[] = [];\n\n    private _selectedRow: DynamicTableRow;\n    private _validators: CellValidator[] = [];\n\n    get selectedRow(): DynamicTableRow {\n        return this._selectedRow;\n    }\n\n    set selectedRow(value: DynamicTableRow) {\n        if (this._selectedRow && this._selectedRow === value) {\n            this._selectedRow.selected = false;\n            this._selectedRow = null;\n            return;\n        }\n\n        this.rows.forEach((row) => row.selected = false);\n\n        this._selectedRow = value;\n\n        if (value) {\n            this._selectedRow.selected = true;\n        }\n    }\n\n    constructor(field: FormFieldModel, private formService: FormService) {\n        super(field.form, field.json);\n        this.field = field;\n\n        if (field.json) {\n            const columns = this.getColumns(field);\n            if (columns) {\n                this.columns = columns;\n                this.visibleColumns = this.columns.filter((col) => col.visible);\n            }\n\n            if (field.json.value) {\n                this.rows = field.json.value.map((obj) => <DynamicTableRow> {selected: false, value: obj});\n            }\n        }\n\n        this._validators = [\n            new RequiredCellValidator(),\n            new DateCellValidator(),\n            new NumberCellValidator()\n        ];\n    }\n\n    private getColumns(field: FormFieldModel): DynamicTableColumn[] {\n        if (field && field.json) {\n            let definitions = field.json.columnDefinitions;\n            if (!definitions && field.json.params && field.json.params.field) {\n                definitions = field.json.params.field.columnDefinitions;\n            }\n\n            if (definitions) {\n                return definitions.map((obj) => <DynamicTableColumn> obj);\n            }\n        }\n        return null;\n    }\n\n    flushValue() {\n        if (this.field) {\n            this.field.value = this.rows.map((r) => r.value);\n            this.field.updateForm();\n        }\n    }\n\n    moveRow(row: DynamicTableRow, offset: number) {\n        const oldIndex = this.rows.indexOf(row);\n        if (oldIndex > -1) {\n            let newIndex = (oldIndex + offset);\n\n            if (newIndex < 0) {\n                newIndex = 0;\n            } else if (newIndex >= this.rows.length) {\n                newIndex = this.rows.length;\n            }\n\n            const arr = this.rows.slice();\n            arr.splice(oldIndex, 1);\n            arr.splice(newIndex, 0, row);\n            this.rows = arr;\n\n            this.flushValue();\n        }\n    }\n\n    deleteRow(row: DynamicTableRow) {\n        if (row) {\n            if (this.selectedRow === row) {\n                this.selectedRow = null;\n            }\n            const idx = this.rows.indexOf(row);\n            if (idx > -1) {\n                this.rows.splice(idx, 1);\n                this.flushValue();\n            }\n        }\n    }\n\n    addRow(row: DynamicTableRow) {\n        if (row) {\n            this.rows.push(row);\n            // this.selectedRow = row;\n        }\n    }\n\n    validateRow(row: DynamicTableRow): DynamicRowValidationSummary {\n        const summary = new DynamicRowValidationSummary( {\n            isValid: true,\n            message: null\n        });\n\n        const event = new ValidateDynamicTableRowEvent(this.form, this.field, row, summary);\n        this.formService.validateDynamicTableRow.next(event);\n\n        if (event.defaultPrevented || !summary.isValid) {\n            return summary;\n        }\n\n        if (row) {\n            for (const col of this.columns) {\n                for (const validator of this._validators) {\n                    if (!validator.validate(row, col, summary)) {\n                        return summary;\n                    }\n                }\n            }\n        }\n\n        return summary;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        const rowValue = row.value[column.id];\n\n        if (column.type === 'Dropdown') {\n            if (rowValue) {\n                return rowValue.name;\n            }\n        }\n\n        if (column.type === 'Boolean') {\n            return rowValue ? true : false;\n        }\n\n        if (column.type === 'Date') {\n            if (rowValue) {\n                return moment(rowValue.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');\n            }\n        }\n\n        return rowValue || '';\n    }\n\n    getDisplayText(column: DynamicTableColumn): string {\n        let columnName = column.name;\n        if (column.type === 'Amount') {\n            const currency = column.amountCurrency || '$';\n            columnName = `${column.name} (${currency})`;\n        }\n        return columnName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetVisibilityService } from '../../../services/widget-visibility.service';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { DynamicTableModel } from './dynamic-table.widget.model';\n\n@Component({\n    selector: 'dynamic-table-widget',\n    templateUrl: './dynamic-table.widget.html',\n    styleUrls: ['./dynamic-table.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DynamicTableWidgetComponent extends WidgetComponent implements OnInit {\n\n    ERROR_MODEL_NOT_FOUND = 'Table model not found';\n\n    content: DynamicTableModel;\n\n    editMode: boolean = false;\n    editRow: DynamicTableRow = null;\n\n    private selectArrayCode = [32, 0, 13];\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef,\n                private visibilityService: WidgetVisibilityService,\n                private logService: LogService,\n                private cd: ChangeDetectorRef) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new DynamicTableModel(this.field, this.formService);\n            this.visibilityService.refreshVisibility(this.field.form);\n        }\n    }\n\n    forceFocusOnAddButton() {\n        if (this.content) {\n            this.cd.detectChanges();\n            const buttonAddRow = <HTMLButtonElement> this.elementRef.nativeElement.querySelector('#' + this.content.id + '-add-row');\n            if (this.isDynamicTableReady(buttonAddRow)) {\n                buttonAddRow.focus();\n            }\n        }\n    }\n\n    private isDynamicTableReady(buttonAddRow) {\n        return this.field && !this.editMode && buttonAddRow;\n    }\n\n    isValid() {\n        let valid = true;\n\n        if (this.content && this.content.field) {\n            valid = this.content.field.isValid;\n        }\n\n        return valid;\n    }\n\n    onRowClicked(row: DynamicTableRow) {\n        if (this.content) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    onKeyPressed($event: KeyboardEvent, row: DynamicTableRow) {\n        if (this.content && this.isEnterOrSpacePressed($event.keyCode)) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    private isEnterOrSpacePressed(keyCode) {\n        return this.selectArrayCode.indexOf(keyCode) !== -1;\n    }\n\n    hasSelection(): boolean {\n        return !!(this.content && this.content.selectedRow);\n    }\n\n    moveSelectionUp(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, -1);\n            return true;\n        }\n        return false;\n    }\n\n    moveSelectionDown(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, 1);\n            return true;\n        }\n        return false;\n    }\n\n    deleteSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.deleteRow(this.content.selectedRow);\n            return true;\n        }\n        return false;\n    }\n\n    addNewRow(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = <DynamicTableRow> {\n                isNew: true,\n                selected: false,\n                value: {}\n            };\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    editSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = this.copyRow(this.content.selectedRow);\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        if (this.content) {\n            const cellValue = this.content.getCellValue(row, column);\n            if (column.type === 'Amount') {\n                return (column.amountCurrency || '$') + ' ' + (cellValue || 0);\n            }\n            return cellValue;\n        }\n        return null;\n    }\n\n    onSaveChanges() {\n        if (this.content) {\n            if (this.editRow.isNew) {\n                const row = this.copyRow(this.editRow);\n                this.content.selectedRow = null;\n                this.content.addRow(row);\n                this.editRow.isNew = false;\n            } else {\n                this.content.selectedRow.value = this.copyObject(this.editRow.value);\n            }\n            this.content.flushValue();\n        } else {\n            this.logService.error(this.ERROR_MODEL_NOT_FOUND);\n        }\n        this.editMode = false;\n        this.forceFocusOnAddButton();\n    }\n\n    onCancelChanges() {\n        this.editMode = false;\n        this.editRow = null;\n        this.forceFocusOnAddButton();\n    }\n\n    copyRow(row: DynamicTableRow): DynamicTableRow {\n        return <DynamicTableRow> {\n            value: this.copyObject(row.value)\n        };\n    }\n\n    private copyObject(obj: any): any {\n        let result = obj;\n\n        if (typeof obj === 'object' && obj !== null && obj !== undefined) {\n            result = Object.assign({}, obj);\n            Object.keys(obj).forEach((key) => {\n                if (typeof obj[key] === 'object') {\n                    result[key] = this.copyObject(obj[key]);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-boolean-editor',\n    templateUrl: './boolean.editor.html',\n    styleUrls: ['./boolean.editor.scss']\n})\nexport class BooleanEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: boolean = (<HTMLInputElement> event).checked;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-date-editor',\n    templateUrl: './date.editor.html',\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    styleUrls: ['./date.editor.scss']\n})\nexport class DateEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'DD-MM-YYYY';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), 'YYYY-MM-DD');\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const momentDate = moment(newDateValue.value, this.DATE_FORMAT, true);\n\n            if (!momentDate.isValid()) {\n                this.row.value[this.column.id] = '';\n            } else {\n                this.row.value[this.column.id] = `${momentDate.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                this.table.flushValue();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\n\n@Component({\n    selector: 'adf-datetime-editor',\n    templateUrl: './datetime.editor.html',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    styleUrls: ['./datetime.editor.scss']\n})\nexport class DateTimeEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'D-M-YYYY hh:mm A';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_FORMAT);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const newValue = moment(newDateValue.value, this.DATE_FORMAT);\n            this.row.value[this.column.id] = newDateValue.value.format(this.DATE_FORMAT);\n            this.value = newValue;\n            this.table.flushValue();\n        } else if (newDateValue) {\n            const newValue = moment(newDateValue, this.DATE_FORMAT);\n            this.value = newValue;\n            this.row.value[this.column.id] = newDateValue;\n            this.table.flushValue();\n        } else {\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../../../services/log.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormService } from './../../../../../services/form.service';\nimport { DynamicTableColumnOption } from './../../dynamic-table-column-option.model';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-dropdown-editor',\n    templateUrl: './dropdown.editor.html',\n    styleUrls: ['./dropdown.editor.scss']\n})\nexport class DropdownEditorComponent implements OnInit {\n\n    value: any = null;\n    options: DynamicTableColumnOption[] = [];\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        const field = this.table.field;\n        if (field) {\n            if (this.column.optionType === 'rest') {\n                if (this.table.form && this.table.form.taskId) {\n                    this.getValuesByTaskId(field);\n                } else {\n                    this.getValuesByProcessDefinitionId(field);\n                }\n            } else {\n                this.options = this.column.options || [];\n                this.value = this.table.getCellValue(this.row, this.column);\n            }\n        }\n    }\n\n    getValuesByTaskId(field) {\n        this.formService\n            .getRestFieldValuesColumn(\n                field.form.taskId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId(field) {\n        this.formService\n            .getRestFieldValuesColumnByProcessId(\n                field.form.processDefinitionId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event).value;\n        value = column.options.find((opt) => opt.name === value);\n        row.value[column.id] = value;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './../dynamic-table-column.model';\nimport { DynamicTableRow } from './../dynamic-table-row.model';\nimport { DynamicTableModel } from './../dynamic-table.widget.model';\n\n@Component({\n    selector: 'row-editor',\n    templateUrl: './row.editor.html',\n    styleUrls: ['./row.editor.css']\n})\nexport class RowEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    @Output()\n    save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n\n    validationSummary: DynamicRowValidationSummary;\n\n    constructor() {\n        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });\n    }\n\n    onCancelChanges() {\n        this.cancel.emit({\n            table: this.table,\n            row: this.row,\n            column: this.column\n        });\n    }\n\n    onSaveChanges() {\n        this.validate();\n        if (this.isValid()) {\n            this.save.emit({\n                table: this.table,\n                row: this.row,\n                column: this.column\n            });\n        }\n    }\n\n    private isValid(): boolean {\n        return this.validationSummary && this.validationSummary.isValid;\n    }\n\n    private validate() {\n        this.validationSummary = this.table.validateRow(this.row);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-text-editor',\n    templateUrl: './text.editor.html',\n    styleUrls: ['./text.editor.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    displayName: string;\n\n    ngOnInit() {\n        this.displayName = this.table.getDisplayText(this.column);\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: any = (<HTMLInputElement> event.target).value;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ErrorMessageModel } from '../core/index';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'error-widget',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n            transition('void => enter', [\n                style({opacity: 0, transform: 'translateY(-100%)'}),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ErrorWidgetComponent extends WidgetComponent implements OnChanges {\n\n    @Input()\n    error: ErrorMessageModel;\n\n    @Input()\n    required: string;\n\n    translateParameters: any = null;\n\n    _subscriptAnimationState: string = '';\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['required']) {\n            this.required = changes.required.currentValue;\n            this._subscriptAnimationState = 'enter';\n        }\n        if (changes['error'] && changes['error'].currentValue) {\n            if (changes.error.currentValue.isActive()) {\n                this.error = changes.error.currentValue;\n                this.translateParameters = this.error.getAttributesAsJsonObj();\n                this._subscriptAnimationState = 'enter';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from './../core/group.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'functional-group-widget',\n    templateUrl: './functional-group.widget.html',\n    styleUrls: ['./functional-group.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunctionalGroupWidgetComponent extends WidgetComponent implements OnInit {\n\n    value: string;\n    oldValue: string;\n    groups: GroupModel[] = [];\n    minTermLength: number = 1;\n    groupId: string;\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const group = this.field.value;\n            if (group) {\n                this.value = group.name;\n            }\n\n            const params = this.field.params;\n            if (params && params['restrictWithGroup']) {\n                const restrictWithGroup = <GroupModel> params['restrictWithGroup'];\n                this.groupId = restrictWithGroup.id;\n            }\n\n            // Load auto-completion for previously saved value\n            if (this.value) {\n                this.formService\n                    .getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((groupModel: GroupModel[]) => this.groups = groupModel || []);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.length >= this.minTermLength  && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                this.oldValue = this.value;\n                this.formService.getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((group: GroupModel[]) => {\n                        this.groups = group || [];\n                    });\n            }\n        }\n    }\n\n    flushValue() {\n        const option = this.groups.find((item) => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());\n\n        if (option) {\n            this.field.value = option;\n            this.value = option.name;\n        } else {\n            this.field.value = null;\n            this.value = null;\n        }\n\n        this.field.updateForm();\n    }\n\n    onItemClick(item: GroupModel, event: Event) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    onItemSelect(item: GroupModel) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'hyperlink-widget',\n    templateUrl: './hyperlink.widget.html',\n    styleUrls: ['./hyperlink.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HyperlinkWidgetComponent extends WidgetComponent implements OnInit {\n\n    linkUrl: string = WidgetComponent.DEFAULT_HYPERLINK_URL;\n    linkText: string = null;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.linkUrl = this.getHyperlinkUrl(this.field);\n            this.linkText = this.getHyperlinkText(this.field);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'multiline-text-widget',\n    templateUrl: './multiline-text.widget.html',\n    styleUrls: ['./multiline-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultilineTextWidgetComponentComponent extends WidgetComponent  {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename   */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'number-widget',\n    templateUrl: './number.widget.html',\n    styleUrls: ['./number.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about users across all tasks.\n     * @param taskId ID of the task\n     * @param searchWord Filter text to search for\n     * @returns Array of user information objects\n     */\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        const option = { excludeTaskId: taskId, filter: searchWord };\n        return from(this.getWorkflowUserApi(option))\n            .pipe(\n                map((response: any) => <UserProcessModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the profile picture URL for the specified user.\n     * @param user The target user\n     * @returns Profile picture URL\n     */\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    /**\n     * Sets a user to be involved with a task.\n     * @param taskId ID of the target task\n     * @param idToInvolve ID of the user to involve\n     * @returns Empty response when the update completes\n     */\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToInvolve};\n        return from(this.involveUserToTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Removes a user who is currently involved with a task.\n     * @param taskId ID of the target task\n     * @param idToRemove ID of the user to remove\n     * @returns Empty response when the update completes\n     */\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToRemove};\n        return from(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { PeopleProcessService } from '../../../../services/people-process.service';\nimport { UserProcessModel } from '../../../../models';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from '../core/group.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport {\n    catchError,\n    distinctUntilChanged,\n    map,\n    switchMap,\n    tap\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'people-widget',\n    templateUrl: './people.widget.html',\n    styleUrls: ['./people.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleWidgetComponent extends WidgetComponent implements OnInit {\n\n    @ViewChild('inputValue')\n    input: ElementRef;\n\n    @Output()\n    peopleSelected: EventEmitter<number>;\n\n    groupId: string;\n    value: any;\n\n    searchTerm = new FormControl();\n    errorMsg = '';\n    searchTerms$: Observable<any> = this.searchTerm.valueChanges;\n\n    users$ = this.searchTerms$.pipe(\n        tap(() => {\n            this.errorMsg = '';\n        }),\n        distinctUntilChanged(),\n        switchMap((searchTerm) => {\n            const value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;\n            return this.formService.getWorkflowUsers(value, this.groupId)\n                .pipe(\n                    catchError((err) => {\n                        this.errorMsg = err.message;\n                        return of();\n                    })\n                );\n        }),\n        map((list: UserProcessModel[]) => {\n            const value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;\n            this.checkUserAndValidateForm(list, value);\n            return list;\n        })\n    );\n\n    constructor(public formService: FormService, public peopleProcessService: PeopleProcessService) {\n        super(formService);\n        this.peopleSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            if (this.field.value) {\n                this.searchTerm.setValue(this.field.value);\n            }\n            if (this.field.readOnly) {\n                this.searchTerm.disable();\n            }\n            const params = this.field.params;\n            if (params && params.restrictWithGroup) {\n                const restrictWithGroup = <GroupModel> params.restrictWithGroup;\n                this.groupId = restrictWithGroup.id;\n            }\n        }\n    }\n\n    checkUserAndValidateForm(list, value) {\n        const isValidUser = this.isValidUser(list, value);\n        if (isValidUser || value === '') {\n            this.field.validationSummary.message = '';\n            this.field.validate();\n            this.field.form.validateForm();\n        } else {\n            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            this.field.markAsInvalid();\n            this.field.form.markAsInvalid();\n        }\n    }\n\n    isValidUser(users: UserProcessModel[], name: string) {\n        if (users) {\n            return users.find((user) => {\n                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();\n                if (selectedUser) {\n                    this.peopleSelected.emit(user && user.id || undefined);\n                }\n                return selectedUser;\n            });\n        }\n    }\n\n    getDisplayName(model: UserProcessModel) {\n        if (model) {\n            const displayName = `${model.firstName || ''} ${model.lastName || ''}`;\n            return displayName.trim();\n        }\n        return '';\n    }\n\n    onItemSelect(item: UserProcessModel) {\n        if (item) {\n            this.field.value = item;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'radio-buttons-widget',\n    templateUrl: './radio-buttons.widget.html',\n    styleUrls: ['./radio-buttons.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getOptionsByTaskId();\n            } else {\n                this.getOptionsByProcessDefinitionId();\n            }\n        }\n    }\n\n    getOptionsByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionsByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable: component-selector no-use-before-declare no-input-rename  */\n\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    OnChanges,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputMaskDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-text-mask], [textMask]',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class InputMaskDirective implements OnChanges, ControlValueAccessor {\n\n    /** Object defining mask and \"reversed\" status. */\n    @Input('textMask') inputMask: {\n        mask: '',\n        isReversed: false\n    };\n\n    private translationMask = {\n        '0': { pattern: /\\d/ },\n        '9': { pattern: /\\d/, optional: true },\n        '#': { pattern: /\\d/, recursive: true },\n        'A': { pattern: /[a-zA-Z0-9]/ },\n        'S': { pattern: /[a-zA-Z]/ }\n    };\n\n    private byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];\n    private value;\n    private invalidCharacters = [];\n\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n\n    _onChange = (_: any) => {\n    }\n\n    _onTouched = () => {\n    }\n\n    @HostListener('input', ['$event'])\n    @HostListener('keyup', ['$event']) onTextInput(event: KeyboardEvent) {\n        if (this.inputMask && this.inputMask.mask) {\n            this.maskValue(this.el.nativeElement.value, this.el.nativeElement.selectionStart,\n                this.inputMask.mask, this.inputMask.isReversed, event.keyCode);\n        } else {\n            this._onChange(this.el.nativeElement.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['inputMask'] && changes['inputMask'].currentValue['mask']) {\n            this.inputMask = changes['inputMask'].currentValue;\n        }\n    }\n\n    writeValue(value: any) {\n        this.el.nativeElement.value = value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private maskValue(actualValue, startCaret, maskToApply, isMaskReversed, keyCode) {\n        if (this.byPassKeys.indexOf(keyCode) === -1) {\n            const value = this.getMasked(false, actualValue, maskToApply, isMaskReversed);\n            const calculatedCaret = this.calculateCaretPosition(startCaret, actualValue, keyCode);\n            this.render.setAttribute(this.el.nativeElement, 'value', value);\n            this.el.nativeElement.value = value;\n            this.setValue(value);\n            this._onChange(value);\n            this.setCaretPosition(calculatedCaret);\n        }\n    }\n\n    private setCaretPosition(caretPosition) {\n        this.el.nativeElement.moveStart = caretPosition;\n        this.el.nativeElement.moveEnd = caretPosition;\n    }\n\n    calculateCaretPosition(caretPosition, newValue, keyCode) {\n        const newValueLength = newValue.length;\n        const oldValue = this.getValue() || '';\n        const oldValueLength = oldValue.length;\n\n        if (keyCode === 8 && oldValue !== newValue) {\n            caretPosition = caretPosition - (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n        } else if (oldValue !== newValue) {\n            if (caretPosition >= oldValueLength) {\n                caretPosition = newValueLength;\n            } else {\n                caretPosition = caretPosition + (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n            }\n        }\n        return caretPosition;\n    }\n\n    getMasked(skipMaskChars, val, mask, isReversed = false) {\n        const buf = [];\n        const value = val;\n        let maskIndex = 0;\n        const maskLen = mask.length;\n        let valueIndex = 0;\n        const valueLength = value.length;\n        let offset = 1;\n        let addMethod = 'push';\n        let resetPos = -1;\n        let lastMaskChar;\n        let lastUntranslatedMaskChar;\n        let check;\n\n        if (isReversed) {\n            addMethod = 'unshift';\n            offset = -1;\n            lastMaskChar = 0;\n            maskIndex = maskLen - 1;\n            valueIndex = valueLength - 1;\n        } else {\n            lastMaskChar = maskLen - 1;\n        }\n        check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        while (check) {\n            const maskDigit = mask.charAt(maskIndex),\n                valDigit = value.charAt(valueIndex),\n                translation = this.translationMask[maskDigit];\n\n            if (translation) {\n                if (valDigit.match(translation.pattern)) {\n                    buf[addMethod](valDigit);\n                    if (translation.recursive) {\n                        if (resetPos === -1) {\n                            resetPos = maskIndex;\n                        } else if (maskIndex === lastMaskChar) {\n                            maskIndex = resetPos - offset;\n                        }\n                        if (lastMaskChar === resetPos) {\n                            maskIndex -= offset;\n                        }\n                    }\n                    maskIndex += offset;\n                } else if (valDigit === lastUntranslatedMaskChar) {\n                    lastUntranslatedMaskChar = undefined;\n                } else if (translation.optional) {\n                    maskIndex += offset;\n                    valueIndex -= offset;\n                } else {\n                    this.invalidCharacters.push({\n                        index: valueIndex,\n                        digit: valDigit,\n                        translated: translation.pattern\n                    });\n                }\n                valueIndex += offset;\n            } else {\n                if (!skipMaskChars) {\n                    buf[addMethod](maskDigit);\n                }\n                if (valDigit === maskDigit) {\n                    valueIndex += offset;\n                } else {\n                    lastUntranslatedMaskChar = maskDigit;\n                }\n                maskIndex += offset;\n            }\n            check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        }\n\n        const lastMaskCharDigit = mask.charAt(lastMaskChar);\n        if (maskLen === valueLength + 1 && !this.translationMask[lastMaskCharDigit]) {\n            buf.push(lastMaskCharDigit);\n        }\n\n        return buf.join('');\n    }\n\n    private isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength) {\n        let check = false;\n        if (isReversed) {\n            check = (maskIndex > -1) && (valueIndex > -1);\n        } else {\n            check = (maskIndex < maskLen) && (valueIndex < valueLength);\n        }\n        return check;\n    }\n\n    private setValue(value) {\n        this.value = value;\n    }\n\n    private getValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'text-widget',\n    templateUrl: './text.widget.html',\n    styleUrls: ['./text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TextWidgetComponent extends WidgetComponent implements OnInit {\n\n    mask: string;\n    placeholder: string;\n    isMaskReversed: boolean;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.params) {\n            this.mask = this.field.params['inputMask'];\n            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;\n            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'typeahead-widget',\n    templateUrl: './typeahead.widget.html',\n    styleUrls: ['./typeahead.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeaheadWidgetComponent extends WidgetComponent implements OnInit {\n\n    minTermLength: number = 1;\n    value: string;\n    oldValue: string;\n    options: FormFieldOption[] = [];\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.form.taskId && this.field.restUrl) {\n            this.getValuesByTaskId();\n        } else if (this.field.form.processDefinitionId && this.field.restUrl) {\n            this.getValuesByProcessDefinitionId();\n        }\n        if (this.isReadOnlyType()) {\n            this.value = this.field.value;\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n            this.field.form.taskId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                const options = formFieldOption || [];\n                this.field.options = options;\n\n                const fieldValue = this.field.value;\n                if (fieldValue) {\n                    const toSelect = options.find((item) => item.id === fieldValue || item.name.toLocaleLowerCase() === fieldValue.toLocaleLowerCase());\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n            this.field.form.processDefinitionId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                const options = formFieldOption || [];\n                this.field.options = options;\n\n                const fieldValue = this.field.value;\n                if (fieldValue) {\n                    const toSelect = options.find((item) => item.id === fieldValue);\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getOptions(): FormFieldOption[] {\n        const val = this.value.trim().toLocaleLowerCase();\n        return this.field.options.filter((item) => {\n            const name = item.name.toLocaleLowerCase();\n            return name.indexOf(val) > -1;\n        });\n    }\n\n    isValidOptionName(optionName: string): boolean {\n        const option = this.field.options.find((item) => item.name && item.name.toLocaleLowerCase() === optionName.toLocaleLowerCase());\n        return option ? true : false;\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.trim().length >= this.minTermLength && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                if (this.value.length >= this.minTermLength) {\n                    this.options = this.getOptions();\n                    this.oldValue = this.value;\n                    if (this.isValidOptionName(this.value)) {\n                        this.field.value = this.options[0].id;\n                    }\n                }\n            }\n        }\n        if (this.isValueDefined() && this.value.trim().length === 0) {\n            this.oldValue = this.value;\n            this.options = [];\n        }\n    }\n\n    onItemSelect(item: FormFieldOption) {\n        if (item) {\n            this.field.value = item.id;\n            this.value = item.name;\n            this.onFieldChanged(this.field);\n        }\n    }\n\n    validate() {\n        this.field.value = this.value;\n    }\n\n    isValueDefined() {\n        return this.value !== null && this.value !== undefined;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): any {\n        return this.apiService.getInstance().activiti.contentApi;\n    }\n\n    /**\n     * Create temporary related content from an uploaded file.\n     * @param file File to use for content\n     * @returns The created content data\n     */\n    createTemporaryRawRelatedContent(file: any): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.createTemporaryRawRelatedContent(file))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the metadata for a related content item.\n     * @param contentId ID of the content item\n     * @returns Metadata for the content\n     */\n    getFileContent(contentId: number): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.getContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets raw binary content data for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the related content\n     */\n    getFileRawContent(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getRawContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the preview for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the content preview\n     */\n    getContentPreview(contentId: number): Observable<Blob> {\n        return new Observable((observer) => {\n            this.contentApi.getContentPreview(contentId).then(\n                (result) => {\n                    observer.next(result);\n                    observer.complete();\n                },\n                () => {\n                    this.contentApi.getRawContent(contentId).then(\n                        (data) => {\n                            observer.next(data);\n                            observer.complete();\n                        },\n                        (err) => {\n                            observer.error(err);\n                            observer.complete();\n                        }\n                    );\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL for direct access to a related content file.\n     * @param contentId ID of the related content\n     * @returns URL to access the content\n     */\n    getFileRawContentUrl(contentId: number): string {\n        return this.contentApi.getRawContentUrl(contentId);\n    }\n\n    /**\n     * Gets the thumbnail for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the thumbnail image\n     */\n    getContentThumbnail(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getContentThumbnail(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a task instance.\n     * @param taskId ID of the target task\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getTaskRelatedContent(taskId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForTask(taskId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a process instance.\n     * @param processId ID of the target process\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getProcessRelatedContent(processId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForProcessInstance(processId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Deletes related content.\n     * @param contentId Identifier of the content to delete\n     * @returns Null response that notifies when the deletion is complete\n     */\n    deleteRelatedContent(contentId: number): Observable<any> {\n        return from(this.contentApi.deleteContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param content File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createProcessRelatedContent(processInstanceId: string, content: any, opts?: any): Observable<any> {\n        return from(this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, content, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a task instance.\n     * @param taskId ID of the target task\n     * @param file File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createTaskRelatedContent(taskId: string, file: any, opts?: any) {\n        return from(this.contentApi.createRelatedContentOnTask(taskId, file, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Creates a JSON representation of data.\n     * @param res Object representing data\n     * @returns JSON object\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of data.\n     * @param res Object representing data\n     * @returns JSON array object\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Callback when an error occurs\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = ProcessContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ProcessContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ThumbnailService } from '../../../../services/thumbnail.service';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormService } from '../../../services/form.service';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'upload-widget',\n    templateUrl: './upload.widget.html',\n    styleUrls: ['./upload.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(public formService: FormService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService,\n                public processContentService: ProcessContentService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        const files = event.target.files;\n        let filesSaved = [];\n\n        if (this.field.json.value) {\n            filesSaved = [...this.field.json.value];\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap((file) => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => filesSaved.push(res),\n                    () => this.logService.error('Error uploading file. See console output for more details.'),\n                    () => {\n                        this.field.value = filesSaved;\n                        this.field.json.value = filesSaved;\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private uploadRawContent(file): Observable<any> {\n        return this.processContentService.createTemporaryRawRelatedContent(file)\n            .pipe(\n                map((response: any) => {\n                    this.logService.info(response);\n                    response.contentBlob = file;\n                    return response;\n                })\n            );\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    private removeElementFromList(file) {\n        const index = this.field.value.indexOf(file);\n\n        if (index !== -1) {\n            this.field.value.splice(index, 1);\n            this.field.json.value = this.field.value;\n            this.field.updateForm();\n        }\n\n        this.hasFile = this.field.value.length > 0;\n\n        this.resetFormValueWithNoFiles();\n    }\n\n    private resetFormValueWithNoFiles() {\n        if (this.field.value.length === 0) {\n            this.field.value = [];\n            this.field.json.value = [];\n        }\n    }\n\n    getIcon(mimeType) {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    fileClicked(contentLinkModel: any): void {\n        const file = new ContentLinkModel(contentLinkModel);\n        let fetch = this.processContentService.getContentPreview(file.id);\n        if (file.isTypeImage() || file.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(file.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                file.contentBlob = blob;\n                this.formService.formContentClicked.next(file);\n            },\n            () => {\n                this.logService.error('Unable to send event for file ' + file.name);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { FormService } from './../../../services/form.service';\nimport { WidgetComponent } from './../widget.component';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'date-time-widget',\n    templateUrl: './date-time.widget.html',\n    styleUrls: ['./date-time.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTimeWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContainerWidgetComponent } from './container/container.widget';\nimport { TabsWidgetComponent } from './tabs/tabs.widget';\nimport { UnknownWidgetComponent } from './unknown/unknown.widget';\n\nimport { AmountWidgetComponent } from './amount/amount.widget';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.widget';\nimport { DateWidgetComponent } from './date/date.widget';\nimport { DisplayTextWidgetComponentComponent } from './display-text/display-text.widget';\nimport { DocumentWidgetComponent } from './document/document.widget';\nimport { DropdownWidgetComponent } from './dropdown/dropdown.widget';\nimport { DynamicTableWidgetComponent } from './dynamic-table/dynamic-table.widget';\nimport { BooleanEditorComponent } from './dynamic-table/editors/boolean/boolean.editor';\nimport { DateEditorComponent } from './dynamic-table/editors/date/date.editor';\nimport { DateTimeEditorComponent } from './dynamic-table/editors/datetime/datetime.editor';\nimport { DropdownEditorComponent } from './dynamic-table/editors/dropdown/dropdown.editor';\nimport { RowEditorComponent } from './dynamic-table/editors/row.editor';\nimport { TextEditorComponent } from './dynamic-table/editors/text/text.editor';\nimport { ErrorWidgetComponent } from './error/error.component';\nimport { FunctionalGroupWidgetComponent } from './functional-group/functional-group.widget';\nimport { HyperlinkWidgetComponent } from './hyperlink/hyperlink.widget';\nimport { MultilineTextWidgetComponentComponent } from './multiline-text/multiline-text.widget';\nimport { NumberWidgetComponent } from './number/number.widget';\nimport { PeopleWidgetComponent } from './people/people.widget';\nimport { RadioButtonsWidgetComponent } from './radio-buttons/radio-buttons.widget';\nimport { InputMaskDirective } from './text/text-mask.component';\nimport { TextWidgetComponent } from './text/text.widget';\nimport { TypeaheadWidgetComponent } from './typeahead/typeahead.widget';\nimport { UploadWidgetComponent } from './upload/upload.widget';\nimport { DateTimeWidgetComponent } from './date-time/date-time.widget';\n\n// core\nexport * from './widget.component';\nexport * from './core/index';\n\n// containers\nexport * from './tabs/tabs.widget';\nexport * from './container/container.widget';\n\n// primitives\nexport * from './unknown/unknown.widget';\nexport * from './text/text.widget';\nexport * from './number/number.widget';\nexport * from './checkbox/checkbox.widget';\nexport * from './multiline-text/multiline-text.widget';\nexport * from './dropdown/dropdown.widget';\nexport * from './hyperlink/hyperlink.widget';\nexport * from './radio-buttons/radio-buttons.widget';\nexport * from './display-text/display-text.widget';\nexport * from './upload/upload.widget';\nexport * from './typeahead/typeahead.widget';\nexport * from './functional-group/functional-group.widget';\nexport * from './people/people.widget';\nexport * from './date/date.widget';\nexport * from './amount/amount.widget';\nexport * from './dynamic-table/dynamic-table.widget';\nexport * from './error/error.component';\nexport * from './document/document.widget';\nexport * from './date-time/date-time.widget';\n\n// editors (dynamic table)\nexport * from './dynamic-table/dynamic-table.widget.model';\nexport * from './dynamic-table/editors/row.editor';\nexport * from './dynamic-table/editors/date/date.editor';\nexport * from './dynamic-table/editors/dropdown/dropdown.editor';\nexport * from './dynamic-table/editors/boolean/boolean.editor';\nexport * from './dynamic-table/editors/text/text.editor';\nexport * from './dynamic-table/editors/datetime/datetime.editor';\nexport * from './text/text-mask.component';\n\nexport const WIDGET_DIRECTIVES: any[] = [\n    UnknownWidgetComponent,\n    TabsWidgetComponent,\n    ContainerWidgetComponent,\n    TextWidgetComponent,\n    NumberWidgetComponent,\n    CheckboxWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    DropdownWidgetComponent,\n    HyperlinkWidgetComponent,\n    RadioButtonsWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    UploadWidgetComponent,\n    TypeaheadWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    PeopleWidgetComponent,\n    DateWidgetComponent,\n    AmountWidgetComponent,\n    DynamicTableWidgetComponent,\n    DateEditorComponent,\n    DropdownEditorComponent,\n    BooleanEditorComponent,\n    TextEditorComponent,\n    RowEditorComponent,\n    ErrorWidgetComponent,\n    DocumentWidgetComponent,\n    DateTimeWidgetComponent,\n    DateTimeEditorComponent\n];\n\nexport const MASK_DIRECTIVE: any[] = [\n    InputMaskDirective\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormBaseModel } from './form-base.model';\nimport { FormOutcomeModel, FormFieldValidator, FormFieldModel, FormOutcomeEvent } from './widgets';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nexport abstract class FormBaseComponent {\n\n    static SAVE_OUTCOME_ID: string = '$save';\n    static COMPLETE_OUTCOME_ID: string = '$complete';\n    static START_PROCESS_OUTCOME_ID: string = '$startProcess';\n    static CUSTOM_OUTCOME_ID: string = '$custom';\n    static COMPLETE_BUTTON_COLOR: string = 'primary';\n    static COMPLETE_OUTCOME_NAME: string = 'COMPLETE';\n\n    /** Path of the folder where the metadata will be stored. */\n    @Input()\n    path: string;\n\n    /** Name to assign to the new node where the metadata are stored. */\n    @Input()\n    nameNode: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Complete` outcome button. */\n    @Input()\n    showCompleteButton: boolean = true;\n\n    /** If true then the `Complete` outcome button is shown but it will be disabled. */\n    @Input()\n    disableCompleteButton: boolean = false;\n\n    /** If true then the `Start Process` outcome button is shown but it will be disabled. */\n    @Input()\n    disableStartProcessButton: boolean = false;\n\n    /** Toggle rendering of the `Save` outcome button. */\n    @Input()\n    showSaveButton: boolean = true;\n\n    /** Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Toggle rendering of the validation icon next to the form title. */\n    @Input()\n    showValidationIcon: boolean = true;\n\n    /** Contains a list of form field validator instances. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the supplied form values have a validation error. */\n    @Output()\n    formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /**\n     * Emitted when any error occurs.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    form: FormBaseModel;\n\n    getParsedFormDefinition(): FormBaseComponent {\n        return this;\n    }\n\n    hasForm(): boolean {\n        return this.form ? true : false;\n    }\n\n    isTitleEnabled(): boolean {\n        let titleEnabled = false;\n        if (this.showTitle && this.form) {\n            titleEnabled = true;\n        }\n        return titleEnabled;\n    }\n\n    getColorForOutcome(outcomeName: string): string {\n        return outcomeName === FormBaseComponent.COMPLETE_OUTCOME_NAME ? FormBaseComponent.COMPLETE_BUTTON_COLOR : '';\n    }\n\n    isOutcomeButtonEnabled(outcome: FormOutcomeModel): boolean {\n        if (this.form.readOnly) {\n            return false;\n        }\n\n        if (outcome) {\n            // Make 'Save' button always available\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return true;\n            }\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.disableCompleteButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return this.disableStartProcessButton ? false : this.form.isValid;\n            }\n            return this.form.isValid;\n        }\n        return false;\n    }\n\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.name) {\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.showCompleteButton;\n            }\n            if (isFormReadOnly) {\n                return outcome.isSelected;\n            }\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.showSaveButton;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invoked when user clicks outcome button.\n     * @param outcome Form outcome model\n     */\n    onOutcomeClicked(outcome: FormOutcomeModel): boolean {\n        if (!this.readOnly && outcome && this.form) {\n\n            if (!this.onExecuteOutcome(outcome)) {\n                return false;\n            }\n\n            if (outcome.isSystem) {\n                if (outcome.id === FormBaseComponent.SAVE_OUTCOME_ID) {\n                    this.saveTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.COMPLETE_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.START_PROCESS_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.CUSTOM_OUTCOME_ID) {\n                    this.onTaskSaved(this.form);\n                    this.storeFormAsMetadata();\n                    return true;\n                }\n            } else {\n                // Note: Activiti is using NAME field rather than ID for outcomes\n                if (outcome.name) {\n                    this.onTaskSaved(this.form);\n                    this.completeTaskForm(outcome.name);\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    abstract onRefreshClicked();\n\n    abstract saveTaskForm();\n\n    abstract completeTaskForm(outcome?: string);\n\n    protected abstract onTaskSaved(form: FormBaseModel);\n\n    protected abstract storeFormAsMetadata();\n\n    protected abstract onExecuteOutcome(outcome: FormOutcomeModel);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../services/form.service';\n\n@Component({\n    selector: 'adf-form-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormListComponent implements OnChanges {\n\n    /** The array that contains the information to show inside the list. */\n    @Input()\n    forms: any [] = [];\n\n    constructor(protected formService: FormService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.getForms();\n    }\n\n    isEmpty(): boolean {\n        return this.forms && this.forms.length === 0;\n    }\n\n    getForms() {\n        this.formService.getForms().subscribe((forms) => {\n            this.forms.push(...forms);\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService } from '../../../../services/content.service';\nimport { LogService } from '../../../../services/log.service';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { FormService } from './../../../services/form.service';\n\n@Component({\n    selector: 'adf-content',\n    templateUrl: './content.widget.html',\n    styleUrls: ['./content.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentWidgetComponent implements OnChanges {\n\n    /** The content id to show. */\n    @Input()\n    id: string;\n\n    /** Toggles showing document content. */\n    @Input()\n    showDocumentContent: boolean = true;\n\n    /** Emitted when the content is clicked. */\n    @Output()\n    contentClick = new EventEmitter();\n\n    /** Emitted when the thumbnail has loaded. */\n    @Output()\n    thumbnailLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the content has loaded. */\n    @Output()\n    contentLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    content: ContentLinkModel;\n\n    constructor(protected formService: FormService,\n                private logService: LogService,\n                private contentService: ContentService,\n                private processContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const contentId = changes['id'];\n        if (contentId && contentId.currentValue) {\n            this.loadContent(contentId.currentValue);\n        }\n    }\n\n    loadContent(id: number) {\n        this.processContentService\n            .getFileContent(id)\n            .subscribe(\n                (response: ContentLinkModel) => {\n                    this.content = new ContentLinkModel(response);\n                    this.contentLoaded.emit(this.content);\n                    this.loadThumbnailUrl(this.content);\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    loadThumbnailUrl(content: ContentLinkModel) {\n        if (this.content.isThumbnailSupported()) {\n            let observable: Observable<any>;\n\n            if (this.content.isTypeImage()) {\n                observable = this.processContentService.getFileRawContent(content.id);\n            } else {\n                observable = this.processContentService.getContentThumbnail(content.id);\n            }\n\n            if (observable) {\n                observable.subscribe(\n                    (response: Blob) => {\n                        this.content.thumbnailUrl = this.contentService.createTrustedUrl(response);\n                        this.thumbnailLoaded.emit(this.content.thumbnailUrl);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n\n                    }\n                );\n            }\n        }\n    }\n\n    openViewer(content: ContentLinkModel): void {\n        let fetch = this.processContentService.getContentPreview(content.id);\n        if (content.isTypeImage() || content.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(content.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.contentClick.emit(content);\n                this.logService.info('Content clicked' + content.id);\n                this.formService.formContentClicked.next(content);\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n\n    /**\n     * Invoke content download.\n     */\n    download(content: ContentLinkModel): void {\n        this.processContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { FormBaseModel } from './form-base.model';\n\n@Component({\n    selector: 'adf-form-renderer',\n    templateUrl: './form-renderer.component.html',\n    styleUrls: ['./form-renderer.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormRendererComponent {\n\n    /** Toggle debug options. */\n    @Input()\n    showDebugButton: boolean = false;\n\n    @Input()\n    formDefinition: FormBaseModel;\n\n    debugMode: boolean;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiCompatibility, MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ActivitiContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const accountShortId = accountId.replace('alfresco-', '');\n        return from(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of all the repositories configured\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoRepositories(tenantId: number, includeAccount: boolean): Observable<any> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const opts = {\n            tenantId: tenantId,\n            includeAccounts: includeAccount\n        };\n        return from(apiService.activiti.alfrescoApi.getRepositories(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param node\n     * @param siteId\n     */\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent({\n            link: true,\n            name: node.title,\n            simpleType: node.simpleType,\n            source: accountId,\n            sourceId: node.id + '@' + siteId\n        }))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    applyAlfrescoNode(node: MinimalNode, siteId: string, accountId: string) {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const currentSideId = siteId ? siteId : this.getSiteNameFromNodePath(node);\n        const params: RelatedContentRepresentation = {\n            source: accountId,\n            mimeType: node.content.mimeType,\n            sourceId: node.id + ';' + node.properties['cm:versionLabel'] + '@' + currentSideId,\n            name: node.name,\n            link: false\n        };\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent(params))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getSiteNameFromNodePath(node: MinimalNode): string {\n        let siteName = '';\n        if (node.path) {\n            const foundNode = node.path\n                .elements.find((pathNode: MinimalNode) =>\n                    pathNode.nodeType === 'st:site' &&\n                    pathNode.name !== 'Sites');\n            siteName = foundNode ? foundNode.name : '';\n        }\n        return siteName.toLocaleLowerCase();\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    handleError(error: any): Observable<any> {\n        let errMsg = ActivitiContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ActivitiContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\nimport { Injectable, Type } from '@angular/core';\n\nimport {\n    AmountWidgetComponent,\n    CheckboxWidgetComponent,\n    ContainerWidgetComponent,\n    DateWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    DocumentWidgetComponent,\n    DropdownWidgetComponent,\n    DynamicTableWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    HyperlinkWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    NumberWidgetComponent,\n    PeopleWidgetComponent,\n    RadioButtonsWidgetComponent,\n    TextWidgetComponent,\n    TypeaheadWidgetComponent,\n    UnknownWidgetComponent,\n    UploadWidgetComponent,\n    DateTimeWidgetComponent\n} from './../components/widgets/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormRenderingService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = UnknownWidgetComponent;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'string': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'integer': DynamicComponentResolver.fromType(NumberWidgetComponent),\n        'multi-line-text': DynamicComponentResolver.fromType(MultilineTextWidgetComponentComponent),\n        'boolean': DynamicComponentResolver.fromType(CheckboxWidgetComponent),\n        'dropdown': DynamicComponentResolver.fromType(DropdownWidgetComponent),\n        'date': DynamicComponentResolver.fromType(DateWidgetComponent),\n        'amount': DynamicComponentResolver.fromType(AmountWidgetComponent),\n        'radio-buttons': DynamicComponentResolver.fromType(RadioButtonsWidgetComponent),\n        'hyperlink': DynamicComponentResolver.fromType(HyperlinkWidgetComponent),\n        'readonly-text': DynamicComponentResolver.fromType(DisplayTextWidgetComponentComponent),\n        'typeahead': DynamicComponentResolver.fromType(TypeaheadWidgetComponent),\n        'people': DynamicComponentResolver.fromType(PeopleWidgetComponent),\n        'functional-group': DynamicComponentResolver.fromType(FunctionalGroupWidgetComponent),\n        'dynamic-table': DynamicComponentResolver.fromType(DynamicTableWidgetComponent),\n        'container': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'group': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'document': DynamicComponentResolver.fromType(DocumentWidgetComponent),\n        'upload':  DynamicComponentResolver.fromType(UploadWidgetComponent),\n        'datetime':  DynamicComponentResolver.fromType(DateTimeWidgetComponent)\n    };\n\n    constructor() {\n        super();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class NodeMetadata {\n    metadata: any;\n    nodeType: string;\n\n    constructor(metadata: any, nodeType: string) {\n        this.metadata = metadata;\n        this.nodeType = nodeType;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { NodeMetadata } from '../models/node-metadata.model';\nimport { map } from 'rxjs/operators';\nimport { AlfrescoApiCompatibility, NodeEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Get the metadata and the nodeType for a nodeId cleaned by the prefix.\n     * @param nodeId ID of the target node\n     * @returns Node metadata\n     */\n    public getNodeMetadata(nodeId: string): Observable<NodeMetadata> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId))\n            .pipe(map(this.cleanMetadataFromSemicolon));\n    }\n\n    /**\n     * Create a new Node from form metadata.\n     * @param path Path to the node\n     * @param nodeType Node type\n     * @param name Node name\n     * @param nameSpace Namespace for properties\n     * @param data Property data to store in the node under namespace\n     * @returns The created node\n     */\n    public createNodeMetadata(nodeType: string, nameSpace: any, data: any, path: string, name?: string): Observable<NodeEntry> {\n        const properties = {};\n        for (const key in data) {\n            if (data[key]) {\n                properties[nameSpace + ':' + key] = data[key];\n            }\n        }\n\n        return this.createNode(name || this.generateUuid(), nodeType, properties, path);\n    }\n\n    /**\n     * Create a new Node from form metadata\n     * @param name Node name\n     * @param nodeType Node type\n     * @param properties Node body properties\n     * @param path Path to the node\n     * @returns The created node\n     */\n    public createNode(name: string, nodeType: string, properties: any, path: string): Observable<NodeEntry> {\n        const body = {\n            name: name,\n            nodeType: nodeType,\n            properties: properties,\n            relativePath: path\n        };\n\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.nodes.addNode('-root-', body, {}));\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    private cleanMetadataFromSemicolon(nodeEntry: NodeEntry): NodeMetadata {\n        const metadata = {};\n\n        if (nodeEntry && nodeEntry.entry.properties) {\n            for (const key in nodeEntry.entry.properties) {\n                if (key) {\n                    if (key.indexOf(':') !== -1) {\n                        metadata [key.split(':')[1]] = nodeEntry.entry.properties[key];\n                    } else {\n                        metadata [key] = nodeEntry.entry.properties[key];\n                    }\n                }\n            }\n        }\n\n        return new NodeMetadata(metadata, nodeEntry.entry.nodeType);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormErrorEvent extends FormEvent {\n\n    readonly error: any;\n\n    constructor(form: FormModel, error: any) {\n        super(form);\n        this.error = error;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-form-custom-button], [form-custom-button]' }) export class StartFormCustomButtonDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Compiler,\n    Component, ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { FormRenderingService } from './../../services/form-rendering.service';\nimport { WidgetVisibilityService } from './../../services/widget-visibility.service';\nimport { FormFieldModel } from './../widgets/core/form-field.model';\nimport { WidgetComponent } from './../widgets/widget.component';\n\ndeclare var adf: any;\n\n@Component({\n    selector: 'adf-form-field',\n    template: `\n        <div [id]=\"'field-'+field?.id+'-container'\"\n            [hidden]=\"!field?.isVisible\"\n            [class.adf-focus]=\"focus\"\n            (focusin)=\"focusToggle()\"\n            (focusout)=\"focusToggle()\">\n            <div #container></div>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n\n    @ViewChild('container', { read: ViewContainerRef })\n    container: ViewContainerRef;\n\n    /** Contains all the necessary data needed to determine what UI Widget\n     * to use when rendering the field in the form. You would typically not\n     * create this data manually but instead create the form in APS and export\n     * it to get to all the `FormFieldModel` definitions.\n     */\n    @Input()\n    field: FormFieldModel = null;\n\n    componentRef: ComponentRef<{}>;\n\n    focus: boolean = false;\n\n    constructor(private formRenderingService: FormRenderingService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private visibilityService: WidgetVisibilityService,\n                private compiler: Compiler) {\n    }\n\n    ngOnInit() {\n        const w: any = window;\n        if (w.adf === undefined) {\n            w.adf = {};\n        }\n        const originalField = this.getField();\n        if (originalField) {\n            const customTemplate = this.field.form.customFieldTemplates[originalField.type];\n            if (customTemplate && this.hasController(originalField.type)) {\n                const factory = this.getComponentFactorySync(originalField.type, customTemplate);\n                this.componentRef = this.container.createComponent(factory);\n                const instance: any = this.componentRef.instance;\n                if (instance) {\n                    instance.field = originalField;\n                }\n            } else {\n                const componentType = this.formRenderingService.resolveComponentType(originalField);\n                if (componentType) {\n                    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n                    this.componentRef = this.container.createComponent(factory);\n                    const instance = <WidgetComponent> this.componentRef.instance;\n                    instance.field = this.field;\n                    instance.fieldChanged.subscribe((field) => {\n                        if (field && this.field.form) {\n                            this.visibilityService.refreshVisibility(field.form);\n                            field.form.onFormFieldChanged(field);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private getField(): FormFieldModel {\n        if (this.field && this.field.params) {\n            const wrappedField = this.field.params.field;\n            if (wrappedField && wrappedField.type) {\n                return wrappedField;\n            }\n        }\n        return this.field;\n    }\n\n    private hasController(type: string): boolean {\n        return (adf && adf.components && adf.components[type]);\n    }\n\n    private getComponentFactorySync(type: string, template: string): ComponentFactory<any> {\n        const componentInfo = adf.components[type];\n\n        if (componentInfo.factory) {\n            return componentInfo.factory;\n        }\n\n        const metadata = {\n            selector: `runtime-component-${type}`,\n            template: template\n        };\n\n        const factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);\n        componentInfo.factory = factory;\n        return factory;\n    }\n\n    private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass: any): ComponentFactory<any> {\n        const cmpClass = componentClass || class RuntimeComponent {\n        };\n        const decoratedCmp = Component(metadata)(cmpClass);\n\n        @NgModule({ imports: [], declarations: [decoratedCmp] })\n        class RuntimeComponentModule {\n        }\n\n        const module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n        return module.componentFactories.find((x) => x.componentType === decoratedCmp);\n    }\n\n    focusToggle() {\n        this.focus = !this.focus;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from '../material.module';\n\nimport { MASK_DIRECTIVE, WIDGET_DIRECTIVES } from './components/widgets/index';\n\nimport { StartFormCustomButtonDirective } from './components/form-custom-button.directive';\n\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormListComponent } from './components/form-list.component';\nimport { ContentWidgetComponent } from './components/widgets/content/content.widget';\nimport { WidgetComponent } from './components/widgets/widget.component';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FormRendererComponent } from './components/form-renderer.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DataTableModule,\n        HttpClientModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        PipeModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES,\n        ...MASK_DIRECTIVE,\n        WidgetComponent\n    ],\n    entryComponents: [\n        ...WIDGET_DIRECTIVES\n    ],\n    exports: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES\n    ]\n})\nexport class FormBaseModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-content'\n})\nexport class SidenavLayoutContentDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-header'\n})\nexport class SidenavLayoutHeaderDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-navigation'\n})\nexport class SidenavLayoutNavigationDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    OnInit,\n    AfterViewInit,\n    ViewChild,\n    OnDestroy,\n    TemplateRef,\n    EventEmitter,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n    selector: 'adf-sidenav-layout',\n    templateUrl: './sidenav-layout.component.html',\n    styleUrls: ['./sidenav-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sidenav-layout' }\n})\nexport class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n    static STEP_OVER = 600;\n\n    /** The direction of the layout. 'ltr' or 'rtl' */\n    @Input() direction = 'ltr';\n\n    /** The side that the drawer is attached to. Possible values are 'start' and 'end'. */\n    @Input() position = 'start';\n\n    /** Minimum size of the navigation region. */\n    @Input() sidenavMin: number;\n\n    /** Maximum size of the navigation region. */\n    @Input() sidenavMax: number;\n\n    /** Screen size at which display switches from small screen to large screen configuration. */\n    @Input() stepOver: number;\n\n    /** Toggles showing/hiding the navigation region. */\n    @Input() hideSidenav = false;\n\n    /** Should the navigation region be expanded initially? */\n    @Input() expandedSidenav = true;\n\n    /** Emitted when the menu toggle and the collapsed/expanded state of the sideNav changes. */\n    @Output() expanded = new EventEmitter<boolean>();\n\n    @ContentChild(SidenavLayoutHeaderDirective) headerDirective: SidenavLayoutHeaderDirective;\n    @ContentChild(SidenavLayoutNavigationDirective) navigationDirective: SidenavLayoutNavigationDirective;\n    @ContentChild(SidenavLayoutContentDirective) contentDirective: SidenavLayoutContentDirective;\n\n    private menuOpenStateSubject: BehaviorSubject<boolean>;\n    public menuOpenState$: Observable<boolean>;\n\n    @ViewChild('container') container: any;\n    @ViewChild('emptyTemplate') emptyTemplate: any;\n\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized;\n\n    templateContext = {\n        toggleMenu: () => {},\n        isMenuMinimized: () => this.isMenuMinimized\n    };\n\n    constructor(private mediaMatcher: MediaMatcher) {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        const initialMenuState = !this.expandedSidenav;\n\n        this.menuOpenStateSubject = new BehaviorSubject<boolean>(initialMenuState);\n        this.menuOpenState$ = this.menuOpenStateSubject.asObservable();\n\n        const stepOver = this.stepOver || SidenavLayoutComponent.STEP_OVER;\n        this.isMenuMinimized = initialMenuState;\n\n        this.mediaQueryList = this.mediaMatcher.matchMedia(`(max-width: ${stepOver}px)`);\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n    }\n\n    ngAfterViewInit() {\n        this.templateContext.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu() {\n        if (!this.mediaQueryList.matches) {\n            this.isMenuMinimized = !this.isMenuMinimized;\n        } else {\n            this.isMenuMinimized = false;\n        }\n\n        this.container.toggleMenu();\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n\n    get isMenuMinimized() {\n        return this._isMenuMinimized;\n    }\n\n    set isMenuMinimized(menuState: boolean) {\n        this._isMenuMinimized = menuState;\n        this.menuOpenStateSubject.next(!menuState);\n    }\n\n    get isHeaderInside() {\n        return this.mediaQueryList.matches;\n    }\n\n    get headerTemplate(): TemplateRef<any> {\n        return this.headerDirective && this.headerDirective.template || this.emptyTemplate;\n    }\n\n    get navigationTemplate(): TemplateRef<any> {\n        return this.navigationDirective && this.navigationDirective.template || this.emptyTemplate;\n    }\n\n    get contentTemplate(): TemplateRef<any> {\n        return this.contentDirective && this.contentDirective.template || this.emptyTemplate;\n    }\n\n    onMediaQueryChange() {\n        this.isMenuMinimized = false;\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trigger, transition, animate, style, state, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const sidenavAnimation: AnimationTriggerMetadata = trigger('sidenavAnimation', [\n    state('expanded', style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    state('compact',  style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationLeft: AnimationTriggerMetadata = trigger('contentAnimationLeft', [\n    state('expanded', style({ 'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationRight: AnimationTriggerMetadata = trigger('contentAnimationRight', [\n    state('expanded', style({ 'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { sidenavAnimation, contentAnimationLeft, contentAnimationRight } from '../../helpers/animations';\n\n@Component({\n    selector: 'adf-layout-container',\n    templateUrl: './layout-container.component.html',\n    styleUrls: ['./layout-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [sidenavAnimation, contentAnimationLeft, contentAnimationRight]\n})\nexport class LayoutContainerComponent implements OnInit, OnDestroy {\n    @Input() sidenavMin: number;\n    @Input() sidenavMax: number;\n\n    // \" | any\", because Safari throws an error otherwise...\n    @Input() mediaQueryList: MediaQueryList | any;\n\n    @Input() hideSidenav = false;\n    @Input() expandedSidenav = true;\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n    sidenavAnimationState: any;\n    contentAnimationState: any;\n\n    SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n    CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n\n    constructor() {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };\n\n        this.CONTENT_STATES.MOBILE = { value: 'expanded', params: { margin: 0 } };\n        this.CONTENT_STATES.EXPANDED = { value: 'expanded', params: { margin: this.sidenavMin } };\n        this.CONTENT_STATES.COMPACT = { value: 'compact', params: { margin: this.sidenavMax } };\n\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        if (this.isMobileScreenSize) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;\n            this.contentAnimationState = this.CONTENT_STATES.MOBILE;\n        } else if (this.expandedSidenav) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n            this.contentAnimationState = this.CONTENT_STATES.COMPACT;\n        } else {\n            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;\n            this.contentAnimationState = this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu(): void {\n        if (this.isMobileScreenSize) {\n            this.sidenav.toggle();\n        } else {\n            this.sidenavAnimationState = this.toggledSidenavAnimation;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    private get toggledSidenavAnimation() {\n        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED\n            ? this.SIDENAV_STATES.COMPACT\n            : this.SIDENAV_STATES.EXPANDED;\n    }\n\n    private get toggledContentAnimation() {\n        if (this.isMobileScreenSize) {\n            return this.CONTENT_STATES.MOBILE;\n        }\n\n        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {\n            return this.CONTENT_STATES.COMPACT;\n        } else {\n            return this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    get isMobileScreenSize(): boolean {\n        return this.mediaQueryList.matches;\n    }\n\n    private onMediaQueryChange() {\n        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n        this.contentAnimationState = this.toggledContentAnimation;\n    }\n\n    getContentAnimationStateLeft() {\n        if (this.position === 'start') {\n            return this.contentAnimationState;\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n\n    getContentAnimationStateRight() {\n        if (this.position === 'end') {\n            return this.contentAnimationState;\n\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-sidebar-action-menu',\n    templateUrl: './sidebar-action-menu.component.html',\n    styleUrls: ['./sidebar-action-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sidebar-action-menu' }\n})\n\nexport class SidebarActionMenuComponent {\n\n    /** The title of the sidebar action. */\n    @Input()\n    title: string;\n\n    /** Toggle the sidebar action menu on expand. */\n    @Input()\n    expanded: boolean;\n\n    /** Width in pixels for sidebar action menu options. */\n    @Input()\n    width: number = 272;\n\n    isExpanded(): boolean {\n        return this.expanded;\n    }\n}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' }) export class SidebarMenuDirective {}\n@Directive({ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' }) export class SidebarMenuTitleIconDirective { }\n@Directive({ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' }) export class SidebarMenuExpandIconDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'adf-layout-header',\n    templateUrl: './header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-layout-header' }\n})\nexport class HeaderLayoutComponent implements OnInit {\n    /** Title of the application. */\n    @Input() title: string;\n\n    /** Path to an image file for the application logo. */\n    @Input() logo: string;\n\n    /** The router link for the application logo, when clicked. */\n    @Input() redirectUrl: string | any[] = '/';\n\n    /** The tooltip text for the application logo. */\n    @Input() tooltip: string;\n\n    /**\n     * Background color for the header. It can be any hex color code or one\n     * of the Material theme colors: 'primary', 'accent' or 'warn'.\n     */\n    @Input() color: string;\n\n    /**\n     * Toggles whether the sidenav button will be displayed in the header\n     * or not.\n     */\n    @Input() showSidenavToggle: boolean = true;\n\n    /** Emitted when the sidenav button is clicked. */\n    @Output() clicked = new EventEmitter<any>();\n\n    /** The side of the page that the drawer is attached to (can be 'start' or 'end') */\n    @Input() position = 'start';\n\n    toggleMenu() {\n        this.clicked.emit(true);\n    }\n\n    ngOnInit() {\n        if (!this.logo) {\n            this.logo = './assets/images/logo.png';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';\nimport { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';\nimport { LayoutContainerComponent } from './components/layout-container/layout-container.component';\nimport { SidebarActionMenuComponent, SidebarMenuDirective,\n    SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';\nimport { HeaderLayoutComponent } from './components/header/header.component';\nimport { TranslateModule } from '@ngx-translate/core';\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        RouterModule,\n        TranslateModule.forChild()\n    ],\n    exports: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ],\n    declarations: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ]\n})\nexport class LayoutModule {}\nexport { LayoutModule as SidenavLayoutModule };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CommentModel } from '../models/comment.model';\nimport { EcmUserService } from '../userinfo/services/ecm-user.service';\nimport { PeopleProcessService } from '../services/people-process.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-comment-list',\n    templateUrl: './comment-list.component.html',\n    styleUrls: ['./comment-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class CommentListComponent {\n\n    /** The comments data used to populate the list. */\n    @Input()\n    comments: CommentModel[];\n\n    /** Emitted when the user clicks on one of the comment rows. */\n    @Output()\n    clickRow: EventEmitter<CommentModel> = new EventEmitter<CommentModel>();\n\n    selectedComment: CommentModel;\n\n    currentLocale;\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                public ecmUserService: EcmUserService,\n                public userPreferenceService: UserPreferencesService) {\n        userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.currentLocale = locale;\n        });\n    }\n\n    selectComment(comment: CommentModel): void {\n        if (this.selectedComment) {\n            this.selectedComment.isSelected = false;\n        }\n        comment.isSelected = true;\n        this.selectedComment = comment;\n        this.clickRow.emit(this.selectedComment);\n    }\n\n    getUserShortName(user: any): string {\n        let shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n\n    isPictureDefined(user: any): boolean {\n        return user.pictureId || user.avatarId;\n    }\n\n    getUserImage(user: any): string {\n        if (this.isAContentUsers(user)) {\n            return this.ecmUserService.getUserProfileImage(user.avatarId);\n        } else {\n            return this.peopleProcessService.getUserImage(user);\n        }\n    }\n\n    private isAContentUsers(user: any): boolean {\n        return user.avatarId;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class CommentModel {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: any;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ? obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from '@alfresco/js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number;\n    externalId?: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.id = input.id;\n            this.email = input.email || null;\n            this.firstName = input.firstName || null;\n            this.lastName = input.lastName || null;\n            this.pictureId = input.pictureId || null;\n            this.externalId = input.externalId || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a task.\n     * @param taskId ID of the target task\n     * @param message Text for the comment\n     * @returns Details about the comment\n     */\n    addTaskComment(taskId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().activiti.taskApi.addTaskComment({ message: message }, taskId))\n            .pipe(\n                map((response: CommentModel) => {\n                    return new CommentModel({\n                        id: response.id,\n                        message: response.message,\n                        created: response.created,\n                        createdBy: response.createdBy\n                    });\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a task.\n     * @param taskId ID of the target task\n     * @returns Details for each comment\n     */\n    getTaskComments(taskId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @returns Details for each comment\n     */\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a comment to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel> {\n        return from(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({ message: message }, processInstanceId)\n        ).pipe(\n            map((response: CommentModel) => {\n                return new CommentModel({\n                    id: response.id,\n                    message: response.message,\n                    created: response.created,\n                    createdBy: response.createdBy\n                });\n            }),\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { LogService } from '../services/log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentContentService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a node.\n     * @param nodeId ID of the target node\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addNodeComment(nodeId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().core.commentsApi.addComment(nodeId, {content: message}))\n            .pipe(\n                map((response: any) => {\n                    return new CommentModel({\n                        id: response.entry.id,\n                        message: response.entry.content,\n                        created: response.entry.createdAt,\n                        createdBy: response.entry.createdBy\n                    });\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a node.\n     * @param nodeId ID of the target node\n     * @returns Details for each comment\n     */\n    getNodeComments(nodeId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().core.commentsApi.getComments(nodeId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.list.entries.forEach((comment: any) => {\n                        comments.push(new CommentModel({\n                            id: comment.entry.id,\n                            message: comment.entry.content,\n                            created: comment.entry.createdAt,\n                            createdBy: comment.entry.createdBy\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentProcessService } from '../services/comment-process.service';\nimport { CommentContentService } from '../services/comment-content.service';\nimport { CommentModel } from '../models/comment.model';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnChanges {\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string;\n\n    /** The numeric ID of the node. */\n    @Input()\n    nodeId: string;\n\n    /** Are the comments read only? */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when an error occurs while displaying/adding a comment. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService, private commentContentService: CommentContentService) {\n        this.comment$ = new Observable<CommentModel>((observer) => this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.taskId = null;\n        this.nodeId = null;\n\n        this.taskId = changes['taskId'] ? changes['taskId'].currentValue : null;\n        this.nodeId = changes['nodeId'] ? changes['nodeId'].currentValue : null;\n\n        if (this.taskId || this.nodeId) {\n            this.getComments();\n        } else {\n            this.resetComments();\n        }\n    }\n\n    private getComments(): void {\n        this.resetComments();\n        if (this.isATask()) {\n            this.commentProcessService.getTaskComments(this.taskId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((currentComment) => {\n                            this.commentObserver.next(currentComment);\n                        });\n                    }\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n\n        if (this.isANode()) {\n            this.commentContentService.getNodeComments(this.nodeId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            const comment = this.sanitize(this.message);\n\n            this.beingAdded = true;\n            if (this.isATask()) {\n                this.commentProcessService.addTaskComment(this.taskId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n\n            if (this.isANode()) {\n                this.commentContentService.addNodeComment(this.nodeId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    isATask(): boolean {\n        return this.taskId ? true : false;\n    }\n\n    isANode(): boolean {\n        return this.nodeId ? true : false;\n    }\n\n    private sanitize(input: string) {\n        return input.replace(/<[^>]+>/g, '')\n            .replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '')\n            .replace(/\\r?\\n/g, '<br/>');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\n\n@NgModule({\n    imports: [\n        PipeModule,\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        CommentListComponent,\n        CommentsComponent\n    ]\n})\nexport class CommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { MatMenuItem } from '@angular/material';\n\n@Component({\n    selector: 'adf-buttons-action-menu',\n    templateUrl: './buttons-menu.component.html',\n    styleUrls: ['./buttons-menu.component.scss']\n})\n\nexport class ButtonsMenuComponent implements  AfterContentInit {\n\n    @ContentChildren(MatMenuItem) buttons: QueryList<MatMenuItem>;\n\n    isMenuEmpty: boolean;\n\n    ngAfterContentInit() {\n        if (this.buttons.length > 0) {\n            this.isMenuEmpty = false;\n        } else {\n            this.isMenuEmpty = true;\n        }\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ButtonsMenuComponent } from './buttons-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule\n    ],\n    declarations: [\n        ButtonsMenuComponent\n    ],\n    exports: [\n        ButtonsMenuComponent\n    ]\n})\nexport class ButtonsMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-sorting-picker',\n    templateUrl: './sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sorting-picker' }\n})\nexport class SortingPickerComponent {\n\n    /** Available sorting options */\n    @Input()\n    options: Array<{key: string, label: string}> = [];\n\n    /** Currently selected option key */\n    @Input()\n    selected: string;\n\n    /** Current sorting direction */\n    @Input()\n    ascending = true;\n\n    /** Raised each time sorting key gets changed. */\n    @Output()\n    valueChange = new EventEmitter<string>();\n\n    /** Raised each time direction gets changed. */\n    @Output()\n    sortingChange = new EventEmitter<boolean>();\n\n    onOptionChanged(event: MatSelectChange) {\n        this.selected = event.value;\n        this.valueChange.emit(this.selected);\n    }\n\n    toggleSortDirection() {\n        this.ascending = !this.ascending;\n        this.sortingChange.emit(this.ascending);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { SortingPickerComponent } from './sorting-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        SortingPickerComponent\n    ],\n    exports: [\n        SortingPickerComponent\n    ]\n})\nexport class SortingPickerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewEncapsulation,\n    OnInit,\n    AfterContentChecked\n} from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-error-content',\n    templateUrl: './error-content.component.html',\n    styleUrls: ['./error-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-error-content' }\n})\nexport class ErrorContentComponent implements OnInit, AfterContentChecked {\n\n    static UNKNOWN_ERROR = 'UNKNOWN';\n\n    /** Target URL for the secondary button. */\n    @Input()\n    secondaryButtonUrl: string = 'report-issue';\n\n    /** Target URL for the return button. */\n    @Input()\n    returnButtonUrl: string = '/';\n\n    /** Error code associated with this error. */\n    @Input()\n    errorCode: string = ErrorContentComponent.UNKNOWN_ERROR;\n\n    hasSecondButton: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                if (params['id']) {\n                    this.errorCode = this.checkErrorExists(params['id']) ? params['id'] : ErrorContentComponent.UNKNOWN_ERROR;\n                }\n            });\n        }\n    }\n\n    checkErrorExists(errorCode: string ) {\n        const errorMessage = this.translateService.instant('ERROR_CONTENT.' + errorCode);\n        return errorMessage !== ('ERROR_CONTENT.' + errorCode);\n    }\n\n    getTranslations() {\n        this.hasSecondButton = this.translateService.instant(\n            'ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;\n    }\n\n    ngAfterContentChecked() {\n        this.getTranslations();\n    }\n\n    onSecondButton() {\n        this.router.navigate(['/' + this.secondaryButtonUrl]);\n    }\n\n    onReturnButton() {\n        this.router.navigate(['/' + this.returnButtonUrl]);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-content',\n    templateUrl: './empty-content.component.html',\n    styleUrls: ['./empty-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-empty-content' }\n})\nexport class EmptyContentComponent {\n\n    /** Material Icon to use. */\n    @Input()\n    icon = 'cake';\n\n    /** String or Resource Key for the title. */\n    @Input()\n    title = '';\n\n    /** String or Resource Key for the subtitle. */\n    @Input()\n    subtitle = '';\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ErrorContentComponent } from './error-content/error-content.component';\nimport { EmptyContentComponent } from './empty-content/empty-content.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ],\n    exports: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ]\n})\nexport class TemplateModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanActivateChild\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\nexport abstract class AuthGuardBase implements CanActivate, CanActivateChild {\n    abstract checkLogin(\n        activeRoute: ActivatedRouteSnapshot,\n        redirectUrl: string\n    ): Observable<boolean> | Promise<boolean> | boolean;\n\n    protected get withCredentials(): boolean {\n        return this.appConfigService.get<boolean>(\n            'auth.withCredentials',\n            false\n        );\n    }\n\n    constructor(\n        protected authenticationService: AuthenticationService,\n        protected router: Router,\n        protected appConfigService: AppConfigService\n    ) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.checkLogin(route, state.url);\n    }\n\n    canActivateChild(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state);\n    }\n\n    protected redirectToUrl(provider: string, url: string) {\n        this.authenticationService.setRedirect({ provider, url });\n\n        const pathToLogin = this.getLoginRoute();\n        const urlToRedirect = `/${pathToLogin}?redirectUrl=${url}`;\n\n        this.router.navigateByUrl(urlToRedirect);\n    }\n\n    protected getLoginRoute(): string {\n        return (\n            this.appConfigService &&\n            this.appConfigService.get<string>(\n                AppConfigValues.LOGIN_ROUTE,\n                'login'\n            )\n        );\n    }\n\n    protected isOAuthWithoutSilentLogin() {\n        const oauth = this.appConfigService.get<OauthConfigModel>(\n            AppConfigValues.OAUTHCONFIG,\n            null\n        );\n        return (\n            this.authenticationService.isOauth() && oauth.silentLogin === false\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard extends AuthGuardBase {\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isLoggedIn() || this.withCredentials) {\n            return true;\n        }\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ALL', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardEcm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isEcmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ECM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardBpm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isBpmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('BPM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from './jwt-helper.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardSsoRoleService implements CanActivate {\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let hasRole = false;\n        let hasRealmRole = false;\n        let hasClientRole = true;\n\n        if (route.data) {\n            if (route.data['roles']) {\n                const rolesToCheck = route.data['roles'];\n                hasRealmRole = this.hasRealmRoles(rolesToCheck);\n            }\n\n            if (route.data['clientRoles']) {\n                const clientRoleName = route.params[route.data['clientRoles']];\n                const rolesToCheck = route.data['roles'];\n                hasClientRole = this.hasRealmRolesForClientRole(clientRoleName, rolesToCheck);\n            }\n        }\n\n        hasRole = hasRealmRole && hasClientRole;\n\n        if (!hasRole && route.data && route.data['redirectUrl']) {\n            this.router.navigate(['/' + route.data['redirectUrl']]);\n        }\n\n        return hasRole;\n    }\n\n    constructor(private storageService: StorageService, private jwtHelperService: JwtHelperService, private router: Router) {\n    }\n\n    getRealmRoles(): string[] {\n        const access = this.getValueFromToken<any>('realm_access');\n        const roles = access ? access['roles'] : [];\n        return roles;\n    }\n\n    getClientRoles(client: string): string[] {\n        const clientRole = this.getValueFromToken<any>('resource_access')[client];\n        const roles = clientRole ? clientRole['roles'] : [];\n        return roles;\n    }\n\n    getAccessToken(): string {\n        return this.storageService.getItem('access_token');\n    }\n\n    hasRealmRole(role: string): boolean {\n        let hasRole = false;\n        if (this.getAccessToken()) {\n            const realmRoles = this.getRealmRoles();\n            hasRole = realmRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n\n    hasRealmRoles(rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasRealmRole(currentRole);\n        });\n    }\n\n    hasRealmRolesForClientRole(clientRole: string, rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasClientRole(clientRole, currentRole);\n        });\n    }\n\n    hasClientRole(clientRole, role: string): boolean {\n        let hasRole = false;\n        if (this.getAccessToken()) {\n            const clientRoles = this.getClientRoles(clientRole);\n            hasRole = clientRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n\n    getValueFromToken<T>(key: string): T {\n        let value;\n        const accessToken = this.getAccessToken();\n        if (accessToken) {\n            const tokenPayload = this.jwtHelperService.decodeToken(accessToken);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of deployed apps for this user.\n     * @returns The list of deployed apps\n     */\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation[]> response.data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of deployed apps for this user, where the app name is `name`.\n     * @param name Name of the app\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation> response.data.find((app) => app.name === name)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a specific app ID number.\n     * @param appId ID of the target app\n     * @returns Details of the app\n     */\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => response.data.find((app) => app.id === appId)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { TranslationService } from './translation.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageTitleService {\n\n    private originalTitle: string = '';\n    private translatedTitle: string = '';\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService,\n        private translationService: TranslationService) {\n        translationService.translate.onLangChange.subscribe(() => this.onLanguageChanged());\n        translationService.translate.onTranslationChange.subscribe(() => this.onLanguageChanged());\n    }\n\n    /**\n     * Sets the page title.\n     * @param value The new title\n     */\n    setTitle(value: string = '') {\n        this.originalTitle = value;\n        this.translatedTitle = this.translationService.instant(value);\n\n        this.updateTitle();\n    }\n\n    private onLanguageChanged() {\n        this.translatedTitle = this.translationService.instant(this.originalTitle);\n        this.updateTitle();\n    }\n\n    private updateTitle() {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n\n        const title = this.translatedTitle ? `${this.translatedTitle} - ${name}` : `${name}`;\n        this.titleService.setTitle(title);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { Observable, from, interval, empty } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { concatMap, switchMap, takeWhile, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the first available rendition found for a node.\n     * @param nodeId ID of the target node\n     * @returns Information object for the rendition\n     */\n    getAvailableRenditionForNode(nodeId: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId)).pipe(\n            map((availableRenditions: RenditionPaging) => {\n                const renditionsAvailable: RenditionEntry[] = availableRenditions.list.entries.filter(\n                    (rendition) => (rendition.entry.id === 'pdf' || rendition.entry.id === 'imgpreview'));\n                const existingRendition = renditionsAvailable.find((rend) => rend.entry.status === 'CREATED');\n                return existingRendition ? existingRendition : renditionsAvailable[0];\n            }));\n    }\n\n    /**\n     * Generates a rendition for a node using the first available encoding.\n     * @param nodeId ID of the target node\n     * @returns Null response to indicate completion\n     */\n    generateRenditionForNode(nodeId: string): Observable<any> {\n        return this.getAvailableRenditionForNode(nodeId).pipe(\n            map((rendition: RenditionEntry) => {\n                if (rendition.entry.status !== 'CREATED') {\n                    return from(this.apiService.renditionsApi.createRendition(nodeId, { id: rendition.entry.id }));\n                } else {\n                    return empty();\n                }\n            })\n        );\n    }\n\n    /**\n     * Checks if the specified rendition is available for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the rendition is available, false otherwise\n     */\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Checks if the node can be converted using the specified rendition.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the node can be converted, false otherwise\n     */\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL linking to the specified rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns URL string\n     */\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, encoding);\n    }\n\n    /**\n     * Gets information about a rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Information object about the rendition\n     */\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    /**\n     * Gets a list of all renditions for a node.\n     * @param nodeId ID of the target node\n     * @returns Paged list of rendition details\n     */\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    /**\n     * Creates a rendition for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Null response to indicate completion\n     */\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return from(this.apiService.renditionsApi.createRendition(nodeId, { id: encoding }));\n    }\n\n    /**\n     * Repeatedly attempts to create a rendition, through to success or failure.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @param pollingInterval Time interval (in milliseconds) between checks for completion\n     * @param retries Number of attempts to make before declaring failure\n     * @returns True if the rendition was created, false otherwise\n     */\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000, retries: number = 5) {\n        return this.createRendition(nodeId, encoding)\n            .pipe(\n                concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval, retries))\n            );\n    }\n\n    private pollRendition(nodeId: string, encoding: string, intervalSize: number = 1000, retries: number = 5) {\n        let attempts = 0;\n        return interval(intervalSize)\n            .pipe(\n                switchMap(() => this.getRendition(nodeId, encoding)),\n                takeWhile((renditionEntry: RenditionEntry) => {\n                    attempts += 1;\n                    if (attempts > retries) {\n                        return false;\n                    }\n                    return (renditionEntry.entry.status.toString() !== 'CREATED');\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, forkJoin, throwError, of } from 'rxjs';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { map, catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslateLoaderService implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n    private defaultLang: string = 'en';\n\n    constructor(private http: HttpClient) {\n    }\n\n    setDefaultLang(value: string) {\n        this.defaultLang = value || 'en';\n    }\n\n    registerProvider(name: string, path: string) {\n        const registered = this.providers.find((provider) => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find((x) => x.name === name) ? true : false;\n    }\n\n    fetchLanguageFile(lang: string, component: ComponentTranslationModel, fallbackUrl?: string): Observable<void> {\n        const translationUrl = fallbackUrl || `${component.path}/${this.prefix}/${lang}${this.suffix}?v=${Date.now()}`;\n\n        return this.http.get(translationUrl).pipe(\n            map((res: Response) => {\n                component.json[lang] = res;\n            }),\n            retry(3),\n            catchError(() => {\n                if (!fallbackUrl && lang.includes('-')) {\n                    const [langId] = lang.split('-');\n\n                    if (langId && langId !== this.defaultLang) {\n                        const url = `${component.path}/${this.prefix}/${langId}${this.suffix}?v=${Date.now()}`;\n\n                        return this.fetchLanguageFile(lang, component, url);\n                    }\n                }\n                return throwError(`Failed to load ${translationUrl}`);\n            })\n        );\n    }\n\n    getComponentToFetch(lang: string): Array<Observable<any>> {\n        const observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                observableBatch.push(\n                    this.fetchLanguageFile(lang, component)\n                );\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find((x) => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach((model) => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let hasFailures = false;\n        const batch = [\n            ...this.getComponentToFetch(lang).map((observable) => {\n                return observable.pipe(\n                    catchError((error) => {\n                        console.warn(error);\n                        hasFailures = true;\n                        return of(error);\n                    })\n                );\n            })\n        ];\n\n        return new Observable((observer) => {\n\n            if (batch.length > 0) {\n                forkJoin(batch).subscribe(\n                    () => {\n                        const fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        if (hasFailures) {\n                            observer.error('Failed to load some resources');\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    (err) => {\n                        observer.error('Failed to load some resources');\n                    });\n            } else {\n                const fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                    observer.complete();\n                }\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Minimatch } from 'minimatch-browser';\nimport { Subject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport {\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    FileUploadErrorEvent,\n    FileUploadEvent\n} from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UploadService {\n\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private excludedFileList: string[] = [];\n    private matchingOptions: any = null;\n\n    activeTask: Promise<any> = null;\n    queue: FileModel[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(protected apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     * @returns True if a file is uploading, false otherwise\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Gets the file Queue\n     * @returns Array of files that form the queue\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Adds files to the uploading queue to be uploaded\n     * @param files One or more separate parameters or an array of files to queue\n     * @returns Array of files that were not blocked from upload by the ignore list\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter((currentFile) => this.filterElement(currentFile));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n\n        this.excludedFileList = <string[]> this.appConfigService.get('files.excluded');\n        if (this.excludedFileList) {\n\n            this.matchingOptions = this.appConfigService.get('files.match-options');\n\n            isAllowed = this.excludedFileList.filter((pattern) => {\n                const minimatch = new Minimatch(pattern, this.matchingOptions);\n                return minimatch.match(file.name);\n            }).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Finds all the files in the queue that are not yet uploaded and uploads them into the directory folder.\n     * @param emitter Emitter to invoke on file status change\n     */\n    uploadFilesInTheQueue(emitter?: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            const file = this.queue.find((currentFile) => currentFile.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                const next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    /**\n     * Cancels uploading of files.\n     * @param files One or more separate parameters or an array of files specifying uploads to cancel\n     */\n    cancelUpload(...files: FileModel[]) {\n        files.forEach((file) => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    /** Clears the upload queue */\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    /**\n     * Gets an upload promise for a file.\n     * @param file The target file\n     * @returns Promise that is resolved if the upload is successful or error otherwise\n     */\n    getUploadPromise(file: FileModel): any {\n        const opts: any = {\n            renditions: 'doclib',\n            include: ['allowableOperations']\n        };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = file.options.majorVersion;\n            opts.comment = file.options.comment;\n            opts.name = file.name;\n        } else {\n            opts.autoRename = true;\n        }\n\n        if (file.options.nodeType) {\n            opts.nodeType = file.options.nodeType;\n        }\n\n        if (file.id) {\n            return this.apiService.getInstance().node.updateNodeContent(\n                file.id,\n                file.file,\n                opts\n            );\n        } else {\n            return this.apiService.getInstance().upload.uploadFile(\n                file.file,\n                file.options.path,\n                file.options.parentId,\n                file.options,\n                opts\n            );\n        }\n    }\n\n    private beginUpload(file: FileModel, emitter: EventEmitter<any>): any {\n\n        const promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n            .on('abort', () => {\n                this.onUploadAborted(file);\n                if (emitter) {\n                    emitter.emit({ value: 'File aborted' });\n                }\n            })\n            .on('error', (err) => {\n                this.onUploadError(file, err);\n                if (emitter) {\n                    emitter.emit({ value: 'Error file uploaded' });\n                }\n            })\n            .on('success', (data) => {\n                this.onUploadComplete(file, data);\n                if (emitter) {\n                    emitter.emit({ value: data });\n                }\n            })\n            .catch((err) => {\n            });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.errorCode = ( error || {} ).status;\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\n\nimport { NodePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    /**\n     * Gets a list of nodes in the trash.\n     * @param options Options for JS-API call\n     * @returns List of nodes in the trash\n     */\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.nodesApi.getDeletedNodes(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoritesApiService {\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = this\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    /**\n     * Gets the favorites for a user.\n     * @param personId ID of the user\n     * @param options Options supported by JS-API\n     * @returns List of favorites\n     */\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(this.remapFavoritesData);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, MinimalNode, NodePaging } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: NodeEntry) {\n        return entity.entry;\n    }\n\n    /**\n     * Gets the stored information about a node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Node information\n     */\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Gets the items contained in a folder node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns List of child items from the folder\n     */\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new document node inside a folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new node\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new node\n     */\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder node inside a parent folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new folder\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new folder\n     */\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    /**\n     * Updates the information about a node.\n     * @param nodeId ID of the target node\n     * @param nodeBody New data for the node\n     * @param options Optional parameters supported by JS-API\n     * @returns Updated node information\n     */\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n\n        const promise = this.nodesApi\n            .updateNode(nodeId, nodeBody, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Moves a node to the trashcan.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Empty result that notifies when the deletion is complete\n     */\n    deleteNode(nodeId: string, options: any = {}): Observable<any> {\n        const promise = this.nodesApi.deleteNode(nodeId, options);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Restores a node previously moved to the trashcan.\n     * @param nodeId ID of the node to restore\n     * @returns Details of the restored node\n     */\n    restoreNode(nodeId: string): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .restoreNode(nodeId)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param personId ID of the target user\n     * @returns User information\n     */\n    getPerson(personId: string): Observable<any> {\n        const promise = this.peopleApi.getPerson(personId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Gets information about the user who is currently logged in.\n     * @returns User information\n     */\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '../interface/search-configuration.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    /**\n     * Generates a QueryBody object with custom search parameters.\n     * @param searchTerm Term text to search for\n     * @param maxResults Maximum number of search results to show in a page\n     * @param skipCount The offset of the start of the page within the results list\n     * @returns Query body defined by the parameters\n     */\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `'${searchTerm}*' OR name:'${searchTerm}*'` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, QueryBody } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n\n    dataLoaded: Subject<NodePaging> = new Subject();\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchConfigurationService: SearchConfigurationService) {\n    }\n\n    /**\n     * Gets a list of nodes that match the given search criteria.\n     * @param term Term to search for\n     * @param options Options for delivery of the search results\n     * @returns List of nodes resulting from the search\n     */\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().core.queriesApi.findNodes(term, options);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search.\n     * @param searchTerm Term to search for\n     * @param maxResults Maximum number of items in the list of results\n     * @param skipCount Number of higher-ranked items to skip over in the list\n     * @returns List of search results\n     */\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<NodePaging> {\n        const searchQuery = Object.assign(this.searchConfigurationService.generateQueryBody(searchTerm, maxResults, skipCount));\n        const promise = this.apiService.getInstance().search.searchApi.search(searchQuery);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search with its parameters supplied by a QueryBody object.\n     * @param queryBody Object containing the search parameters\n     * @returns List of search results\n     */\n    searchByQueryBody(queryBody: QueryBody): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().search.searchApi.search(queryBody);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    /** The number of entities that exist in the collection before those included in this list. */\n    skipCount?: number;\n\n    /** The maximum number of items to return in the list. */\n    maxItems?: number;\n\n    /** The id of the node to start the search from. Supports the aliases -my-, -root- and -shared-. */\n    rootNodeId?: string;\n\n    /** Restrict the returned results to only those of the given node type and its sub-types. */\n    nodeType?: string;\n\n    /**\n     * Return additional information about the node. The available optional fields are:\n     * `allowableOperations`, `aspectNames`, `isLink`, `isLocked`, `path` and `properties`.\n     */\n    include?: string[];\n\n    /**\n     * String to control the order of the entities returned in a list. You can use this\n     * parameter to sort the list by one or more fields. Each field has a default sort order,\n     * which is normally ascending order (but see the JS-API docs to check if any fields used\n     * in a method have a descending default search order). To sort the entities in a specific\n     * order, you can use the \"ASC\" and \"DESC\" keywords for any field.\n     */\n    orderBy?: string;\n\n    /**\n     * List of field names. You can use this parameter to restrict the fields returned within\n     * a response if, for example, you want to save on overall bandwidth. The list applies to a\n     * returned individual entity or entries within a collection. If the API method also supports\n     * the `include` parameter, then the fields specified in the include parameter are returned in\n     * addition to those specified in the fields parameter.\n     */\n    fields?: string[];\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, SharedLinkEntry } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedLinksApiService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n    }\n\n    private get sharedLinksApi() {\n        return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    /**\n     * Gets shared links available to the current user.\n     * @param options Options supported by JS-API\n     * @returns List of shared links\n     */\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: ['properties', 'allowableOperations']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = this.sharedLinksApi.findSharedLinks(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Creates a shared link available to the current user.\n     * @param nodeId ID of the node to link to\n     * @param options Options supported by JS-API\n     * @returns The shared link just created\n     */\n    createSharedLinks(nodeId: string, options: any = {}): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.addSharedLink({ nodeId: nodeId });\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Deletes a shared link.\n     * @param sharedId ID of the link to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSharedLink(sharedId: string): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.deleteSharedLink(sharedId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SitesService {\n\n    constructor(\n        private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets a list of all sites in the repository.\n     * @param opts Options supported by JS-API\n     * @returns List of sites\n     */\n    getSites(opts: any = {}): Observable<SitePaging> {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return from(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a site.\n     * @param siteId ID of the target site\n     * @param opts Options supported by JS-API\n     * @returns Information about the site\n     */\n    getSite(siteId: string, opts?: any): Observable<SiteEntry | {}> {\n        return from(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a site.\n     * @param siteId Site to delete\n     * @param permanentFlag True: deletion is permanent; False: site is moved to the trash\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSite(siteId: string, permanentFlag: boolean = true): Observable<any> {\n        const options: any = {};\n        options.permanent = permanentFlag;\n        return from(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a site's content.\n     * @param siteId ID of the target site\n     * @returns Site content\n     */\n    getSiteContent(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    /**\n     * Gets a list of all a site's members.\n     * @param siteId ID of the target site\n     * @returns Site members\n     */\n    getSiteMembers(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    /**\n     * Gets the username of the user currently logged into ACS.\n     * @returns Username string\n     */\n    getEcmCurrentLoggedUserName(): string {\n        return this.apiService.getInstance().getEcmUsername();\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { LoginDialogComponent } from '../login/components/login-dialog.component';\nimport { LoginDialogComponentData } from '../login/components/login-dialog-component-data.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param actionName Name of the action to show in the title\n     * @param title Title for the dialog\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(actionName: string, title: string): Observable<string> {\n        const logged = new Subject<string>();\n        logged.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: LoginDialogComponentData = {\n            title,\n            actionName,\n            logged\n        };\n\n        this.openLoginDialog(data, 'adf-login-dialog', '630px');\n        return logged;\n    }\n\n    private openLoginDialog(data: LoginDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(LoginDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApiCompatibility,\n    ContentApi,\n    Core\n} from '@alfresco/js-api';\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExternalAlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    init(ecmHost: string, contextRoot: string) {\n\n        const domainPrefix = this.createPrefixFromHost(ecmHost);\n\n        const config = {\n            provider: 'ECM',\n            hostEcm: ecmHost,\n            authType: 'BASIC',\n            contextRoot: contextRoot,\n            domainPrefix\n        };\n        this.initAlfrescoApi(config);\n    }\n\n    protected initAlfrescoApi(config) {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n    }\n\n    private createPrefixFromHost(url: string): string {\n        const match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n        let result = null;\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\n            result = match[2];\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LockService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    isLocked(node: Node): boolean {\n        let isLocked = false;\n        if (this.hasLockConfigured(node)) {\n            if (this.isReadOnlyLock(node)) {\n                isLocked = true;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            } else if (this.isLockOwnerAllowed(node)) {\n                isLocked = this.alfrescoApiService.getInstance().getEcmUsername() !== node.properties['cm:lockOwner'].id;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            }\n        }\n        return isLocked;\n    }\n\n    private hasLockConfigured(node: Node): boolean {\n        return node.isFile && node.isLocked && node.properties['cm:lockType'];\n    }\n\n    private isReadOnlyLock(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'READ_ONLY_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private isLockOwnerAllowed(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'WRITE_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private getLockExpiryTime(node: Node): Moment {\n        if (node.properties['cm:expiryDate']) {\n            return moment(node.properties['cm:expiryDate'], 'yyyy-MM-ddThh:mm:ssZ');\n        }\n    }\n\n    private isLockExpired(node: Node): boolean {\n        const expiryLockTime = this.getLockExpiryTime(node);\n        return moment().isAfter(expiryLockTime);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CoreAutomationService {\n    constructor(private appConfigService: AppConfigService,\n                private alfrescoApiService: AlfrescoApiService,\n                private storageService: StorageService) {\n    }\n\n    setup() {\n        const adfProxy = window['adf'] || {};\n\n        adfProxy.setConfigField = (field: string, value: string) => {\n            this.appConfigService.config[field] = JSON.parse(value);\n        };\n\n        adfProxy.setStorageItem = (key: string, data: string) => {\n            this.storageService.setItem(key, data);\n        };\n\n        adfProxy.clearStorage = () => {\n            this.storageService.clear();\n        };\n\n        adfProxy.apiReset = () => {\n            this.alfrescoApiService.reset();\n        };\n\n        window['adf'] = adfProxy;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PipeModule } from '../pipes/pipe.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material';\n\n@Component({\n    selector: 'adf-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-icon' }\n})\nexport class IconComponent {\n    private _value = '';\n    private _isCustom = false;\n\n    /** Theme color palette for the component. */\n    @Input()\n    color: ThemePalette;\n\n    get value(): string {\n        return this._value;\n    }\n\n    /** Icon value, which can be either a ligature name or a custom icon in the format `[namespace]:[name]`. */\n    @Input()\n    set value(value: string) {\n        this._value = value || 'settings';\n        this._isCustom = this._value.includes(':');\n    }\n\n    get isCustom(): boolean {\n        return this._isCustom;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { IconComponent } from './icon.component';\nimport { MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    declarations: [\n        IconComponent\n    ],\n    exports: [\n        IconComponent\n    ],\n    providers: [\n        ThumbnailService\n    ]\n})\nexport class IconModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EcmCompanyModel {\n      organization: string;\n      address1: string;\n      address2: string;\n      address3: string;\n      postcode: string;\n      telephone: string;\n      fax: string;\n      email: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the user redirection guard.*\n */\n\nexport class RedirectionModel {\n    provider: string;\n    url?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.provider = obj.provider;\n            this.url = obj.url || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class PaginationModel extends Pagination {\n    merge?: boolean;\n\n    constructor(input?: any) {\n        super(input);\n        if (input) {\n            this.count = input.count;\n            this.hasMoreItems = input.hasMoreItems ? input.hasMoreItems : false;\n            this.merge = input.merge ? input.merge : false;\n            this.totalItems = input.totalItems;\n            this.skipCount = input.skipCount;\n            this.maxItems = input.maxItems;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RequestPaginationModel {\n\n    skipCount?: number;\n\n    maxItems?: number;\n\n    merge?: boolean = false;\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:adf-file-name  */\nexport class AlfrescoApiMock {\n\n    login(username: string, password: string) {\n        return new Promise((resolve) => {\n            resolve('TICKET_4479f4d3bb155195879bfbb8d5206f433488a1b1');\n        });\n    }\n\n    logout() {\n        return new Promise((resolve) => {\n            resolve('logout');\n        });\n    }\n\n    changeConfig() {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AppConfigServiceMock extends AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent'\n    };\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    load(): Promise<any> {\n        return new Promise((resolve) => {\n            this.onLoadSubject.next(this.config);\n            resolve(this.config);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeApps = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, defaultAppId: null, name: 'Sales-Fakes-App', description: 'desc-fake1', modelId: 22,\n            theme: 'theme-1-fake', icon: 'glyphicon-asterisk', 'deploymentId': '111', 'tenantId': null\n        },\n        {\n            id: 2, defaultAppId: null, name: 'health-care-Fake', description: 'desc-fake2', modelId: 33,\n            theme: 'theme-2-fake', icon: 'glyphicon-asterisk', 'deploymentId': '444', 'tenantId': null\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { RedirectionModel } from '../models/redirection.model';\n\n// TODO: should be extending AuthenticationService\nexport class AuthenticationMock /*extends AuthenticationService*/ {\n    private redirectUrl: RedirectionModel = null;\n\n    setRedirectUrl(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string|null {\n        return this.redirectUrl ? this.redirectUrl.url : null;\n    }\n\n    // TODO: real auth service returns Observable<string>\n    login(username: string, password: string): Observable<{ type: string, ticket: any }> {\n        if (username === 'fake-username' && password === 'fake-password') {\n            return of({ type: 'type', ticket: 'ticket'});\n        }\n\n        if (username === 'fake-username-CORS-error' && password === 'fake-password') {\n            return throwError({\n                error: {\n                    crossDomain: true,\n                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'\n                }\n            });\n        }\n\n        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: Invalid CSRF-token', status: 403});\n        }\n\n        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403});\n        }\n\n        return throwError('Fake server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeBpmUserNoImage = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: undefined,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmUser = {\n    apps: [],\n    capabilities: null,\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-bpm-first-name',\n    lastName: 'fake-bpm-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 12,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmEditedUser = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 'src/assets/images/bpmImg.gif',\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\n\nexport let fakeUser1 = { id: 1, email: 'fake-email@dom.com', firstName: 'firstName', lastName: 'lastName' };\n\nexport let fakeUser2 = { id: 1001, email: 'some-one@somegroup.com', firstName: 'some', lastName: 'one' };\n\nexport let fakeTasksComment = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, message: 'fake-message-1', created: '', createdBy: fakeUser1\n        },\n        {\n            id: 2, message: 'fake-message-2', created: '', createdBy: fakeUser1\n        }\n    ]\n};\n\nexport let fakeProcessComment = new CommentModel({id: 1, message: 'Test', created: new Date('2016-11-10T03:37:30.010+0000'), createdBy: new UserProcessModel({\n    id: 13,\n    firstName: 'Wilbur',\n    lastName: 'Adams',\n    email: 'wilbur@app.com'\n})});\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CookieService } from '../services/cookie.service';\n\nexport class CookieServiceMock extends CookieService {\n\n    /** @override */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getItem(key: string): string | null {\n        return this[key] && this[key].data || null;\n    }\n\n    /** @override */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        this[key] = {data, expiration, path};\n    }\n\n    /** @override */\n    clear() {\n        Object.keys(this).forEach((key) => {\n            if (this.hasOwnProperty(key) && typeof(this[key]) !== 'function') {\n                this[key] = undefined;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EcmCompanyModel } from '../models/ecm-company.model';\n\nexport let fakeEcmCompany: EcmCompanyModel = {\n    organization: 'company-fake-name',\n    address1: 'fake-address-1',\n    address2: 'fake-address-2',\n    address3: 'fake-address-3',\n    postcode: 'fAk1',\n    telephone: '00000000',\n    fax: '11111111',\n    email: 'fakeCompany@fake.com'\n};\n\nexport let fakeEcmUser = {\n    id: 'fake-id',\n    firstName: 'fake-ecm-first-name',\n    lastName: 'fake-ecm-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'job-ecm-test',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmUserNoImage = {\n    id: 'fake-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: null,\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: null,\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmEditedUser = {\n    id: 'fake-id',\n    firstName: null,\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'test job',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EventMock {\n\n    static keyDown(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keydown');\n        document.dispatchEvent(event);\n    }\n\n    static keyUp(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keyup');\n        document.dispatchEvent(event);\n    }\n\n    static resizeMobileView() {\n        // todo: no longer compiles with TS 2.0.2 as innerWidth/innerHeight are readonly fields\n        /*\n        window.innerWidth = 320;\n        window.innerHeight = 568;\n        */\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeRendition = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'NOT_CREATED'\n    }\n};\n\nexport let fakeRenditionCreated = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'CREATED'\n    }\n};\n\nexport let fakeRenditionsList = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            }\n        ]\n    }\n};\n\nexport let fakeRenditionsListWithACreated = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'CREATED'\n                }\n            }\n        ]\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeSearch = {\n    list: {\n        pagination: {\n            count: 1,\n            hasMoreItems: false,\n            totalItems: 1,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: '123',\n                    name: 'MyDoc',\n                    content: {\n                        mimetype: 'text/plain'\n                    },\n                    createdByUser: {\n                        displayName: 'John Doe'\n                    },\n                    modifiedByUser: {\n                        displayName: 'John Doe'\n                    }\n                }\n            }\n        ]\n    }\n};\n\nexport let mockError = {\n    error: {\n        errorKey: 'Search failed',\n        statusCode: 400,\n        briefSummary: '08220082 search failed',\n        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',\n        descriptionURL: 'https://api-explorer.alfresco.com'\n    }\n};\n\nexport let searchMockApi = {\n    core: {\n        queriesApi: {\n            findNodes: (term, opts) => Promise.resolve(fakeSearch)\n        }\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationService } from '../services/translation.service';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport class TranslationMock implements TranslationService {\n\n    defaultLang: string = 'en';\n    userLang: string;\n    customLoader: any;\n\n    translate: any = {\n        onLangChange: new EventEmitter<LangChangeEvent>()\n    };\n\n    addTranslationFolder() {}\n\n    onTranslationChanged() {}\n\n    use(): any {}\n\n    loadTranslation() {}\n\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return of(key);\n    }\n\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\n\n/* tslint:disable:adf-file-name */\n@Injectable()\nexport class AlfrescoApiServiceMock extends AlfrescoApiService {\n\n    constructor(protected appConfig: AppConfigService) {\n        super(appConfig);\n        if (!this.alfrescoApi) {\n            this.initAlfrescoApi();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeForm = {\n    id: 1001,\n    name: 'ISSUE_FORM',\n    processDefinitionId: 'ISSUE_APP:1:2504',\n    processDefinitionName: 'ISSUE_APP',\n    processDefinitionKey: 'ISSUE_APP',\n    taskId: '7506',\n    taskDefinitionKey: 'sid-F67A2996-1684-4774-855A-4591490081FD',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212398417',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'label',\n                        name: 'Label',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'test1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'test2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'test3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio',\n                        name: 'radio',\n                        type: 'radio-buttons',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: [\n                            {\n                                id: 'option_1',\n                                name: 'Option 1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'Option 2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'Option 3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 2,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212413062',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefinitionTwoTextFields = {\n    id: 20,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:1:153',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '159',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507044399260',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'firstname',\n                        name: 'firstName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'lastname',\n                        name: 'lastName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionDropdownField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionRequiredField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formReadonlyTwoTextFields = {\n    id: 22,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:3:182',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '188',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n      {\n        fieldType: 'ContainerRepresentation',\n        id: '1507044399260',\n        name: 'Label',\n        type: 'container',\n        value: null,\n        required: false,\n        readOnly: false,\n        overrideId: false,\n        colspan: 1,\n        placeholder: null,\n        minLength: 0,\n        maxLength: 0,\n        minValue: null,\n        maxValue: null,\n        regexPattern: null,\n        optionType: null,\n        hasEmptyValue: null,\n        options: null,\n        restUrl: null,\n        restResponsePath: null,\n        restIdProperty: null,\n        restLabelProperty: null,\n        tab: null,\n        className: null,\n        dateDisplayFormat: null,\n        layout: null,\n        sizeX: 2,\n        sizeY: 1,\n        row: -1,\n        col: -1,\n        visibilityCondition: null,\n        numberOfColumns: 2,\n        fields: {\n          '1': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'firstname',\n              name: 'firstName',\n              type: 'readonly',\n              value: 'fakeFirstName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 2,\n                field: {\n                  id: 'firstname',\n                  name: 'firstName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ],\n          '2': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'lastname',\n              name: 'lastName',\n              type: 'readonly',\n              value: 'fakeLastName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 1,\n                field: {\n                  id: 'lastname',\n                  name: 'lastName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ]\n        }\n      }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefVisibilitiFieldDependsOnNextOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefVisibilitiFieldDependsOnPreviousOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let startFormDateWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormNumberWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'number',\n                        name: 'number widget',\n                        type: 'integer',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormAmountWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'amount',\n                        name: 'amount widget',\n                        type: 'amount',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormRadioButtonWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio-but',\n                        name: 'radio-buttons',\n                        type: 'radio-buttons',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormTextDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'mocktext',\n                        name: 'mockText',\n                        type: 'text',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormDropdownDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'mockTypeDropDown',\n                        name: 'mock DropDown',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'opt1',\n                                name: 'Option-1'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-2'\n                            },\n                            {\n                                id: 'opt3',\n                                name: 'Option-3'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-3'\n                            }\n                        ]\n                    }]}\n        }]\n};\n\nexport let startMockForm = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        },\n        {\n            id: 'start_process',\n            name: 'Start Process'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n\nexport let startMockFormWithTab = {\n    id: 4,\n    taskName: 'Mock Title',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [\n        {\n            id: 'form1',\n            name: 'Tab 1'\n        },\n        {\n            id: 'form2',\n            name: 'Tab 2'\n        }\n    ],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formModelTabs = {\n    id: 16,\n    name: 'start event',\n    description: '',\n    version: 2,\n    lastUpdatedBy: 4,\n    lastUpdatedByFullName: 'User Test',\n    lastUpdated: '2017-10-04T13:00:03.030+0000',\n    stencilSetId: null,\n    referenceId: null,\n    formDefinition: {\n      tabs: [],\n      fields: [\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037668653',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'AmountFieldRepresentation',\n                id: 'label',\n                name: 'Label',\n                type: 'amount',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null,\n                enableFractions: false,\n                currency: null\n              }\n            ],\n            '2': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label1',\n                name: 'Label1',\n                type: 'date',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 1\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ]\n          }\n        },\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037670167',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label2',\n                name: 'Label2',\n                type: 'boolean',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ],\n            '2': []\n          }\n        }\n      ],\n      outcomes: [],\n      javascriptEvents: [],\n      className: '',\n      style: '',\n      customFieldTemplates: {},\n      metadata: {},\n      variables: [],\n      customFieldsValueInfo: {},\n      gridsterForm: false\n    }\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel, FormValues } from '../../form/components/widgets/core/index';\n\nexport let formTest = new FormModel({});\n\nexport let fakeTaskProcessVariableModels = [\n    {id: 'TEST_VAR_1', type: 'string', value: 'test_value_1'},\n    {id: 'TEST_VAR_2', type: 'string', value: 'test_value_2'},\n    {id: 'TEST_VAR_3', type: 'string', value: 'test_value_3'}\n];\n\nexport let formValues: FormValues = {\n    'test_1': 'value_1',\n    'test_2': 'value_2',\n    'test_3': 'value_1',\n    'test_4': 'dropdown_id',\n    'test_5': 'dropdown_label',\n    'dropdown': {'id': 'dropdown_id', 'name': 'dropdown_label'}\n};\n\nexport let fakeFormJson = {\n    id: '9999',\n    name: 'FORM_VISIBILITY',\n    processDefinitionId: 'PROCESS_TEST:9:9999',\n    processDefinitionName: 'PROCESS_TEST',\n    processDefinitionKey: 'PROCESS_TEST',\n    taskId: '999',\n    taskName: 'TEST',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '000000000000000000',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_TEST',\n                        name: 'FIELD_TEST',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_WITH_CONDITION',\n                        name: 'FIELD_WITH_CONDITION',\n                        type: 'text',\n                        value: 'field_with_condition_value',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'LEFT_FORM_FIELD_ID',\n                        name: 'LEFT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'LEFT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'RIGHT_FORM_FIELD_ID',\n                        name: 'RIGHT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ]\n            }\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let mockToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ' +\n    'zdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJnaXZ' +\n    'lbl9uYW1lIjoiSm9obiIsImFkbWluIjp0cnVlLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwicHJ' +\n    'lZmVycmVkX3VzZXJuYW1lIjoiam9obkRvZTEiLCJqdGkiOiI2MmQ3YjA4NS1hNTJjLTRjZmEtYjA2Zi1' +\n    'hODFhN2IwNjRjZDIiLCJpYXQiOjE1NDM0MTA0NzcsImV4cCI6MTU0MzQxNTIxM30.pSP86kmX3keuU5E3ndaOUq2TzKdJRsuMnBdFz3Y-UEU';\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TestBed, TestModuleMetadata } from '@angular/core/testing';\n\ninterface DoneFn extends Function {\n    (): void;\n    fail: (message?: Error | string) => void;\n}\n\ndeclare function beforeAll(action: (done: DoneFn) => void, timeout?: number): void;\ndeclare function afterAll(action: (done: DoneFn) => void, timeout?: number): void;\n\nconst resetTestingModule = TestBed.resetTestingModule;\nconst preventAngularFromResetting = () => (TestBed.resetTestingModule = () => TestBed);\nconst allowAngularToReset = () => (TestBed.resetTestingModule = resetTestingModule);\n\nexport const setupTestBed = (moduleDef: TestModuleMetadata) => {\n    beforeAll((done) =>\n        (async () => {\n            localStorage.clear();\n            sessionStorage.clear();\n            resetTestingModule();\n            preventAngularFromResetting();\n            TestBed.configureTestingModule(moduleDef);\n            await TestBed.compileComponents();\n\n            // prevent Angular from resetting testing module\n            TestBed.resetTestingModule = () => TestBed;\n        })()\n            .then(done)\n            .catch(done.fail)\n    );\n\n    afterAll(() => allowAngularToReset());\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport function startupServiceFactory(alfrescoApiService: AlfrescoApiService): Function {\n    return () => alfrescoApiService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader, TranslateStore, TranslateService } from '@ngx-translate/core';\n\nimport { MaterialModule } from './material.module';\nimport { AboutModule } from './about/about.module';\nimport { AppConfigModule } from './app-config/app-config.module';\nimport { CardViewModule } from './card-view/card-view.module';\nimport { ContextMenuModule } from './context-menu/context-menu.module';\nimport { DataColumnModule } from './data-column/data-column.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { InfoDrawerModule } from './info-drawer/info-drawer.module';\nimport { LanguageMenuModule } from './language-menu/language-menu.module';\nimport { LoginModule } from './login/login.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { HostSettingsModule } from './settings/host-settings.module';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { UserInfoModule } from './userinfo/userinfo.module';\nimport { ViewerModule } from './viewer/viewer.module';\nimport { FormBaseModule } from './form/form-base.module';\nimport { SidenavLayoutModule } from './layout/layout.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { ButtonsMenuModule } from './buttons-menu/buttons-menu.module';\nimport { TemplateModule } from './templates/template.module';\nimport { ClipboardModule } from './clipboard/clipboard.module';\n\nimport { DirectiveModule } from './directives/directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { PipeModule } from './pipes/pipe.module';\n\nimport { AlfrescoApiService } from './services/alfresco-api.service';\nimport { TranslationService } from './services/translation.service';\nimport { startupServiceFactory } from './services/startup-service-factory';\nimport { SortingPickerModule } from './sorting-picker/sorting-picker.module';\nimport { IconModule } from './icon/icon.module';\nimport { TranslateLoaderService } from './services/translate-loader.service';\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\n\n@NgModule({\n    imports: [\n        TranslateModule,\n        ExtensionsModule.forChild(),\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        IconModule,\n        SortingPickerModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule,\n        IconModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                TranslateStore,\n                TranslateService,\n                { provide: TranslateLoader, useClass: TranslateLoaderService },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: startupServiceFactory,\n                    deps: [\n                        AlfrescoApiService\n                    ],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule\n        };\n    }\n\n    constructor(translation: TranslationService) {\n        translation.addTranslationFolder('adf-core', 'assets/adf-core');\n    }\n}\n"],"names":["Subject","map","distinctUntilChanged","Injectable","HttpClient","AlfrescoApiConfig","AlfrescoApiCompatibility","tslib_1.__extends","from","catchError","tap","throwError","Observable","HttpHeaders","moment","isMoment","DateAdapter","Component","ViewEncapsulation","AppExtensionService","Input","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatNativeDateModule","MatOptionModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatMenuModule","MatProgressBarModule","MatSidenavModule","MatSnackBarModule","MatToolbarModule","MatTooltipModule","MatDatetimepickerModule","MatNativeDatetimeModule","MatExpansionModule","NgModule","ViewportRuler","OverlayContainer","Renderer2","ViewChild","MatMenuTrigger","HostListener","InjectionToken","state","style","transition","sequence","query","animate","group","UP_ARROW","DOWN_ARROW","FocusKeyManager","trigger","Inject","Optional","ViewChildren","MatMenuItem","ComponentPortal","PortalInjector","ElementRef","OverlayConfig","Injector","Overlay","Directive","CommonModule","TranslateModule","BehaviorSubject","TranslateService","tslib_1.__values","Pipe","DomSanitizer","MatIconRegistry","Router","EventEmitter","forkJoin","of","Output","ChangeDetectorRef","Host","mergeMap","NgZone","MatDialogRef","MAT_DIALOG_DATA","MatDialog","ChangeDetectionStrategy","ContentChild","TemplateRef","ContentChildren","share","buffer","debounceTime","filter","IterableDiffers","MatSnackBar","DOCUMENT","ViewContainerRef","ComponentFactoryResolver","RouterModule","NavigationEnd","Location","FormControl","Validators","ExtensionsModule","FormsModule","ReactiveFormsModule","FlexLayoutModule","switchMap","ENTER","FormBuilder","Pagination","HostBinding","ActivatedRoute","MAT_MOMENT_DATETIME_FORMATS","MAT_DATE_FORMATS","DatetimeAdapter","MomentDatetimeAdapter","MAT_DATETIME_FORMATS","MatTableDataSource","HttpClientModule","FormSaveRepresentation","forms","combineAll","defaultIfEmpty","ESCAPE","NG_VALUE_ACCESSOR","forwardRef","Compiler","MediaMatcher","MatSidenav","Title","empty","concatMap","interval","takeWhile","retry","Minimatch","TestBed","TranslateStore","TranslateLoader","APP_INITIALIZER","SidenavLayoutModule"],"mappings":"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"}
