{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-core/utils/object-utils.ts","ng://@alfresco/adf-core/app-config/app-config.service.ts","ng://@alfresco/adf-core/services/alfresco-api.service.ts","ng://@alfresco/adf-core/services/cookie.service.ts","ng://@alfresco/adf-core/models/log-levels.model.ts","ng://@alfresco/adf-core/services/log.service.ts","ng://@alfresco/adf-core/services/authentication.service.ts","ng://@alfresco/adf-core/models/product-version.model.ts","ng://@alfresco/adf-core/services/discovery-api.service.ts","ng://@alfresco/adf-core/utils/file-utils.ts","ng://@alfresco/adf-core/utils/moment-date-formats.model.ts","ng://@alfresco/adf-core/utils/momentDateAdapter.ts","ng://@alfresco/adf-core/datatable/data/object-datarow.model.ts","ng://@alfresco/adf-core/datatable/data/object-datacolumn.model.ts","ng://@alfresco/adf-core/datatable/data/data-sorting.model.ts","ng://@alfresco/adf-core/datatable/data/object-datatable-adapter.ts","ng://@alfresco/adf-core/about/about.component.ts","ng://@alfresco/adf-core/material.module.ts","ng://@alfresco/adf-core/context-menu/context-menu.service.ts","ng://@alfresco/adf-core/context-menu/context-menu-holder.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.ts","ng://@alfresco/adf-core/context-menu/context-menu.tokens.ts","ng://@alfresco/adf-core/context-menu/animations.ts","ng://@alfresco/adf-core/context-menu/context-menu-list.component.ts","ng://@alfresco/adf-core/context-menu/context-menu-overlay.service.ts","ng://@alfresco/adf-core/context-menu/context-menu.directive.ts","ng://@alfresco/adf-core/context-menu/context-menu.module.ts","ng://@alfresco/adf-core/services/storage.service.ts","ng://@alfresco/adf-core/services/user-preferences.service.ts","ng://@alfresco/adf-core/services/translation.service.ts","ng://@alfresco/adf-core/pipes/file-size.pipe.ts","ng://@alfresco/adf-core/models/permissions.enum.ts","ng://@alfresco/adf-core/models/allowable-operations.enum.ts","ng://@alfresco/adf-core/services/content.service.ts","ng://@alfresco/adf-core/services/thumbnail.service.ts","ng://@alfresco/adf-core/pipes/mime-type-icon.pipe.ts","ng://@alfresco/adf-core/pipes/node-name-tooltip.pipe.ts","ng://@alfresco/adf-core/services/highlight-transform.service.ts","ng://@alfresco/adf-core/pipes/text-highlight.pipe.ts","ng://@alfresco/adf-core/pipes/time-ago.pipe.ts","ng://@alfresco/adf-core/pipes/user-initial.pipe.ts","ng://@alfresco/adf-core/pipes/full-name.pipe.ts","ng://@alfresco/adf-core/pipes/format-space.pipe.ts","ng://@alfresco/adf-core/pipes/file-type.pipe.ts","ng://@alfresco/adf-core/pipes/multi-value.pipe.ts","ng://@alfresco/adf-core/pipes/pipe.module.ts","ng://@alfresco/adf-core/directives/highlight.directive.ts","ng://@alfresco/adf-core/directives/logout.directive.ts","ng://@alfresco/adf-core/directives/node-delete.directive.ts","ng://@alfresco/adf-core/directives/node-favorite.directive.ts","ng://@alfresco/adf-core/interface/injection.tokens.ts","ng://@alfresco/adf-core/directives/check-allowable-operation.directive.ts","ng://@alfresco/adf-core/directives/node-restore.directive.ts","ng://@alfresco/adf-core/directives/upload.directive.ts","ng://@alfresco/adf-core/services/download-zip.service.ts","ng://@alfresco/adf-core/dialogs/download-zip.dialog.ts","ng://@alfresco/adf-core/directives/node-download.directive.ts","ng://@alfresco/adf-core/directives/directive.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable-cell.component.ts","ng://@alfresco/adf-core/data-column/data-column.component.ts","ng://@alfresco/adf-core/data-column/data-column-list.component.ts","ng://@alfresco/adf-core/events/base.event.ts","ng://@alfresco/adf-core/events/base-ui.event.ts","ng://@alfresco/adf-core/models/file.model.ts","ng://@alfresco/adf-core/events/file.event.ts","ng://@alfresco/adf-core/datatable/data/data-row-event.model.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-cell.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/data-row-action.event.ts","ng://@alfresco/adf-core/datatable/components/datatable/datatable.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/date-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/empty-list.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/filesize-cell.component.ts","ng://@alfresco/adf-core/datatable/components/datatable/location-cell.component.ts","ng://@alfresco/adf-core/datatable/directives/loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-empty-content-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-loading-template.directive.ts","ng://@alfresco/adf-core/datatable/directives/custom-no-permission-template.directive.ts","ng://@alfresco/adf-core/datatable/components/datatable/json-cell.component.ts","ng://@alfresco/adf-core/services/notification.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.service.ts","ng://@alfresco/adf-core/clipboard/clipboard.directive.ts","ng://@alfresco/adf-core/clipboard/clipboard.module.ts","ng://@alfresco/adf-core/datatable/components/datatable/drop-zone.directive.ts","ng://@alfresco/adf-core/datatable/datatable.module.ts","ng://@alfresco/adf-core/data-column/data-column.module.ts","ng://@alfresco/adf-core/about/about.module.ts","ng://@alfresco/adf-core/viewer/services/view-util.service.ts","ng://@alfresco/adf-core/services/previous-route.service.ts","ng://@alfresco/adf-core/viewer/components/viewer-more-actions.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-open-with.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-sidebar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar.component.ts","ng://@alfresco/adf-core/viewer/components/viewer.component.ts","ng://@alfresco/adf-core/viewer/components/imgViewer.component.ts","ng://@alfresco/adf-core/viewer/components/mediaPlayer.component.ts","ng://@alfresco/adf-core/viewer/services/rendering-queue.services.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-password-dialog.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumbnails.component.ts","ng://@alfresco/adf-core/viewer/components/pdfViewer-thumb.component.ts","ng://@alfresco/adf-core/viewer/components/txtViewer.component.ts","ng://@alfresco/adf-core/viewer/components/unknown-format/unknown-format.component.ts","ng://@alfresco/adf-core/viewer/components/viewer-toolbar-actions.component.ts","ng://@alfresco/adf-core/viewer/directives/viewer-extension.directive.ts","ng://@alfresco/adf-core/toolbar/toolbar-divider.component.ts","ng://@alfresco/adf-core/toolbar/toolbar-title.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.component.ts","ng://@alfresco/adf-core/toolbar/toolbar.module.ts","ng://@alfresco/adf-core/viewer/viewer.module.ts","ng://@alfresco/adf-core/userinfo/models/bpm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/bpm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/ecm-user.model.ts","ng://@alfresco/adf-core/userinfo/services/ecm-user.service.ts","ng://@alfresco/adf-core/userinfo/models/identity-user.model.ts","ng://@alfresco/adf-core/services/jwt-helper.service.ts","ng://@alfresco/adf-core/userinfo/services/identity-user.service.ts","ng://@alfresco/adf-core/userinfo/components/user-info.component.ts","ng://@alfresco/adf-core/userinfo/models/identity-role.model.ts","ng://@alfresco/adf-core/userinfo/userinfo.module.ts","ng://@alfresco/adf-core/settings/host-settings.component.ts","ng://@alfresco/adf-core/settings/host-settings.module.ts","ng://@alfresco/adf-core/pagination/pagination.component.ts","ng://@alfresco/adf-core/pagination/infinite-pagination.component.ts","ng://@alfresco/adf-core/pagination/pagination.module.ts","ng://@alfresco/adf-core/login/models/login-error.event.ts","ng://@alfresco/adf-core/login/models/login-submit.event.ts","ng://@alfresco/adf-core/login/models/login-success.event.ts","ng://@alfresco/adf-core/login/components/login.component.ts","ng://@alfresco/adf-core/login/directives/login-header.directive.ts","ng://@alfresco/adf-core/login/directives/login-footer.directive.ts","ng://@alfresco/adf-core/login/components/login-dialog.component.ts","ng://@alfresco/adf-core/login/components/login-dialog-panel.component.ts","ng://@alfresco/adf-core/login/login.module.ts","ng://@alfresco/adf-core/language-menu/language-menu.component.ts","ng://@alfresco/adf-core/language-menu/language-menu.module.ts","ng://@alfresco/adf-core/info-drawer/info-drawer-layout.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.component.ts","ng://@alfresco/adf-core/info-drawer/info-drawer.module.ts","ng://@alfresco/adf-core/datatable/data/data-table.schema.ts","ng://@alfresco/adf-core/card-view/components/card-view/card-view.component.ts","ng://@alfresco/adf-core/card-view/services/card-view-update.service.ts","ng://@alfresco/adf-core/card-view/components/card-view-boolitem/card-view-boolitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-dateitem/card-view-dateitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-mapitem/card-view-mapitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-textitem/card-view-textitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-selectitem/card-view-selectitem.component.ts","ng://@alfresco/adf-core/card-view/components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component.ts","ng://@alfresco/adf-core/services/get-type.ts","ng://@alfresco/adf-core/services/dynamic-component-mapper.service.ts","ng://@alfresco/adf-core/card-view/services/card-item-types.service.ts","ng://@alfresco/adf-core/card-view/directives/card-view-content-proxy.directive.ts","ng://@alfresco/adf-core/card-view/components/card-view-item-dispatcher/card-view-item-dispatcher.component.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-int.validator.ts","ng://@alfresco/adf-core/card-view/validators/card-view-item-float.validator.ts","ng://@alfresco/adf-core/card-view/models/card-view-baseitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-boolitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-dateitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-datetimeitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-textitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-floatitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-intitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-mapitem.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-keyvaluepairs.model.ts","ng://@alfresco/adf-core/card-view/models/card-view-selectitem.model.ts","ng://@alfresco/adf-core/card-view/card-view.module.ts","ng://@alfresco/adf-core/app-config/debug-app-config.service.ts","ng://@alfresco/adf-core/app-config/app-config.pipe.ts","ng://@alfresco/adf-core/app-config/app-config.module.ts","ng://@alfresco/adf-core/form/models/form-definition.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-types.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/container-column.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/error-message.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field-validator.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-field.model.ts","ng://@alfresco/adf-core/form/events/form.event.ts","ng://@alfresco/adf-core/form/events/form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form-field.event.ts","ng://@alfresco/adf-core/form/events/validate-form.event.ts","ng://@alfresco/adf-core/form/components/widgets/core/container.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/tab.model.ts","ng://@alfresco/adf-core/form/components/form-base.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/form-outcome-event.model.ts","ng://@alfresco/adf-core/form/components/widgets/core/content-link.model.ts","ng://@alfresco/adf-core/form/services/ecm-model.service.ts","ng://@alfresco/adf-core/form/services/form.service.ts","ng://@alfresco/adf-core/form/components/widgets/widget.component.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/container/container.widget.ts","ng://@alfresco/adf-core/form/components/widgets/tabs/tabs.widget.ts","ng://@alfresco/adf-core/form/components/widgets/unknown/unknown.widget.ts","ng://@alfresco/adf-core/form/components/widgets/amount/amount.widget.ts","ng://@alfresco/adf-core/form/components/widgets/checkbox/checkbox.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date/date.widget.ts","ng://@alfresco/adf-core/form/components/widgets/display-text/display-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/document/document.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dropdown/dropdown.widget.ts","ng://@alfresco/adf-core/form/services/widget-visibility.service.ts","ng://@alfresco/adf-core/form/events/validate-dynamic-table-row.event.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/date-cell-validator-model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-row-validation-summary.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/number-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/required-cell-validator.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.model.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/dynamic-table.widget.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/boolean/boolean.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/date/date.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/datetime/datetime.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/dropdown/dropdown.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/row.editor.ts","ng://@alfresco/adf-core/form/components/widgets/dynamic-table/editors/text/text.editor.ts","ng://@alfresco/adf-core/form/components/widgets/error/error.component.ts","ng://@alfresco/adf-core/form/components/widgets/functional-group/functional-group.widget.ts","ng://@alfresco/adf-core/form/components/widgets/hyperlink/hyperlink.widget.ts","ng://@alfresco/adf-core/form/components/widgets/multiline-text/multiline-text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/number/number.widget.ts","ng://@alfresco/adf-core/services/people-process.service.ts","ng://@alfresco/adf-core/form/components/widgets/people/people.widget.ts","ng://@alfresco/adf-core/form/components/widgets/radio-buttons/radio-buttons.widget.ts","ng://@alfresco/adf-core/form/components/widgets/text/text-mask.component.ts","ng://@alfresco/adf-core/form/components/widgets/text/text.widget.ts","ng://@alfresco/adf-core/form/components/widgets/typeahead/typeahead.widget.ts","ng://@alfresco/adf-core/form/services/process-content.service.ts","ng://@alfresco/adf-core/form/components/widgets/upload/upload.widget.ts","ng://@alfresco/adf-core/form/components/widgets/date-time/date-time.widget.ts","ng://@alfresco/adf-core/form/components/widgets/index.ts","ng://@alfresco/adf-core/form/components/form-base.component.ts","ng://@alfresco/adf-core/form/components/form-list.component.ts","ng://@alfresco/adf-core/form/components/widgets/content/content.widget.ts","ng://@alfresco/adf-core/form/components/form-renderer.component.ts","ng://@alfresco/adf-core/form/services/activiti-alfresco.service.ts","ng://@alfresco/adf-core/form/services/form-rendering.service.ts","ng://@alfresco/adf-core/form/models/node-metadata.model.ts","ng://@alfresco/adf-core/form/services/node.service.ts","ng://@alfresco/adf-core/form/events/form-error.event.ts","ng://@alfresco/adf-core/form/components/form-custom-button.directive.ts","ng://@alfresco/adf-core/form/components/form-field/form-field.component.ts","ng://@alfresco/adf-core/form/form-base.module.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-content.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-header.directive.ts","ng://@alfresco/adf-core/layout/directives/sidenav-layout-navigation.directive.ts","ng://@alfresco/adf-core/layout/components/sidenav-layout/sidenav-layout.component.ts","ng://@alfresco/adf-core/layout/helpers/animations.ts","ng://@alfresco/adf-core/layout/components/layout-container/layout-container.component.ts","ng://@alfresco/adf-core/layout/components/sidebar-action/sidebar-action-menu.component.ts","ng://@alfresco/adf-core/layout/components/header/header.component.ts","ng://@alfresco/adf-core/layout/layout.module.ts","ng://@alfresco/adf-core/comments/comment-list.component.ts","ng://@alfresco/adf-core/models/comment.model.ts","ng://@alfresco/adf-core/models/user-process.model.ts","ng://@alfresco/adf-core/services/comment-process.service.ts","ng://@alfresco/adf-core/services/comment-content.service.ts","ng://@alfresco/adf-core/comments/comments.component.ts","ng://@alfresco/adf-core/comments/comments.module.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.component.ts","ng://@alfresco/adf-core/buttons-menu/buttons-menu.module.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.component.ts","ng://@alfresco/adf-core/sorting-picker/sorting-picker.module.ts","ng://@alfresco/adf-core/templates/error-content/error-content.component.ts","ng://@alfresco/adf-core/templates/empty-content/empty-content.component.ts","ng://@alfresco/adf-core/templates/template.module.ts","ng://@alfresco/adf-core/services/auth-guard-base.ts","ng://@alfresco/adf-core/services/auth-guard.service.ts","ng://@alfresco/adf-core/services/auth-guard-ecm.service.ts","ng://@alfresco/adf-core/services/auth-guard-bpm.service.ts","ng://@alfresco/adf-core/services/auth-guard-sso-role.service.ts","ng://@alfresco/adf-core/services/apps-process.service.ts","ng://@alfresco/adf-core/services/page-title.service.ts","ng://@alfresco/adf-core/services/renditions.service.ts","ng://@alfresco/adf-core/models/component.model.ts","ng://@alfresco/adf-core/services/translate-loader.service.ts","ng://@alfresco/adf-core/services/upload.service.ts","ng://@alfresco/adf-core/services/deleted-nodes-api.service.ts","ng://@alfresco/adf-core/services/favorites-api.service.ts","ng://@alfresco/adf-core/services/nodes-api.service.ts","ng://@alfresco/adf-core/services/people-content.service.ts","ng://@alfresco/adf-core/services/search-configuration.service.ts","ng://@alfresco/adf-core/services/search.service.ts","ng://@alfresco/adf-core/services/shared-links-api.service.ts","ng://@alfresco/adf-core/services/sites.service.ts","ng://@alfresco/adf-core/services/login-dialog.service.ts","ng://@alfresco/adf-core/services/external-alfresco-api.service.ts","ng://@alfresco/adf-core/services/lock.service.ts","ng://@alfresco/adf-core/services/automation.service.ts","ng://@alfresco/adf-core/dialogs/dialog.module.ts","ng://@alfresco/adf-core/icon/icon.component.ts","ng://@alfresco/adf-core/icon/icon.module.ts","ng://@alfresco/adf-core/models/ecm-company.model.ts","ng://@alfresco/adf-core/models/redirection.model.ts","ng://@alfresco/adf-core/models/pagination.model.ts","ng://@alfresco/adf-core/models/request-pagination.model.ts","ng://@alfresco/adf-core/mock/AlfrescoApi.mock.ts","ng://@alfresco/adf-core/mock/app-config.service.mock.ts","ng://@alfresco/adf-core/mock/authentication.service.mock.ts","ng://@alfresco/adf-core/mock/bpm-user.service.mock.ts","ng://@alfresco/adf-core/mock/comment-process-service.mock.ts","ng://@alfresco/adf-core/mock/cookie.service.mock.ts","ng://@alfresco/adf-core/mock/event.mock.ts","ng://@alfresco/adf-core/mock/search.service.mock.ts","ng://@alfresco/adf-core/mock/translation.service.mock.ts","ng://@alfresco/adf-core/mock/alfresco-api.service.mock.ts","ng://@alfresco/adf-core/mock/form/widget-visibility.service.mock.ts","ng://@alfresco/adf-core/testing/setupTestBed.ts","ng://@alfresco/adf-core/services/startup-service-factory.ts","ng://@alfresco/adf-core/core.module.ts","ng://@alfresco/adf-core/mock/apps-service.mock.ts","ng://@alfresco/adf-core/mock/ecm-user.service.mock.ts","ng://@alfresco/adf-core/mock/renditionsService.mock.ts","ng://@alfresco/adf-core/mock/form/form.component.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinition.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionReadonly.mock.ts","ng://@alfresco/adf-core/mock/form/formDefinitionVisibility.mock.ts","ng://@alfresco/adf-core/mock/form/start-form.component.mock.ts","ng://@alfresco/adf-core/mock/form/form.service.mock.ts","ng://@alfresco/adf-core/mock/jwt-helper.service.spec.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","ObjectUtils","getValue","target","key","undefined","keys","split","shift","merge","objects","_i","forEach","source","prop","isArray","APP_CONFIG_LANGUAGES_KEY","PROVIDERS","OAUTHCONFIG","ECMHOST","BASESHAREURL","BPMHOST","IDENTITY_HOST","AUTHTYPE","CONTEXTROOTECM","CONTEXTROOTBPM","ALFRESCO_REPOSITORY_NAME","LOG_LEVEL","LOGIN_ROUTE","DISABLECSRF","AUTH_WITH_CREDENTIALS","APPLICATION","NOTIFY_DURATION","INIT","LOADING","LOADED","AppConfigService","http","config","application","name","ecmHost","bpmHost","logLevel","alfrescoRepositoryName","status","Status","onLoadSubject","Subject","onLoad","asObservable","select","property","pipe","map","distinctUntilChanged","get","defaultValue","keywords","Map","set","getLocationHostname","getLocationPort","getLocationProtocol","formatString","location","protocol","hostname","prefix","port","load","_this","configUrl","Date","now","subscribe","data","_a","str","expr","RegExp","replace","Injectable","args","providedIn","HttpClient","AlfrescoApiService","appConfig","nodeUpdated","getInstance","alfrescoApi","defineProperty","activiti","taskApi","content","nodes","core","renditionsApi","sharedlinksApi","sitesApi","favoritesApi","peopleApi","search","searchApi","versionsApi","classesApi","groupsApi","initAlfrescoApi","reset","oauth","AppConfigValues","redirectUri","window","origin","redirectUriLogout","AlfrescoApiConfig","provider","hostEcm","hostBpm","authType","contextRootBpm","contextRoot","disableCsrf","withCredentials","oauth2","isDifferentConfig","lastConfig","configureJsApi","AlfrescoApiCompatibility","newConfig","JSON","stringify","CookieService","isEnabled","navigator","cookieEnabled","document","cookie","indexOf","getItem","exec","setItem","expiration","path","toUTCString","clear","LogLevelsEnum","_super","tslib_1.__extends","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","Number","logLevels","level","LogService","onMessage","configLevel","getLogLevel","message","optionalParams","currentLogLevel","messageBus","console","debug","info","log","trace","warn","assert","test","group","groupTitle","groupEnd","referencedLevel","find","currentLevel","toLocaleLowerCase","text","type","REMEMBER_ME_COOKIE_KEY","AuthenticationService","logService","redirectUrl","bearerExcludedUrls","onLogin","onLogout","isLoggedIn","isOauth","isRememberMeSet","isOauthConfiguration","isECMProvider","isEcmConfiguration","isBPMProvider","isBpmConfiguration","isALLProvider","isEcmBpmConfiguration","login","username","password","rememberMe","from","response","saveRememberMeCookie","ticket","catchError","err","handleError","ssoImplicitLogin","implicitLogin","expireTime","getTime","setTime","logout","callApiLogout","tap","getTicketEcm","getTicketBpm","getTicketEcmBase64","btoa","isEcmLoggedIn","isBpmLoggedIn","getEcmUsername","getBpmUsername","setRedirect","url","getRedirect","hasValidRedirection","getBpmLoggedUser","profileApi","getProfile","hasSelectedProviderAll","throwError","getBearerExcludedUrls","getToken","localStorage","addTokenToHeader","headersArg","Observable","observer","headers","HttpHeaders","token","complete","isSSODiscoveryConfigured","storage","BpmProductVersionModel","obj","edition","majorVersion","revisionVersion","minorVersion","VersionModel","major","minor","patch","hotfix","schema","display","LicenseModel","issuedAt","expiresAt","remainingDays","holder","mode","isClusterEnabled","isCryptodocEnabled","VersionStatusModel","isReadOnly","isAuditEnabled","isQuickShareEnabled","isThumbnailGenerationEnabled","VersionModuleModel","id","title","description","version","installDate","installState","versionMin","versionMax","EcmProductVersionModel","modules","entry","repository","license","module","DiscoveryApiService","apiService","getEcmProductInfo","discovery","discoveryApi","getRepositoryInformation","res","getBpmProductInfo","aboutApi","getAppVersion","FileUtils","flatten","folder","reader","createReader","files","iterations","traverse","readEntries","entries","all","isFile","resolveFile","file","relativeFolder","fullPath","toFileArray","fileList","MOMENT_DATE_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateAdapter","localeData","moment","getYear","date","year","getMonth","month","getDate","getDayOfWeek","day","getMonthNames","style","months","monthsShort","getDateNames","dateNames","String","getDayOfWeekNames","weekdays","weekdaysShort","getYearName","getFirstDayOfWeek","firstDayOfWeek","getNumDaysInMonth","daysInMonth","clone","locale","createDate","today","parseFormat","isValid","overrideDisplayFormat","currentYear","getFullYear","isAfter","format","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","getISODateString","toISOString","setLocale","compareDate","first","second","diff","sameDate","isMoment","isSame","clampDate","min","max","isBefore","isDateInstance","isValidDateInstance","_isAMomentObject","toIso8601","fromIso8601","iso8601String","ISO_8601","invalid","DateAdapter","ObjectDataRow","isSelected","Error","hasValue","imageErrorResolver","event","ObjectDataColumn","input","sortable","srTitle","cssClass","template","copyContent","DataSorting","direction","ObjectDataTableAdapter","_rows","_columns","item","filter","column","sort","rowsChanged","generateSchema","rowToExaminate","getRows","setRows","rows","getColumns","setColumns","columns","row","col","getSorting","_sorting","setSorting","sorting","a","left","valueOf","toString","right","localeCompare","AboutComponent","authService","appExtensions","extensionColumns","githubUrlCommitAlpha","showExtensions","regexp","ecmVersion","bpmVersion","extensions$","references$","ngOnInit","ecmVers","bpmVers","alfrescoPackages","dependencies","val","alfrescoPackagesTableRepresentation","required","gitHubLinkCreation","corePackage","packageUp","commitIsh","Component","selector","encapsulation","ViewEncapsulation","None","AppExtensionService","Input","MatAutocompleteModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatNativeDateModule","MatOptionModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSlideToggleModule","MatTableModule","MatTabsModule","MatMenuModule","MatProgressBarModule","MatSidenavModule","MatSnackBarModule","MatToolbarModule","MatTooltipModule","MatDatetimepickerModule","MatNativeDatetimeModule","MatExpansionModule","MaterialModule","NgModule","imports","exports","ContextMenuService","show","ContextMenuHolderComponent","viewport","overlayContainer","contextMenuService","renderer","links","mouseLocation","top","menuElement","subscriptions","showIcons","onShowContextMenu","preventDefault","onResize","mdMenuElement","updatePosition","mouseEvent","showMenu","menuTrigger","onMenuOpen","container","getContainerElement","contextMenuListenerFn","listen","contextmenuEvent","getContextMenuElement","onMenuClose","ngOnDestroy","subscription","unsubscribe","onMenuItemClick","menuItem","model","disabled","stopImmediatePropagation","subject","clientX","clientY","openMenu","locationCss","setTimeout","parentElement","clientWidth","getViewportRect","width","menu","xPosition","clientHeight","height","yPosition","querySelector","ViewportRuler","OverlayContainer","Renderer2","ViewChild","MatMenuTrigger","HostListener","ContextMenuOverlayRef","overlayRef","close","dispose","CONTEXT_MENU_DATA","InjectionToken","contextMenuAnimation","state","opacity","transform","transition","sequence","query","animate","ContextMenuListComponent","contextMenuOverlayRef","handleKeydownEscape","handleKeydownEvent","keyCode","UP_ARROW","DOWN_ARROW","keyManager","onKeydown","ngAfterViewInit","FocusKeyManager","items","setFirstItemActive","host","role","class","animations","trigger","decorators","Inject","Optional","ViewChildren","MatMenuItem","DEFAULT_CONFIG","panelClass","backdropClass","hasBackdrop","ContextMenuOverlayService","injector","overlay","open","overlayConfig","createOverlay","attachDialogContainer","backdropClick","_backdropElement","addEventListener","_backdropClick","getOverlayConfig","createInjector","containerPortal","ComponentPortal","attach","instance","injectionTokens","WeakMap","PortalInjector","fakeElement","getBoundingClientRect","bottom","positionStrategy","position","connectedTo","ElementRef","originX","originY","overlayX","overlayY","withFallbackPosition","OverlayConfig","scrollStrategy","scrollStrategies","Injector","Overlay","ContextMenuDirective","enabled","Directive","ContextMenuModule","CommonModule","TranslateModule","forChild","declarations","entryComponents","StorageService","appConfigService","memoryStore","useLocalStorage","storageAvailable","getAppPrefix","bind","storagePrefix","removeItem","hasItem","appConfiguration","PaginationSize","Locale","SupportedPageSizes","ExpandedSideNavStatus","UserPreferencesService","translate","defaults","paginationSize","supportedPageSizes","expandedSidenav","userPreferenceStatus","initUserPreferenceStatus","onChangeSubject","BehaviorSubject","onChange","initUserLanguage","UserPreferenceValues","getDefaultLocale","setWithoutStore","getPropertyKey","getStoragePrefix","setStoragePrefix","getBrowserCultureLang","TranslateService","TRANSLATION_PROVIDER","TranslationService","userPreferencesService","providers","customLoader","defaultLang","setDefaultLang","providers_1","tslib_1.__values","providers_1_1","addTranslationFolder","userLang","use","providerRegistered","registerProvider","loadTranslation","lang","fallback","getTranslation","onTranslationChanged","onTranslationChange","translations","getFullTranslationJSON","init","interpolateParams","instant","FileSizePipe","translation","bytes","decimals","dm","Math","floor","i18nSize","parseFloat","pow","toFixed","Pipe","pure","PermissionsEnum","CONTRIBUTOR","CONSUMER","COLLABORATOR","MANAGER","EDITOR","COORDINATOR","NOT_CONTRIBUTOR","NOT_CONSUMER","NOT_COLLABORATOR","NOT_MANAGER","NOT_EDITOR","NOT_COORDINATOR","AllowableOperationsEnum","DELETE","UPDATE","CREATE","COPY","LOCK","UPDATEPERMISSIONS","NOT_DELETE","NOT_UPDATE","NOT_CREATE","NOT_UPDATEPERMISSIONS","ContentService","sanitizer","folderCreated","folderCreate","folderEdit","saveData","createElement","appendChild","fileData","fileName","blob","Blob","json","msSaveOrOpenBlob","URL","createObjectURL","href","download","click","revokeObjectURL","downloadBlob","downloadData","downloadJSON","createTrustedUrl","bypassSecurityTrustUrl","getDocumentThumbnailUrl","node","attachment","contentApi","getContentUrl","getNodeContent","nodeId","nodesApi","getFileContent","getNode","opts","hasPermissions","permission","permissions","locallySet","startsWith","currentPermission","hasAllowableOperations","allowableOperation","allowableOperations","currentOperation","isLocked","DomSanitizer","ThumbnailService","contentService","matIconRegistry","DEFAULT_ICON","mimeTypeIcons","image/png","image/jpeg","image/gif","image/bmp","image/cgm","image/ief","image/jp2","image/tiff","image/vnd.adobe.photoshop","image/vnd.adobe.premiere","image/x-cmu-raster","image/x-dwt","image/x-portable-anymap","image/x-portable-bitmap","image/x-portable-graymap","image/x-portable-pixmap","image/x-raw-adobe","image/x-raw-canon","image/x-raw-fuji","image/x-raw-hasselblad","image/x-raw-kodak","image/x-raw-leica","image/x-raw-minolta","image/x-raw-nikon","image/x-raw-olympus","image/x-raw-panasonic","image/x-raw-pentax","image/x-raw-red","image/x-raw-sigma","image/x-raw-sony","image/x-xbitmap","image/x-xpixmap","image/x-xwindowdump","image/svg+xml","application/eps","application/illustrator","application/pdf","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.ms-excel.addin.macroenabled.12","application/vnd.ms-excel.sheet.binary.macroenabled.12","application/vnd.ms-excel.sheet.macroenabled.12","application/vnd.ms-excel.template.macroenabled.12","application/vnd.sun.xml.calc","application/vnd.sun.xml.calc.template","application/vnd.ms-outlook","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-word.document.macroenabled.12","application/vnd.ms-word.template.macroenabled.12","application/vnd.sun.xml.writer","application/vnd.sun.xml.writer.template","application/rtf","text/rtf","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.presentationml.slideshow","application/vnd.oasis.opendocument.presentation","application/vnd.oasis.opendocument.presentation-template","application/vnd.openxmlformats-officedocument.presentationml.slide","application/vnd.sun.xml.impress","application/vnd.sun.xml.impress.template","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.ms-powerpoint.addin.macroenabled.12","application/vnd.ms-powerpoint.presentation.macroenabled.12","application/vnd.ms-powerpoint.slide.macroenabled.12","application/vnd.ms-powerpoint.slideshow.macroenabled.12","application/vnd.ms-powerpoint.template.macroenabled.12","video/mp4","video/3gpp","video/3gpp2","video/mp2t","video/mpeg","video/mpeg2","video/ogg","video/quicktime","video/webm","video/x-flv","video/x-m4v","video/x-ms-asf","video/x-ms-wmv","video/x-msvideo","video/x-rad-screenplay","video/x-sgi-movie","video/x-matroska","audio/mpeg","audio/ogg","audio/wav","audio/basic","audio/mp4","audio/vnd.adobe.soundbooth","audio/vorbis","audio/x-aiff","audio/x-flac","audio/x-ms-wma","audio/x-wav","x-world/x-vrml","text/plain","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.text-template","application/x-javascript","application/json","text/csv","text/xml","text/html","application/x-compressed","application/x-zip-compressed","application/zip","application/x-tar","application/vnd.apple.keynote","application/vnd.apple.pages","application/vnd.apple.numbers","application/vnd.visio","application/wordperfect","application/x-cpio","smartFolder","ruleFolder","linkFolder","disable/folder","selected","bypassSecurityTrustResourceUrl","addSvgIcon","addSvgIconInNamespace","getMimeTypeIcon","mimeType","getDefaultMimeTypeIcon","MatIconRegistry","MimeTypeIconPipe","thumbnailService","NodeNameTooltipPipe","getNodeTooltip","containsLine","lines","line","some","toLowerCase","removeDuplicateLines","reduce","acc","properties","join","HighlightTransformService","highlight","wrapperClass","isMatching","pattern","regex","match","changed","HighlightPipe","highlightTransformService","TimeAgoPipe","defaultLocale","actualLocale","fromNow","InitialUsernamePipe","sanitized","user","className","delimiter","safeHtml","initialResult","getInitialUserName","firstName","lastName","bypassSecurityTrustHtml","FullNamePipe","fullName","FormatSpacePipe","inputValue","replaceChar","lowerCase","transformedString","trim","FileTypePipe","substring","lastIndexOf","MultiValuePipe","values","valueSeparator","DEFAULT_SEPARATOR","PipeModule","HighlightDirective","el","classToApply","ngAfterViewChecked","nativeElement","querySelectorAll","element","highlightTransformResult","innerHTML","setProperty","LogoutDirective","elementRef","router","auth","enableRedirect","evt","redirectToUri","navigate","Router","NodeDeleteDirective","alfrescoApiService","permanent","delete","EventEmitter","onClick","process","selection","ngOnChanges","setDisableAttribute","hasAttribute","disable","batch","getDeleteNodesBatch","forkJoin","processedItems","processStatus","getMessage","emit","deleteNode","promise","purgeDeletedNode","of","success","failed","someFailed","someSucceeded","oneFailed","oneSucceeded","allSucceeded","allFailed","number","Output","NodeFavoriteDirective","favorites","toggle","toggleFavorite","changes","currentValue","markFavoritesNodes","every","isFavorite","removeFavoriteSite","notFavorite_1","createFavoriteBody","addFavorite","newFavorites","getProcessBatch","hasFavorites","getFavorite","isFolder","getNodeType","guid","list","ids","includes","comparator","exportAs","EXTENDIBLE_COMPONENT","CheckAllowableOperationDirective","changeDetector","parentComponent","firstChange","updateElement","enable","detectChanges","enableElement","disableElement","removeAttribute","setAttribute","ChangeDetectorRef","Host","RestoreMessageModel","NodeRestoreDirective","restore","restoreProcessStatus","recover","nodesWithPath","getNodesWithPath","fail","notification","restoreNodesBatch","restoredNodes","_b","mergeMap","getDeletedNodes","deletedNodesList","nodeList","restoreErrorNodes","selectedNodes","remainingNodes","restoreNode","include","statusCode","fromList","getRestoreMessage","action","UploadDirective","ngZone","isDragging","cssClassName","isClickMode","inputUpload","upload","onSelectFiles","multiple","accept","directory","isDropMode","runOutsideAngular","onDragEnter","onDragOver","onDragLeave","onDrop","removeEventListener","classList","remove","stopPropagation","dataTransfer","getDataTransfer","getFilesDropped","onUploadFiles","customEvent","CustomEvent","detail","sender","bubbles","dispatchEvent","hasMode","originalEvent","webkitGetAsEntry","item_1","getAsFile","isDirectory","resolveFolder","NgZone","DownloadZipService","createDownload","payload","downloadsApi","getDownload","downloadId","cancelDownload","DownloadZipDialogComponent","dialogRef","downloadZipService","cancelled","nodeIds","downloadZip","url_1","downloadNode","waitAndDownload","downloadEntry","link","removeChild","MatDialogRef","MAT_DIALOG_DATA","NodeDownloadDirective","dialog","downloadNodes","isSelectionValid","downloadFile","disableClose","MatDialog","DirectiveModule","DataTableCellComponent","value$","updateValue","sub","tooltip","changeDetection","ChangeDetectionStrategy","OnPush","DataColumnComponent","ContentChild","TemplateRef","DataColumnListComponent","ContentChildren","BaseEvent","isDefaultPrevented","BaseUIEvent","FileUploadOptions","Pending","Complete","Starting","Progress","Cancelled","Aborted","Deleted","FileModel","options","FileUploadStatus","size","errorCode","progress","loaded","total","percent","newVersion","slice","Infinity","FileUploadEvent","FileUploadCompleteEvent","totalComplete","totalAborted","FileUploadDeleteEvent","FileUploadErrorEvent","totalError","DataRowEvent","domEvent","DataCellEventModel","actions","DataCellEvent","DataRowActionModel","DataRowActionEvent","List","Gallery","DataTableComponent","differs","DisplayMode","selectionMode","multiselect","actionsPosition","contextMenu","allowDropFiles","rowStyleClass","showHeader","stickyHeader","rowClick","rowDblClick","showRowContextMenu","showRowActionsMenu","executeRowAction","loading","noPermission","rowMenuCacheEnabled","isSelectAllChecked","fakeRows","rowMenuCache","differ","click$","clickObserver","share","ngAfterContentInit","columnList","setTableSchema","datatableLayoutFix","initAndSubscribeClickStream","isPropertyChanged","isTableEmpty","initTable","resetSelection","setTableRows","isFirstChange","emitRowSelectionEvent","setTableSorting","ngDoCheck","convertToRowsData","convertToDataSorting","unsubscribeClickStream","singleClickStream","buffer","debounceTime","x","singleClickStreamSub","dataRowEvents","handleRowSelection","defaultPrevented","multiClickStream","multiClickStreamSub","getSchemaFromHtml","c","onRowClick","dataRowEvent","onEnterKeyPressed","isSingleSelectionMode","selectRow","isMultiSelectionMode","modifier","metaKey","ctrlKey","newValue","domEventName","onRowDblClick","onRowKeyUp","keyboardEvent","onKeyboardNavigate","onColumnHeaderClick","current","newDirection","emitSortingChangedEvent","onSelectAllClick","matCheckboxChange","checked","onCheckboxChange","onImageLoadingError","fallbackThumbnail","src","isIconValue","asIconValue","iconAltTextKey","isColumnSorted","getContextMenuActions","getRowActions","event_1","onExecuteRowAction","rowAllowsDrop","isDropTarget","hasSelectionMode","getRowStyle","getSortingKey","idx","splice","getCellTooltip","formatTooltip","getSortableColumns","isEmpty","isHeaderVisible","dataRowsChanged","getNameColumnValue","getAutomationValue","IterableDiffers","DateCellComponent","userPreferenceService","currentLocale","EmptyListComponent","EmptyListHeaderDirective","EmptyListBodyDirective","EmptyListFooterDirective","FileSizeCellComponent","LocationCellComponent","elements","parent_1","LoadingContentTemplateDirective","dataTable","loadingTemplate","NoContentTemplateDirective","noContentTemplate","NoPermissionTemplateDirective","noPermissionTemplate","CustomEmptyContentTemplateDirective","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","JsonCellComponent","NotificationService","snackBar","translationService","DEFAULT_DURATION_MESSAGE","openSnackMessage","translatedMessage","duration","openSnackMessageAction","dismissSnackMessageAction","dismiss","MatSnackBar","ClipboardService","notificationService","isTargetValid","HTMLInputElement","HTMLTextAreaElement","copyToClipboard","setSelectionRange","execCommand","notify","copyContentToClipboard","clipboardData","setData","DOCUMENT","ClipboardDirective","clipboardService","viewContainerRef","resolver","handleClickEvent","showTooltip","placeholder","componentFactory","resolveComponentFactory","ClipboardComponent","createComponent","closeTooltip","ViewContainerRef","ComponentFactoryResolver","ClipboardModule","DropZoneDirective","dropTarget","dropColumn","dropRow","DataTableModule","RouterModule","DataColumnModule","AboutModule","ViewUtilService","maxRetries","mimeTypes","pdf","image","media","printFile","pwa","TARGET","ContentGroup","IMAGE","onfocus","onload","print","printFileGeneric","objectId","getViewerTypeByMimeType","getRendition","PDF","getRenditionUrl","printType","TEXT","catch","renditionExists","waitRendition","renditionId","retries","rendition","wait","editorTypes","editorTypes_1","editorTypes_1_1","ms","getRenditions","renditionPaging","renditionEntry","createRendition","err_1","MEDIA","PreviousRouteService","currentUrl","events","NavigationEnd","previousUrl","getPreviousUrl","ViewerMoreActionsComponent","ViewerOpenWithComponent","ViewerSidebarComponent","ViewerToolbarComponent","ViewerComponent","viewUtils","extensionService","previousRouteService","urlFile","urlFileViewer","sharedLinkId","overlayMode","showViewer","showToolbar","allowGoBack","allowDownload","allowPrint","allowFullScreen","allowNavigate","canNavigateBefore","canNavigateNext","allowLeftSidebar","allowRightSidebar","allowThumbnails","showRightSidebar","showLeftSidebar","sidebarRightTemplate","sidebarLeftTemplate","thumbnailsTemplate","goBack","showViewerChange","extensionChange","navigateBefore","navigateNext","invalidSharedLink","viewerType","isLoading","extensionTemplates","externalExtensions","sidebarRightTemplateContext","sidebarLeftTemplateContext","viewerExtensions","extensions","isSourceDefined","blobFile","onNodeUpdated","loadExtensions","getViewerExtensions","extension","fileExtension","generateCacheBusterNumber","setUpNodeFile","setUpBlobData","setUpUrlFile","nodeEntry","sharedLinksApi","getSharedLink","sharedLinkEntry","setUpSharedLinkFile","fileTitle","getDisplayName","scrollTop","filenameFromUrl","getFilenameFromUrl","getFileExtension","urlFileContent","displayName","getViewerTypeByExtension","cacheBusterNumber","setupNode","displayNodeRendition","details","getSharedLinkContentUrl","displaySharedLinkRendition","toggleSidebar","toggleLeftSidebar","scrollTo","isCustomViewerExtension","onBackButtonClick","history","outlets","primary","back","onNavigateBeforeClick","onNavigateNextClick","otherMenu","hidden","anchor","end","flat","handleKeyboardEvent","enterFullScreen","printContent","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","resolveRendition","sharedId","getSharedLinkRendition","getSharedLinkRenditionUrl","error_1","error_2","supportedRendition","err_2","currentRetry","intervalId","setInterval","clearInterval","checkExtensions","extensionAllowed","currentExtension","Location","ImgViewerComponent","rotate","scaleX","scaleY","offsetX","offsetY","isDragged","drag","delta","initializeScaling","round","scaling","onMouseDown","onMouseUp","onMouseLeave","onMouseOut","onMouseMove","pageX","pageY","zoomIn","ratio","zoomOut","rotateLeft","angle","abs","rotateRight","MediaPlayerComponent","RenderingQueueServices","renderingStates","INITIAL","RUNNING","PAUSED","FINISHED","CLEANUP_TIMEOUT","pdfViewer","pdfThumbnailViewer","onIdle","highestPriorityPage","idleTimeout","printing","isThumbnailViewEnabled","setViewer","setThumbnailViewer","isHighestPriority","view","renderingId","renderHighestPriority","currentlyVisiblePages","clearTimeout","forceRendering","getHighestPriority","visible","views","scrolledDown","visibleViews","numVisible","isViewFinished","nextPageIndex","last","previousPageIndex","renderingState","renderView","resume","continueRendering","draw","PdfPasswordDialogComponent","passwordFormControl","FormControl","Validators","isError","reason","pdfjsLib","PasswordResponses","INCORRECT_PASSWORD","hasError","submit","PdfViewerComponent","renderingQueueServices","rendered","currentScaleMode","currentScale","MAX_AUTO_SCALE","DEFAULT_SCALE_DELTA","MIN_SCALE","MAX_SCALE","isPanelDisabled","showThumbnails","pdfThumbnailsContext","viewer","onPageChange","onPagesLoaded","onPageRendered","randomPdfId","generateUuid","getUserScaling","scaleConfig","checkLimits","reader_1","FileReader","executePdf","readAsArrayBuffer","pdfOptions","GlobalWorkerOptions","workerSrc","loadingTask","getDocument","onPassword","callback","onPdfPassword","onProgress","progressData","loadingPercent","pdfDocument","currentPdfDocument","totalPages","numPages","page","displayPage","initPDFViewer","getPage","scalePage","getElementById","documentContainer","pdfjsViewer","PDFViewer","renderingQueue","setDocument","destroy","toggleThumbnails","scaleMode","viewerContainer","widthContainer","heightContainer","currentPage","_pages","_currentPageNumber","pageWidthScale","scale","pageHeightScale","setScaleUpdatePages","horizontalScale","isLandscape","newScale","isSameScale","update","oldScale","pageFit","ticks","ceil","previousPage","currentPageNumber","nextPage","inputPage","pageInput","parseInt","isNaN","pageNumber","afterClosed","random","PdfThumbListComponent","virtualHeight","translateY","renderItems","currentHeight","margin","itemHeight","calculateItems","eventBus","on","setHeight","getPages","scrollInto","off","trackByFn","index","pageNum","goTo","findIndex","getWidth","getHeight","calculateHeight","getViewport","pageRatio","getContainerSetup","viewPort","itemsInView","indexByScrollTop","start","elementRec","PdfThumbComponent","image$","getThumb","canvas","getCanvas","render","canvasContext","getContext","imageSource","toDataURL","TxtViewerComponent","readBlob","getUrlContent","withCredentialsMode","responseType","onerror","readAsText","UnknownFormatComponent","ViewerToolbarActionsComponent","ViewerExtensionDirective","viewerComponent","templateModel","isVisible","supportedExtensions","supportedExtension","ToolbarDividerComponent","ToolbarTitleComponent","ToolbarComponent","ToolbarModule","ViewerModule","ExtensionsModule","FormsModule","ReactiveFormsModule","FlexLayoutModule","BpmUserModel","apps","capabilities","company","created","email","externalId","fullname","groups","lastUpdate","latestSyncTimeStamp","pictureId","tenantId","tenantName","tenantPictureId","BpmUserService","getCurrentUserInfo","userRepresentation","getCurrentUserProfileImage","getProfilePictureUrl","EcmUserModel","avatarId","skypeId","googleId","instantMessageId","jobTitle","mobile","telephone","statusUpdatedAt","userStatus","emailNotificationsEnabled","EcmUserService","getUserInfo","userName","getPerson","personEntry","getUserProfileImage","nodeObj","IdentityUserModel","JwtHelperService","decodeToken","parts","decoded","urlBase64Decode","output","decodeURIComponent","escape","atob","IdentityUserService","helper","familyName","getValueFromToken","FAMILY_NAME","givenName","GIVEN_NAME","USER_EMAIL","USER_PREFERRED_USERNAME","USER_ACCESS_TOKEN","findUsersByName","buildUserUrl","queryParams","oauth2Auth","callCustomApi","findUserByUsername","findUserByEmail","findUserById","getClientRoles","userId","clientId","buildUserClientRoleMapping","checkUserHasClientApp","clientRoles","checkUserHasAnyClientAppRole","roleNames","hasRole","roleName","availableRole","getClientIdByApplicationName","applicationName","buildGetClientsUrl","checkUserHasApplicationAccess","switchMap","checkUserHasAnyApplicationRole","getUsers","getUserRoles","buildRolesUrl","getUsersByRolesWithCurrentUser","filteredUsers","toPromise","users","userHasAnyRole","getUsersByRolesWithoutCurrentUser","currentUser_1","userRoles","userRole","checkUserHasRole","USER_NAME","UserInfoComponent","ecmUserService","bpmUserService","identityUserService","ecmBackgroundImage","bpmBackgroundImage","menuPositionX","menuPositionY","showName","namePosition","loadIdentityUserInfo","loadEcmUserInfo","loadBpmUserInfo","onKeyPress","closeUserModal","$event","closeMenu","ecmUser$","bpmUser$","identityUser$","stopClosing","getEcmAvatar","getBpmUserImage","showOnRight","IdentityRoleModel","UserInfoModule","HostSettingsComponent","formBuilder","storageService","HOST_REGEX","showSelectProviders","cancel","providerSelected","form","providersControl","addFormGroups","addOAuthFormGroup","addIdentityHostFormControl","valueChanges","removeControl","removeFormGroups","addBPMFormControl","addECMFormControl","oauthFormGroup","createOAuthFormGroup","addControl","isBPM","isALL","isOAUTH","bpmFormControl","createBPMFormControl","identityHostFormControl","createIdentityFormControl","isECM","ecmFormControl","createECMFormControl","scope","secret","silentLogin","implicitFlow","onCancel","onSubmit","saveBPMValues","saveECMValues","saveOAuthValues","invalidateSession","keyDownFunction","ENTER","valid","oauthConfig","identityHost","FormBuilder","HostSettingsModule","PaginationComponent","cdr","pagination","DEFAULT_PAGINATION","change","changePageNumber","changePageSize","prevPage","pagSize","maxItems","paginationSubscription","count","isFirstPage","goPrevious","totalItems","skipCount","lastPage","isLastPage","hasItems","fill","goNext","handlePaginationEvent","ACTIONS","NEXT_PAGE","previous","PREV_PAGE","onChangePageNumber","CHANGE_PAGE_NUMBER","onChangePageSize","CHANGE_PAGE_SIZE","params","paginationModel","updatePagination","Pagination","HostBinding","InfinitePaginationComponent","loadMore","requestPaginationModel","_target","hasMoreItems","pageSize","onLoadMore","PaginationModule","LoginErrorEvent","LoginSubmitEvent","_values","_defaultPrevented","LoginSuccessEvent","Landing","Checking","Welcome","LoginComponent","_fb","translateService","userPreferences","route","isPasswordShow","showRememberMe","showLoginActions","needHelpLink","registerLink","logoImageUrl","backgroundImageUrl","copyrightText","successRoute","executeSubmit","actualLoginStep","LoginSteps","minLength","initFormError","initFormFieldsMessages","forward","hasCustomFieldsValidation","fieldsValidation","initFormFieldsDefault","initFormFieldsMessagesDefault","onValueChanged","disableError","errorMsg","controls","performLogin","field","formError","errors","dirty","_message","translated","navigateByUrl","displayErrorMessage","crossDomain","addCustomFormError","msg","addCustomValidationError","ruleId","toggleShowPassword","isErrorStyle","pristine","trimUsername","ActivatedRoute","LoginHeaderDirective","alfrescoLoginComponent","headerTemplate","LoginFooterDirective","footerTemplate","LoginDialogComponent","buttonActionName","actionName","toUpperCase","logged","submitForm","loginPanel","onLoginSuccess","isFormValid","LoginDialogPanelComponent","LoginModule","LanguageMenuComponent","userPreference","languages","languagesConfigApp","changeLanguage","LanguageMenuModule","InfoDrawerLayoutComponent","InfoDrawerTitleDirective","InfoDrawerButtonsDirective","InfoDrawerContentDirective","InfoDrawerTabComponent","icon","InfoDrawerComponent","selectedIndex","currentTab","showTabLayout","contentBlocks","onTabChange","InfoDrawerModule","DataTableSchema","presetKey","presetsModel","layoutPresets","createDatatableSchema","loadLayoutPresets","mergeJsonAndHtmlSchema","externalSettings","customSchemaColumns","getSchemaFromConfig","presetColumn","getDefaultLayoutPreset","CardViewComponent","displayEmpty","transformKeyToObject","reverse","previousValue","CardViewUpdateService","itemUpdatedSource","itemClickedSource","itemUpdated$","itemClicked$","clicked","CardViewBoolItemComponent","cardViewUpdateService","isEditable","editable","ɵ1","MAT_MOMENT_DATETIME_FORMATS","CardViewDateItemComponent","dateAdapter","SHOW_FORMAT","valueDate","showProperty","showDatePicker","datepicker","onDateChanged","newDateValue","momentDate","toDate","provide","useClass","MAT_DATE_FORMATS","useValue","ɵ0","DatetimeAdapter","MomentDatetimeAdapter","MAT_DATETIME_FORMATS","CardViewMapItemComponent","isClickable","clickable","CardViewTextItemComponent","inEdit","editedValue","multiline","displayValue","hasIcon","hasErrors","errorMessages","setEditMode","editStatus","editorInput","resetErrorMessages","updatedValue","prepareValueForUpload","getValidationErrors","multivalued","onTextAreaInputChange","clickCallBack","CardViewSelectItemComponent","getOptions","options$","CardViewKeyValuePairsItemComponent","matTableValues","MatTableDataSource","save","onBlur","validValues","getType","DynamicComponentResolver","fromType","DynamicComponentMapper","types","getComponentTypeResolver","setComponentTypeResolver","override","resolveComponentType","CardItemTypeService","int","float","datetime","bool","keyvaluepairs","CardViewContentProxyDirective","CardViewItemDispatcherComponent","cardItemTypeService","componentReference","method","proxy","loadComponent","changeName","inputParamName","simpleChange","factoryClass","factory","methodName","CardViewItemIntValidator","CardViewItemFloatValidator","isFinite","CardViewBaseItemModel","cardViewItemProperties","default","validators","validator","isValidUntilNow","CardViewBoolItemModel","cardViewBoolItemProperties","CardViewDateItemModel","cardViewDateItemProperties","CardViewDatetimeItemModel","CardViewTextItemModel","cardViewTextItemProperties","pipes","applyPipes","accumulator","CardViewFloatItemModel","CardViewIntItemModel","CardViewMapItemModel","CardViewKeyValuePairsItemModel","cardViewKeyValuePairsItemProperties","CardViewSelectItemModel","cardViewSelectItemProperties","option","CardViewModule","DebugAppConfigService","AppConfigPipe","AppConfigModule","HttpClientModule","FormDefinitionModel","lastUpdatedByFullName","lastUpdated","metadata","reusable","formImageBase64","formRepresentation","lastUpdatedBy","stencilSetId","referenceId","formDefinition","fields","fieldType","numberOfColumns","readOnly","sizeX","sizeY","1","metadataToFields","gridsterForm","javascriptEvents","outcomes","tabs","variables","colspan","existingColspan","maxColspan","layout","FormSaveRepresentation","FormFieldTypes","isReadOnlyType","READONLY_TYPES","isContainerType","CONTAINER","GROUP","DYNAMIC_TABLE","MULTILINE_TEXT","DROPDOWN","HYPERLINK","RADIO_BUTTONS","DISPLAY_VALUE","READONLY_TEXT","UPLOAD","TYPEAHEAD","FUNCTIONAL_GROUP","PEOPLE","BOOLEAN","NUMBER","DATE","AMOUNT","DATETIME","ATTACH_FOLDER","FormWidgetModel","tab","ContainerColumnModel","rowspan","hasFields","ErrorMessageModel","attributes","isActive","getAttributesAsJsonObj","obj_1","RequiredFieldValidator","supportedTypes","isSupported","validate","hasEmptyValue","emptyOption","opt","NumberFieldValidator","isNumber","valueStr","enableFractions","validationSummary","DateFieldValidator","isValidDate","inputDate","dateFormat","dateDisplayFormat","MinDateFieldValidator","minValue","checkDate","fieldValueData","toLocaleUpperCase","MaxDateFieldValidator","MAX_DATE_FORMAT","maxValue","MinDateTimeFieldValidator","MIN_DATETIME_FORMAT","checkDateTime","fieldValueDate","MaxDateTimeFieldValidator","MAX_DATETIME_FORMAT","MinLengthFieldValidator","toLocaleString","MaxLengthFieldValidator","maxLength","MinValueFieldValidator","MaxValueFieldValidator","RegExFieldValidator","regexPattern","FixedValueFieldValidator","hasValidNameOrValidId","hasValidName","hasValidId","hasStringValue","hasOptions","FORM_FIELD_VALIDATORS","FormFieldModel","_readOnly","_isValid","_required","defaultDateFormat","defaultDateTimeFormat","visibilityCondition","currency","overrideId","restUrl","restResponsePath","restIdProperty","restLabelProperty","optionType","hyperlinkUrl","displayText","getDefaultDateFormat","_value","parseValue","processVariables","processVariable","getProcessVariableValue","responseVariable","formVariable","getVariablesValue","containerFactory","updateForm","markAsInvalid","fieldValidators","validators_1","validators_1_1","jsonField","originalType","isTypeaheadFieldType","getFieldNameWithLabel","fieldName","findProcessVariableValue","variableName","variable","currentVariable","currentField","colFields","isDateField","isDateTimeField","dateValue","rbEntry","hasUpload","elem","taEntry","dateTimeValue","isInvalidFieldType","onFormFieldChanged","getOptionName","FormEvent","FormFieldEvent","ValidateFormFieldEvent","ValidateFormEvent","errorsField","ContainerModel","FormOutcomeModel","isSystem","selectedOutcome","SAVE_ACTION","COMPLETE_ACTION","START_PROCESS_ACTION","TabModel","hasContent","FormBaseModel","hasTabs","hasOutcomes","getFieldById","fieldId","getFormFields","formFieldModel","UNSET_TASK_NAME","SAVE_OUTCOME","COMPLETE_OUTCOME","START_PROCESS_OUTCOME","FormModel","formValues","formService","taskName","customFieldTemplates","taskId","processDefinitionId","tabCache_1","parseRootFields","loadData","saveOutcome","completeOutcome","startProcessOutcome","customOutcomes","validateForm","validateField","formFieldValueChanged","validateFormEvent","validateFieldEvent","validateFormField","formWidgetModel","fields_1","fields_1_1","_c","FormOutcomeEvent","outcome","_outcome","ContentLinkModel","contentAvailable","createdBy","previewStatus","relatedContent","simpleType","thumbnailStatus","hasPreviewStatus","isTypeImage","isTypePdf","isTypeDoc","isThumbnailReady","isThumbnailSupported","EcmModelService","createEcmTypeForActivitiForm","formName","searchActivitiEcmModel","saveFomType","typeForm","createActivitiEcmModel","getEcmModels","ecmModels","MODEL_NAME","createEcmModel","MODEL_NAMESPACE","activeEcmModel","modelActive","createEcmTypeWithProperties","typeCreated","searchEcmType","ecmType","createEcmType","TYPE_MODEL","addPropertyToAType","propertyAdded","typeName","modelName","getEcmType","customTypes","prefixedName","customModelApi","activateCustomModel","toJson","nameSpace","createCustomModel","getAllCustomModel","getAllCustomType","parentType","cleanNameType","createCustomType","formFields","dataType","multiValued","mandatory","mandatoryEnforced","addPropertyToType","cleanName","FormService","ecmModelService","formLoaded","formDataRefreshed","formEvents","taskCompleted","taskCompletedError","taskSaved","taskSavedError","formContentClicked","validateDynamicTableRow","executeOutcome","modelsApi","editorApi","processApi","processInstanceVariablesApi","usersWorkflowApi","parseForm","createFormFromANode","createForm","customType","formDefinitionModel","saveForm","formData","dataModel","modelType","stencilSet","createModel","formId","formModel","searchFrom","getModels","forms","getForms","toJsonArray","getProcessDefinitions","getProcessVariablesById","processInstanceId","getProcessInstanceVariables","getTasks","listTasks","getTask","saveTaskForm","saveFormRepresentation","completeTaskForm","completeFormRepresentation","getTaskForm","getFormDefinitionById","getForm","getFormDefinitionByName","filterText","getFormId","getStartFormInstance","processId","getProcessInstanceStartForm","getProcessInstance","getStartFormDefinition","getProcessDefinitionStartForm","getRestFieldValues","getRestFieldValuesByProcessId","getRestFieldValuesColumnByProcessId","getRestTableFieldValues","getRestFieldValuesColumn","getUserProfileImageApi","userApi","getUserProfilePictureUrl","getWorkflowUsers","groupId","userImage","combineAll","defaultIfEmpty","getWorkflowGroups","getGroups","errMsg","UNKNOWN_ERROR_MESSAGE","statusText","GENERIC_ERROR_MESSAGE","baseHost","(click)","(blur)","(change)","(focus)","(focusin)","(focusout)","(input)","(invalid)","(select)","WidgetComponent","fieldChanged","hasField","isRequired","isInvalidFieldRequired","checkVisibility","onFieldChanged","getHyperlinkUrl","DEFAULT_HYPERLINK_URL","DEFAULT_HYPERLINK_SCHEME","getHyperlinkText","ContainerWidgetComponentModel","isExpanded","isCollapsedByDefault","isGroup","isCollapsible","allowCollapse","collapseByDefault","ContainerWidgetComponent","onExpanderClicked","rowContainsElement","rowIndex","getColumnWith","TabsWidgetComponent","formTabChanged","visibleTabs","ngAfterContentChecked","filterVisibleTabs","tabChanged","UnknownWidgetComponent","AmountWidgetComponent","DEFAULT_CURRENCY","CheckboxWidgetComponent","DateWidgetComponent","minDate","maxDate","displayDate","ɵ0$1","DisplayTextWidgetComponentComponent","DocumentWidgetComponent","fileId","hasFile","DropdownWidgetComponent","getValuesByTaskId","getValuesByProcessDefinitionId","formFieldOption","getOptionValue","fieldValue","WidgetVisibilityService","refreshVisibility","tabModel","refreshEntityVisibility","evaluateVisibility","visibilityObj","isLeftFieldPresent","leftFormFieldId","leftRestResponseId","isFieldVisible","leftValue","getLeftValue","rightValue","getRightValue","actualResult","evaluateCondition","operator","nextCondition","evaluateLogicalOperation","nextConditionOperator","getVariableValue","processVarList","getFormValue","rightRestResponseId","rightFormFieldId","getFieldValue","searchValueInForm","valueList","dropDownFilterByName","valueFound","formField","isSearchedField","getObjectValue","getValueFromOption","fieldToFind","formattedFieldName","removeLabel","getFormVariableValue","formVar","logicOp","cleanProcessVariable","getTaskProcessVariable","taskFormsApi","getTaskFormVariables","jsonRes","ValidateDynamicTableRowEvent","summary","DateCellValidator","DynamicRowValidationSummary","NumberCellValidator","RequiredCellValidator","DynamicTableModel","visibleColumns","_validators","_selectedRow","definitions","columnDefinitions","flushValue","moveRow","offset","oldIndex","newIndex","arr","deleteRow","selectedRow","addRow","validateRow","_d","_e","_f","getCellValue","rowValue","getDisplayText","columnName","amountCurrency","DynamicTableWidgetComponent","visibilityService","cd","ERROR_MODEL_NOT_FOUND","editMode","editRow","selectArrayCode","forceFocusOnAddButton","buttonAddRow","isDynamicTableReady","focus","onRowClicked","onKeyPressed","isEnterOrSpacePressed","hasSelection","moveSelectionUp","moveSelectionDown","deleteSelection","addNewRow","isNew","editSelection","copyRow","cellValue","onSaveChanges","copyObject","onCancelChanges","BooleanEditorComponent","DateEditorComponent","DATE_FORMAT","table","ɵ0$2","ɵ1$1","DateTimeEditorComponent","ɵ0$3","DropdownEditorComponent","dynamicTableColumnOption","RowEditorComponent","TextEditorComponent","ErrorWidgetComponent","translateParameters","_subscriptAnimationState","FunctionalGroupWidgetComponent","minTermLength","restrictWithGroup","groupModel","onKeyUp","oldValue","ESCAPE","onItemClick","onItemSelect","HyperlinkWidgetComponent","linkUrl","linkText","MultilineTextWidgetComponentComponent","NumberWidgetComponent","PeopleProcessService","alfrescoJsApi","searchWord","excludeTaskId","getWorkflowUserApi","getUserImage","involveUserWithTask","idToInvolve","involveUserToTaskApi","removeInvolvedUser","idToRemove","removeInvolvedUserFromTaskApi","taskActionsApi","involveUser","PeopleWidgetComponent","peopleProcessService","searchTerm","searchTerms$","users$","checkUserAndValidateForm","peopleSelected","setValue","isValidUser","selectedUser","RadioButtonsWidgetComponent","getOptionsByTaskId","getOptionsByProcessDefinitionId","onOptionClick","optionSelected","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","useExisting","forwardRef","InputMaskDirective","multi","translationMask","0","9","optional","#","recursive","A","S","byPassKeys","invalidCharacters","_onChange","_onTouched","onTextInput","inputMask","mask","maskValue","selectionStart","isReversed","writeValue","registerOnChange","fn","registerOnTouched","actualValue","startCaret","maskToApply","isMaskReversed","getMasked","calculatedCaret","calculateCaretPosition","setCaretPosition","caretPosition","moveStart","moveEnd","newValueLength","oldValueLength","skipMaskChars","lastMaskChar","lastUntranslatedMaskChar","check","buf","maskIndex","maskLen","valueIndex","valueLength","addMethod","resetPos","isToCheck","maskDigit","charAt","valDigit","digit","lastMaskCharDigit","TextWidgetComponent","TypeaheadWidgetComponent","toSelect","isValidOptionName","optionName","isValueDefined","ProcessContentService","createTemporaryRawRelatedContent","contentId","getContent","getFileRawContent","getRawContent","getContentPreview","getFileRawContentUrl","getRawContentUrl","getContentThumbnail","getTaskRelatedContent","getRelatedContentForTask","getProcessRelatedContent","getRelatedContentForProcessInstance","deleteRelatedContent","deleteContent","createProcessRelatedContent","createRelatedContentOnProcessInstance","createTaskRelatedContent","createRelatedContentOnTask","UploadWidgetComponent","processContentService","multipleOption","getMultipleFileParam","removeFile","removeElementFromList","onFileChanged","filesSaved","uploadRawContent","contentBlob","resetFormValueWithNoFiles","getIcon","fileClicked","contentLinkModel","fetch","ɵ1$2","DateTimeWidgetComponent","ɵ0$4","WIDGET_DIRECTIVES","MASK_DIRECTIVE","FormBaseComponent","showTitle","showCompleteButton","disableCompleteButton","disableStartProcessButton","showSaveButton","showRefreshButton","showValidationIcon","getParsedFormDefinition","hasForm","isTitleEnabled","titleEnabled","getColorForOutcome","outcomeName","COMPLETE_OUTCOME_NAME","COMPLETE_BUTTON_COLOR","isOutcomeButtonEnabled","isOutcomeButtonVisible","isFormReadOnly","onOutcomeClicked","onExecuteOutcome","SAVE_OUTCOME_ID","COMPLETE_OUTCOME_ID","START_PROCESS_OUTCOME_ID","CUSTOM_OUTCOME_ID","onTaskSaved","storeFormAsMetadata","FormListComponent","ContentWidgetComponent","showDocumentContent","contentClick","thumbnailLoaded","contentLoaded","loadContent","loadThumbnailUrl","observable","thumbnailUrl","openViewer","FormRendererComponent","showDebugButton","ActivitiContentService","getAlfrescoNodes","accountId","folderId","accountShortId","getContentInFolder","getAlfrescoRepositories","includeAccount","includeAccounts","getRepositories","linkAlfrescoNode","siteId","createTemporaryRelatedContent","sourceId","applyAlfrescoNode","currentSideId","getSiteNameFromNodePath","siteName","foundNode","pathNode","nodeType","FormRenderingService","string","integer","multi-line-text","boolean","dropdown","amount","radio-buttons","hyperlink","readonly-text","typeahead","people","functional-group","dynamic-table","NodeMetadata","NodeService","getNodeMetadata","cleanMetadataFromSemicolon","createNodeMetadata","createNode","relativePath","addNode","FormErrorEvent","StartFormCustomButtonDirective","FormFieldComponent","formRenderingService","componentFactoryResolver","compiler","w","adf","originalField","getField","customTemplate","hasController","getComponentFactorySync","componentRef","componentType","wrappedField","components","componentInfo","createComponentFactorySync","componentClass","cmpClass","RuntimeComponent","decoratedCmp","RuntimeComponentModule","compileModuleAndAllComponentsSync","componentFactories","focusToggle","Compiler","read","FormBaseModule","SidenavLayoutContentDirective","SidenavLayoutHeaderDirective","SidenavLayoutNavigationDirective","SidenavLayoutComponent","mediaMatcher","hideSidenav","expanded","templateContext","toggleMenu","isMenuMinimized","onMediaQueryChange","initialMenuState","menuOpenStateSubject","menuOpenState$","stepOver","STEP_OVER","mediaQueryList","matchMedia","addListener","removeListener","matches","_isMenuMinimized","menuState","headerDirective","emptyTemplate","navigationDirective","contentDirective","MediaMatcher","sidenavAnimation","contentAnimationLeft","margin-left","contentAnimationRight","margin-right","LayoutContainerComponent","SIDENAV_STATES","MOBILE","EXPANDED","COMPACT","CONTENT_STATES","sidenavMax","sidenavMin","isMobileScreenSize","sidenavAnimationState","contentAnimationState","sidenav","toggledSidenavAnimation","toggledContentAnimation","getContentAnimationStateLeft","getContentAnimationStateRight","MatSidenav","SidebarActionMenuComponent","SidebarMenuDirective","SidebarMenuTitleIconDirective","SidebarMenuExpandIconDirective","HeaderLayoutComponent","showSidenavToggle","logo","LayoutModule","CommentListComponent","clickRow","selectComment","comment","selectedComment","getUserShortName","shortName","isPictureDefined","isAContentUsers","CommentModel","UserProcessModel","CommentProcessService","addTaskComment","getTaskComments","comments","getProcessInstanceComments","commentsApi","addProcessInstanceComment","CommentContentService","addNodeComment","addComment","createdAt","getNodeComments","getComments","CommentsComponent","commentProcessService","commentContentService","beingAdded","comment$","commentObserver","resetComments","isATask","comment1","comment2","date1","date2","currentComment","isANode","sanitize","unshift","CommentsModule","ButtonsMenuComponent","buttons","isMenuEmpty","isMobile","userAgent","ButtonsMenuModule","SortingPickerComponent","ascending","valueChange","sortingChange","onOptionChanged","toggleSortDirection","SortingPickerModule","ErrorContentComponent","secondaryButtonUrl","returnButtonUrl","UNKNOWN_ERROR","checkErrorExists","getTranslations","hasSecondButton","onSecondButton","onReturnButton","EmptyContentComponent","subtitle","TemplateModule","AuthGuardBase","authenticationService","canActivate","checkLogin","canActivateChild","redirectToUrl","urlToRedirect","getLoginRoute","isOAuthWithoutSilentLogin","AuthGuard","activeRoute","AuthGuardEcm","AuthGuardBpm","AuthGuardSsoRoleService","jwtHelperService","hasRealmRole","hasClientRole","rolesToCheck","hasRealmRoles","clientRoleName","hasRealmRolesForClientRole","getRealmRoles","access","client","clientRole","getAccessToken","currentRole","accessToken","AppsProcessService","getDeployedApplications","appsApi","getAppDefinitions","getDeployedApplicationsByName","app","getApplicationDetailsById","appId","PageTitleService","titleService","originalTitle","translatedTitle","onLangChange","onLanguageChanged","setTitle","updateTitle","Title","RenditionsService","getAvailableRenditionForNode","availableRenditions","renditionsAvailable","existingRendition","rend","generateRenditionForNode","empty","isRenditionAvailable","encoding","isAvailable","isConversionPossible","getRenditionsListByNodeId","convert","pollingInterval","concatMap","pollRendition","intervalSize","attempts","interval","takeWhile","ComponentTranslationModel","TranslateLoaderService","suffix","queue","registered","fetchLanguageFile","component","fallbackUrl","translationUrl","retry","langId","getComponentToFetch","observableBatch","isComponentInQueue","hasFailures","fullTranslation","UploadService","cache","excludedFileList","matchingOptions","activeTask","queueChanged","fileUpload","fileUploadStarting","fileUploadCancelled","fileUploadProgress","fileUploadAborted","fileUploadError","fileUploadComplete","fileUploadDeleted","fileDeleted","isUploading","getQueue","addToQueue","allowedFiles","currentFile","filterElement","isAllowed","Minimatch","uploadFilesInTheQueue","emitter","onUploadStarting","beginUpload","next_1","cancelUpload","abort","getAction","performAction","clearQueue","getUploadPromise","renditions","overwrite","autoRename","updateNodeContent","uploadFile","parentId","onUploadProgress","onUploadAborted","onUploadError","onUploadComplete","event_2","event_3","event_4","event_5","onUploadCancelled","event_6","onUploadDeleted","event_7","DeletedNodesApiService","preferences","defaultOptions","queryOptions","FavoritesApiService","remapEntry","cm:title","cm:description","remapFavoritesData","remapFavoriteEntries","getFavorites","personId","where","NodesApiService","api","getEntryFromEntity","entity","getNodeChildren","parentNodeId","nodeBody","createFolder","updateNode","PeopleContentService","getCurrentPerson","SearchConfigurationService","generateQueryBody","maxResults","paging","filterQueries","SearchService","searchConfigurationService","dataLoaded","getNodeQueryResults","term","queriesApi","findNodes","nodePaging","searchQuery","searchByQueryBody","queryBody","SharedLinksApiService","getSharedLinks","findSharedLinks","createSharedLinks","addSharedLink","deleteSharedLink","SitesService","getSites","getSite","deleteSite","permanentFlag","getSiteContent","relations","getSiteMembers","getEcmCurrentLoggedUserName","LoginDialogService","openLogin","openLoginDialog","currentPanelClass","chosenWidth","closeAll","ExternalAlfrescoApiService","domainPrefix","createPrefixFromHost","LockService","hasLockConfigured","isReadOnlyLock","isLockExpired","isLockOwnerAllowed","getLockExpiryTime","expiryLockTime","CoreAutomationService","setup","adfProxy","setConfigField","setStorageItem","clearStorage","apiReset","DialogModule","IconComponent","_isCustom","IconModule","EcmCompanyModel","RedirectionModel","PaginationModel","RequestPaginationModel","AlfrescoApiMock","changeConfig","AppConfigServiceMock","AuthenticationMock","setRedirectUrl","getRedirectUrl","fakeBpmUserNoImage","fakeUser1","fakeTasksComment","fakeProcessComment","CookieServiceMock","EventMock","keyDown","createEvent","initEvent","keyUp","resizeMobileView","Event","fakeSearch","mimetype","createdByUser","modifiedByUser","searchMockApi","TranslationMock","AlfrescoApiServiceMock","formTest","resetTestingModule","TestBed","startupServiceFactory","CoreModule","forRoot","ngModule","TranslateStore","TranslateLoader","APP_INITIALIZER","useFactory","deps","SidenavLayoutModule","defaultAppId","modelId","theme","deploymentId","organization","address1","address2","address3","postcode","fax","mimeTypeName","errorKey","briefSummary","stackTrace","descriptionURL","processDefinitionName","processDefinitionKey","taskDefinitionKey","endpoint","requestHeaders","2","customFieldsValueInfo","globalDateFormat","rightType","test_1","test_2","test_3","test_4","test_5","moduleDef","beforeAll","sessionStorage","configureTestingModule","compileComponents","afterAll"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        const keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            const value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        const result = {};\n\n        objects.forEach((source) => {\n            Object.keys(source).forEach((prop) => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { Observable, Subject } from 'rxjs';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\n\n/* spellchecker: disable */\nexport enum AppConfigValues {\n    APP_CONFIG_LANGUAGES_KEY = 'languages',\n    PROVIDERS = 'providers',\n    OAUTHCONFIG = 'oauth2',\n    ECMHOST = 'ecmHost',\n    BASESHAREURL = 'baseShareUrl',\n    BPMHOST = 'bpmHost',\n    IDENTITY_HOST = 'identityHost',\n    AUTHTYPE = 'authType',\n    CONTEXTROOTECM = 'contextRootEcm',\n    CONTEXTROOTBPM = 'contextRootBpm',\n    ALFRESCO_REPOSITORY_NAME = 'alfrescoRepositoryName',\n    LOG_LEVEL = 'logLevel',\n    LOGIN_ROUTE = 'loginRoute',\n    DISABLECSRF = 'disableCSRF',\n    AUTH_WITH_CREDENTIALS = 'auth.withCredentials',\n    APPLICATION = 'application',\n    NOTIFY_DURATION = 'notificationDefaultDuration'\n}\n\nexport enum Status {\n    INIT = 'init',\n    LOADING = 'loading',\n    LOADED = 'loaded'\n}\n\n/* spellchecker: enable */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent',\n        alfrescoRepositoryName: 'alfresco-1'\n    };\n\n    status: Status = Status.INIT;\n    protected onLoadSubject: Subject<any>;\n    onLoad: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.onLoadSubject = new Subject();\n        this.onLoad = this.onLoadSubject.asObservable();\n    }\n\n    /**\n     * Requests notification of a property value when it is loaded.\n     * @param property The desired property value\n     * @returns Property value, when loaded\n     */\n    select(property: string): Observable<any> {\n        return this.onLoadSubject\n            .pipe(\n                map((config) => config[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets the value of a named property.\n     * @param key Name of the property\n     * @param defaultValue Value to return if the key is not found\n     * @returns Value of the property\n     */\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const keywords = new Map<string, string>();\n            keywords.set('hostname', this.getLocationHostname());\n            keywords.set(':port', this.getLocationPort(':'));\n            keywords.set('port', this.getLocationPort());\n            keywords.set('protocol', this.getLocationProtocol());\n            result = this.formatString(result, keywords);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    /**\n     * Gets the location.protocol value.\n     * @returns The location.protocol string\n     */\n    getLocationProtocol(): string {\n        return location.protocol;\n    }\n\n    /**\n     * Gets the location.hostname property.\n     * @returns Value of the property\n     */\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    /**\n     * Gets the location.port property.\n     * @param prefix Text added before port value\n     * @returns Port with prefix\n     */\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    /**\n     * Loads the config file.\n     * @returns Notification when loading is complete\n     */\n    load(): Promise<any> {\n        return new Promise(async (resolve) => {\n            const configUrl = `app.config.json?v=${Date.now()}`;\n\n            if (this.status === Status.INIT) {\n                this.status = Status.LOADING;\n                await this.http.get(configUrl).subscribe(\n                    (data: any) => {\n                        this.status = Status.LOADED;\n                        this.config = Object.assign({}, this.config, data || {});\n                        this.onLoadSubject.next(this.config);\n                        resolve(this.config);\n                    },\n                    () => {\n                        resolve(this.config);\n                    }\n                );\n            } else if (this.status === Status.LOADED) {\n                resolve(this.config);\n            } else if (this.status === Status.LOADING) {\n                this.onLoad.subscribe(() => {\n                    resolve(this.config);\n                });\n            }\n        });\n    }\n\n    private formatString(str: string, keywords: Map<string, string>): string {\n        let result = str;\n\n        keywords.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ContentApi,\n    Core,\n    Activiti,\n    SearchApi,\n    Node\n} from '@alfresco/js-api';\nimport { AlfrescoApiCompatibility, AlfrescoApiConfig } from '@alfresco/js-api';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Subject } from 'rxjs';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlfrescoApiService {\n    /**\n     * Publish/subscribe to events related to node updates.\n     */\n    nodeUpdated = new Subject<Node>();\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    lastConfig: AlfrescoApiConfig;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get taskApi(): Activiti.TaskApi {\n        return this.getInstance().activiti.taskApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): Core.RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): Core.SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): Core.SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): Core.FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): Core.PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi(): SearchApi {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): Core.VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    get classesApi(): Core.ClassesApi {\n        return this.getInstance().core.classesApi;\n    }\n\n    get groupsApi(): Core.GroupsApi {\n        return this.getInstance().core.groupsApi;\n    }\n\n    constructor(protected appConfig: AppConfigService) {\n    }\n\n    async load() {\n        await this.appConfig.load().then(() => {\n            this.initAlfrescoApi();\n        });\n    }\n\n    async reset() {\n        this.initAlfrescoApi();\n    }\n\n    protected initAlfrescoApi() {\n        const oauth: OauthConfigModel = Object.assign({}, this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null));\n        if (oauth) {\n            oauth.redirectUri = window.location.origin + (oauth.redirectUri || '/');\n            oauth.redirectUriLogout = window.location.origin + (oauth.redirectUriLogout || '/');\n        }\n\n        const config = new AlfrescoApiConfig({\n            provider: this.appConfig.get<string>(AppConfigValues.PROVIDERS),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF),\n            withCredentials: this.appConfig.get<boolean>(AppConfigValues.AUTH_WITH_CREDENTIALS, false),\n            oauth2: oauth\n        });\n\n        if (this.alfrescoApi && this.isDifferentConfig(this.lastConfig, config)) {\n            this.lastConfig = config;\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.lastConfig = config;\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n\n    }\n\n    isDifferentConfig(lastConfig: AlfrescoApiConfig, newConfig: AlfrescoApiConfig) {\n        return JSON.stringify(lastConfig) !== JSON.stringify(newConfig);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CookieService {\n\n    /**\n     * Checks if cookies are enabled.\n     * @returns True if enabled, false otherwise\n     */\n    isEnabled(): boolean {\n        // for certain scenarios Chrome may say 'true' but have cookies still disabled\n        if (navigator.cookieEnabled === false) {\n            return false;\n        }\n\n        document.cookie = 'test-cookie';\n        return document.cookie.indexOf('test-cookie') >= 0;\n    }\n\n    /**\n     * Retrieves a cookie by its key.\n     * @param key Key to identify the cookie\n     * @returns The cookie data or null if it is not found\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Sets a cookie.\n     * @param key Key to identify the cookie\n     * @param data Data value to set for the cookie\n     * @param expiration Expiration date of the data\n     * @param path \"Pathname\" to store the cookie\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n\n    /** Placeholder for testing purposes - do not use. */\n    clear() {\n        /* placeholder for testing purposes */\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-console  */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LogService {\n\n    get currentLogLevel() {\n        const configLevel: string = this.appConfig.get<string>(AppConfigValues.LOG_LEVEL);\n\n        if (configLevel) {\n            return this.getLogLevel(configLevel);\n        }\n\n        return LogLevelsEnum.TRACE;\n    }\n\n    onMessage: Subject<any>;\n\n    constructor(private appConfig: AppConfigService) {\n        this.onMessage = new Subject();\n    }\n\n    /**\n     * Logs a message at the \"ERROR\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n\n            this.messageBus(message, 'ERROR');\n\n            console.error(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"DEBUG\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n\n            this.messageBus(message, 'DEBUG');\n\n            console.debug(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"INFO\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n\n            this.messageBus(message, 'INFO');\n\n            console.info(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at any level from \"TRACE\" upwards.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'LOG');\n\n            console.log(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"TRACE\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n\n            this.messageBus(message, 'TRACE');\n\n            console.trace(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message at the \"WARN\" level.\n     * @param message Message to log\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n\n            this.messageBus(message, 'WARN');\n\n            console.warn(message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Logs a message if a boolean test fails.\n     * @param test Test value (typically a boolean expression)\n     * @param message Message to show if test is false\n     * @param optionalParams Interpolation values for the message in \"printf\" format\n     */\n    assert(test?: boolean, message?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n\n            this.messageBus(message, 'ASSERT');\n\n            console.assert(test, message, ...optionalParams);\n        }\n    }\n\n    /**\n     * Starts an indented group of log messages.\n     * @param groupTitle Title shown at the start of the group\n     * @param optionalParams Interpolation values for the title in \"printf\" format\n     */\n    group(groupTitle?: string, ...optionalParams: any[]) {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.group(groupTitle, ...optionalParams);\n        }\n    }\n\n    /**\n     * Ends a indented group of log messages.\n     */\n    groupEnd() {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            console.groupEnd();\n        }\n    }\n\n    /**\n     * Converts a log level name string into its numeric equivalent.\n     * @param level Level name\n     * @returns Numeric log level\n     */\n    getLogLevel(level: string): LogLevelsEnum {\n        const referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n\n    /**\n     * Triggers notification callback for log messages.\n     * @param text Message text\n     * @param logLevel Log level for the message\n     */\n    messageBus(text: string, logLevel: string) {\n        this.onMessage.next({ text: text, type: logLevel });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, throwError, Observer } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { RedirectionModel } from '../models/redirection.model';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserRepresentation } from '@alfresco/js-api';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthenticationService {\n    private redirectUrl: RedirectionModel = null;\n\n    private bearerExcludedUrls: string[] = ['auth/realms', 'resources/', 'assets/'];\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private appConfig: AppConfigService,\n        private alfrescoApi: AlfrescoApiService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * Checks if the user logged in.\n     * @returns True if logged in, false otherwise\n     */\n    isLoggedIn(): boolean {\n        if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n            return false;\n        }\n        return this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Does the provider support OAuth?\n     * @returns True if supported, false otherwise\n     */\n    isOauth(): boolean {\n        return this.alfrescoApi.getInstance().isOauthConfiguration();\n    }\n\n    /**\n     * Does the provider support ECM?\n     * @returns True if supported, false otherwise\n     */\n    isECMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmConfiguration();\n    }\n\n    /**\n     * Does the provider support BPM?\n     * @returns True if supported, false otherwise\n     */\n    isBPMProvider(): boolean {\n        return this.alfrescoApi.getInstance().isBpmConfiguration();\n    }\n\n    /**\n     * Does the provider support both ECM and BPM?\n     * @returns True if both are supported, false otherwise\n     */\n    isALLProvider(): boolean {\n        return this.alfrescoApi.getInstance().isEcmBpmConfiguration();\n    }\n\n    /**\n     * Logs the user in.\n     * @param username Username for the login\n     * @param password Password for the login\n     * @param rememberMe Stores the user's login details if true\n     * @returns Object with auth type (\"ECM\", \"BPM\" or \"ALL\") and auth ticket\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        return from(this.alfrescoApi.getInstance().login(username, password))\n            .pipe(\n                map((response: any) => {\n                    this.saveRememberMeCookie(rememberMe);\n                    this.onLogin.next(response);\n                    return {\n                        type: this.appConfig.get(AppConfigValues.PROVIDERS),\n                        ticket: response\n                    };\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Logs the user in with SSO\n     */\n    ssoImplicitLogin() {\n        this.alfrescoApi.getInstance().implicitLogin();\n    }\n\n    /**\n     * Saves the \"remember me\" cookie as either a long-life cookie or a session cookie.\n     * @param rememberMe Enables a long-life cookie\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * Checks whether the \"remember me\" cookie was set or not.\n     * @returns True if set, false otherwise\n     */\n    isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Logs the user out.\n     * @returns Response event called when logout is complete\n     */\n    logout() {\n        return from(this.callApiLogout())\n            .pipe(\n                tap((response) => {\n                    this.onLogout.next(response);\n                    return response;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Gets the ECM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketEcm();\n    }\n\n    /**\n     * Gets the BPM ticket stored in the Storage.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketBpm(): string | null {\n        return this.alfrescoApi.getInstance().getTicketBpm();\n    }\n\n    /**\n     * Gets the BPM ticket from the Storage in Base 64 format.\n     * @returns The ticket or `null` if none was found\n     */\n    getTicketEcmBase64(): string | null {\n        const ticket = this.alfrescoApi.getInstance().getTicketEcm();\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * Checks if the user is logged in on an ECM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isEcmLoggedIn(): boolean {\n        if (this.isECMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isEcmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the user is logged in on a BPM provider.\n     * @returns True if logged in, false otherwise\n     */\n    isBpmLoggedIn(): boolean {\n        if (this.isBPMProvider() || this.isALLProvider()) {\n            if (!this.isOauth() && this.cookie.isEnabled() && !this.isRememberMeSet()) {\n                return false;\n            }\n            return this.alfrescoApi.getInstance().isBpmLoggedIn();\n        }\n        return false;\n    }\n\n    /**\n     * Gets the ECM username.\n     * @returns The ECM username\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().getEcmUsername();\n    }\n\n    /**\n     * Gets the BPM username\n     * @returns The BPM username\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().getBpmUsername();\n    }\n\n    /** Sets the URL to redirect to after login.\n     * @param url URL to redirect to\n     */\n    setRedirect(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    /** Gets the URL to redirect to after login.\n     * @returns The redirect URL\n     */\n    getRedirect(): string {\n        const provider = <string> this.appConfig.get(AppConfigValues.PROVIDERS);\n        return this.hasValidRedirection(provider) ? this.redirectUrl.url : null;\n    }\n\n    /**\n     * Gets information about the user currently logged into APS.\n     * @returns User information\n     */\n    getBpmLoggedUser(): Observable<UserRepresentation> {\n        return from(this.alfrescoApi.getInstance().activiti.profileApi.getProfile());\n    }\n\n    private hasValidRedirection(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === provider || this.hasSelectedProviderAll(provider));\n    }\n\n    private hasSelectedProviderAll(provider: string): boolean {\n        return this.redirectUrl && (this.redirectUrl.provider === 'ALL' || provider === 'ALL');\n    }\n\n    /**\n     * Prints an error message in the console browser\n     * @param error Error message\n     * @returns Object representing the error message\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return throwError(error || 'Server error');\n    }\n\n    /**\n     * Gets the set of URLs that the token bearer is excluded from.\n     * @returns Array of URL strings\n     */\n    getBearerExcludedUrls(): string[] {\n        return this.bearerExcludedUrls;\n    }\n\n    /**\n     * Gets the auth token.\n     * @returns Auth token string\n     */\n    getToken(): string {\n        return localStorage.getItem('access_token');\n    }\n\n    /**\n     * Adds the auth token to an HTTP header using the 'bearer' scheme.\n     * @param headersArg Header that will receive the token\n     * @returns The new header with the token added\n     */\n    addTokenToHeader(headersArg?: HttpHeaders): Observable<HttpHeaders> {\n        return new Observable((observer: Observer<any>) => {\n            let headers = headersArg;\n            if (!headers) {\n                headers = new HttpHeaders();\n            }\n            try {\n                const token: string = this.getToken();\n                headers = headers.set('Authorization', 'bearer ' + token);\n                observer.next(headers);\n                observer.complete();\n            } catch (error) {\n                observer.error(error);\n            }\n        });\n    }\n\n    /**\n     * Checks if SSO is configured correctly.\n     * @returns True if configured correctly, false otherwise\n     */\n    isSSODiscoveryConfigured() {\n        return this.alfrescoApi.getInstance().storage.getItem('discovery') ? true : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { from, throwError } from 'rxjs';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    /**\n     * Gets product information for Content Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getEcmProductInfo(): Observable<EcmProductVersionModel> {\n        return from(this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .pipe(\n                map((res) => new EcmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n\n    /**\n     * Gets product information for Process Services.\n     * @returns ProductVersionModel containing product details\n     */\n    public getBpmProductInfo(): Observable<BpmProductVersionModel> {\n        return from(this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .pipe(\n                map((res) => new BpmProductVersionModel(res)),\n                catchError((err) => throwError(err))\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: any;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flatten(folder: any): Promise<FileInfo[]> {\n        const reader = folder.createReader();\n        const files: FileInfo[] = [];\n        return new Promise((resolve) => {\n            const iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(() => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map((entry) => {\n                            if (entry.isFile) {\n                                return new Promise((resolveFile) => {\n                                    entry.file(function (file: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: file,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flatten(entry).then((result) => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        const result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDateFormats } from '@angular/material';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport moment from 'moment-es6';\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplayFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map((month) => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        const dateNames: string[] = [];\n        for (let date = 1; date <= 31; date++) {\n            dateNames.push(String(date));\n        }\n\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        const locale = this.locale || 'en';\n        return date.clone().locale(locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        const locale = this.locale || 'en';\n        return moment().locale(locale);\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        const locale = this.locale || 'en';\n\n        if (value && typeof value === 'string') {\n            let m = moment(value, parseFormat, locale, true);\n            if (!m.isValid()) {\n                // use strict parsing because Moment's parser is very forgiving, and this can lead to undesired behavior.\n                m = moment(value, this.overrideDisplayFormat, locale, true);\n            }\n            if (m.isValid()) {\n                // if user omits year, it defaults to 2001, so check for that issue.\n                if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                    // if 2001 not actually in the value string, change to current year\n                    const currentYear = new Date().getFullYear();\n                    m.set('year', currentYear);\n                    // if date is in the future, set previous year\n                    if (m.isAfter(moment())) {\n                        m.set('year', currentYear - 1);\n                    }\n                }\n            }\n            return m;\n        }\n\n        return value ? moment(value).locale(locale) : null;\n    }\n\n    format(date: Moment, displayFormat: any): string {\n        date = this.clone(date);\n        displayFormat = this.overrideDisplayFormat ? this.overrideDisplayFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        super.setLocale(locale);\n\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        const locale = this.locale || 'en';\n        const d = moment(iso8601String, moment.ISO_8601).locale(locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectUtils } from '../../utils';\nimport { DataRow } from './data-row.model';\n\n// Simple implementation of the DataRow interface.\nexport class ObjectDataRow implements DataRow {\n\n    constructor(private obj: any, public isSelected: boolean = false) {\n        if (!obj) {\n            throw new Error('Object source not found');\n        }\n\n    }\n\n    getValue(key: string): any {\n        return ObjectUtils.getValue(this.obj, key);\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n\n    imageErrorResolver(event: Event): string {\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { DataColumn } from './data-column.model';\n\n// Simple implementation of the DataColumn interface.\nexport class ObjectDataColumn implements DataColumn {\n\n    key: string;\n    type: string; // text|image\n    format: string;\n    sortable: boolean;\n    title: string;\n    srTitle: string;\n    cssClass: string;\n    template?: TemplateRef<any>;\n    copyContent?: boolean;\n\n    constructor(input: any) {\n        this.key = input.key;\n        this.type = input.type || 'text';\n        this.format = input.format;\n        this.sortable = input.sortable;\n        this.title = input.title;\n        this.srTitle = input.srTitle;\n        this.cssClass = input.cssClass;\n        this.template = input.template;\n        this.copyContent = input.copyContent;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class DataSorting {\n    constructor(\n        public key?: string,\n        public direction?: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataColumn } from './data-column.model';\nimport { DataRow } from './data-row.model';\nimport { ObjectDataRow } from './object-datarow.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\nimport { DataSorting } from './data-sorting.model';\nimport { DataTableAdapter } from './datatable-adapter';\nimport { Subject } from 'rxjs';\n\n// Simple implementation of the DataTableAdapter interface.\nexport class ObjectDataTableAdapter implements DataTableAdapter {\n\n    private _sorting: DataSorting;\n    private _rows: DataRow[];\n    private _columns: DataColumn[];\n\n    selectedRow: DataRow;\n    rowsChanged: Subject<Array<DataRow>>;\n\n    static generateSchema(data: any[]) {\n        const schema = [];\n\n        if (data && data.length) {\n            const rowToExaminate = data[0];\n\n            if (typeof rowToExaminate === 'object') {\n                for (const key in rowToExaminate) {\n                    if (rowToExaminate.hasOwnProperty(key)) {\n                        schema.push({\n                            type: 'text',\n                            key: key,\n                            title: key,\n                            sortable: false\n                        });\n                    }\n                }\n            }\n\n        }\n        return schema;\n    }\n\n    constructor(data: any[] = [], schema: DataColumn[] = []) {\n        this._rows = [];\n        this._columns = [];\n\n        if (data && data.length > 0) {\n            this._rows = data.map((item) => {\n                return new ObjectDataRow(item);\n            });\n        }\n\n        if (schema && schema.length > 0) {\n            this._columns = schema.map((item) => {\n                return new ObjectDataColumn(item);\n            });\n\n            // Sort by first sortable or just first column\n            const sortable = this._columns.filter((column) => column.sortable);\n            if (sortable.length > 0) {\n                this.sort(sortable[0].key, 'asc');\n            }\n        }\n\n        this.rowsChanged = new Subject<Array<DataRow>>();\n    }\n\n    getRows(): Array<DataRow> {\n        return this._rows;\n    }\n\n    setRows(rows: Array<DataRow>) {\n        this._rows = rows || [];\n        this.sort();\n        this.rowsChanged.next(this._rows);\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this._columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this._columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error('Row not found');\n        }\n        if (!col) {\n            throw new Error('Column not found');\n        }\n\n        const value = row.getValue(col.key);\n\n        if (col.type === 'icon') {\n            const icon = row.getValue(col.key);\n            return icon;\n        }\n\n        return value;\n    }\n\n    getSorting(): DataSorting {\n        return this._sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this._sorting = sorting;\n\n        if (sorting && sorting.key) {\n            this._rows.sort((a: DataRow, b: DataRow) => {\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right)\n                    : right.localeCompare(left);\n            });\n        }\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this._sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { DiscoveryApiService } from '../services/discovery-api.service';\nimport { ObjectDataTableAdapter } from '../datatable/data/object-datatable-adapter';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { Observable } from 'rxjs';\nimport { ExtensionRef, AppExtensionService } from '@alfresco/adf-extensions';\n\n@Component({\n    selector: 'adf-about',\n    templateUrl: './about.component.html',\n    styleUrls: ['./about.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AboutComponent implements OnInit {\n\n    data: ObjectDataTableAdapter;\n    status: ObjectDataTableAdapter;\n    license: ObjectDataTableAdapter;\n    modules: ObjectDataTableAdapter;\n    extensionColumns: string[] = ['$id', '$name', '$version', '$vendor', '$license', '$runtime', '$description'];\n    extensions$: Observable<ExtensionRef[]>;\n\n    /** Commit corresponding to the version of ADF to be used. */\n    @Input()\n    githubUrlCommitAlpha = 'https://github.com/Alfresco/alfresco-ng2-components/commits/';\n\n    /** Toggles showing/hiding of extensions block. */\n    @Input()\n    showExtensions = true;\n\n    /** Regular expression for filtering dependencies packages. */\n    @Input() regexp = '^(@alfresco)';\n\n    ecmHost = '';\n    bpmHost = '';\n\n    ecmVersion: EcmProductVersionModel = null;\n    bpmVersion: BpmProductVersionModel = null;\n\n    constructor(private http: HttpClient,\n                private appConfig: AppConfigService,\n                private authService: AuthenticationService,\n                private discovery: DiscoveryApiService,\n                appExtensions: AppExtensionService) {\n        this.extensions$ = appExtensions.references$;\n    }\n\n    ngOnInit() {\n\n        if (this.authService.isEcmLoggedIn()) {\n            this.discovery.getEcmProductInfo().subscribe((ecmVers) => {\n                this.ecmVersion = ecmVers;\n\n                this.modules = new ObjectDataTableAdapter(this.ecmVersion.modules, [\n                    { type: 'text', key: 'id', title: 'ABOUT.TABLE_HEADERS.MODULES.ID', sortable: true },\n                    { type: 'text', key: 'title', title: 'ABOUT.TABLE_HEADERS.MODULES.TITLE', sortable: true },\n                    { type: 'text', key: 'version', title: 'ABOUT.TABLE_HEADERS.MODULES.DESCRIPTION', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'installDate',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_DATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'installState',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.INSTALL_STATE',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMin',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MIN',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'versionMax',\n                        title: 'ABOUT.TABLE_HEADERS.MODULES.VERSION_MAX',\n                        sortable: true\n                    }\n                ]);\n\n                this.status = new ObjectDataTableAdapter([this.ecmVersion.status], [\n                    { type: 'text', key: 'isReadOnly', title: 'ABOUT.TABLE_HEADERS.STATUS.READ_ONLY', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isAuditEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.AUDIT_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isQuickShareEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.QUICK_SHARE_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isThumbnailGenerationEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.STATUS.THUMBNAIL_ENABLED',\n                        sortable: true\n                    }\n                ]);\n\n                this.license = new ObjectDataTableAdapter([this.ecmVersion.license], [\n                    { type: 'text', key: 'issuedAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.ISSUES_AT', sortable: true },\n                    { type: 'text', key: 'expiresAt', title: 'ABOUT.TABLE_HEADERS.LICENSE.EXPIRES_AT', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'remainingDays',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.REMAINING_DAYS',\n                        sortable: true\n                    },\n                    { type: 'text', key: 'holder', title: 'ABOUT.TABLE_HEADERS.LICENSE.HOLDER', sortable: true },\n                    { type: 'text', key: 'mode', title: 'ABOUT.TABLE_HEADERS.LICENSE.MODE', sortable: true },\n                    {\n                        type: 'text',\n                        key: 'isClusterEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CLUSTER_ENABLED',\n                        sortable: true\n                    },\n                    {\n                        type: 'text',\n                        key: 'isCryptodocEnabled',\n                        title: 'ABOUT.TABLE_HEADERS.LICENSE.CRYPTODOC_ENABLED',\n                        sortable: true\n                    }\n                ]);\n            });\n        }\n\n        if (this.authService.isBpmLoggedIn()) {\n            this.discovery.getBpmProductInfo().subscribe((bpmVers) => {\n                this.bpmVersion = bpmVers;\n            });\n        }\n\n        this.http.get('/versions.json?' + new Date()).subscribe((response: any) => {\n\n            const alfrescoPackages = Object.keys(response.dependencies).filter((val) => {\n                return new RegExp(this.regexp).test(val);\n            });\n\n            const alfrescoPackagesTableRepresentation = [];\n            alfrescoPackages.forEach((val) => {\n                alfrescoPackagesTableRepresentation.push({\n                    name: val,\n                    version: (response.dependencies[val].version || response.dependencies[val].required.version)\n                });\n            });\n\n            this.gitHubLinkCreation(alfrescoPackagesTableRepresentation);\n\n            this.data = new ObjectDataTableAdapter(alfrescoPackagesTableRepresentation, [\n                { type: 'text', key: 'name', title: 'Name', sortable: true },\n                { type: 'text', key: 'version', title: 'Version', sortable: true }\n            ]);\n\n        });\n\n        this.ecmHost = this.appConfig.get<string>(AppConfigValues.ECMHOST);\n        this.bpmHost = this.appConfig.get<string>(AppConfigValues.BPMHOST);\n    }\n\n    private gitHubLinkCreation(alfrescoPackagesTableRepresentation): void {\n        const corePackage = alfrescoPackagesTableRepresentation.find((packageUp) => {\n            return packageUp.name === '@alfresco/adf-core';\n        });\n\n        if (corePackage) {\n            const commitIsh = corePackage.version.split('-');\n            if (commitIsh.length > 1) {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + commitIsh[1];\n            } else {\n                this.githubUrlCommitAlpha = this.githubUrlCommitAlpha + corePackage.version;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n    MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n    MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n    MatTooltipModule, MatExpansionModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule, MatExpansionModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs';\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n    selector: 'adf-context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <ng-container *ngFor=\"let link of links\">\n                <button *ngIf=\"link.model?.visible\"\n                        [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                        mat-menu-item\n                        [disabled]=\"link.model?.disabled\"\n                        (click)=\"onMenuItemClick($event, link)\">\n                    <mat-icon *ngIf=\"showIcons && link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                    {{ (link.title || link.model?.title) | translate }}\n                </button>\n            </ng-container>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = { left: 0, top: 0 };\n    private menuElement = null;\n    private subscriptions: Subscription[] = [];\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    constructor(\n        private viewport: ViewportRuler,\n        private overlayContainer: OverlayContainer,\n        private contextMenuService: ContextMenuService,\n        private renderer: Renderer2\n    ) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.contextMenuService.show.subscribe((mouseEvent) => this.showMenu(mouseEvent.event, mouseEvent.obj)),\n\n            this.menuTrigger.onMenuOpen.subscribe(() => {\n                const container = this.overlayContainer.getContainerElement();\n                if (container) {\n                    this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (contextmenuEvent: Event) => {\n                        contextmenuEvent.preventDefault();\n                    });\n                }\n                this.menuElement = this.getContextMenuElement();\n            }),\n\n            this.menuTrigger.onMenuClose.subscribe(() => {\n                this.menuElement = null;\n                if (this.contextMenuListenerFn) {\n                    this.contextMenuListenerFn();\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(mouseEvent, links) {\n        this.links = links;\n\n        if (mouseEvent) {\n            this.mouseLocation = {\n                left: mouseEvent.clientX,\n                top: mouseEvent.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.updatePosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private updatePosition() {\n        setTimeout(() => {\n            if (this.mdMenuElement.parentElement) {\n                if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n                    this.menuTrigger.menu.xPosition = 'before';\n                    this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n                } else {\n                    this.menuTrigger.menu.xPosition = 'after';\n                    this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n                }\n\n                if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n                    this.menuTrigger.menu.yPosition = 'above';\n                    this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n                } else {\n                    this.menuTrigger.menu.yPosition = 'below';\n                    this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n                }\n            }\n        }, 0);\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayRef } from '@angular/cdk/overlay';\n\nexport class ContextMenuOverlayRef {\n\n    constructor(private overlayRef: OverlayRef) { }\n\n    close(): void {\n        this.overlayRef.dispose();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_DATA = new InjectionToken<any>('CONTEXT_MENU_DATA');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    sequence,\n    AnimationStateMetadata,\n    AnimationTransitionMetadata\n} from '@angular/animations';\n\nexport const contextMenuAnimation: ( AnimationStateMetadata | AnimationTransitionMetadata)[] = [\n    state('void', style({\n        opacity: 0,\n        transform: 'scale(0.01, 0.01)'\n    })),\n    transition('void => *', sequence([\n        query('.mat-menu-content', style({ opacity: 0 })),\n        animate('100ms linear', style({ opacity: 1, transform: 'scale(1, 0.5)' })),\n        group([\n            query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\n                style({ opacity: 1 })\n            )),\n            animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({ transform: 'scale(1, 1)' }))\n        ])\n    ])),\n    transition('* => void', animate('150ms 50ms linear', style({ opacity: 0 })))\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, ViewEncapsulation, HostListener, AfterViewInit,\n    Optional, Inject, QueryList, ViewChildren\n} from '@angular/core';\nimport { trigger } from '@angular/animations';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { MatMenuItem } from '@angular/material';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { contextMenuAnimation } from './animations';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\n\n@Component({\n    selector: 'adf-context-menu',\n    template: `\n        <div mat-menu class=\"mat-menu-panel\" @panelAnimation>\n            <div id=\"adf-context-menu-content\" class=\"mat-menu-content\">\n                <ng-container *ngFor=\"let link of links\">\n                    <button *ngIf=\"link.model?.visible\"\n                            [attr.data-automation-id]=\"'context-'+((link.title || link.model?.title) | translate)\"\n                            mat-menu-item\n                            [disabled]=\"link.model?.disabled\"\n                            (click)=\"onMenuItemClick($event, link)\">\n                        <mat-icon *ngIf=\"link.model?.icon\">{{ link.model.icon }}</mat-icon>\n                        <span>{{ (link.title || link.model?.title) | translate }}</span>\n                    </button>\n                </ng-container>\n            </div>\n        </div>\n    `,\n    host: {\n        role: 'menu',\n        class: 'adf-context-menu'\n    },\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        trigger('panelAnimation', contextMenuAnimation)\n    ]\n})\nexport class ContextMenuListComponent implements AfterViewInit {\n    private keyManager: FocusKeyManager<MatMenuItem>;\n    @ViewChildren(MatMenuItem) items: QueryList<MatMenuItem>;\n    links: any[];\n\n    @HostListener('document:keydown.Escape', ['$event'])\n    handleKeydownEscape(event: KeyboardEvent) {\n        if (event) {\n            this.contextMenuOverlayRef.close();\n        }\n    }\n\n    @HostListener('document:keydown', ['$event'])\n    handleKeydownEvent(event: KeyboardEvent) {\n        if (event) {\n            const keyCode = event.keyCode;\n            if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                this.keyManager.onKeydown(event);\n            }\n        }\n    }\n\n    constructor(\n        @Inject(ContextMenuOverlayRef) private contextMenuOverlayRef: ContextMenuOverlayRef,\n        @Optional() @Inject(CONTEXT_MENU_DATA) private data: any\n    ) {\n        this.links = this.data;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any) {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n\n        menuItem.subject.next(menuItem);\n        this.contextMenuOverlayRef.close();\n    }\n\n    ngAfterViewInit() {\n        this.keyManager = new FocusKeyManager<MatMenuItem>(this.items);\n        this.keyManager.setFirstItemActive();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Injector, ElementRef, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { PortalInjector, ComponentPortal } from '@angular/cdk/portal';\nimport { ContextMenuOverlayRef } from './context-menu-overlay';\nimport { ContextMenuOverlayConfig } from './interfaces';\nimport { CONTEXT_MENU_DATA } from './context-menu.tokens';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\nconst DEFAULT_CONFIG: ContextMenuOverlayConfig = {\n    panelClass: 'cdk-overlay-pane',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n    hasBackdrop: true\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContextMenuOverlayService {\n\n    constructor( private injector: Injector, private overlay: Overlay) { }\n\n    open(config: ContextMenuOverlayConfig): ContextMenuOverlayRef {\n        const overlayConfig = { ...DEFAULT_CONFIG, ...config };\n\n        const overlay = this.createOverlay(overlayConfig);\n\n        const overlayRef = new ContextMenuOverlayRef(overlay);\n\n        this.attachDialogContainer(overlay, config, overlayRef);\n\n        overlay.backdropClick().subscribe(() => overlayRef.close());\n\n        // prevent native contextmenu on overlay element if config.hasBackdrop is true\n        if (overlayConfig.hasBackdrop) {\n            (<any> overlay)._backdropElement\n                .addEventListener('contextmenu', (event) => {\n                    event.preventDefault();\n                    (<any> overlay)._backdropClick.next(null);\n                }, true);\n        }\n\n        return overlayRef;\n    }\n\n    private createOverlay(config: ContextMenuOverlayConfig): OverlayRef {\n        const overlayConfig = this.getOverlayConfig(config);\n        return this.overlay.create(overlayConfig);\n    }\n\n    private attachDialogContainer(overlay: OverlayRef, config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef) {\n        const injector = this.createInjector(config, contextMenuOverlayRef);\n\n        const containerPortal = new ComponentPortal(ContextMenuListComponent, null, injector);\n        const containerRef: ComponentRef<ContextMenuListComponent> = overlay.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createInjector(config: ContextMenuOverlayConfig, contextMenuOverlayRef: ContextMenuOverlayRef): PortalInjector {\n        const injectionTokens = new WeakMap();\n\n        injectionTokens.set(ContextMenuOverlayRef, contextMenuOverlayRef);\n        injectionTokens.set(CONTEXT_MENU_DATA, config.data);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    private getOverlayConfig(config: ContextMenuOverlayConfig): OverlayConfig {\n        const { clientY, clientX  } = config.source;\n\n        const fakeElement: any = {\n            getBoundingClientRect: (): ClientRect => ({\n                bottom: clientY,\n                height: 0,\n                left: clientX,\n                right: clientX,\n                top: clientY,\n                width: 0\n            })\n        };\n\n        const positionStrategy = this.overlay.position()\n            .connectedTo(\n                new ElementRef(fakeElement),\n                { originX: 'start', originY: 'bottom' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'start', overlayY: 'bottom' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'top' },\n                { overlayX: 'start', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'top' },\n                { overlayX: 'end', overlayY: 'top' })\n            .withFallbackPosition(\n                { originX: 'end', originY: 'center' },\n                { overlayX: 'start', overlayY: 'center' })\n            .withFallbackPosition(\n                { originX: 'start', originY: 'center' },\n                { overlayX: 'end', overlayY: 'center' }\n            );\n\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass,\n            panelClass: config.panelClass,\n            scrollStrategy: this.overlay.scrollStrategies.close(),\n            positionStrategy\n        });\n\n        return overlayConfig;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuOverlayService } from './context-menu-overlay.service';\n\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    /** Items for the menu. */\n    @Input('adf-context-menu')\n    links: any[];\n\n    /** Is the menu enabled? */\n    @Input('adf-context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private contextMenuService: ContextMenuOverlayService) {}\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                this.contextMenuService.open({\n                    source: event,\n                    data: this.links\n                });\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuListComponent } from './context-menu-list.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective,\n        ContextMenuListComponent\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    entryComponents: [\n        ContextMenuListComponent\n    ]\n})\nexport class ContextMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n    storagePrefix: string;\n\n    constructor(private appConfigService: AppConfigService) {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n        this.appConfigService.onLoad.subscribe(this.getAppPrefix.bind(this));\n    }\n\n    /**\n     * Gets an item.\n     * @param key Key to identify the item\n     * @returns The item (if any) retrieved by the key\n     */\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.storagePrefix + key);\n        } else {\n            return this.memoryStore.hasOwnProperty(this.storagePrefix + key) ? this.memoryStore[this.storagePrefix + key] : null;\n        }\n    }\n\n    /**\n     * Stores an item\n     * @param key Key to identify the item\n     * @param data Data to store\n     */\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(this.storagePrefix + key, data);\n        } else {\n            this.memoryStore[this.storagePrefix + key] = data.toString();\n        }\n    }\n\n    /** Removes all currently stored items. */\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    /**\n     * Removes a single item.\n     * @param key Key to identify the item\n     */\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(this.storagePrefix + key);\n        } else {\n            delete this.memoryStore[this.storagePrefix + key];\n        }\n    }\n\n    /**\n     * Is any item currently stored under `key`?\n     * @param key Key identifying item to check\n     * @returns True if key retrieves an item, false otherwise\n     */\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(this.storagePrefix + key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            const storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Sets the prefix that is used for the local storage of the app\n     * It assigns the string that is defined i the app config,\n     * empty prefix otherwise.\n     */\n    getAppPrefix() {\n        const appConfiguration = this.appConfigService.get<any>('application');\n        if (appConfiguration && appConfiguration.storagePrefix) {\n            this.storagePrefix = appConfiguration.storagePrefix + '_';\n        } else {\n            this.storagePrefix = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { StorageService } from './storage.service';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nexport enum UserPreferenceValues {\n    PaginationSize = 'paginationSize',\n    Locale = 'locale',\n    SupportedPageSizes = 'supportedPageSizes',\n    ExpandedSideNavStatus = 'expandedSidenav'\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n    defaults = {\n        paginationSize: 25,\n        supportedPageSizes: [5, 10, 15, 20],\n        locale: 'en',\n        expandedSidenav: true\n    };\n\n    private userPreferenceStatus: any = this.defaults;\n    private onChangeSubject: BehaviorSubject<any>;\n    onChange: Observable<any>;\n\n    constructor(public translate: TranslateService,\n                private appConfig: AppConfigService,\n                private storage: StorageService) {\n        this.appConfig.onLoad.subscribe(this.initUserPreferenceStatus.bind(this));\n        this.onChangeSubject = new BehaviorSubject(this.userPreferenceStatus);\n        this.onChange = this.onChangeSubject.asObservable();\n    }\n\n    private initUserPreferenceStatus() {\n        this.initUserLanguage();\n        this.set(UserPreferenceValues.PaginationSize, this.paginationSize);\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(this.supportedPageSizes));\n    }\n\n    private initUserLanguage() {\n        if (this.locale || this.appConfig.get<string>(UserPreferenceValues.Locale)) {\n            this.set(UserPreferenceValues.Locale, (this.locale || this.getDefaultLocale()));\n        } else {\n            this.setWithoutStore(UserPreferenceValues.Locale, (this.locale || this.getDefaultLocale()));\n        }\n    }\n\n    /**\n     * Sets up a callback to notify when a property has changed.\n     * @param property The property to watch\n     * @returns Notification callback\n     */\n    select(property: string): Observable<any> {\n        return this.onChange\n            .pipe(\n                map((userPreferenceStatus) => userPreferenceStatus[property]),\n                distinctUntilChanged()\n            );\n    }\n\n    /**\n     * Gets a preference property.\n     * @param property Name of the property\n     * @param defaultValue Default to return if the property is not found\n     * @returns Preference property\n     */\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined || value === null) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    set(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Sets a preference property.\n     * @param property Name of the property\n     * @param value New value for the property\n     */\n    setWithoutStore(property: string, value: any) {\n        if (!property) {\n            return;\n        }\n        this.userPreferenceStatus[property] = value;\n        this.onChangeSubject.next(this.userPreferenceStatus);\n    }\n\n    /**\n     * Check if an item is present in the storage\n     * @param property Name of the property\n     * @returns True if the item is present, false otherwise\n     */\n    hasItem(property: string) {\n        if (!property) {\n            return;\n        }\n        return this.storage.hasItem(\n            this.getPropertyKey(property)\n        );\n    }\n\n    /**\n     * Gets the active storage prefix for preferences.\n     * @returns Storage prefix\n     */\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    /**\n     * Sets the active storage prefix for preferences.\n     * @param value Name of the prefix\n     */\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n        this.initUserPreferenceStatus();\n    }\n\n    /**\n     * Gets the full property key with prefix.\n     * @param property The property name\n     * @returns Property key\n     */\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    /**\n     * Gets an array containing the available page sizes.\n     * @returns Array of page size values\n     */\n    get supportedPageSizes(): number[] {\n        const supportedPageSizes = this.get(UserPreferenceValues.SupportedPageSizes);\n\n        if (supportedPageSizes) {\n            return JSON.parse(supportedPageSizes);\n        } else {\n            return this.appConfig.get('pagination.supportedPageSizes', this.defaults.supportedPageSizes);\n        }\n    }\n\n    set supportedPageSizes(value: number[]) {\n        this.set(UserPreferenceValues.SupportedPageSizes, JSON.stringify(value));\n    }\n\n    /** Pagination size. */\n    set paginationSize(value: number) {\n        this.set(UserPreferenceValues.PaginationSize, value);\n    }\n\n    get paginationSize(): number {\n        const paginationSize = this.get(UserPreferenceValues.PaginationSize);\n\n        if (paginationSize) {\n            return Number(paginationSize);\n        } else {\n            return Number(this.appConfig.get('pagination.size', this.defaults.paginationSize));\n        }\n    }\n\n    /** Current locale setting. */\n    get locale(): string {\n        return this.get(UserPreferenceValues.Locale);\n    }\n\n    set locale(value: string) {\n        this.set(UserPreferenceValues.Locale, value);\n    }\n\n    /**\n     * Gets the default locale.\n     * @returns Default locale language code\n     */\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>(UserPreferenceValues.Locale) || this.translate.getBrowserCultureLang() || 'en';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { TranslateLoaderService } from './translate-loader.service';\nimport { UserPreferencesService, UserPreferenceValues } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: TranslateLoaderService;\n\n    constructor(public translate: TranslateService,\n                userPreferencesService: UserPreferencesService,\n                @Optional() @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <TranslateLoaderService> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n        this.customLoader.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (const provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            if (locale) {\n                this.userLang = locale;\n                this.use(this.userLang);\n            }\n        });\n    }\n\n    /**\n     * Adds a new folder of translation source files.\n     * @param name Name for the translation provider\n     * @param path Path to the folder\n     */\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n\n            if (this.userLang) {\n                this.loadTranslation(this.userLang, this.defaultLang);\n            } else {\n                this.loadTranslation(this.defaultLang);\n            }\n        }\n    }\n\n    /**\n     * Loads a translation file.\n     * @param lang Language code for the language to load\n     * @param fallback Language code to fall back to if the first one was unavailable\n     */\n    loadTranslation(lang: string, fallback?: string) {\n        this.translate.getTranslation(lang).subscribe(\n            () => {\n                this.translate.use(lang);\n                this.onTranslationChanged(lang);\n            },\n            () => {\n                if (fallback && fallback !== lang) {\n                    this.loadTranslation(fallback);\n                }\n            }\n        );\n    }\n\n    /**\n     * Triggers a notification callback when the translation language changes.\n     * @param lang The new language code\n     */\n    onTranslationChanged(lang: string): void {\n        this.translate.onTranslationChange.next({\n            lang: lang,\n            translations: this.customLoader.getFullTranslationJSON(lang)\n        });\n    }\n\n    /**\n     * Sets the target language for translations.\n     * @param lang Code name for the language\n     * @returns Translations available for the language\n     */\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    /**\n     * Gets the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return this.translate.get(key, interpolateParams);\n    }\n\n    /**\n     * Directly returns the translation for the supplied key.\n     * @param key Key to translate\n     * @param interpolateParams String(s) to be interpolated into the main message\n     * @returns Translated text\n     */\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key ? this.translate.instant(key, interpolateParams) : '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '../services/translation.service';\n\n@Pipe({\n    name: 'adfFileSize',\n    pure: false\n})\nexport class FileSizePipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 ' + this.translation.instant('CORE.FILE_SIZE.BYTES');\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['BYTES', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        const i18nSize = this.translation.instant(`CORE.FILE_SIZE.${sizes[i]}`);\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + i18nSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class PermissionsEnum extends String {\n    static CONTRIBUTOR: string = 'Contributor';\n    static CONSUMER: string = 'Consumer';\n    static COLLABORATOR: string = 'Collaborator';\n    static MANAGER: string = 'Manager';\n    static EDITOR: string = 'Editor';\n    static COORDINATOR: string = 'Coordinator';\n    static NOT_CONTRIBUTOR: string = '!Contributor';\n    static NOT_CONSUMER: string = '!Consumer';\n    static NOT_COLLABORATOR: string = '!Collaborator';\n    static NOT_MANAGER: string = '!Manager';\n    static NOT_EDITOR: string = '!Editor';\n    static NOT_COORDINATOR: string = '!Coordinator';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* spellchecker: disable */\nexport class AllowableOperationsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static COPY: string = 'copy';\n    static LOCK: string = 'lock';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentApi, MinimalNode, Node, NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\nimport { catchError } from 'rxjs/operators';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AllowableOperationsEnum } from '../models/allowable-operations.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentService {\n\n    private saveData: Function;\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNode> = new Subject<MinimalNode>();\n    folderEdit: Subject<MinimalNode> = new Subject<MinimalNode>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService,\n                private sanitizer: DomSanitizer) {\n        this.saveData = (function () {\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function (fileData, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([fileData], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    const json = JSON.stringify(fileData);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n\n                    if (typeof window.navigator !== 'undefined' && window.navigator.msSaveOrOpenBlob) {\n                        navigator.msSaveOrOpenBlob(blob, fileName);\n                    } else {\n                        const url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        }());\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     * @param blob Content to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     * @param data Data to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     * @param json JSON object to download.\n     * @param fileName Name of the resulting file.\n     */\n    downloadJSON(json: any, fileName: string): void {\n        this.saveData(json, 'json', fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param  blob Data to wrap into object URL\n     * @returns URL string\n     */\n    createTrustedUrl(blob: Blob): string {\n        const url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getDocumentThumbnailUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getDocumentThumbnailUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param node Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @param ticket Custom ticket to use for authentication\n     * @returns URL string\n     */\n    getContentUrl(node: any, attachment?: boolean, ticket?: string): string {\n\n        if (node && node.entry) {\n            node = node.entry.id;\n        }\n\n        return this.contentApi.getContentUrl(node, attachment, ticket);\n    }\n\n    /**\n     * Gets content for the given node.\n     * @param nodeId ID of the target node\n     * @returns Content data\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @param opts Options supported by JS-API\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, opts?: any): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts));\n    }\n\n    /**\n     * Checks if the user has permission on that node\n     * @param node Node to check permissions\n     * @param permission Required permission type\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasPermissions(node: Node, permission: PermissionsEnum | string): boolean {\n        let hasPermissions = false;\n\n        if (node && node.permissions && node.permissions.locallySet) {\n            if (permission && permission.startsWith('!')) {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermissions = node.permissions.locallySet.find((currentPermission) => currentPermission.name === permission) ? true : false;\n            }\n\n        } else {\n\n            if (permission === PermissionsEnum.CONSUMER) {\n                hasPermissions = true;\n            } else if (permission === PermissionsEnum.NOT_CONSUMER) {\n                hasPermissions = false;\n            } else if (permission && permission.startsWith('!')) {\n                hasPermissions = true;\n            }\n        }\n\n        return hasPermissions;\n    }\n\n    /**\n     * Checks if the user has permissions on that node\n     * @param node Node to check allowableOperations\n     * @param allowableOperation Create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     * @returns True if the user has the required permissions, false otherwise\n     */\n    hasAllowableOperations(node: Node, allowableOperation: AllowableOperationsEnum | string): boolean {\n        let hasAllowableOperations = false;\n\n        if (node && node.allowableOperations) {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation.replace('!', '')) ? false : true;\n            } else {\n                hasAllowableOperations = node.allowableOperations.find((currentOperation) => currentOperation === allowableOperation) ? true : false;\n            }\n\n        } else {\n            if (allowableOperation && allowableOperation.startsWith('!')) {\n                hasAllowableOperations = true;\n            }\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.COPY) {\n            hasAllowableOperations = true;\n        }\n\n        if (allowableOperation === AllowableOperationsEnum.LOCK) {\n            hasAllowableOperations = node.isFile;\n\n            if (node.isLocked && node.allowableOperations) {\n                hasAllowableOperations = !!~node.allowableOperations.indexOf('updatePermissions');\n            }\n        }\n\n        return hasAllowableOperations;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* spellchecker: disable */\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ContentService } from './content.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = './assets/images/ft_ic_miscellaneous.svg';\n\n    mimeTypeIcons: any = {\n        'image/png': './assets/images/ft_ic_raster_image.svg',\n        'image/jpeg': './assets/images/ft_ic_raster_image.svg',\n        'image/gif': './assets/images/ft_ic_raster_image.svg',\n        'image/bmp': './assets/images/ft_ic_raster_image.svg',\n        'image/cgm': './assets/images/ft_ic_raster_image.svg',\n        'image/ief': './assets/images/ft_ic_raster_image.svg',\n        'image/jp2': './assets/images/ft_ic_raster_image.svg',\n        'image/tiff': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.photoshop': './assets/images/ft_ic_raster_image.svg',\n        'image/vnd.adobe.premiere': './assets/images/ft_ic_raster_image.svg',\n        'image/x-cmu-raster': './assets/images/ft_ic_raster_image.svg',\n        'image/x-dwt': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-anymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-bitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-graymap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-portable-pixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-adobe': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-canon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-fuji': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-hasselblad': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-kodak': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-leica': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-minolta': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-nikon': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-olympus': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-panasonic': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-pentax': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-red': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sigma': './assets/images/ft_ic_raster_image.svg',\n        'image/x-raw-sony': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xbitmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xpixmap': './assets/images/ft_ic_raster_image.svg',\n        'image/x-xwindowdump': './assets/images/ft_ic_raster_image.svg',\n        'image/svg+xml': './assets/images/ft_ic_vector_image.svg',\n        'application/eps': './assets/images/ft_ic_raster_image.svg',\n        'application/illustrator': './assets/images/ft_ic_raster_image.svg',\n        'application/pdf': './assets/images/ft_ic_pdf.svg',\n        'application/vnd.ms-excel': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.addin.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.binary.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.sheet.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-excel.template.macroenabled.12': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.sun.xml.calc.template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-outlook': './assets/images/ft_ic_document.svg',\n        'application/msword': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.document.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-word.template.macroenabled.12': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.sun.xml.writer.template': './assets/images/ft_ic_ms_word.svg',\n        'application/rtf': './assets/images/ft_ic_ms_word.svg',\n        'text/rtf': './assets/images/ft_ic_ms_word.svg',\n        'application/vnd.ms-powerpoint': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.presentation-template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.openxmlformats-officedocument.presentationml.slide': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.sun.xml.impress.template': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.oasis.opendocument.spreadsheet': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.oasis.opendocument.spreadsheet-template': './assets/images/ft_ic_ms_excel.svg',\n        'application/vnd.ms-powerpoint.addin.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.presentation.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slide.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.slideshow.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'application/vnd.ms-powerpoint.template.macroenabled.12': './assets/images/ft_ic_ms_powerpoint.svg',\n        'video/mp4': './assets/images/ft_ic_video.svg',\n        'video/3gpp': './assets/images/ft_ic_video.svg',\n        'video/3gpp2': './assets/images/ft_ic_video.svg',\n        'video/mp2t': './assets/images/ft_ic_video.svg',\n        'video/mpeg': './assets/images/ft_ic_video.svg',\n        'video/mpeg2': './assets/images/ft_ic_video.svg',\n        'video/ogg': './assets/images/ft_ic_video.svg',\n        'video/quicktime': './assets/images/ft_ic_video.svg',\n        'video/webm': './assets/images/ft_ic_video.svg',\n        'video/x-flv': './assets/images/ft_ic_video.svg',\n        'video/x-m4v': './assets/images/ft_ic_video.svg',\n        'video/x-ms-asf': './assets/images/ft_ic_video.svg',\n        'video/x-ms-wmv': './assets/images/ft_ic_video.svg',\n        'video/x-msvideo': './assets/images/ft_ic_video.svg',\n        'video/x-rad-screenplay':  './assets/images/ft_ic_video.svg',\n        'video/x-sgi-movie': './assets/images/ft_ic_video.svg',\n        'video/x-matroska': './assets/images/ft_ic_video.svg',\n        'audio/mpeg': './assets/images/ft_ic_audio.svg',\n        'audio/ogg': './assets/images/ft_ic_audio.svg',\n        'audio/wav': './assets/images/ft_ic_audio.svg',\n        'audio/basic': './assets/images/ft_ic_audio.svg',\n        'audio/mp4': './assets/images/ft_ic_audio.svg',\n        'audio/vnd.adobe.soundbooth': './assets/images/ft_ic_audio.svg',\n        'audio/vorbis': './assets/images/ft_ic_audio.svg',\n        'audio/x-aiff': './assets/images/ft_ic_audio.svg',\n        'audio/x-flac': './assets/images/ft_ic_audio.svg',\n        'audio/x-ms-wma': './assets/images/ft_ic_audio.svg',\n        'audio/x-wav': './assets/images/ft_ic_audio.svg',\n        'x-world/x-vrml': './assets/images/ft_ic_video.svg',\n        'text/plain': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text': './assets/images/ft_ic_document.svg',\n        'application/vnd.oasis.opendocument.text-template': './assets/images/ft_ic_document.svg',\n        'application/x-javascript': './assets/images/ft_ic_document.svg',\n        'application/json': './assets/images/ft_ic_document.svg',\n        'text/csv': './assets/images/ft_ic_document.svg',\n        'text/xml': './assets/images/ft_ic_document.svg',\n        'text/html': './assets/images/ft_ic_website.svg',\n        'application/x-compressed': './assets/images/ft_ic_archive.svg',\n        'application/x-zip-compressed': './assets/images/ft_ic_archive.svg',\n        'application/zip': './assets/images/ft_ic_archive.svg',\n        'application/x-tar': './assets/images/ft_ic_archive.svg',\n        'application/vnd.apple.keynote': './assets/images/ft_ic_presentation.svg',\n        'application/vnd.apple.pages': './assets/images/ft_ic_document.svg',\n        'application/vnd.apple.numbers': './assets/images/ft_ic_spreadsheet.svg',\n        'application/vnd.visio': './assets/images/ft_ic_document.svg',\n        'application/wordperfect': './assets/images/ft_ic_document.svg',\n        'application/x-cpio': './assets/images/ft_ic_document.svg',\n        'folder': './assets/images/ft_ic_folder.svg',\n        'smartFolder': './assets/images/ft_ic_smart_folder.svg',\n        'ruleFolder': './assets/images/ft_ic_folder_rule.svg',\n        'linkFolder': './assets/images/ft_ic_folder_shortcut_link.svg',\n        'disable/folder': './assets/images/ft_ic_folder_disable.svg',\n        'selected': './assets/images/ft_ic_selected.svg'\n    };\n\n    constructor(public contentService: ContentService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        Object.keys(this.mimeTypeIcons).forEach((key) => {\n            const url = sanitizer.bypassSecurityTrustResourceUrl(this.mimeTypeIcons[key]);\n\n            matIconRegistry.addSvgIcon(key, url);\n            matIconRegistry.addSvgIconInNamespace('adf', key, url);\n        });\n    }\n\n    /**\n     * Gets a thumbnail URL for the given document node.\n     * @param node Node to get URL for.\n     * @returns URL string\n     */\n    public getDocumentThumbnailUrl(node: any): string {\n        const thumbnail = this.contentService.getDocumentThumbnailUrl(node);\n        return thumbnail || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Gets a thumbnail URL for a MIME type.\n     * @param mimeType MIME type for the thumbnail\n     * @returns URL string\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        const icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Gets a \"miscellaneous\" thumbnail URL for types with no other icon defined.\n     * @returns URL string\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: NodeEntry): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: NodeEntry): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport interface HighlightTransformResult {\n    text: string;\n    changed: boolean;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HighlightTransformService {\n\n    /**\n     * Searches for `search` string(s) within `text` and highlights all occurrences.\n     * @param text Text to search within\n     * @param search Text pattern to search for\n     * @param wrapperClass CSS class used to provide highlighting style\n     * @returns New text along with boolean value to indicate whether anything was highlighted\n     */\n    public highlight(text: string, search: string, wrapperClass: string = 'adf-highlight'): HighlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(/<[^>]+>/g, '').replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n\n            return { text: result, changed: isMatching };\n        } else {\n            return { text: result, changed: isMatching };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return highlightTransformResult.text;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n    defaultLocale = 'en-US';\n\n    transform(value: Date, locale?: string) {\n        if (value !== null && value !== undefined ) {\n            const actualLocale = locale ? locale : this.defaultLocale;\n            const then = moment(value);\n            const diff = moment().locale(actualLocale).diff(then, 'days');\n            return diff > 7 ? then.locale(actualLocale).format('DD/MM/YYYY HH:mm') : then.locale(actualLocale).fromNow();\n        }\n        return '';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { EcmUserModel } from '../userinfo/models/ecm-user.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {\n    }\n\n    transform(user: UserProcessModel | EcmUserModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let safeHtml: SafeHtml = '';\n        if (user) {\n            const initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            safeHtml = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return safeHtml;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'fullName' })\nexport class FullNamePipe implements PipeTransform {\n    transform(user: any): string {\n        let fullName = '';\n        if (user) {\n            if (user.firstName) {\n                fullName += user.firstName;\n            }\n            if (user.lastName) {\n                fullName += fullName.length > 0 ? ' ' : '';\n                fullName += user.lastName;\n            }\n        }\n        return fullName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'formatSpace'\n})\nexport class FormatSpacePipe implements PipeTransform {\n\n    transform(inputValue: string, replaceChar: string = '_', lowerCase: boolean = true): string {\n        let transformedString = '';\n        if (inputValue) {\n            transformedString = lowerCase ? inputValue.trim().split(' ').join(replaceChar).toLocaleLowerCase() :\n                inputValue.trim().split(' ').join(replaceChar);\n        }\n        return transformedString;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PipeTransform, Pipe } from '@angular/core';\n\n@Pipe({\n    name: 'fileType',\n    pure: true\n})\nexport class FileTypePipe implements PipeTransform {\n\n    transform(value: string) {\n\n        if ( value == null || value === undefined ) {\n            return '';\n        } else {\n            const fileInfo = value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '');\n            return fileInfo.split('_').pop();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'multiValue' })\nexport class MultiValuePipe implements PipeTransform {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    transform(values: string | string [], valueSeparator: string = MultiValuePipe.DEFAULT_SEPARATOR): string {\n\n        if (values && values instanceof Array) {\n            const valueList = values.map((value) => value.trim());\n            return valueList.join(valueSeparator);\n        }\n\n        return <string> values;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FileSizePipe } from './file-size.pipe';\nimport { MimeTypeIconPipe } from './mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './node-name-tooltip.pipe';\nimport { HighlightPipe } from './text-highlight.pipe';\nimport { TimeAgoPipe } from './time-ago.pipe';\nimport { InitialUsernamePipe } from './user-initial.pipe';\nimport { FullNamePipe } from './full-name.pipe';\nimport { FormatSpacePipe } from './format-space.pipe';\nimport { FileTypePipe } from './file-type.pipe';\nimport { MultiValuePipe } from './multi-value.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe\n    ],\n    providers: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe\n    ],\n    exports: [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        FullNamePipe,\n        NodeNameTooltipPipe,\n        FormatSpacePipe,\n        FileTypePipe,\n        MultiValuePipe\n    ]\n})\nexport class PipeModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Input, Renderer2, AfterViewChecked } from '@angular/core';\nimport { HighlightTransformService, HighlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective implements AfterViewChecked {\n\n    /** Class selector for highlightable elements. */\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    /** Text to highlight. */\n    @Input('adf-highlight')\n    search: string = '';\n\n    /** CSS class used to apply highlighting. */\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer2,\n        private highlightTransformService: HighlightTransformService) {\n    }\n\n    ngAfterViewChecked() {\n        this.highlight();\n    }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const highlightTransformResult: HighlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (highlightTransformResult.changed) {\n                    this.renderer.setProperty(element, 'innerHTML', highlightTransformResult.text);\n                }\n            });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    /** URI to redirect to after logging out. */\n    @Input()\n    redirectUri: string = '/login';\n\n    /** Enable redirecting after logout */\n    @Input()\n    enableRedirect: boolean = true;\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private router: Router,\n                private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToUri(),\n            () => this.redirectToUri()\n        );\n    }\n\n    redirectToUri() {\n        if (this.enableRedirect) {\n            this.router.navigate([this.redirectUri]);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { NodeEntry, Node, DeletedNodeEntity, DeletedNode } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { map, catchError } from 'rxjs/operators';\n\ninterface ProcessedNodeData {\n    entry: Node | DeletedNode;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    /** Array of nodes to delete. */\n    @Input('adf-delete')\n    selection: NodeEntry[] | DeletedNodeEntity[];\n\n    /** If true then the nodes are deleted immediately rather than being put in the trash */\n    @Input()\n    permanent: boolean = false;\n\n    /** Emitted when the nodes have been deleted. */\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-check-allowable-operation')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: NodeEntry[] | DeletedNodeEntity[]) {\n        if (selection && selection.length) {\n\n            const batch = this.getDeleteNodesBatch(selection);\n\n            forkJoin(...batch)\n                .subscribe((data: ProcessedNodeData[]) => {\n                    const processedItems: ProcessStatus = this.processStatus(data);\n                    const message = this.getMessage(processedItems);\n\n                    this.delete.emit(message);\n                });\n        }\n    }\n\n    private getDeleteNodesBatch(selection: any): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: NodeEntry | DeletedNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        let promise;\n\n        if (node.entry.hasOwnProperty('archivedAt')) {\n            promise = this.alfrescoApiService.nodesApi.purgeDeletedNode(id);\n        } else {\n            promise = this.alfrescoApiService.nodesApi.deleteNode(id, { permanent: this.permanent });\n        }\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: node.entry,\n                status: 1\n            })),\n            catchError(() => of({\n                entry: node.entry,\n                status: 0\n            }))\n        );\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private getMessage(status): string {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                { number: status.failed.length }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PLURAL',\n                { number: status.success.length }\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                { name: status.failed[0].entry.name }\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.instant(\n                'CORE.DELETE_NODE.SINGULAR',\n                { name: status.success[0].entry.name }\n            );\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, NodeEntry, SharedLinkEntry, Node, SharedLink } from '@alfresco/js-api';\nimport { Observable, from, forkJoin, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    favorites: any[] = [];\n\n    /** Array of nodes to toggle as favorites. */\n    @Input('adf-node-favorite')\n    selection: NodeEntry[] = [];\n\n    /** Emitted when the favorite setting is complete. */\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the favorite setting fails. */\n    @Output() error: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected: NodeEntry | SharedLinkEntry) => {\n                // shared files have nodeId\n                const id = (<SharedLinkEntry> selected).entry.nodeId || selected.entry.id;\n\n                return from(this.alfrescoApiService.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            forkJoin(batch).subscribe(\n                () => {\n                    this.favorites.map((selected) => selected.entry.isFavorite = false);\n                    this.toggle.emit();\n                },\n                (error) => this.error.emit(error)\n            );\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            from(this.alfrescoApiService.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(\n                    () => {\n                        notFavorite.map((selected) => selected.entry.isFavorite = true);\n                        this.toggle.emit();\n                    },\n                    (error) => this.error.emit(error)\n                );\n        }\n    }\n\n    markFavoritesNodes(selection: NodeEntry[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        forkJoin(batch).subscribe((data) => {\n            this.favorites.push(...data);\n        });\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: NodeEntry) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: NodeEntry | SharedLinkEntry): Observable<any> {\n        const node: Node | SharedLink = selected.entry;\n\n        // ACS 6.x with 'isFavorite' include\n        if (node && node.hasOwnProperty('isFavorite')) {\n            return of(selected);\n        }\n\n        // ACS 5.x and 6.x without 'isFavorite' include\n        const { name, isFile, isFolder } = <Node> node;\n        const id =  (<SharedLink> node).nodeId || node.id;\n\n        const promise = this.alfrescoApiService.favoritesApi.getFavorite('-me-', id);\n\n        return from(promise).pipe(\n            map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            })),\n            catchError(() => {\n                return of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            })\n        );\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map((item) => item.entry.id);\n\n        return list.filter((item) => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map((item) => item.entry.id);\n\n        return patch.filter((item) => ids.includes(item.entry.id) ? item : null);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { ChangeDetectorRef, Directive, ElementRef, Host, Inject, Input, OnChanges, Optional, Renderer2,  SimpleChanges } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ContentService } from './../services/content.service';\nimport { EXTENDIBLE_COMPONENT } from './../interface/injection.tokens';\n\nexport interface NodeAllowableOperationSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-check-allowable-operation]'\n})\nexport class CheckAllowableOperationDirective implements OnChanges {\n\n    /** Node permission to check (create, delete, update, updatePermissions,\n     * !create, !delete, !update, !updatePermissions).\n     */\n    @Input('adf-check-allowable-operation')\n    permission: string  = null;\n\n    /** Nodes to check permission for. */\n    @Input('adf-nodes')\n    nodes: NodeEntry[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private contentService: ContentService,\n                private changeDetector: ChangeDetectorRef,\n\n                @Host()\n                @Optional()\n                @Inject(EXTENDIBLE_COMPONENT) private parentComponent?: NodeAllowableOperationSubject) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    updateElement(): boolean {\n        const enable = this.hasAllowableOperations(this.nodes, this.permission);\n\n        if (enable) {\n            this.enable();\n        } else {\n            this.disable();\n        }\n\n        return enable;\n    }\n\n    private enable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = false;\n            this.changeDetector.detectChanges();\n        } else {\n            this.enableElement();\n        }\n    }\n\n    private disable(): void {\n        if (this.parentComponent) {\n            this.parentComponent.disabled = true;\n            this.changeDetector.detectChanges();\n        } else {\n            this.disableElement();\n        }\n    }\n\n    /**\n     * Enables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    enableElement(): void {\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n    }\n\n    /**\n     * Disables decorated element\n     *\n     * @memberof CheckAllowableOperationDirective\n     */\n    disableElement(): void {\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'true');\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param  nodes Node collection to check\n     * @param  permission Permission to check for each node\n     * @memberof CheckAllowableOperationDirective\n     */\n    hasAllowableOperations(nodes: NodeEntry[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every((node) => this.contentService.hasAllowableOperations(node.entry, permission));\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from '@alfresco/js-api';\nimport { Observable, forkJoin, from, of } from 'rxjs';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { TranslationService } from '../services/translation.service';\nimport { tap, mergeMap, map, catchError } from 'rxjs/operators';\n\nexport class RestoreMessageModel {\n    message: string;\n    path: PathInfoEntity;\n    action: string;\n}\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    /** Array of deleted nodes to restore. */\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    /** Emitted when restoration is complete. */\n    @Output()\n    restore: EventEmitter<RestoreMessageModel> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any) {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && nodesWithPath.length) {\n\n            this.restoreNodesBatch(nodesWithPath).pipe(\n                tap((restoredNodes) => {\n                    const status = this.processStatus(restoredNodes);\n\n                    this.restoreProcessStatus.fail.push(...status.fail);\n                    this.restoreProcessStatus.success.push(...status.success);\n                }),\n                mergeMap(() => this.getDeletedNodes())\n            )\n            .subscribe((deletedNodesList) => {\n                const { entries: nodeList } = deletedNodesList.list;\n                const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                const remainingNodes = this.diff(selectedNodes, nodeList);\n\n                if (!remainingNodes.length) {\n                    this.notification();\n                } else {\n                    this.recover(remainingNodes);\n                }\n            });\n        } else {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.notification();\n            return;\n        }\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: ['path'] });\n\n        return from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return from(promise).pipe(\n            map(() => ({\n                status: 1,\n                entry\n            })),\n            catchError((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            })\n        );\n    }\n\n    private diff(selection, list, fromList = true): any {\n        const ids = selection.map((item) => item.entry.id);\n\n        return list.filter((item) => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): string {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.instant(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.instant('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.instant(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private notification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        const message = this.getRestoreMessage();\n        this.reset();\n\n        const action = (status.oneSucceeded && !status.someFailed) ? this.translation.instant('CORE.RESTORE_NODE.VIEW') : '';\n\n        let path;\n        if (status.success && status.success.length > 0) {\n            path = status.success[0].entry.path;\n        }\n        this.restore.emit({\n            message: message,\n            action: action,\n            path: path\n        });\n    }\n\n    private reset(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    /** Enables/disables uploading. */\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    /** Data to upload. */\n    @Input('adf-upload-data')\n    data: any;\n\n    /** Upload mode. Can be \"drop\" (receives dropped files) or \"click\"\n     * (clicking opens a file dialog). Both modes can be active at once.\n     */\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    /** Toggles multiple file uploads. */\n    @Input()\n    multiple: boolean;\n\n    /** (Click mode only) MIME type filter for files to accept. */\n    @Input()\n    accept: string;\n\n    /** (Click mode only) Toggles uploading of directories. */\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            const inputUpload = this.renderer.createElement('input');\n            this.upload = this.el.nativeElement.parentElement.appendChild(inputUpload);\n\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', (event) => this.onSelectFiles(event));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTransfer = this.getDataTransfer(event);\n            if (dataTransfer) {\n                this.getFilesDropped(dataTransfer).then((files) => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            const customEvent = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(customEvent);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise((resolve) => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            const item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise((resolveFolder) => {\n                                        FileUtils.flatten(item).then((files) => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    const files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map((file) => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then((result) => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param event DOM event\n     */\n    onSelectFiles(event: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> event.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map((file) => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            event.target.value = '';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, DownloadEntry, DownloadBodyCreate } from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { LogService } from './log.service';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DownloadZipService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Creates a new download.\n     * @param payload Object containing the node IDs of the items to add to the ZIP file\n     * @returns Status object for the download\n     */\n    createDownload(payload: DownloadBodyCreate): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.createDownload(payload)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a content URL for the given node.\n     * @param nodeId Node to get URL for.\n     * @param attachment Toggles whether to retrieve content as an attachment for download\n     * @returns URL string\n     */\n    getContentUrl(nodeId: string, attachment?: boolean): string {\n        return this.apiService.getInstance().content.getContentUrl(nodeId, attachment);\n    }\n\n    /**\n     * Gets a Node via its node ID.\n     * @param nodeId ID of the target node\n     * @returns Details of the node\n     */\n    getNode(nodeId: string): Observable<NodeEntry> {\n        return from(this.apiService.getInstance().core.nodesApi.getNode(nodeId));\n    }\n\n    /**\n     * Gets status information for a download node.\n     * @param downloadId ID of the download node\n     * @returns Status object for the download\n     */\n    getDownload(downloadId: string): Observable<DownloadEntry> {\n        return from(this.apiService.getInstance().core.downloadsApi.getDownload(downloadId));\n    }\n\n    /**\n     * Cancels a download.\n     * @param downloadId ID of the target download node\n     */\n    cancelDownload(downloadId: string) {\n        this.apiService.getInstance().core.downloadsApi.cancelDownload(downloadId);\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, NodeEntry } from '@alfresco/js-api';\nimport { LogService } from '../services/log.service';\nimport { DownloadZipService } from '../services/download-zip.service';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    templateUrl: './download-zip.dialog.html',\n    styleUrls: ['./download-zip.dialog.scss'],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    cancelled = false;\n    downloadId: string;\n\n    constructor(private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA)\n                public data: any,\n                private logService: LogService,\n                private downloadZipService: DownloadZipService) {\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            if (!this.cancelled) {\n                this.downloadZip(this.data.nodeIds);\n            } else {\n                this.logService.log('Cancelled');\n            }\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.downloadZipService.cancelDownload(this.downloadId);\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            this.downloadZipService.createDownload({ nodeIds }).subscribe((data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.downloadZipService.getContentUrl(data.entry.id, true);\n\n                    this.downloadZipService.getNode(data.entry.id).subscribe((downloadNode: NodeEntry) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.downloadId = data.entry.id;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadZipService.getDownload(downloadId).subscribe((downloadEntry: DownloadEntry) => {\n            if (downloadEntry.entry) {\n                if (downloadEntry.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { DownloadZipDialogComponent } from '../dialogs/download-zip.dialog';\nimport { NodeEntry } from '@alfresco/js-api';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-node-download], [adfNodeDownload]'\n})\nexport class NodeDownloadDirective {\n\n    /** Nodes to download. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adfNodeDownload')\n    nodes: NodeEntry | NodeEntry[];\n\n    @HostListener('click')\n    onClick() {\n        this.downloadNodes(this.nodes);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private dialog: MatDialog) {\n    }\n\n    /**\n     * Downloads multiple selected nodes.\n     * Packs result into a .ZIP archive if there is more than one node selected.\n     * @param selection Multiple selected nodes to download\n     */\n    downloadNodes(selection: NodeEntry | Array<NodeEntry>) {\n\n        if (!this.isSelectionValid(selection)) {\n            return;\n        }\n        if (selection instanceof Array) {\n            if (selection.length === 1) {\n                this.downloadNode(selection[0]);\n            } else {\n                this.downloadZip(selection);\n            }\n        } else {\n            this.downloadNode(selection);\n        }\n    }\n\n    /**\n     * Downloads a single node.\n     * Packs result into a .ZIP archive is the node is a Folder.\n     * @param node Node to download\n     */\n    downloadNode(node: NodeEntry) {\n        if (node && node.entry) {\n            const entry = node.entry;\n\n            if (entry.isFile) {\n                this.downloadFile(node);\n            }\n\n            if (entry.isFolder) {\n                this.downloadZip([node]);\n            }\n\n            // Check if there's nodeId for Shared Files\n            if (!entry.isFile && !entry.isFolder && (<any> entry).nodeId) {\n                this.downloadFile(node);\n            }\n        }\n    }\n\n    private isSelectionValid(selection: NodeEntry | Array<NodeEntry>) {\n        return selection || (selection instanceof Array && selection.length > 0);\n    }\n\n    private downloadFile(node: NodeEntry) {\n        if (node && node.entry) {\n            const contentApi = this.apiService.getInstance().content;\n            // nodeId for Shared node\n            const id = (<any> node.entry).nodeId || node.entry.id;\n\n            const url = contentApi.getContentUrl(id, true);\n            const fileName = node.entry.name;\n\n            this.download(url, fileName);\n        }\n    }\n\n    private downloadZip(selection: Array<NodeEntry>) {\n        if (selection && selection.length > 0) {\n            // nodeId for Shared node\n            const nodeIds = selection.map((node: any) => (node.entry.nodeId || node.entry.id));\n\n            this.dialog.open(DownloadZipDialogComponent, {\n                width: '600px',\n                disableClose: true,\n                data: {\n                    nodeIds\n                }\n            });\n        }\n    }\n\n    private download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { LogoutDirective } from './logout.directive';\nimport { NodeDeleteDirective } from './node-delete.directive';\nimport { NodeFavoriteDirective } from './node-favorite.directive';\nimport { CheckAllowableOperationDirective } from './check-allowable-operation.directive';\nimport { NodeRestoreDirective } from './node-restore.directive';\nimport { UploadDirective } from './upload.directive';\nimport { NodeDownloadDirective } from './node-download.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ],\n    exports: [\n        HighlightDirective,\n        LogoutDirective,\n        NodeDeleteDirective,\n        NodeFavoriteDirective,\n        CheckAllowableOperationDirective,\n        NodeRestoreDirective,\n        NodeDownloadDirective,\n        UploadDirective\n    ]\n})\nexport class DirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-datatable-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultCell\"\n                adf-clipboard=\"CLIPBOARD.CLICK_TO_COPY\"\n                [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\"\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n                >{{ value$ | async }}</span>\n        </ng-container>\n        <ng-template #defaultCell>\n            <span\n                [attr.aria-label]=\"value$ | async\"\n                [title]=\"tooltip\"\n                class=\"adf-datatable-cell-value\"\n            >{{ value$ | async }}</span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class DataTableCellComponent implements OnInit, OnDestroy {\n    /** Data table adapter instance. */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Data that defines the column. */\n    @Input()\n    column: DataColumn;\n\n    /** Data that defines the row. */\n    @Input()\n    row: DataRow;\n\n    value$ = new BehaviorSubject<any>('');\n\n    /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n    @Input()\n    copyContent: boolean;\n\n    /** Text for the cell's tooltip. */\n    @Input()\n    tooltip: string;\n\n    private sub: Subscription;\n\n    constructor(protected alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe((node: Node) => {\n            if (this.row) {\n                if (this.row['node'].entry.id === node.id) {\n                    this.row['node'].entry = node;\n                    this.row['cache'][this.column.key] = this.column.key.split('.').reduce((source, key) => source[key], node);\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const value = this.data.getValue(this.row, this.column);\n\n            this.value$.next(value);\n\n            if (!this.tooltip) {\n                this.tooltip = value;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    /** Data source key. Can be either a column/property key like `title`\n     *  or a property path like `createdBy.name`.\n     */\n    @Input()\n    key: string;\n\n    /** Value type for the column. Possible settings are 'text', 'image',\n     * 'date', 'fileSize', 'location', and 'json'.\n     */\n    @Input()\n    type: string = 'text';\n\n    /** Value format (if supported by the parent component), for example format of the date. */\n    @Input()\n    format: string;\n\n    /** Toggles ability to sort by this column, for example by clicking the column header. */\n    @Input()\n    sortable: boolean = true;\n\n    /** Display title of the column, typically used for column headers. You can use the\n     * i18n resource key to get it translated automatically.\n     */\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /** Custom tooltip formatter function. */\n    @Input()\n    formatTooltip: Function;\n\n    /** Title to be used for screen readers. */\n    @Input('sr-title')\n    srTitle: string;\n\n    /** Additional CSS class to be applied to column (header and cells). */\n    @Input('class')\n    cssClass: string;\n\n     /** Enables/disables a Clipboard directive to allow copying of cell contents. */\n    @Input()\n    copyContent: boolean;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AssocChildBody, AssociationBody } from '@alfresco/js-api';\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport class FileUploadOptions {\n    comment?: string;\n    newVersion?: boolean;\n    majorVersion?: boolean;\n    parentId?: string;\n    path?: string;\n    nodeType?: string;\n    properties?: any;\n    association?: any;\n    secondaryChildren?: AssocChildBody[];\n    targets?: AssociationBody[];\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    id: string;\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    errorCode: number;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions, id?: string) {\n        this.file = file;\n        this.id = id;\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n        this.errorCode = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        }, options);\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseUIEvent } from '../../events';\nimport { DataRow } from './data-row.model';\n\nexport class DataRowEvent extends BaseUIEvent<DataRow> {\n\n    sender: any;\n\n    constructor(value: DataRow, domEvent: Event, sender?: any) {\n        super();\n        this.value = value;\n        this.event = domEvent;\n        this.sender = sender;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataCellEventModel {\n\n    readonly row: DataRow;\n    readonly col: DataColumn;\n    actions: any[];\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        this.row = row;\n        this.col = col;\n        this.actions = actions || [];\n    }\n\n}\n\nexport class DataCellEvent extends BaseEvent<DataCellEventModel> {\n\n    constructor(row: DataRow, col: DataColumn, actions: any[]) {\n        super();\n        this.value = new DataCellEventModel(row, col, actions);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '../../../events';\nimport { DataRow } from '../../data/data-row.model';\n\nexport class DataRowActionModel {\n\n    row: DataRow;\n    action: any;\n\n    constructor(row: DataRow, action: any) {\n        this.row = row;\n        this.action = action;\n    }\n}\n\nexport class DataRowActionEvent extends BaseEvent<DataRowActionModel> {\n\n    // backwards compatibility with 1.2.0 and earlier\n    get args(): DataRowActionModel {\n        return this.value;\n    }\n\n    constructor(row: DataRow, action: any) {\n        super();\n        this.value = new DataRowActionModel(row, action);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit, Component, ContentChild, DoCheck, ElementRef, EventEmitter, Input,\n    IterableDiffers, OnChanges, Output, SimpleChange, SimpleChanges, TemplateRef, ViewEncapsulation, OnDestroy\n} from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { Subscription, Observable, Observer } from 'rxjs';\nimport { DataColumnListComponent } from '../../../data-column/data-column-list.component';\nimport { DataColumn } from '../../data/data-column.model';\nimport { DataRowEvent } from '../../data/data-row-event.model';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataSorting } from '../../data/data-sorting.model';\nimport { DataTableAdapter } from '../../data/datatable-adapter';\n\nimport { ObjectDataRow } from '../../data/object-datarow.model';\nimport { ObjectDataTableAdapter } from '../../data/object-datatable-adapter';\nimport { DataCellEvent } from './data-cell.event';\nimport { DataRowActionEvent } from './data-row-action.event';\nimport { share, buffer, map, filter, debounceTime } from 'rxjs/operators';\n\nexport enum DisplayMode {\n    List = 'list',\n    Gallery = 'gallery'\n}\n\n@Component({\n    selector: 'adf-datatable',\n    styleUrls: ['./datatable.component.scss'],\n    templateUrl: './datatable.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable' }\n})\nexport class DataTableComponent implements AfterContentInit, OnChanges, DoCheck, OnDestroy {\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    /** Data source for the table */\n    @Input()\n    data: DataTableAdapter;\n\n    /** Selects the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** The rows that the datatable will show. */\n    @Input()\n    rows: any[] = [];\n\n    /** Define the sort order of the datatable. Possible values are :\n     * [`created`, `desc`], [`created`, `asc`], [`due`, `desc`], [`due`, `asc`]\n     */\n    @Input()\n    sorting: any[] = [];\n\n    /** The columns that the datatable will show. */\n    @Input()\n    columns: any[] = [];\n\n    /** Row selection mode. Can be none, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // none|single|multiple\n\n    /** Toggles multiple row selection, which renders checkboxes at the beginning of each row. */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles the data actions column. */\n    @Input()\n    actions: boolean = false;\n\n    /** Position of the actions dropdown menu. Can be \"left\" or \"right\". */\n    @Input()\n    actionsPosition: string = 'right'; // left|right\n\n    /** Fallback image for rows where the thumbnail is missing. */\n    @Input()\n    fallbackThumbnail: string;\n\n    /** Toggles custom context menu for the component. */\n    @Input()\n    contextMenu: boolean = false;\n\n    /** Toggles file drop support for rows (see\n     * [Upload directive](upload.directive.md) for further details).\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** The inline style to apply to every row. See\n     * [NgStyle](https://angular.io/docs/ts/latest/api/common/index/NgStyle-directive.html)\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row. */\n    @Input()\n    rowStyleClass: string = '';\n\n    /** Toggles the header. */\n    @Input()\n    showHeader: boolean = true;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    /** Emitted when the user clicks a row. */\n    @Output()\n    rowClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted when the user double-clicks a row. */\n    @Output()\n    rowDblClick = new EventEmitter<DataRowEvent>();\n\n    /** Emitted before the context menu is displayed for a row. */\n    @Output()\n    showRowContextMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted before the actions menu is displayed for a row. */\n    @Output()\n    showRowActionsMenu = new EventEmitter<DataCellEvent>();\n\n    /** Emitted when the user executes a row action. */\n    @Output()\n    executeRowAction = new EventEmitter<DataRowActionEvent>();\n\n    /** Flag that indicates if the datatable is in loading state and needs to show the\n     * loading template (see the docs to learn how to configure a loading template).\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** Flag that indicates if the datatable should show the \"no permission\" template. */\n    @Input()\n    noPermission: boolean = false;\n\n    /**\n     * Should the items for the row actions menu be cached for reuse after they are loaded\n     * the first time?\n     */\n    @Input()\n    rowMenuCacheEnabled = true;\n\n    noContentTemplate: TemplateRef<any>;\n    noPermissionTemplate: TemplateRef<any>;\n    loadingTemplate: TemplateRef<any>;\n\n    isSelectAllChecked: boolean = false;\n    selection = new Array<DataRow>();\n\n    /** This array of fake rows fix the flex layout for the gallery view */\n    fakeRows = [];\n\n    private clickObserver: Observer<DataRowEvent>;\n    private click$: Observable<DataRowEvent>;\n\n    private differ: any;\n    private rowMenuCache: object = {};\n\n    private subscriptions: Subscription[] = [];\n    private singleClickStreamSub: Subscription;\n    private multiClickStreamSub: Subscription;\n    private dataRowsChanged: Subscription;\n\n    constructor(private elementRef: ElementRef,\n                differs: IterableDiffers) {\n        if (differs) {\n            this.differ = differs.find([]).create(null);\n        }\n        this.click$ = new Observable<DataRowEvent>((observer) => this.clickObserver = observer)\n            .pipe(share());\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.datatableLayoutFix();\n        this.setTableSchema();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.initAndSubscribeClickStream();\n        if (this.isPropertyChanged(changes['data'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.data = changes['data'].currentValue;\n                this.resetSelection();\n            }\n            return;\n        }\n\n        if (this.isPropertyChanged(changes['rows'])) {\n            if (this.isTableEmpty()) {\n                this.initTable();\n            } else {\n                this.setTableRows(changes['rows'].currentValue);\n            }\n            return;\n        }\n\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\n            this.resetSelection();\n            this.emitRowSelectionEvent('row-unselect', null);\n        }\n\n        if (this.isPropertyChanged(changes['sorting'])) {\n            this.setTableSorting(changes['sorting'].currentValue);\n        }\n\n        if (this.isPropertyChanged(changes['display'])) {\n            this.datatableLayoutFix();\n        }\n    }\n\n    ngDoCheck() {\n        const changes = this.differ.diff(this.rows);\n        if (changes) {\n            this.setTableRows(this.rows);\n        }\n    }\n\n    isPropertyChanged(property: SimpleChange): boolean {\n        return property && property.currentValue ? true : false;\n    }\n\n    convertToRowsData(rows: any []): ObjectDataRow[] {\n        return rows.map((row) => new ObjectDataRow(row, row.isSelected));\n    }\n\n    convertToDataSorting(sorting: any[]): DataSorting {\n        if (sorting && sorting.length > 0) {\n            return new DataSorting(sorting[0], sorting[1]);\n        }\n    }\n\n    private initAndSubscribeClickStream() {\n        this.unsubscribeClickStream();\n        const singleClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length === 1)\n            );\n\n        this.singleClickStreamSub = singleClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.handleRowSelection(event.value, <MouseEvent | KeyboardEvent> event.event);\n            this.rowClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-click', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n\n        const multiClickStream = this.click$\n            .pipe(\n                buffer(\n                    this.click$.pipe(\n                        debounceTime(250)\n                    )\n                ),\n                map((list) => list),\n                filter((x) => x.length >= 2)\n            );\n\n        this.multiClickStreamSub = multiClickStream.subscribe((dataRowEvents: DataRowEvent[]) => {\n            const event: DataRowEvent = dataRowEvents[0];\n            this.rowDblClick.emit(event);\n            if (!event.defaultPrevented) {\n                this.elementRef.nativeElement.dispatchEvent(\n                    new CustomEvent('row-dblclick', {\n                        detail: event,\n                        bubbles: true\n                    })\n                );\n            }\n        });\n    }\n\n    private unsubscribeClickStream() {\n        if (this.singleClickStreamSub) {\n            this.singleClickStreamSub.unsubscribe();\n            this.singleClickStreamSub = null;\n        }\n        if (this.multiClickStreamSub) {\n            this.multiClickStreamSub.unsubscribe();\n            this.multiClickStreamSub = null;\n        }\n    }\n\n    private initTable() {\n        this.data = new ObjectDataTableAdapter(this.rows, this.columns);\n        this.setTableSorting(this.sorting);\n        this.resetSelection();\n        this.rowMenuCache = {};\n    }\n\n    isTableEmpty() {\n        return this.data === undefined || this.data === null;\n    }\n\n    private setTableRows(rows: any[]) {\n        if (this.data) {\n            this.resetSelection();\n            this.data.setRows(this.convertToRowsData(rows));\n        }\n    }\n\n    private setTableSchema() {\n        let schema = [];\n        if (!this.columns || this.columns.length === 0) {\n            schema = this.getSchemaFromHtml();\n        } else {\n            schema = this.columns.concat(this.getSchemaFromHtml());\n        }\n\n        this.columns = schema;\n\n        if (this.data && this.columns && this.columns.length > 0) {\n            this.data.setColumns(this.columns);\n        }\n    }\n\n    private setTableSorting(sorting) {\n        if (this.data) {\n            this.data.setSorting(this.convertToDataSorting(sorting));\n        }\n    }\n\n    public getSchemaFromHtml(): any {\n        let schema = [];\n        if (this.columnList && this.columnList.columns && this.columnList.columns.length > 0) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n    onRowClick(row: DataRow, mouseEvent: MouseEvent) {\n        if (mouseEvent) {\n            mouseEvent.preventDefault();\n        }\n\n        if (row) {\n            const dataRowEvent = new DataRowEvent(row, mouseEvent, this);\n            this.clickObserver.next(dataRowEvent);\n        }\n    }\n\n    onEnterKeyPressed(row: DataRow, e: KeyboardEvent) {\n        if (row) {\n            this.handleRowSelection(row, e);\n        }\n    }\n\n    private handleRowSelection(row: DataRow, e: KeyboardEvent | MouseEvent) {\n        if (this.data) {\n            if (this.isSingleSelectionMode()) {\n                this.resetSelection();\n                this.selectRow(row, true);\n                this.emitRowSelectionEvent('row-select', row);\n            }\n\n            if (this.isMultiSelectionMode()) {\n                const modifier = e && (e.metaKey || e.ctrlKey);\n                let newValue: boolean;\n                if (this.selection.length === 1) {\n                    newValue = !row.isSelected;\n                } else {\n                    newValue = modifier ? !row.isSelected : true;\n                }\n                const domEventName = newValue ? 'row-select' : 'row-unselect';\n\n                if (!modifier) {\n                    this.resetSelection();\n                }\n                this.selectRow(row, newValue);\n                this.emitRowSelectionEvent(domEventName, row);\n            }\n        }\n    }\n\n    resetSelection(): void {\n        if (this.data) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                rows.forEach((r) => r.isSelected = false);\n            }\n            this.selection = [];\n        }\n        this.isSelectAllChecked = false;\n    }\n\n    onRowDblClick(row: DataRow, event?: Event) {\n        if (event) {\n            event.preventDefault();\n        }\n        const dataRowEvent = new DataRowEvent(row, event, this);\n        this.clickObserver.next(dataRowEvent);\n    }\n\n    onRowKeyUp(row: DataRow, e: KeyboardEvent) {\n        const event = new CustomEvent('row-keyup', {\n            detail: {\n                row: row,\n                keyboardEvent: e,\n                sender: this\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(event);\n\n        if (event.defaultPrevented) {\n            e.preventDefault();\n        } else {\n            if (e.key === 'Enter') {\n                this.onKeyboardNavigate(row, e);\n            }\n        }\n    }\n\n    private onKeyboardNavigate(row: DataRow, keyboardEvent: KeyboardEvent) {\n        if (keyboardEvent) {\n            keyboardEvent.preventDefault();\n        }\n\n        const event = new DataRowEvent(row, keyboardEvent, this);\n\n        this.rowDblClick.emit(event);\n        this.elementRef.nativeElement.dispatchEvent(\n            new CustomEvent('row-dblclick', {\n                detail: event,\n                bubbles: true\n            })\n        );\n    }\n\n    onColumnHeaderClick(column: DataColumn) {\n        if (column && column.sortable) {\n            const current = this.data.getSorting();\n            let newDirection = 'asc';\n            if (current && column.key === current.key) {\n                newDirection = current.direction === 'asc' ? 'desc' : 'asc';\n            }\n            this.data.setSorting(new DataSorting(column.key, newDirection));\n            this.emitSortingChangedEvent(column.key, newDirection);\n        }\n    }\n\n    onSelectAllClick(matCheckboxChange: MatCheckboxChange) {\n        this.isSelectAllChecked = matCheckboxChange.checked;\n\n        if (this.multiselect) {\n            const rows = this.data.getRows();\n            if (rows && rows.length > 0) {\n                for (let i = 0; i < rows.length; i++) {\n                    this.selectRow(rows[i], matCheckboxChange.checked);\n                }\n            }\n\n            const domEventName = matCheckboxChange.checked ? 'row-select' : 'row-unselect';\n            const row = this.selection.length > 0 ? this.selection[0] : null;\n\n            this.emitRowSelectionEvent(domEventName, row);\n        }\n    }\n\n    onCheckboxChange(row: DataRow, event: MatCheckboxChange) {\n        const newValue = event.checked;\n\n        this.selectRow(row, newValue);\n\n        const domEventName = newValue ? 'row-select' : 'row-unselect';\n        this.emitRowSelectionEvent(domEventName, row);\n    }\n\n    onImageLoadingError(event: Event, row: DataRow) {\n        if (event) {\n            const element = <any> event.target;\n\n            if (this.fallbackThumbnail) {\n                element.src = this.fallbackThumbnail;\n            } else {\n                element.src = row.imageErrorResolver(event);\n            }\n        }\n    }\n\n    isIconValue(row: DataRow, col: DataColumn): boolean {\n        if (row && col) {\n            const value = row.getValue(col.key);\n            return value && value.startsWith('material-icons://');\n        }\n        return false;\n    }\n\n    asIconValue(row: DataRow, col: DataColumn): string {\n        if (this.isIconValue(row, col)) {\n            const value = row.getValue(col.key) || '';\n            return value.replace('material-icons://', '');\n        }\n        return null;\n    }\n\n    iconAltTextKey(value: string): string {\n        return value ? 'ICONS.' + value.substring(value.lastIndexOf('/') + 1).replace(/\\.[a-z]+/, '') : '';\n    }\n\n    isColumnSorted(col: DataColumn, direction: string): boolean {\n        if (col && direction) {\n            const sorting = this.data.getSorting();\n            return sorting && sorting.key === col.key && sorting.direction === direction;\n        }\n        return false;\n    }\n\n    getContextMenuActions(row: DataRow, col: DataColumn): any[] {\n        const event = new DataCellEvent(row, col, []);\n        this.showRowContextMenu.emit(event);\n        return event.value.actions;\n    }\n\n    getRowActions(row: DataRow, col?: DataColumn): any[] {\n        const id = row.getValue('id');\n\n        if (!this.rowMenuCache[id]) {\n            const event = new DataCellEvent(row, col, []);\n            this.showRowActionsMenu.emit(event);\n            if (!this.rowMenuCacheEnabled) {\n                return event.value.actions;\n            }\n            this.rowMenuCache[id] = event.value.actions;\n        }\n\n        return this.rowMenuCache[id];\n    }\n\n    onExecuteRowAction(row: DataRow, action: any) {\n        if (action.disabled || action.disabled) {\n            event.stopPropagation();\n        } else {\n            this.executeRowAction.emit(new DataRowActionEvent(row, action));\n        }\n    }\n\n    rowAllowsDrop(row: DataRow): boolean {\n        return row.isDropTarget === true;\n    }\n\n    hasSelectionMode(): boolean {\n        return this.isSingleSelectionMode() || this.isMultiSelectionMode();\n    }\n\n    isSingleSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'single';\n    }\n\n    isMultiSelectionMode(): boolean {\n        return this.selectionMode && this.selectionMode.toLowerCase() === 'multiple';\n    }\n\n    getRowStyle(row: DataRow): string {\n        row.cssClass = row.cssClass ? row.cssClass : '';\n        this.rowStyleClass = this.rowStyleClass ? this.rowStyleClass : '';\n        return `${row.cssClass} ${this.rowStyleClass}`;\n    }\n\n    getSortingKey(): string {\n        if (this.data.getSorting()) {\n            return this.data.getSorting().key;\n        }\n    }\n\n    selectRow(row: DataRow, value: boolean) {\n        if (row) {\n            row.isSelected = value;\n            const idx = this.selection.indexOf(row);\n            if (value) {\n                if (idx < 0) {\n                    this.selection.push(row);\n                }\n            } else {\n                if (idx > -1) {\n                    this.selection.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    getCellTooltip(row: DataRow, col: DataColumn): string {\n        if (row && col && col.formatTooltip) {\n            const result: string = col.formatTooltip(row, col);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n\n    getSortableColumns() {\n        return this.data.getColumns().filter((column) => {\n            return column.sortable === true;\n        });\n    }\n\n    isEmpty() {\n        return this.data.getRows().length === 0;\n    }\n\n    isHeaderVisible() {\n        return !this.loading && !this.isEmpty() && !this.noPermission;\n    }\n\n    private emitRowSelectionEvent(name: string, row: DataRow) {\n        const domEvent = new CustomEvent(name, {\n            detail: {\n                row: row,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    private emitSortingChangedEvent(key: string, direction: string) {\n        const domEvent = new CustomEvent('sorting-changed', {\n            detail: {\n                key,\n                direction\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    ngOnDestroy() {\n        this.unsubscribeClickStream();\n\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.dataRowsChanged) {\n            this.dataRowsChanged.unsubscribe();\n            this.dataRowsChanged = null;\n        }\n    }\n\n    datatableLayoutFix() {\n        const maxGalleryRows = 25;\n\n        if (this.display === 'gallery') {\n            for (let i = 0; i < maxGalleryRows; i++) {\n               this.fakeRows.push('');\n            }\n        } else {\n            this.fakeRows = [];\n        }\n    }\n\n    getNameColumnValue() {\n        return this.data.getColumns().find( (el: any) => {\n            return el.key.includes('name');\n        });\n    }\n\n    getAutomationValue(row: DataRow, col: DataColumn) {\n        const name = this.getNameColumnValue();\n        return name ? row.getValue(name.key) : '';\n    }\n}\n\nexport interface DataTableDropEvent {\n    detail: {\n        target: 'cell' | 'header';\n        event: Event;\n        column: DataColumn;\n        row?: DataRow\n    };\n\n    preventDefault(): void;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport {\n    UserPreferencesService,\n    UserPreferenceValues\n} from '../../../services/user-preferences.service';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-date-cell',\n\n    template: `\n        <ng-container>\n            <span\n                [attr.aria-label]=\"value$ | async | adfTimeAgo: currentLocale\"\n                title=\"{{ tooltip | date: 'medium' }}\"\n                class=\"adf-datatable-cell-value\"\n                *ngIf=\"format === 'timeAgo'; else standard_date\"\n            >\n                {{ value$ | async | adfTimeAgo: currentLocale }}\n            </span>\n        </ng-container>\n        <ng-template #standard_date>\n            <span\n                title=\"{{ tooltip | date: format }}\"\n                class=\"adf-datatable-cell-value\"\n                [attr.aria-label]=\"value$ | async | date: format\"\n            >\n                {{ value$ | async | date: format }}\n            </span>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-date-cell adf-datatable-content-cell' }\n})\nexport class DateCellComponent extends DataTableCellComponent {\n    currentLocale: string;\n\n    get format(): string {\n        if (this.column) {\n            return this.column.format || 'medium';\n        }\n        return 'medium';\n    }\n\n    constructor(\n        userPreferenceService: UserPreferencesService,\n        alfrescoApiService: AlfrescoApiService\n    ) {\n        super(alfrescoApiService);\n\n        if (userPreferenceService) {\n            userPreferenceService\n                .select(UserPreferenceValues.Locale)\n                .subscribe((locale) => {\n                    this.currentLocale = locale;\n                });\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-list',\n    styleUrls: ['./empty-list.component.scss'],\n    templateUrl: './empty-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptyListComponent {}\n\n@Directive({ selector: '[adf-empty-list-header]' }) export class EmptyListHeaderDirective {}\n@Directive({ selector: '[adf-empty-list-body]' }) export class EmptyListBodyDirective {}\n@Directive({ selector: '[adf-empty-list-footer]' }) export class EmptyListFooterDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-filesize-cell',\n    template: `\n        <ng-container>\n            <span\n                [title]=\"tooltip\"\n                [attr.aria-label]=\"value$ | async | adfFileSize\"\n                >{{ value$ | async | adfFileSize }}</span\n            >\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-filesize-cell' }\n})\nexport class FileSizeCellComponent extends DataTableCellComponent {\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    OnInit,\n    ViewEncapsulation\n} from '@angular/core';\nimport { PathInfoEntity } from '@alfresco/js-api';\nimport { DataTableCellComponent } from './datatable-cell.component';\nimport { AlfrescoApiService } from '../../../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-location-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <a href=\"\" [title]=\"tooltip\" [routerLink]=\"link\">\n                {{ value$ | async }}\n            </a>\n        </ng-container>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-location-cell adf-datatable-content-cell' }\n})\nexport class LocationCellComponent extends DataTableCellComponent implements OnInit {\n    @Input()\n    link: any[];\n\n    constructor(alfrescoApiService: AlfrescoApiService) {\n        super(alfrescoApiService);\n    }\n\n    /** @override */\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            const path: PathInfoEntity = this.data.getValue(\n                this.row,\n                this.column\n            );\n\n            if (path && path.name && path.elements) {\n                this.value$.next(path.name.split('/').pop());\n\n                if (!this.tooltip) {\n                    this.tooltip = path.name;\n                }\n\n                const parent = path.elements[path.elements.length - 1];\n                this.link = [this.column.format, parent.id];\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-loading-content-template, loading-content-template'\n})\nexport class LoadingContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.loadingTemplate = this.template;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-content-template, no-content-template'\n})\nexport class NoContentTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noContentTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, TemplateRef } from '@angular/core';\nimport { DataTableComponent } from '../components/datatable/datatable.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-no-permission-template, no-permission-template'\n})\nexport class NoPermissionTemplateDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(private dataTable: DataTableComponent) {\n    }\n\n    ngAfterContentInit() {\n        if (this.dataTable) {\n            this.dataTable.noPermissionTemplate = this.template;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The empty-folder-content selector will be deprecated as it has been replace by\n * adf-custom-empty-content-template.\n */\n@Directive({\n    selector: 'adf-custom-empty-content-template, empty-folder-content'\n})\n\nexport class CustomEmptyContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n    selector: 'adf-custom-loading-content-template'\n})\nexport class CustomLoadingContentTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0.\n * The no-permission-content selector will be deprecated as it has been replace by\n * adf-custom-no-permission-template.\n */\n@Directive({\n    selector: 'adf-custom-no-permission-template, no-permission-content'\n})\nexport class CustomNoPermissionTemplateDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation, Input } from '@angular/core';\nimport { DataTableCellComponent } from './datatable-cell.component';\n\n@Component({\n    selector: 'adf-json-cell',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <ng-container>\n            <span *ngIf=\"copyContent; else defaultJsonTemplate\" class=\"adf-datatable-cell-value\">\n                <pre\n                    class=\"adf-datatable-json-cell\"\n                    [adf-clipboard]=\"'CLIPBOARD.CLICK_TO_COPY'\"\n                    [clipboard-notification]=\"'CLIPBOARD.SUCCESS_COPY'\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-container>\n        <ng-template #defaultJsonTemplate>\n            <span class=\"adf-datatable-cell-value\">\n                <pre class=\"adf-datatable-json-cell\">{{ value$ | async | json }}</pre>\n            </span>\n        </ng-template>\n    `,\n    styleUrls: ['./json-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell' }\n})\nexport class JsonCellComponent extends DataTableCellComponent implements OnInit {\n\n     /** Enables/disables a Clipboard directive to allow copying of the cell's content. */\n     @Input()\n     copyContent: boolean;\n\n    ngOnInit() {\n        if (this.column && this.column.key && this.row && this.data) {\n            this.value$.next(this.data.getValue(this.row, this.column));\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, MatSnackBarConfig } from '@angular/material';\nimport { TranslationService } from './translation.service';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NotificationService {\n\n    DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    constructor(private snackBar: MatSnackBar,\n                private translationService: TranslationService,\n                private appConfigService: AppConfigService) {\n        this.DEFAULT_DURATION_MESSAGE = this.appConfigService.get<number>(AppConfigValues.NOTIFY_DURATION) || this.DEFAULT_DURATION_MESSAGE;\n\n    }\n\n    /**\n     * Opens a SnackBar notification to show a message.\n     * @param message The message (or resource key) to show.\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessage(message: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, null, config);\n    }\n\n    /**\n     * Opens a SnackBar notification with a message and a response button.\n     * @param message The message (or resource key) to show.\n     * @param action Caption for the response button\n     * @param config Time before notification disappears after being shown or MatSnackBarConfig object\n     * @returns Information/control object for the SnackBar\n     */\n    openSnackMessageAction(message: string, action: string, config?: number | MatSnackBarConfig): MatSnackBarRef<any> {\n        if (!config) {\n            config = this.DEFAULT_DURATION_MESSAGE;\n        }\n\n        const translatedMessage = this.translationService.instant(message);\n\n        if (typeof config === 'number') {\n            config = {\n                duration: config\n            };\n        }\n\n        return this.snackBar.open(translatedMessage, action, config);\n    }\n\n    /**\n     *  dismiss the notification snackbar\n     */\n    dismissSnackMessageAction() {\n        return this.snackBar.dismiss();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { LogService } from '../services/log.service';\nimport { NotificationService } from '../services/notification.service';\n\n@Injectable()\nexport class ClipboardService {\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private logService: LogService,\n        private notificationService: NotificationService) {}\n\n    /**\n     * Checks if the target element can have its text copied.\n     * @param target Target HTML element\n     * @returns True if the text can be copied, false otherwise\n     */\n    isTargetValid(target: HTMLInputElement | HTMLTextAreaElement) {\n        if (target instanceof HTMLInputElement || target instanceof HTMLTextAreaElement) {\n            return !target.hasAttribute('disabled');\n        }\n        return false;\n    }\n\n    /**\n     * Copies text from an HTML element to the clipboard.\n     * @param target HTML element to be copied\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyToClipboard(target: HTMLInputElement | HTMLTextAreaElement, message?: string) {\n        if (this.isTargetValid(target)) {\n            try {\n                target.select();\n                target.setSelectionRange(0, target.value.length);\n                this.document.execCommand('copy');\n                this.notify(message);\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    /**\n     * Copies a text string to the clipboard.\n     * @param content Text to copy\n     * @param message Snackbar message to alert when copying happens\n     */\n    copyContentToClipboard(content: string, message: string) {\n        try {\n            document.addEventListener('copy', (e: ClipboardEvent) => {\n                e.clipboardData.setData('text/plain', (content));\n                e.preventDefault();\n                document.removeEventListener('copy', null);\n              });\n            document.execCommand('copy');\n            this.notify(message);\n        } catch (error) {\n            this.logService.error(error);\n        }\n    }\n\n    private notify(message) {\n        if (message) {\n            this.notificationService.openSnackMessage(message);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, Component, ViewContainerRef, ComponentFactoryResolver, ViewEncapsulation, OnInit } from '@angular/core';\nimport { ClipboardService } from './clipboard.service';\n\n@Directive({\n    selector: '[adf-clipboard]',\n    exportAs: 'adfClipboard'\n})\nexport class ClipboardDirective {\n    /** Translation key or message for the tooltip. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-clipboard')\n    placeholder: string;\n\n    /** Reference to the HTML element containing the text to copy. */\n    @Input()\n    target: HTMLInputElement | HTMLTextAreaElement;\n\n    /** Translation key or message for snackbar notification. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('clipboard-notification') message: string;\n\n    constructor(private clipboardService: ClipboardService,\n                public viewContainerRef: ViewContainerRef,\n                private resolver: ComponentFactoryResolver) {}\n\n    @HostListener('click', ['$event'])\n    handleClickEvent(event: MouseEvent) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.copyToClipboard();\n    }\n\n    @HostListener('mouseenter')\n    showTooltip() {\n        if (this.placeholder) {\n            const componentFactory = this.resolver.resolveComponentFactory(ClipboardComponent);\n            const componentRef = this.viewContainerRef.createComponent(componentFactory).instance;\n            componentRef.placeholder = this.placeholder;\n        }\n    }\n\n    @HostListener('mouseleave')\n    closeTooltip() {\n        this.viewContainerRef.remove();\n    }\n\n    private copyToClipboard() {\n        const isValidTarget = this.clipboardService.isTargetValid(this.target);\n\n        if (isValidTarget) {\n            this.clipboardService.copyToClipboard(this.target, this.message);\n        } else {\n            this.copyContentToClipboard(this.viewContainerRef.element.nativeElement.innerHTML);\n        }\n    }\n\n    private copyContentToClipboard(content) {\n        this.clipboardService.copyContentToClipboard(content, this.message);\n    }\n}\n\n@Component({\n    selector: 'adf-copy-content-tooltip',\n    template: `\n        <span class='adf-copy-tooltip'>{{ placeholder | translate }} </span>\n        `,\n    styleUrls: ['./clipboard.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClipboardComponent implements OnInit {\n    placeholder: string;\n\n    ngOnInit() {\n        this.placeholder = this.placeholder || 'CLIPBOARD.CLICK_TO_COPY';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClipboardDirective, ClipboardComponent } from './clipboard.directive';\nimport { ClipboardService } from './clipboard.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    providers: [\n        ClipboardService\n    ],\n    declarations: [\n        ClipboardDirective,\n        ClipboardComponent\n    ],\n    exports: [\n        ClipboardDirective\n    ],\n    entryComponents: [ClipboardComponent]\n})\n\nexport class ClipboardModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, ElementRef, NgZone, OnInit, OnDestroy } from '@angular/core';\nimport { DataRow } from '../../data/data-row.model';\nimport { DataColumn } from '../../data/data-column.model';\n\n@Directive({\n    selector: '[adf-drop-zone]'\n})\nexport class DropZoneDirective implements OnInit, OnDestroy {\n    private element: HTMLElement;\n\n    @Input()\n    dropTarget: 'header' | 'cell' = 'cell';\n\n    @Input()\n    dropRow: DataRow;\n\n    @Input()\n    dropColumn: DataColumn;\n\n    constructor(elementRef: ElementRef, private ngZone: NgZone) {\n        this.element = elementRef.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('drop', this.onDrop.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    onDragOver(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-dragover`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    onDrop(event: Event) {\n        const domEvent = new CustomEvent(`${this.dropTarget}-drop`, {\n            detail: {\n                target: this.dropTarget,\n                event,\n                column: this.dropColumn,\n                row: this.dropRow\n            },\n            bubbles: true\n        });\n\n        this.element.dispatchEvent(domEvent);\n\n        if (domEvent.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { ContextMenuModule } from '../context-menu/context-menu.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { DirectiveModule } from '../directives/directive.module';\nimport { DataTableCellComponent } from './components/datatable/datatable-cell.component';\nimport { DataTableComponent } from './components/datatable/datatable.component';\nimport { DateCellComponent } from './components/datatable/date-cell.component';\nimport { EmptyListBodyDirective,\n    EmptyListComponent,\n    EmptyListFooterDirective,\n    EmptyListHeaderDirective } from './components/datatable/empty-list.component';\nimport { FileSizeCellComponent } from './components/datatable/filesize-cell.component';\nimport { LocationCellComponent } from './components/datatable/location-cell.component';\nimport { LoadingContentTemplateDirective } from './directives/loading-template.directive';\nimport { NoContentTemplateDirective } from './directives/no-content-template.directive';\nimport { NoPermissionTemplateDirective } from './directives/no-permission-template.directive';\nimport { CustomEmptyContentTemplateDirective } from './directives/custom-empty-content-template.directive';\nimport { CustomLoadingContentTemplateDirective } from './directives/custom-loading-template.directive';\nimport { CustomNoPermissionTemplateDirective } from './directives/custom-no-permission-template.directive';\nimport { JsonCellComponent } from './components/datatable/json-cell.component';\nimport { ClipboardModule } from '../clipboard/clipboard.module';\nimport { DropZoneDirective } from './components/datatable/drop-zone.directive';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild(),\n        ContextMenuModule,\n        PipeModule,\n        DirectiveModule,\n        ClipboardModule\n    ],\n    declarations: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ],\n    exports: [\n        DataTableComponent,\n        EmptyListComponent,\n        EmptyListHeaderDirective,\n        EmptyListBodyDirective,\n        EmptyListFooterDirective,\n        DataTableCellComponent,\n        DateCellComponent,\n        FileSizeCellComponent,\n        LocationCellComponent,\n        JsonCellComponent,\n        NoContentTemplateDirective,\n        NoPermissionTemplateDirective,\n        LoadingContentTemplateDirective,\n        CustomEmptyContentTemplateDirective,\n        CustomLoadingContentTemplateDirective,\n        CustomNoPermissionTemplateDirective,\n        DropZoneDirective\n    ]\n\n})\nexport class DataTableModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DataColumnListComponent } from './data-column-list.component';\nimport { DataColumnComponent } from './data-column.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ],\n    exports: [\n        DataColumnComponent,\n        DataColumnListComponent\n    ]\n})\nexport class DataColumnModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { AboutComponent } from './about.component';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        DataTableModule,\n        DataColumnModule\n    ],\n    declarations: [\n        AboutComponent\n    ],\n    exports: [\n        AboutComponent\n    ]\n})\nexport class AboutModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ViewUtilService {\n    static TARGET = '_new';\n\n    /**\n     * Content groups based on categorization of files that can be viewed in the web browser. This\n     * implementation or grouping is tied to the definition the ng component: ViewerComponent\n     */\n        // tslint:disable-next-line:variable-name\n    static ContentGroup = {\n        IMAGE: 'image',\n        MEDIA: 'media',\n        PDF: 'pdf',\n        TEXT: 'text'\n    };\n\n    /**\n     * Based on ViewerComponent Implementation, this value is used to determine how many times we try\n     * to get the rendition of a file for preview, or printing.\n     */\n    maxRetries = 5;\n\n    /**\n     * Mime-type grouping based on the ViewerComponent.\n     */\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * This method takes a url to trigger the print dialog against, and the type of artifact that it\n     * is.\n     * This URL should be one that can be rendered in the browser, for example PDF, Image, or Text\n     */\n    printFile(url: string, type: string): void {\n        const pwa = window.open(url, ViewUtilService.TARGET);\n        if (pwa) {\n            // Because of the way chrome focus and close image window vs. pdf preview window\n            if (type === ViewUtilService.ContentGroup.IMAGE) {\n                pwa.onfocus = () => {\n                    setTimeout(() => {\n                        pwa.close();\n                    }, 500);\n                };\n            }\n\n            pwa.onload = () => {\n                pwa.print();\n            };\n        }\n    }\n\n    /**\n     * Launch the File Print dialog from anywhere other than the preview service, which resolves the\n     * rendition of the object that can be printed from a web browser.\n     * These are: images, PDF files, or PDF rendition of files.\n     * We also force PDF rendition for TEXT type objects, otherwise the default URL is to download.\n     * TODO there are different TEXT type objects, (HTML, plaintext, xml, etc. we should determine how these are handled)\n     */\n    printFileGeneric(objectId: string, mimeType: string): void {\n        const nodeId = objectId;\n        const type: string = this.getViewerTypeByMimeType(mimeType);\n\n        this.getRendition(nodeId, ViewUtilService.ContentGroup.PDF)\n            .then((value) => {\n                const url: string = this.getRenditionUrl(nodeId, type, (value ? true : false));\n                const printType = (type === ViewUtilService.ContentGroup.PDF\n                    || type === ViewUtilService.ContentGroup.TEXT)\n                    ? ViewUtilService.ContentGroup.PDF : type;\n                this.printFile(url, printType);\n            })\n            .catch((err) => {\n                this.logService.error('Error with Printing');\n                this.logService.error(err);\n            });\n    }\n\n    getRenditionUrl(nodeId: string, type: string, renditionExists: boolean): string {\n        return (renditionExists && type !== ViewUtilService.ContentGroup.IMAGE) ?\n            this.apiService.contentApi.getRenditionUrl(nodeId, ViewUtilService.ContentGroup.PDF) :\n            this.apiService.contentApi.getContentUrl(nodeId, false);\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string, retries: number): Promise<RenditionEntry> {\n        const rendition = await this.apiService.renditionsApi.getRendition(nodeId, renditionId);\n\n        if (this.maxRetries < retries) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'CREATED') {\n                return rendition;\n            } else {\n                retries += 1;\n                await this.wait(1000);\n                return await this.waitRendition(nodeId, renditionId, retries);\n            }\n        }\n    }\n\n    getViewerTypeByMimeType(mimeType: string): string {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    wait(ms: number): Promise<any> {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    }\n\n    async getRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        const renditionPaging: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n        let rendition: RenditionEntry = renditionPaging.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n\n        if (rendition) {\n            const status = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId });\n                    rendition = await this.waitRendition(nodeId, renditionId, 0);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n        return new Promise<RenditionEntry>((resolve) => resolve(rendition));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PreviousRouteService {\n\n    private previousUrl: string;\n    private currentUrl: string;\n\n    constructor(private router: Router) {\n        this.currentUrl = this.router.url;\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getPreviousUrl(): string {\n        return this.previousUrl;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-more-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-more-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerMoreActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-open-with',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-open-with' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerOpenWithComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-sidebar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-sidebar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerSidebarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from '@angular/common';\nimport {\n    Component, ContentChild, EventEmitter, HostListener, ElementRef,\n    Input, OnChanges, Output, SimpleChanges, TemplateRef,\n    ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { RenditionPaging, SharedLinkEntry, Node, RenditionEntry, NodeEntry } from '@alfresco/js-api';\nimport { BaseEvent } from '../../events';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { PreviousRouteService } from '../../services/previous-route.service';\nimport { ViewerMoreActionsComponent } from './viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './viewer-open-with.component';\nimport { ViewerSidebarComponent } from './viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './viewer-toolbar.component';\nimport { Subscription } from 'rxjs';\nimport { ViewUtilService } from '../services/view-util.service';\nimport { AppExtensionService, ViewerExtensionRef } from '@alfresco/adf-extensions';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'adf-viewer',\n    templateUrl: './viewer.component.html',\n    styleUrls: ['./viewer.component.scss'],\n    host: { 'class': 'adf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ViewerComponent implements OnChanges, OnInit, OnDestroy {\n\n    @ContentChild(ViewerToolbarComponent)\n    toolbar: ViewerToolbarComponent;\n\n    @ContentChild(ViewerSidebarComponent)\n    sidebar: ViewerSidebarComponent;\n\n    @ContentChild(ViewerOpenWithComponent)\n    mnuOpenWith: ViewerOpenWithComponent;\n\n    @ContentChild(ViewerMoreActionsComponent)\n    mnuMoreActions: ViewerMoreActionsComponent;\n\n    /** If you want to load an external file that does not come from ACS you\n     * can use this URL to specify where to load the file from.\n     */\n    @Input()\n    urlFile = '';\n\n    /** Viewer to use with the `urlFile` address (`pdf`, `image`, `media`, `text`).\n     * Used when `urlFile` has no filename and extension.\n     */\n    @Input()\n    urlFileViewer: string = null;\n\n    /** Loads a Blob File */\n    @Input()\n    blobFile: Blob;\n\n    /** Node Id of the file to load. */\n    @Input()\n    nodeId: string = null;\n\n    /** Shared link id (to display shared file). */\n    @Input()\n    sharedLinkId: string = null;\n\n    /** If `true` then show the Viewer as a full page over the current content.\n     * Otherwise fit inside the parent div.\n     */\n    @Input()\n    overlayMode = false;\n\n    /** Hide or show the viewer */\n    @Input()\n    showViewer = true;\n\n    /** Hide or show the toolbar */\n    @Input()\n    showToolbar = true;\n\n    /** Specifies the name of the file when it is not available from the URL. */\n    @Input()\n    displayName: string;\n\n    /** Allows `back` navigation */\n    @Input()\n    allowGoBack = true;\n\n    /** Toggles downloading. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles printing. */\n    @Input()\n    allowPrint = false;\n\n    /** Toggles the 'Full Screen' feature. */\n    @Input()\n    allowFullScreen = true;\n\n    /** Toggles before/next navigation. You can use the arrow buttons to navigate\n     * between documents in the collection.\n     */\n    @Input()\n    allowNavigate = false;\n\n    /** Toggles the \"before\" (\"<\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateBefore = true;\n\n    /** Toggles the next (\">\") button. Requires `allowNavigate` to be enabled. */\n    @Input()\n    canNavigateNext = true;\n\n    /** Allow the left the sidebar. */\n    @Input()\n    allowLeftSidebar = false;\n\n    /** Allow the right sidebar. */\n    @Input()\n    allowRightSidebar = false;\n\n    /** Toggles PDF thumbnails. */\n    @Input()\n    allowThumbnails = true;\n\n    /** Toggles right sidebar visibility. Requires `allowRightSidebar` to be set to `true`. */\n    @Input()\n    showRightSidebar = false;\n\n    /** Toggles left sidebar visibility. Requires `allowLeftSidebar` to be set to `true`. */\n    @Input()\n    showLeftSidebar = false;\n\n    /** The template for the right sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarRightTemplate: TemplateRef<any> = null;\n\n    /** The template for the left sidebar. The template context contains the loaded node data. */\n    @Input()\n    sidebarLeftTemplate: TemplateRef<any> = null;\n\n    /** The template for the pdf thumbnails. */\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    /** MIME type of the file content (when not determined by the filename extension). */\n    @Input()\n    mimeType: string;\n\n    /** Content filename. */\n    @Input()\n    fileName: string;\n\n    /** Number of times the Viewer will retry fetching content Rendition.\n     * There is a delay of at least one second between attempts.\n     */\n    @Input()\n    maxRetries = 10;\n\n    /** Emitted when user clicks the 'Back' button. */\n    @Output()\n    goBack = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when user clicks the 'Print' button. */\n    @Output()\n    print = new EventEmitter<BaseEvent<any>>();\n\n    /** Emitted when the viewer is shown or hidden. */\n    @Output()\n    showViewerChange = new EventEmitter<boolean>();\n\n    /** Emitted when the filename extension changes. */\n    @Output()\n    extensionChange = new EventEmitter<string>();\n\n    /** Emitted when user clicks 'Navigate Before' (\"<\") button. */\n    @Output()\n    navigateBefore = new EventEmitter();\n\n    /** Emitted when user clicks 'Navigate Next' (\">\") button. */\n    @Output()\n    navigateNext = new EventEmitter();\n\n    /** Emitted when the shared link used is not valid. */\n    @Output()\n    invalidSharedLink = new EventEmitter();\n\n    viewerType = 'unknown';\n    isLoading = false;\n    nodeEntry: NodeEntry;\n\n    extensionTemplates: { template: TemplateRef<any>, isVisible: boolean }[] = [];\n    externalExtensions: string[] = [];\n    urlFileContent: string;\n    otherMenu: any;\n    extension: string;\n    sidebarRightTemplateContext: { node: Node } = { node: null };\n    sidebarLeftTemplateContext: { node: Node } = { node: null };\n    fileTitle: string;\n    viewerExtensions: Array<ViewerExtensionRef> = [];\n\n    private cacheBusterNumber;\n\n    private subscriptions: Subscription[] = [];\n\n    // Extensions that are supported by the Viewer without conversion\n    private extensions = {\n        image: ['png', 'jpg', 'jpeg', 'gif', 'bpm', 'svg'],\n        media: ['wav', 'mp4', 'mp3', 'webm', 'ogg'],\n        text: ['txt', 'xml', 'html', 'json', 'ts', 'css', 'md'],\n        pdf: ['pdf']\n    };\n\n    // Mime types that are supported by the Viewer without conversion\n    private mimeTypes = {\n        text: ['text/plain', 'text/csv', 'text/xml', 'text/html', 'application/x-javascript'],\n        pdf: ['application/pdf'],\n        image: ['image/png', 'image/jpeg', 'image/gif', 'image/bmp', 'image/svg+xml'],\n        media: ['video/mp4', 'video/webm', 'video/ogg', 'audio/mpeg', 'audio/ogg', 'audio/wav']\n    };\n\n    constructor(private apiService: AlfrescoApiService,\n                private viewUtils: ViewUtilService,\n                private logService: LogService,\n                private location: Location,\n                private extensionService: AppExtensionService,\n                private el: ElementRef,\n                private router: Router,\n                private previousRouteService: PreviousRouteService) {\n    }\n\n    isSourceDefined(): boolean {\n        return (this.urlFile || this.blobFile || this.nodeId || this.sharedLinkId) ? true : false;\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.apiService.nodeUpdated.subscribe((node) => this.onNodeUpdated(node))\n        );\n\n        this.loadExtensions();\n    }\n\n    private loadExtensions() {\n        this.viewerExtensions = this.extensionService.getViewerExtensions();\n        this.viewerExtensions\n            .forEach((extension: ViewerExtensionRef) => {\n                this.externalExtensions.push(extension.fileExtension);\n            });\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private onNodeUpdated(node: Node) {\n        if (node && node.id === this.nodeId) {\n            this.generateCacheBusterNumber();\n            this.isLoading = true;\n            this.setUpNodeFile(node).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.showViewer) {\n            if (!this.isSourceDefined()) {\n                throw new Error('A content source attribute value is missing.');\n            }\n            this.isLoading = true;\n\n            if (this.blobFile) {\n                this.setUpBlobData();\n                this.isLoading = false;\n            } else if (this.urlFile) {\n                this.setUpUrlFile();\n                this.isLoading = false;\n            } else if (this.nodeId) {\n                this.apiService.nodesApi.getNode(this.nodeId, { include: ['allowableOperations'] }).then(\n                    (node: NodeEntry) => {\n                        this.nodeEntry = node;\n                        this.setUpNodeFile(node.entry).then(() => {\n                            this.isLoading = false;\n                        });\n                    },\n                    (error) => {\n                        this.isLoading = false;\n                        this.logService.error('This node does not exist');\n                    }\n                );\n            } else if (this.sharedLinkId) {\n                this.allowGoBack = false;\n\n                this.apiService.sharedLinksApi.getSharedLink(this.sharedLinkId).then(\n                    (sharedLinkEntry: SharedLinkEntry) => {\n                        this.setUpSharedLinkFile(sharedLinkEntry);\n                        this.isLoading = false;\n                    },\n                    () => {\n                        this.isLoading = false;\n                        this.logService.error('This sharedLink does not exist');\n                        this.invalidSharedLink.next();\n                    });\n            }\n        }\n    }\n\n    private setUpBlobData() {\n        this.fileTitle = this.getDisplayName('Unknown');\n        this.mimeType = this.blobFile.type;\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n\n        this.allowDownload = false;\n        // TODO: wrap blob into the data url and allow downloading\n\n        this.extensionChange.emit(this.mimeType);\n        this.scrollTop();\n    }\n\n    private setUpUrlFile() {\n        const filenameFromUrl = this.getFilenameFromUrl(this.urlFile);\n        this.fileTitle = this.getDisplayName(filenameFromUrl);\n        this.extension = this.getFileExtension(filenameFromUrl);\n        this.urlFileContent = this.urlFile;\n\n        this.fileName = this.displayName;\n\n        this.viewerType = this.urlFileViewer || this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.scrollTop();\n    }\n\n    private async setUpNodeFile(data: Node) {\n        let setupNode;\n\n        if (data.content) {\n            this.mimeType = data.content.mimeType;\n        }\n\n        this.fileTitle = this.getDisplayName(data.name);\n\n        this.urlFileContent = this.apiService.contentApi.getContentUrl(data.id);\n        this.urlFileContent = this.cacheBusterNumber ? this.urlFileContent + '&' + this.cacheBusterNumber : this.urlFileContent;\n\n        this.extension = this.getFileExtension(data.name);\n\n        this.fileName = data.name;\n\n        this.viewerType = this.getViewerTypeByExtension(this.extension);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        }\n\n        if (this.viewerType === 'unknown') {\n            setupNode = this.displayNodeRendition(data.id);\n        }\n\n        this.extensionChange.emit(this.extension);\n        this.sidebarRightTemplateContext.node = data;\n        this.sidebarLeftTemplateContext.node = data;\n        this.scrollTop();\n\n        return setupNode;\n    }\n\n    private setUpSharedLinkFile(details: any) {\n        this.mimeType = details.entry.content.mimeType;\n        this.fileTitle = this.getDisplayName(details.entry.name);\n        this.extension = this.getFileExtension(details.entry.name);\n        this.fileName = details.entry.name;\n\n        this.urlFileContent = this.apiService.contentApi.getSharedLinkContentUrl(this.sharedLinkId, false);\n\n        this.viewerType = this.getViewerTypeByMimeType(this.mimeType);\n        if (this.viewerType === 'unknown') {\n            this.viewerType = this.getViewerTypeByExtension(this.extension);\n        }\n\n        if (this.viewerType === 'unknown') {\n            this.displaySharedLinkRendition(this.sharedLinkId);\n        }\n\n        this.extensionChange.emit(this.extension);\n    }\n\n    toggleSidebar() {\n        this.showRightSidebar = !this.showRightSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarRightTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    toggleLeftSidebar() {\n        this.showLeftSidebar = !this.showLeftSidebar;\n        if (this.showRightSidebar && this.nodeId) {\n            this.apiService.getInstance().nodes.getNode(this.nodeId, { include: ['allowableOperations'] })\n                .then((nodeEntry: NodeEntry) => {\n                    this.sidebarLeftTemplateContext.node = nodeEntry.entry;\n                });\n        }\n    }\n\n    private getDisplayName(name) {\n        return this.displayName || name;\n    }\n\n    scrollTop() {\n        window.scrollTo(0, 1);\n    }\n\n    getViewerTypeByMimeType(mimeType: string) {\n        if (mimeType) {\n            mimeType = mimeType.toLowerCase();\n\n            const editorTypes = Object.keys(this.mimeTypes);\n            for (const type of editorTypes) {\n                if (this.mimeTypes[type].indexOf(mimeType) >= 0) {\n                    return type;\n                }\n            }\n        }\n        return 'unknown';\n    }\n\n    getViewerTypeByExtension(extension: string) {\n        if (extension) {\n            extension = extension.toLowerCase();\n        }\n\n        if (this.isCustomViewerExtension(extension)) {\n            return 'custom';\n        }\n\n        if (this.extensions.image.indexOf(extension) >= 0) {\n            return 'image';\n        }\n\n        if (this.extensions.media.indexOf(extension) >= 0) {\n            return 'media';\n        }\n\n        if (this.extensions.text.indexOf(extension) >= 0) {\n            return 'text';\n        }\n\n        if (this.extensions.pdf.indexOf(extension) >= 0) {\n            return 'pdf';\n        }\n\n        return 'unknown';\n    }\n\n    onBackButtonClick() {\n        if (this.overlayMode) {\n            this.close();\n        } else {\n            const event = new BaseEvent<any>();\n            this.goBack.next(event);\n\n            if (!event.defaultPrevented) {\n\n                const previousUrl = this.previousRouteService.getPreviousUrl();\n\n                if (previousUrl && previousUrl.includes('login') || window.history.length <= 2) {\n                    this.router.navigate([{outlets: {overlay: null, primary: ['home']}}]);\n                } else {\n                    this.location.back();\n                }\n            }\n        }\n    }\n\n    onNavigateBeforeClick() {\n        this.navigateBefore.next();\n    }\n\n    onNavigateNextClick() {\n        this.navigateNext.next();\n    }\n\n    /**\n     * close the viewer\n     */\n    close() {\n        if (this.otherMenu) {\n            this.otherMenu.hidden = false;\n        }\n        this.showViewer = false;\n        this.showViewerChange.emit(this.showViewer);\n    }\n\n    /**\n     * get File name from url\n     *\n     * @param  url - url file\n     */\n    getFilenameFromUrl(url: string): string {\n        const anchor = url.indexOf('#');\n        const query = url.indexOf('?');\n        const end = Math.min(\n            anchor > 0 ? anchor : url.length,\n            query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf('/', end) + 1, end);\n    }\n\n    /**\n     * Get file extension from the string.\n     * Supports the URL formats like:\n     * http://localhost/test.jpg?cache=1000\n     * http://localhost/test.jpg#cache=1000\n     *\n     * @param fileName - file name\n     */\n    getFileExtension(fileName: string): string {\n        if (fileName) {\n            const match = fileName.match(/\\.([^\\./\\?\\#]+)($|\\?|\\#)/);\n            return match ? match[1] : null;\n        }\n        return null;\n    }\n\n    isCustomViewerExtension(extension: string): boolean {\n        const extensions: any = this.externalExtensions || [];\n\n        if (extension && extensions.length > 0) {\n            extension = extension.toLowerCase();\n            return extensions.flat().indexOf(extension) >= 0;\n        }\n\n        return false;\n    }\n\n    /**\n     * Keyboard event listener\n     * @param  event\n     */\n    @HostListener('document:keyup', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n\n        // Esc\n        if (key === 27 && this.overlayMode) { // esc\n            this.close();\n        }\n\n        // Left arrow\n        if (key === 37 && this.canNavigateBefore) {\n            event.preventDefault();\n            this.onNavigateBeforeClick();\n        }\n\n        // Right arrow\n        if (key === 39 && this.canNavigateNext) {\n            event.preventDefault();\n            this.onNavigateNextClick();\n        }\n\n        // Ctrl+F\n        if (key === 70 && event.ctrlKey) {\n            event.preventDefault();\n            this.enterFullScreen();\n        }\n    }\n\n    printContent() {\n        if (this.allowPrint) {\n            const args = new BaseEvent();\n            this.print.next(args);\n\n            if (!args.defaultPrevented) {\n                this.viewUtils.printFileGeneric(this.nodeId, this.mimeType);\n            }\n        }\n    }\n\n    /**\n     * Triggers full screen mode with a main content area displayed.\n     */\n    enterFullScreen(): void {\n        if (this.allowFullScreen) {\n            const container = this.el.nativeElement.querySelector('.adf-viewer__fullscreen-container');\n            if (container) {\n                if (container.requestFullscreen) {\n                    container.requestFullscreen();\n                } else if (container.webkitRequestFullscreen) {\n                    container.webkitRequestFullscreen();\n                } else if (container.mozRequestFullScreen) {\n                    container.mozRequestFullScreen();\n                } else if (container.msRequestFullscreen) {\n                    container.msRequestFullscreen();\n                }\n            }\n        }\n    }\n\n    private async displayNodeRendition(nodeId: string) {\n        try {\n            const rendition = await this.resolveRendition(nodeId, 'pdf');\n            if (rendition) {\n                const renditionId = rendition.entry.id;\n\n                if (renditionId === 'pdf') {\n                    this.viewerType = 'pdf';\n                } else if (renditionId === 'imgpreview') {\n                    this.viewerType = 'image';\n                }\n\n                this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n            }\n        } catch (err) {\n            this.logService.error(err);\n        }\n    }\n\n    private async displaySharedLinkRendition(sharedId: string) {\n        try {\n            const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'pdf');\n            if (rendition.entry.status.toString() === 'CREATED') {\n                this.viewerType = 'pdf';\n                this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'pdf');\n            }\n        } catch (error) {\n            this.logService.error(error);\n            try {\n                const rendition: RenditionEntry = await this.apiService.renditionsApi.getSharedLinkRendition(sharedId, 'imgpreview');\n                if (rendition.entry.status.toString() === 'CREATED') {\n                    this.viewerType = 'image';\n                    this.urlFileContent = this.apiService.contentApi.getSharedLinkRenditionUrl(sharedId, 'imgpreview');\n                }\n            } catch (error) {\n                this.logService.error(error);\n            }\n        }\n    }\n\n    private async resolveRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        renditionId = renditionId.toLowerCase();\n\n        const supportedRendition: RenditionPaging = await this.apiService.renditionsApi.getRenditions(nodeId);\n\n        let rendition: RenditionEntry = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        if (!rendition) {\n            renditionId = 'imgpreview';\n            rendition = supportedRendition.list.entries.find((renditionEntry: RenditionEntry) => renditionEntry.entry.id.toLowerCase() === renditionId);\n        }\n\n        if (rendition) {\n            const status: string = rendition.entry.status.toString();\n\n            if (status === 'NOT_CREATED') {\n                try {\n                    await this.apiService.renditionsApi.createRendition(nodeId, { id: renditionId }).then(() => {\n                        this.viewerType = 'in_creation';\n                    });\n                    rendition = await this.waitRendition(nodeId, renditionId);\n                } catch (err) {\n                    this.logService.error(err);\n                }\n            }\n        }\n\n        return rendition;\n    }\n\n    private async waitRendition(nodeId: string, renditionId: string): Promise<RenditionEntry> {\n        let currentRetry: number = 0;\n        return new Promise<RenditionEntry>((resolve, reject) => {\n            const intervalId = setInterval(() => {\n                currentRetry++;\n                if (this.maxRetries >= currentRetry) {\n                    this.apiService.renditionsApi.getRendition(nodeId, renditionId).then((rendition: RenditionEntry) => {\n                        const status: string = rendition.entry.status.toString();\n                        if (status === 'CREATED') {\n\n                            if (renditionId === 'pdf') {\n                                this.viewerType = 'pdf';\n                            } else if (renditionId === 'imgpreview') {\n                                this.viewerType = 'image';\n                            }\n\n                            this.urlFileContent = this.apiService.contentApi.getRenditionUrl(nodeId, renditionId);\n\n                            clearInterval(intervalId);\n                            return resolve(rendition);\n                        }\n                    }, () => {\n                        this.viewerType = 'error_in_creation';\n                        return reject();\n                    });\n                }\n            }, 1000);\n        });\n    }\n\n    checkExtensions(extensionAllowed) {\n        if (typeof extensionAllowed ===  'string') {\n            return this.extension.toLowerCase() === extensionAllowed.toLowerCase();\n        } else if (extensionAllowed.length > 0) {\n            return extensionAllowed.find((currentExtension) => {\n                return this.extension.toLowerCase() === currentExtension.toLowerCase();\n            });\n        }\n\n    }\n\n    private generateCacheBusterNumber() {\n        this.cacheBusterNumber = Date.now();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnChanges,\n    SimpleChanges,\n    ViewEncapsulation,\n    ElementRef,\n    OnInit,\n    OnDestroy\n} from '@angular/core';\nimport { ContentService } from '../../services/content.service';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-img-viewer',\n    templateUrl: './imgViewer.component.html',\n    styleUrls: ['./imgViewer.component.scss'],\n    host: { 'class': 'adf-image-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ImgViewerComponent implements OnInit, OnChanges, OnDestroy {\n\n    @Input()\n    showToolbar = true;\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    rotate: number = 0;\n    scaleX: number = 1.0;\n    scaleY: number = 1.0;\n    offsetX: number = 0;\n    offsetY: number = 0;\n    isDragged: boolean = false;\n\n    private drag = { x: 0, y: 0 };\n    private delta = { x: 0, y: 0 };\n\n    get transform(): string {\n        return `scale(${this.scaleX}, ${this.scaleY}) rotate(${this.rotate}deg) translate(${this.offsetX}px, ${this.offsetY}px)`;\n    }\n\n    get currentScaleText(): string {\n        return Math.round(this.scaleX * 100) + '%';\n    }\n\n    private element: HTMLElement;\n\n    constructor(\n        private appConfigService: AppConfigService,\n        private contentService: ContentService,\n        private el: ElementRef) {\n        this.initializeScaling();\n    }\n\n    initializeScaling() {\n        const scaling = this.appConfigService.get<number>('adf-viewer.image-viewer-scaling', undefined) / 100;\n        if (scaling) {\n            this.scaleX = scaling;\n            this.scaleY = scaling;\n        }\n    }\n\n    ngOnInit() {\n        this.element = <HTMLElement> this.el.nativeElement.querySelector('#viewer-image');\n\n        if (this.element) {\n            this.element.addEventListener('mousedown', this.onMouseDown.bind(this));\n            this.element.addEventListener('mouseup', this.onMouseUp.bind(this));\n            this.element.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n            this.element.addEventListener('mouseout', this.onMouseOut.bind(this));\n            this.element.addEventListener('mousemove', this.onMouseMove.bind(this));\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.removeEventListener('mousedown', this.onMouseDown);\n            this.element.removeEventListener('mouseup', this.onMouseUp);\n            this.element.removeEventListener('mouseleave', this.onMouseLeave);\n            this.element.removeEventListener('mouseout', this.onMouseOut);\n            this.element.removeEventListener('mousemove', this.onMouseMove);\n        }\n    }\n\n    onMouseDown(event: MouseEvent) {\n        event.preventDefault();\n        this.isDragged = true;\n        this.drag = { x: event.pageX, y: event.pageY };\n    }\n\n    onMouseMove(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n\n            this.delta.x = event.pageX - this.drag.x;\n            this.delta.y = event.pageY - this.drag.y;\n\n            this.drag.x = event.pageX;\n            this.drag.y = event.pageY;\n\n            const scaleX = (this.scaleX !== 0 ? this.scaleX : 1.0);\n            const scaleY = (this.scaleY !== 0 ? this.scaleY : 1.0);\n\n            this.offsetX += (this.delta.x / scaleX);\n            this.offsetY += (this.delta.y / scaleY);\n        }\n    }\n\n    onMouseUp(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseLeave(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    onMouseOut(event: MouseEvent) {\n        if (this.isDragged) {\n            event.preventDefault();\n            this.isDragged = false;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    zoomIn() {\n        const ratio = +((this.scaleX + 0.2).toFixed(1));\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    zoomOut() {\n        let ratio = +((this.scaleX - 0.2).toFixed(1));\n        if (ratio < 0.2) {\n            ratio = 0.2;\n        }\n        this.scaleX = this.scaleY = ratio;\n    }\n\n    rotateLeft() {\n        const angle = this.rotate - 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    rotateRight() {\n        const angle = this.rotate + 90;\n        this.rotate = Math.abs(angle) < 360 ? angle : 0;\n    }\n\n    reset() {\n        this.rotate = 0;\n        this.scaleX = 1.0;\n        this.scaleY = 1.0;\n        this.offsetX = 0;\n        this.offsetY = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ContentService } from '../../services/content.service';\n\n@Component({\n    selector: 'adf-media-player',\n    templateUrl: './mediaPlayer.component.html',\n    styleUrls: ['./mediaPlayer.component.scss'],\n    host: { 'class': 'adf-media-player' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class MediaPlayerComponent implements OnChanges {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    mimeType: string;\n\n    @Input()\n    nameFile: string;\n\n    constructor(private contentService: ContentService ) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            this.urlFile = this.contentService.createTrustedUrl(this.blobFile);\n            return;\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n}\n","/* tslint:disable:adf-license-banner  */\n\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n/**\n *\n * RenderingQueueServices rendering of the views for pages and thumbnails.\n *\n */\n@Injectable()\nexport class RenderingQueueServices {\n\n    renderingStates = {\n        INITIAL: 0,\n        RUNNING: 1,\n        PAUSED: 2,\n        FINISHED: 3\n    };\n\n    CLEANUP_TIMEOUT: number = 30000;\n\n    pdfViewer: any = null;\n    pdfThumbnailViewer: any = null;\n    onIdle: any = null;\n\n    highestPriorityPage: any = null;\n    idleTimeout: any = null;\n    printing: any = false;\n    isThumbnailViewEnabled: any = false;\n\n    /**\n     * @param pdfViewer\n     */\n    setViewer(pdfViewer) {\n        this.pdfViewer = pdfViewer;\n    }\n\n    /**\n     * @param pdfThumbnailViewer\n     */\n    setThumbnailViewer(pdfThumbnailViewer) {\n        this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n\n    /**\n     * @param  view\n     */\n    isHighestPriority(view: any): boolean {\n        return this.highestPriorityPage === view.renderingId;\n    }\n\n    renderHighestPriority(currentlyVisiblePages) {\n        if (this.idleTimeout) {\n            clearTimeout(this.idleTimeout);\n            this.idleTimeout = null;\n        }\n\n        // Pages have a higher priority than thumbnails, so check them first.\n        if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n            return;\n        }\n        // No pages needed rendering so check thumbnails.\n        if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n            if (this.pdfThumbnailViewer.forceRendering()) {\n                return;\n            }\n        }\n\n        if (this.printing) {\n            // If printing is currently ongoing do not reschedule cleanup.\n            return;\n        }\n\n        if (this.onIdle) {\n            this.idleTimeout = setTimeout(this.onIdle.bind(this), this.CLEANUP_TIMEOUT);\n        }\n    }\n\n    getHighestPriority(visible, views, scrolledDown) {\n        // The state has changed figure out which page has the highest priority to\n        // render next (if any).\n        // Priority:\n        // 1 visible pages\n        // 2 if last scrolled down page after the visible pages\n        // 2 if last scrolled up page before the visible pages\n        const visibleViews = visible.views;\n\n        const numVisible = visibleViews.length;\n        if (numVisible === 0) {\n            return false;\n        }\n        for (let i = 0; i < numVisible; ++i) {\n            const view = visibleViews[i].view;\n            if (!this.isViewFinished(view)) {\n                return view;\n            }\n        }\n\n        // All the visible views have rendered, try to render next/previous pages.\n        if (scrolledDown) {\n            const nextPageIndex = visible.last.id;\n            // ID's start at 1 so no need to add 1.\n            if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n                return views[nextPageIndex];\n            }\n        } else {\n            const previousPageIndex = visible.first.id - 2;\n            if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n                return views[previousPageIndex];\n            }\n        }\n        // Everything that needs to be rendered has been.\n        return null;\n    }\n\n    /**\n     * @param view\n     */\n    isViewFinished(view): boolean {\n        return view.renderingState === this.renderingStates.FINISHED;\n    }\n\n    /**\n     * Render a page or thumbnail view. This calls the appropriate function\n     * based on the views state. If the view is already rendered it will return\n     * false.\n     * @param view\n     */\n    renderView(view: any) {\n        const state = view.renderingState;\n        switch (state) {\n            case this.renderingStates.FINISHED:\n                return false;\n            case this.renderingStates.PAUSED:\n                this.highestPriorityPage = view.renderingId;\n                view.resume();\n                break;\n            case this.renderingStates.RUNNING:\n                this.highestPriorityPage = view.renderingId;\n                break;\n            case this.renderingStates.INITIAL:\n                this.highestPriorityPage = view.renderingId;\n                const continueRendering = function () {\n                    this.renderHighestPriority();\n                }.bind(this);\n                view.draw().then(continueRendering, continueRendering);\n                break;\n            default:\n                break;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormControl, Validators } from '@angular/forms';\n\ndeclare const pdfjsLib: any;\n\n@Component({\n    selector: 'adf-pdf-viewer-password-dialog',\n    templateUrl: './pdfViewer-password-dialog.html',\n    styleUrls: [ './pdfViewer-password-dialog.scss' ]\n})\nexport class PdfPasswordDialogComponent implements OnInit {\n    passwordFormControl: FormControl;\n\n    constructor(\n        private dialogRef: MatDialogRef<PdfPasswordDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {\n        this.passwordFormControl = new FormControl('', [Validators.required]);\n    }\n\n    isError(): boolean {\n        return this.data.reason === pdfjsLib.PasswordResponses.INCORRECT_PASSWORD;\n    }\n\n    isValid(): boolean {\n        return !this.passwordFormControl.hasError('required');\n    }\n\n    submit(): void {\n        this.dialogRef.close(this.passwordFormControl.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    TemplateRef,\n    HostListener,\n    Output,\n    Input,\n    OnChanges,\n    OnDestroy,\n    ViewEncapsulation,\n    EventEmitter,\n    SimpleChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { LogService } from '../../services/log.service';\nimport { RenderingQueueServices } from '../services/rendering-queue.services';\nimport { PdfPasswordDialogComponent } from './pdfViewer-password-dialog';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\ndeclare const pdfjsLib: any;\ndeclare const pdfjsViewer: any;\n\nexport interface PdfDocumentOptions {\n    url?: string;\n    data?: any;\n    withCredentials?: boolean;\n}\n\n@Component({\n    selector: 'adf-pdf-viewer',\n    templateUrl: './pdfViewer.component.html',\n    styleUrls: [\n        './pdfViewer.component.scss',\n        './pdfViewerHost.component.scss'\n    ],\n    providers: [RenderingQueueServices],\n    host: { 'class': 'adf-pdf-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfViewerComponent implements OnChanges, OnDestroy {\n\n    @Input()\n    urlFile: string;\n\n    @Input()\n    blobFile: Blob;\n\n    @Input()\n    nameFile: string;\n\n    @Input()\n    showToolbar: boolean = true;\n\n    @Input()\n    allowThumbnails = false;\n\n    @Input()\n    thumbnailsTemplate: TemplateRef<any> = null;\n\n    @Output()\n    rendered = new EventEmitter<any>();\n\n    @Output()\n    error = new EventEmitter<any>();\n\n    loadingTask: any;\n    currentPdfDocument: any;\n    page: number;\n    displayPage: number;\n    totalPages: number;\n    loadingPercent: number;\n    pdfViewer: any;\n    documentContainer: any;\n    currentScaleMode: string = 'auto';\n    currentScale: number = 1;\n\n    MAX_AUTO_SCALE: number = 1.25;\n    DEFAULT_SCALE_DELTA: number = 1.1;\n    MIN_SCALE: number = 0.25;\n    MAX_SCALE: number = 10.0;\n\n    isPanelDisabled = true;\n    showThumbnails: boolean = false;\n    pdfThumbnailsContext: { viewer: any } = { viewer: null };\n    randomPdfId: string;\n\n    get currentScaleText(): string {\n        return Math.round(this.currentScale * 100) + '%';\n    }\n\n    constructor(\n        private dialog: MatDialog,\n        private renderingQueueServices: RenderingQueueServices,\n        private logService: LogService,\n        private appConfigService: AppConfigService) {\n        // needed to preserve \"this\" context\n        this.onPageChange = this.onPageChange.bind(this);\n        this.onPagesLoaded = this.onPagesLoaded.bind(this);\n        this.onPageRendered = this.onPageRendered.bind(this);\n        this.randomPdfId = this.generateUuid();\n        this.currentScale = this.getUserScaling();\n    }\n\n    getUserScaling(): number {\n        const scaleConfig = this.appConfigService.get<number>('adf-viewer.pdf-viewer-scaling', undefined) / 100;\n        if (scaleConfig) {\n            return this.checkLimits(scaleConfig);\n        } else {\n            return 1;\n        }\n    }\n\n    checkLimits(scaleConfig: number): number {\n        if (scaleConfig > this.MAX_SCALE) {\n            return this.MAX_SCALE;\n        } else if (scaleConfig < this.MIN_SCALE) {\n            return this.MIN_SCALE;\n        } else {\n            return scaleConfig;\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const blobFile = changes['blobFile'];\n\n        if (blobFile && blobFile.currentValue) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                const options = {\n                    data: reader.result,\n                    withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n                };\n                this.executePdf(options);\n            };\n            reader.readAsArrayBuffer(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            const options = {\n                url: urlFile.currentValue,\n                withCredentials: this.appConfigService.get<boolean>('auth.withCredentials', undefined)\n            };\n            this.executePdf(options);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    executePdf(pdfOptions: PdfDocumentOptions) {\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'pdf.worker.min.js';\n\n        this.loadingTask = pdfjsLib.getDocument(pdfOptions);\n\n        this.loadingTask.onPassword = (callback, reason) => {\n            this.onPdfPassword(callback, reason);\n        };\n\n        this.loadingTask.onProgress = (progressData) => {\n            const level = progressData.loaded / progressData.total;\n            this.loadingPercent = Math.round(level * 100);\n        };\n\n        this.loadingTask.then((pdfDocument) => {\n            this.currentPdfDocument = pdfDocument;\n            this.totalPages = pdfDocument.numPages;\n            this.page = 1;\n            this.displayPage = 1;\n            this.initPDFViewer(this.currentPdfDocument);\n\n            this.currentPdfDocument.getPage(1).then(() => {\n                this.scalePage('auto');\n            }, (error) => {\n                this.error.emit();\n            });\n\n        }, (error) => {\n            this.error.emit();\n        });\n    }\n\n    initPDFViewer(pdfDocument: any) {\n        const viewer: any = document.getElementById(`${this.randomPdfId}-viewer-viewerPdf`);\n        const container = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (viewer && container) {\n            this.documentContainer = container;\n\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.addEventListener('textlayerrendered', this.onPageRendered, true);\n\n            this.pdfViewer = new pdfjsViewer.PDFViewer({\n                container: this.documentContainer,\n                viewer: viewer,\n                renderingQueue: this.renderingQueueServices\n            });\n\n            this.renderingQueueServices.setViewer(this.pdfViewer);\n            this.pdfViewer.setDocument(pdfDocument);\n            this.pdfThumbnailsContext.viewer = this.pdfViewer;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.documentContainer) {\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagechange', this.onPageChange, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('pagesloaded', this.onPagesLoaded, true);\n            // cspell: disable-next\n            this.documentContainer.removeEventListener('textlayerrendered', this.onPageRendered, true);\n        }\n\n        if (this.loadingTask) {\n            try {\n                this.loadingTask.destroy();\n            } catch {\n            }\n\n            this.loadingTask = null;\n        }\n    }\n\n    toggleThumbnails() {\n        this.showThumbnails = !this.showThumbnails;\n    }\n\n    /**\n     * Method to scale the page current support implementation\n     *\n     * @param scaleMode - new scale mode\n     */\n    scalePage(scaleMode) {\n        this.currentScaleMode = scaleMode;\n\n        const viewerContainer = document.getElementById(`${this.randomPdfId}-viewer-main-container`);\n        const documentContainer = document.getElementById(`${this.randomPdfId}-viewer-pdf-viewer`);\n\n        if (this.pdfViewer && documentContainer) {\n\n            let widthContainer;\n            let heightContainer;\n\n            if (viewerContainer && viewerContainer.clientWidth <= documentContainer.clientWidth) {\n                widthContainer = viewerContainer.clientWidth;\n                heightContainer = viewerContainer.clientHeight;\n            } else {\n                widthContainer = documentContainer.clientWidth;\n                heightContainer = documentContainer.clientHeight;\n            }\n\n            const currentPage = this.pdfViewer._pages[this.pdfViewer._currentPageNumber - 1];\n\n            const padding = 20;\n            const pageWidthScale = (widthContainer - padding) / currentPage.width * currentPage.scale;\n            const pageHeightScale = (heightContainer - padding) / currentPage.width * currentPage.scale;\n\n            let scale = this.getUserScaling();\n            if (!scale) {\n                switch (this.currentScaleMode) {\n                    case 'page-actual':\n                        scale = 1;\n                        break;\n                    case 'page-width':\n                        scale = pageWidthScale;\n                        break;\n                    case 'page-height':\n                        scale = pageHeightScale;\n                        break;\n                    case 'page-fit':\n                        scale = Math.min(pageWidthScale, pageHeightScale);\n                        break;\n                    case 'auto':\n                        let horizontalScale;\n                        if (this.isLandscape) {\n                            horizontalScale = Math.min(pageHeightScale, pageWidthScale);\n                        } else {\n                            horizontalScale = pageWidthScale;\n                        }\n                        horizontalScale = Math.round(horizontalScale);\n                        scale = Math.min(this.MAX_AUTO_SCALE, horizontalScale);\n\n                        break;\n                    default:\n                        this.logService.error('pdfViewSetScale: \\'' + scaleMode + '\\' is an unknown zoom value.');\n                        return;\n                }\n\n                this.setScaleUpdatePages(scale);\n            } else {\n                this.currentScale = 0;\n                this.setScaleUpdatePages(scale);\n            }\n        }\n    }\n\n    /**\n     * Update all the pages with the newScale scale\n     *\n     * @param newScale - new scale page\n     */\n    setScaleUpdatePages(newScale: number) {\n        if (this.pdfViewer) {\n            if (!this.isSameScale(this.currentScale, newScale)) {\n                this.currentScale = newScale;\n\n                this.pdfViewer._pages.forEach(function (currentPage) {\n                    currentPage.update(newScale);\n                });\n            }\n\n            this.pdfViewer.update();\n        }\n    }\n\n    /**\n     * Check if the request scale of the page is the same for avoid useless re-rendering\n     *\n     * @param oldScale - old scale page\n     * @param newScale - new scale page\n     *\n     */\n    isSameScale(oldScale: number, newScale: number): boolean {\n        return (newScale === oldScale);\n    }\n\n    /**\n     * Check if is a land scape view\n     *\n     * @param width\n     * @param height\n     */\n    isLandscape(width: number, height: number): boolean {\n        return (width > height);\n    }\n\n    /**\n     * Method triggered when the page is resized\n     */\n    onResize() {\n        this.scalePage(this.currentScaleMode);\n    }\n\n    /**\n     * toggle the fit page pdf\n     */\n    pageFit() {\n        if (this.currentScaleMode !== 'page-fit') {\n            this.scalePage('page-fit');\n        } else {\n            this.scalePage('auto');\n        }\n    }\n\n    /**\n     * zoom in page pdf\n     *\n     * @param ticks\n     */\n    zoomIn(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale * this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.ceil(newScale * 10) / 10;\n            newScale = Math.min(this.MAX_SCALE, newScale);\n        } while (--ticks > 0 && newScale < this.MAX_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * zoom out page pdf\n     *\n     * @param ticks\n     */\n    zoomOut(ticks?: number) {\n        let newScale: any = this.currentScale;\n        do {\n            newScale = (newScale / this.DEFAULT_SCALE_DELTA).toFixed(2);\n            newScale = Math.floor(newScale * 10) / 10;\n            newScale = Math.max(this.MIN_SCALE, newScale);\n        } while (--ticks > 0 && newScale > this.MIN_SCALE);\n        this.currentScaleMode = 'auto';\n        this.setScaleUpdatePages(newScale);\n    }\n\n    /**\n     * load the previous page\n     */\n    previousPage() {\n        if (this.pdfViewer && this.page > 1) {\n            this.page--;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the next page\n     */\n    nextPage() {\n        if (this.pdfViewer && this.page < this.totalPages) {\n            this.page++;\n            this.displayPage = this.page;\n\n            this.pdfViewer.currentPageNumber = this.page;\n        }\n    }\n\n    /**\n     * load the page in input\n     *\n     * @param page to load\n     */\n    inputPage(page: string) {\n        const pageInput = parseInt(page, 10);\n\n        if (!isNaN(pageInput) && pageInput > 0 && pageInput <= this.totalPages) {\n            this.page = pageInput;\n            this.displayPage = this.page;\n            this.pdfViewer.currentPageNumber = this.page;\n        } else {\n            this.displayPage = this.page;\n        }\n    }\n\n    /**\n     * Page Change Event\n     *\n     * @param event\n     */\n    onPageChange(event) {\n        this.page = event.pageNumber;\n        this.displayPage = event.pageNumber;\n    }\n\n    onPdfPassword(callback, reason) {\n        this.dialog\n            .open(PdfPasswordDialogComponent, {\n                width: '400px',\n                disableClose: true,\n                data: { reason }\n            })\n            .afterClosed().subscribe((password) => {\n            if (password) {\n                callback(password);\n            }\n        });\n    }\n\n    /**\n     * Page Rendered Event\n     */\n    onPageRendered() {\n        this.rendered.emit();\n    }\n\n    /**\n     * Pages Loaded Event\n     *\n     * @param event\n     */\n    onPagesLoaded(event) {\n        this.isPanelDisabled = false;\n    }\n\n    /**\n     * Keyboard Event Listener\n     * @param KeyboardEvent event\n     */\n    @HostListener('document:keydown', ['$event'])\n    handleKeyboardEvent(event: KeyboardEvent) {\n        const key = event.keyCode;\n        if (key === 39) { // right arrow\n            this.nextPage();\n        } else if (key === 37) {// left arrow\n            this.previousPage();\n        }\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, Input, ContentChild, TemplateRef, HostListener, OnInit,\n    AfterViewInit, ElementRef, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\n@Component({\n    selector: 'adf-pdf-thumbnails',\n    templateUrl: './pdfViewer-thumbnails.component.html',\n    styleUrls: ['./pdfViewer-thumbnails.component.scss'],\n    host: { 'class': 'adf-pdf-thumbnails' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbListComponent implements OnInit, AfterViewInit, OnDestroy {\n    @Input() pdfViewer: any;\n\n    virtualHeight: number = 0;\n    translateY: number = 0;\n    renderItems = [];\n    width: number = 91;\n    currentHeight: number = 0;\n\n    private items = [];\n    private margin: number = 15;\n    private itemHeight: number = 114 + this.margin;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.calculateItems();\n    }\n\n    constructor(private element: ElementRef) {\n        this.calculateItems = this.calculateItems.bind(this);\n        this.onPageChange = this.onPageChange.bind(this);\n    }\n\n    ngOnInit() {\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.on('pagechange', this.onPageChange);\n        this.element.nativeElement.addEventListener('scroll', this.calculateItems, true);\n\n        this.setHeight(this.pdfViewer.currentPageNumber);\n        this.items = this.getPages();\n        this.calculateItems();\n\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.scrollInto(this.pdfViewer.currentPageNumber), 0);\n    }\n\n    ngOnDestroy() {\n        this.element.nativeElement.removeEventListener('scroll', this.calculateItems, true);\n        /* cspell:disable-next-line */\n        this.pdfViewer.eventBus.off('pagechange', this.onPageChange);\n    }\n\n    trackByFn(index: number, item: any): number {\n        return item.id;\n    }\n\n    isSelected(pageNum: number) {\n        return this.pdfViewer.currentPageNumber === pageNum;\n    }\n\n    goTo(pageNum: number) {\n        this.pdfViewer.currentPageNumber = pageNum;\n    }\n\n    scrollInto(item: any) {\n        if (this.items.length) {\n            const index: number = this.items.findIndex((element) => element.id === item);\n\n            if (index < 0 || index >= this.items.length) {\n                return;\n            }\n\n            this.element.nativeElement.scrollTop = index * this.itemHeight;\n\n            this.calculateItems();\n        }\n    }\n\n    getPages() {\n        return this.pdfViewer._pages.map((page) => ({\n            id: page.id,\n            getWidth: () => { return this.width; },\n            getHeight: () => { return this.currentHeight; },\n            getPage: () => this.pdfViewer.pdfDocument.getPage(page.id)\n        }));\n    }\n\n    private setHeight(id): number {\n        const height = this.pdfViewer.pdfDocument.getPage(id).then((page) => this.calculateHeight(page));\n        return height;\n    }\n\n    private calculateHeight(page) {\n        const viewport = page.getViewport(1);\n        const pageRatio = viewport.width / viewport.height;\n        const height = Math.floor(this.width / pageRatio);\n\n        this.currentHeight = height;\n        this.itemHeight = height + this.margin;\n    }\n\n    private calculateItems() {\n        const { element, viewPort, itemsInView } = this.getContainerSetup();\n\n        const indexByScrollTop = element.scrollTop / viewPort * this.items.length / itemsInView;\n\n        const start = Math.floor(indexByScrollTop);\n\n        const end = Math.ceil(indexByScrollTop) + (itemsInView);\n\n        this.translateY = this.itemHeight * Math.ceil(start);\n        this.virtualHeight = this.itemHeight * this.items.length  - this.translateY;\n        this.renderItems = this.items.slice(start, end);\n    }\n\n    private getContainerSetup() {\n        const element = this.element.nativeElement;\n        const elementRec = element.getBoundingClientRect();\n        const itemsInView = Math.ceil(elementRec.height / this.itemHeight);\n        const viewPort = (this.itemHeight * this.items.length) / itemsInView;\n\n        return {\n            element,\n            viewPort,\n            itemsInView\n        };\n    }\n\n    private onPageChange(event) {\n        const index = this.renderItems.findIndex((element) => element.id === event.pageNumber);\n\n        if (index < 0) {\n            this.scrollInto(event.pageNumber);\n        }\n\n        if (index >= this.renderItems.length - 1) {\n            this.element.nativeElement.scrollTop += this.itemHeight;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-pdf-thumb',\n    templateUrl: './pdfViewer-thumb.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class PdfThumbComponent implements OnInit {\n\n    @Input()\n    page: any = null;\n\n    image$: Promise<string>;\n\n    constructor(private sanitizer: DomSanitizer) {}\n\n    ngOnInit() {\n        this.image$ = this.page.getPage().then((page) => this.getThumb(page));\n    }\n\n    private getThumb(page): Promise<string> {\n        const viewport = page.getViewport(1);\n\n        const pageRatio = viewport.width / viewport.height;\n        const canvas = this.getCanvas(pageRatio);\n        const scale = Math.min((canvas.height / viewport.height), (canvas.width / viewport.width));\n\n        return page.render({\n            canvasContext: canvas.getContext('2d'),\n            viewport: page.getViewport(scale)\n        })\n        .then(() => {\n            const imageSource = canvas.toDataURL();\n            return this.sanitizer.bypassSecurityTrustUrl(imageSource);\n        });\n    }\n\n    private getCanvas(pageRatio): HTMLCanvasElement {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.page.getWidth();\n        canvas.height = this.page.getHeight();\n        return canvas;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnChanges, ViewEncapsulation } from '@angular/core';\nimport { SimpleChanges } from '@angular/core';\nimport { AppConfigService } from './../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-txt-viewer',\n    templateUrl: './txtViewer.component.html',\n    styleUrls: ['./txtViewer.component.scss'],\n    host: { 'class': 'adf-txt-viewer' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class TxtViewerComponent implements OnChanges {\n\n    @Input()\n    urlFile: any;\n\n    @Input()\n    blobFile: Blob;\n\n    content: string | ArrayBuffer;\n\n    constructor(private http: HttpClient, private appConfigService: AppConfigService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): Promise<any> {\n\n        const blobFile = changes['blobFile'];\n        if (blobFile && blobFile.currentValue) {\n            return this.readBlob(blobFile.currentValue);\n        }\n\n        const urlFile = changes['urlFile'];\n        if (urlFile && urlFile.currentValue) {\n            return this.getUrlContent(urlFile.currentValue);\n        }\n\n        if (!this.urlFile && !this.blobFile) {\n            throw new Error('Attribute urlFile or blobFile is required');\n        }\n    }\n\n    private getUrlContent(url: string): Promise<any> {\n        const withCredentialsMode = this.appConfigService.get<boolean>('auth.withCredentials', false);\n\n        return new Promise((resolve, reject) => {\n            this.http.get(url, { responseType: 'text', withCredentials: withCredentialsMode }).subscribe((res) => {\n                this.content = res;\n                resolve();\n            }, (event) => {\n                reject(event);\n            });\n        });\n    }\n\n    private readBlob(blob: Blob): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                this.content = reader.result;\n                resolve();\n            };\n\n            reader.onerror = (error: any) => {\n                reject(error);\n            };\n\n            reader.readAsText(blob);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-unknown-format',\n    templateUrl: 'unknown-format.component.html',\n    styleUrls: ['unknown-format.component.scss']\n})\nexport class UnknownFormatComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-viewer-toolbar-actions',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-viewer-toolbar-actions' },\n    template: `<ng-content></ng-content>`\n})\nexport class ViewerToolbarActionsComponent {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterContentInit, ContentChild, Directive, Input, TemplateRef } from '@angular/core';\nimport { ViewerComponent } from '../components/viewer.component';\n\n@Directive({\n    selector: 'adf-viewer-extension'\n})\nexport class ViewerExtensionDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    urlFileContent: string;\n\n    @Input()\n    extension: string;\n\n    @Input()\n    supportedExtensions: string[];\n\n    templateModel: any;\n\n    constructor(private viewerComponent: ViewerComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.templateModel = { template: this.template, isVisible: false };\n\n        this.viewerComponent.extensionTemplates.push(this.templateModel);\n\n        this.viewerComponent.extensionChange.subscribe((fileExtension) => {\n            this.templateModel.isVisible = this.isVisible(fileExtension);\n        });\n\n        if (this.supportedExtensions instanceof Array) {\n            this.supportedExtensions.forEach((extension) => {\n                this.viewerComponent.externalExtensions.push(extension);\n            });\n        }\n    }\n\n    /**\n     * check if the current extension in the viewer is compatible with this extension checking against supportedExtensions\n     */\n    isVisible(fileExtension): boolean {\n        let supportedExtension: string;\n\n        if (this.supportedExtensions && (this.supportedExtensions instanceof Array)) {\n            supportedExtension = this.supportedExtensions.find((extension) => {\n                return extension.toLowerCase() === fileExtension;\n\n            });\n        }\n\n        return !!supportedExtension;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToolbarDividerComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    templateUrl: './toolbar.component.html',\n    styleUrls: ['./toolbar.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    /** Toolbar title. */\n    @Input()\n    title: string = '';\n\n    /** Toolbar color. Can be changed to empty value (default), `primary`, `accent` or `warn`. */\n    @Input()\n    color: string;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\n\nimport { MaterialModule } from '../material.module';\nimport { ToolbarModule } from '../toolbar/toolbar.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { ImgViewerComponent } from './components/imgViewer.component';\nimport { MediaPlayerComponent } from './components/mediaPlayer.component';\nimport { PdfViewerComponent } from './components/pdfViewer.component';\nimport { PdfPasswordDialogComponent } from './components/pdfViewer-password-dialog';\nimport { PdfThumbComponent } from './components/pdfViewer-thumb.component';\nimport { PdfThumbListComponent } from './components/pdfViewer-thumbnails.component';\nimport { TxtViewerComponent } from './components/txtViewer.component';\nimport { UnknownFormatComponent } from './components/unknown-format/unknown-format.component';\nimport { ViewerMoreActionsComponent } from './components/viewer-more-actions.component';\nimport { ViewerOpenWithComponent } from './components/viewer-open-with.component';\nimport { ViewerSidebarComponent } from './components/viewer-sidebar.component';\nimport { ViewerToolbarComponent } from './components/viewer-toolbar.component';\nimport { ViewerComponent } from './components/viewer.component';\nimport { ViewerExtensionDirective } from './directives/viewer-extension.directive';\nimport { ViewerToolbarActionsComponent } from './components/viewer-toolbar-actions.component';\nimport { DirectiveModule } from '../directives/directive.module';\n\n@NgModule({\n    imports: [\n        ExtensionsModule,\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        ToolbarModule,\n        PipeModule,\n        FlexLayoutModule,\n        DirectiveModule\n    ],\n    declarations: [\n        PdfPasswordDialogComponent,\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ],\n    entryComponents: [\n        PdfPasswordDialogComponent\n    ],\n    exports: [\n        ViewerComponent,\n        ImgViewerComponent,\n        TxtViewerComponent,\n        MediaPlayerComponent,\n        PdfViewerComponent,\n        PdfPasswordDialogComponent,\n        PdfThumbComponent,\n        PdfThumbListComponent,\n        ViewerExtensionDirective,\n        UnknownFormatComponent,\n        ViewerToolbarComponent,\n        ViewerSidebarComponent,\n        ViewerOpenWithComponent,\n        ViewerMoreActionsComponent,\n        ViewerToolbarActionsComponent\n    ]\n})\nexport class ViewerModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { UserRepresentation } from '@alfresco/js-api';\n\nexport class BpmUserModel implements UserRepresentation {\n    apps: any;\n    capabilities: string[];\n    company: string;\n    created: Date;\n    email: string;\n    externalId: string;\n    firstName: string;\n    lastName: string;\n    fullname: string;\n    groups: any;\n    id: number;\n    lastUpdate: Date;\n    latestSyncTimeStamp: Date;\n    password: string;\n    pictureId: number;\n    status: string;\n    tenantId: number;\n    tenantName: string;\n    tenantPictureId: number;\n    type: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.apps = input.apps;\n            this.capabilities = input.capabilities;\n            this.company = input.company;\n            this.created = input.created;\n            this.email = input.email;\n            this.externalId = input.externalId;\n            this.firstName = input.firstName;\n            this.lastName = input.lastName;\n            this.fullname = input.fullname;\n            this.groups = input.groups;\n            this.id = input.id;\n            this.lastUpdate = input.lastUpdate;\n            this.latestSyncTimeStamp = input.latestSyncTimeStamp;\n            this.password = input.password;\n            this.pictureId = input.pictureId;\n            this.status = input.status;\n            this.tenantId = input.tenantId;\n            this.tenantName = input.tenantName;\n            this.tenantPictureId = input.tenantPictureId;\n            this.type = input.type;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { BpmUserModel } from '../models/bpm-user.model';\nimport { map, catchError } from 'rxjs/operators';\nimport { UserRepresentation } from '@alfresco/js-api';\n\n/**\n *\n * BPMUserService retrieve all the information of an Ecm user.\n *\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class BpmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about the current user.\n     * @returns User information object\n     */\n    getCurrentUserInfo(): Observable<BpmUserModel> {\n        return from(this.apiService.getInstance().activiti.profileApi.getProfile())\n            .pipe(\n                map((userRepresentation: UserRepresentation) => {\n                    return new BpmUserModel(userRepresentation);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the current user's profile image as a URL.\n     * @returns URL string\n     */\n    getCurrentUserProfileImage(): string {\n        return this.apiService.getInstance().activiti.profileApi.getProfilePictureUrl();\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        // in a real world app, we may send the error to some remote logging infrastructure\n        // instead of just logging it to the console\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Person } from '@alfresco/js-api';\nimport { EcmCompanyModel } from '../../models/ecm-company.model';\n\nexport class EcmUserModel implements Person {\n    id: string;\n    firstName: string;\n    lastName: string;\n    description: string;\n    avatarId: string;\n    email: string;\n    skypeId: string;\n    googleId: string;\n    instantMessageId: string;\n    jobTitle: string;\n    location: string;\n    company: EcmCompanyModel;\n    mobile: string;\n    telephone: string;\n    statusUpdatedAt: Date;\n    userStatus: string;\n    enabled: boolean;\n    emailNotificationsEnabled: boolean;\n\n    constructor(obj?: any) {\n        this.id = obj && obj.id || null;\n        this.firstName = obj && obj.firstName;\n        this.lastName = obj && obj.lastName;\n        this.description = obj && obj.description || null;\n        this.avatarId = obj && obj.avatarId || null;\n        this.email = obj && obj.email || null;\n        this.skypeId = obj && obj.skypeId;\n        this.googleId = obj && obj.googleId;\n        this.instantMessageId = obj && obj.instantMessageId;\n        this.jobTitle = obj && obj.jobTitle || null;\n        this.location = obj && obj.location || null;\n        this.company = obj && obj.company;\n        this.mobile = obj && obj.mobile;\n        this.telephone = obj && obj.telephone;\n        this.statusUpdatedAt = obj && obj.statusUpdatedAt;\n        this.userStatus = obj && obj.userStatus;\n        this.enabled = obj && obj.enabled;\n        this.emailNotificationsEnabled = obj && obj.emailNotificationsEnabled;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ContentService } from '../../services/content.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { EcmUserModel } from '../models/ecm-user.model';\nimport { PersonEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmUserService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private contentService: ContentService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param userName Target username\n     * @returns User information\n     */\n    getUserInfo(userName: string): Observable<EcmUserModel> {\n        return from(this.apiService.getInstance().core.peopleApi.getPerson(userName))\n            .pipe(\n                map((personEntry: PersonEntry) => {\n                    return new EcmUserModel(personEntry.entry);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets information about the user who is currently logged-in.\n     * @returns User information as for getUserInfo\n     */\n    getCurrentUserInfo() {\n        return this.getUserInfo('-me-');\n    }\n\n    /**\n     * Returns a profile image as a URL.\n     * @param avatarId Target avatar\n     * @returns Image URL\n     */\n    getUserProfileImage(avatarId: string) {\n        if (avatarId) {\n            const nodeObj = {entry: {id: avatarId}};\n            return this.contentService.getContentUrl(nodeObj);\n        }\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class IdentityUserModel {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    username: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.email = obj.email || null;\n            this.username = obj.username || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtHelperService {\n\n    constructor() {}\n\n    /**\n     * Decodes a JSON web token into a JS object.\n     * @param token Token in encoded form\n     * @returns Decoded token data object\n     */\n    decodeToken(token): Object {\n        const parts = token.split('.');\n\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = this.urlBase64Decode(parts[1]);\n        if (!decoded) {\n            throw new Error('Cannot decode the token');\n        }\n\n        return JSON.parse(decoded);\n    }\n\n    private urlBase64Decode(token): string {\n        let output = token.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0: {\n                break;\n            }\n            case 2: {\n                output += '==';\n                break;\n            }\n            case 3: {\n                output += '=';\n                break;\n            }\n            default: {\n                throw new Error('Illegal base64url string!');\n            }\n        }\n        return decodeURIComponent(escape(window.atob(output)));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { IdentityUserModel } from '../models/identity-user.model';\nimport { JwtHelperService } from '../../services/jwt-helper.service';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { IdentityRoleModel } from '../models/identity-role.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class IdentityUserService {\n\n    static USER_NAME = 'name';\n    static FAMILY_NAME = 'family_name';\n    static GIVEN_NAME = 'given_name';\n    static USER_EMAIL = 'email';\n    static USER_ACCESS_TOKEN = 'access_token';\n    static USER_PREFERRED_USERNAME = 'preferred_username';\n\n    constructor(\n        private helper: JwtHelperService,\n        private apiService: AlfrescoApiService,\n        private appConfigService: AppConfigService) { }\n\n    /**\n     * Gets the name and other basic details of the current user.\n     * @returns The user's details\n     */\n    getCurrentUserInfo(): IdentityUserModel {\n        const familyName = this.getValueFromToken<string>(IdentityUserService.FAMILY_NAME);\n        const givenName = this.getValueFromToken<string>(IdentityUserService.GIVEN_NAME);\n        const email = this.getValueFromToken<string>(IdentityUserService.USER_EMAIL);\n        const username = this.getValueFromToken<string>(IdentityUserService.USER_PREFERRED_USERNAME);\n        const user = { firstName: givenName, lastName: familyName, email: email, username: username };\n        return new IdentityUserModel(user);\n    }\n\n    /**\n     * Gets a named value from the user access token.\n     * @param key Key name of the field to retrieve\n     * @returns Value from the token\n     */\n    getValueFromToken<T>(key: string): T {\n        let value;\n        const token = localStorage.getItem(IdentityUserService.USER_ACCESS_TOKEN);\n        if (token) {\n            const tokenPayload = this.helper.decodeToken(token);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n\n    /**\n     * Find users based on search input.\n     * @param search Search query string\n     * @returns List of users\n     */\n    findUsersByName(search: string): Observable<any> {\n        if (search === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { search: search }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on username input.\n     * @param username Search query string\n     * @returns List of users\n     */\n    findUserByUsername(username: string): Observable<any> {\n        if (username === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { username: username }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on email input.\n     * @param email Search query string\n     * @returns List of users\n     */\n    findUserByEmail(email: string): Observable<any> {\n        if (email === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { email: email }, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Find users based on id input.\n     * @param id Search query string\n     * @returns users object\n     */\n    findUserById(id: string): Observable<any> {\n        if (id === '') {\n            return of([]);\n        }\n        const url = this.buildUserUrl() + '/' + id;\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return (from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ));\n    }\n\n    /**\n     * Get client roles of a user for a particular client.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns List of client roles\n     */\n    getClientRoles(userId: string, clientId: string): Observable<any[]> {\n        const url = this.buildUserClientRoleMapping(userId, clientId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        );\n    }\n\n    /**\n     * Checks whether user has access to a client app.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasClientApp(userId: string, clientId: string): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                if (clientRoles.length > 0) {\n                    return true;\n                }\n                return false;\n            })\n        );\n    }\n\n    /**\n     * Checks whether a user has any of the client app roles.\n     * @param userId ID of the target user\n     * @param clientId ID of the client app\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyClientAppRole(userId: string, clientId: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientRoles(userId, clientId).pipe(\n            map((clientRoles: any[]) => {\n                let hasRole = false;\n                if (clientRoles.length > 0) {\n                    roleNames.forEach((roleName) => {\n                        const role = clientRoles.find((availableRole) => {\n                            return availableRole.name === roleName;\n                        });\n\n                        if (role) {\n                            hasRole = true;\n                            return;\n                        }\n                    });\n                }\n                return hasRole;\n            })\n        );\n    }\n\n    /**\n     * Gets the client ID for an application.\n     * @param applicationName Name of the application\n     * @returns Client ID string\n     */\n    getClientIdByApplicationName(applicationName: string): Observable<string> {\n        const url = this.buildGetClientsUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = { clientId: applicationName }, bodyParam = {}, headerParams = {}, formParams = {},\n            contentTypes = ['application/json'], accepts = ['application/json'];\n        return from(this.apiService.getInstance()\n            .oauth2Auth.callCustomApi(url, httpMethod, pathParams, queryParams, headerParams,\n                formParams, bodyParam, contentTypes,\n                accepts, Object, null, null)\n        ).pipe(\n            map((response: any[]) => {\n                const clientId = response && response.length > 0 ? response[0].id : '';\n                return clientId;\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has access to an application.\n     * @param userId ID of the user\n     * @param applicationName Name of the application\n     * @returns True if the user has access, false otherwise\n     */\n    checkUserHasApplicationAccess(userId: string, applicationName: string): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasClientApp(userId, clientId);\n            })\n        );\n    }\n\n    /**\n     * Checks if a user has any application role.\n     * @param userId ID of the target user\n     * @param applicationName Name of the application\n     * @param roleNames List of role names to check for\n     * @returns True if the user has one or more of the roles, false otherwise\n     */\n    checkUserHasAnyApplicationRole(userId: string, applicationName: string, roleNames: string[]): Observable<boolean> {\n        return this.getClientIdByApplicationName(applicationName).pipe(\n            switchMap((clientId: string) => {\n                return this.checkUserHasAnyClientAppRole(userId, clientId, roleNames);\n            })\n        );\n    }\n\n    /**\n     * Gets details for all users.\n     * @returns Array of user info objects\n     */\n    getUsers(): Observable<IdentityUserModel[]> {\n        const url = this.buildUserUrl();\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, authNames = [], contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam, authNames,\n            contentTypes, accepts, null, null)\n        ).pipe(\n            map((response: IdentityUserModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets a list of roles for a user.\n     * @param userId ID of the user\n     * @returns Array of role info objects\n     */\n    getUserRoles(userId: string): Observable<IdentityRoleModel[]> {\n        const url = this.buildRolesUrl(userId);\n        const httpMethod = 'GET', pathParams = {}, queryParams = {}, bodyParam = {}, headerParams = {},\n            formParams = {}, contentTypes = ['application/json'], accepts = ['application/json'];\n\n        return from(this.apiService.getInstance().oauth2Auth.callCustomApi(\n            url, httpMethod, pathParams, queryParams,\n            headerParams, formParams, bodyParam,\n            contentTypes, accepts, Object, null, null)\n        ).pipe(\n            map((response: IdentityRoleModel[]) => {\n                return response;\n            })\n        );\n    }\n\n    /**\n     * Gets an array of users (including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const users = await this.getUsers().toPromise();\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    /**\n     * Gets an array of users (not including the current user) who have any of the roles in the supplied list.\n     * @param roleNames List of role names to look for\n     * @returns Array of user info objects\n     */\n    async getUsersByRolesWithoutCurrentUser(roleNames: string[]): Promise<IdentityUserModel[]> {\n        const filteredUsers: IdentityUserModel[] = [];\n        if (roleNames && roleNames.length > 0) {\n            const currentUser = this.getCurrentUserInfo();\n            let users = await this.getUsers().toPromise();\n\n            users = users.filter((user) => { return user.username !== currentUser.username; });\n\n            for (let i = 0; i < users.length; i++) {\n                const hasAnyRole = await this.userHasAnyRole(users[i].id, roleNames);\n                if (hasAnyRole) {\n                    filteredUsers.push(users[i]);\n                }\n            }\n        }\n\n        return filteredUsers;\n    }\n\n    private async userHasAnyRole(userId: string, roleNames: string[]): Promise<boolean> {\n        const userRoles = await this.getUserRoles(userId).toPromise();\n        const hasAnyRole = roleNames.some((roleName) => {\n            const filteredRoles = userRoles.filter((userRole) => {\n                return userRole.name.toLocaleLowerCase() === roleName.toLocaleLowerCase();\n            });\n\n            return filteredRoles.length > 0;\n        });\n\n        return hasAnyRole;\n    }\n\n    /**\n     * Checks if a user has one of the roles from a list.\n     * @param userId ID of the target user\n     * @param roleNames Array of roles to check for\n     * @returns True if the user has one of the roles, false otherwise\n     */\n    checkUserHasRole(userId: string, roleNames: string[]): Observable<boolean> {\n        return this.getUserRoles(userId).pipe(map((userRoles: IdentityRoleModel[]) => {\n            let hasRole = false;\n            if (userRoles && userRoles.length > 0) {\n                roleNames.forEach((roleName: string) => {\n                    const role = userRoles.find((userRole) => {\n                        return roleName === userRole.name;\n                    });\n                    if (role) {\n                        hasRole = true;\n                        return;\n                    }\n                });\n            }\n            return hasRole;\n        }));\n    }\n\n    private buildUserUrl(): any {\n        return `${this.appConfigService.get('identityHost')}/users`;\n    }\n\n    private buildUserClientRoleMapping(userId: string, clientId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/clients/${clientId}`;\n    }\n\n    private buildRolesUrl(userId: string): any {\n        return `${this.appConfigService.get('identityHost')}/users/${userId}/role-mappings/realm/composite`;\n    }\n\n    private buildGetClientsUrl() {\n        return `${this.appConfigService.get('identityHost')}/clients`;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { BpmUserModel } from './../models/bpm-user.model';\nimport { EcmUserModel } from './../models/ecm-user.model';\nimport { IdentityUserModel } from './../models/identity-user.model';\nimport { BpmUserService } from './../services/bpm-user.service';\nimport { EcmUserService } from './../services/ecm-user.service';\nimport { IdentityUserService } from '../services/identity-user.service';\nimport { of, Observable } from 'rxjs';\nimport { MatMenuTrigger } from '@angular/material';\n\n@Component({\n    selector: 'adf-userinfo',\n    styleUrls: ['./user-info.component.scss'],\n    templateUrl: './user-info.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserInfoComponent implements OnInit {\n\n    @ViewChild(MatMenuTrigger) trigger: MatMenuTrigger;\n\n    /** Custom path for the background banner image for ACS users. */\n    @Input()\n    ecmBackgroundImage: string = './assets/images/ecm-background.png';\n\n    /** Custom path for the background banner image for APS users. */\n    @Input()\n    bpmBackgroundImage: string = './assets/images/bpm-background.png';\n\n    /** Custom choice for opening the menu at the bottom. Can be `before` or `after`. */\n    @Input()\n    menuPositionX: string = 'after';\n\n    /** Custom choice for opening the menu at the bottom. Can be `above` or `below`. */\n    @Input()\n    menuPositionY: string = 'below';\n\n    /** Shows/hides the username next to the user info button. */\n    @Input()\n    showName: boolean = true;\n\n    /** When the username is shown, this defines its position relative to the user info button.\n     * Can be `right` or `left`.\n     */\n    @Input()\n    namePosition: string = 'right';\n\n    ecmUser$: Observable<EcmUserModel>;\n    bpmUser$: Observable<BpmUserModel>;\n    identityUser$: Observable<IdentityUserModel>;\n    selectedIndex: number;\n\n    constructor(private ecmUserService: EcmUserService,\n                private bpmUserService: BpmUserService,\n                private identityUserService: IdentityUserService,\n                private authService: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        this.getUserInfo();\n    }\n\n    getUserInfo() {\n        if (this.authService.isOauth()) {\n            this.loadIdentityUserInfo();\n        } else if (this.authService.isEcmLoggedIn() && this.authService.isBpmLoggedIn()) {\n            this.loadEcmUserInfo();\n            this.loadBpmUserInfo();\n        } else if (this.authService.isEcmLoggedIn()) {\n            this.loadEcmUserInfo();\n        } else if (this.authService.isBpmLoggedIn()) {\n            this.loadBpmUserInfo();\n        }\n    }\n\n    onKeyPress(event: KeyboardEvent) {\n        this.closeUserModal(event);\n    }\n\n    private closeUserModal($event: KeyboardEvent) {\n        if ($event.keyCode === 27 ) {\n            this.trigger.closeMenu();\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isLoggedIn();\n    }\n\n    loadEcmUserInfo(): void {\n        this.ecmUser$ = this.ecmUserService.getCurrentUserInfo();\n    }\n\n    loadBpmUserInfo() {\n        this.bpmUser$ = this.bpmUserService.getCurrentUserInfo();\n    }\n\n    loadIdentityUserInfo() {\n        this.identityUser$ = of(this.identityUserService.getCurrentUserInfo());\n    }\n\n    stopClosing(event) {\n        event.stopPropagation();\n    }\n\n    getEcmAvatar(avatarId: any ): string {\n        return this.ecmUserService.getUserProfileImage(avatarId);\n    }\n\n    getBpmUserImage(): string {\n        return this.bpmUserService.getCurrentUserProfileImage();\n    }\n\n    showOnRight(): boolean {\n        return this.namePosition === 'right';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class IdentityRoleModel {\n\n    id: string;\n    name: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.name = obj.name || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MaterialModule } from '../material.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { UserInfoComponent } from './components/user-info.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        UserInfoComponent\n    ],\n    exports: [\n        UserInfoComponent\n    ]\n})\nexport class UserInfoModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Output, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl, FormControl } from '@angular/forms';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { StorageService } from '../services/storage.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\nimport { ENTER } from '@angular/cdk/keycodes';\n\n@Component({\n    selector: 'adf-host-settings',\n    templateUrl: 'host-settings.component.html',\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styleUrls: ['host-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent implements OnInit {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    /**\n     * Tells the component which provider options are available. Possible valid values\n     * are \"ECM\" (Content), \"BPM\" (Process) , \"ALL\" (Content and Process), 'OAUTH2' SSO.\n     */\n    @Input()\n    providers: string[] = ['BPM', 'ECM', 'ALL'];\n\n    showSelectProviders = true;\n\n    form: FormGroup;\n\n    /** Emitted when the URL is invalid. */\n    @Output()\n    error = new EventEmitter<string>();\n\n    /** Emitted when the user cancels the changes. */\n    @Output()\n    cancel = new EventEmitter<boolean>();\n\n    /** Emitted when the changes are successfully applied. */\n    @Output()\n    success = new EventEmitter<boolean>();\n\n    constructor(private formBuilder: FormBuilder,\n                private storageService: StorageService,\n                private alfrescoApiService: AlfrescoApiService,\n                private appConfig: AppConfigService) {\n    }\n\n    ngOnInit() {\n        if (this.providers.length === 1) {\n            this.showSelectProviders = false;\n        }\n\n        const providerSelected = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n        const authType = this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC');\n\n        this.form = this.formBuilder.group({\n            providersControl: [providerSelected, Validators.required],\n            authType: authType\n        });\n\n        this.addFormGroups();\n\n        if (authType === 'OAUTH') {\n            this.addOAuthFormGroup();\n            this.addIdentityHostFormControl();\n        }\n\n        this.form.get('authType').valueChanges.subscribe((value) => {\n            if (value === 'BASIC') {\n                this.form.removeControl('oauthConfig');\n                this.form.removeControl('identityHost');\n            } else {\n                this.addOAuthFormGroup();\n                this.addIdentityHostFormControl();\n            }\n        });\n\n        this.providersControl.valueChanges.subscribe(() => {\n            this.removeFormGroups();\n            this.addFormGroups();\n        });\n    }\n\n    private removeFormGroups() {\n        this.form.removeControl('bpmHost');\n        this.form.removeControl('ecmHost');\n    }\n\n    private addFormGroups() {\n        this.addBPMFormControl();\n        this.addECMFormControl();\n    }\n\n    private addOAuthFormGroup() {\n        const oauthFormGroup = this.createOAuthFormGroup();\n        this.form.addControl('oauthConfig', oauthFormGroup);\n    }\n\n    private addBPMFormControl() {\n        if ((this.isBPM() || this.isALL() || this.isOAUTH()) && !this.bpmHost) {\n            const bpmFormControl = this.createBPMFormControl();\n            this.form.addControl('bpmHost', bpmFormControl);\n        }\n    }\n\n    private addIdentityHostFormControl() {\n        const identityHostFormControl = this.createIdentityFormControl();\n        this.form.addControl('identityHost', identityHostFormControl);\n    }\n\n    private addECMFormControl() {\n        if ((this.isECM() || this.isALL()) && !this.ecmHost) {\n            const ecmFormControl = this.createECMFormControl();\n            this.form.addControl('ecmHost', ecmFormControl);\n        }\n    }\n\n    private createOAuthFormGroup(): AbstractControl {\n        const oauth = <OauthConfigModel> this.appConfig.get(AppConfigValues.OAUTHCONFIG, {});\n\n        return this.formBuilder.group({\n            host: [oauth.host, [Validators.required, Validators.pattern(this.HOST_REGEX)]],\n            clientId: [oauth.clientId, Validators.required],\n            redirectUri: [oauth.redirectUri, Validators.required],\n            redirectUriLogout: [oauth.redirectUriLogout],\n            scope: [oauth.scope, Validators.required],\n            secret: oauth.secret,\n            silentLogin: oauth.silentLogin,\n            implicitFlow: oauth.implicitFlow\n        });\n    }\n\n    private createBPMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.BPMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createIdentityFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.IDENTITY_HOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    private createECMFormControl(): AbstractControl {\n        return new FormControl(this.appConfig.get<string>(AppConfigValues.ECMHOST), [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    }\n\n    onCancel() {\n        this.cancel.emit(true);\n    }\n\n    onSubmit(values: any) {\n        this.storageService.setItem(AppConfigValues.PROVIDERS, values.providersControl);\n\n        if (this.isBPM()) {\n            this.saveBPMValues(values);\n        } else if (this.isECM()) {\n            this.saveECMValues(values);\n        } else if (this.isALL()) {\n            this.saveECMValues(values);\n            this.saveBPMValues(values);\n        }\n\n        if (this.isOAUTH()) {\n            this.saveOAuthValues(values);\n        }\n\n        this.storageService.setItem(AppConfigValues.AUTHTYPE, values.authType);\n\n        this.alfrescoApiService.reset();\n        this.alfrescoApiService.getInstance().invalidateSession();\n        this.success.emit(true);\n    }\n\n    keyDownFunction(event: any) {\n        if (event.keyCode === ENTER && this.form.valid) {\n            this.onSubmit(this.form.value);\n        }\n    }\n\n    private saveOAuthValues(values: any) {\n        this.storageService.setItem(AppConfigValues.OAUTHCONFIG, JSON.stringify(values.oauthConfig));\n        this.storageService.setItem(AppConfigValues.IDENTITY_HOST, values.identityHost);\n    }\n\n    private saveBPMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.BPMHOST, values.bpmHost);\n    }\n\n    private saveECMValues(values: any) {\n        this.storageService.setItem(AppConfigValues.ECMHOST, values.ecmHost);\n    }\n\n    isBPM(): boolean {\n        return this.providersControl.value === 'BPM';\n    }\n\n    isECM(): boolean {\n        return this.providersControl.value === 'ECM';\n    }\n\n    isALL(): boolean {\n        return this.providersControl.value === 'ALL';\n    }\n\n    isOAUTH(): boolean {\n        return this.form.get('authType').value === 'OAUTH';\n    }\n\n    get providersControl(): AbstractControl {\n        return this.form.get('providersControl');\n    }\n\n    get bpmHost(): AbstractControl {\n        return this.form.get('bpmHost');\n    }\n\n    get ecmHost(): AbstractControl {\n        return this.form.get('ecmHost');\n    }\n\n    get host(): AbstractControl {\n        return this.oauthConfig.get('host');\n    }\n\n    get identityHost(): AbstractControl {\n        return this.form.get('identityHost');\n    }\n\n    get clientId(): AbstractControl {\n        return this.oauthConfig.get('clientId');\n    }\n\n    get scope(): AbstractControl {\n        return this.oauthConfig.get('scope');\n    }\n\n    get secretId(): AbstractControl {\n        return this.oauthConfig.get('secretId');\n    }\n\n    get implicitFlow(): AbstractControl {\n        return this.oauthConfig.get('implicitFlow');\n    }\n\n    get silentLogin(): AbstractControl {\n        return this.oauthConfig.get('silentLogin');\n    }\n\n    get redirectUri(): AbstractControl {\n        return this.oauthConfig.get('redirectUri');\n    }\n\n    get redirectUriLogout(): AbstractControl {\n        return this.oauthConfig.get('redirectUriLogout');\n    }\n\n    get oauthConfig(): AbstractControl {\n        return this.form.get('oauthConfig');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { HostSettingsComponent } from './host-settings.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        HostSettingsComponent\n    ],\n    exports: [\n        HostSettingsComponent\n    ]\n})\nexport class HostSettingsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation,\n    ChangeDetectorRef, OnDestroy, HostBinding\n} from '@angular/core';\n\nimport { Pagination } from '@alfresco/js-api';\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationModel } from '../models/pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    target: PaginatedComponent;\n\n    /** An array of page sizes. */\n    @Input()\n    supportedPageSizes: number[];\n\n    /** Pagination object. */\n    @Input()\n    pagination: PaginationModel = PaginationComponent.DEFAULT_PAGINATION;\n\n    /** Emitted when pagination changes in any way. */\n    @Output()\n    change: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page number changes. */\n    @Output()\n    changePageNumber: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the page size changes. */\n    @Output()\n    changePageSize: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the next page is requested. */\n    @Output()\n    nextPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    /** Emitted when the previous page is requested. */\n    @Output()\n    prevPage: EventEmitter<PaginationModel> = new EventEmitter<PaginationModel>();\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef, private userPreferencesService: UserPreferencesService) {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.pagination.maxItems = pagSize;\n        });\n    }\n\n    ngOnInit() {\n        if (!this.supportedPageSizes) {\n            this.supportedPageSizes = this.userPreferencesService.supportedPageSizes;\n        }\n\n        if (this.target) {\n            this.paginationSubscription = this.target.pagination.subscribe((pagination: PaginationModel) => {\n\n                if (pagination.count === 0 && !this.isFirstPage) {\n                    this.goPrevious();\n                }\n\n                this.pagination = pagination;\n                this.cdr.detectChanges();\n            });\n        }\n\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        return this.current === this.lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        return this.isLastPage ? this.current : this.current + 1;\n    }\n\n    get previous(): number {\n        return this.isFirstPage ? 1 : this.current - 1;\n    }\n\n    get hasItems(): boolean {\n        return this.pagination && this.pagination.count > 0;\n    }\n\n    @HostBinding('class.adf-pagination__empty')\n    get isEmpty(): boolean {\n        return !this.hasItems;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [start, end];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.next - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    goPrevious() {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (this.previous - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        if (this.hasItems) {\n            const maxItems = this.pagination.maxItems;\n            const skipCount = (pageNumber - 1) * maxItems;\n            this.pagination.skipCount = skipCount;\n\n            this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n                skipCount,\n                maxItems\n            });\n        }\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.pagination.skipCount = 0;\n        this.userPreferencesService.paginationSize = maxItems;\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    handlePaginationEvent(action: string, params: PaginationModel) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const paginationModel: PaginationModel = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(paginationModel);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(paginationModel);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(paginationModel);\n        }\n\n        change.emit(params);\n\n        if (this.target) {\n            this.target.updatePagination(params);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter,\n    Input, OnInit, Output, OnDestroy, ViewEncapsulation\n} from '@angular/core';\n\nimport { PaginatedComponent } from './paginated-component.interface';\nimport { Subscription } from 'rxjs';\nimport { PaginationComponentInterface } from './pagination-component.interface';\nimport { PaginationModel } from '../models/pagination.model';\nimport { RequestPaginationModel } from '../models/request-pagination.model';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\nimport { Pagination } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    templateUrl: './infinite-pagination.component.html',\n    styleUrls: ['./infinite-pagination.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit, OnDestroy, PaginationComponentInterface {\n\n    static DEFAULT_PAGINATION: Pagination = new Pagination({\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    _target: PaginatedComponent;\n\n    /** Component that provides custom pagination support. */\n    @Input()\n    set target(target: PaginatedComponent) {\n        if (target) {\n            this._target = target;\n            this.paginationSubscription = target.pagination.subscribe((pagination: PaginationModel) => {\n                this.isLoading = false;\n                this.pagination = pagination;\n\n                if (!this.pagination.hasMoreItems) {\n                    this.pagination.hasMoreItems = false;\n                }\n\n                this.cdr.detectChanges();\n            });\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    /** Number of items that are added with each \"load more\" event. */\n    @Input()\n    pageSize: number;\n\n    /** Is a new page loading? */\n    @Input('loading')\n    isLoading: boolean = false;\n\n    /** Emitted when the \"Load More\" button is clicked. */\n    @Output()\n    loadMore: EventEmitter<RequestPaginationModel> = new EventEmitter<RequestPaginationModel>();\n\n    pagination: PaginationModel = InfinitePaginationComponent.DEFAULT_PAGINATION;\n\n    requestPaginationModel: RequestPaginationModel = {\n        skipCount: 0,\n        merge: true\n    };\n\n    private paginationSubscription: Subscription;\n\n    constructor(private cdr: ChangeDetectorRef,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pageSize: number) => {\n            this.pageSize = this.pageSize || pageSize;\n            this.requestPaginationModel.maxItems = this.pageSize;\n        });\n    }\n\n    onLoadMore() {\n        this.requestPaginationModel.skipCount = 0;\n        this.requestPaginationModel.merge = false;\n\n        this.requestPaginationModel.maxItems += this.pageSize;\n\n        this.loadMore.next(this.requestPaginationModel);\n\n        if (this._target) {\n            this.isLoading = true;\n            this._target.updatePagination(<RequestPaginationModel> this.requestPaginationModel);\n        }\n    }\n\n    reset() {\n        this.pagination.skipCount = 0;\n        this.pagination.maxItems = this.pageSize;\n\n        if (this._target) {\n            this._target.updatePagination(this.pagination);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.paginationSubscription) {\n            this.paginationSubscription.unsubscribe();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { InfinitePaginationComponent } from './infinite-pagination.component';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    exports: [\n        InfinitePaginationComponent,\n        PaginationComponent\n    ]\n})\nexport class PaginationModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginErrorEvent {\n    constructor(public err: any) {}\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSubmitEvent {\n\n    private _values: any;\n    private _defaultPrevented: boolean = false;\n\n    get values(): any {\n        return this._values;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(_values: any) {\n        this._values = _values;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LoginSuccessEvent {\n    constructor(\n        public token: any,\n        public username: string,\n        public password: string) {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component, EventEmitter,\n    Input, OnInit, Output, TemplateRef, ViewEncapsulation\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { LogService } from '../../services/log.service';\nimport { TranslationService } from '../../services/translation.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\nimport { LoginErrorEvent } from '../models/login-error.event';\nimport { LoginSubmitEvent } from '../models/login-submit.event';\nimport { LoginSuccessEvent } from '../models/login-success.event';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../../app-config/app-config.service';\nimport { OauthConfigModel } from '../../models/oauth-config.model';\n\nenum LoginSteps {\n    Landing = 0,\n    Checking = 1,\n    Welcome = 2\n}\n\ninterface ValidationMessage {\n    value: string;\n    params?: any;\n}\n\n@Component({\n    selector: 'adf-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-login'\n    }\n})\nexport class LoginComponent implements OnInit {\n    isPasswordShow: boolean = false;\n\n    /**\n     * Should the `Remember me` checkbox be shown? When selected, this\n     * option will remember the logged-in user after the browser is closed\n     * to avoid logging in repeatedly.\n     */\n    @Input()\n    showRememberMe: boolean = true;\n\n    /** Should the extra actions (`Need Help`, `Register`, etc) be shown? */\n    @Input()\n    showLoginActions: boolean = true;\n\n    /** Sets the URL of the NEED HELP link in the footer. */\n    @Input()\n    needHelpLink: string = '';\n\n    /** Sets the URL of the REGISTER link in the footer. */\n    @Input()\n    registerLink: string = '';\n\n    /** Path to a custom logo image. */\n    @Input()\n    logoImageUrl: string = './assets/images/alfresco-logo.svg';\n\n    /** Path to a custom background image. */\n    @Input()\n    backgroundImageUrl: string = './assets/images/background.svg';\n\n    /** The copyright text below the login box. */\n    @Input()\n    copyrightText: string = '\\u00A9 2016 Alfresco Software, Inc. All Rights Reserved.';\n\n    /** Custom validation rules for the login form. */\n    @Input()\n    fieldsValidation: any;\n\n    /** Route to redirect to on successful login. */\n    @Input()\n    successRoute: string = null;\n\n    /** Emitted when the login is successful. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    /** Emitted when the login fails. */\n    @Output()\n    error = new EventEmitter<LoginErrorEvent>();\n\n    /** Emitted when the login form is submitted. */\n    @Output()\n    executeSubmit = new EventEmitter<LoginSubmitEvent>();\n\n    implicitFlow: boolean = false;\n\n    form: FormGroup;\n    isError: boolean = false;\n    errorMsg: string;\n    actualLoginStep: any = LoginSteps.Landing;\n    LoginSteps: any = LoginSteps;\n    rememberMe: boolean = true;\n    formError: { [id: string]: string };\n    minLength: number = 2;\n    footerTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    data: any;\n\n    private _message: { [id: string]: { [id: string]: ValidationMessage } };\n\n    /**\n     * Constructor\n     * @param _fb\n     * @param authService\n     * @param translate\n     */\n    constructor(\n        private _fb: FormBuilder,\n        private authService: AuthenticationService,\n        private translateService: TranslationService,\n        private logService: LogService,\n        private router: Router,\n        private appConfig: AppConfigService,\n        private userPreferences: UserPreferencesService,\n        private location: Location,\n        private route: ActivatedRoute\n    ) {\n        this.initFormError();\n        this.initFormFieldsMessages();\n    }\n\n    ngOnInit() {\n        if (this.authService.isOauth()) {\n            const oauth: OauthConfigModel = this.appConfig.get<OauthConfigModel>(AppConfigValues.OAUTHCONFIG, null);\n            if (oauth && oauth.implicitFlow) {\n                this.implicitFlow = true;\n            }\n        }\n\n        if (this.authService.isEcmLoggedIn() || this.authService.isBpmLoggedIn()) {\n            this.location.forward();\n        } else {\n            this.route.queryParams.subscribe((params: Params) => {\n                const url = params['redirectUrl'];\n                const provider = this.appConfig.get<string>(AppConfigValues.PROVIDERS);\n\n                this.authService.setRedirect({ provider, url });\n              });\n        }\n\n        if (this.hasCustomFieldsValidation()) {\n            this.form = this._fb.group(this.fieldsValidation);\n        } else {\n            this.initFormFieldsDefault();\n            this.initFormFieldsMessagesDefault();\n        }\n        this.form.valueChanges.subscribe((data) => this.onValueChanged(data));\n    }\n\n    submit() {\n        this.onSubmit(this.form.value);\n    }\n\n    /**\n     * Method called on submit form\n     * @param values\n     * @param event\n     */\n    onSubmit(values: any) {\n        this.disableError();\n\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            const args = new LoginSubmitEvent({\n                controls: { username: this.form.controls.username }\n            });\n            this.executeSubmit.emit(args);\n\n            if (args.defaultPrevented) {\n                return false;\n            } else {\n                this.performLogin(values);\n            }\n        }\n    }\n\n    implicitLogin() {\n        if (this.authService.isOauth() && !this.authService.isSSODiscoveryConfigured()) {\n            this.errorMsg = 'LOGIN.MESSAGES.SSO-WRONG-CONFIGURATION';\n            this.isError = true;\n        } else {\n            this.authService.ssoImplicitLogin();\n        }\n    }\n\n    /**\n     * The method check the error in the form and push the error in the formError object\n     * @param data\n     */\n    onValueChanged(data: any) {\n        this.disableError();\n        for (const field in this.formError) {\n            if (field) {\n                this.formError[field] = '';\n                const hasError =\n                    (this.form.controls[field].errors && data[field] !== '') ||\n                    (this.form.controls[field].dirty &&\n                        !this.form.controls[field].valid);\n                if (hasError) {\n                    for (const key in this.form.controls[field].errors) {\n                        if (key) {\n                            const message = this._message[field][key];\n                            if (message && message.value) {\n                                const translated = this.translateService.instant(message.value, message.params);\n                                this.formError[field] += translated;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private performLogin(values: any) {\n        this.actualLoginStep = LoginSteps.Checking;\n        this.authService\n            .login(values.username, values.password, this.rememberMe)\n            .subscribe(\n                (token: any) => {\n                    const redirectUrl = this.authService.getRedirect();\n\n                    this.actualLoginStep = LoginSteps.Welcome;\n                    this.userPreferences.setStoragePrefix(values.username);\n                    values.password = null;\n                    this.success.emit(\n                        new LoginSuccessEvent(token, values.username, null)\n                    );\n\n                    if (redirectUrl) {\n                        this.authService.setRedirect(null);\n                        this.router.navigateByUrl(redirectUrl);\n                    } else if (this.successRoute) {\n                        this.router.navigate([this.successRoute]);\n                    }\n                },\n                (err: any) => {\n                    this.actualLoginStep = LoginSteps.Landing;\n                    this.displayErrorMessage(err);\n                    this.isError = true;\n                    this.error.emit(new LoginErrorEvent(err));\n                },\n                () => this.logService.info('Login done')\n            );\n    }\n\n    /**\n     * Check and display the right error message in the UI\n     */\n    private displayErrorMessage(err: any): void {\n        if (\n            err.error &&\n            err.error.crossDomain &&\n            err.error.message.indexOf('Access-Control-Allow-Origin') !== -1\n        ) {\n            this.errorMsg = err.error.message;\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('Invalid CSRF-token') !== -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CSRF';\n        } else if (\n            err.status === 403 &&\n            err.message.indexOf('The system is currently in read-only mode') !==\n            -1\n        ) {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ECM-LICENSE';\n        } else {\n            this.errorMsg = 'LOGIN.MESSAGES.LOGIN-ERROR-CREDENTIALS';\n        }\n    }\n\n    /**\n     * Add a custom form error for a field\n     * @param field\n     * @param msg\n     */\n    public addCustomFormError(field: string, msg: string) {\n        this.formError[field] += msg;\n    }\n\n    /**\n     * Add a custom validation rule error for a field\n     * @param field\n     * @param ruleId - i.e. required | minlength | maxlength\n     * @param msg\n     */\n    addCustomValidationError(\n        field: string,\n        ruleId: string,\n        msg: string,\n        params?: any\n    ) {\n        this._message[field][ruleId] = {\n            value: msg,\n            params\n        };\n    }\n\n    /**\n     * Display and hide the password value.\n     */\n    toggleShowPassword() {\n        this.isPasswordShow = !this.isPasswordShow;\n    }\n\n    /**\n     * The method return if a field is valid or not\n     * @param field\n     */\n    isErrorStyle(field: AbstractControl) {\n        return !field.valid && field.dirty && !field.pristine;\n    }\n\n    /**\n     * Trim username\n     */\n    trimUsername(event: any) {\n        event.target.value = event.target.value.trim();\n    }\n\n    /**\n     * Default formError values\n     */\n    private initFormError() {\n        this.formError = {\n            username: '',\n            password: ''\n        };\n    }\n\n    /**\n     * Init form fields messages\n     */\n    private initFormFieldsMessages() {\n        this._message = {\n            username: {},\n            password: {}\n        };\n    }\n\n    /**\n     * Default form fields messages\n     */\n    private initFormFieldsMessagesDefault() {\n        this._message = {\n            username: {\n                required: {\n                    value: 'LOGIN.MESSAGES.USERNAME-REQUIRED'\n                },\n                minLength: {\n                    value: 'LOGIN.MESSAGES.USERNAME-MIN',\n                    params: {\n                        get minLength() {\n                            return this.minLength;\n                        }\n                    }\n                }\n\n            },\n            password: {\n                required: {\n                    value: 'LOGIN.MESSAGES.PASSWORD-REQUIRED'\n                }\n            }\n        };\n    }\n\n    private initFormFieldsDefault() {\n        this.form = this._fb.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n    }\n\n    /**\n     * Disable the error flag\n     */\n    private disableError() {\n        this.isError = false;\n        this.initFormError();\n    }\n\n    private hasCustomFieldsValidation(): boolean {\n        return this.fieldsValidation !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-header, login-header'\n})\nexport class LoginHeaderDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.headerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterContentInit,\n    ContentChild,\n    Directive,\n    TemplateRef\n} from '@angular/core';\nimport { LoginComponent } from '../components/login.component';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: 'adf-login-footer, login-footer'\n})\nexport class LoginFooterDirective implements AfterContentInit {\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    constructor(\n        private alfrescoLoginComponent: LoginComponent) {\n    }\n\n    ngAfterContentInit() {\n        this.alfrescoLoginComponent.footerTemplate = this.template;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { LoginDialogComponentData } from './login-dialog-component-data.interface';\nimport { LoginDialogPanelComponent } from './login-dialog-panel.component';\n@Component({\n    selector: 'adf-login-dialog',\n    templateUrl: './login-dialog.component.html',\n    styleUrls: ['./login-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogComponent {\n\n    @ViewChild('adfLoginPanel')\n    loginPanel: LoginDialogPanelComponent;\n\n    buttonActionName = '';\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: LoginDialogComponentData) {\n        this.buttonActionName = data.actionName ? `LOGIN.DIALOG.${data.actionName.toUpperCase()}` : 'LOGIN.DIALOG.CHOOSE';\n    }\n\n    close() {\n        this.data.logged.complete();\n    }\n\n    submitForm(): void {\n        this.loginPanel.submitForm();\n    }\n\n    onLoginSuccess(event: any) {\n        this.data.logged.next(event);\n        this.close();\n    }\n\n    isFormValid() {\n        return this.loginPanel ? this.loginPanel.isValid() : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { LoginComponent } from './login.component';\nimport { LoginSuccessEvent } from '../models/login-success.event';\n\n@Component({\n    selector: 'adf-login-dialog-panel',\n    templateUrl: './login-dialog-panel.component.html',\n    styleUrls: ['./login-dialog-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class LoginDialogPanelComponent {\n    /** Emitted when the login succeeds. */\n    @Output()\n    success = new EventEmitter<LoginSuccessEvent>();\n\n    @ViewChild('adfLogin')\n    login: LoginComponent;\n\n    submitForm(): void {\n        this.login.submit();\n    }\n\n    onLoginSuccess(event: LoginSuccessEvent) {\n        this.success.emit(event);\n    }\n\n    isValid() {\n        return this.login && this.login.form ? this.login.form.valid : false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LoginComponent } from './components/login.component';\nimport { LoginFooterDirective } from './directives/login-footer.directive';\nimport { LoginHeaderDirective } from './directives/login-header.directive';\nimport { LoginDialogComponent } from './components/login-dialog.component';\nimport { LoginDialogPanelComponent } from './components/login-dialog-panel.component';\n\n@NgModule({\n    imports: [\n        RouterModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ],\n    entryComponents: [LoginDialogComponent, LoginDialogPanelComponent],\n    exports: [\n        LoginComponent,\n        LoginFooterDirective,\n        LoginHeaderDirective,\n        LoginDialogComponent,\n        LoginDialogPanelComponent\n    ]\n})\nexport class LoginModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\nimport { UserPreferencesService } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-language-menu',\n    templateUrl: 'language-menu.component.html'\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<any> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesConfigApp = this.appConfig.get<Array<any>>(AppConfigValues.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesConfigApp) {\n            this.languages = languagesConfigApp;\n        }\n    }\n\n    changeLanguage(lang: string) {\n        this.userPreference.locale = lang;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LanguageMenuComponent } from './language-menu.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        LanguageMenuComponent\n    ],\n    exports: [\n        LanguageMenuComponent\n    ]\n})\nexport class LanguageMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    templateUrl: './info-drawer-layout.component.html',\n    styleUrls: ['./info-drawer-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-info-drawer-title], [info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[adf-info-drawer-buttons], [info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[adf-info-drawer-content], [info-drawer-content]' }) export class InfoDrawerContentDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    /** The title of the tab. */\n    @Input()\n    label: string = '';\n\n    /** Icon to render for the tab. */\n    @Input()\n    icon: string = null;\n\n    @ViewChild(TemplateRef)\n    content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    templateUrl: './info-drawer.component.html',\n    styleUrls: ['./info-drawer.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    /** The title of the info drawer. */\n    @Input()\n    title: string|null = null;\n\n    /** The selected index tab. */\n    @Input()\n    selectedIndex: number = 0;\n\n    /** Emitted when the currently active tab changes. */\n    @Output()\n    currentTab: EventEmitter<number> = new EventEmitter<number>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: MatTabChangeEvent) {\n        this.currentTab.emit(event.index);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { InfoDrawerLayoutComponent, InfoDrawerTitleDirective, InfoDrawerButtonsDirective, InfoDrawerContentDirective } from './info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './info-drawer.component';\n\nexport function declarations() {\n    return [\n        InfoDrawerLayoutComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective\n    ];\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: declarations(),\n    exports: declarations()\n})\nexport class InfoDrawerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Input } from '@angular/core';\nimport { AppConfigService } from '../../app-config/app-config.service';\nimport { DataColumnListComponent } from '../../data-column/data-column-list.component';\nimport { DataColumn } from './data-column.model';\nimport { ObjectDataColumn } from './object-datacolumn.model';\n\nexport abstract class DataTableSchema {\n\n    @ContentChild(DataColumnListComponent) columnList: DataColumnListComponent;\n\n    /** Custom preset column schema in JSON format. */\n    @Input()\n    presetColumn: string;\n\n    columns: any;\n\n    private layoutPresets = {};\n\n    constructor(private appConfigService: AppConfigService,\n                protected presetKey: string,\n                protected presetsModel: any) { }\n\n    public createDatatableSchema(): void {\n        this.loadLayoutPresets();\n        if (!this.columns || this.columns.length === 0) {\n            this.columns = this.mergeJsonAndHtmlSchema();\n        }\n    }\n\n    public loadLayoutPresets(): void {\n        const externalSettings = this.appConfigService.get(this.presetKey, null);\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, this.presetsModel, externalSettings);\n        } else {\n            this.layoutPresets = this.presetsModel;\n        }\n    }\n\n    public mergeJsonAndHtmlSchema(): any {\n        let customSchemaColumns = this.getSchemaFromConfig(this.presetColumn).concat(this.getSchemaFromHtml(this.columnList));\n        if (customSchemaColumns.length === 0) {\n            customSchemaColumns = this.getDefaultLayoutPreset();\n        }\n        return customSchemaColumns;\n    }\n\n    public getSchemaFromHtml(columnList: DataColumnListComponent): any {\n        let schema = [];\n        if (columnList && columnList.columns && columnList.columns.length > 0) {\n            schema = columnList.columns.map((c) => <DataColumn> c);\n        }\n        return schema;\n    }\n\n   public getSchemaFromConfig(presetColumn: string): DataColumn[] {\n        return presetColumn ? (this.layoutPresets[presetColumn]).map((col) => new ObjectDataColumn(col)) : [];\n    }\n\n    private getDefaultLayoutPreset(): DataColumn[] {\n        return (this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    templateUrl: './card-view.component.html',\n    styleUrls: ['./card-view.component.scss']\n})\nexport class CardViewComponent {\n    /** (**required**) Items to show in the card view. */\n    @Input()\n    properties: CardViewItem [];\n\n    /** Toggles whether or not the items can be edited. */\n    @Input()\n    editable: boolean;\n\n    /** Toggles whether or not to show empty items in non-editable mode. */\n    @Input()\n    displayEmpty: boolean = true;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\nexport function transformKeyToObject(key: string, value): Object {\n    const objectLevels: string[] = key.split('.').reverse();\n\n    return objectLevels.reduce<{}>((previousValue, currentValue) => {\n        return { [currentValue]: previousValue};\n    }, value);\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardViewUpdateService {\n\n    // Observable sources\n    private itemUpdatedSource = new Subject<UpdateNotification>();\n    private itemClickedSource = new Subject<ClickNotification>();\n\n    // Observable streams\n    public itemUpdated$ = <Observable<UpdateNotification>> this.itemUpdatedSource.asObservable();\n    public itemClicked$ = <Observable<ClickNotification>> this.itemClickedSource.asObservable();\n\n    update(property: CardViewBaseItemModel, newValue: any) {\n        this.itemUpdatedSource.next({\n            target: property,\n            changed: transformKeyToObject(property.key, newValue)\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClickedSource.next({\n            target: property\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { CardViewBoolItemModel } from '../../models/card-view-boolitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-boolitem.component.html',\n    styleUrls: ['./card-view-boolitem.component.scss']\n})\n\nexport class CardViewBoolItemComponent {\n\n    @Input()\n    property: CardViewBoolItemModel;\n\n    @Input()\n    editable: boolean;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    changed(change: MatCheckboxChange) {\n        this.cardViewUpdateService.update(this.property, change.checked );\n        this.property.value = change.checked;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { MatDatetimepicker, DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../utils/moment-date-formats.model';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'adf-card-view-dateitem',\n    templateUrl: './card-view-dateitem.component.html',\n    styleUrls: ['./card-view-dateitem.component.scss']\n})\nexport class CardViewDateItemComponent implements OnInit {\n\n    public SHOW_FORMAT: string = 'MMM DD YY';\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('datetimePicker')\n    public datepicker: MatDatetimepicker<any>;\n\n    valueDate: Moment;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        (<MomentDateAdapter> this.dateAdapter).overrideDisplayFormat = this.SHOW_FORMAT;\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.SHOW_FORMAT);\n        }\n    }\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            const momentDate = moment(newDateValue.value, this.SHOW_FORMAT, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, momentDate.toDate());\n                this.property.value = momentDate.toDate();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    templateUrl: './card-view-mapitem.component.html',\n    styleUrls: ['./card-view-mapitem.component.scss']\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    showProperty() {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { AppConfigService } from '../../../app-config/app-config.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    templateUrl: './card-view-textitem.component.html',\n    styleUrls: ['./card-view-textitem.component.scss']\n})\nexport class CardViewTextItemComponent implements OnChanges {\n\n    static DEFAULT_SEPARATOR = ', ';\n\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n    errorMessages: string[];\n    valueSeparator: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator') || CardViewTextItemComponent.DEFAULT_SEPARATOR;\n    }\n\n    ngOnChanges(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n    }\n\n    showProperty(): boolean {\n        return this.displayEmpty || !this.property.isEmpty();\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable(): boolean {\n        return !!this.property.clickable;\n    }\n\n    hasIcon(): boolean {\n        return !!this.property.icon;\n    }\n\n    hasErrors(): boolean {\n        return this.errorMessages && this.errorMessages.length > 0;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            if (this.editorInput) {\n                this.editorInput.nativeElement.click();\n            }\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.multiline ? this.property.displayValue : this.property.value;\n        this.setEditMode(false);\n        this.resetErrorMessages();\n    }\n\n    private resetErrorMessages() {\n        this.errorMessages = [];\n    }\n\n    update(): void {\n        if (this.property.isValid(this.editedValue)) {\n            const updatedValue = this.prepareValueForUpload(this.property, this.editedValue);\n            this.cardViewUpdateService.update(this.property, updatedValue);\n            this.property.value = updatedValue;\n            this.setEditMode(false);\n            this.resetErrorMessages();\n        } else {\n            this.errorMessages = this.property.getValidationErrors(this.editedValue);\n        }\n    }\n\n    prepareValueForUpload(property: CardViewTextItemModel, value: string): string | string [] {\n        if (property.multivalued) {\n            const listOfValues = value.split(this.valueSeparator.trim()).map((item) => item.trim());\n            return listOfValues;\n        }\n        return value;\n    }\n\n    onTextAreaInputChange() {\n        this.errorMessages = this.property.getValidationErrors(this.editedValue);\n    }\n\n    clicked(): void {\n        if (typeof this.property.clickCallBack === 'function') {\n            this.property.clickCallBack();\n        } else {\n            this.cardViewUpdateService.clicked(this.property);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewSelectItemModel } from '../../models/card-view-selectitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { Observable } from 'rxjs';\nimport { CardViewSelectItemOption } from '../../interfaces/card-view.interfaces';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-selectitem',\n    templateUrl: './card-view-selectitem.component.html',\n    styleUrls: ['./card-view-selectitem.component.scss']\n})\nexport class CardViewSelectItemComponent implements OnChanges {\n    @Input() property: CardViewSelectItemModel<string>;\n\n    @Input() editable: boolean = false;\n\n    @Input() options$: Observable<CardViewSelectItemOption<string>[]>;\n\n    value: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges(): void {\n        this.value = this.property.value;\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    getOptions(): Observable<CardViewSelectItemOption<string>[]> {\n        return this.options$ || this.property.options$;\n    }\n\n    onChange(event: MatSelectChange): void {\n        this.cardViewUpdateService.update(this.property, event.value);\n        this.property.value = event.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { CardViewKeyValuePairsItemModel } from '../../models/card-view.models';\nimport { CardViewKeyValuePairsItemType } from '../../interfaces/card-view.interfaces';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'adf-card-view-boolitem',\n    templateUrl: './card-view-keyvaluepairsitem.component.html',\n    styleUrls: ['./card-view-keyvaluepairsitem.component.scss']\n})\n\nexport class CardViewKeyValuePairsItemComponent implements OnChanges {\n\n    @Input()\n    property: CardViewKeyValuePairsItemModel;\n\n    @Input()\n    editable: boolean = false;\n\n    values: CardViewKeyValuePairsItemType[];\n    matTableValues: MatTableDataSource<CardViewKeyValuePairsItemType>;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.values = this.property.value || [];\n        this.matTableValues = new MatTableDataSource(this.values);\n    }\n\n    isEditable(): boolean {\n        return this.editable && this.property.editable;\n    }\n\n    add(): void {\n        this.values.push({ name: '', value: '' });\n    }\n\n    remove(index: number): void {\n        this.values.splice(index, 1);\n        this.save(true);\n    }\n\n    onBlur(value): void {\n        if (value.length) {\n            this.save();\n        }\n    }\n\n    save(remove?: boolean): void {\n        const validValues = this.values.filter((i) => i.name.length && i.value.length);\n\n        if (remove || validValues.length) {\n            this.cardViewUpdateService.update(this.property, validValues);\n            this.property.value = validValues;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function getType(type: any): any {\n    return () => type;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Type } from '@angular/core';\nimport { getType } from './get-type';\n\nexport interface DynamicComponentModel { type: string; }\nexport type DynamicComponentResolveFunction = (model: DynamicComponentModel) => Type<{}>;\nexport class DynamicComponentResolver {\n    static fromType(type: Type<{}>): DynamicComponentResolveFunction {\n        return getType(type);\n    }\n}\n\nexport abstract class DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = undefined;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {};\n\n    /**\n     * Gets the currently active DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want\n     * @param defaultValue Default type returned for types that are not yet mapped\n     * @returns Resolver function\n     */\n    getComponentTypeResolver(type: string, defaultValue: Type<{}> = this.defaultValue): DynamicComponentResolveFunction {\n        if (type) {\n            return this.types[type] || DynamicComponentResolver.fromType(defaultValue);\n        }\n        return DynamicComponentResolver.fromType(defaultValue);\n    }\n\n    /**\n     * Sets or optionally replaces a DynamicComponentResolveFunction for a field type.\n     * @param type The type whose resolver you want to set\n     * @param resolver The new resolver function\n     * @param override The new resolver will only replace an existing one if this parameter is true\n     */\n    setComponentTypeResolver(type: string, resolver: DynamicComponentResolveFunction, override: boolean = true) {\n        if (!type) {\n            throw new Error(`type is null or not defined`);\n        }\n\n        if (!resolver) {\n            throw new Error(`resolver is null or not defined`);\n        }\n\n        const existing = this.types[type];\n        if (existing && !override) {\n            throw new Error(`already mapped, use override option if you intend replacing existing mapping.`);\n        }\n\n        this.types[type] = resolver;\n    }\n\n    /**\n     * Finds the component type that is needed to render a form field.\n     * @param model Form field model for the field to render\n     * @param defaultValue Default type returned for field types that are not yet mapped.\n     * @returns Component type\n     */\n    resolveComponentType(model: DynamicComponentModel, defaultValue: Type<{}> = this.defaultValue): Type<{}> {\n        if (model) {\n            const resolver = this.getComponentTypeResolver(model.type, defaultValue);\n            return resolver(model);\n        }\n        return defaultValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { CardViewDateItemComponent } from '../components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewMapItemComponent } from '../components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from '../components/card-view-textitem/card-view-textitem.component';\nimport { CardViewSelectItemComponent } from '../components/card-view-selectitem/card-view-selectitem.component';\nimport { CardViewBoolItemComponent } from '../components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewKeyValuePairsItemComponent } from '../components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CardItemTypeService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = CardViewTextItemComponent;\n\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'select': DynamicComponentResolver.fromType(CardViewSelectItemComponent),\n        'int': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'float': DynamicComponentResolver.fromType(CardViewTextItemComponent),\n        'date': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'datetime': DynamicComponentResolver.fromType(CardViewDateItemComponent),\n        'bool': DynamicComponentResolver.fromType(CardViewBoolItemComponent),\n        'map': DynamicComponentResolver.fromType(CardViewMapItemComponent),\n        'keyvaluepairs': DynamicComponentResolver.fromType(CardViewKeyValuePairsItemComponent)\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interfaces/card-view-item.interface';\nimport { CardItemTypeService } from '../../services/card-item-types.service';\nimport { CardViewContentProxyDirective } from '../../directives/card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @Input()\n    displayEmpty: boolean = true;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private cardItemTypeService: CardItemTypeService,\n                private resolver: ComponentFactoryResolver) {\n        const dynamicLifeCycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifeCycleMethods.forEach((method) => {\n            this[method] = this.proxy.bind(this, method);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        Object.keys(changes)\n            .map((changeName) => [changeName, changes[changeName]])\n            .forEach(([inputParamName, simpleChange]: [string, SimpleChange]) => {\n                this.componentReference.instance[inputParamName] = simpleChange.currentValue;\n            });\n\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const factoryClass = this.cardItemTypeService.resolveComponentType(this.property);\n\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n        this.componentReference.instance.displayEmpty = this.displayEmpty;\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemIntValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.INT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(value) && (function(x) { return (x | 0) === x; })(parseFloat(value));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport class CardViewItemFloatValidator implements CardViewItemValidator {\n\n    message = 'CORE.CARDVIEW.VALIDATORS.FLOAT_VALIDATION_ERROR';\n\n    isValid(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItemProperties, CardViewItemValidator } from '../interfaces/card-view.interfaces';\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: any;\n    editable: boolean;\n    clickable: boolean;\n    icon?: string;\n    validators?: CardViewItemValidator[];\n    data?: any;\n\n    constructor(cardViewItemProperties: CardViewItemProperties) {\n        this.label = cardViewItemProperties.label || '';\n        this.value = cardViewItemProperties.value;\n        this.key = cardViewItemProperties.key;\n        this.default = cardViewItemProperties.default;\n        this.editable = !!cardViewItemProperties.editable;\n        this.clickable = !!cardViewItemProperties.clickable;\n        this.icon = cardViewItemProperties.icon || '';\n        this.validators = cardViewItemProperties.validators || [];\n        this.data = cardViewItemProperties.data || null;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n\n    isValid(newValue: any): boolean {\n        if (!this.validators.length) {\n            return true;\n        }\n\n        return this.validators\n            .map((validator) => validator.isValid(newValue))\n            .reduce((isValidUntilNow, isValid) => isValidUntilNow && isValid, true);\n    }\n\n    getValidationErrors(value): string[] {\n        if (!this.validators.length) {\n            return [];\n        }\n\n        return this.validators.filter((validator) => !validator.isValid(value)).map((validator) => validator.message);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewBoolItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewBoolItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'bool';\n    value: boolean = false;\n    default: boolean;\n\n    constructor(cardViewBoolItemProperties: CardViewBoolItemProperties) {\n        super(cardViewBoolItemProperties);\n\n        if (cardViewBoolItemProperties.value !== undefined) {\n            this.value = !!JSON.parse(cardViewBoolItemProperties.value);\n        }\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.value;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewDateItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'date';\n    format: string = 'MMM DD YYYY';\n\n    constructor(cardViewDateItemProperties: CardViewDateItemProperties) {\n        super(cardViewDateItemProperties);\n\n        if (cardViewDateItemProperties.format) {\n            this.format = cardViewDateItemProperties.format;\n        }\n\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            return moment(this.value).format(this.format);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewDateItemModel } from './card-view-dateitem.model';\n\nexport class CardViewDatetimeItemModel extends CardViewDateItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'datetime';\n    format: string = 'MMM DD YYYY HH:mm';\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewTextItemPipeProperty, CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'text';\n    multiline?: boolean;\n    multivalued?: boolean;\n    pipes?: CardViewTextItemPipeProperty[];\n    clickCallBack?: any;\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n        this.multiline = !!cardViewTextItemProperties.multiline;\n        this.multivalued = !!cardViewTextItemProperties.multivalued;\n        this.pipes = cardViewTextItemProperties.pipes || [];\n        this.clickCallBack = cardViewTextItemProperties.clickCallBack ? cardViewTextItemProperties.clickCallBack : null;\n    }\n\n    get displayValue() {\n        if (this.isEmpty()) {\n            return this.default;\n        } else {\n            return this.applyPipes(this.value);\n        }\n    }\n\n    private applyPipes(displayValue) {\n        if (this.pipes.length) {\n            displayValue = this.pipes.reduce((accumulator, { pipe, params = [] }) => {\n                return pipe.transform(accumulator, ...params);\n            }, displayValue);\n        }\n\n        return displayValue;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemFloatValidator } from '..//validators/card-view.validators';\n\nexport class CardViewFloatItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'float';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemFloatValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseFloat(cardViewTextItemProperties.value);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewTextItemModel } from './card-view-textitem.model';\nimport { CardViewTextItemProperties } from '../interfaces/card-view.interfaces';\nimport { CardViewItemIntValidator } from '../validators/card-view.validators';\n\nexport class CardViewIntItemModel extends CardViewTextItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'int';\n\n    constructor(cardViewTextItemProperties: CardViewTextItemProperties) {\n        super(cardViewTextItemProperties);\n\n        this.validators.push(new CardViewItemIntValidator());\n        if (cardViewTextItemProperties.value) {\n            this.value = parseInt(cardViewTextItemProperties.value, 10);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewKeyValuePairsItemProperties } from '../interfaces/card-view.interfaces';\n\nexport class CardViewKeyValuePairsItemModel extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'keyvaluepairs';\n\n    constructor(cardViewKeyValuePairsItemProperties: CardViewKeyValuePairsItemProperties) {\n        super(cardViewKeyValuePairsItemProperties);\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CardViewItem } from '../interfaces/card-view-item.interface';\nimport { DynamicComponentModel } from '../../services/dynamic-component-mapper.service';\nimport { CardViewBaseItemModel } from './card-view-baseitem.model';\nimport { CardViewSelectItemProperties, CardViewSelectItemOption } from '../interfaces/card-view.interfaces';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nexport class CardViewSelectItemModel<T> extends CardViewBaseItemModel implements CardViewItem, DynamicComponentModel {\n    type: string = 'select';\n    options$: Observable<CardViewSelectItemOption<T>[]>;\n\n    constructor(cardViewSelectItemProperties: CardViewSelectItemProperties<T>) {\n        super(cardViewSelectItemProperties);\n\n        this.options$ = cardViewSelectItemProperties.options$;\n    }\n\n    get displayValue() {\n        return this.options$.pipe(\n            switchMap((options) => {\n                const option = options.find((o) => o.key === this.value);\n                return of(option ? option.label : '');\n            })\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n    MatButtonModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatIconModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatNativeDateModule,\n    MatSelectModule\n} from '@angular/material';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { CardViewContentProxyDirective } from './directives/card-view-content-proxy.directive';\nimport { CardViewComponent } from './components/card-view/card-view.component';\nimport { CardViewBoolItemComponent } from './components/card-view-boolitem/card-view-boolitem.component';\nimport { CardViewDateItemComponent } from './components/card-view-dateitem/card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './components/card-view-item-dispatcher/card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './components/card-view-mapitem/card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './components/card-view-textitem/card-view-textitem.component';\nimport { CardViewKeyValuePairsItemComponent } from './components/card-view-keyvaluepairsitem/card-view-keyvaluepairsitem.component';\nimport { CardViewSelectItemComponent } from './components/card-view-selectitem/card-view-selectitem.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        FlexLayoutModule,\n        TranslateModule.forChild(),\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatCheckboxModule,\n        MatInputModule,\n        MatTableModule,\n        MatIconModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewKeyValuePairsItemComponent,\n        CardViewSelectItemComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective\n    ],\n    entryComponents: [\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewBoolItemComponent,\n        CardViewDateItemComponent,\n        CardViewMapItemComponent,\n        CardViewTextItemComponent,\n        CardViewSelectItemComponent,\n        CardViewKeyValuePairsItemComponent\n    ]\n})\nexport class CardViewModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConfigService, AppConfigValues } from '../app-config/app-config.service';\n\n@Injectable()\nexport class DebugAppConfigService extends AppConfigService {\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    /** @override */\n    get<T>(key: string, defaultValue?: T): T {\n        if (key === AppConfigValues.OAUTHCONFIG) {\n            return <T> (JSON.parse(this.getItem(key)) || super.get<T>(key, defaultValue));\n        } else if (key === AppConfigValues.APPLICATION) {\n            return undefined;\n        } else {\n            return <T> (<any> this.getItem(key) || super.get<T>(key, defaultValue));\n        }\n    }\n\n    getItem(key: string): string | null {\n        return localStorage.getItem(key);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\n\n@Pipe({\n    name: 'adfAppConfig'\n})\nexport class AppConfigPipe implements PipeTransform {\n    constructor(private config: AppConfigService) {}\n\n    transform(value: string, fallback: any): any {\n        return this.config.get(value, fallback);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { AppConfigPipe } from './app-config.pipe';\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    declarations: [\n        AppConfigPipe\n    ],\n    exports: [\n        AppConfigPipe\n    ]\n})\nexport class AppConfigModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormSaveRepresentation } from '@alfresco/js-api';\n\nexport class FormDefinitionModel extends FormSaveRepresentation {\n    reusable: boolean = false;\n    newVersion: boolean = false;\n    formRepresentation: any;\n    formImageBase64: string = '';\n\n    constructor(id: string, name: any, lastUpdatedByFullName: string, lastUpdated: string, metadata: any) {\n        super();\n        this.formRepresentation = {\n            id: id,\n            name: name,\n            description: '',\n            version: 1,\n            lastUpdatedBy: 1,\n            lastUpdatedByFullName: lastUpdatedByFullName,\n            lastUpdated: lastUpdated,\n            stencilSetId: 0,\n            referenceId: null,\n            formDefinition: {\n                fields: [{\n                    name: 'Label',\n                    type: 'container',\n                    fieldType: 'ContainerRepresentation',\n                    numberOfColumns: 2,\n                    required: false,\n                    readOnly: false,\n                    sizeX: 2,\n                    sizeY: 1,\n                    row: -1,\n                    col: -1,\n                    fields: {'1': this.metadataToFields(metadata)}\n                }],\n                gridsterForm: false,\n                javascriptEvents: [],\n                metadata: {},\n                outcomes: [],\n                className: '',\n                style: '',\n                tabs: [],\n                variables: []\n            }\n        };\n    }\n\n    private metadataToFields(metadata: any): any[] {\n        const fields = [];\n        if (metadata) {\n            metadata.forEach(function(property) {\n                if (property) {\n                    const field = {\n                        type: 'text',\n                        id: property.name,\n                        name: property.name,\n                        required: false,\n                        readOnly: false,\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        colspan: 1,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        layout: {\n                            colspan: 1,\n                            row: -1,\n                            column: -1\n                        }\n                    };\n                    fields.push(field);\n                }\n            });\n        }\n\n        return fields;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nexport class FormFieldTypes {\n    static CONTAINER: string = 'container';\n    static GROUP: string = 'group';\n    static DYNAMIC_TABLE: string = 'dynamic-table';\n    static TEXT: string = 'text';\n    static MULTILINE_TEXT: string = 'multi-line-text';\n    static DROPDOWN: string = 'dropdown';\n    static HYPERLINK: string = 'hyperlink';\n    static RADIO_BUTTONS: string = 'radio-buttons';\n    static DISPLAY_VALUE: string = 'readonly';\n    static READONLY_TEXT: string = 'readonly-text';\n    static UPLOAD: string = 'upload';\n    static TYPEAHEAD: string = 'typeahead';\n    static FUNCTIONAL_GROUP: string = 'functional-group';\n    static PEOPLE: string = 'people';\n    static BOOLEAN: string = 'boolean';\n    static NUMBER: string = 'integer';\n    static DATE: string = 'date';\n    static AMOUNT: string = 'amount';\n    static DOCUMENT: string = 'document';\n    static DATETIME: string = 'datetime';\n    static ATTACH_FOLDER: string = 'select-folder';\n\n    static READONLY_TYPES: string[] = [\n        FormFieldTypes.HYPERLINK,\n        FormFieldTypes.DISPLAY_VALUE,\n        FormFieldTypes.READONLY_TEXT\n    ];\n\n    static isReadOnlyType(type: string) {\n        return FormFieldTypes.READONLY_TYPES.indexOf(type) > -1;\n    }\n\n    static isContainerType(type: string) {\n        return type === FormFieldTypes.CONTAINER || type === FormFieldTypes.GROUP;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormModel } from './form.model';\n\nexport abstract class FormWidgetModel {\n\n    readonly fieldType: string;\n    readonly id: string;\n    readonly name: string;\n    readonly type: string;\n    readonly tab: string;\n\n    readonly form: any;\n    readonly json: any;\n\n    constructor(form: FormModel, json: any) {\n        this.form = form;\n        this.json = json;\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this.tab = json.tab;\n        }\n    }\n}\n\nexport interface FormWidgetModelCache<T extends FormWidgetModel> {\n    [key: string]: T;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\n\nexport class ContainerColumnModel {\n\n    size: number = 12;\n    fields: FormFieldModel[] = [];\n    colspan: number = 1;\n    rowspan: number = 1;\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nexport class ErrorMessageModel {\n\n    message: string = '';\n    attributes: Map<string, string> = null;\n\n    constructor(obj?: any) {\n        this.message = obj && obj.message ? obj.message : '';\n        this.attributes = new Map();\n    }\n\n    isActive() {\n        return this.message ? true : false;\n    }\n\n    getAttributesAsJsonObj() {\n        let result = {};\n        if (this.attributes.size > 0) {\n            const obj = Object.create(null);\n            this.attributes.forEach((value, key) => {\n                obj[key] = value;\n            });\n            result = JSON.stringify(obj);\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\n\nexport interface FormFieldValidator {\n\n    isSupported(field: FormFieldModel): boolean;\n\n    validate(field: FormFieldModel): boolean;\n\n}\n\nexport class RequiredFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT,\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.BOOLEAN,\n        FormFieldTypes.TYPEAHEAD,\n        FormFieldTypes.DROPDOWN,\n        FormFieldTypes.PEOPLE,\n        FormFieldTypes.FUNCTIONAL_GROUP,\n        FormFieldTypes.RADIO_BUTTONS,\n        FormFieldTypes.UPLOAD,\n        FormFieldTypes.AMOUNT,\n        FormFieldTypes.DYNAMIC_TABLE,\n        FormFieldTypes.DATE,\n        FormFieldTypes.DATETIME,\n        FormFieldTypes.ATTACH_FOLDER\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.required;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n\n            if (field.type === FormFieldTypes.DROPDOWN) {\n                if (field.hasEmptyValue && field.emptyOption) {\n                    if (field.value === field.emptyOption.id) {\n                        return false;\n                    }\n                }\n            }\n\n            if (field.type === FormFieldTypes.RADIO_BUTTONS) {\n                const option = field.options.find((opt) => opt.id === field.value);\n                return !!option;\n            }\n\n            if (field.type === FormFieldTypes.UPLOAD) {\n                return field.value && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.DYNAMIC_TABLE) {\n                return field.value && field.value instanceof Array && field.value.length > 0;\n            }\n\n            if (field.type === FormFieldTypes.BOOLEAN) {\n                return field.value ? true : false;\n            }\n\n            if (field.value === null || field.value === undefined || field.value === '') {\n                return false;\n            }\n        }\n        return true;\n    }\n\n}\n\nexport class NumberFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    static isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (field.value === null ||\n                field.value === undefined ||\n                field.value === '') {\n                return true;\n            }\n            const valueStr = '' + field.value;\n            let pattern = new RegExp(/^-?\\d+$/);\n            if (field.enableFractions) {\n                pattern = new RegExp(/^-?[0-9]+(\\.[0-9]{1,2})?$/);\n            }\n            if (valueStr.match(pattern)) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_NUMBER';\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class DateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    // Validates that the input string is a valid date formatted as <dateFormat> (default D-M-YYYY)\n    static isValidDate(inputDate: string, dateFormat: string = 'D-M-YYYY'): boolean {\n        if (inputDate) {\n            const d = moment(inputDate, dateFormat, true);\n            return d.isValid();\n        }\n\n        return false;\n    }\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (DateFieldValidator.isValidDate(field.value, field.dateDisplayFormat)) {\n                return true;\n            }\n            field.validationSummary.message = field.dateDisplayFormat;\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinDateFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDate(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDate(field: FormFieldModel, dateFormat: string): boolean {\n        const MIN_DATE_FORMAT = 'DD-MM-YYYY';\n        let isValid = true;\n        // remove time and timezone info\n        let fieldValueData;\n        if (typeof field.value === 'string') {\n            fieldValueData = moment(field.value.split('T')[0], dateFormat);\n        } else {\n            fieldValueData = field.value;\n        }\n        const min = moment(field.minValue, MIN_DATE_FORMAT);\n\n        if (fieldValueData.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).toLocaleUpperCase());\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateFieldValidator implements FormFieldValidator {\n\n    MAX_DATE_FORMAT = 'DD-MM-YYYY';\n\n    private supportedTypes = [\n        FormFieldTypes.DATE\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                return false;\n            }\n\n            // remove time and timezone info\n            let d;\n            if (typeof field.value === 'string') {\n                d = moment(field.value.split('T')[0], dateFormat);\n            } else {\n                d = field.value;\n            }\n            const max = moment(field.maxValue, this.MAX_DATE_FORMAT);\n\n            if (d.isAfter(max)) {\n                field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n                field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).toLocaleUpperCase());\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport class MinDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MIN_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.minValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const min = moment(field.minValue, this.MIN_DATETIME_FORMAT);\n\n        if (fieldValueDate.isBefore(min)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', min.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MaxDateTimeFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.DATETIME\n    ];\n    MAX_DATETIME_FORMAT = 'YYYY-MM-DD hh:mm AZ';\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.maxValue;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        let isValid = true;\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const dateFormat = field.dateDisplayFormat;\n\n            if (!DateFieldValidator.isValidDate(field.value, dateFormat)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_DATE';\n                isValid = false;\n            } else {\n                isValid = this.checkDateTime(field, dateFormat);\n            }\n        }\n        return isValid;\n    }\n\n    private checkDateTime(field: FormFieldModel, dateFormat: string): boolean {\n        let isValid = true;\n        let fieldValueDate;\n\n        if (typeof field.value === 'string') {\n            fieldValueDate = moment(field.value, dateFormat);\n        } else {\n            fieldValueDate = field.value;\n        }\n        const max = moment(field.maxValue, this.MAX_DATETIME_FORMAT);\n\n        if (fieldValueDate.isAfter(max)) {\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', max.format(field.dateDisplayFormat).replace(':', '-'));\n            isValid = false;\n        }\n        return isValid;\n    }\n}\n\nexport class MinLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.minLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length >= field.minLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.AT_LEAST_LONG`;\n            field.validationSummary.attributes.set('minLength', field.minLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MaxLengthFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            field.maxLength > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length <= field.maxLength) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NO_LONGER_THAN`;\n            field.validationSummary.attributes.set('maxLength', field.maxLength.toLocaleString());\n            return false;\n        }\n        return true;\n    }\n}\n\nexport class MinValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.minValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const minValue: number = +field.minValue;\n\n            if (value >= minValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_LESS_THAN`;\n            field.validationSummary.attributes.set('minValue', field.minValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class MaxValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.NUMBER,\n        FormFieldTypes.AMOUNT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 &&\n            NumberFieldValidator.isNumber(field.maxValue);\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            const value: number = +field.value;\n            const maxValue: number = +field.maxValue;\n\n            if (value <= maxValue) {\n                return true;\n            }\n            field.validationSummary.message = `FORM.FIELD.VALIDATOR.NOT_GREATER_THAN`;\n            field.validationSummary.attributes.set('maxValue', field.maxValue.toLocaleString());\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport class RegExFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TEXT,\n        FormFieldTypes.MULTILINE_TEXT\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field &&\n            this.supportedTypes.indexOf(field.type) > -1 && !!field.regexPattern;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.value && field.isVisible) {\n            if (field.value.length > 0 && field.value.match(new RegExp('^' + field.regexPattern + '$'))) {\n                return true;\n            }\n            field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            return false;\n        }\n        return true;\n    }\n\n}\n\nexport class FixedValueFieldValidator implements FormFieldValidator {\n\n    private supportedTypes = [\n        FormFieldTypes.TYPEAHEAD\n    ];\n\n    isSupported(field: FormFieldModel): boolean {\n        return field && this.supportedTypes.indexOf(field.type) > -1;\n    }\n\n    hasValidNameOrValidId(field: FormFieldModel): boolean {\n        return this.hasValidName(field) || this.hasValidId(field);\n    }\n\n    hasValidName(field: FormFieldModel) {\n        return field.options.find((item) => item.name && item.name.toLocaleLowerCase() === field.value.toLocaleLowerCase()) ? true : false;\n    }\n\n    hasValidId(field: FormFieldModel): boolean {\n        return field.options.find((item) => item.id === field.value) ? true : false;\n    }\n\n    hasStringValue(field: FormFieldModel) {\n        return field.value && typeof field.value === 'string';\n    }\n\n    hasOptions(field: FormFieldModel) {\n        return field.options && field.options.length > 0;\n    }\n\n    validate(field: FormFieldModel): boolean {\n        if (this.isSupported(field) && field.isVisible) {\n            if (this.hasStringValue(field) && this.hasOptions(field) && !this.hasValidNameOrValidId(field)) {\n                field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport const FORM_FIELD_VALIDATORS = [\n    new RequiredFieldValidator(),\n    new NumberFieldValidator(),\n    new MinLengthFieldValidator(),\n    new MaxLengthFieldValidator(),\n    new MinValueFieldValidator(),\n    new MaxValueFieldValidator(),\n    new RegExFieldValidator(),\n    new DateFieldValidator(),\n    new MinDateFieldValidator(),\n    new MaxDateFieldValidator(),\n    new FixedValueFieldValidator(),\n    new MinDateTimeFieldValidator(),\n    new MaxDateTimeFieldValidator()\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\nimport moment from 'moment-es6';\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { ContainerColumnModel } from './container-column.model';\nimport { ErrorMessageModel } from './error-message.model';\nimport { FormFieldMetadata } from './form-field-metadata';\nimport { FormFieldOption } from './form-field-option';\nimport { FormFieldTypes } from './form-field-types';\nimport { NumberFieldValidator } from './form-field-validator';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\n// Maps to FormFieldRepresentation\nexport class FormFieldModel extends FormWidgetModel {\n\n    private _value: string;\n    private _readOnly: boolean = false;\n    private _isValid: boolean = true;\n    private _required: boolean = false;\n\n    readonly defaultDateFormat: string = 'D-M-YYYY';\n    readonly defaultDateTimeFormat: string = 'D-M-YYYY hh:mm A';\n\n    // model members\n    fieldType: string;\n    id: string;\n    name: string;\n    type: string;\n    overrideId: boolean;\n    tab: string;\n    rowspan: number = 1;\n    colspan: number = 1;\n    placeholder: string = null;\n    minLength: number = 0;\n    maxLength: number = 0;\n    minValue: string;\n    maxValue: string;\n    regexPattern: string;\n    options: FormFieldOption[] = [];\n    restUrl: string;\n    restResponsePath: string;\n    restIdProperty: string;\n    restLabelProperty: string;\n    hasEmptyValue: boolean;\n    className: string;\n    optionType: string;\n    params: FormFieldMetadata = {};\n    hyperlinkUrl: string;\n    displayText: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel = null;\n    enableFractions: boolean = false;\n    currency: string = null;\n    dateDisplayFormat: string = this.dateDisplayFormat || this.defaultDateFormat;\n\n    // container model members\n    numberOfColumns: number = 1;\n    fields: FormFieldModel[] = [];\n    columns: ContainerColumnModel[] = [];\n\n    // util members\n    emptyOption: FormFieldOption;\n    validationSummary: ErrorMessageModel;\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(v: any) {\n        this._value = v;\n        this.updateForm();\n    }\n\n    get readOnly(): boolean {\n        if (this.form && this.form.readOnly) {\n            return true;\n        }\n        return this._readOnly;\n    }\n\n    set readOnly(readOnly: boolean) {\n        this._readOnly = readOnly;\n        this.updateForm();\n    }\n\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = value;\n        this.updateForm();\n    }\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    validate(): boolean {\n        this.validationSummary = new ErrorMessageModel();\n\n        if (!this.readOnly) {\n            const validators = this.form.fieldValidators || [];\n            for (const validator of validators) {\n                if (!validator.validate(this)) {\n                    this._isValid = false;\n                    return this._isValid;\n                }\n            }\n        }\n\n        this._isValid = true;\n        return this._isValid;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.fieldType = json.fieldType;\n            this.id = json.id;\n            this.name = json.name;\n            this.type = json.type;\n            this._required = <boolean> json.required;\n            this._readOnly = <boolean> json.readOnly || json.type === 'readonly';\n            this.overrideId = <boolean> json.overrideId;\n            this.tab = json.tab;\n            this.restUrl = json.restUrl;\n            this.restResponsePath = json.restResponsePath;\n            this.restIdProperty = json.restIdProperty;\n            this.restLabelProperty = json.restLabelProperty;\n            this.colspan = <number> json.colspan;\n            this.minLength = <number> json.minLength || 0;\n            this.maxLength = <number> json.maxLength || 0;\n            this.minValue = json.minValue;\n            this.maxValue = json.maxValue;\n            this.regexPattern = json.regexPattern;\n            this.options = <FormFieldOption[]> json.options || [];\n            this.hasEmptyValue = <boolean> json.hasEmptyValue;\n            this.className = json.className;\n            this.optionType = json.optionType;\n            this.params = <FormFieldMetadata> json.params || {};\n            this.hyperlinkUrl = json.hyperlinkUrl;\n            this.displayText = json.displayText;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n            this.enableFractions = <boolean> json.enableFractions;\n            this.currency = json.currency;\n            this.dateDisplayFormat = json.dateDisplayFormat || this.getDefaultDateFormat(json);\n            this._value = this.parseValue(json);\n            this.validationSummary = new ErrorMessageModel();\n\n            if (json.placeholder && json.placeholder !== '' && json.placeholder !== 'null') {\n                this.placeholder = json.placeholder;\n            }\n\n            if (FormFieldTypes.isReadOnlyType(json.type)) {\n                if (json.params && json.params.field) {\n                    if (form.processVariables) {\n                        const processVariable = this.getProcessVariableValue(json.params.field, form);\n                        if (processVariable) {\n                            this.value = processVariable;\n                        }\n                    } else if (json.params.field.responseVariable) {\n                        const formVariable = this.getVariablesValue(json.params.field.name, form);\n                        if (formVariable) {\n                            this.value = formVariable;\n                        }\n                    }\n                }\n            }\n\n            if (FormFieldTypes.isContainerType(json.type)) {\n                this.containerFactory(json, form);\n            }\n        }\n\n        if (this.hasEmptyValue && this.options && this.options.length > 0) {\n            this.emptyOption = this.options[0];\n        }\n\n        this.updateForm();\n    }\n\n    private getDefaultDateFormat(jsonField: any): string {\n        let originalType = jsonField.type;\n        if (FormFieldTypes.isReadOnlyType(jsonField.type) &&\n            jsonField.params &&\n            jsonField.params.field) {\n            originalType = jsonField.params.field.type;\n        }\n        return originalType === FormFieldTypes.DATETIME ? this.defaultDateTimeFormat : this.defaultDateFormat;\n    }\n\n    private isTypeaheadFieldType(type: string): boolean {\n        return type === 'typeahead' ? true : false;\n    }\n\n    private getFieldNameWithLabel(name: string): string {\n        return name += '_LABEL';\n    }\n\n    private getProcessVariableValue(field: any, form: FormModel) {\n        let fieldName = field.name;\n        if (this.isTypeaheadFieldType(field.type)) {\n            fieldName = this.getFieldNameWithLabel(field.id);\n        }\n        return this.findProcessVariableValue(fieldName, form);\n    }\n\n    private getVariablesValue(variableName: string, form: FormModel) {\n        const variable = form.json.variables.find((currentVariable) => {\n            return currentVariable.name === variableName;\n        });\n\n        if (variable) {\n            if (variable.type === 'boolean') {\n                return JSON.parse(variable.value);\n            }\n\n            return variable.value;\n        }\n\n        return null;\n    }\n\n    private findProcessVariableValue(variableName: string, form: FormModel) {\n        if (form.processVariables) {\n            const variable = form.processVariables.find((currentVariable) => {\n                return currentVariable.name === variableName;\n            });\n\n            if (variable) {\n                return variable.type === 'boolean' ? JSON.parse(variable.value) : variable.value;\n            }\n        }\n\n        return undefined;\n    }\n\n    private containerFactory(json: any, form: FormModel): void {\n        this.numberOfColumns = <number> json.numberOfColumns || 1;\n\n        this.fields = json.fields;\n\n        this.rowspan = 1;\n        this.colspan = 1;\n\n        if (json.fields) {\n            for (const currentField in json.fields) {\n                if (json.fields.hasOwnProperty(currentField)) {\n                    const col = new ContainerColumnModel();\n\n                    const fields: FormFieldModel[] = (json.fields[currentField] || []).map((f) => new FormFieldModel(form, f));\n                    col.fields = fields;\n                    col.rowspan = json.fields[currentField].length;\n\n                    col.fields.forEach((colFields: any) => {\n                        this.colspan = colFields.colspan > this.colspan ? colFields.colspan : this.colspan;\n                    });\n\n                    this.rowspan = this.rowspan < col.rowspan ? col.rowspan : this.rowspan;\n                    this.columns.push(col);\n                }\n            }\n        }\n    }\n\n    parseValue(json: any): any {\n        let value = json.value;\n\n        /*\n         This is needed due to Activiti issue related to reading dropdown values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.DROPDOWN) {\n            if (json.hasEmptyValue && json.options) {\n                const options = <FormFieldOption[]> json.options || [];\n                if (options.length > 0) {\n                    const emptyOption = json.options[0];\n                    if (value === '' || value === emptyOption.id || value === emptyOption.name) {\n                        value = emptyOption.id;\n                    } else if (value.id && value.name) {\n                        value = value.id;\n                    }\n                }\n            }\n        }\n\n        /*\n         This is needed due to Activiti issue related to reading radio button values as value string\n         but saving back as object: { id: <id>, name: <name> }\n         */\n        if (json.type === FormFieldTypes.RADIO_BUTTONS) {\n            // Activiti has a bug with default radio button value where initial selection passed as `name` value\n            // so try resolving current one with a fallback to first entry via name or id\n            // TODO: needs to be reported and fixed at Activiti side\n            const entry: FormFieldOption[] = this.options.filter((opt) =>\n                opt.id === value || opt.name === value || (value && (opt.id === value.id || opt.name === value.name)));\n            if (entry.length > 0) {\n                value = entry[0].id;\n            }\n        }\n\n        /*\n         This is needed due to Activiti displaying/editing dates in d-M-YYYY format\n         but storing on server in ISO8601 format (i.e. 2013-02-04T22:44:30.652Z)\n         */\n        if (this.isDateField(json) || this.isDateTimeField(json)) {\n            if (value) {\n                let dateValue;\n                if (NumberFieldValidator.isNumber(value)) {\n                    dateValue = moment(value);\n                } else {\n                    dateValue = this.isDateTimeField(json) ? moment(value, 'YYYY-MM-DD hh:mm A') : moment(value.split('T')[0], 'YYYY-M-D');\n                }\n                if (dateValue && dateValue.isValid()) {\n                    value = dateValue.format(this.dateDisplayFormat);\n                }\n            }\n        }\n\n        return value;\n    }\n\n    updateForm() {\n        if (!this.form) {\n            return;\n        }\n\n        switch (this.type) {\n            case FormFieldTypes.DROPDOWN:\n                /*\n                 This is needed due to Activiti reading dropdown values as string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                if (this.value === 'empty' || this.value === '') {\n                    this.form.values[this.id] = {};\n                } else {\n                    const entry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                    if (entry.length > 0) {\n                        this.form.values[this.id] = entry[0];\n                    }\n                }\n                break;\n            case FormFieldTypes.RADIO_BUTTONS:\n                /*\n                 This is needed due to Activiti issue related to reading radio button values as value string\n                 but saving back as object: { id: <id>, name: <name> }\n                 */\n                const rbEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value);\n                if (rbEntry.length > 0) {\n                    this.form.values[this.id] = rbEntry[0];\n                }\n                break;\n            case FormFieldTypes.UPLOAD:\n                this.form.hasUpload = true;\n                if (this.value && this.value.length > 0) {\n                    this.form.values[this.id] = this.value.map((elem) => elem.id).join(',');\n                } else {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.TYPEAHEAD:\n                const taEntry: FormFieldOption[] = this.options.filter((opt) => opt.id === this.value || opt.name === this.value);\n                if (taEntry.length > 0) {\n                    this.form.values[this.id] = taEntry[0];\n                } else if (this.options.length > 0) {\n                    this.form.values[this.id] = null;\n                }\n                break;\n            case FormFieldTypes.DATE:\n                const dateValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateValue && dateValue.isValid()) {\n                    this.form.values[this.id] = `${dateValue.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.DATETIME:\n                const dateTimeValue = moment(this.value, this.dateDisplayFormat, true);\n                if (dateTimeValue && dateTimeValue.isValid()) {\n                    /* cspell:disable-next-line */\n                    this.form.values[this.id] = dateTimeValue.format('YYYY-MM-DDTHH:mm:ssZ');\n                } else {\n                    this.form.values[this.id] = null;\n                    this._value = this.value;\n                }\n                break;\n            case FormFieldTypes.NUMBER:\n                this.form.values[this.id] = parseInt(this.value, 10);\n                break;\n            case FormFieldTypes.AMOUNT:\n                this.form.values[this.id] = this.enableFractions ? parseFloat(this.value) : parseInt(this.value, 10);\n                break;\n            default:\n                if (!FormFieldTypes.isReadOnlyType(this.type) && !this.isInvalidFieldType(this.type)) {\n                    this.form.values[this.id] = this.value;\n                }\n        }\n\n        this.form.onFormFieldChanged(this);\n    }\n\n    /**\n     * Skip the invalid field type\n     * @param type\n     */\n    isInvalidFieldType(type: string) {\n        if (type === 'container') {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    getOptionName(): string {\n        const option: FormFieldOption = this.options.find((opt) => opt.id === this.value);\n        return option ? option.name : null;\n    }\n\n    hasOptions() {\n        return this.options && this.options.length > 0;\n    }\n\n    private isDateField(json: any) {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATE ) ||\n                json.type === FormFieldTypes.DATE;\n    }\n\n    private isDateTimeField(json: any): boolean {\n        return (json.params &&\n                json.params.field &&\n                json.params.field.type === FormFieldTypes.DATETIME) ||\n                json.type === FormFieldTypes.DATETIME;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\n\nexport class FormEvent {\n\n    private isDefaultPrevented: boolean = false;\n\n    readonly form: FormModel;\n\n    constructor(form: FormModel) {\n        this.form = form;\n    }\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormFieldEvent extends FormEvent {\n\n    readonly field: FormFieldModel;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form);\n        this.field = field;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateFormFieldEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel, field: FormFieldModel) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\nimport { FormFieldModel } from '../components/widgets/core/form-field.model';\n\nexport class ValidateFormEvent extends FormEvent {\n\n    isValid = true;\n    errorsField: FormFieldModel[] = [];\n\n    constructor(form: FormModel) {\n        super(form);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormFieldModel } from './form-field.model';\nimport { FormWidgetModel } from './form-widget.model';\n\nexport class ContainerModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n\n    get isVisible(): boolean {\n        return this.field.isVisible;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field.form, field.json);\n\n        if (field) {\n            this.field = field;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class FormOutcomeModel extends FormWidgetModel {\n\n    static SAVE_ACTION: string = 'SAVE';            // Activiti 'Save' action name\n    static COMPLETE_ACTION: string = 'COMPLETE';    // Activiti 'Complete' action name\n    static START_PROCESS_ACTION: string = 'START PROCESS';    // Activiti 'Start Process' action name\n\n    isSystem: boolean = false;\n    isSelected: boolean = false;\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.isSystem = json.isSystem ? true : false;\n            this.isSelected = form && json.name === form.selectedOutcome ? true : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { WidgetVisibilityModel } from '../../../models/widget-visibility.model';\nimport { FormWidgetModel } from './form-widget.model';\nimport { FormModel } from './form.model';\n\nexport class TabModel extends FormWidgetModel {\n\n    title: string;\n    isVisible: boolean = true;\n    visibilityCondition: WidgetVisibilityModel;\n\n    fields: FormWidgetModel[] = [];\n\n    hasContent(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    constructor(form: FormModel, json?: any) {\n        super(form, json);\n\n        if (json) {\n            this.title = json.title;\n            this.visibilityCondition = <WidgetVisibilityModel> json.visibilityCondition;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormValues } from './widgets/core/form-values';\nimport { TabModel } from './widgets/core/tab.model';\nimport { FormWidgetModel } from './widgets/core/form-widget.model';\nimport { FormOutcomeModel } from './widgets/core/form-outcome.model';\nimport { FormFieldModel } from './widgets/core/form-field.model';\nimport { ContainerModel } from './widgets/core/container.model';\n\nexport abstract class FormBaseModel {\n\n    static UNSET_TASK_NAME: string = 'Nameless task';\n    static SAVE_OUTCOME: string = '$save';\n    static COMPLETE_OUTCOME: string = '$complete';\n    static START_PROCESS_OUTCOME: string = '$startProcess';\n\n    json: any;\n    isValid: boolean;\n\n    values: FormValues = {};\n    tabs: TabModel[] = [];\n    fields: FormWidgetModel[] = [];\n    outcomes: FormOutcomeModel[] = [];\n\n    className: string;\n    readOnly: boolean = false;\n    taskName;\n\n    hasTabs(): boolean {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    hasOutcomes(): boolean {\n        return this.outcomes && this.outcomes.length > 0;\n    }\n\n    getFieldById(fieldId: string): FormFieldModel {\n        return this.getFormFields().find((field) => field.id === fieldId);\n    }\n\n    // TODO: consider evaluating and caching once the form is loaded\n    getFormFields(): FormFieldModel[] {\n        const formFieldModel: FormFieldModel[] = [];\n\n        for (let i = 0; i < this.fields.length; i++) {\n            const field = this.fields[i];\n\n            if (field instanceof ContainerModel) {\n                const container = <ContainerModel> field;\n                formFieldModel.push(container.field);\n\n                container.field.columns.forEach((column) => {\n                    formFieldModel.push(...column.fields);\n                });\n            }\n        }\n\n        return formFieldModel;\n    }\n\n    abstract validateForm();\n    abstract validateField(field: FormFieldModel);\n    abstract onFormFieldChanged(field: FormFieldModel);\n    abstract markAsInvalid();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { FormFieldEvent } from './../../../events/form-field.event';\nimport { ValidateFormFieldEvent } from './../../../events/validate-form-field.event';\nimport { ValidateFormEvent } from './../../../events/validate-form.event';\nimport { FormService } from './../../../services/form.service';\nimport { ContainerModel } from './container.model';\nimport { FormFieldTemplates } from './form-field-templates';\nimport { FormFieldTypes } from './form-field-types';\nimport { FormFieldModel } from './form-field.model';\nimport { FormOutcomeModel } from './form-outcome.model';\nimport { FormValues } from './form-values';\nimport { FormWidgetModel, FormWidgetModelCache } from './form-widget.model';\nimport { TabModel } from './tab.model';\n\nimport {\n    FORM_FIELD_VALIDATORS,\n    FormFieldValidator\n} from './form-field-validator';\nimport { FormBaseModel } from '../../form-base.model';\n\nexport class FormModel extends FormBaseModel {\n\n    readonly id: number;\n    readonly name: string;\n    readonly taskId: string;\n    readonly taskName: string = FormModel.UNSET_TASK_NAME;\n    processDefinitionId: string;\n    private _isValid: boolean = true;\n\n    get isValid(): boolean {\n        return this._isValid;\n    }\n\n    customFieldTemplates: FormFieldTemplates = {};\n    fieldValidators: FormFieldValidator[] = [...FORM_FIELD_VALIDATORS];\n    readonly selectedOutcome: string;\n\n    processVariables: any;\n\n    constructor(json?: any, formValues?: FormValues, readOnly: boolean = false, protected formService?: FormService) {\n        super();\n        this.readOnly = readOnly;\n\n        if (json) {\n            this.json = json;\n\n            this.id = json.id;\n            this.name = json.name;\n            this.taskId = json.taskId;\n            this.taskName = json.taskName || json.name || FormModel.UNSET_TASK_NAME;\n            this.processDefinitionId = json.processDefinitionId;\n            this.customFieldTemplates = json.customFieldTemplates || {};\n            this.selectedOutcome = json.selectedOutcome || {};\n            this.className = json.className || '';\n\n            const tabCache: FormWidgetModelCache<TabModel> = {};\n\n            this.processVariables = json.processVariables;\n\n            this.tabs = (json.tabs || []).map((t) => {\n                const model = new TabModel(this, t);\n                tabCache[model.id] = model;\n                return model;\n            });\n\n            this.fields = this.parseRootFields(json);\n\n            if (formValues) {\n                this.loadData(formValues);\n            }\n\n            for (let i = 0; i < this.fields.length; i++) {\n                const field = this.fields[i];\n                if (field.tab) {\n                    const tab = tabCache[field.tab];\n                    if (tab) {\n                        tab.fields.push(field);\n                    }\n                }\n            }\n\n            if (json.fields) {\n                const saveOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.SAVE_OUTCOME,\n                    name: 'SAVE',\n                    isSystem: true\n                });\n                const completeOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.COMPLETE_OUTCOME,\n                    name: 'COMPLETE',\n                    isSystem: true\n                });\n                const startProcessOutcome = new FormOutcomeModel(this, {\n                    id: FormModel.START_PROCESS_OUTCOME,\n                    name: 'START PROCESS',\n                    isSystem: true\n                });\n\n                const customOutcomes = (json.outcomes || []).map((obj) => new FormOutcomeModel(this, obj));\n\n                this.outcomes = [saveOutcome].concat(\n                    customOutcomes.length > 0 ? customOutcomes : [completeOutcome, startProcessOutcome]\n                );\n            }\n        }\n\n        this.validateForm();\n    }\n\n    onFormFieldChanged(field: FormFieldModel) {\n        this.validateField(field);\n        if (this.formService) {\n            this.formService.formFieldValueChanged.next(new FormFieldEvent(this, field));\n        }\n    }\n\n    markAsInvalid() {\n        this._isValid = false;\n    }\n\n    /**\n     * Validates entire form and all form fields.\n     *\n     * @memberof FormModel\n     */\n    validateForm(): void {\n        const validateFormEvent: any = new ValidateFormEvent(this);\n\n        const errorsField: FormFieldModel[] = [];\n\n        const fields = this.getFormFields();\n        for (let i = 0; i < fields.length; i++) {\n            if (!fields[i].validate()) {\n                errorsField.push(fields[i]);\n            }\n        }\n\n        this._isValid = errorsField.length > 0 ? false : true;\n\n        if (this.formService) {\n            validateFormEvent.isValid = this._isValid;\n            validateFormEvent.errorsField = errorsField;\n            this.formService.validateForm.next(validateFormEvent);\n        }\n\n    }\n\n    /**\n     * Validates a specific form field, triggers form validation.\n     *\n     * @param field Form field to validate.\n     * @memberof FormModel\n     */\n    validateField(field: FormFieldModel): void {\n        if (!field) {\n            return;\n        }\n\n        const validateFieldEvent = new ValidateFormFieldEvent(this, field);\n\n        if (this.formService) {\n            this.formService.validateFormField.next(validateFieldEvent);\n        }\n\n        if (!validateFieldEvent.isValid) {\n            this._isValid = false;\n            return;\n        }\n\n        if (validateFieldEvent.defaultPrevented) {\n            return;\n        }\n\n        if (!field.validate()) {\n            this._isValid = false;\n        }\n\n        this.validateForm();\n    }\n\n    // Activiti supports 3 types of root fields: container|group|dynamic-table\n    private parseRootFields(json: any): FormWidgetModel[] {\n        let fields = [];\n\n        if (json.fields) {\n            fields = json.fields;\n        } else if (json.formDefinition && json.formDefinition.fields) {\n            fields = json.formDefinition.fields;\n        }\n\n        const formWidgetModel: FormWidgetModel[] = [];\n\n        for (const field of fields) {\n            if (field.type === FormFieldTypes.DISPLAY_VALUE) {\n                // workaround for dynamic table on a completed/readonly form\n                if (field.params) {\n                    const originalField = field.params['field'];\n                    if (originalField.type === FormFieldTypes.DYNAMIC_TABLE) {\n                        formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n                    }\n                }\n            } else {\n                formWidgetModel.push(new ContainerModel(new FormFieldModel(this, field)));\n            }\n        }\n\n        return formWidgetModel;\n    }\n\n    // Loads external data and overrides field values\n    // Typically used when form definition and form data coming from different sources\n    private loadData(formValues: FormValues) {\n        for (const field of this.getFormFields()) {\n            if (formValues[field.id]) {\n                field.json.value = formValues[field.id];\n                field.value = field.parseValue(field.json);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { FormOutcomeModel } from './form-outcome.model';\n\nexport class FormOutcomeEvent {\n\n    private _outcome: FormOutcomeModel;\n    private _defaultPrevented: boolean = false;\n\n    get outcome(): FormOutcomeModel {\n        return this._outcome;\n    }\n\n    get defaultPrevented() {\n        return this._defaultPrevented;\n    }\n\n    constructor(outcome: FormOutcomeModel) {\n        this._outcome = outcome;\n    }\n\n    preventDefault() {\n        this._defaultPrevented = true;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\n import { RelatedContentRepresentation } from '@alfresco/js-api';\n\n export class ContentLinkModel implements RelatedContentRepresentation {\n\n    contentAvailable: boolean;\n    created: Date;\n    createdBy: any;\n    id: number;\n    link: boolean;\n    mimeType: string;\n    name: string;\n    previewStatus: string;\n    relatedContent: boolean;\n    simpleType: string;\n    thumbnailUrl: string;\n    contentRawUrl: string;\n    contentBlob: Blob;\n    thumbnailStatus: string;\n\n    constructor(obj?: any) {\n        this.contentAvailable = obj && obj.contentAvailable;\n        this.created = obj && obj.created;\n        this.createdBy = obj && obj.createdBy || {};\n        this.id = obj && obj.id;\n        this.link = obj && obj.link;\n        this.mimeType = obj && obj.mimeType;\n        this.name = obj && obj.name;\n        this.previewStatus = obj && obj.previewStatus;\n        this.relatedContent = obj && obj.relatedContent;\n        this.simpleType = obj && obj.simpleType;\n        this.thumbnailStatus = obj && obj.thumbnailStatus;\n    }\n\n    hasPreviewStatus(): boolean {\n        return this.previewStatus === 'supported' ? true : false;\n    }\n\n    isTypeImage(): boolean {\n        return this.simpleType === 'image' ? true : false;\n    }\n\n    isTypePdf(): boolean {\n        return this.simpleType === 'pdf' ? true : false;\n    }\n\n    isTypeDoc(): boolean {\n        return this.simpleType === 'word' || this.simpleType === 'content' ? true : false;\n    }\n\n    isThumbnailReady(): boolean {\n        return this.thumbnailStatus === 'created';\n    }\n\n    isThumbnailSupported(): boolean {\n        return this.isTypeImage() || ((this.isTypePdf() || this.isTypeDoc()) && this.isThumbnailReady());\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogService } from '../../services/log.service';\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormModel } from '../components/widgets/core/form.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EcmModelService {\n\n    public static MODEL_NAMESPACE: string = 'activitiForms';\n    public static MODEL_NAME: string = 'activitiFormsModel';\n    public static TYPE_MODEL: string = 'cm:folder';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public createEcmTypeForActivitiForm(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchActivitiEcmModel().subscribe(\n                (model) => {\n                    if (!model) {\n                        this.createActivitiEcmModel(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    } else {\n                        this.saveFomType(formName, form).subscribe((typeForm) => {\n                            observer.next(typeForm);\n                            observer.complete();\n                        });\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n\n    }\n\n    searchActivitiEcmModel() {\n        return this.getEcmModels().pipe(map(function (ecmModels: any) {\n            return ecmModels.list.entries.find((model) => model.entry.name === EcmModelService.MODEL_NAME);\n        }));\n    }\n\n    createActivitiEcmModel(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmModel(EcmModelService.MODEL_NAME, EcmModelService.MODEL_NAMESPACE).subscribe(\n                (model) => {\n                    this.logService.info('model created', model);\n                    this.activeEcmModel(EcmModelService.MODEL_NAME).subscribe(\n                        (modelActive) => {\n                            this.logService.info('model active', modelActive);\n                            this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                                observer.next(typeCreated);\n                                observer.complete();\n                            });\n                        },\n                        (err) => this.handleError(err)\n                    );\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    saveFomType(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                (ecmType) => {\n                    this.logService.info('custom types', ecmType);\n                    if (!ecmType) {\n                        this.createEcmTypeWithProperties(formName, form).subscribe((typeCreated) => {\n                            observer.next(typeCreated);\n                            observer.complete();\n                        });\n                    } else {\n                        observer.next(ecmType);\n                        observer.complete();\n                    }\n                },\n                (err) => this.handleError(err)\n            );\n        });\n    }\n\n    public createEcmTypeWithProperties(formName: string, form: FormModel): Observable<any> {\n        return new Observable((observer) => {\n            this.createEcmType(formName, EcmModelService.MODEL_NAME, EcmModelService.TYPE_MODEL).subscribe(\n                (typeCreated) => {\n                    this.logService.info('type Created', typeCreated);\n                    this.addPropertyToAType(EcmModelService.MODEL_NAME, formName, form).subscribe(\n                        (propertyAdded) => {\n                            this.logService.info('property Added', propertyAdded);\n                            observer.next(typeCreated);\n                            observer.complete();\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    public searchEcmType(typeName: string, modelName: string): Observable<any> {\n        return this.getEcmType(modelName).pipe(map(function (customTypes: any) {\n            return customTypes.list.entries.find((type) => type.entry.prefixedName === typeName || type.entry.title === typeName);\n        }));\n    }\n\n    public activeEcmModel(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.activateCustomModel(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmModel(modelName: string, nameSpace: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.createCustomModel('DRAFT', '', modelName, modelName, nameSpace))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmModels(): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomModel())\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public getEcmType(modelName: string): Observable<any> {\n        return from(this.apiService.getInstance().core.customModelApi.getAllCustomType(modelName))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public createEcmType(typeName: string, modelName: string, parentType: string): Observable<any> {\n        const name = this.cleanNameType(typeName);\n\n        return from(this.apiService.getInstance().core.customModelApi.createCustomType(modelName, name, parentType, typeName, ''))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    public addPropertyToAType(modelName: string, typeName: string, formFields: any) {\n        const name = this.cleanNameType(typeName);\n\n        const properties = [];\n        if (formFields && formFields.values) {\n            for (const key in formFields.values) {\n                if (key) {\n                    properties.push({\n                        name: key,\n                        title: key,\n                        description: key,\n                        dataType: 'd:text',\n                        multiValued: false,\n                        mandatory: false,\n                        mandatoryEnforced: false\n                    });\n                }\n            }\n        }\n\n        return from(this.apiService.getInstance().core.customModelApi.addPropertyToType(modelName, name, properties))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n\n    }\n\n    cleanNameType(name: string): string {\n        let cleanName = name;\n        if (name.indexOf(':') !== -1) {\n            cleanName = name.split(':')[1];\n        }\n        return cleanName.replace(/[^a-zA-Z ]/g, '');\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    handleError(err: any): any {\n        this.logService.error(err);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { UserProcessModel } from '../../models';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, from, of, throwError } from 'rxjs';\nimport { FormDefinitionModel } from '../models/form-definition.model';\nimport { ContentLinkModel } from './../components/widgets/core/content-link.model';\nimport { GroupModel } from './../components/widgets/core/group.model';\nimport { FormModel, FormOutcomeEvent, FormOutcomeModel, FormValues } from './../components/widgets/core/index';\nimport {\n    FormErrorEvent, FormEvent, FormFieldEvent,\n    ValidateDynamicTableRowEvent, ValidateFormEvent, ValidateFormFieldEvent\n} from './../events/index';\nimport { EcmModelService } from './ecm-model.service';\nimport { map, catchError, switchMap, combineAll, defaultIfEmpty } from 'rxjs/operators';\nimport {\n    Activiti,\n    CompleteFormRepresentation,\n    SaveFormRepresentation\n} from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    formLoaded = new Subject<FormEvent>();\n    formDataRefreshed = new Subject<FormEvent>();\n    formFieldValueChanged = new Subject<FormFieldEvent>();\n    formEvents = new Subject<Event>();\n    taskCompleted = new Subject<FormEvent>();\n    taskCompletedError = new Subject<FormErrorEvent>();\n    taskSaved = new Subject<FormEvent>();\n    taskSavedError = new Subject<FormErrorEvent>();\n    formContentClicked = new Subject<ContentLinkModel>();\n\n    validateForm = new Subject<ValidateFormEvent>();\n    validateFormField = new Subject<ValidateFormFieldEvent>();\n    validateDynamicTableRow = new Subject<ValidateDynamicTableRowEvent>();\n\n    executeOutcome = new Subject<FormOutcomeEvent>();\n\n    constructor(private ecmModelService: EcmModelService,\n                private apiService: AlfrescoApiService,\n                protected logService: LogService) {\n    }\n\n    private get taskApi(): Activiti.TaskApi {\n        return this.apiService.getInstance().activiti.taskApi;\n    }\n\n    private get modelsApi(): Activiti.ModelsApi {\n        return this.apiService.getInstance().activiti.modelsApi;\n    }\n\n    private get editorApi(): Activiti.EditorApi {\n        return this.apiService.getInstance().activiti.editorApi;\n    }\n\n    private get processApi(): Activiti.ProcessApi {\n        return this.apiService.getInstance().activiti.processApi;\n    }\n\n    private get processInstanceVariablesApi(): Activiti.ProcessInstanceVariablesApi {\n        return this.apiService.getInstance().activiti.processInstanceVariablesApi;\n    }\n\n    private get usersWorkflowApi(): Activiti.UsersWorkflowApi {\n        return this.apiService.getInstance().activiti.usersWorkflowApi;\n    }\n\n    private get groupsApi(): Activiti.GroupsApi {\n        return this.apiService.getInstance().activiti.groupsApi;\n    }\n\n    /**\n     * Parses JSON data to create a corresponding Form model.\n     * @param json JSON to create the form\n     * @param data Values for the form fields\n     * @param readOnly Should the form fields be read-only?\n     * @returns Form model created from input data\n     */\n    parseForm(json: any, data?: FormValues, readOnly: boolean = false): FormModel {\n        if (json) {\n            const form = new FormModel(json, data, readOnly, this);\n            if (!json.fields) {\n                form.outcomes = [\n                    new FormOutcomeModel(form, {\n                        id: '$save',\n                        name: FormOutcomeModel.SAVE_ACTION,\n                        isSystem: true\n                    })\n                ];\n            }\n            return form;\n        }\n        return null;\n    }\n\n    /**\n     * Creates a Form with a field for each metadata property.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createFormFromANode(formName: string): Observable<any> {\n        return new Observable((observer) => {\n            this.createForm(formName).subscribe(\n                (form) => {\n                    this.ecmModelService.searchEcmType(formName, EcmModelService.MODEL_NAME).subscribe(\n                        (customType) => {\n                            const formDefinitionModel = new FormDefinitionModel(form.id, form.name, form.lastUpdatedByFullName, form.lastUpdated, customType.entry.properties);\n                            from(\n                                this.editorApi.saveForm(form.id, formDefinitionModel)\n                            ).subscribe((formData) => {\n                                observer.next(formData);\n                                observer.complete();\n                            }, (err) => this.handleError(err));\n                        },\n                        (err) => this.handleError(err));\n                },\n                (err) => this.handleError(err));\n        });\n    }\n\n    /**\n     * Create a Form.\n     * @param formName Name of the new form\n     * @returns The new form\n     */\n    createForm(formName: string): Observable<any> {\n        const dataModel = {\n            name: formName,\n            description: '',\n            modelType: 2,\n            stencilSet: 0\n        };\n\n        return from(\n            this.modelsApi.createModel(dataModel)\n        );\n    }\n\n    /**\n     * Saves a form.\n     * @param formId ID of the form to save\n     * @param formModel Model data for the form\n     * @returns Data for the saved form\n     */\n    saveForm(formId: number, formModel: FormDefinitionModel): Observable<any> {\n        return from(\n            this.editorApi.saveForm(formId, formModel)\n        );\n    }\n\n    /**\n     * Searches for a form by name.\n     * @param name The form name to search for\n     * @returns Form model(s) matching the search name\n     */\n    searchFrom(name: string): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(\n            this.modelsApi.getModels(opts)\n        )\n            .pipe(\n                map(function (forms: any) {\n                    return forms.data.find((formData) => formData.name === name);\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the forms.\n     * @returns List of form models\n     */\n    getForms(): Observable<any> {\n        const opts = {\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets process definitions.\n     * @returns List of process definitions\n     */\n    getProcessDefinitions(): Observable<any> {\n        return from(this.processApi.getProcessDefinitions({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets instance variables for a process.\n     * @param processInstanceId ID of the target process\n     * @returns List of instance variable information\n     */\n    getProcessVariablesById(processInstanceId: string): Observable<any[]> {\n        return from(this.processInstanceVariablesApi.getProcessInstanceVariables(processInstanceId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all the tasks.\n     * @returns List of tasks\n     */\n    getTasks(): Observable<any> {\n        return from(this.taskApi.listTasks({}))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a task.\n     * @param taskId Task Id\n     * @returns Task info\n     */\n    getTask(taskId: string): Observable<any> {\n        return from(this.taskApi.getTask(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Saves a task form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @returns Null response when the operation is complete\n     */\n    saveTaskForm(taskId: string, formValues: FormValues): Observable<any> {\n        const saveFormRepresentation = <SaveFormRepresentation> { values: formValues };\n\n        return from(this.taskApi.saveTaskForm(taskId, saveFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Completes a Task Form.\n     * @param taskId Task Id\n     * @param formValues Form Values\n     * @param outcome Form Outcome\n     * @returns Null response when the operation is complete\n     */\n    completeTaskForm(taskId: string, formValues: FormValues, outcome?: string): Observable<any> {\n        const completeFormRepresentation: any = <CompleteFormRepresentation> { values: formValues };\n        if (outcome) {\n            completeFormRepresentation.outcome = outcome;\n        }\n\n        return from(this.taskApi.completeTaskForm(taskId, completeFormRepresentation))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form related to a task.\n     * @param taskId ID of the target task\n     * @returns Form definition\n     */\n    getTaskForm(taskId: string): Observable<any> {\n        return from(this.taskApi.getTaskForm(taskId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a form definition.\n     * @param formId ID of the target form\n     * @returns Form definition\n     */\n    getFormDefinitionById(formId: number): Observable<any> {\n        return from(this.editorApi.getForm(formId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the form definition with a given name.\n     * @param name The form name\n     * @returns Form definition\n     */\n    getFormDefinitionByName(name: string): Observable<any> {\n        const opts = {\n            'filter': 'myReusableForms',\n            'filterText': name,\n            'modelType': 2\n        };\n\n        return from(this.modelsApi.getModels(opts))\n            .pipe(\n                map(this.getFormId),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form instance for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstanceStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a process instance.\n     * @param processId ID of the process to get\n     * @returns Process instance\n     */\n    getProcessInstance(processId: string): Observable<any> {\n        return from(this.processApi.getProcessInstance(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the start form definition for a given process.\n     * @param processId Process definition ID\n     * @returns Form definition\n     */\n    getStartFormDefinition(processId: string): Observable<any> {\n        return from(this.processApi.getProcessDefinitionStartForm(processId))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValues(taskId: string, field: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValues(taskId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @returns Field values\n     */\n    getRestFieldValuesByProcessId(processDefinitionId: string, field: string): Observable<any> {\n        return from(this.processApi.getRestFieldValues(processDefinitionId, field))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend using a process ID.\n     * @param processDefinitionId Process identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumnByProcessId(processDefinitionId: string, field: string, column?: string): Observable<any> {\n        return from(this.processApi.getRestTableFieldValues(processDefinitionId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets column values of fields populated by a REST backend.\n     * @param taskId Task identifier\n     * @param field Field identifier\n     * @param column Column identifier\n     * @returns Field values\n     */\n    getRestFieldValuesColumn(taskId: string, field: string, column?: string): Observable<any> {\n        return from(this.taskApi.getRestFieldValuesColumn(taskId, field, column))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a URL for the profile picture of a user.\n     * @param userId ID of the target user\n     * @returns URL string\n     */\n    getUserProfileImageApi(userId: number): string {\n        return this.apiService.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Gets a list of workflow users.\n     * @param filter Filter to select specific users\n     * @param groupId Group ID for the search\n     * @returns Array of users\n     */\n    getWorkflowUsers(filter: string, groupId?: string): Observable<UserProcessModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.usersWorkflowApi.getUsers(option))\n            .pipe(\n                switchMap((response: any) => <UserProcessModel[]> response.data || []),\n                map((user: any) => {\n                    user.userImage = this.getUserProfileImageApi(user.id);\n                    return of(user);\n                }),\n                combineAll(),\n                defaultIfEmpty([]),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of groups in a workflow.\n     * @param filter Filter to select specific groups\n     * @param groupId Group ID for the search\n     * @returns Array of groups\n     */\n    getWorkflowGroups(filter: string, groupId?: string): Observable<GroupModel[]> {\n        const option: any = { filter: filter };\n        if (groupId) {\n            option.groupId = groupId;\n        }\n        return from(this.groupsApi.getGroups(option))\n            .pipe(\n                map((response: any) => <GroupModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the ID of a form.\n     * @param form Object representing a form\n     * @returns ID string\n     */\n    getFormId(form: any): string {\n        let result = null;\n\n        if (form && form.data && form.data.length > 0) {\n            result = form.data[0].id;\n        }\n\n        return result;\n    }\n\n    /**\n     * Creates a JSON representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of form data.\n     * @param res Object representing form data\n     * @returns JSON data\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Error message\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = FormService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : FormService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../services/form.service';\nimport { FormFieldModel } from './core/index';\n\nexport const baseHost = {\n    '(click)': 'event($event)',\n    '(blur)': 'event($event)',\n    '(change)': 'event($event)',\n    '(focus)': 'event($event)',\n    '(focusin)': 'event($event)',\n    '(focusout)': 'event($event)',\n    '(input)': 'event($event)',\n    '(invalid)': 'event($event)',\n    '(select)': 'event($event)'\n};\n\n/**\n * Base widget component.\n */\n@Component({\n    selector: 'base-widget',\n    template: '',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class WidgetComponent implements AfterViewInit {\n\n    static DEFAULT_HYPERLINK_URL: string = '#';\n    static DEFAULT_HYPERLINK_SCHEME: string = 'http://';\n\n    /** Does the widget show a read-only value? (ie, can't be edited) */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Data to be displayed in the field */\n    @Input()\n    field: FormFieldModel;\n\n    /**\n     * Emitted when a field value changes.\n     */\n    @Output()\n    fieldChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    constructor(public formService?: FormService) {\n    }\n\n    hasField() {\n        return this.field ? true : false;\n    }\n\n    // Note for developers:\n    // returns <any> object to be able binding it to the <element required=\"required\"> attribute\n    isRequired(): any {\n        if (this.field && this.field.required) {\n            return true;\n        }\n        return null;\n    }\n\n    isValid(): boolean {\n        return this.field.validationSummary ? true : false;\n    }\n\n    hasValue(): boolean {\n        return this.field &&\n            this.field.value !== null &&\n            this.field.value !== undefined;\n    }\n\n    isInvalidFieldRequired() {\n        return !this.field.isValid && !this.field.validationSummary && this.isRequired();\n    }\n\n    ngAfterViewInit() {\n        this.fieldChanged.emit(this.field);\n    }\n\n    checkVisibility(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    onFieldChanged(field: FormFieldModel) {\n        this.fieldChanged.emit(field);\n    }\n\n    protected getHyperlinkUrl(field: FormFieldModel) {\n        let url = WidgetComponent.DEFAULT_HYPERLINK_URL;\n        if (field && field.hyperlinkUrl) {\n            url = field.hyperlinkUrl;\n            if (!/^https?:\\/\\//i.test(url)) {\n                url = `${WidgetComponent.DEFAULT_HYPERLINK_SCHEME}${url}`;\n            }\n        }\n        return url;\n    }\n\n    protected getHyperlinkText(field: FormFieldModel) {\n        if (field) {\n            return field.displayText || field.hyperlinkUrl;\n        }\n        return null;\n    }\n\n    event(event: Event): void {\n        this.formService.formEvents.next(event);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ContainerColumnModel } from './../core/container-column.model';\nimport { ContainerModel } from './../core/container.model';\nimport { FormFieldTypes } from './../core/form-field-types';\nimport { FormFieldModel } from './../core/form-field.model';\n\nexport class ContainerWidgetComponentModel extends ContainerModel {\n\n    columns: ContainerColumnModel[] = [];\n    isExpanded: boolean = true;\n    rowspan: number = 1;\n    colspan: number = 1;\n\n    isGroup(): boolean {\n        return this.type === FormFieldTypes.GROUP;\n    }\n\n    isCollapsible(): boolean {\n        let allowCollapse = false;\n\n        if (this.isGroup() && this.field.params['allowCollapse']) {\n            allowCollapse = <boolean> this.field.params['allowCollapse'];\n        }\n\n        return allowCollapse;\n    }\n\n    isCollapsedByDefault(): boolean {\n        let collapseByDefault = false;\n\n        if (this.isCollapsible() && this.field.params['collapseByDefault']) {\n            collapseByDefault = <boolean> this.field.params['collapseByDefault'];\n        }\n\n        return collapseByDefault;\n    }\n\n    constructor(field: FormFieldModel) {\n        super(field);\n\n        if (this.field) {\n            this.columns = this.field.columns || [];\n            this.isExpanded = !this.isCollapsedByDefault();\n            this.colspan = field.colspan;\n            this.rowspan = field.rowspan;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterViewInit, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\nimport { ContainerWidgetComponentModel } from './container.widget.model';\n\n@Component({\n    selector: 'container-widget',\n    templateUrl: './container.widget.html',\n    styleUrls: ['./container.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContainerWidgetComponent extends WidgetComponent implements OnInit, AfterViewInit {\n\n    content: ContainerWidgetComponentModel;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    onExpanderClicked() {\n        if (this.content && this.content.isCollapsible()) {\n            this.content.isExpanded = !this.content.isExpanded;\n        }\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new ContainerWidgetComponentModel(this.field);\n        }\n    }\n\n    /**\n     * Serializes column fields\n     */\n    get fields(): FormFieldModel[] {\n        const fields = [];\n\n        let rowContainsElement = true,\n            rowIndex = 0;\n\n        while (rowContainsElement) {\n            rowContainsElement = false;\n            for (let i = 0; i < this.content.columns.length; i++ ) {\n                const field = this.content.columns[i].fields[rowIndex];\n                if (field) {\n                    rowContainsElement = true;\n                }\n\n                fields.push(field);\n            }\n            rowIndex++;\n        }\n\n        return fields;\n    }\n\n    /**\n     * Calculate the column width based on the numberOfColumns and current field's colspan property\n     *\n     * @param field\n     */\n    getColumnWith(field: FormFieldModel): string {\n        const colspan = field ? field.colspan : 1;\n        return (100 / this.content.json.numberOfColumns) * colspan + '%';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { AfterContentChecked, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormFieldModel, TabModel } from './../core/index';\n\n@Component({\n    selector: 'tabs-widget',\n    templateUrl: './tabs.widget.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsWidgetComponent implements AfterContentChecked {\n\n    @Input()\n    tabs: TabModel[] = [];\n\n    @Output()\n    formTabChanged: EventEmitter<FormFieldModel> = new EventEmitter<FormFieldModel>();\n\n    visibleTabs: TabModel[] = [];\n\n    hasTabs() {\n        return this.tabs && this.tabs.length > 0;\n    }\n\n    ngAfterContentChecked() {\n        this.filterVisibleTabs();\n    }\n\n    filterVisibleTabs() {\n        this.visibleTabs = this.tabs.filter((tab) => {\n            return tab.isVisible;\n        });\n    }\n\n    tabChanged(field: FormFieldModel) {\n        this.formTabChanged.emit(field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'unknown-widget',\n    template: `\n            <mat-list class=\"adf-unknown-widget\">\n                <mat-list-item>\n                     <mat-icon class=\"mat-24\">error_outline</mat-icon>\n                     <span class=\"adf-unknown-text\">Unknown type: {{field.type}}</span>\n                </mat-list-item>\n            </mat-list>\n\n    `,\n    styleUrls: ['./unknown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UnknownWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'amount-widget',\n    templateUrl: './amount.widget.html',\n    styleUrls: ['./amount.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class AmountWidgetComponent extends WidgetComponent implements OnInit {\n\n    static DEFAULT_CURRENCY: string = '$';\n\n    currency: string = AmountWidgetComponent.DEFAULT_CURRENCY;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.currency) {\n            this.currency = this.field.currency;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector no-input-rename */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'checkbox-widget',\n    templateUrl: './checkbox.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class CheckboxWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'date-widget',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS }],\n    templateUrl: './date.widget.html',\n    styleUrls: ['./date.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'DD/MM/YYYY');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'DD/MM/YYYY');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'display-text-widget',\n    templateUrl: './display-text.widget.html',\n    styleUrls: ['./display-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DisplayTextWidgetComponentComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'adf-form-document-widget',\n    templateUrl: 'document.widget.html',\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DocumentWidgetComponent extends WidgetComponent implements OnInit {\n\n    fileId: string = null;\n    hasFile: boolean = false;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const file = this.field.value;\n\n            if (file) {\n                this.fileId = file.id;\n                this.hasFile = true;\n            } else {\n                this.fileId = null;\n                this.hasFile = false;\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'dropdown-widget',\n    templateUrl: './dropdown.widget.html',\n    styleUrls: ['./dropdown.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DropdownWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getValuesByTaskId();\n            } else {\n                this.getValuesByProcessDefinitionId();\n            }\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    const options = [];\n                    if (this.field.emptyOption) {\n                        options.push(this.field.emptyOption);\n                    }\n                    this.field.options = options.concat((formFieldOption || []));\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionValue(option: FormFieldOption, fieldValue: string): string {\n        let optionValue: string = '';\n        if (option.id === 'empty' || option.name !== fieldValue) {\n            optionValue = option.id;\n        } else {\n            optionValue = option.name;\n        }\n        return optionValue;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport moment from 'moment-es6';\nimport { Observable, from, throwError } from 'rxjs';\nimport { FormFieldModel, FormModel, TabModel } from '../components/widgets/core/index';\nimport { TaskProcessVariableModel } from '../models/task-process-variable.model';\nimport { WidgetVisibilityModel } from '../models/widget-visibility.model';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WidgetVisibilityService {\n\n    private processVarList: TaskProcessVariableModel[];\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    public refreshVisibility(form: FormModel) {\n        if (form && form.tabs && form.tabs.length > 0) {\n            form.tabs.map((tabModel) => this.refreshEntityVisibility(tabModel));\n        }\n\n        if (form) {\n            form.getFormFields().map((field) => this.refreshEntityVisibility(field));\n        }\n    }\n\n    refreshEntityVisibility(element: FormFieldModel | TabModel) {\n        const visible = this.evaluateVisibility(element.form, element.visibilityCondition);\n        element.isVisible = visible;\n    }\n\n    evaluateVisibility(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        const isLeftFieldPresent = visibilityObj && ( visibilityObj.leftFormFieldId || visibilityObj.leftRestResponseId );\n        if (!isLeftFieldPresent || isLeftFieldPresent === 'null') {\n            return true;\n        } else {\n            return this.isFieldVisible(form, visibilityObj);\n        }\n    }\n\n    isFieldVisible(form: FormModel, visibilityObj: WidgetVisibilityModel): boolean {\n        const leftValue = this.getLeftValue(form, visibilityObj);\n        const rightValue = this.getRightValue(form, visibilityObj);\n        const actualResult = this.evaluateCondition(leftValue, rightValue, visibilityObj.operator);\n        if (visibilityObj.nextCondition) {\n            return this.evaluateLogicalOperation(\n                visibilityObj.nextConditionOperator,\n                actualResult,\n                this.isFieldVisible(form, visibilityObj.nextCondition)\n            );\n        } else {\n            return actualResult;\n        }\n    }\n\n    getLeftValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let leftValue = '';\n        if (visibilityObj.leftRestResponseId && visibilityObj.leftRestResponseId !== 'null') {\n            leftValue = this.getVariableValue(form, visibilityObj.leftRestResponseId, this.processVarList);\n        } else if (visibilityObj.leftFormFieldId) {\n            leftValue = this.getFormValue(form, visibilityObj.leftFormFieldId);\n            leftValue = leftValue ? leftValue : this.getVariableValue(form, visibilityObj.leftFormFieldId, this.processVarList);\n        }\n        return leftValue;\n    }\n\n    getRightValue(form: FormModel, visibilityObj: WidgetVisibilityModel) {\n        let valueFound = '';\n        if (visibilityObj.rightRestResponseId) {\n            valueFound = this.getVariableValue(form, visibilityObj.rightRestResponseId, this.processVarList);\n        } else if (visibilityObj.rightFormFieldId) {\n            valueFound = this.getFormValue(form, visibilityObj.rightFormFieldId);\n        } else {\n            if (moment(visibilityObj.rightValue, 'YYYY-MM-DD', true).isValid()) {\n                valueFound = visibilityObj.rightValue + 'T00:00:00.000Z';\n            } else {\n                valueFound = visibilityObj.rightValue;\n            }\n        }\n        return valueFound;\n    }\n\n    getFormValue(form: FormModel, fieldId: string) {\n        let value = this.getFieldValue(form.values, fieldId);\n\n        if (!value) {\n            value = this.searchValueInForm(form, fieldId);\n        }\n\n        return value;\n    }\n\n    getFieldValue(valueList: any, fieldId: string) {\n        let dropDownFilterByName, valueFound;\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            dropDownFilterByName = fieldId.substring(0, fieldId.length - 6);\n            if (valueList[dropDownFilterByName]) {\n                valueFound = valueList[dropDownFilterByName].name;\n            }\n        } else if (valueList[fieldId] && valueList[fieldId].id) {\n            valueFound = valueList[fieldId].id;\n        } else {\n            valueFound = valueList[fieldId];\n        }\n        return valueFound;\n    }\n\n    searchValueInForm(form: FormModel, fieldId: string) {\n        let fieldValue = '';\n        form.getFormFields().forEach((formField: FormFieldModel) => {\n            if (this.isSearchedField(formField, fieldId)) {\n                fieldValue = this.getObjectValue(formField, fieldId);\n                if (!fieldValue) {\n                    if (formField.value && formField.value.id) {\n                        fieldValue = formField.value.id;\n                    } else {\n                        fieldValue = formField.value;\n                    }\n                }\n            }\n        });\n\n        return fieldValue;\n    }\n\n    private getObjectValue(field: FormFieldModel, fieldId: string) {\n        let value = '';\n        if (field.value && field.value.name) {\n            value = field.value.name;\n        } else if (field.options) {\n            const option = field.options.find((opt) => opt.id === field.value);\n            if (option) {\n                value = this.getValueFromOption(fieldId, option);\n            }\n        }\n        return value;\n    }\n\n    private getValueFromOption(fieldId: string, option): string {\n        let optionValue = '';\n        if (fieldId && fieldId.indexOf('_LABEL') > 0) {\n            optionValue = option.name;\n        } else {\n            optionValue = option.id;\n        }\n        return optionValue;\n    }\n\n    private isSearchedField(field: FormFieldModel, fieldToFind: string): boolean {\n        const formattedFieldName = this.removeLabel(field, fieldToFind);\n        return field.id ? field.id.toUpperCase() === formattedFieldName.toUpperCase() : false;\n    }\n\n    private removeLabel(field: FormFieldModel, fieldToFind): string {\n        let formattedFieldName = fieldToFind || '';\n        if (field.fieldType === 'RestFieldRepresentation' && fieldToFind.indexOf('_LABEL') > 0) {\n            formattedFieldName = fieldToFind.substring(0, fieldToFind.length - 6);\n        }\n        return formattedFieldName;\n    }\n\n    getVariableValue(form: FormModel, name: string, processVarList: TaskProcessVariableModel[]) {\n        return this.getFormVariableValue(form, name) ||\n            this.getProcessVariableValue(name, processVarList);\n    }\n\n    private getFormVariableValue(form: FormModel, name: string) {\n        if (form.json.variables) {\n            const formVariable = form.json.variables.find((formVar) => formVar.name === name);\n            return formVariable ? formVariable.value : formVariable;\n        }\n    }\n\n    private getProcessVariableValue(name: string, processVarList: TaskProcessVariableModel[]) {\n        if (this.processVarList) {\n            const processVariable = this.processVarList.find((variable) => variable.id === name);\n            return processVariable ? processVariable.value : processVariable;\n        }\n    }\n\n    evaluateLogicalOperation(logicOp, previousValue, newValue): boolean {\n        switch (logicOp) {\n            case 'and':\n                return previousValue && newValue;\n            case 'or' :\n                return previousValue || newValue;\n            case 'and-not':\n                return previousValue && !newValue;\n            case 'or-not':\n                return previousValue || !newValue;\n            default:\n                this.logService.error('NO valid operation! wrong op request : ' + logicOp);\n                break;\n        }\n    }\n\n    evaluateCondition(leftValue, rightValue, operator): boolean {\n        switch (operator) {\n            case '==':\n                return leftValue + '' === rightValue + '';\n            case '<':\n                return leftValue < rightValue;\n            case '!=':\n                return leftValue + '' !== rightValue + '';\n            case '>':\n                return leftValue > rightValue;\n            case '>=':\n                return leftValue >= rightValue;\n            case '<=':\n                return leftValue <= rightValue;\n            case 'empty':\n                return leftValue ? leftValue === '' : true;\n            case '!empty':\n                return leftValue ? leftValue !== '' : false;\n            default:\n                this.logService.error('NO valid operation!');\n                break;\n        }\n        return;\n    }\n\n    cleanProcessVariable() {\n        this.processVarList = [];\n    }\n\n    getTaskProcessVariable(taskId: string): Observable<TaskProcessVariableModel[]> {\n        return from(this.apiService.getInstance().activiti.taskFormsApi.getTaskFormVariables(taskId))\n            .pipe(\n                map((res) => {\n                    const jsonRes = this.toJson(res);\n                    this.processVarList = <TaskProcessVariableModel[]> jsonRes;\n                    return jsonRes;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    toJson(res: any) {\n        return res || {};\n    }\n\n    private handleError(err) {\n        this.logService.error('Error while performing a call');\n        return throwError('Error while performing a call - Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicRowValidationSummary } from '../components/widgets/dynamic-table/dynamic-row-validation-summary.model';\nimport { DynamicTableRow } from '../components/widgets/dynamic-table/dynamic-table-row.model';\n\nimport { FormFieldModel, FormModel } from './../components/widgets/core/index';\nimport { FormFieldEvent } from './form-field.event';\n\nexport class ValidateDynamicTableRowEvent extends FormFieldEvent {\n\n    isValid = true;\n\n    constructor(form: FormModel,\n                field: FormFieldModel,\n                public row: DynamicTableRow,\n                public summary: DynamicRowValidationSummary) {\n        super(form, field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class DateCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Date'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.editable && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            const dateValue = moment(value, 'D-M-YYYY');\n            if (!dateValue.isValid()) {\n                if (summary) {\n                    summary.isValid = false;\n                    summary.message = `Invalid '${column.name}' format.`;\n                }\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { ErrorMessageModel } from '../core/index';\n\nexport class DynamicRowValidationSummary extends ErrorMessageModel {\n\n    isValid: boolean;\n\n    constructor(json?: any) {\n        super(json);\n        this.isValid = json.isValid;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class NumberCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'Number',\n        'Amount'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    isNumber(value: any): boolean {\n        if (value === null || value === undefined || value === '') {\n            return false;\n        }\n\n        return !isNaN(+value);\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (value === null ||\n                value === undefined ||\n                value === '' ||\n                this.isNumber(value)) {\n                return true;\n            }\n\n            if (summary) {\n                summary.isValid = false;\n                summary.message = `Field '${column.name}' must be a number.`;\n            }\n            return false;\n        }\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { CellValidator } from './cell-validator.model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\n\nexport class RequiredCellValidator implements CellValidator {\n\n    private supportedTypes: string[] = [\n        'String',\n        'Number',\n        'Amount',\n        'Date',\n        'Dropdown'\n    ];\n\n    isSupported(column: DynamicTableColumn): boolean {\n        return column && column.required && this.supportedTypes.indexOf(column.type) > -1;\n    }\n\n    validate(row: DynamicTableRow, column: DynamicTableColumn, summary?: DynamicRowValidationSummary): boolean {\n        if (this.isSupported(column)) {\n            const value = row.value[column.id];\n            if (column.required) {\n                if (value === null || value === undefined || value === '') {\n                    if (summary) {\n                        summary.isValid = false;\n                        summary.message = `Field '${column.name}' is required.`;\n                    }\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport moment from 'moment-es6';\nimport { ValidateDynamicTableRowEvent } from '../../../events/validate-dynamic-table-row.event';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldModel } from './../core/form-field.model';\nimport { FormWidgetModel } from './../core/form-widget.model';\nimport { CellValidator } from './cell-validator.model';\nimport { DateCellValidator } from './date-cell-validator-model';\nimport { DynamicRowValidationSummary } from './dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { NumberCellValidator } from './number-cell-validator.model';\nimport { RequiredCellValidator } from './required-cell-validator.model';\n\nexport class DynamicTableModel extends FormWidgetModel {\n\n    field: FormFieldModel;\n    columns: DynamicTableColumn[] = [];\n    visibleColumns: DynamicTableColumn[] = [];\n    rows: DynamicTableRow[] = [];\n\n    private _selectedRow: DynamicTableRow;\n    private _validators: CellValidator[] = [];\n\n    get selectedRow(): DynamicTableRow {\n        return this._selectedRow;\n    }\n\n    set selectedRow(value: DynamicTableRow) {\n        if (this._selectedRow && this._selectedRow === value) {\n            this._selectedRow.selected = false;\n            this._selectedRow = null;\n            return;\n        }\n\n        this.rows.forEach((row) => row.selected = false);\n\n        this._selectedRow = value;\n\n        if (value) {\n            this._selectedRow.selected = true;\n        }\n    }\n\n    constructor(field: FormFieldModel, private formService: FormService) {\n        super(field.form, field.json);\n        this.field = field;\n\n        if (field.json) {\n            const columns = this.getColumns(field);\n            if (columns) {\n                this.columns = columns;\n                this.visibleColumns = this.columns.filter((col) => col.visible);\n            }\n\n            if (field.json.value) {\n                this.rows = field.json.value.map((obj) => <DynamicTableRow> {selected: false, value: obj});\n            }\n        }\n\n        this._validators = [\n            new RequiredCellValidator(),\n            new DateCellValidator(),\n            new NumberCellValidator()\n        ];\n    }\n\n    private getColumns(field: FormFieldModel): DynamicTableColumn[] {\n        if (field && field.json) {\n            let definitions = field.json.columnDefinitions;\n            if (!definitions && field.json.params && field.json.params.field) {\n                definitions = field.json.params.field.columnDefinitions;\n            }\n\n            if (definitions) {\n                return definitions.map((obj) => <DynamicTableColumn> obj);\n            }\n        }\n        return null;\n    }\n\n    flushValue() {\n        if (this.field) {\n            this.field.value = this.rows.map((r) => r.value);\n            this.field.updateForm();\n        }\n    }\n\n    moveRow(row: DynamicTableRow, offset: number) {\n        const oldIndex = this.rows.indexOf(row);\n        if (oldIndex > -1) {\n            let newIndex = (oldIndex + offset);\n\n            if (newIndex < 0) {\n                newIndex = 0;\n            } else if (newIndex >= this.rows.length) {\n                newIndex = this.rows.length;\n            }\n\n            const arr = this.rows.slice();\n            arr.splice(oldIndex, 1);\n            arr.splice(newIndex, 0, row);\n            this.rows = arr;\n\n            this.flushValue();\n        }\n    }\n\n    deleteRow(row: DynamicTableRow) {\n        if (row) {\n            if (this.selectedRow === row) {\n                this.selectedRow = null;\n            }\n            const idx = this.rows.indexOf(row);\n            if (idx > -1) {\n                this.rows.splice(idx, 1);\n                this.flushValue();\n            }\n        }\n    }\n\n    addRow(row: DynamicTableRow) {\n        if (row) {\n            this.rows.push(row);\n            // this.selectedRow = row;\n        }\n    }\n\n    validateRow(row: DynamicTableRow): DynamicRowValidationSummary {\n        const summary = new DynamicRowValidationSummary( {\n            isValid: true,\n            message: null\n        });\n\n        const event = new ValidateDynamicTableRowEvent(this.form, this.field, row, summary);\n        this.formService.validateDynamicTableRow.next(event);\n\n        if (event.defaultPrevented || !summary.isValid) {\n            return summary;\n        }\n\n        if (row) {\n            for (const col of this.columns) {\n                for (const validator of this._validators) {\n                    if (!validator.validate(row, col, summary)) {\n                        return summary;\n                    }\n                }\n            }\n        }\n\n        return summary;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        const rowValue = row.value[column.id];\n\n        if (column.type === 'Dropdown') {\n            if (rowValue) {\n                return rowValue.name;\n            }\n        }\n\n        if (column.type === 'Boolean') {\n            return rowValue ? true : false;\n        }\n\n        if (column.type === 'Date') {\n            if (rowValue) {\n                return moment(rowValue.split('T')[0], 'YYYY-MM-DD').format('DD-MM-YYYY');\n            }\n        }\n\n        return rowValue || '';\n    }\n\n    getDisplayText(column: DynamicTableColumn): string {\n        let columnName = column.name;\n        if (column.type === 'Amount') {\n            const currency = column.amountCurrency || '$';\n            columnName = `${column.name} (${currency})`;\n        }\n        return columnName;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ChangeDetectorRef, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { WidgetVisibilityService } from '../../../services/widget-visibility.service';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { DynamicTableColumn } from './dynamic-table-column.model';\nimport { DynamicTableRow } from './dynamic-table-row.model';\nimport { DynamicTableModel } from './dynamic-table.widget.model';\n\n@Component({\n    selector: 'dynamic-table-widget',\n    templateUrl: './dynamic-table.widget.html',\n    styleUrls: ['./dynamic-table.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class DynamicTableWidgetComponent extends WidgetComponent implements OnInit {\n\n    ERROR_MODEL_NOT_FOUND = 'Table model not found';\n\n    content: DynamicTableModel;\n\n    editMode: boolean = false;\n    editRow: DynamicTableRow = null;\n\n    private selectArrayCode = [32, 0, 13];\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef,\n                private visibilityService: WidgetVisibilityService,\n                private logService: LogService,\n                private cd: ChangeDetectorRef) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.content = new DynamicTableModel(this.field, this.formService);\n            this.visibilityService.refreshVisibility(this.field.form);\n        }\n    }\n\n    forceFocusOnAddButton() {\n        if (this.content) {\n            this.cd.detectChanges();\n            const buttonAddRow = <HTMLButtonElement> this.elementRef.nativeElement.querySelector('#' + this.content.id + '-add-row');\n            if (this.isDynamicTableReady(buttonAddRow)) {\n                buttonAddRow.focus();\n            }\n        }\n    }\n\n    private isDynamicTableReady(buttonAddRow) {\n        return this.field && !this.editMode && buttonAddRow;\n    }\n\n    isValid() {\n        let valid = true;\n\n        if (this.content && this.content.field) {\n            valid = this.content.field.isValid;\n        }\n\n        return valid;\n    }\n\n    onRowClicked(row: DynamicTableRow) {\n        if (this.content) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    onKeyPressed($event: KeyboardEvent, row: DynamicTableRow) {\n        if (this.content && this.isEnterOrSpacePressed($event.keyCode)) {\n            this.content.selectedRow = row;\n        }\n    }\n\n    private isEnterOrSpacePressed(keyCode) {\n        return this.selectArrayCode.indexOf(keyCode) !== -1;\n    }\n\n    hasSelection(): boolean {\n        return !!(this.content && this.content.selectedRow);\n    }\n\n    moveSelectionUp(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, -1);\n            return true;\n        }\n        return false;\n    }\n\n    moveSelectionDown(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.moveRow(this.content.selectedRow, 1);\n            return true;\n        }\n        return false;\n    }\n\n    deleteSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.content.deleteRow(this.content.selectedRow);\n            return true;\n        }\n        return false;\n    }\n\n    addNewRow(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = <DynamicTableRow> {\n                isNew: true,\n                selected: false,\n                value: {}\n            };\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    editSelection(): boolean {\n        if (this.content && !this.readOnly) {\n            this.editRow = this.copyRow(this.content.selectedRow);\n            this.editMode = true;\n            return true;\n        }\n        return false;\n    }\n\n    getCellValue(row: DynamicTableRow, column: DynamicTableColumn): any {\n        if (this.content) {\n            const cellValue = this.content.getCellValue(row, column);\n            if (column.type === 'Amount') {\n                return (column.amountCurrency || '$') + ' ' + (cellValue || 0);\n            }\n            return cellValue;\n        }\n        return null;\n    }\n\n    onSaveChanges() {\n        if (this.content) {\n            if (this.editRow.isNew) {\n                const row = this.copyRow(this.editRow);\n                this.content.selectedRow = null;\n                this.content.addRow(row);\n                this.editRow.isNew = false;\n            } else {\n                this.content.selectedRow.value = this.copyObject(this.editRow.value);\n            }\n            this.content.flushValue();\n        } else {\n            this.logService.error(this.ERROR_MODEL_NOT_FOUND);\n        }\n        this.editMode = false;\n        this.forceFocusOnAddButton();\n    }\n\n    onCancelChanges() {\n        this.editMode = false;\n        this.editRow = null;\n        this.forceFocusOnAddButton();\n    }\n\n    copyRow(row: DynamicTableRow): DynamicTableRow {\n        return <DynamicTableRow> {\n            value: this.copyObject(row.value)\n        };\n    }\n\n    private copyObject(obj: any): any {\n        let result = obj;\n\n        if (typeof obj === 'object' && obj !== null && obj !== undefined) {\n            result = Object.assign({}, obj);\n            Object.keys(obj).forEach((key) => {\n                if (typeof obj[key] === 'object') {\n                    result[key] = this.copyObject(obj[key]);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-boolean-editor',\n    templateUrl: './boolean.editor.html',\n    styleUrls: ['./boolean.editor.scss']\n})\nexport class BooleanEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: boolean = (<HTMLInputElement> event).checked;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-date-editor',\n    templateUrl: './date.editor.html',\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    styleUrls: ['./date.editor.scss']\n})\nexport class DateEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'DD-MM-YYYY';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), 'YYYY-MM-DD');\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const momentDate = moment(newDateValue.value, this.DATE_FORMAT, true);\n\n            if (!momentDate.isValid()) {\n                this.row.value[this.column.id] = '';\n            } else {\n                this.row.value[this.column.id] = `${momentDate.format('YYYY-MM-DD')}T00:00:00.000Z`;\n                this.table.flushValue();\n            }\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../../../utils/moment-date-formats.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\n\n@Component({\n    selector: 'adf-datetime-editor',\n    templateUrl: './datetime.editor.html',\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    styleUrls: ['./datetime.editor.scss']\n})\nexport class DateTimeEditorComponent implements OnInit {\n\n    DATE_FORMAT: string = 'D-M-YYYY hh:mm A';\n\n    value: any;\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    minDate: Moment;\n    maxDate: Moment;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.DATE_FORMAT;\n\n        this.value = moment(this.table.getCellValue(this.row, this.column), this.DATE_FORMAT);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            const newValue = moment(newDateValue.value, this.DATE_FORMAT);\n            this.row.value[this.column.id] = newDateValue.value.format(this.DATE_FORMAT);\n            this.value = newValue;\n            this.table.flushValue();\n        } else if (newDateValue) {\n            const newValue = moment(newDateValue, this.DATE_FORMAT);\n            this.value = newValue;\n            this.row.value[this.column.id] = newDateValue;\n            this.table.flushValue();\n        } else {\n            this.row.value[this.column.id] = '';\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../../../services/log.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormService } from './../../../../../services/form.service';\nimport { DynamicTableColumnOption } from './../../dynamic-table-column-option.model';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-dropdown-editor',\n    templateUrl: './dropdown.editor.html',\n    styleUrls: ['./dropdown.editor.scss']\n})\nexport class DropdownEditorComponent implements OnInit {\n\n    value: any = null;\n    options: DynamicTableColumnOption[] = [];\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        const field = this.table.field;\n        if (field) {\n            if (this.column.optionType === 'rest') {\n                if (this.table.form && this.table.form.taskId) {\n                    this.getValuesByTaskId(field);\n                } else {\n                    this.getValuesByProcessDefinitionId(field);\n                }\n            } else {\n                this.options = this.column.options || [];\n                this.value = this.table.getCellValue(this.row, this.column);\n            }\n        }\n    }\n\n    getValuesByTaskId(field) {\n        this.formService\n            .getRestFieldValuesColumn(\n                field.form.taskId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId(field) {\n        this.formService\n            .getRestFieldValuesColumnByProcessId(\n                field.form.processDefinitionId,\n                field.id,\n                this.column.id\n            )\n            .subscribe(\n                (dynamicTableColumnOption: DynamicTableColumnOption[]) => {\n                    this.column.options = dynamicTableColumnOption || [];\n                    this.options = this.column.options;\n                    this.value = this.table.getCellValue(this.row, this.column);\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        let value: any = (<HTMLInputElement> event).value;\n        value = column.options.find((opt) => opt.name === value);\n        row.value[column.id] = value;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';\nimport { DynamicTableColumn } from './../dynamic-table-column.model';\nimport { DynamicTableRow } from './../dynamic-table-row.model';\nimport { DynamicTableModel } from './../dynamic-table.widget.model';\n\n@Component({\n    selector: 'row-editor',\n    templateUrl: './row.editor.html',\n    styleUrls: ['./row.editor.css']\n})\nexport class RowEditorComponent {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    @Output()\n    save: EventEmitter<any> = new EventEmitter<any>();\n\n    @Output()\n    cancel: EventEmitter<any> = new EventEmitter<any>();\n\n    validationSummary: DynamicRowValidationSummary;\n\n    constructor() {\n        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });\n    }\n\n    onCancelChanges() {\n        this.cancel.emit({\n            table: this.table,\n            row: this.row,\n            column: this.column\n        });\n    }\n\n    onSaveChanges() {\n        this.validate();\n        if (this.isValid()) {\n            this.save.emit({\n                table: this.table,\n                row: this.row,\n                column: this.column\n            });\n        }\n    }\n\n    private isValid(): boolean {\n        return this.validationSummary && this.validationSummary.isValid;\n    }\n\n    private validate() {\n        this.validationSummary = this.table.validateRow(this.row);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { DynamicTableColumn } from './../../dynamic-table-column.model';\nimport { DynamicTableRow } from './../../dynamic-table-row.model';\nimport { DynamicTableModel } from './../../dynamic-table.widget.model';\n\n@Component({\n    selector: 'adf-text-editor',\n    templateUrl: './text.editor.html',\n    styleUrls: ['./text.editor.scss']\n})\nexport class TextEditorComponent implements OnInit {\n\n    @Input()\n    table: DynamicTableModel;\n\n    @Input()\n    row: DynamicTableRow;\n\n    @Input()\n    column: DynamicTableColumn;\n\n    displayName: string;\n\n    ngOnInit() {\n        this.displayName = this.table.getDisplayText(this.column);\n    }\n\n    onValueChanged(row: DynamicTableRow, column: DynamicTableColumn, event: any) {\n        const value: any = (<HTMLInputElement> event.target).value;\n        row.value[column.id] = value;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { ErrorMessageModel } from '../core/index';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'error-widget',\n    templateUrl: './error.component.html',\n    styleUrls: ['./error.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('enter', style({opacity: 1, transform: 'translateY(0%)'})),\n            transition('void => enter', [\n                style({opacity: 0, transform: 'translateY(-100%)'}),\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n            ])\n        ])\n    ],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class ErrorWidgetComponent extends WidgetComponent implements OnChanges {\n\n    @Input()\n    error: ErrorMessageModel;\n\n    @Input()\n    required: string;\n\n    translateParameters: any = null;\n\n    _subscriptAnimationState: string = '';\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['required']) {\n            this.required = changes.required.currentValue;\n            this._subscriptAnimationState = 'enter';\n        }\n        if (changes['error'] && changes['error'].currentValue) {\n            if (changes.error.currentValue.isActive()) {\n                this.error = changes.error.currentValue;\n                this.translateParameters = this.error.getAttributesAsJsonObj();\n                this._subscriptAnimationState = 'enter';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from './../core/group.model';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'functional-group-widget',\n    templateUrl: './functional-group.widget.html',\n    styleUrls: ['./functional-group.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FunctionalGroupWidgetComponent extends WidgetComponent implements OnInit {\n\n    value: string;\n    oldValue: string;\n    groups: GroupModel[] = [];\n    minTermLength: number = 1;\n    groupId: string;\n\n    constructor(public formService: FormService,\n                public elementRef: ElementRef) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            const group = this.field.value;\n            if (group) {\n                this.value = group.name;\n            }\n\n            const params = this.field.params;\n            if (params && params['restrictWithGroup']) {\n                const restrictWithGroup = <GroupModel> params['restrictWithGroup'];\n                this.groupId = restrictWithGroup.id;\n            }\n\n            // Load auto-completion for previously saved value\n            if (this.value) {\n                this.formService\n                    .getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((groupModel: GroupModel[]) => this.groups = groupModel || []);\n            }\n        }\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.length >= this.minTermLength  && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                this.oldValue = this.value;\n                this.formService.getWorkflowGroups(this.value, this.groupId)\n                    .subscribe((group: GroupModel[]) => {\n                        this.groups = group || [];\n                    });\n            }\n        }\n    }\n\n    flushValue() {\n        const option = this.groups.find((item) => item.name.toLocaleLowerCase() === this.value.toLocaleLowerCase());\n\n        if (option) {\n            this.field.value = option;\n            this.value = option.name;\n        } else {\n            this.field.value = null;\n            this.value = null;\n        }\n\n        this.field.updateForm();\n    }\n\n    onItemClick(item: GroupModel, event: Event) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    onItemSelect(item: GroupModel) {\n        if (item) {\n            this.field.value = item;\n            this.value = item.name;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'hyperlink-widget',\n    templateUrl: './hyperlink.widget.html',\n    styleUrls: ['./hyperlink.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class HyperlinkWidgetComponent extends WidgetComponent implements OnInit {\n\n    linkUrl: string = WidgetComponent.DEFAULT_HYPERLINK_URL;\n    linkText: string = null;\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            this.linkUrl = this.getHyperlinkUrl(this.field);\n            this.linkText = this.getHyperlinkText(this.field);\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'multiline-text-widget',\n    templateUrl: './multiline-text.widget.html',\n    styleUrls: ['./multiline-text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MultilineTextWidgetComponentComponent extends WidgetComponent  {\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename   */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'number-widget',\n    templateUrl: './number.widget.html',\n    styleUrls: ['./number.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class NumberWidgetComponent extends WidgetComponent {\n\n    constructor(public formService: FormService) {\n         super(formService);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets information about users across all tasks.\n     * @param taskId ID of the task\n     * @param searchWord Filter text to search for\n     * @returns Array of user information objects\n     */\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        const option = { excludeTaskId: taskId, filter: searchWord };\n        return from(this.getWorkflowUserApi(option))\n            .pipe(\n                map((response: any) => <UserProcessModel[]> response.data || []),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the profile picture URL for the specified user.\n     * @param user The target user\n     * @returns Profile picture URL\n     */\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    /**\n     * Sets a user to be involved with a task.\n     * @param taskId ID of the target task\n     * @param idToInvolve ID of the user to involve\n     * @returns Empty response when the update completes\n     */\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToInvolve};\n        return from(this.involveUserToTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Removes a user who is currently involved with a task.\n     * @param taskId ID of the target task\n     * @param idToRemove ID of the user to remove\n     * @returns Empty response when the update completes\n     */\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        const node = {userId: idToRemove};\n        return from(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .pipe(\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     */\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { PeopleProcessService } from '../../../../services/people-process.service';\nimport { UserProcessModel } from '../../../../models';\nimport { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { GroupModel } from '../core/group.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { FormControl } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport {\n    catchError,\n    distinctUntilChanged,\n    map,\n    switchMap,\n    tap\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'people-widget',\n    templateUrl: './people.widget.html',\n    styleUrls: ['./people.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PeopleWidgetComponent extends WidgetComponent implements OnInit {\n\n    @ViewChild('inputValue')\n    input: ElementRef;\n\n    @Output()\n    peopleSelected: EventEmitter<number>;\n\n    groupId: string;\n    value: any;\n\n    searchTerm = new FormControl();\n    errorMsg = '';\n    searchTerms$: Observable<any> = this.searchTerm.valueChanges;\n\n    users$ = this.searchTerms$.pipe(\n        tap(() => {\n            this.errorMsg = '';\n        }),\n        distinctUntilChanged(),\n        switchMap((searchTerm) => {\n            const value = searchTerm.email ? this.getDisplayName(searchTerm) : searchTerm;\n            return this.formService.getWorkflowUsers(value, this.groupId)\n                .pipe(\n                    catchError((err) => {\n                        this.errorMsg = err.message;\n                        return of();\n                    })\n                );\n        }),\n        map((list: UserProcessModel[]) => {\n            const value = this.searchTerm.value.email ? this.getDisplayName(this.searchTerm.value) : this.searchTerm.value;\n            this.checkUserAndValidateForm(list, value);\n            return list;\n        })\n    );\n\n    constructor(public formService: FormService, public peopleProcessService: PeopleProcessService) {\n        super(formService);\n        this.peopleSelected = new EventEmitter();\n    }\n\n    ngOnInit() {\n        if (this.field) {\n            if (this.field.value) {\n                this.searchTerm.setValue(this.field.value);\n            }\n            if (this.field.readOnly) {\n                this.searchTerm.disable();\n            }\n            const params = this.field.params;\n            if (params && params.restrictWithGroup) {\n                const restrictWithGroup = <GroupModel> params.restrictWithGroup;\n                this.groupId = restrictWithGroup.id;\n            }\n        }\n    }\n\n    checkUserAndValidateForm(list, value) {\n        const isValidUser = this.isValidUser(list, value);\n        if (isValidUser || value === '') {\n            this.field.validationSummary.message = '';\n            this.field.validate();\n            this.field.form.validateForm();\n        } else {\n            this.field.validationSummary.message = 'FORM.FIELD.VALIDATOR.INVALID_VALUE';\n            this.field.markAsInvalid();\n            this.field.form.markAsInvalid();\n        }\n    }\n\n    isValidUser(users: UserProcessModel[], name: string) {\n        if (users) {\n            return users.find((user) => {\n                const selectedUser = this.getDisplayName(user).toLocaleLowerCase() === name.toLocaleLowerCase();\n                if (selectedUser) {\n                    this.peopleSelected.emit(user && user.id || undefined);\n                }\n                return selectedUser;\n            });\n        }\n    }\n\n    getDisplayName(model: UserProcessModel) {\n        if (model) {\n            const displayName = `${model.firstName || ''} ${model.lastName || ''}`;\n            return displayName.trim();\n        }\n        return '';\n    }\n\n    onItemSelect(item: UserProcessModel) {\n        if (item) {\n            this.field.value = item;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from '../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'radio-buttons-widget',\n    templateUrl: './radio-buttons.widget.html',\n    styleUrls: ['./radio-buttons.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class RadioButtonsWidgetComponent extends WidgetComponent implements OnInit {\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n         super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field && this.field.restUrl) {\n            if (this.field.form.taskId) {\n                this.getOptionsByTaskId();\n            } else {\n                this.getOptionsByProcessDefinitionId();\n            }\n        }\n    }\n\n    getOptionsByTaskId() {\n        this.formService\n            .getRestFieldValues(\n                this.field.form.taskId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    getOptionsByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n                this.field.form.processDefinitionId,\n                this.field.id\n            )\n            .subscribe(\n                (formFieldOption: FormFieldOption[]) => {\n                    this.field.options = formFieldOption || [];\n                    this.field.updateForm();\n                },\n                (err) => this.handleError(err)\n            );\n    }\n\n    onOptionClick(optionSelected: any) {\n        this.field.value = optionSelected;\n        this.fieldChanged.emit(this.field);\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable: component-selector no-use-before-declare no-input-rename  */\n\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    OnChanges,\n    Renderer2,\n    SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => InputMaskDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-text-mask], [textMask]',\n    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class InputMaskDirective implements OnChanges, ControlValueAccessor {\n\n    /** Object defining mask and \"reversed\" status. */\n    @Input('textMask') inputMask: {\n        mask: '',\n        isReversed: false\n    };\n\n    private translationMask = {\n        '0': { pattern: /\\d/ },\n        '9': { pattern: /\\d/, optional: true },\n        '#': { pattern: /\\d/, recursive: true },\n        'A': { pattern: /[a-zA-Z0-9]/ },\n        'S': { pattern: /[a-zA-Z]/ }\n    };\n\n    private byPassKeys = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91];\n    private value;\n    private invalidCharacters = [];\n\n    constructor(private el: ElementRef, private render: Renderer2) {\n    }\n\n    _onChange = (_: any) => {\n    }\n\n    _onTouched = () => {\n    }\n\n    @HostListener('input', ['$event'])\n    @HostListener('keyup', ['$event']) onTextInput(event: KeyboardEvent) {\n        if (this.inputMask && this.inputMask.mask) {\n            this.maskValue(this.el.nativeElement.value, this.el.nativeElement.selectionStart,\n                this.inputMask.mask, this.inputMask.isReversed, event.keyCode);\n        } else {\n            this._onChange(this.el.nativeElement.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['inputMask'] && changes['inputMask'].currentValue['mask']) {\n            this.inputMask = changes['inputMask'].currentValue;\n        }\n    }\n\n    writeValue(value: any) {\n        this.el.nativeElement.value = value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => any): void {\n        this._onTouched = fn;\n    }\n\n    private maskValue(actualValue, startCaret, maskToApply, isMaskReversed, keyCode) {\n        if (this.byPassKeys.indexOf(keyCode) === -1) {\n            const value = this.getMasked(false, actualValue, maskToApply, isMaskReversed);\n            const calculatedCaret = this.calculateCaretPosition(startCaret, actualValue, keyCode);\n            this.render.setAttribute(this.el.nativeElement, 'value', value);\n            this.el.nativeElement.value = value;\n            this.setValue(value);\n            this._onChange(value);\n            this.setCaretPosition(calculatedCaret);\n        }\n    }\n\n    private setCaretPosition(caretPosition) {\n        this.el.nativeElement.moveStart = caretPosition;\n        this.el.nativeElement.moveEnd = caretPosition;\n    }\n\n    calculateCaretPosition(caretPosition, newValue, keyCode) {\n        const newValueLength = newValue.length;\n        const oldValue = this.getValue() || '';\n        const oldValueLength = oldValue.length;\n\n        if (keyCode === 8 && oldValue !== newValue) {\n            caretPosition = caretPosition - (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n        } else if (oldValue !== newValue) {\n            if (caretPosition >= oldValueLength) {\n                caretPosition = newValueLength;\n            } else {\n                caretPosition = caretPosition + (newValue.slice(0, caretPosition).length - oldValue.slice(0, caretPosition).length);\n            }\n        }\n        return caretPosition;\n    }\n\n    getMasked(skipMaskChars, val, mask, isReversed = false) {\n        const buf = [];\n        const value = val;\n        let maskIndex = 0;\n        const maskLen = mask.length;\n        let valueIndex = 0;\n        const valueLength = value.length;\n        let offset = 1;\n        let addMethod = 'push';\n        let resetPos = -1;\n        let lastMaskChar;\n        let lastUntranslatedMaskChar;\n        let check;\n\n        if (isReversed) {\n            addMethod = 'unshift';\n            offset = -1;\n            lastMaskChar = 0;\n            maskIndex = maskLen - 1;\n            valueIndex = valueLength - 1;\n        } else {\n            lastMaskChar = maskLen - 1;\n        }\n        check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        while (check) {\n            const maskDigit = mask.charAt(maskIndex),\n                valDigit = value.charAt(valueIndex),\n                translation = this.translationMask[maskDigit];\n\n            if (translation) {\n                if (valDigit.match(translation.pattern)) {\n                    buf[addMethod](valDigit);\n                    if (translation.recursive) {\n                        if (resetPos === -1) {\n                            resetPos = maskIndex;\n                        } else if (maskIndex === lastMaskChar) {\n                            maskIndex = resetPos - offset;\n                        }\n                        if (lastMaskChar === resetPos) {\n                            maskIndex -= offset;\n                        }\n                    }\n                    maskIndex += offset;\n                } else if (valDigit === lastUntranslatedMaskChar) {\n                    lastUntranslatedMaskChar = undefined;\n                } else if (translation.optional) {\n                    maskIndex += offset;\n                    valueIndex -= offset;\n                } else {\n                    this.invalidCharacters.push({\n                        index: valueIndex,\n                        digit: valDigit,\n                        translated: translation.pattern\n                    });\n                }\n                valueIndex += offset;\n            } else {\n                if (!skipMaskChars) {\n                    buf[addMethod](maskDigit);\n                }\n                if (valDigit === maskDigit) {\n                    valueIndex += offset;\n                } else {\n                    lastUntranslatedMaskChar = maskDigit;\n                }\n                maskIndex += offset;\n            }\n            check = this.isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength);\n        }\n\n        const lastMaskCharDigit = mask.charAt(lastMaskChar);\n        if (maskLen === valueLength + 1 && !this.translationMask[lastMaskCharDigit]) {\n            buf.push(lastMaskCharDigit);\n        }\n\n        return buf.join('');\n    }\n\n    private isToCheck(isReversed, maskIndex, maskLen, valueIndex, valueLength) {\n        let check = false;\n        if (isReversed) {\n            check = (maskIndex > -1) && (valueIndex > -1);\n        } else {\n            check = (maskIndex < maskLen) && (valueIndex < valueLength);\n        }\n        return check;\n    }\n\n    private setValue(value) {\n        this.value = value;\n    }\n\n    private getValue() {\n        return this.value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { baseHost , WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'text-widget',\n    templateUrl: './text.widget.html',\n    styleUrls: ['./text.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TextWidgetComponent extends WidgetComponent implements OnInit {\n\n    mask: string;\n    placeholder: string;\n    isMaskReversed: boolean;\n\n    constructor(public formService: FormService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.params) {\n            this.mask = this.field.params['inputMask'];\n            this.placeholder = this.field.params['inputMask'] && this.field.params['inputMaskPlaceholder'] ? this.field.params['inputMaskPlaceholder'] : this.field.placeholder;\n            this.isMaskReversed = this.field.params['inputMaskReversed'] ? this.field.params['inputMaskReversed'] : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../../../services/form.service';\nimport { FormFieldOption } from './../core/form-field-option';\nimport { baseHost, WidgetComponent } from './../widget.component';\n\n@Component({\n    selector: 'typeahead-widget',\n    templateUrl: './typeahead.widget.html',\n    styleUrls: ['./typeahead.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class TypeaheadWidgetComponent extends WidgetComponent implements OnInit {\n\n    minTermLength: number = 1;\n    value: string;\n    oldValue: string;\n    options: FormFieldOption[] = [];\n\n    constructor(public formService: FormService,\n                private logService: LogService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field.form.taskId && this.field.restUrl) {\n            this.getValuesByTaskId();\n        } else if (this.field.form.processDefinitionId && this.field.restUrl) {\n            this.getValuesByProcessDefinitionId();\n        }\n        if (this.isReadOnlyType()) {\n            this.value = this.field.value;\n        }\n    }\n\n    getValuesByTaskId() {\n        this.formService\n            .getRestFieldValues(\n            this.field.form.taskId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                const options = formFieldOption || [];\n                this.field.options = options;\n\n                const fieldValue = this.field.value;\n                if (fieldValue) {\n                    const toSelect = options.find((item) => item.id === fieldValue || item.name.toLocaleLowerCase() === fieldValue.toLocaleLowerCase());\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getValuesByProcessDefinitionId() {\n        this.formService\n            .getRestFieldValuesByProcessId(\n            this.field.form.processDefinitionId,\n            this.field.id\n            )\n            .subscribe(\n            (formFieldOption: FormFieldOption[]) => {\n                const options = formFieldOption || [];\n                this.field.options = options;\n\n                const fieldValue = this.field.value;\n                if (fieldValue) {\n                    const toSelect = options.find((item) => item.id === fieldValue);\n                    if (toSelect) {\n                        this.value = toSelect.name;\n                    }\n                }\n                this.onFieldChanged(this.field);\n                this.field.updateForm();\n            },\n            (err) => this.handleError(err)\n            );\n    }\n\n    getOptions(): FormFieldOption[] {\n        const val = this.value.trim().toLocaleLowerCase();\n        return this.field.options.filter((item) => {\n            const name = item.name.toLocaleLowerCase();\n            return name.indexOf(val) > -1;\n        });\n    }\n\n    isValidOptionName(optionName: string): boolean {\n        const option = this.field.options.find((item) => item.name && item.name.toLocaleLowerCase() === optionName.toLocaleLowerCase());\n        return option ? true : false;\n    }\n\n    onKeyUp(event: KeyboardEvent) {\n        if (this.value && this.value.trim().length >= this.minTermLength && this.oldValue !== this.value) {\n            if (event.keyCode !== ESCAPE && event.keyCode !== ENTER) {\n                if (this.value.length >= this.minTermLength) {\n                    this.options = this.getOptions();\n                    this.oldValue = this.value;\n                    if (this.isValidOptionName(this.value)) {\n                        this.field.value = this.options[0].id;\n                    }\n                }\n            }\n        }\n        if (this.isValueDefined() && this.value.trim().length === 0) {\n            this.oldValue = this.value;\n            this.options = [];\n        }\n    }\n\n    onItemSelect(item: FormFieldOption) {\n        if (item) {\n            this.field.value = item.id;\n            this.value = item.name;\n            this.onFieldChanged(this.field);\n        }\n    }\n\n    validate() {\n        this.field.value = this.value;\n    }\n\n    isValueDefined() {\n        return this.value !== null && this.value !== undefined;\n    }\n\n    handleError(error: any) {\n        this.logService.error(error);\n    }\n\n    isReadOnlyType(): boolean {\n        return this.field.type === 'readonly' ? true : false;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProcessContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): any {\n        return this.apiService.getInstance().activiti.contentApi;\n    }\n\n    /**\n     * Create temporary related content from an uploaded file.\n     * @param file File to use for content\n     * @returns The created content data\n     */\n    createTemporaryRawRelatedContent(file: any): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.createTemporaryRawRelatedContent(file))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the metadata for a related content item.\n     * @param contentId ID of the content item\n     * @returns Metadata for the content\n     */\n    getFileContent(contentId: number): Observable<RelatedContentRepresentation> {\n        return from(this.contentApi.getContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets raw binary content data for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the related content\n     */\n    getFileRawContent(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getRawContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets the preview for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the content preview\n     */\n    getContentPreview(contentId: number): Observable<Blob> {\n        return new Observable((observer) => {\n            this.contentApi.getContentPreview(contentId).then(\n                (result) => {\n                    observer.next(result);\n                    observer.complete();\n                },\n                () => {\n                    this.contentApi.getRawContent(contentId).then(\n                        (data) => {\n                            observer.next(data);\n                            observer.complete();\n                        },\n                        (err) => {\n                            observer.error(err);\n                            observer.complete();\n                        }\n                    );\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL for direct access to a related content file.\n     * @param contentId ID of the related content\n     * @returns URL to access the content\n     */\n    getFileRawContentUrl(contentId: number): string {\n        return this.contentApi.getRawContentUrl(contentId);\n    }\n\n    /**\n     * Gets the thumbnail for a related content file.\n     * @param contentId ID of the related content\n     * @returns Binary data of the thumbnail image\n     */\n    getContentThumbnail(contentId: number): Observable<Blob> {\n        return from(this.contentApi.getContentThumbnail(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a task instance.\n     * @param taskId ID of the target task\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getTaskRelatedContent(taskId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForTask(taskId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets related content items for a process instance.\n     * @param processId ID of the target process\n     * @param opts Options supported by JS-API\n     * @returns Metadata for the content\n     */\n    getProcessRelatedContent(processId: string, opts?: any): Observable<any> {\n        return from(this.contentApi.getRelatedContentForProcessInstance(processId, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Deletes related content.\n     * @param contentId Identifier of the content to delete\n     * @returns Null response that notifies when the deletion is complete\n     */\n    deleteRelatedContent(contentId: number): Observable<any> {\n        return from(this.contentApi.deleteContent(contentId))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param content File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createProcessRelatedContent(processInstanceId: string, content: any, opts?: any): Observable<any> {\n        return from(this.contentApi.createRelatedContentOnProcessInstance(processInstanceId, content, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Associates an uploaded file with a task instance.\n     * @param taskId ID of the target task\n     * @param file File to associate\n     * @param opts Options supported by JS-API\n     * @returns Details of created content\n     */\n    createTaskRelatedContent(taskId: string, file: any, opts?: any) {\n        return from(this.contentApi.createRelatedContentOnTask(taskId, file, opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Creates a JSON representation of data.\n     * @param res Object representing data\n     * @returns JSON object\n     */\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    /**\n     * Creates a JSON array representation of data.\n     * @param res Object representing data\n     * @returns JSON array object\n     */\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    /**\n     * Reports an error message.\n     * @param error Data object with optional `message` and `status` fields for the error\n     * @returns Callback when an error occurs\n     */\n    handleError(error: any): Observable<any> {\n        let errMsg = ProcessContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ProcessContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:component-selector  */\n\nimport { LogService } from '../../../../services/log.service';\nimport { ThumbnailService } from '../../../../services/thumbnail.service';\nimport { Component, ElementRef, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { FormService } from '../../../services/form.service';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { baseHost, WidgetComponent } from './../widget.component';\nimport { mergeMap, map } from 'rxjs/operators';\n\n@Component({\n    selector: 'upload-widget',\n    templateUrl: './upload.widget.html',\n    styleUrls: ['./upload.widget.scss'],\n    host: baseHost,\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadWidgetComponent extends WidgetComponent implements OnInit {\n\n    hasFile: boolean;\n    displayText: string;\n    multipleOption: string = '';\n    mimeTypeIcon: string;\n\n    @ViewChild('uploadFiles')\n    fileInput: ElementRef;\n\n    constructor(public formService: FormService,\n                private logService: LogService,\n                private thumbnailService: ThumbnailService,\n                public processContentService: ProcessContentService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        if (this.field &&\n            this.field.value &&\n            this.field.value.length > 0) {\n            this.hasFile = true;\n        }\n        this.getMultipleFileParam();\n    }\n\n    removeFile(file: any) {\n        if (this.field) {\n            this.removeElementFromList(file);\n        }\n    }\n\n    onFileChanged(event: any) {\n        const files = event.target.files;\n        let filesSaved = [];\n\n        if (this.field.json.value) {\n            filesSaved = [...this.field.json.value];\n        }\n\n        if (files && files.length > 0) {\n            from(files)\n                .pipe(mergeMap((file) => this.uploadRawContent(file)))\n                .subscribe(\n                    (res) => filesSaved.push(res),\n                    () => this.logService.error('Error uploading file. See console output for more details.'),\n                    () => {\n                        this.field.value = filesSaved;\n                        this.field.json.value = filesSaved;\n                        this.hasFile = true;\n                    }\n                );\n        }\n    }\n\n    private uploadRawContent(file): Observable<any> {\n        return this.processContentService.createTemporaryRawRelatedContent(file)\n            .pipe(\n                map((response: any) => {\n                    this.logService.info(response);\n                    response.contentBlob = file;\n                    return response;\n                })\n            );\n    }\n\n    getMultipleFileParam() {\n        if (this.field &&\n            this.field.params &&\n            this.field.params.multiple) {\n            this.multipleOption = this.field.params.multiple ? 'multiple' : '';\n        }\n    }\n\n    private removeElementFromList(file) {\n        const index = this.field.value.indexOf(file);\n\n        if (index !== -1) {\n            this.field.value.splice(index, 1);\n            this.field.json.value = this.field.value;\n            this.field.updateForm();\n        }\n\n        this.hasFile = this.field.value.length > 0;\n\n        this.resetFormValueWithNoFiles();\n    }\n\n    private resetFormValueWithNoFiles() {\n        if (this.field.value.length === 0) {\n            this.field.value = [];\n            this.field.json.value = [];\n        }\n    }\n\n    getIcon(mimeType) {\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    fileClicked(contentLinkModel: any): void {\n        const file = new ContentLinkModel(contentLinkModel);\n        let fetch = this.processContentService.getContentPreview(file.id);\n        if (file.isTypeImage() || file.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(file.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                file.contentBlob = blob;\n                this.formService.formContentClicked.next(file);\n            },\n            () => {\n                this.logService.error('Unable to send event for file ' + file.name);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport { DatetimeAdapter, MAT_DATETIME_FORMATS } from '@mat-datetimepicker/core';\nimport { MomentDatetimeAdapter, MAT_MOMENT_DATETIME_FORMATS } from '@mat-datetimepicker/moment';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '../../../../services/user-preferences.service';\nimport { MomentDateAdapter } from '../../../../utils/momentDateAdapter';\nimport { MOMENT_DATE_FORMATS } from '../../../../utils/moment-date-formats.model';\nimport { FormService } from './../../../services/form.service';\nimport { WidgetComponent } from './../widget.component';\n\n@Component({\n    providers: [\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        { provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS },\n        { provide: DatetimeAdapter, useClass: MomentDatetimeAdapter },\n        { provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS }\n    ],\n    selector: 'date-time-widget',\n    templateUrl: './date-time.widget.html',\n    styleUrls: ['./date-time.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class DateTimeWidgetComponent extends WidgetComponent implements OnInit {\n\n    minDate: Moment;\n    maxDate: Moment;\n    displayDate: Moment;\n\n    constructor(public formService: FormService,\n                private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n        super(formService);\n    }\n\n    ngOnInit() {\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n\n        const momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplayFormat = this.field.dateDisplayFormat;\n\n        if (this.field) {\n            if (this.field.minValue) {\n                this.minDate = moment(this.field.minValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n\n            if (this.field.maxValue) {\n                this.maxDate = moment(this.field.maxValue, 'YYYY-MM-DDTHH:mm:ssZ');\n            }\n        }\n        this.displayDate = moment(this.field.value, this.field.dateDisplayFormat);\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue && newDateValue.value) {\n            this.field.value = newDateValue.value.format(this.field.dateDisplayFormat);\n        } else if (newDateValue) {\n            this.field.value = newDateValue;\n        } else {\n            this.field.value = null;\n        }\n        this.onFieldChanged(this.field);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContainerWidgetComponent } from './container/container.widget';\nimport { TabsWidgetComponent } from './tabs/tabs.widget';\nimport { UnknownWidgetComponent } from './unknown/unknown.widget';\n\nimport { AmountWidgetComponent } from './amount/amount.widget';\nimport { CheckboxWidgetComponent } from './checkbox/checkbox.widget';\nimport { DateWidgetComponent } from './date/date.widget';\nimport { DisplayTextWidgetComponentComponent } from './display-text/display-text.widget';\nimport { DocumentWidgetComponent } from './document/document.widget';\nimport { DropdownWidgetComponent } from './dropdown/dropdown.widget';\nimport { DynamicTableWidgetComponent } from './dynamic-table/dynamic-table.widget';\nimport { BooleanEditorComponent } from './dynamic-table/editors/boolean/boolean.editor';\nimport { DateEditorComponent } from './dynamic-table/editors/date/date.editor';\nimport { DateTimeEditorComponent } from './dynamic-table/editors/datetime/datetime.editor';\nimport { DropdownEditorComponent } from './dynamic-table/editors/dropdown/dropdown.editor';\nimport { RowEditorComponent } from './dynamic-table/editors/row.editor';\nimport { TextEditorComponent } from './dynamic-table/editors/text/text.editor';\nimport { ErrorWidgetComponent } from './error/error.component';\nimport { FunctionalGroupWidgetComponent } from './functional-group/functional-group.widget';\nimport { HyperlinkWidgetComponent } from './hyperlink/hyperlink.widget';\nimport { MultilineTextWidgetComponentComponent } from './multiline-text/multiline-text.widget';\nimport { NumberWidgetComponent } from './number/number.widget';\nimport { PeopleWidgetComponent } from './people/people.widget';\nimport { RadioButtonsWidgetComponent } from './radio-buttons/radio-buttons.widget';\nimport { InputMaskDirective } from './text/text-mask.component';\nimport { TextWidgetComponent } from './text/text.widget';\nimport { TypeaheadWidgetComponent } from './typeahead/typeahead.widget';\nimport { UploadWidgetComponent } from './upload/upload.widget';\nimport { DateTimeWidgetComponent } from './date-time/date-time.widget';\n\n// core\nexport * from './widget.component';\nexport * from './core/index';\n\n// containers\nexport * from './tabs/tabs.widget';\nexport * from './container/container.widget';\n\n// primitives\nexport * from './unknown/unknown.widget';\nexport * from './text/text.widget';\nexport * from './number/number.widget';\nexport * from './checkbox/checkbox.widget';\nexport * from './multiline-text/multiline-text.widget';\nexport * from './dropdown/dropdown.widget';\nexport * from './hyperlink/hyperlink.widget';\nexport * from './radio-buttons/radio-buttons.widget';\nexport * from './display-text/display-text.widget';\nexport * from './upload/upload.widget';\nexport * from './typeahead/typeahead.widget';\nexport * from './functional-group/functional-group.widget';\nexport * from './people/people.widget';\nexport * from './date/date.widget';\nexport * from './amount/amount.widget';\nexport * from './dynamic-table/dynamic-table.widget';\nexport * from './error/error.component';\nexport * from './document/document.widget';\nexport * from './date-time/date-time.widget';\n\n// editors (dynamic table)\nexport * from './dynamic-table/dynamic-table.widget.model';\nexport * from './dynamic-table/editors/row.editor';\nexport * from './dynamic-table/editors/date/date.editor';\nexport * from './dynamic-table/editors/dropdown/dropdown.editor';\nexport * from './dynamic-table/editors/boolean/boolean.editor';\nexport * from './dynamic-table/editors/text/text.editor';\nexport * from './dynamic-table/editors/datetime/datetime.editor';\nexport * from './text/text-mask.component';\n\nexport const WIDGET_DIRECTIVES: any[] = [\n    UnknownWidgetComponent,\n    TabsWidgetComponent,\n    ContainerWidgetComponent,\n    TextWidgetComponent,\n    NumberWidgetComponent,\n    CheckboxWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    DropdownWidgetComponent,\n    HyperlinkWidgetComponent,\n    RadioButtonsWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    UploadWidgetComponent,\n    TypeaheadWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    PeopleWidgetComponent,\n    DateWidgetComponent,\n    AmountWidgetComponent,\n    DynamicTableWidgetComponent,\n    DateEditorComponent,\n    DropdownEditorComponent,\n    BooleanEditorComponent,\n    TextEditorComponent,\n    RowEditorComponent,\n    ErrorWidgetComponent,\n    DocumentWidgetComponent,\n    DateTimeWidgetComponent,\n    DateTimeEditorComponent\n];\n\nexport const MASK_DIRECTIVE: any[] = [\n    InputMaskDirective\n];\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormBaseModel } from './form-base.model';\nimport { FormOutcomeModel, FormFieldValidator, FormFieldModel, FormOutcomeEvent } from './widgets';\nimport { EventEmitter, Input, Output } from '@angular/core';\n\nexport abstract class FormBaseComponent {\n\n    static SAVE_OUTCOME_ID: string = '$save';\n    static COMPLETE_OUTCOME_ID: string = '$complete';\n    static START_PROCESS_OUTCOME_ID: string = '$startProcess';\n    static CUSTOM_OUTCOME_ID: string = '$custom';\n    static COMPLETE_BUTTON_COLOR: string = 'primary';\n    static COMPLETE_OUTCOME_NAME: string = 'COMPLETE';\n\n    /** Path of the folder where the metadata will be stored. */\n    @Input()\n    path: string;\n\n    /** Name to assign to the new node where the metadata are stored. */\n    @Input()\n    nameNode: string;\n\n    /** Toggle rendering of the form title. */\n    @Input()\n    showTitle: boolean = true;\n\n    /** Toggle rendering of the `Complete` outcome button. */\n    @Input()\n    showCompleteButton: boolean = true;\n\n    /** If true then the `Complete` outcome button is shown but it will be disabled. */\n    @Input()\n    disableCompleteButton: boolean = false;\n\n    /** If true then the `Start Process` outcome button is shown but it will be disabled. */\n    @Input()\n    disableStartProcessButton: boolean = false;\n\n    /** Toggle rendering of the `Save` outcome button. */\n    @Input()\n    showSaveButton: boolean = true;\n\n    /** Toggle readonly state of the form. Forces all form widgets to render as readonly if enabled. */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Toggle rendering of the `Refresh` button. */\n    @Input()\n    showRefreshButton: boolean = true;\n\n    /** Toggle rendering of the validation icon next to the form title. */\n    @Input()\n    showValidationIcon: boolean = true;\n\n    /** Contains a list of form field validator instances. */\n    @Input()\n    fieldValidators: FormFieldValidator[] = [];\n\n    /** Emitted when the supplied form values have a validation error. */\n    @Output()\n    formError: EventEmitter<FormFieldModel[]> = new EventEmitter<FormFieldModel[]>();\n\n    /** Emitted when any outcome is executed. Default behaviour can be prevented\n     * via `event.preventDefault()`.\n     */\n    @Output()\n    executeOutcome: EventEmitter<FormOutcomeEvent> = new EventEmitter<FormOutcomeEvent>();\n\n    /**\n     * Emitted when any error occurs.\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    form: FormBaseModel;\n\n    getParsedFormDefinition(): FormBaseComponent {\n        return this;\n    }\n\n    hasForm(): boolean {\n        return this.form ? true : false;\n    }\n\n    isTitleEnabled(): boolean {\n        let titleEnabled = false;\n        if (this.showTitle && this.form) {\n            titleEnabled = true;\n        }\n        return titleEnabled;\n    }\n\n    getColorForOutcome(outcomeName: string): string {\n        return outcomeName === FormBaseComponent.COMPLETE_OUTCOME_NAME ? FormBaseComponent.COMPLETE_BUTTON_COLOR : '';\n    }\n\n    isOutcomeButtonEnabled(outcome: FormOutcomeModel): boolean {\n        if (this.form.readOnly) {\n            return false;\n        }\n\n        if (outcome) {\n            // Make 'Save' button always available\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return true;\n            }\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.disableCompleteButton ? false : this.form.isValid;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return this.disableStartProcessButton ? false : this.form.isValid;\n            }\n            return this.form.isValid;\n        }\n        return false;\n    }\n\n    isOutcomeButtonVisible(outcome: FormOutcomeModel, isFormReadOnly: boolean): boolean {\n        if (outcome && outcome.name) {\n            if (outcome.name === FormOutcomeModel.COMPLETE_ACTION) {\n                return this.showCompleteButton;\n            }\n            if (isFormReadOnly) {\n                return outcome.isSelected;\n            }\n            if (outcome.name === FormOutcomeModel.SAVE_ACTION) {\n                return this.showSaveButton;\n            }\n            if (outcome.name === FormOutcomeModel.START_PROCESS_ACTION) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Invoked when user clicks outcome button.\n     * @param outcome Form outcome model\n     */\n    onOutcomeClicked(outcome: FormOutcomeModel): boolean {\n        if (!this.readOnly && outcome && this.form) {\n\n            if (!this.onExecuteOutcome(outcome)) {\n                return false;\n            }\n\n            if (outcome.isSystem) {\n                if (outcome.id === FormBaseComponent.SAVE_OUTCOME_ID) {\n                    this.saveTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.COMPLETE_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.START_PROCESS_OUTCOME_ID) {\n                    this.completeTaskForm();\n                    return true;\n                }\n\n                if (outcome.id === FormBaseComponent.CUSTOM_OUTCOME_ID) {\n                    this.onTaskSaved(this.form);\n                    this.storeFormAsMetadata();\n                    return true;\n                }\n            } else {\n                // Note: Activiti is using NAME field rather than ID for outcomes\n                if (outcome.name) {\n                    this.onTaskSaved(this.form);\n                    this.completeTaskForm(outcome.name);\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    handleError(err: any): any {\n        this.error.emit(err);\n    }\n\n    abstract onRefreshClicked();\n\n    abstract saveTaskForm();\n\n    abstract completeTaskForm(outcome?: string);\n\n    protected abstract onTaskSaved(form: FormBaseModel);\n\n    protected abstract storeFormAsMetadata();\n\n    protected abstract onExecuteOutcome(outcome: FormOutcomeModel);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { FormService } from './../services/form.service';\n\n@Component({\n    selector: 'adf-form-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormListComponent implements OnChanges {\n\n    /** The array that contains the information to show inside the list. */\n    @Input()\n    forms: any [] = [];\n\n    constructor(protected formService: FormService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.getForms();\n    }\n\n    isEmpty(): boolean {\n        return this.forms && this.forms.length === 0;\n    }\n\n    getForms() {\n        this.formService.getForms().subscribe((forms) => {\n            this.forms.push(...forms);\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService } from '../../../../services/content.service';\nimport { LogService } from '../../../../services/log.service';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProcessContentService } from '../../../services/process-content.service';\nimport { ContentLinkModel } from '../core/content-link.model';\nimport { FormService } from './../../../services/form.service';\n\n@Component({\n    selector: 'adf-content',\n    templateUrl: './content.widget.html',\n    styleUrls: ['./content.widget.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentWidgetComponent implements OnChanges {\n\n    /** The content id to show. */\n    @Input()\n    id: string;\n\n    /** Toggles showing document content. */\n    @Input()\n    showDocumentContent: boolean = true;\n\n    /** Emitted when the content is clicked. */\n    @Output()\n    contentClick = new EventEmitter();\n\n    /** Emitted when the thumbnail has loaded. */\n    @Output()\n    thumbnailLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the content has loaded. */\n    @Output()\n    contentLoaded: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    content: ContentLinkModel;\n\n    constructor(protected formService: FormService,\n                private logService: LogService,\n                private contentService: ContentService,\n                private processContentService: ProcessContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const contentId = changes['id'];\n        if (contentId && contentId.currentValue) {\n            this.loadContent(contentId.currentValue);\n        }\n    }\n\n    loadContent(id: number) {\n        this.processContentService\n            .getFileContent(id)\n            .subscribe(\n                (response: ContentLinkModel) => {\n                    this.content = new ContentLinkModel(response);\n                    this.contentLoaded.emit(this.content);\n                    this.loadThumbnailUrl(this.content);\n                },\n                (error) => {\n                    this.error.emit(error);\n                }\n            );\n    }\n\n    loadThumbnailUrl(content: ContentLinkModel) {\n        if (this.content.isThumbnailSupported()) {\n            let observable: Observable<any>;\n\n            if (this.content.isTypeImage()) {\n                observable = this.processContentService.getFileRawContent(content.id);\n            } else {\n                observable = this.processContentService.getContentThumbnail(content.id);\n            }\n\n            if (observable) {\n                observable.subscribe(\n                    (response: Blob) => {\n                        this.content.thumbnailUrl = this.contentService.createTrustedUrl(response);\n                        this.thumbnailLoaded.emit(this.content.thumbnailUrl);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n\n                    }\n                );\n            }\n        }\n    }\n\n    openViewer(content: ContentLinkModel): void {\n        let fetch = this.processContentService.getContentPreview(content.id);\n        if (content.isTypeImage() || content.isTypePdf()) {\n            fetch = this.processContentService.getFileRawContent(content.id);\n        }\n        fetch.subscribe(\n            (blob: Blob) => {\n                content.contentBlob = blob;\n                this.contentClick.emit(content);\n                this.logService.info('Content clicked' + content.id);\n                this.formService.formContentClicked.next(content);\n            },\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n\n    /**\n     * Invoke content download.\n     */\n    download(content: ContentLinkModel): void {\n        this.processContentService.getFileRawContent(content.id).subscribe(\n            (blob: Blob) => this.contentService.downloadBlob(blob, content.name),\n            (error) => {\n                this.error.emit(error);\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { FormBaseModel } from './form-base.model';\n\n@Component({\n    selector: 'adf-form-renderer',\n    templateUrl: './form-renderer.component.html',\n    styleUrls: ['./form-renderer.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormRendererComponent {\n\n    /** Toggle debug options. */\n    @Input()\n    showDebugButton: boolean = false;\n\n    @Input()\n    formDefinition: FormBaseModel;\n\n    debugMode: boolean;\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { LogService } from '../../services/log.service';\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiCompatibility, MinimalNode, RelatedContentRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { ExternalContent } from '../components/widgets/core/external-content';\nimport { ExternalContentLink } from '../components/widgets/core/external-content-link';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ActivitiContentService {\n\n    static UNKNOWN_ERROR_MESSAGE: string = 'Unknown error';\n    static GENERIC_ERROR_MESSAGE: string = 'Server error';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoNodes(accountId: string, folderId: string): Observable<[ExternalContent]> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const accountShortId = accountId.replace('alfresco-', '');\n        return from(apiService.activiti.alfrescoApi.getContentInFolder(accountShortId, folderId))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of all the repositories configured\n     *\n     * @param accountId\n     * @param folderId\n     */\n    getAlfrescoRepositories(tenantId: number, includeAccount: boolean): Observable<any> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const opts = {\n            tenantId: tenantId,\n            includeAccounts: includeAccount\n        };\n        return from(apiService.activiti.alfrescoApi.getRepositories(opts))\n            .pipe(\n                map(this.toJsonArray),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Returns a list of child nodes below the specified folder\n     *\n     * @param accountId\n     * @param node\n     * @param siteId\n     */\n    linkAlfrescoNode(accountId: string, node: ExternalContent, siteId: string): Observable<ExternalContentLink> {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent({\n            link: true,\n            name: node.title,\n            simpleType: node.simpleType,\n            source: accountId,\n            sourceId: node.id + '@' + siteId\n        }))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    applyAlfrescoNode(node: MinimalNode, siteId: string, accountId: string) {\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        const currentSideId = siteId ? siteId : this.getSiteNameFromNodePath(node);\n        const params: RelatedContentRepresentation = {\n            source: accountId,\n            mimeType: node.content.mimeType,\n            sourceId: node.id + ';' + node.properties['cm:versionLabel'] + '@' + currentSideId,\n            name: node.name,\n            link: false\n        };\n        return from(apiService.activiti.contentApi.createTemporaryRelatedContent(params))\n            .pipe(\n                map(this.toJson),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private getSiteNameFromNodePath(node: MinimalNode): string {\n        let siteName = '';\n        if (node.path) {\n            const foundNode = node.path\n                .elements.find((pathNode: MinimalNode) =>\n                    pathNode.nodeType === 'st:site' &&\n                    pathNode.name !== 'Sites');\n            siteName = foundNode ? foundNode.name : '';\n        }\n        return siteName.toLocaleLowerCase();\n    }\n\n    toJson(res: any) {\n        if (res) {\n            return res || {};\n        }\n        return {};\n    }\n\n    toJsonArray(res: any) {\n        if (res) {\n            return res.data || [];\n        }\n        return [];\n    }\n\n    handleError(error: any): Observable<any> {\n        let errMsg = ActivitiContentService.UNKNOWN_ERROR_MESSAGE;\n        if (error) {\n            errMsg = (error.message) ? error.message :\n                error.status ? `${error.status} - ${error.statusText}` : ActivitiContentService.GENERIC_ERROR_MESSAGE;\n        }\n        this.logService.error(errMsg);\n        return throwError(errMsg);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicComponentMapper, DynamicComponentResolveFunction, DynamicComponentResolver } from '../../services/dynamic-component-mapper.service';\nimport { Injectable, Type } from '@angular/core';\n\nimport {\n    AmountWidgetComponent,\n    CheckboxWidgetComponent,\n    ContainerWidgetComponent,\n    DateWidgetComponent,\n    DisplayTextWidgetComponentComponent,\n    DocumentWidgetComponent,\n    DropdownWidgetComponent,\n    DynamicTableWidgetComponent,\n    FunctionalGroupWidgetComponent,\n    HyperlinkWidgetComponent,\n    MultilineTextWidgetComponentComponent,\n    NumberWidgetComponent,\n    PeopleWidgetComponent,\n    RadioButtonsWidgetComponent,\n    TextWidgetComponent,\n    TypeaheadWidgetComponent,\n    UnknownWidgetComponent,\n    UploadWidgetComponent,\n    DateTimeWidgetComponent\n} from './../components/widgets/index';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FormRenderingService extends DynamicComponentMapper {\n\n    protected defaultValue: Type<{}> = UnknownWidgetComponent;\n    protected types: { [key: string]: DynamicComponentResolveFunction } = {\n        'text': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'string': DynamicComponentResolver.fromType(TextWidgetComponent),\n        'integer': DynamicComponentResolver.fromType(NumberWidgetComponent),\n        'multi-line-text': DynamicComponentResolver.fromType(MultilineTextWidgetComponentComponent),\n        'boolean': DynamicComponentResolver.fromType(CheckboxWidgetComponent),\n        'dropdown': DynamicComponentResolver.fromType(DropdownWidgetComponent),\n        'date': DynamicComponentResolver.fromType(DateWidgetComponent),\n        'amount': DynamicComponentResolver.fromType(AmountWidgetComponent),\n        'radio-buttons': DynamicComponentResolver.fromType(RadioButtonsWidgetComponent),\n        'hyperlink': DynamicComponentResolver.fromType(HyperlinkWidgetComponent),\n        'readonly-text': DynamicComponentResolver.fromType(DisplayTextWidgetComponentComponent),\n        'typeahead': DynamicComponentResolver.fromType(TypeaheadWidgetComponent),\n        'people': DynamicComponentResolver.fromType(PeopleWidgetComponent),\n        'functional-group': DynamicComponentResolver.fromType(FunctionalGroupWidgetComponent),\n        'dynamic-table': DynamicComponentResolver.fromType(DynamicTableWidgetComponent),\n        'container': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'group': DynamicComponentResolver.fromType(ContainerWidgetComponent),\n        'document': DynamicComponentResolver.fromType(DocumentWidgetComponent),\n        'upload':  DynamicComponentResolver.fromType(UploadWidgetComponent),\n        'datetime':  DynamicComponentResolver.fromType(DateTimeWidgetComponent)\n    };\n\n    constructor() {\n        super();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class NodeMetadata {\n    metadata: any;\n    nodeType: string;\n\n    constructor(metadata: any, nodeType: string) {\n        this.metadata = metadata;\n        this.nodeType = nodeType;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '../../services/alfresco-api.service';\nimport { Injectable } from '@angular/core';\nimport { Observable, from } from 'rxjs';\nimport { NodeMetadata } from '../models/node-metadata.model';\nimport { map } from 'rxjs/operators';\nimport { AlfrescoApiCompatibility, NodeEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Get the metadata and the nodeType for a nodeId cleaned by the prefix.\n     * @param nodeId ID of the target node\n     * @returns Node metadata\n     */\n    public getNodeMetadata(nodeId: string): Observable<NodeMetadata> {\n        return from(this.apiService.getInstance().nodes.getNode(nodeId))\n            .pipe(map(this.cleanMetadataFromSemicolon));\n    }\n\n    /**\n     * Create a new Node from form metadata.\n     * @param path Path to the node\n     * @param nodeType Node type\n     * @param name Node name\n     * @param nameSpace Namespace for properties\n     * @param data Property data to store in the node under namespace\n     * @returns The created node\n     */\n    public createNodeMetadata(nodeType: string, nameSpace: any, data: any, path: string, name?: string): Observable<NodeEntry> {\n        const properties = {};\n        for (const key in data) {\n            if (data[key]) {\n                properties[nameSpace + ':' + key] = data[key];\n            }\n        }\n\n        return this.createNode(name || this.generateUuid(), nodeType, properties, path);\n    }\n\n    /**\n     * Create a new Node from form metadata\n     * @param name Node name\n     * @param nodeType Node type\n     * @param properties Node body properties\n     * @param path Path to the node\n     * @returns The created node\n     */\n    public createNode(name: string, nodeType: string, properties: any, path: string): Observable<NodeEntry> {\n        const body = {\n            name: name,\n            nodeType: nodeType,\n            properties: properties,\n            relativePath: path\n        };\n\n        const apiService: AlfrescoApiCompatibility = this.apiService.getInstance();\n        return from(apiService.nodes.addNode('-root-', body, {}));\n    }\n\n    private generateUuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    private cleanMetadataFromSemicolon(nodeEntry: NodeEntry): NodeMetadata {\n        const metadata = {};\n\n        if (nodeEntry && nodeEntry.entry.properties) {\n            for (const key in nodeEntry.entry.properties) {\n                if (key) {\n                    if (key.indexOf(':') !== -1) {\n                        metadata [key.split(':')[1]] = nodeEntry.entry.properties[key];\n                    } else {\n                        metadata [key] = nodeEntry.entry.properties[key];\n                    }\n                }\n            }\n        }\n\n        return new NodeMetadata(metadata, nodeEntry.entry.nodeType);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel } from './../components/widgets/core/index';\nimport { FormEvent } from './form.event';\n\nexport class FormErrorEvent extends FormEvent {\n\n    readonly error: any;\n\n    constructor(form: FormModel, error: any) {\n        super(form);\n        this.error = error;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-form-custom-button], [form-custom-button]' }) export class StartFormCustomButtonDirective {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Compiler,\n    Component, ComponentFactory,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    ModuleWithComponentFactories,\n    NgModule,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { FormRenderingService } from './../../services/form-rendering.service';\nimport { WidgetVisibilityService } from './../../services/widget-visibility.service';\nimport { FormFieldModel } from './../widgets/core/form-field.model';\nimport { WidgetComponent } from './../widgets/widget.component';\n\ndeclare var adf: any;\n\n@Component({\n    selector: 'adf-form-field',\n    template: `\n        <div [id]=\"'field-'+field?.id+'-container'\"\n            [hidden]=\"!field?.isVisible\"\n            [class.adf-focus]=\"focus\"\n            (focusin)=\"focusToggle()\"\n            (focusout)=\"focusToggle()\">\n            <div #container></div>\n        </div>\n    `,\n    encapsulation: ViewEncapsulation.None\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n\n    @ViewChild('container', { read: ViewContainerRef })\n    container: ViewContainerRef;\n\n    /** Contains all the necessary data needed to determine what UI Widget\n     * to use when rendering the field in the form. You would typically not\n     * create this data manually but instead create the form in APS and export\n     * it to get to all the `FormFieldModel` definitions.\n     */\n    @Input()\n    field: FormFieldModel = null;\n\n    componentRef: ComponentRef<{}>;\n\n    focus: boolean = false;\n\n    constructor(private formRenderingService: FormRenderingService,\n                private componentFactoryResolver: ComponentFactoryResolver,\n                private visibilityService: WidgetVisibilityService,\n                private compiler: Compiler) {\n    }\n\n    ngOnInit() {\n        const w: any = window;\n        if (w.adf === undefined) {\n            w.adf = {};\n        }\n        const originalField = this.getField();\n        if (originalField) {\n            const customTemplate = this.field.form.customFieldTemplates[originalField.type];\n            if (customTemplate && this.hasController(originalField.type)) {\n                const factory = this.getComponentFactorySync(originalField.type, customTemplate);\n                this.componentRef = this.container.createComponent(factory);\n                const instance: any = this.componentRef.instance;\n                if (instance) {\n                    instance.field = originalField;\n                }\n            } else {\n                const componentType = this.formRenderingService.resolveComponentType(originalField);\n                if (componentType) {\n                    const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n                    this.componentRef = this.container.createComponent(factory);\n                    const instance = <WidgetComponent> this.componentRef.instance;\n                    instance.field = this.field;\n                    instance.fieldChanged.subscribe((field) => {\n                        if (field && this.field.form) {\n                            this.visibilityService.refreshVisibility(field.form);\n                            field.form.onFormFieldChanged(field);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private getField(): FormFieldModel {\n        if (this.field && this.field.params) {\n            const wrappedField = this.field.params.field;\n            if (wrappedField && wrappedField.type) {\n                return wrappedField;\n            }\n        }\n        return this.field;\n    }\n\n    private hasController(type: string): boolean {\n        return (adf && adf.components && adf.components[type]);\n    }\n\n    private getComponentFactorySync(type: string, template: string): ComponentFactory<any> {\n        const componentInfo = adf.components[type];\n\n        if (componentInfo.factory) {\n            return componentInfo.factory;\n        }\n\n        const metadata = {\n            selector: `runtime-component-${type}`,\n            template: template\n        };\n\n        const factory = this.createComponentFactorySync(this.compiler, metadata, componentInfo.class);\n        componentInfo.factory = factory;\n        return factory;\n    }\n\n    private createComponentFactorySync(compiler: Compiler, metadata: Component, componentClass: any): ComponentFactory<any> {\n        const cmpClass = componentClass || class RuntimeComponent {\n        };\n        const decoratedCmp = Component(metadata)(cmpClass);\n\n        @NgModule({ imports: [], declarations: [decoratedCmp] })\n        class RuntimeComponentModule {\n        }\n\n        const module: ModuleWithComponentFactories<any> = compiler.compileModuleAndAllComponentsSync(RuntimeComponentModule);\n        return module.componentFactories.find((x) => x.componentType === decoratedCmp);\n    }\n\n    focusToggle() {\n        this.focus = !this.focus;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { PipeModule } from '../pipes/pipe.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MaterialModule } from '../material.module';\n\nimport { MASK_DIRECTIVE, WIDGET_DIRECTIVES } from './components/widgets/index';\n\nimport { StartFormCustomButtonDirective } from './components/form-custom-button.directive';\n\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { FormListComponent } from './components/form-list.component';\nimport { ContentWidgetComponent } from './components/widgets/content/content.widget';\nimport { WidgetComponent } from './components/widgets/widget.component';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\nimport { FormRendererComponent } from './components/form-renderer.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        DataTableModule,\n        HttpClientModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        DataColumnModule,\n        PipeModule,\n        MatDatetimepickerModule,\n        MatNativeDatetimeModule\n    ],\n    declarations: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES,\n        ...MASK_DIRECTIVE,\n        WidgetComponent\n    ],\n    entryComponents: [\n        ...WIDGET_DIRECTIVES\n    ],\n    exports: [\n        ContentWidgetComponent,\n        FormFieldComponent,\n        FormListComponent,\n        FormRendererComponent,\n        StartFormCustomButtonDirective,\n        ...WIDGET_DIRECTIVES\n    ]\n})\nexport class FormBaseModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-content'\n})\nexport class SidenavLayoutContentDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-header'\n})\nexport class SidenavLayoutHeaderDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentChild, Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n    selector: 'adf-sidenav-layout-navigation'\n})\nexport class SidenavLayoutNavigationDirective {\n    @ContentChild(TemplateRef)\n    public template: TemplateRef<any>;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    OnInit,\n    AfterViewInit,\n    ViewChild,\n    OnDestroy,\n    TemplateRef,\n    EventEmitter,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { SidenavLayoutContentDirective } from '../../directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from '../../directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from '../../directives/sidenav-layout-navigation.directive';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Component({\n    selector: 'adf-sidenav-layout',\n    templateUrl: './sidenav-layout.component.html',\n    styleUrls: ['./sidenav-layout.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sidenav-layout' }\n})\nexport class SidenavLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n    static STEP_OVER = 600;\n\n    /** The direction of the layout. 'ltr' or 'rtl' */\n    @Input() direction = 'ltr';\n\n    /** The side that the drawer is attached to. Possible values are 'start' and 'end'. */\n    @Input() position = 'start';\n\n    /** Minimum size of the navigation region. */\n    @Input() sidenavMin: number;\n\n    /** Maximum size of the navigation region. */\n    @Input() sidenavMax: number;\n\n    /** Screen size at which display switches from small screen to large screen configuration. */\n    @Input() stepOver: number;\n\n    /** Toggles showing/hiding the navigation region. */\n    @Input() hideSidenav = false;\n\n    /** Should the navigation region be expanded initially? */\n    @Input() expandedSidenav = true;\n\n    /** Emitted when the menu toggle and the collapsed/expanded state of the sideNav changes. */\n    @Output() expanded = new EventEmitter<boolean>();\n\n    @ContentChild(SidenavLayoutHeaderDirective) headerDirective: SidenavLayoutHeaderDirective;\n    @ContentChild(SidenavLayoutNavigationDirective) navigationDirective: SidenavLayoutNavigationDirective;\n    @ContentChild(SidenavLayoutContentDirective) contentDirective: SidenavLayoutContentDirective;\n\n    private menuOpenStateSubject: BehaviorSubject<boolean>;\n    public menuOpenState$: Observable<boolean>;\n\n    @ViewChild('container') container: any;\n    @ViewChild('emptyTemplate') emptyTemplate: any;\n\n    mediaQueryList: MediaQueryList;\n    _isMenuMinimized;\n\n    templateContext = {\n        toggleMenu: () => {},\n        isMenuMinimized: () => this.isMenuMinimized\n    };\n\n    constructor(private mediaMatcher: MediaMatcher) {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        const initialMenuState = !this.expandedSidenav;\n\n        this.menuOpenStateSubject = new BehaviorSubject<boolean>(initialMenuState);\n        this.menuOpenState$ = this.menuOpenStateSubject.asObservable();\n\n        const stepOver = this.stepOver || SidenavLayoutComponent.STEP_OVER;\n        this.isMenuMinimized = initialMenuState;\n\n        this.mediaQueryList = this.mediaMatcher.matchMedia(`(max-width: ${stepOver}px)`);\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n    }\n\n    ngAfterViewInit() {\n        this.templateContext.toggleMenu = this.toggleMenu.bind(this);\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu() {\n        if (!this.mediaQueryList.matches) {\n            this.isMenuMinimized = !this.isMenuMinimized;\n        } else {\n            this.isMenuMinimized = false;\n        }\n\n        this.container.toggleMenu();\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n\n    get isMenuMinimized() {\n        return this._isMenuMinimized;\n    }\n\n    set isMenuMinimized(menuState: boolean) {\n        this._isMenuMinimized = menuState;\n        this.menuOpenStateSubject.next(!menuState);\n    }\n\n    get isHeaderInside() {\n        return this.mediaQueryList.matches;\n    }\n\n    get headerTemplate(): TemplateRef<any> {\n        return this.headerDirective && this.headerDirective.template || this.emptyTemplate;\n    }\n\n    get navigationTemplate(): TemplateRef<any> {\n        return this.navigationDirective && this.navigationDirective.template || this.emptyTemplate;\n    }\n\n    get contentTemplate(): TemplateRef<any> {\n        return this.contentDirective && this.contentDirective.template || this.emptyTemplate;\n    }\n\n    onMediaQueryChange() {\n        this.isMenuMinimized = false;\n        this.expanded.emit(!this.isMenuMinimized);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { trigger, transition, animate, style, state, AnimationTriggerMetadata } from '@angular/animations';\n\nexport const sidenavAnimation: AnimationTriggerMetadata = trigger('sidenavAnimation', [\n    state('expanded', style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    state('compact',  style({ width: '{{ width }}px' }), { params : { width: 0 } }),\n    transition('compact <=> expanded', animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationLeft: AnimationTriggerMetadata = trigger('contentAnimationLeft', [\n    state('expanded', style({ 'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-left': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n\nexport const contentAnimationRight: AnimationTriggerMetadata = trigger('contentAnimationRight', [\n    state('expanded', style({ 'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    state('compact',  style({'margin-right': '{{ margin }}px' }), { params : { margin: 0 } }),\n    transition('expanded <=> compact', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, OnInit, OnDestroy, ViewEncapsulation } from '@angular/core';\nimport { MatSidenav } from '@angular/material';\nimport { sidenavAnimation, contentAnimationLeft, contentAnimationRight } from '../../helpers/animations';\n\n@Component({\n    selector: 'adf-layout-container',\n    templateUrl: './layout-container.component.html',\n    styleUrls: ['./layout-container.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: [sidenavAnimation, contentAnimationLeft, contentAnimationRight]\n})\nexport class LayoutContainerComponent implements OnInit, OnDestroy {\n    @Input() sidenavMin: number;\n    @Input() sidenavMax: number;\n\n    // \" | any\", because Safari throws an error otherwise...\n    @Input() mediaQueryList: MediaQueryList | any;\n\n    @Input() hideSidenav = false;\n    @Input() expandedSidenav = true;\n\n    /** The side that the drawer is attached to 'start' | 'end' page */\n    @Input() position = 'start';\n\n    @ViewChild(MatSidenav) sidenav: MatSidenav;\n\n    sidenavAnimationState: any;\n    contentAnimationState: any;\n\n    SIDENAV_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n    CONTENT_STATES = { MOBILE: {}, EXPANDED: {}, COMPACT: {} };\n\n    constructor() {\n        this.onMediaQueryChange = this.onMediaQueryChange.bind(this);\n    }\n\n    ngOnInit() {\n        this.SIDENAV_STATES.MOBILE = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.EXPANDED = { value: 'expanded', params: { width: this.sidenavMax } };\n        this.SIDENAV_STATES.COMPACT = { value: 'compact', params: { width: this.sidenavMin } };\n\n        this.CONTENT_STATES.MOBILE = { value: 'expanded', params: { margin: 0 } };\n        this.CONTENT_STATES.EXPANDED = { value: 'expanded', params: { margin: this.sidenavMin } };\n        this.CONTENT_STATES.COMPACT = { value: 'compact', params: { margin: this.sidenavMax } };\n\n        this.mediaQueryList.addListener(this.onMediaQueryChange);\n\n        if (this.isMobileScreenSize) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.MOBILE;\n            this.contentAnimationState = this.CONTENT_STATES.MOBILE;\n        } else if (this.expandedSidenav) {\n            this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n            this.contentAnimationState = this.CONTENT_STATES.COMPACT;\n        } else {\n            this.sidenavAnimationState = this.SIDENAV_STATES.COMPACT;\n            this.contentAnimationState = this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.mediaQueryList.removeListener(this.onMediaQueryChange);\n    }\n\n    toggleMenu(): void {\n        if (this.isMobileScreenSize) {\n            this.sidenav.toggle();\n        } else {\n            this.sidenavAnimationState = this.toggledSidenavAnimation;\n            this.contentAnimationState = this.toggledContentAnimation;\n        }\n    }\n\n    private get toggledSidenavAnimation() {\n        return this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED\n            ? this.SIDENAV_STATES.COMPACT\n            : this.SIDENAV_STATES.EXPANDED;\n    }\n\n    private get toggledContentAnimation() {\n        if (this.isMobileScreenSize) {\n            return this.CONTENT_STATES.MOBILE;\n        }\n\n        if (this.sidenavAnimationState === this.SIDENAV_STATES.EXPANDED) {\n            return this.CONTENT_STATES.COMPACT;\n        } else {\n            return this.CONTENT_STATES.EXPANDED;\n        }\n    }\n\n    get isMobileScreenSize(): boolean {\n        return this.mediaQueryList.matches;\n    }\n\n    private onMediaQueryChange() {\n        this.sidenavAnimationState = this.SIDENAV_STATES.EXPANDED;\n        this.contentAnimationState = this.toggledContentAnimation;\n    }\n\n    getContentAnimationStateLeft() {\n        if (this.position === 'start') {\n            return this.contentAnimationState;\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n\n    getContentAnimationStateRight() {\n        if (this.position === 'end') {\n            return this.contentAnimationState;\n\n        } else {\n            return { value: 'compact', params: { width: this.sidenavMin } };\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-sidebar-action-menu',\n    templateUrl: './sidebar-action-menu.component.html',\n    styleUrls: ['./sidebar-action-menu.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sidebar-action-menu' }\n})\n\nexport class SidebarActionMenuComponent {\n\n    /** The title of the sidebar action. */\n    @Input()\n    title: string;\n\n    /** Toggle the sidebar action menu on expand. */\n    @Input()\n    expanded: boolean;\n\n    /** Width in pixels for sidebar action menu options. */\n    @Input()\n    width: number = 272;\n\n    isExpanded(): boolean {\n        return this.expanded;\n    }\n}\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' }) export class SidebarMenuDirective {}\n@Directive({ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' }) export class SidebarMenuTitleIconDirective { }\n@Directive({ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' }) export class SidebarMenuExpandIconDirective { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'adf-layout-header',\n    templateUrl: './header.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-layout-header' }\n})\nexport class HeaderLayoutComponent implements OnInit {\n    /** Title of the application. */\n    @Input() title: string;\n\n    /** Path to an image file for the application logo. */\n    @Input() logo: string;\n\n    /** The router link for the application logo, when clicked. */\n    @Input() redirectUrl: string | any[] = '/';\n\n    /** The tooltip text for the application logo. */\n    @Input() tooltip: string;\n\n    /**\n     * Background color for the header. It can be any hex color code or one\n     * of the Material theme colors: 'primary', 'accent' or 'warn'.\n     */\n    @Input() color: string;\n\n    /**\n     * Toggles whether the sidenav button will be displayed in the header\n     * or not.\n     */\n    @Input() showSidenavToggle: boolean = true;\n\n    /** Emitted when the sidenav button is clicked. */\n    @Output() clicked = new EventEmitter<any>();\n\n    /** The side of the page that the drawer is attached to (can be 'start' or 'end') */\n    @Input() position = 'start';\n\n    toggleMenu() {\n        this.clicked.emit(true);\n    }\n\n    ngOnInit() {\n        if (!this.logo) {\n            this.logo = './assets/images/logo.png';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MaterialModule } from '../material.module';\nimport { SidenavLayoutContentDirective } from './directives/sidenav-layout-content.directive';\nimport { SidenavLayoutHeaderDirective } from './directives/sidenav-layout-header.directive';\nimport { SidenavLayoutNavigationDirective } from './directives/sidenav-layout-navigation.directive';\nimport { SidenavLayoutComponent } from './components/sidenav-layout/sidenav-layout.component';\nimport { LayoutContainerComponent } from './components/layout-container/layout-container.component';\nimport { SidebarActionMenuComponent, SidebarMenuDirective,\n    SidebarMenuExpandIconDirective, SidebarMenuTitleIconDirective } from './components/sidebar-action/sidebar-action-menu.component';\nimport { HeaderLayoutComponent } from './components/header/header.component';\nimport { TranslateModule } from '@ngx-translate/core';\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        RouterModule,\n        TranslateModule.forChild()\n    ],\n    exports: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ],\n    declarations: [\n        SidenavLayoutHeaderDirective,\n        SidenavLayoutContentDirective,\n        SidenavLayoutNavigationDirective,\n        SidenavLayoutComponent,\n        LayoutContainerComponent,\n        SidebarActionMenuComponent,\n        SidebarMenuDirective,\n        SidebarMenuExpandIconDirective,\n        SidebarMenuTitleIconDirective,\n        HeaderLayoutComponent\n    ]\n})\nexport class LayoutModule {}\nexport { LayoutModule as SidenavLayoutModule };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { CommentModel } from '../models/comment.model';\nimport { EcmUserService } from '../userinfo/services/ecm-user.service';\nimport { PeopleProcessService } from '../services/people-process.service';\nimport { UserPreferencesService, UserPreferenceValues } from '../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-comment-list',\n    templateUrl: './comment-list.component.html',\n    styleUrls: ['./comment-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\n\nexport class CommentListComponent {\n\n    /** The comments data used to populate the list. */\n    @Input()\n    comments: CommentModel[];\n\n    /** Emitted when the user clicks on one of the comment rows. */\n    @Output()\n    clickRow: EventEmitter<CommentModel> = new EventEmitter<CommentModel>();\n\n    selectedComment: CommentModel;\n\n    currentLocale;\n\n    constructor(public peopleProcessService: PeopleProcessService,\n                public ecmUserService: EcmUserService,\n                public userPreferenceService: UserPreferencesService) {\n        userPreferenceService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.currentLocale = locale;\n        });\n    }\n\n    selectComment(comment: CommentModel): void {\n        if (this.selectedComment) {\n            this.selectedComment.isSelected = false;\n        }\n        comment.isSelected = true;\n        this.selectedComment = comment;\n        this.clickRow.emit(this.selectedComment);\n    }\n\n    getUserShortName(user: any): string {\n        let shortName = '';\n        if (user) {\n            if (user.firstName) {\n                shortName = user.firstName[0].toUpperCase();\n            }\n            if (user.lastName) {\n                shortName += user.lastName[0].toUpperCase();\n            }\n        }\n        return shortName;\n    }\n\n    isPictureDefined(user: any): boolean {\n        return user.pictureId || user.avatarId;\n    }\n\n    getUserImage(user: any): string {\n        if (this.isAContentUsers(user)) {\n            return this.ecmUserService.getUserProfileImage(user.avatarId);\n        } else {\n            return this.peopleProcessService.getUserImage(user);\n        }\n    }\n\n    private isAContentUsers(user: any): boolean {\n        return user.avatarId;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class CommentModel {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: any;\n    isSelected: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n            this.isSelected = obj.isSelected ? obj.isSelected : false;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from '@alfresco/js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number;\n    externalId?: string;\n\n    constructor(input?: any) {\n        if (input) {\n            this.id = input.id;\n            this.email = input.email || null;\n            this.firstName = input.firstName || null;\n            this.lastName = input.lastName || null;\n            this.pictureId = input.pictureId || null;\n            this.externalId = input.externalId || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a task.\n     * @param taskId ID of the target task\n     * @param message Text for the comment\n     * @returns Details about the comment\n     */\n    addTaskComment(taskId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().activiti.taskApi.addTaskComment({ message: message }, taskId))\n            .pipe(\n                map((response: CommentModel) => {\n                    return new CommentModel({\n                        id: response.id,\n                        message: response.message,\n                        created: response.created,\n                        createdBy: response.createdBy\n                    });\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a task.\n     * @param taskId ID of the target task\n     * @returns Details for each comment\n     */\n    getTaskComments(taskId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @returns Details for each comment\n     */\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.data.forEach((comment: CommentModel) => {\n                        const user = new UserProcessModel(comment.createdBy);\n                        comments.push(new CommentModel({\n                            id: comment.id,\n                            message: comment.message,\n                            created: comment.created,\n                            createdBy: user\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Adds a comment to a process instance.\n     * @param processInstanceId ID of the target process instance\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentModel> {\n        return from(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({ message: message }, processInstanceId)\n        ).pipe(\n            map((response: CommentModel) => {\n                return new CommentModel({\n                    id: response.id,\n                    message: response.message,\n                    created: response.created,\n                    createdBy: response.createdBy\n                });\n            }),\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { CommentModel } from '../models/comment.model';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { LogService } from '../services/log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentContentService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Adds a comment to a node.\n     * @param nodeId ID of the target node\n     * @param message Text for the comment\n     * @returns Details of the comment added\n     */\n    addNodeComment(nodeId: string, message: string): Observable<CommentModel> {\n        return from(this.apiService.getInstance().core.commentsApi.addComment(nodeId, {content: message}))\n            .pipe(\n                map((response: any) => {\n                    return new CommentModel({\n                        id: response.entry.id,\n                        message: response.entry.content,\n                        created: response.entry.createdAt,\n                        createdBy: response.entry.createdBy\n                    });\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets all comments that have been added to a node.\n     * @param nodeId ID of the target node\n     * @returns Details for each comment\n     */\n    getNodeComments(nodeId: string): Observable<CommentModel[]> {\n        return from(this.apiService.getInstance().core.commentsApi.getComments(nodeId))\n            .pipe(\n                map((response: any) => {\n                    const comments: CommentModel[] = [];\n                    response.list.entries.forEach((comment: any) => {\n                        comments.push(new CommentModel({\n                            id: comment.entry.id,\n                            message: comment.entry.content,\n                            created: comment.entry.createdAt,\n                            createdBy: comment.entry.createdBy\n                        }));\n                    });\n                    return comments;\n                }),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentProcessService } from '../services/comment-process.service';\nimport { CommentContentService } from '../services/comment-content.service';\nimport { CommentModel } from '../models/comment.model';\nimport { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.scss']\n})\nexport class CommentsComponent implements OnChanges {\n\n    /** The numeric ID of the task. */\n    @Input()\n    taskId: string;\n\n    /** The numeric ID of the node. */\n    @Input()\n    nodeId: string;\n\n    /** Are the comments read only? */\n    @Input()\n    readOnly: boolean = false;\n\n    /** Emitted when an error occurs while displaying/adding a comment. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    comments: CommentModel [] = [];\n\n    private commentObserver: Observer<CommentModel>;\n    comment$: Observable<CommentModel>;\n\n    message: string;\n\n    beingAdded: boolean = false;\n\n    constructor(private commentProcessService: CommentProcessService, private commentContentService: CommentContentService) {\n        this.comment$ = new Observable<CommentModel>((observer) => this.commentObserver = observer)\n            .pipe(share());\n        this.comment$.subscribe((comment: CommentModel) => {\n            this.comments.push(comment);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.taskId = null;\n        this.nodeId = null;\n\n        this.taskId = changes['taskId'] ? changes['taskId'].currentValue : null;\n        this.nodeId = changes['nodeId'] ? changes['nodeId'].currentValue : null;\n\n        if (this.taskId || this.nodeId) {\n            this.getComments();\n        } else {\n            this.resetComments();\n        }\n    }\n\n    private getComments(): void {\n        this.resetComments();\n        if (this.isATask()) {\n            this.commentProcessService.getTaskComments(this.taskId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((currentComment) => {\n                            this.commentObserver.next(currentComment);\n                        });\n                    }\n\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n\n        if (this.isANode()) {\n            this.commentContentService.getNodeComments(this.nodeId).subscribe(\n                (comments: CommentModel[]) => {\n                    if (comments && comments instanceof Array) {\n\n                        comments = comments.sort((comment1: CommentModel, comment2: CommentModel) => {\n                            const date1 = new Date(comment1.created);\n                            const date2 = new Date(comment2.created);\n                            return date1 > date2 ? -1 : date1 < date2 ? 1 : 0;\n                        });\n                        comments.forEach((comment) => {\n                            this.commentObserver.next(comment);\n                        });\n                    }\n                },\n                (err) => {\n                    this.error.emit(err);\n                }\n            );\n        }\n    }\n\n    private resetComments(): void {\n        this.comments = [];\n    }\n\n    add(): void {\n        if (this.message && this.message.trim() && !this.beingAdded) {\n            const comment = this.sanitize(this.message);\n\n            this.beingAdded = true;\n            if (this.isATask()) {\n                this.commentProcessService.addTaskComment(this.taskId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n\n            if (this.isANode()) {\n                this.commentContentService.addNodeComment(this.nodeId, comment)\n                    .subscribe(\n                        (res: CommentModel) => {\n                            this.comments.unshift(res);\n                            this.message = '';\n                            this.beingAdded = false;\n\n                        },\n                        (err) => {\n                            this.error.emit(err);\n                            this.beingAdded = false;\n                        }\n                    );\n            }\n        }\n    }\n\n    clear(): void {\n        this.message = '';\n    }\n\n    isReadOnly(): boolean {\n        return this.readOnly;\n    }\n\n    isATask(): boolean {\n        return this.taskId ? true : false;\n    }\n\n    isANode(): boolean {\n        return this.nodeId ? true : false;\n    }\n\n    private sanitize(input: string) {\n        return input.replace(/<[^>]+>/g, '')\n            .replace(/^\\s+|\\s+$|\\s+(?=\\s)/g, '')\n            .replace(/\\r?\\n/g, '<br/>');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataColumnModule } from '../data-column/data-column.module';\nimport { DataTableModule } from '../datatable/datatable.module';\nimport { PipeModule } from '../pipes/pipe.module';\n\nimport { CommentListComponent } from './comment-list.component';\nimport { CommentsComponent } from './comments.component';\n\n@NgModule({\n    imports: [\n        PipeModule,\n        DataColumnModule,\n        DataTableModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CommonModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        CommentListComponent,\n        CommentsComponent\n    ],\n    exports: [\n        CommentListComponent,\n        CommentsComponent\n    ]\n})\nexport class CommentsModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { MatMenuItem } from '@angular/material';\n\n@Component({\n    selector: 'adf-buttons-action-menu',\n    templateUrl: './buttons-menu.component.html',\n    styleUrls: ['./buttons-menu.component.scss']\n})\n\nexport class ButtonsMenuComponent implements  AfterContentInit {\n\n    @ContentChildren(MatMenuItem) buttons: QueryList<MatMenuItem>;\n\n    isMenuEmpty: boolean;\n\n    ngAfterContentInit() {\n        if (this.buttons.length > 0) {\n            this.isMenuEmpty = false;\n        } else {\n            this.isMenuEmpty = true;\n        }\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ButtonsMenuComponent } from './buttons-menu.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        FlexLayoutModule\n    ],\n    declarations: [\n        ButtonsMenuComponent\n    ],\n    exports: [\n        ButtonsMenuComponent\n    ]\n})\nexport class ButtonsMenuModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, EventEmitter, Output } from '@angular/core';\nimport { MatSelectChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-sorting-picker',\n    templateUrl: './sorting-picker.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-sorting-picker' }\n})\nexport class SortingPickerComponent {\n\n    /** Available sorting options */\n    @Input()\n    options: Array<{key: string, label: string}> = [];\n\n    /** Currently selected option key */\n    @Input()\n    selected: string;\n\n    /** Current sorting direction */\n    @Input()\n    ascending = true;\n\n    /** Raised each time sorting key gets changed. */\n    @Output()\n    valueChange = new EventEmitter<string>();\n\n    /** Raised each time direction gets changed. */\n    @Output()\n    sortingChange = new EventEmitter<boolean>();\n\n    onOptionChanged(event: MatSelectChange) {\n        this.selected = event.value;\n        this.valueChange.emit(this.selected);\n    }\n\n    toggleSortDirection() {\n        this.ascending = !this.ascending;\n        this.sortingChange.emit(this.ascending);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { SortingPickerComponent } from './sorting-picker.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        SortingPickerComponent\n    ],\n    exports: [\n        SortingPickerComponent\n    ]\n})\nexport class SortingPickerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    Input,\n    ViewEncapsulation,\n    OnInit,\n    AfterContentChecked\n} from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-error-content',\n    templateUrl: './error-content.component.html',\n    styleUrls: ['./error-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-error-content' }\n})\nexport class ErrorContentComponent implements OnInit, AfterContentChecked {\n\n    static UNKNOWN_ERROR = 'UNKNOWN';\n\n    /** Target URL for the secondary button. */\n    @Input()\n    secondaryButtonUrl: string = 'report-issue';\n\n    /** Target URL for the return button. */\n    @Input()\n    returnButtonUrl: string = '/';\n\n    /** Error code associated with this error. */\n    @Input()\n    errorCode: string = ErrorContentComponent.UNKNOWN_ERROR;\n\n    hasSecondButton: boolean;\n\n    constructor(private route: ActivatedRoute,\n                private router: Router,\n                private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        if (this.route) {\n            this.route.params.forEach((params: Params) => {\n                if (params['id']) {\n                    this.errorCode = this.checkErrorExists(params['id']) ? params['id'] : ErrorContentComponent.UNKNOWN_ERROR;\n                }\n            });\n        }\n    }\n\n    checkErrorExists(errorCode: string ) {\n        const errorMessage = this.translateService.instant('ERROR_CONTENT.' + errorCode);\n        return errorMessage !== ('ERROR_CONTENT.' + errorCode);\n    }\n\n    getTranslations() {\n        this.hasSecondButton = this.translateService.instant(\n            'ERROR_CONTENT.' + this.errorCode + '.SECONDARY_BUTTON.TEXT') ? true : false;\n    }\n\n    ngAfterContentChecked() {\n        this.getTranslations();\n    }\n\n    onSecondButton() {\n        this.router.navigate(['/' + this.secondaryButtonUrl]);\n    }\n\n    onReturnButton() {\n        this.router.navigate(['/' + this.returnButtonUrl]);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-content',\n    templateUrl: './empty-content.component.html',\n    styleUrls: ['./empty-content.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-empty-content' }\n})\nexport class EmptyContentComponent {\n\n    /** Material Icon to use. */\n    @Input()\n    icon = 'cake';\n\n    /** String or Resource Key for the title. */\n    @Input()\n    title = '';\n\n    /** String or Resource Key for the subtitle. */\n    @Input()\n    subtitle = '';\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { ErrorContentComponent } from './error-content/error-content.component';\nimport { EmptyContentComponent } from './empty-content/empty-content.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ],\n    exports: [\n        ErrorContentComponent,\n        EmptyContentComponent\n    ]\n})\nexport class TemplateModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Router,\n    CanActivate,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot,\n    CanActivateChild\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './authentication.service';\nimport {\n    AppConfigService,\n    AppConfigValues\n} from '../app-config/app-config.service';\nimport { OauthConfigModel } from '../models/oauth-config.model';\n\nexport abstract class AuthGuardBase implements CanActivate, CanActivateChild {\n    abstract checkLogin(\n        activeRoute: ActivatedRouteSnapshot,\n        redirectUrl: string\n    ): Observable<boolean> | Promise<boolean> | boolean;\n\n    protected get withCredentials(): boolean {\n        return this.appConfigService.get<boolean>(\n            'auth.withCredentials',\n            false\n        );\n    }\n\n    constructor(\n        protected authenticationService: AuthenticationService,\n        protected router: Router,\n        protected appConfigService: AppConfigService\n    ) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.checkLogin(route, state.url);\n    }\n\n    canActivateChild(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        return this.canActivate(route, state);\n    }\n\n    protected redirectToUrl(provider: string, url: string) {\n        this.authenticationService.setRedirect({ provider, url });\n\n        const pathToLogin = this.getLoginRoute();\n        const urlToRedirect = `/${pathToLogin}?redirectUrl=${url}`;\n\n        this.router.navigateByUrl(urlToRedirect);\n    }\n\n    protected getLoginRoute(): string {\n        return (\n            this.appConfigService &&\n            this.appConfigService.get<string>(\n                AppConfigValues.LOGIN_ROUTE,\n                'login'\n            )\n        );\n    }\n\n    protected isOAuthWithoutSilentLogin() {\n        const oauth = this.appConfigService.get<OauthConfigModel>(\n            AppConfigValues.OAUTHCONFIG,\n            null\n        );\n        return (\n            this.authenticationService.isOauth() && oauth.silentLogin === false\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard extends AuthGuardBase {\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isLoggedIn() || this.withCredentials) {\n            return true;\n        }\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ALL', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot, Router\n} from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardEcm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isEcmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('ECM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AuthenticationService } from './authentication.service';\nimport { AuthGuardBase } from './auth-guard-base';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardBpm extends AuthGuardBase {\n\n    constructor(authenticationService: AuthenticationService,\n                router: Router,\n                appConfigService: AppConfigService) {\n        super(authenticationService, router, appConfigService);\n    }\n\n    checkLogin(activeRoute: ActivatedRouteSnapshot, redirectUrl: string): Observable<boolean> | Promise<boolean> | boolean {\n        if (this.authenticationService.isBpmLoggedIn() || this.withCredentials) {\n            return true;\n        }\n\n        if (!this.authenticationService.isOauth() || this.isOAuthWithoutSilentLogin()) {\n            this.redirectToUrl('BPM', redirectUrl);\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from './jwt-helper.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuardSsoRoleService implements CanActivate {\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let hasRole = false;\n        let hasRealmRole = false;\n        let hasClientRole = true;\n\n        if (route.data) {\n            if (route.data['roles']) {\n                const rolesToCheck = route.data['roles'];\n                hasRealmRole = this.hasRealmRoles(rolesToCheck);\n            }\n\n            if (route.data['clientRoles']) {\n                const clientRoleName = route.params[route.data['clientRoles']];\n                const rolesToCheck = route.data['roles'];\n                hasClientRole = this.hasRealmRolesForClientRole(clientRoleName, rolesToCheck);\n            }\n        }\n\n        hasRole = hasRealmRole && hasClientRole;\n\n        if (!hasRole && route.data && route.data['redirectUrl']) {\n            this.router.navigate(['/' + route.data['redirectUrl']]);\n        }\n\n        return hasRole;\n    }\n\n    constructor(private storageService: StorageService, private jwtHelperService: JwtHelperService, private router: Router) {\n    }\n\n    getRealmRoles(): string[] {\n        const access = this.getValueFromToken<any>('realm_access');\n        const roles = access ? access['roles'] : [];\n        return roles;\n    }\n\n    getClientRoles(client: string): string[] {\n        const clientRole = this.getValueFromToken<any>('resource_access')[client];\n        const roles = clientRole ? clientRole['roles'] : [];\n        return roles;\n    }\n\n    getAccessToken(): string {\n        return this.storageService.getItem('access_token');\n    }\n\n    hasRealmRole(role: string): boolean {\n        let hasRole = false;\n        if (this.getAccessToken()) {\n            const realmRoles = this.getRealmRoles();\n            hasRole = realmRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n\n    hasRealmRoles(rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasRealmRole(currentRole);\n        });\n    }\n\n    hasRealmRolesForClientRole(clientRole: string, rolesToCheck: string []): boolean {\n        return rolesToCheck.some((currentRole) => {\n            return this.hasClientRole(clientRole, currentRole);\n        });\n    }\n\n    hasClientRole(clientRole, role: string): boolean {\n        let hasRole = false;\n        if (this.getAccessToken()) {\n            const clientRoles = this.getClientRoles(clientRole);\n            hasRole = clientRoles.some((currentRole) => {\n                return currentRole === role;\n            });\n        }\n        return hasRole;\n    }\n\n    getValueFromToken<T>(key: string): T {\n        let value;\n        const accessToken = this.getAccessToken();\n        if (accessToken) {\n            const tokenPayload = this.jwtHelperService.decodeToken(accessToken);\n            value = tokenPayload[key];\n        }\n        return <T> value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of deployed apps for this user.\n     * @returns The list of deployed apps\n     */\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation[]> response.data),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a list of deployed apps for this user, where the app name is `name`.\n     * @param name Name of the app\n     * @returns The list of deployed apps\n     */\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => <AppDefinitionRepresentation> response.data.find((app) => app.name === name)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a specific app ID number.\n     * @param appId ID of the target app\n     * @returns Details of the app\n     */\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return from(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .pipe(\n                map((response: any) => response.data.find((app) => app.id === appId)),\n                catchError((err) => this.handleError(err))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { TranslationService } from './translation.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PageTitleService {\n\n    private originalTitle: string = '';\n    private translatedTitle: string = '';\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService,\n        private translationService: TranslationService) {\n        translationService.translate.onLangChange.subscribe(() => this.onLanguageChanged());\n        translationService.translate.onTranslationChange.subscribe(() => this.onLanguageChanged());\n    }\n\n    /**\n     * Sets the page title.\n     * @param value The new title\n     */\n    setTitle(value: string = '') {\n        this.originalTitle = value;\n        this.translatedTitle = this.translationService.instant(value);\n\n        this.updateTitle();\n    }\n\n    private onLanguageChanged() {\n        this.translatedTitle = this.translationService.instant(this.originalTitle);\n        this.updateTitle();\n    }\n\n    private updateTitle() {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n\n        const title = this.translatedTitle ? `${this.translatedTitle} - ${name}` : `${name}`;\n        this.titleService.setTitle(title);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from '@alfresco/js-api';\nimport { Observable, from, interval, empty } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { concatMap, switchMap, takeWhile, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the first available rendition found for a node.\n     * @param nodeId ID of the target node\n     * @returns Information object for the rendition\n     */\n    getAvailableRenditionForNode(nodeId: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId)).pipe(\n            map((availableRenditions: RenditionPaging) => {\n                const renditionsAvailable: RenditionEntry[] = availableRenditions.list.entries.filter(\n                    (rendition) => (rendition.entry.id === 'pdf' || rendition.entry.id === 'imgpreview'));\n                const existingRendition = renditionsAvailable.find((rend) => rend.entry.status === 'CREATED');\n                return existingRendition ? existingRendition : renditionsAvailable[0];\n            }));\n    }\n\n    /**\n     * Generates a rendition for a node using the first available encoding.\n     * @param nodeId ID of the target node\n     * @returns Null response to indicate completion\n     */\n    generateRenditionForNode(nodeId: string): Observable<any> {\n        return this.getAvailableRenditionForNode(nodeId).pipe(\n            map((rendition: RenditionEntry) => {\n                if (rendition.entry.status !== 'CREATED') {\n                    return from(this.apiService.renditionsApi.createRendition(nodeId, { id: rendition.entry.id }));\n                } else {\n                    return empty();\n                }\n            })\n        );\n    }\n\n    /**\n     * Checks if the specified rendition is available for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the rendition is available, false otherwise\n     */\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Checks if the node can be converted using the specified rendition.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns True if the node can be converted, false otherwise\n     */\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return new Observable((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    /**\n     * Gets a URL linking to the specified rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns URL string\n     */\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, encoding);\n    }\n\n    /**\n     * Gets information about a rendition of a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Information object about the rendition\n     */\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return from(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    /**\n     * Gets a list of all renditions for a node.\n     * @param nodeId ID of the target node\n     * @returns Paged list of rendition details\n     */\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return from(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    /**\n     * Creates a rendition for a node.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @returns Null response to indicate completion\n     */\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return from(this.apiService.renditionsApi.createRendition(nodeId, { id: encoding }));\n    }\n\n    /**\n     * Repeatedly attempts to create a rendition, through to success or failure.\n     * @param nodeId ID of the target node\n     * @param encoding Name of the rendition encoding\n     * @param pollingInterval Time interval (in milliseconds) between checks for completion\n     * @param retries Number of attempts to make before declaring failure\n     * @returns True if the rendition was created, false otherwise\n     */\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000, retries: number = 5) {\n        return this.createRendition(nodeId, encoding)\n            .pipe(\n                concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval, retries))\n            );\n    }\n\n    private pollRendition(nodeId: string, encoding: string, intervalSize: number = 1000, retries: number = 5) {\n        let attempts = 0;\n        return interval(intervalSize)\n            .pipe(\n                switchMap(() => this.getRendition(nodeId, encoding)),\n                takeWhile((renditionEntry: RenditionEntry) => {\n                    attempts += 1;\n                    if (attempts > retries) {\n                        return false;\n                    }\n                    return (renditionEntry.entry.status.toString() !== 'CREATED');\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, forkJoin, throwError, of } from 'rxjs';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { map, catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TranslateLoaderService implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n    private defaultLang: string = 'en';\n\n    constructor(private http: HttpClient) {\n    }\n\n    setDefaultLang(value: string) {\n        this.defaultLang = value || 'en';\n    }\n\n    registerProvider(name: string, path: string) {\n        const registered = this.providers.find((provider) => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find((x) => x.name === name) ? true : false;\n    }\n\n    fetchLanguageFile(lang: string, component: ComponentTranslationModel, fallbackUrl?: string): Observable<void> {\n        const translationUrl = fallbackUrl || `${component.path}/${this.prefix}/${lang}${this.suffix}?v=${Date.now()}`;\n\n        return this.http.get(translationUrl).pipe(\n            map((res: Response) => {\n                component.json[lang] = res;\n            }),\n            retry(3),\n            catchError(() => {\n                if (!fallbackUrl && lang.includes('-')) {\n                    const [langId] = lang.split('-');\n\n                    if (langId && langId !== this.defaultLang) {\n                        const url = `${component.path}/${this.prefix}/${langId}${this.suffix}?v=${Date.now()}`;\n\n                        return this.fetchLanguageFile(lang, component, url);\n                    }\n                }\n                return throwError(`Failed to load ${translationUrl}`);\n            })\n        );\n    }\n\n    getComponentToFetch(lang: string): Array<Observable<any>> {\n        const observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                observableBatch.push(\n                    this.fetchLanguageFile(lang, component)\n                );\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find((x) => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach((model) => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let hasFailures = false;\n        const batch = [\n            ...this.getComponentToFetch(lang).map((observable) => {\n                return observable.pipe(\n                    catchError((error) => {\n                        console.warn(error);\n                        hasFailures = true;\n                        return of(error);\n                    })\n                );\n            })\n        ];\n\n        return new Observable((observer) => {\n\n            if (batch.length > 0) {\n                forkJoin(batch).subscribe(\n                    () => {\n                        const fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        if (hasFailures) {\n                            observer.error('Failed to load some resources');\n                        } else {\n                            observer.complete();\n                        }\n                    },\n                    (err) => {\n                        observer.error('Failed to load some resources');\n                    });\n            } else {\n                const fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                    observer.complete();\n                }\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport { Minimatch } from 'minimatch-browser';\nimport { Subject } from 'rxjs';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport {\n    FileUploadCompleteEvent,\n    FileUploadDeleteEvent,\n    FileUploadErrorEvent,\n    FileUploadEvent\n} from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UploadService {\n\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private excludedFileList: string[] = [];\n    private matchingOptions: any = null;\n\n    activeTask: Promise<any> = null;\n    queue: FileModel[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(protected apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     * @returns True if a file is uploading, false otherwise\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Gets the file Queue\n     * @returns Array of files that form the queue\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Adds files to the uploading queue to be uploaded\n     * @param files One or more separate parameters or an array of files to queue\n     * @returns Array of files that were not blocked from upload by the ignore list\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter((currentFile) => this.filterElement(currentFile));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n\n        this.excludedFileList = <string[]> this.appConfigService.get('files.excluded');\n        if (this.excludedFileList) {\n\n            this.matchingOptions = this.appConfigService.get('files.match-options');\n\n            isAllowed = this.excludedFileList.filter((pattern) => {\n                const minimatch = new Minimatch(pattern, this.matchingOptions);\n                return minimatch.match(file.name);\n            }).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Finds all the files in the queue that are not yet uploaded and uploads them into the directory folder.\n     * @param emitter Emitter to invoke on file status change\n     */\n    uploadFilesInTheQueue(emitter?: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            const file = this.queue.find((currentFile) => currentFile.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                const next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    /**\n     * Cancels uploading of files.\n     * @param files One or more separate parameters or an array of files specifying uploads to cancel\n     */\n    cancelUpload(...files: FileModel[]) {\n        files.forEach((file) => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    /** Clears the upload queue */\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    /**\n     * Gets an upload promise for a file.\n     * @param file The target file\n     * @returns Promise that is resolved if the upload is successful or error otherwise\n     */\n    getUploadPromise(file: FileModel): any {\n        const opts: any = {\n            renditions: 'doclib',\n            include: ['allowableOperations']\n        };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = file.options.majorVersion;\n            opts.comment = file.options.comment;\n            opts.name = file.name;\n        } else {\n            opts.autoRename = true;\n        }\n\n        if (file.options.nodeType) {\n            opts.nodeType = file.options.nodeType;\n        }\n\n        if (file.id) {\n            return this.apiService.getInstance().node.updateNodeContent(\n                file.id,\n                file.file,\n                opts\n            );\n        } else {\n            return this.apiService.getInstance().upload.uploadFile(\n                file.file,\n                file.options.path,\n                file.options.parentId,\n                file.options,\n                opts\n            );\n        }\n    }\n\n    private beginUpload(file: FileModel, emitter: EventEmitter<any>): any {\n\n        const promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n            .on('abort', () => {\n                this.onUploadAborted(file);\n                if (emitter) {\n                    emitter.emit({ value: 'File aborted' });\n                }\n            })\n            .on('error', (err) => {\n                this.onUploadError(file, err);\n                if (emitter) {\n                    emitter.emit({ value: 'Error file uploaded' });\n                }\n            })\n            .on('success', (data) => {\n                this.onUploadComplete(file, data);\n                if (emitter) {\n                    emitter.emit({ value: data });\n                }\n            })\n            .catch((err) => {\n            });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.errorCode = ( error || {} ).status;\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\n\nimport { NodePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    /**\n     * Gets a list of nodes in the trash.\n     * @param options Options for JS-API call\n     * @returns List of nodes in the trash\n     */\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.nodesApi.getDeletedNodes(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FavoritesApiService {\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = this\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    /**\n     * Gets the favorites for a user.\n     * @param personId ID of the user\n     * @param options Options supported by JS-API\n     * @returns List of favorites\n     */\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = this.favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(this.remapFavoritesData);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, MinimalNode, NodePaging } from '@alfresco/js-api';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: NodeEntry) {\n        return entity.entry;\n    }\n\n    /**\n     * Gets the stored information about a node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Node information\n     */\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Gets the items contained in a folder node.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns List of child items from the folder\n     */\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = this.nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new document node inside a folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new node\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new node\n     */\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Creates a new folder node inside a parent folder.\n     * @param parentNodeId ID of the parent folder node\n     * @param nodeBody Data for the new folder\n     * @param options Optional parameters supported by JS-API\n     * @returns Details of the new folder\n     */\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    /**\n     * Updates the information about a node.\n     * @param nodeId ID of the target node\n     * @param nodeBody New data for the node\n     * @param options Optional parameters supported by JS-API\n     * @returns Updated node information\n     */\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNode> {\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations', 'permissions' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n\n        const promise = this.nodesApi\n            .updateNode(nodeId, nodeBody, queryOptions)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Moves a node to the trashcan.\n     * @param nodeId ID of the target node\n     * @param options Optional parameters supported by JS-API\n     * @returns Empty result that notifies when the deletion is complete\n     */\n    deleteNode(nodeId: string, options: any = {}): Observable<any> {\n        const promise = this.nodesApi.deleteNode(nodeId, options);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n\n    /**\n     * Restores a node previously moved to the trashcan.\n     * @param nodeId ID of the node to restore\n     * @returns Details of the restored node\n     */\n    restoreNode(nodeId: string): Observable<MinimalNode> {\n        const promise = this.nodesApi\n            .restoreNode(nodeId)\n            .then(this.getEntryFromEntity);\n\n        return from(promise).pipe(\n            catchError((err) => throwError(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    /**\n     * Gets information about a user identified by their username.\n     * @param personId ID of the target user\n     * @returns User information\n     */\n    getPerson(personId: string): Observable<any> {\n        const promise = this.peopleApi.getPerson(personId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Gets information about the user who is currently logged in.\n     * @returns User information\n     */\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '../interface/search-configuration.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    /**\n     * Generates a QueryBody object with custom search parameters.\n     * @param searchTerm Term text to search for\n     * @param maxResults Maximum number of search results to show in a page\n     * @param skipCount The offset of the start of the page within the results list\n     * @returns Query body defined by the parameters\n     */\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `'${searchTerm}*' OR name:'${searchTerm}*'` : searchTerm\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder' OR TYPE:'cm:content'\" },\n                { query: 'NOT cm:creator:System' }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, QueryBody } from '@alfresco/js-api';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SearchConfigurationService } from './search-configuration.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchService {\n\n    dataLoaded: Subject<NodePaging> = new Subject();\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchConfigurationService: SearchConfigurationService) {\n    }\n\n    /**\n     * Gets a list of nodes that match the given search criteria.\n     * @param term Term to search for\n     * @param options Options for delivery of the search results\n     * @returns List of nodes resulting from the search\n     */\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().core.queriesApi.findNodes(term, options);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search.\n     * @param searchTerm Term to search for\n     * @param maxResults Maximum number of items in the list of results\n     * @param skipCount Number of higher-ranked items to skip over in the list\n     * @returns List of search results\n     */\n    search(searchTerm: string, maxResults: number, skipCount: number): Observable<NodePaging> {\n        const searchQuery = Object.assign(this.searchConfigurationService.generateQueryBody(searchTerm, maxResults, skipCount));\n        const promise = this.apiService.getInstance().search.searchApi.search(searchQuery);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Performs a search with its parameters supplied by a QueryBody object.\n     * @param queryBody Object containing the search parameters\n     * @returns List of search results\n     */\n    searchByQueryBody(queryBody: QueryBody): Observable<NodePaging> {\n        const promise = this.apiService.getInstance().search.searchApi.search(queryBody);\n\n        promise.then((nodePaging: NodePaging) => {\n            this.dataLoaded.next(nodePaging);\n        });\n\n        return from(promise).pipe(\n            catchError((err: any) => this.handleError(err))\n        );\n    }\n\n    private handleError(error: any): Observable<any> {\n        return throwError(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    /** The number of entities that exist in the collection before those included in this list. */\n    skipCount?: number;\n\n    /** The maximum number of items to return in the list. */\n    maxItems?: number;\n\n    /** The id of the node to start the search from. Supports the aliases -my-, -root- and -shared-. */\n    rootNodeId?: string;\n\n    /** Restrict the returned results to only those of the given node type and its sub-types. */\n    nodeType?: string;\n\n    /**\n     * Return additional information about the node. The available optional fields are:\n     * `allowableOperations`, `aspectNames`, `isLink`, `isLocked`, `path` and `properties`.\n     */\n    include?: string[];\n\n    /**\n     * String to control the order of the entities returned in a list. You can use this\n     * parameter to sort the list by one or more fields. Each field has a default sort order,\n     * which is normally ascending order (but see the JS-API docs to check if any fields used\n     * in a method have a descending default search order). To sort the entities in a specific\n     * order, you can use the \"ASC\" and \"DESC\" keywords for any field.\n     */\n    orderBy?: string;\n\n    /**\n     * List of field names. You can use this parameter to restrict the fields returned within\n     * a response if, for example, you want to save on overall bandwidth. The list applies to a\n     * returned individual entity or entries within a collection. If the API method also supports\n     * the `include` parameter, then the fields specified in the include parameter are returned in\n     * addition to those specified in the fields parameter.\n     */\n    fields?: string[];\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging, SharedLinkEntry } from '@alfresco/js-api';\nimport { Observable, from, of } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SharedLinksApiService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private preferences: UserPreferencesService) {\n    }\n\n    private get sharedLinksApi() {\n        return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    /**\n     * Gets shared links available to the current user.\n     * @param options Options supported by JS-API\n     * @returns List of shared links\n     */\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: ['properties', 'allowableOperations']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = this.sharedLinksApi.findSharedLinks(queryOptions);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Creates a shared link available to the current user.\n     * @param nodeId ID of the node to link to\n     * @param options Options supported by JS-API\n     * @returns The shared link just created\n     */\n    createSharedLinks(nodeId: string, options: any = {}): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.addSharedLink({ nodeId: nodeId });\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n\n    /**\n     * Deletes a shared link.\n     * @param sharedId ID of the link to delete\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSharedLink(sharedId: string): Observable<SharedLinkEntry> {\n        const promise = this.sharedLinksApi.deleteSharedLink(sharedId);\n\n        return from(promise).pipe(\n            catchError((err) => of(err))\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SitesService {\n\n    constructor(\n        private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets a list of all sites in the repository.\n     * @param opts Options supported by JS-API\n     * @returns List of sites\n     */\n    getSites(opts: any = {}): Observable<SitePaging> {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return from(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets the details for a site.\n     * @param siteId ID of the target site\n     * @param opts Options supported by JS-API\n     * @returns Information about the site\n     */\n    getSite(siteId: string, opts?: any): Observable<SiteEntry | {}> {\n        return from(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Deletes a site.\n     * @param siteId Site to delete\n     * @param permanentFlag True: deletion is permanent; False: site is moved to the trash\n     * @returns Null response notifying when the operation is complete\n     */\n    deleteSite(siteId: string, permanentFlag: boolean = true): Observable<any> {\n        const options: any = {};\n        options.permanent = permanentFlag;\n        return from(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options))\n            .pipe(\n                catchError((err: any) => this.handleError(err))\n            );\n    }\n\n    /**\n     * Gets a site's content.\n     * @param siteId ID of the target site\n     * @returns Site content\n     */\n    getSiteContent(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    /**\n     * Gets a list of all a site's members.\n     * @param siteId ID of the target site\n     * @returns Site members\n     */\n    getSiteMembers(siteId: string): Observable<SiteEntry | {}> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    /**\n     * Gets the username of the user currently logged into ACS.\n     * @returns Username string\n     */\n    getEcmCurrentLoggedUserName(): string {\n        return this.apiService.getInstance().getEcmUsername();\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { LoginDialogComponent } from '../login/components/login-dialog.component';\nimport { LoginDialogComponentData } from '../login/components/login-dialog-component-data.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginDialogService {\n\n    constructor(private dialog: MatDialog) {\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param actionName Name of the action to show in the title\n     * @param title Title for the dialog\n     * @returns Information about the chosen file(s)\n     */\n    openLogin(actionName: string, title: string): Observable<string> {\n        const logged = new Subject<string>();\n        logged.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: LoginDialogComponentData = {\n            title,\n            actionName,\n            logged\n        };\n\n        this.openLoginDialog(data, 'adf-login-dialog', '630px');\n        return logged;\n    }\n\n    private openLoginDialog(data: LoginDialogComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(LoginDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApiCompatibility,\n    ContentApi,\n    Core\n} from '@alfresco/js-api';\n/* tslint:disable:adf-file-name */\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExternalAlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    getInstance(): AlfrescoApiCompatibility {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): Core.NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    init(ecmHost: string, contextRoot: string) {\n\n        const domainPrefix = this.createPrefixFromHost(ecmHost);\n\n        const config = {\n            provider: 'ECM',\n            hostEcm: ecmHost,\n            authType: 'BASIC',\n            contextRoot: contextRoot,\n            domainPrefix\n        };\n        this.initAlfrescoApi(config);\n    }\n\n    protected initAlfrescoApi(config) {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(config);\n        } else {\n            this.alfrescoApi = new AlfrescoApiCompatibility(config);\n        }\n    }\n\n    private createPrefixFromHost(url: string): string {\n        const match = url.match(/:\\/\\/(www[0-9]?\\.)?(.[^/:]+)/i);\n        let result = null;\n        if (match != null && match.length > 2 && typeof match[2] === 'string' && match[2].length > 0) {\n            result = match[2];\n        }\n        return result;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport moment from 'moment-es6';\nimport { Moment } from 'moment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LockService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    isLocked(node: Node): boolean {\n        let isLocked = false;\n        if (this.hasLockConfigured(node)) {\n            if (this.isReadOnlyLock(node)) {\n                isLocked = true;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            } else if (this.isLockOwnerAllowed(node)) {\n                isLocked = this.alfrescoApiService.getInstance().getEcmUsername() !== node.properties['cm:lockOwner'].id;\n                if (this.isLockExpired(node)) {\n                    isLocked = false;\n                }\n            }\n        }\n        return isLocked;\n    }\n\n    private hasLockConfigured(node: Node): boolean {\n        return node.isFile && node.isLocked && node.properties['cm:lockType'];\n    }\n\n    private isReadOnlyLock(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'READ_ONLY_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private isLockOwnerAllowed(node: Node): boolean {\n        return node.properties['cm:lockType'] === 'WRITE_LOCK' && node.properties['cm:lockLifetime'] === 'PERSISTENT';\n    }\n\n    private getLockExpiryTime(node: Node): Moment {\n        if (node.properties['cm:expiryDate']) {\n            return moment(node.properties['cm:expiryDate'], 'yyyy-MM-ddThh:mm:ssZ');\n        }\n    }\n\n    private isLockExpired(node: Node): boolean {\n        const expiryLockTime = this.getLockExpiryTime(node);\n        return moment().isAfter(expiryLockTime);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CoreAutomationService {\n    constructor(private appConfigService: AppConfigService,\n                private alfrescoApiService: AlfrescoApiService,\n                private storageService: StorageService) {\n    }\n\n    setup() {\n        const adfProxy = window['adf'] || {};\n\n        adfProxy.setConfigField = (field: string, value: string) => {\n            this.appConfigService.config[field] = JSON.parse(value);\n        };\n\n        adfProxy.setStorageItem = (key: string, data: string) => {\n            this.storageService.setItem(key, data);\n        };\n\n        adfProxy.clearStorage = () => {\n            this.storageService.clear();\n        };\n\n        adfProxy.apiReset = () => {\n            this.alfrescoApiService.reset();\n        };\n\n        window['adf'] = adfProxy;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { DownloadZipDialogComponent } from './download-zip.dialog';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PipeModule } from '../pipes/pipe.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild(),\n        PipeModule\n    ],\n    declarations: [\n        DownloadZipDialogComponent\n    ],\n    exports: [\n        DownloadZipDialogComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ViewEncapsulation,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material';\n\n@Component({\n    selector: 'adf-icon',\n    templateUrl: './icon.component.html',\n    styleUrls: ['./icon.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-icon' }\n})\nexport class IconComponent {\n    private _value = '';\n    private _isCustom = false;\n\n    /** Theme color palette for the component. */\n    @Input()\n    color: ThemePalette;\n\n    get value(): string {\n        return this._value;\n    }\n\n    /** Icon value, which can be either a ligature name or a custom icon in the format `[namespace]:[name]`. */\n    @Input()\n    set value(value: string) {\n        this._value = value || 'settings';\n        this._isCustom = this._value.includes(':');\n    }\n\n    get isCustom(): boolean {\n        return this._isCustom;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { IconComponent } from './icon.component';\nimport { MatIconModule } from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatIconModule\n    ],\n    declarations: [\n        IconComponent\n    ],\n    exports: [\n        IconComponent\n    ],\n    providers: [\n        ThumbnailService\n    ]\n})\nexport class IconModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EcmCompanyModel {\n      organization: string;\n      address1: string;\n      address2: string;\n      address3: string;\n      postcode: string;\n      telephone: string;\n      fax: string;\n      email: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the user redirection guard.*\n */\n\nexport class RedirectionModel {\n    provider: string;\n    url?: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.provider = obj.provider;\n            this.url = obj.url || null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from '@alfresco/js-api';\n\nexport class PaginationModel extends Pagination {\n    merge?: boolean;\n\n    constructor(input?: any) {\n        super(input);\n        if (input) {\n            this.count = input.count;\n            this.hasMoreItems = input.hasMoreItems ? input.hasMoreItems : false;\n            this.merge = input.merge ? input.merge : false;\n            this.totalItems = input.totalItems;\n            this.skipCount = input.skipCount;\n            this.maxItems = input.maxItems;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class RequestPaginationModel {\n\n    skipCount?: number;\n\n    maxItems?: number;\n\n    merge?: boolean = false;\n\n    constructor(input?: any) {\n        if (input) {\n            Object.assign(this, input);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:adf-file-name  */\nexport class AlfrescoApiMock {\n\n    login(username: string, password: string) {\n        return new Promise((resolve) => {\n            resolve('TICKET_4479f4d3bb155195879bfbb8d5206f433488a1b1');\n        });\n    }\n\n    logout() {\n        return new Promise((resolve) => {\n            resolve('logout');\n        });\n    }\n\n    changeConfig() {\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { HttpClient } from '@angular/common/http';\n@Injectable()\nexport class AppConfigServiceMock extends AppConfigService {\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm',\n        logLevel: 'silent'\n    };\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    load(): Promise<any> {\n        return new Promise((resolve) => {\n            this.onLoadSubject.next(this.config);\n            resolve(this.config);\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { RedirectionModel } from '../models/redirection.model';\n\n// TODO: should be extending AuthenticationService\nexport class AuthenticationMock /*extends AuthenticationService*/ {\n    private redirectUrl: RedirectionModel = null;\n\n    setRedirectUrl(url: RedirectionModel) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string|null {\n        return this.redirectUrl ? this.redirectUrl.url : null;\n    }\n\n    // TODO: real auth service returns Observable<string>\n    login(username: string, password: string): Observable<{ type: string, ticket: any }> {\n        if (username === 'fake-username' && password === 'fake-password') {\n            return of({ type: 'type', ticket: 'ticket'});\n        }\n\n        if (username === 'fake-username-CORS-error' && password === 'fake-password') {\n            return throwError({\n                error: {\n                    crossDomain: true,\n                    message: 'ERROR: the network is offline, Origin is not allowed by Access-Control-Allow-Origin'\n                }\n            });\n        }\n\n        if (username === 'fake-username-CSRF-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: Invalid CSRF-token', status: 403});\n        }\n\n        if (username === 'fake-username-ECM-access-error' && password === 'fake-password') {\n            return throwError({message: 'ERROR: 00170728 Access Denied.  The system is currently in read-only mode', status: 403});\n        }\n\n        return throwError('Fake server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeBpmUserNoImage = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: undefined,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmUser = {\n    apps: [],\n    capabilities: null,\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-bpm-first-name',\n    lastName: 'fake-bpm-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 12,\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n\nexport let fakeBpmEditedUser = {\n    apps: [],\n    capabilities: 'fake-capability',\n    company: 'fake-company',\n    created: 'fake-create-date',\n    email: 'fakeBpm@fake.com',\n    externalId: 'fake-external-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    groups: [],\n    id: 'fake-id',\n    lastUpdate: 'fake-update-date',\n    latestSyncTimeStamp: 'fake-timestamp',\n    password: 'fake-password',\n    pictureId: 'src/assets/images/bpmImg.gif',\n    status: 'fake-status',\n    tenantId: 'fake-tenant-id',\n    tenantName: 'fake-tenant-name',\n    tenantPictureId: 'fake-tenant-picture-id',\n    type: 'fake-type'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentModel } from '../models/comment.model';\nimport { UserProcessModel } from '../models/user-process.model';\n\nexport let fakeUser1 = { id: 1, email: 'fake-email@dom.com', firstName: 'firstName', lastName: 'lastName' };\n\nexport let fakeUser2 = { id: 1001, email: 'some-one@somegroup.com', firstName: 'some', lastName: 'one' };\n\nexport let fakeTasksComment = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, message: 'fake-message-1', created: '', createdBy: fakeUser1\n        },\n        {\n            id: 2, message: 'fake-message-2', created: '', createdBy: fakeUser1\n        }\n    ]\n};\n\nexport let fakeProcessComment = new CommentModel({id: 1, message: 'Test', created: new Date('2016-11-10T03:37:30.010+0000'), createdBy: new UserProcessModel({\n    id: 13,\n    firstName: 'Wilbur',\n    lastName: 'Adams',\n    email: 'wilbur@app.com'\n})});\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CookieService } from '../services/cookie.service';\n\nexport class CookieServiceMock extends CookieService {\n\n    /** @override */\n    isEnabled(): boolean {\n        return true;\n    }\n\n    /** @override */\n    getItem(key: string): string | null {\n        return this[key] && this[key].data || null;\n    }\n\n    /** @override */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        this[key] = {data, expiration, path};\n    }\n\n    /** @override */\n    clear() {\n        Object.keys(this).forEach((key) => {\n            if (this.hasOwnProperty(key) && typeof(this[key]) !== 'function') {\n                this[key] = undefined;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class EventMock {\n\n    static keyDown(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keydown');\n        document.dispatchEvent(event);\n    }\n\n    static keyUp(key: any) {\n        const event: any = document.createEvent('Event');\n        event.keyCode = key;\n        event.initEvent('keyup');\n        document.dispatchEvent(event);\n    }\n\n    static resizeMobileView() {\n        // todo: no longer compiles with TS 2.0.2 as innerWidth/innerHeight are readonly fields\n        /*\n        window.innerWidth = 320;\n        window.innerHeight = 568;\n        */\n        window.dispatchEvent(new Event('resize'));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeSearch = {\n    list: {\n        pagination: {\n            count: 1,\n            hasMoreItems: false,\n            totalItems: 1,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: '123',\n                    name: 'MyDoc',\n                    content: {\n                        mimetype: 'text/plain'\n                    },\n                    createdByUser: {\n                        displayName: 'John Doe'\n                    },\n                    modifiedByUser: {\n                        displayName: 'John Doe'\n                    }\n                }\n            }\n        ]\n    }\n};\n\nexport let mockError = {\n    error: {\n        errorKey: 'Search failed',\n        statusCode: 400,\n        briefSummary: '08220082 search failed',\n        stackTrace: 'For security reasons the stack trace is no longer displayed, but the property is kept for previous versions.',\n        descriptionURL: 'https://api-explorer.alfresco.com'\n    }\n};\n\nexport let searchMockApi = {\n    core: {\n        queriesApi: {\n            findNodes: (term, opts) => Promise.resolve(fakeSearch)\n        }\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TranslationService } from '../services/translation.service';\n\nexport interface LangChangeEvent {\n    lang: string;\n    translations: any;\n}\n\nexport class TranslationMock implements TranslationService {\n\n    defaultLang: string = 'en';\n    userLang: string;\n    customLoader: any;\n\n    translate: any = {\n        onLangChange: new EventEmitter<LangChangeEvent>()\n    };\n\n    addTranslationFolder() {}\n\n    onTranslationChanged() {}\n\n    use(): any {}\n\n    loadTranslation() {}\n\n    get(key: string | Array<string>, interpolateParams?: Object): Observable<string | any> {\n        return of(key);\n    }\n\n    instant(key: string | Array<string>, interpolateParams?: Object): string | any {\n        return key;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from '../app-config/app-config.service';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\n\n/* tslint:disable:adf-file-name */\n@Injectable()\nexport class AlfrescoApiServiceMock extends AlfrescoApiService {\n\n    constructor(protected appConfig: AppConfigService) {\n        super(appConfig);\n        if (!this.alfrescoApi) {\n            this.initAlfrescoApi();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormModel, FormValues } from '../../form/components/widgets/core/index';\n\nexport let formTest = new FormModel({});\n\nexport let fakeTaskProcessVariableModels = [\n    {id: 'TEST_VAR_1', type: 'string', value: 'test_value_1'},\n    {id: 'TEST_VAR_2', type: 'string', value: 'test_value_2'},\n    {id: 'TEST_VAR_3', type: 'string', value: 'test_value_3'}\n];\n\nexport let formValues: FormValues = {\n    'test_1': 'value_1',\n    'test_2': 'value_2',\n    'test_3': 'value_1',\n    'test_4': 'dropdown_id',\n    'test_5': 'dropdown_label',\n    'dropdown': {'id': 'dropdown_id', 'name': 'dropdown_label'}\n};\n\nexport let fakeFormJson = {\n    id: '9999',\n    name: 'FORM_VISIBILITY',\n    processDefinitionId: 'PROCESS_TEST:9:9999',\n    processDefinitionName: 'PROCESS_TEST',\n    processDefinitionKey: 'PROCESS_TEST',\n    taskId: '999',\n    taskName: 'TEST',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '000000000000000000',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_TEST',\n                        name: 'FIELD_TEST',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'FIELD_WITH_CONDITION',\n                        name: 'FIELD_WITH_CONDITION',\n                        type: 'text',\n                        value: 'field_with_condition_value',\n                        visibilityCondition: null,\n                        isVisible: true\n                    },\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'LEFT_FORM_FIELD_ID',\n                        name: 'LEFT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'LEFT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'RIGHT_FORM_FIELD_ID',\n                        name: 'RIGHT_FORM_FIELD_NAME',\n                        type: 'text',\n                        value: 'RIGHT_FORM_FIELD_VALUE',\n                        visibilityCondition: null,\n                        isVisible: true\n                    }\n                ]\n            }\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TestBed, TestModuleMetadata } from '@angular/core/testing';\n\ninterface DoneFn extends Function {\n    (): void;\n    fail: (message?: Error | string) => void;\n}\n\ndeclare function beforeAll(action: (done: DoneFn) => void, timeout?: number): void;\ndeclare function afterAll(action: (done: DoneFn) => void, timeout?: number): void;\n\nconst resetTestingModule = TestBed.resetTestingModule;\nconst preventAngularFromResetting = () => (TestBed.resetTestingModule = () => TestBed);\nconst allowAngularToReset = () => (TestBed.resetTestingModule = resetTestingModule);\n\nexport const setupTestBed = (moduleDef: TestModuleMetadata) => {\n    beforeAll((done) =>\n        (async () => {\n            localStorage.clear();\n            sessionStorage.clear();\n            resetTestingModule();\n            preventAngularFromResetting();\n            TestBed.configureTestingModule(moduleDef);\n            await TestBed.compileComponents();\n\n            // prevent Angular from resetting testing module\n            TestBed.resetTestingModule = () => TestBed;\n        })()\n            .then(done)\n            .catch(done.fail)\n    );\n\n    afterAll(() => allowAngularToReset());\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from './alfresco-api.service';\n\nexport function startupServiceFactory(alfrescoApiService: AlfrescoApiService): Function {\n    return () => alfrescoApiService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateLoader, TranslateStore, TranslateService } from '@ngx-translate/core';\n\nimport { MaterialModule } from './material.module';\nimport { AboutModule } from './about/about.module';\nimport { AppConfigModule } from './app-config/app-config.module';\nimport { CardViewModule } from './card-view/card-view.module';\nimport { ContextMenuModule } from './context-menu/context-menu.module';\nimport { DataColumnModule } from './data-column/data-column.module';\nimport { DataTableModule } from './datatable/datatable.module';\nimport { InfoDrawerModule } from './info-drawer/info-drawer.module';\nimport { LanguageMenuModule } from './language-menu/language-menu.module';\nimport { LoginModule } from './login/login.module';\nimport { PaginationModule } from './pagination/pagination.module';\nimport { HostSettingsModule } from './settings/host-settings.module';\nimport { ToolbarModule } from './toolbar/toolbar.module';\nimport { UserInfoModule } from './userinfo/userinfo.module';\nimport { ViewerModule } from './viewer/viewer.module';\nimport { FormBaseModule } from './form/form-base.module';\nimport { SidenavLayoutModule } from './layout/layout.module';\nimport { CommentsModule } from './comments/comments.module';\nimport { ButtonsMenuModule } from './buttons-menu/buttons-menu.module';\nimport { TemplateModule } from './templates/template.module';\nimport { ClipboardModule } from './clipboard/clipboard.module';\n\nimport { DirectiveModule } from './directives/directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { PipeModule } from './pipes/pipe.module';\n\nimport { AlfrescoApiService } from './services/alfresco-api.service';\nimport { TranslationService } from './services/translation.service';\nimport { startupServiceFactory } from './services/startup-service-factory';\nimport { SortingPickerModule } from './sorting-picker/sorting-picker.module';\nimport { IconModule } from './icon/icon.module';\nimport { TranslateLoaderService } from './services/translate-loader.service';\nimport { ExtensionsModule } from '@alfresco/adf-extensions';\n\n@NgModule({\n    imports: [\n        TranslateModule,\n        ExtensionsModule.forChild(),\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        IconModule,\n        SortingPickerModule\n    ],\n    exports: [\n        AboutModule,\n        ViewerModule,\n        SidenavLayoutModule,\n        PipeModule,\n        CommonModule,\n        DirectiveModule,\n        DialogModule,\n        ClipboardModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HostSettingsModule,\n        UserInfoModule,\n        MaterialModule,\n        AppConfigModule,\n        PaginationModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        FormBaseModule,\n        CommentsModule,\n        LoginModule,\n        LanguageMenuModule,\n        InfoDrawerModule,\n        DataColumnModule,\n        DataTableModule,\n        TranslateModule,\n        ButtonsMenuModule,\n        TemplateModule,\n        SortingPickerModule,\n        IconModule\n    ]\n})\nexport class CoreModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule,\n            providers: [\n                TranslateStore,\n                TranslateService,\n                { provide: TranslateLoader, useClass: TranslateLoaderService },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: startupServiceFactory,\n                    deps: [\n                        AlfrescoApiService\n                    ],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CoreModule\n        };\n    }\n\n    constructor(translation: TranslationService) {\n        translation.addTranslationFolder('adf-core', 'assets/adf-core');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeApps = {\n    size: 2, total: 2, start: 0,\n    data: [\n        {\n            id: 1, defaultAppId: null, name: 'Sales-Fakes-App', description: 'desc-fake1', modelId: 22,\n            theme: 'theme-1-fake', icon: 'glyphicon-asterisk', 'deploymentId': '111', 'tenantId': null\n        },\n        {\n            id: 2, defaultAppId: null, name: 'health-care-Fake', description: 'desc-fake2', modelId: 33,\n            theme: 'theme-2-fake', icon: 'glyphicon-asterisk', 'deploymentId': '444', 'tenantId': null\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EcmCompanyModel } from '../models/ecm-company.model';\n\nexport let fakeEcmCompany: EcmCompanyModel = {\n    organization: 'company-fake-name',\n    address1: 'fake-address-1',\n    address2: 'fake-address-2',\n    address3: 'fake-address-3',\n    postcode: 'fAk1',\n    telephone: '00000000',\n    fax: '11111111',\n    email: 'fakeCompany@fake.com'\n};\n\nexport let fakeEcmUser = {\n    id: 'fake-id',\n    firstName: 'fake-ecm-first-name',\n    lastName: 'fake-ecm-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'job-ecm-test',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmUserNoImage = {\n    id: 'fake-id',\n    firstName: 'fake-first-name',\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: null,\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: null,\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n\nexport let fakeEcmEditedUser = {\n    id: 'fake-id',\n    firstName: null,\n    lastName: 'fake-last-name',\n    description: 'i am a fake user for test',\n    avatarId: 'fake-avatar-id',\n    email: 'fakeEcm@ecmUser.com',\n    skypeId: 'fake-skype-id',\n    googleId: 'fake-googleId-id',\n    instantMessageId: 'fake-instantMessageId-id',\n    company: null,\n    jobTitle: 'test job',\n    location: 'fake location',\n    mobile: '000000000',\n    telephone: '11111111',\n    statusUpdatedAt: 'fake-date',\n    userStatus: 'active',\n    enabled: true,\n    emailNotificationsEnabled: true\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeRendition = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'NOT_CREATED'\n    }\n};\n\nexport let fakeRenditionCreated = {\n    entry: {\n        id: 'pdf',\n        content: {\n            mimeType: 'application/pdf',\n            mimeTypeName: 'Adobe PDF Document'\n        },\n        status: 'CREATED'\n    }\n};\n\nexport let fakeRenditionsList = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            }\n        ]\n    }\n};\n\nexport let fakeRenditionsListWithACreated = {\n    list: {\n        pagination: {\n            count: 6,\n            hasMoreItems: false,\n            totalItems: 6,\n            skipCount: 0,\n            maxItems: 100\n        },\n        entries: [\n            {\n                entry: {\n                    id: 'avatar',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'avatar32',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'doclib',\n                    content: {\n                        mimeType: 'image/png',\n                        mimeTypeName: 'PNG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'imgpreview',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'medium',\n                    content: {\n                        mimeType: 'image/jpeg',\n                        mimeTypeName: 'JPEG Image'\n                    },\n                    status: 'NOT_CREATED'\n                }\n            },\n            {\n                entry: {\n                    id: 'pdf',\n                    content: {\n                        mimeType: 'application/pdf',\n                        mimeTypeName: 'Adobe PDF Document'\n                    },\n                    status: 'CREATED'\n                }\n            }\n        ]\n    }\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let fakeForm = {\n    id: 1001,\n    name: 'ISSUE_FORM',\n    processDefinitionId: 'ISSUE_APP:1:2504',\n    processDefinitionName: 'ISSUE_APP',\n    processDefinitionKey: 'ISSUE_APP',\n    taskId: '7506',\n    taskDefinitionKey: 'sid-F67A2996-1684-4774-855A-4591490081FD',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212398417',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'label',\n                        name: 'Label',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'test1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'test2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'test3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio',\n                        name: 'radio',\n                        type: 'radio-buttons',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: [\n                            {\n                                id: 'option_1',\n                                name: 'Option 1'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'Option 2'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'Option 3'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 2,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1498212413062',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefinitionTwoTextFields = {\n    id: 20,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:1:153',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '159',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507044399260',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'firstname',\n                        name: 'firstName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'lastname',\n                        name: 'lastName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionDropdownField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefinitionRequiredField = {\n    id: 21,\n    name: 'dropdownDefinition',\n    processDefinitionId: 'textDefinition:2:163',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '169',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1507046026940',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'united kingdom'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'italy'\n                            },\n                            {\n                                id: 'option_3',\n                                name: 'france'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': []\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formReadonlyTwoTextFields = {\n    id: 22,\n    name: 'formTextDefinition',\n    processDefinitionId: 'textDefinition:3:182',\n    processDefinitionName: 'textDefinition',\n    processDefinitionKey: 'textDefinition',\n    taskId: '188',\n    taskDefinitionKey: 'sid-D941F49F-2B04-4FBB-9B49-9E95991993E8',\n    tabs: [],\n    fields: [\n      {\n        fieldType: 'ContainerRepresentation',\n        id: '1507044399260',\n        name: 'Label',\n        type: 'container',\n        value: null,\n        required: false,\n        readOnly: false,\n        overrideId: false,\n        colspan: 1,\n        placeholder: null,\n        minLength: 0,\n        maxLength: 0,\n        minValue: null,\n        maxValue: null,\n        regexPattern: null,\n        optionType: null,\n        hasEmptyValue: null,\n        options: null,\n        restUrl: null,\n        restResponsePath: null,\n        restIdProperty: null,\n        restLabelProperty: null,\n        tab: null,\n        className: null,\n        dateDisplayFormat: null,\n        layout: null,\n        sizeX: 2,\n        sizeY: 1,\n        row: -1,\n        col: -1,\n        visibilityCondition: null,\n        numberOfColumns: 2,\n        fields: {\n          '1': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'firstname',\n              name: 'firstName',\n              type: 'readonly',\n              value: 'fakeFirstName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 2,\n                field: {\n                  id: 'firstname',\n                  name: 'firstName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ],\n          '2': [\n            {\n              fieldType: 'FormFieldRepresentation',\n              id: 'lastname',\n              name: 'lastName',\n              type: 'readonly',\n              value: 'fakeLastName',\n              required: false,\n              readOnly: false,\n              overrideId: false,\n              colspan: 1,\n              placeholder: null,\n              minLength: 0,\n              maxLength: 0,\n              minValue: null,\n              maxValue: null,\n              regexPattern: null,\n              optionType: null,\n              hasEmptyValue: null,\n              options: null,\n              restUrl: null,\n              restResponsePath: null,\n              restIdProperty: null,\n              restLabelProperty: null,\n              tab: null,\n              className: null,\n              params: {\n                existingColspan: 1,\n                maxColspan: 1,\n                field: {\n                  id: 'lastname',\n                  name: 'lastName',\n                  type: 'text',\n                  value: null,\n                  required: false,\n                  readOnly: false,\n                  overrideId: false,\n                  colspan: 1,\n                  placeholder: null,\n                  minLength: 0,\n                  maxLength: 0,\n                  minValue: null,\n                  maxValue: null,\n                  regexPattern: null,\n                  optionType: null,\n                  hasEmptyValue: null,\n                  options: null,\n                  restUrl: null,\n                  restResponsePath: null,\n                  restIdProperty: null,\n                  restLabelProperty: null,\n                  tab: null,\n                  className: null,\n                  dateDisplayFormat: null,\n                  layout: null,\n                  sizeX: 0,\n                  sizeY: 0,\n                  row: 0,\n                  col: 0,\n                  visibilityCondition: null\n                }\n              },\n              dateDisplayFormat: null,\n              layout: {\n                row: -1,\n                column: -1,\n                colspan: 1\n              },\n              sizeX: 1,\n              sizeY: 1,\n              row: -1,\n              col: -1,\n              visibilityCondition: null\n            }\n          ]\n        }\n      }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formDefVisibilitiFieldDependsOnNextOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n\nexport let formDefVisibilitiFieldDependsOnPreviousOne = {\n    id: 19,\n    processDefinitionId: 'visibility:1:148',\n    processDefinitionName: 'visibility',\n    processDefinitionKey: 'visibility',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: '1506960847579',\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                '1': [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'name',\n                        name: 'name',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                '2': [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'country',\n                        name: 'country',\n                        type: 'dropdown',\n                        value: 'Choose one...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Choose one...'\n                            },\n                            {\n                                id: 'option_1',\n                                name: 'france'\n                            },\n                            {\n                                id: 'option_2',\n                                name: 'uk'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: {\n                            leftFormFieldId: 'name',\n                            leftRestResponseId: null,\n                            operator: '==',\n                            rightValue: 'italy',\n                            rightType: null,\n                            rightFormFieldId: '',\n                            rightRestResponseId: '',\n                            nextConditionOperator: '',\n                            nextCondition: null\n                        },\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    customFieldTemplates: {},\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D-M-YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let startFormDateWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'date',\n                        name: 'date',\n                        type: 'date',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormNumberWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'number',\n                        name: 'number widget',\n                        type: 'integer',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormAmountWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'amount',\n                        name: 'amount widget',\n                        type: 'amount',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormRadioButtonWidgetMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'radio-but',\n                        name: 'radio-buttons',\n                        type: 'radio-buttons',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormTextDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'mocktext',\n                        name: 'mockText',\n                        type: 'text',\n                        value: null\n                    }]}\n        }]\n};\n\nexport let startFormDropdownDefinitionMock = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            readOnly: false,\n            fields: {\n                1: [{\n\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'mockTypeDropDown',\n                        name: 'mock DropDown',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'opt1',\n                                name: 'Option-1'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-2'\n                            },\n                            {\n                                id: 'opt3',\n                                name: 'Option-3'\n                            },\n                            {\n                                id: 'opt2',\n                                name: 'Option-3'\n                            }\n                        ]\n                    }]}\n        }]\n};\n\nexport let startMockForm = {\n    id: 4,\n    name: 'Claim Review Process',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        },\n        {\n            id: 'start_process',\n            name: 'Start Process'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n\nexport let startMockFormWithTab = {\n    id: 4,\n    taskName: 'Mock Title',\n    processDefinitionId: 'ClaimReviewProcess:2: 93',\n    processDefinitionName: 'ClaimReviewProcess',\n    processDefinitionKey: 'ClaimReviewProcess',\n    tabs: [\n        {\n            id: 'form1',\n            name: 'Tab 1'\n        },\n        {\n            id: 'form2',\n            name: 'Tab 2'\n        }\n    ],\n    fields: [\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953253784,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'clientname',\n                        name: 'ClientName',\n                        type: 'text',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'policyno',\n                        name: 'PolicyNo',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterPolicyName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953270269,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billAmount',\n                        name: 'BillAmount',\n                        type: 'integer',\n                        value: null,\n                        required: true,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterBillAmount',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'billdate',\n                        name: 'BillDate',\n                        type: 'date',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: 'billdate',\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        },\n        {\n            fieldType: 'ContainerRepresentation',\n            id: 1497953280930,\n            name: 'Label',\n            type: 'container',\n            value: null,\n            required: false,\n            readOnly: false,\n            overrideId: false,\n            colspan: 1,\n            placeholder: null,\n            minLength: 0,\n            maxLength: 0,\n            minValue: null,\n            maxValue: null,\n            regexPattern: null,\n            optionType: null,\n            hasEmptyValue: null,\n            options: null,\n            restUrl: null,\n            restResponsePath: null,\n            restIdProperty: null,\n            restLabelProperty: null,\n            tab: null,\n            className: null,\n            dateDisplayFormat: null,\n            layout: null,\n            sizeX: 2,\n            sizeY: 1,\n            row: -1,\n            col: -1,\n            visibilityCondition: null,\n            numberOfColumns: 2,\n            fields: {\n                1: [\n                    {\n                        fieldType: 'RestFieldRepresentation',\n                        id: 'claimtype',\n                        name: 'ClaimType',\n                        type: 'dropdown',\n                        value: 'Chooseone...',\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: null,\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: true,\n                        options: [\n                            {\n                                id: 'empty',\n                                name: 'Chooseone...'\n                            },\n                            {\n                                id: 'cashless',\n                                name: 'Cashless'\n                            },\n                            {\n                                id: 'reimbursement',\n                                name: 'Reimbursement'\n                            }\n                        ],\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 2\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null,\n                        endpoint: null,\n                        requestHeaders: null\n                    }\n                ],\n                2: [\n                    {\n                        fieldType: 'FormFieldRepresentation',\n                        id: 'hospitalName',\n                        name: 'HospitalName',\n                        type: 'text',\n                        value: null,\n                        required: false,\n                        readOnly: false,\n                        overrideId: false,\n                        colspan: 1,\n                        placeholder: 'EnterHospitalName',\n                        minLength: 0,\n                        maxLength: 0,\n                        minValue: null,\n                        maxValue: null,\n                        regexPattern: null,\n                        optionType: null,\n                        hasEmptyValue: null,\n                        options: null,\n                        restUrl: null,\n                        restResponsePath: null,\n                        restIdProperty: null,\n                        restLabelProperty: null,\n                        tab: null,\n                        className: null,\n                        params: {\n                            existingColspan: 1,\n                            maxColspan: 1\n                        },\n                        dateDisplayFormat: null,\n                        layout: {\n                            row: -1,\n                            column: -1,\n                            colspan: 1\n                        },\n                        sizeX: 1,\n                        sizeY: 1,\n                        row: -1,\n                        col: -1,\n                        visibilityCondition: null\n                    }\n                ]\n            }\n        }\n    ],\n    outcomes: [\n        {\n            id: 'approve',\n            name: 'Approve'\n        },\n        {\n            id: 'complete',\n            name: 'Complete'\n        }\n    ],\n    javascriptEvents: [],\n    className: '',\n    style: '',\n    metadata: {},\n    variables: [],\n    customFieldsValueInfo: {},\n    gridsterForm: false,\n    globalDateFormat: 'D - M - YYYY'\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let formModelTabs = {\n    id: 16,\n    name: 'start event',\n    description: '',\n    version: 2,\n    lastUpdatedBy: 4,\n    lastUpdatedByFullName: 'User Test',\n    lastUpdated: '2017-10-04T13:00:03.030+0000',\n    stencilSetId: null,\n    referenceId: null,\n    formDefinition: {\n      tabs: [],\n      fields: [\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037668653',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'AmountFieldRepresentation',\n                id: 'label',\n                name: 'Label',\n                type: 'amount',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null,\n                enableFractions: false,\n                currency: null\n              }\n            ],\n            '2': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label1',\n                name: 'Label1',\n                type: 'date',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 1\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ]\n          }\n        },\n        {\n          fieldType: 'ContainerRepresentation',\n          id: '1507037670167',\n          name: 'Label',\n          type: 'container',\n          value: null,\n          required: false,\n          readOnly: false,\n          overrideId: false,\n          colspan: 1,\n          placeholder: null,\n          minLength: 0,\n          maxLength: 0,\n          minValue: null,\n          maxValue: null,\n          regexPattern: null,\n          optionType: null,\n          hasEmptyValue: null,\n          options: null,\n          restUrl: null,\n          restResponsePath: null,\n          restIdProperty: null,\n          restLabelProperty: null,\n          tab: null,\n          className: null,\n          dateDisplayFormat: null,\n          layout: null,\n          sizeX: 2,\n          sizeY: 1,\n          row: -1,\n          col: -1,\n          visibilityCondition: null,\n          numberOfColumns: 2,\n          fields: {\n            '1': [\n              {\n                fieldType: 'FormFieldRepresentation',\n                id: 'label2',\n                name: 'Label2',\n                type: 'boolean',\n                value: null,\n                required: false,\n                readOnly: false,\n                overrideId: false,\n                colspan: 1,\n                placeholder: null,\n                minLength: 0,\n                maxLength: 0,\n                minValue: null,\n                maxValue: null,\n                regexPattern: null,\n                optionType: null,\n                hasEmptyValue: null,\n                options: null,\n                restUrl: null,\n                restResponsePath: null,\n                restIdProperty: null,\n                restLabelProperty: null,\n                tab: null,\n                className: null,\n                params: {\n                  existingColspan: 1,\n                  maxColspan: 2\n                },\n                dateDisplayFormat: null,\n                layout: {\n                  row: -1,\n                  column: -1,\n                  colspan: 1\n                },\n                sizeX: 1,\n                sizeY: 1,\n                row: -1,\n                col: -1,\n                visibilityCondition: null\n              }\n            ],\n            '2': []\n          }\n        }\n      ],\n      outcomes: [],\n      javascriptEvents: [],\n      className: '',\n      style: '',\n      customFieldTemplates: {},\n      metadata: {},\n      variables: [],\n      customFieldsValueInfo: {},\n      gridsterForm: false\n    }\n  };\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let mockToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ' +\n    'zdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiZmFtaWx5X25hbWUiOiJEb2UiLCJnaXZ' +\n    'lbl9uYW1lIjoiSm9obiIsImFkbWluIjp0cnVlLCJlbWFpbCI6ImpvaG5Eb2VAZ21haWwuY29tIiwicHJ' +\n    'lZmVycmVkX3VzZXJuYW1lIjoiam9obkRvZTEiLCJqdGkiOiI2MmQ3YjA4NS1hNTJjLTRjZmEtYjA2Zi1' +\n    'hODFhN2IwNjRjZDIiLCJpYXQiOjE1NDM0MTA0NzcsImV4cCI6MTU0MzQxNTIxM30.pSP86kmX3keuU5E3ndaOUq2TzKdJRsuMnBdFz3Y-UEU';\n"]}