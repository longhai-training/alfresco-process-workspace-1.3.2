/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { ChangeDetectionStrategy, Component, Directive, Input, ViewEncapsulation } from '@angular/core';
export class SidebarActionMenuComponent {
    constructor() {
        /**
         * Width in pixels for sidebar action menu options.
         */
        this.width = 272;
    }
    /**
     * @return {?}
     */
    isExpanded() {
        return this.expanded;
    }
}
SidebarActionMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'adf-sidebar-action-menu',
                template: "<div class=\"adf-sidebar-action-menu\">\n    <button *ngIf=\"isExpanded()\" mat-raised-button class=\"adf-sidebar-action-menu-button\" data-automation-id=\"create-button\" [matMenuTriggerFor]=\"adfSidebarMenu\">\n        <span *ngIf=\"title\" class=\"adf-sidebar-action-menu-text\">{{ title }}</span>\n        <ng-content select=\"[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]\"></ng-content>\n    </button>\n\n    <div *ngIf=\"!isExpanded()\" class=\"adf-sidebar-action-menu-icon\" [matMenuTriggerFor]=\"adfSidebarMenu\">\n        <ng-content select=\"[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]\"></ng-content>\n    </div>\n\n    <mat-menu #adfSidebarMenu=\"matMenu\" class=\"adf-sidebar-action-menu-panel\" [overlapTrigger]=\"false\" yPosition=\"below\">\n        <div class=\"adf-sidebar-action-menu-options\" [style.width.px]=\"width\">\n            <ng-content select=\"[adf-sidebar-menu-options], [sidebar-menu-options]\"></ng-content>\n        </div>\n    </mat-menu>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: { 'class': 'adf-sidebar-action-menu' },
                styles: [""]
            }] }
];
SidebarActionMenuComponent.propDecorators = {
    title: [{ type: Input }],
    expanded: [{ type: Input }],
    width: [{ type: Input }]
};
if (false) {
    /**
     * The title of the sidebar action.
     * @type {?}
     */
    SidebarActionMenuComponent.prototype.title;
    /**
     * Toggle the sidebar action menu on expand.
     * @type {?}
     */
    SidebarActionMenuComponent.prototype.expanded;
    /**
     * Width in pixels for sidebar action menu options.
     * @type {?}
     */
    SidebarActionMenuComponent.prototype.width;
}
/**
 * Directive selectors without adf- prefix will be deprecated on 3.0.0
 */
export class SidebarMenuDirective {
}
SidebarMenuDirective.decorators = [
    { type: Directive, args: [{ selector: '[adf-sidebar-menu-options], [sidebar-menu-options]' },] }
];
export class SidebarMenuTitleIconDirective {
}
SidebarMenuTitleIconDirective.decorators = [
    { type: Directive, args: [{ selector: '[adf-sidebar-menu-title-icon], [sidebar-menu-title-icon]' },] }
];
export class SidebarMenuExpandIconDirective {
}
SidebarMenuExpandIconDirective.decorators = [
    { type: Directive, args: [{ selector: '[adf-sidebar-menu-expand-icon], [sidebar-menu-expand-icon]' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci1hY3Rpb24tbWVudS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvcmUvIiwic291cmNlcyI6WyJsYXlvdXQvY29tcG9uZW50cy9zaWRlYmFyLWFjdGlvbi9zaWRlYmFyLWFjdGlvbi1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFXeEcsTUFBTSxPQUFPLDBCQUEwQjtJQVR2Qzs7OztRQXFCSSxVQUFLLEdBQVcsR0FBRyxDQUFDO0lBS3hCLENBQUM7Ozs7SUFIRyxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO0lBQ3pCLENBQUM7OztZQXpCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsKy9CQUFtRDtnQkFFbkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxJQUFJLEVBQUUsRUFBRSxPQUFPLEVBQUUseUJBQXlCLEVBQUU7O2FBQy9DOzs7b0JBS0ksS0FBSzt1QkFJTCxLQUFLO29CQUlMLEtBQUs7Ozs7Ozs7SUFSTiwyQ0FDYzs7Ozs7SUFHZCw4Q0FDa0I7Ozs7O0lBR2xCLDJDQUNvQjs7Ozs7QUFVdUQsTUFBTSxPQUFPLG9CQUFvQjs7O1lBQS9HLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxvREFBb0QsRUFBRTs7QUFDUSxNQUFNLE9BQU8sNkJBQTZCOzs7WUFBOUgsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLDBEQUEwRCxFQUFFOztBQUNJLE1BQU0sT0FBTyw4QkFBOEI7OztZQUFqSSxTQUFTLFNBQUMsRUFBRSxRQUFRLEVBQUUsNERBQTRELEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBEaXJlY3RpdmUsIElucHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1zaWRlYmFyLWFjdGlvbi1tZW51JyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2lkZWJhci1hY3Rpb24tbWVudS5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2lkZWJhci1hY3Rpb24tbWVudS5jb21wb25lbnQuc2NzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyAnY2xhc3MnOiAnYWRmLXNpZGViYXItYWN0aW9uLW1lbnUnIH1cbn0pXG5cbmV4cG9ydCBjbGFzcyBTaWRlYmFyQWN0aW9uTWVudUNvbXBvbmVudCB7XG5cbiAgICAvKiogVGhlIHRpdGxlIG9mIHRoZSBzaWRlYmFyIGFjdGlvbi4gKi9cbiAgICBASW5wdXQoKVxuICAgIHRpdGxlOiBzdHJpbmc7XG5cbiAgICAvKiogVG9nZ2xlIHRoZSBzaWRlYmFyIGFjdGlvbiBtZW51IG9uIGV4cGFuZC4gKi9cbiAgICBASW5wdXQoKVxuICAgIGV4cGFuZGVkOiBib29sZWFuO1xuXG4gICAgLyoqIFdpZHRoIGluIHBpeGVscyBmb3Igc2lkZWJhciBhY3Rpb24gbWVudSBvcHRpb25zLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgd2lkdGg6IG51bWJlciA9IDI3MjtcblxuICAgIGlzRXhwYW5kZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmV4cGFuZGVkO1xuICAgIH1cbn1cblxuLyoqXG4gKiBEaXJlY3RpdmUgc2VsZWN0b3JzIHdpdGhvdXQgYWRmLSBwcmVmaXggd2lsbCBiZSBkZXByZWNhdGVkIG9uIDMuMC4wXG4gKi9cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1thZGYtc2lkZWJhci1tZW51LW9wdGlvbnNdLCBbc2lkZWJhci1tZW51LW9wdGlvbnNdJyB9KSBleHBvcnQgY2xhc3MgU2lkZWJhck1lbnVEaXJlY3RpdmUge31cbkBEaXJlY3RpdmUoeyBzZWxlY3RvcjogJ1thZGYtc2lkZWJhci1tZW51LXRpdGxlLWljb25dLCBbc2lkZWJhci1tZW51LXRpdGxlLWljb25dJyB9KSBleHBvcnQgY2xhc3MgU2lkZWJhck1lbnVUaXRsZUljb25EaXJlY3RpdmUgeyB9XG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbYWRmLXNpZGViYXItbWVudS1leHBhbmQtaWNvbl0sIFtzaWRlYmFyLW1lbnUtZXhwYW5kLWljb25dJyB9KSBleHBvcnQgY2xhc3MgU2lkZWJhck1lbnVFeHBhbmRJY29uRGlyZWN0aXZlIHsgfVxuIl19