/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector  */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { DynamicRowValidationSummary } from './../dynamic-row-validation-summary.model';
import { DynamicTableModel } from './../dynamic-table.widget.model';
export class RowEditorComponent {
    constructor() {
        this.save = new EventEmitter();
        this.cancel = new EventEmitter();
        this.validationSummary = new DynamicRowValidationSummary({ isValid: true, message: '' });
    }
    /**
     * @return {?}
     */
    onCancelChanges() {
        this.cancel.emit({
            table: this.table,
            row: this.row,
            column: this.column
        });
    }
    /**
     * @return {?}
     */
    onSaveChanges() {
        this.validate();
        if (this.isValid()) {
            this.save.emit({
                table: this.table,
                row: this.row,
                column: this.column
            });
        }
    }
    /**
     * @private
     * @return {?}
     */
    isValid() {
        return this.validationSummary && this.validationSummary.isValid;
    }
    /**
     * @private
     * @return {?}
     */
    validate() {
        this.validationSummary = this.table.validateRow(this.row);
    }
}
RowEditorComponent.decorators = [
    { type: Component, args: [{
                selector: 'row-editor',
                template: "<div class=\"row-editor mdl-shadow--2dp\"\n    [class.row-editor__invalid]=\"!validationSummary.isValid\">\n    <div class=\"mdl-grid\" *ngFor=\"let column of table.columns\">\n        <div class=\"mdl-cell mdl-cell--6-col\" [ngSwitch]=\"column.type\">\n            <div *ngSwitchCase=\"'Dropdown'\">\n                <adf-dropdown-editor\n                    [table]=\"table\"\n                    [row]=\"row\"\n                    [column]=\"column\">\n                </adf-dropdown-editor>\n                </div>\n                <div *ngSwitchCase=\"'Date'\">\n                    <adf-date-editor\n                    [table]=\"table\"\n                    [row]=\"row\"\n                    [column]=\"column\">\n                </adf-date-editor>\n                </div>\n                <div *ngSwitchCase=\"'Datetime'\">\n                    <adf-datetime-editor\n                        [table]=\"table\"\n                        [row]=\"row\"\n                        [column]=\"column\">\n                    </adf-datetime-editor>\n                </div>\n                <div *ngSwitchCase=\"'Boolean'\">\n                <adf-boolean-editor\n                    [table]=\"table\"\n                    [row]=\"row\"\n                    [column]=\"column\">\n                </adf-boolean-editor>\n                </div>\n                <div *ngSwitchDefault>\n                <adf-text-editor\n                    [table]=\"table\"\n                    [row]=\"row\"\n                    [column]=\"column\">\n                </adf-text-editor>\n            </div>\n        </div>\n    </div>\n    <error-widget [error]=\"validationSummary\"></error-widget>\n    <div>\n        <button mat-button (click)=\"onCancelChanges()\">Cancel</button>\n        <button mat-button (click)=\"onSaveChanges()\">Save</button>\n    </div>\n</div>\n",
                styles: [".row-editor{padding:8px}.row-editor__validation-summary{visibility:hidden}.row-editor__invalid .row-editor__validation-summary{color:#d50000;visibility:visible;padding:8px 16px}"]
            }] }
];
/** @nocollapse */
RowEditorComponent.ctorParameters = () => [];
RowEditorComponent.propDecorators = {
    table: [{ type: Input }],
    row: [{ type: Input }],
    column: [{ type: Input }],
    save: [{ type: Output }],
    cancel: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    RowEditorComponent.prototype.table;
    /** @type {?} */
    RowEditorComponent.prototype.row;
    /** @type {?} */
    RowEditorComponent.prototype.column;
    /** @type {?} */
    RowEditorComponent.prototype.save;
    /** @type {?} */
    RowEditorComponent.prototype.cancel;
    /** @type {?} */
    RowEditorComponent.prototype.validationSummary;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm93LmVkaXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29yZS8iLCJzb3VyY2VzIjpbImZvcm0vY29tcG9uZW50cy93aWRnZXRzL2R5bmFtaWMtdGFibGUvZWRpdG9ycy9yb3cuZWRpdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1CQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBR3hGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBT3BFLE1BQU0sT0FBTyxrQkFBa0I7SUFtQjNCO1FBUEEsU0FBSSxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO1FBR2xELFdBQU0sR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUtoRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSwyQkFBMkIsQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDN0YsQ0FBQzs7OztJQUVELGVBQWU7UUFDWCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztZQUNiLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztZQUNqQixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUc7WUFDYixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU07U0FDdEIsQ0FBQyxDQUFDO0lBQ1AsQ0FBQzs7OztJQUVELGFBQWE7UUFDVCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7Z0JBQ1gsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLO2dCQUNqQixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUc7Z0JBQ2IsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO2FBQ3RCLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQzs7Ozs7SUFFTyxPQUFPO1FBQ1gsT0FBTyxJQUFJLENBQUMsaUJBQWlCLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQztJQUNwRSxDQUFDOzs7OztJQUVPLFFBQVE7UUFDWixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlELENBQUM7OztZQXJESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLFlBQVk7Z0JBQ3RCLHkwREFBZ0M7O2FBRW5DOzs7OztvQkFHSSxLQUFLO2tCQUdMLEtBQUs7cUJBR0wsS0FBSzttQkFHTCxNQUFNO3FCQUdOLE1BQU07Ozs7SUFaUCxtQ0FDeUI7O0lBRXpCLGlDQUNxQjs7SUFFckIsb0NBQzJCOztJQUUzQixrQ0FDa0Q7O0lBRWxELG9DQUNvRDs7SUFFcEQsK0NBQStDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuIC8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3RvciAgKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IER5bmFtaWNSb3dWYWxpZGF0aW9uU3VtbWFyeSB9IGZyb20gJy4vLi4vZHluYW1pYy1yb3ctdmFsaWRhdGlvbi1zdW1tYXJ5Lm1vZGVsJztcbmltcG9ydCB7IER5bmFtaWNUYWJsZUNvbHVtbiB9IGZyb20gJy4vLi4vZHluYW1pYy10YWJsZS1jb2x1bW4ubW9kZWwnO1xuaW1wb3J0IHsgRHluYW1pY1RhYmxlUm93IH0gZnJvbSAnLi8uLi9keW5hbWljLXRhYmxlLXJvdy5tb2RlbCc7XG5pbXBvcnQgeyBEeW5hbWljVGFibGVNb2RlbCB9IGZyb20gJy4vLi4vZHluYW1pYy10YWJsZS53aWRnZXQubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3Jvdy1lZGl0b3InLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9yb3cuZWRpdG9yLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL3Jvdy5lZGl0b3IuY3NzJ11cbn0pXG5leHBvcnQgY2xhc3MgUm93RWRpdG9yQ29tcG9uZW50IHtcblxuICAgIEBJbnB1dCgpXG4gICAgdGFibGU6IER5bmFtaWNUYWJsZU1vZGVsO1xuXG4gICAgQElucHV0KClcbiAgICByb3c6IER5bmFtaWNUYWJsZVJvdztcblxuICAgIEBJbnB1dCgpXG4gICAgY29sdW1uOiBEeW5hbWljVGFibGVDb2x1bW47XG5cbiAgICBAT3V0cHV0KClcbiAgICBzYXZlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgQE91dHB1dCgpXG4gICAgY2FuY2VsOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgdmFsaWRhdGlvblN1bW1hcnk6IER5bmFtaWNSb3dWYWxpZGF0aW9uU3VtbWFyeTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnZhbGlkYXRpb25TdW1tYXJ5ID0gbmV3IER5bmFtaWNSb3dWYWxpZGF0aW9uU3VtbWFyeSh7IGlzVmFsaWQ6IHRydWUsIG1lc3NhZ2U6ICcnIH0pO1xuICAgIH1cblxuICAgIG9uQ2FuY2VsQ2hhbmdlcygpIHtcbiAgICAgICAgdGhpcy5jYW5jZWwuZW1pdCh7XG4gICAgICAgICAgICB0YWJsZTogdGhpcy50YWJsZSxcbiAgICAgICAgICAgIHJvdzogdGhpcy5yb3csXG4gICAgICAgICAgICBjb2x1bW46IHRoaXMuY29sdW1uXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uU2F2ZUNoYW5nZXMoKSB7XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICAgICAgaWYgKHRoaXMuaXNWYWxpZCgpKSB7XG4gICAgICAgICAgICB0aGlzLnNhdmUuZW1pdCh7XG4gICAgICAgICAgICAgICAgdGFibGU6IHRoaXMudGFibGUsXG4gICAgICAgICAgICAgICAgcm93OiB0aGlzLnJvdyxcbiAgICAgICAgICAgICAgICBjb2x1bW46IHRoaXMuY29sdW1uXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgaXNWYWxpZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsaWRhdGlvblN1bW1hcnkgJiYgdGhpcy52YWxpZGF0aW9uU3VtbWFyeS5pc1ZhbGlkO1xuICAgIH1cblxuICAgIHByaXZhdGUgdmFsaWRhdGUoKSB7XG4gICAgICAgIHRoaXMudmFsaWRhdGlvblN1bW1hcnkgPSB0aGlzLnRhYmxlLnZhbGlkYXRlUm93KHRoaXMucm93KTtcbiAgICB9XG5cbn1cbiJdfQ==