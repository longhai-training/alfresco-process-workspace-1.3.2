/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Subject } from 'rxjs';
import { OnInit, EventEmitter, OnDestroy } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { MatDialogRef } from '@angular/material';
import { AlfrescoApiService } from '@alfresco/adf-core';
export declare class LibraryDialogComponent implements OnInit, OnDestroy {
    private alfrescoApiService;
    private formBuilder;
    private dialog;
    /** Emitted when an error occurs. */
    error: EventEmitter<any>;
    /** Emitted when the new library is created successfully. The
     * event parameter is a SiteEntry object with the details of the
     * newly-created library.
     */
    success: EventEmitter<any>;
    onDestroy$: Subject<boolean>;
    createTitle: string;
    libraryTitleExists: boolean;
    form: FormGroup;
    visibilityOption: any;
    visibilityOptions: {
        value: string;
        label: string;
        disabled: boolean;
    }[];
    constructor(alfrescoApiService: AlfrescoApiService, formBuilder: FormBuilder, dialog: MatDialogRef<LibraryDialogComponent>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    readonly title: string;
    readonly id: string;
    readonly description: string;
    readonly visibility: string;
    submit(): void;
    visibilityChangeHandler(event: any): void;
    private create;
    private sanitize;
    private canGenerateId;
    private handleError;
    private checkLibraryNameExists;
    private findLibraryByTitle;
    private forbidSpecialCharacters;
    private forbidOnlySpaces;
    private createSiteIdValidator;
}
