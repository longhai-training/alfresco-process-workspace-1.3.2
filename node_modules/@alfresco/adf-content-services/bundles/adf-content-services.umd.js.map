{"version":3,"file":"adf-content-services.umd.js.map","sources":["ng://@alfresco/adf-content-services/material.module.ts","node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-content-services/document-list/models/document-folder.model.ts","ng://@alfresco/adf-content-services/document-list/services/custom-resources.service.ts","ng://@alfresco/adf-content-services/document-list/services/document-list.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.component.ts","ng://@alfresco/adf-content-services/dialogs/node-lock.dialog.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-dialog.service.ts","ng://@alfresco/adf-content-services/directives/node-lock.directive.ts","ng://@alfresco/adf-content-services/directives/content-directive.module.ts","ng://@alfresco/adf-content-services/social/services/rating.service.ts","ng://@alfresco/adf-content-services/social/rating.component.ts","ng://@alfresco/adf-content-services/social/like.component.ts","ng://@alfresco/adf-content-services/social/social.module.ts","ng://@alfresco/adf-content-services/tag/services/tag.service.ts","ng://@alfresco/adf-content-services/tag/tag-actions.component.ts","ng://@alfresco/adf-content-services/tag/tag-list.component.ts","ng://@alfresco/adf-content-services/tag/tag-node-list.component.ts","ng://@alfresco/adf-content-services/tag/tag.module.ts","ng://@alfresco/adf-content-services/webscript/webscript.component.ts","ng://@alfresco/adf-content-services/webscript/webscript.module.ts","ng://@alfresco/adf-content-services/document-list/data/share-data-row.model.ts","ng://@alfresco/adf-content-services/document-list/data/share-datatable-adapter.ts","ng://@alfresco/adf-content-services/document-list/models/preset.model.ts","ng://@alfresco/adf-content-services/document-list/models/content-action.model.ts","ng://@alfresco/adf-content-services/document-list/components/node.event.ts","ng://@alfresco/adf-content-services/document-list/components/document-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column.component.ts","ng://@alfresco/adf-content-services/document-list/models/permissions.model.ts","ng://@alfresco/adf-content-services/document-list/services/node-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/document-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/folder-actions.service.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action.component.ts","ng://@alfresco/adf-content-services/document-list/components/library-name-column/library-name-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/library-role-column/library-role-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/library-status-column/library-status-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/name-column/name-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/trashcan-name-column/trashcan-name-column.component.ts","ng://@alfresco/adf-content-services/document-list/models/document-library.model.ts","ng://@alfresco/adf-content-services/document-list/models/permissions-style.model.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-dialog.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list-row.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-files.event.ts","ng://@alfresco/adf-content-services/upload/components/base-upload/upload-base.ts","ng://@alfresco/adf-content-services/upload/components/upload-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-version-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-drag-area.component.ts","ng://@alfresco/adf-content-services/upload/pipes/file-upload-error.pipe.ts","ng://@alfresco/adf-content-services/upload/directives/file-draggable.directive.ts","ng://@alfresco/adf-content-services/upload/upload.module.ts","ng://@alfresco/adf-content-services/document-list/document-list.module.ts","ng://@alfresco/adf-content-services/search/search-query-builder.service.ts","ng://@alfresco/adf-content-services/search/components/search.component.ts","ng://@alfresco/adf-content-services/search/components/empty-search-result.component.ts","ng://@alfresco/adf-content-services/search/components/search-control.component.ts","ng://@alfresco/adf-content-services/search/components/search-trigger.directive.ts","ng://@alfresco/adf-content-services/search/components/search-filter/models/search-filter-list.model.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.component.ts","ng://@alfresco/adf-content-services/search/components/search-text/search-text.component.ts","ng://@alfresco/adf-content-services/search/components/search-radio/search-radio.component.ts","ng://@alfresco/adf-content-services/search/components/search-slider/search-slider.component.ts","ng://@alfresco/adf-content-services/search/forms/live-error-state-matcher.ts","ng://@alfresco/adf-content-services/search/components/search-number-range/search-number-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-check-list/search-check-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-date-range/search-date-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.service.ts","ng://@alfresco/adf-content-services/search/components/search-chip-list/search-chip-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-sorting-picker/search-sorting-picker.component.ts","ng://@alfresco/adf-content-services/search/components/search-widget-container/search-widget-container.component.ts","ng://@alfresco/adf-content-services/search/search.module.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.component.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.module.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/dropdown-breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.module.ts","ng://@alfresco/adf-content-services/dialogs/confirm.dialog.ts","ng://@alfresco/adf-content-services/version-manager/version-list.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.component.ts","ng://@alfresco/adf-content-services/version-manager/version-upload.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.module.ts","ng://@alfresco/adf-content-services/content-node-selector/name-location-cell/name-location-cell.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector-panel.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.module.ts","ng://@alfresco/adf-content-services/dialogs/folder-name.validators.ts","ng://@alfresco/adf-content-services/dialogs/folder.dialog.ts","ng://@alfresco/adf-content-services/dialogs/library/library.dialog.ts","ng://@alfresco/adf-content-services/dialogs/dialog.module.ts","ng://@alfresco/adf-content-services/folder-directive/folder-create.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-edit.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-directive.module.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata-card/content-metadata-card.component.ts","ng://@alfresco/adf-content-services/content-metadata/services/basic-properties.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-groups-translator.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/property-group-reader.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/aspect-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/indifferent-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/layout-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/content-metadata-config.factory.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-descriptors.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/content-metadata.service.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata/content-metadata.component.ts","ng://@alfresco/adf-content-services/content-metadata/content-metadata.module.ts","ng://@alfresco/adf-content-services/permission-manager/models/permission.model.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/permission-list.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/no-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/inherited-button.directive.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-dialog.component.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission-dialog.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/search-config-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-panel.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/permission-manager.module.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.dialog.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.directive.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.module.ts","ng://@alfresco/adf-content-services/tree-view/models/tree-view.model.ts","ng://@alfresco/adf-content-services/tree-view/services/tree-view.service.ts","ng://@alfresco/adf-content-services/tree-view/data/tree-view-datasource.ts","ng://@alfresco/adf-content-services/tree-view/components/tree-view.component.ts","ng://@alfresco/adf-content-services/tree-view/tree-view.module.ts","ng://@alfresco/adf-content-services/content.module.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatTreeModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatTreeModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, NodePaging } from '@alfresco/js-api';\n\nexport class DocumentLoaderNode {\n    currentNode: NodeEntry;\n    children: NodePaging;\n\n    constructor(currentNode: NodeEntry, children: NodePaging) {\n        this.currentNode = currentNode;\n        this.children = children;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService,\n    LogService,\n    PaginationModel\n} from '@alfresco/adf-core';\n\nimport {\n    NodePaging,\n    PersonEntry,\n    SitePaging,\n    DeletedNodesPaging,\n    SearchRequest,\n    SharedLinkPaging,\n    FavoritePaging,\n    SiteMemberPaging,\n    SiteRolePaging\n} from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomResourcesService {\n\n    private CREATE_PERMISSION = 'create';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets files recently accessed by a user.\n     * @param personId ID of the user\n     * @param pagination Specifies how to paginate the results\n     * @param filters Specifies additional filters to apply (joined with **AND**)\n     * @returns List of nodes for the recently used files\n     */\n    getRecentFiles(personId: string, pagination: PaginationModel, filters?: string[]): Observable<NodePaging> {\n        const defaultFilter = [\n            'TYPE:\"content\"',\n            '-PNAME:\"0/wiki\"',\n            '-TYPE:\"app:filelink\"',\n            '-TYPE:\"cm:thumbnail\"',\n            '-TYPE:\"cm:failedThumbnail\"',\n            '-TYPE:\"cm:rating\"',\n            '-TYPE:\"dl:dataList\"',\n            '-TYPE:\"dl:todoList\"',\n            '-TYPE:\"dl:issue\"',\n            '-TYPE:\"dl:contact\"',\n            '-TYPE:\"dl:eventAgenda\"',\n            '-TYPE:\"dl:event\"',\n            '-TYPE:\"dl:task\"',\n            '-TYPE:\"dl:simpletask\"',\n            '-TYPE:\"dl:meetingAgenda\"',\n            '-TYPE:\"dl:location\"',\n            '-TYPE:\"fm:topic\"',\n            '-TYPE:\"fm:post\"',\n            '-TYPE:\"ia:calendarEvent\"',\n            '-TYPE:\"lnk:link\"'\n        ];\n\n        return new Observable((observer) => {\n            this.apiService.peopleApi.getPerson(personId)\n                .then((person: PersonEntry) => {\n                        const username = person.entry.id;\n                        const filterQueries = [\n                            { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                            { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                            { query: defaultFilter.join(' AND ') }\n                        ];\n\n                        if (filters && filters.length > 0) {\n                            filterQueries.push({\n                                query: filters.join()\n                            });\n                        }\n\n                        const query: SearchRequest = new SearchRequest({\n                            query: {\n                                query: '*',\n                                language: 'afts'\n                            },\n                            filterQueries,\n                            include: ['path', 'properties', 'allowableOperations'],\n                            sort: [{\n                                type: 'FIELD',\n                                field: 'cm:modified',\n                                ascending: false\n                            }],\n                            paging: {\n                                maxItems: pagination.maxItems,\n                                skipCount: pagination.skipCount\n                            }\n                        });\n                        return this.apiService.searchApi.search(query)\n                            .then((searchResult) => {\n                                    observer.next(searchResult);\n                                    observer.complete();\n                                },\n                                (err) => {\n                                    observer.error(err);\n                                    observer.complete();\n                                });\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets favorite files for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of favorite files\n     */\n    loadFavorites(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: includeFieldsRequest\n        };\n\n        return new Observable((observer) => {\n            this.apiService.favoritesApi.getFavorites('-me-', options)\n                .then((result: FavoritePaging) => {\n                        const page: FavoritePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { target } }: any) => ({\n                                        entry: target.file || target.folder\n                                    }))\n                                    .map(({ entry }: any) => {\n                                        entry.properties = {\n                                            'cm:title': entry.title,\n                                            'cm:description': entry.description\n                                        };\n                                        return { entry };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets sites that the current user is a member of.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadMemberSites(pagination: PaginationModel): Observable<SiteMemberPaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable((observer) => {\n            this.apiService.peopleApi.listSiteMembershipsForPerson('-me-', options)\n                .then((result: SiteRolePaging) => {\n                        const page: SiteMemberPaging = new SiteMemberPaging( {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { site } }: any) => {\n                                        site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                        site.name = site.name || site.title;\n                                        return {\n                                            entry: site\n                                        };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        });\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets all sites in the repository.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties', 'aspectNames'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable((observer) => {\n            this.apiService.sitesApi.getSites(options)\n                .then((page: SitePaging) => {\n                        page.list.entries.map(\n                            ({ entry }: any) => {\n                                entry.name = entry.name || entry.title;\n                                return { entry };\n                            }\n                        );\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets all items currently in the trash.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of deleted items\n     */\n    loadTrashcan(pagination: PaginationModel, includeFields: string[] = []): Observable<DeletedNodesPaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.nodesApi.getDeletedNodes(options))\n            .pipe(catchError((err) => this.handleError(err)));\n\n    }\n\n    /**\n     * Gets shared links for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of shared links\n     */\n    loadSharedLinks(pagination: PaginationModel, includeFields: string[] = []): Observable<SharedLinkPaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.sharedLinksApi.findSharedLinks(options))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Is the folder ID one of the well-known aliases?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is a well-known name, false otherwise\n     */\n    isCustomSource(folderId: string): boolean {\n        let isCustomSources = false;\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isCustomSources = true;\n        }\n\n        return isCustomSources;\n    }\n\n    /**\n     * Is the folder ID a \"-my\", \"-root-\", or \"-shared-\" alias?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is one of the supported sources, false otherwise\n     */\n    isSupportedSource(folderId: string): boolean {\n        let isSupportedSources = false;\n        const sources = ['-my-', '-root-', '-shared-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isSupportedSources = true;\n        }\n\n        return isSupportedSources;\n    }\n\n    /**\n     * Gets a folder's contents.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of items contained in the folder\n     */\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[] = []): any {\n        if (nodeId === '-trashcan-') {\n            return this.loadTrashcan(pagination, includeFields);\n        } else if (nodeId === '-sharedlinks-') {\n            return this.loadSharedLinks(pagination, includeFields);\n        } else if (nodeId === '-sites-') {\n            return this.loadSites(pagination);\n        } else if (nodeId === '-mysites-') {\n            return this.loadMemberSites(pagination);\n        } else if (nodeId === '-favorites-') {\n            return this.loadFavorites(pagination, includeFields);\n        } else if (nodeId === '-recent-') {\n            return this.getRecentFiles('-me-', pagination);\n        }\n    }\n\n    // TODO: remove it from here\n\n    /**\n     * Gets the contents of one of the well-known aliases in the form of node ID strings.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @returns List of node IDs\n     */\n    getCorrespondingNodeIds(nodeId: string, pagination: PaginationModel = {}): Observable<string[]> {\n        if (this.isCustomSource(nodeId)) {\n\n            return this.loadFolderByNodeId(nodeId, pagination)\n                .pipe(map((result: any): string[] => {\n                    return result.list.entries.map((node: any): string => this.getIdFromEntry(node, nodeId));\n                }));\n\n        } else if (nodeId) {\n            // cases when nodeId is '-my-', '-root-' or '-shared-'\n            return from(this.apiService.nodesApi.getNode(nodeId)\n                .then((node) => [node.entry.id]));\n        }\n\n        return of([]);\n    }\n\n    /**\n     * Chooses the correct ID for a node entry.\n     * @param node Node object\n     * @param nodeId ID of the node object\n     * @returns ID value\n     */\n    getIdFromEntry(node: any, nodeId: string): string {\n        if (nodeId === '-sharedlinks-') {\n            return node.entry.nodeId;\n        } else if (nodeId === '-sites-' || nodeId === '-mysites-') {\n            return node.entry.guid;\n        } else if (nodeId === '-favorites-') {\n            return node.entry.targetGuid;\n        } else {\n            return node.entry.id;\n        }\n    }\n\n    /**\n     * Does the well-known alias have a corresponding node ID?\n     * @param nodeId Node to check\n     * @returns True if the alias has a corresponding node ID, false otherwise\n     */\n    hasCorrespondingNodeIds(nodeId: string): boolean {\n        return this.isCustomSource(nodeId) || this.isSupportedSource(nodeId);\n    }\n\n    private getIncludesFields(includeFields: string[]): string[] {\n        return ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n    }\n\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService, ContentService, LogService, PaginationModel\n} from '@alfresco/adf-core';\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, NodePaging } from '@alfresco/js-api';\nimport { DocumentLoaderNode } from '../models/document-folder.model';\nimport { Observable, from, throwError, forkJoin } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { DocumentListLoader } from '../interfaces/document-list-loader.interface';\nimport { CustomResourcesService } from './custom-resources.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DocumentListService implements DocumentListLoader {\n\n    static ROOT_ID = '-root-';\n\n    constructor(private contentService: ContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private customResourcesService: CustomResourcesService) {\n    }\n\n    /**\n     * Deletes a node.\n     * @param nodeId ID of the node to delete\n     * @returns Empty response when the operation is complete\n     */\n    deleteNode(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder where the node will be copied\n     * @returns NodeEntry for the copied node\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId })).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Moves a node to destination node.\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder where the node will be moved\n     * @returns NodeEntry for the moved node\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId })).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolder(folder: string, opts?: any, includeFields: string[] = []): Observable<NodePaging> {\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const params: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n            if (opts.where) {\n                params.where = opts.where;\n            }\n        }\n\n        return from(this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a node via its node ID.\n     * @param nodeId ID of the target node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return this.contentService.getNode(nodeId, opts);\n    }\n\n    /**\n     * Gets a folder node via its node ID.\n     * @param nodeId ID of the folder node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolderNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    isCustomSourceService(nodeId): boolean {\n        return this.customResourcesService.isCustomSource(nodeId);\n    }\n\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[], where?: string): Observable<DocumentLoaderNode> {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            return this.customResourcesService.loadFolderByNodeId(nodeId, pagination, includeFields).pipe(\n                map((result: any) => new DocumentLoaderNode(null, result))\n            );\n        } else {\n            return this.retrieveDocumentNode(nodeId, pagination, includeFields, where);\n        }\n    }\n\n    private retrieveDocumentNode(nodeId: string, pagination: PaginationModel, includeFields: string[], where?: string): Observable<DocumentLoaderNode> {\n        return forkJoin(\n            this.getFolderNode(nodeId, includeFields),\n            this.getFolder(null, {\n                maxItems: pagination.maxItems,\n                skipCount: pagination.skipCount,\n                rootFolderId: nodeId,\n                where: where\n            }, includeFields)).pipe(\n                map((results) => new DocumentLoaderNode(results[0], results[1]))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { Node } from '@alfresco/js-api';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\n\n@Component({\n    selector: 'adf-content-node-selector',\n    templateUrl: './content-node-selector.component.html',\n    styleUrls: ['./content-node-selector.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent {\n\n    buttonActionName: string;\n    chosenNode: Node[];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: ContentNodeSelectorComponentData) {\n        this.buttonActionName = data.actionName ? `NODE_SELECTOR.${data.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onSelect(nodeList: Node[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onClick(): void {\n        this.data.select.next(this.chosenNode);\n        this.data.select.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { NodeBodyLock, Node, NodeEntry } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-node-lock',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './node-lock.dialog.html'\n})\nexport class NodeLockDialogComponent implements OnInit {\n\n    form: FormGroup;\n    node: Node = null;\n    nodeName: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialogRef<NodeLockDialogComponent>,\n        private alfrescoApi: AlfrescoApiService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n    }\n\n    ngOnInit() {\n        const { node } = this.data;\n        this.nodeName = node.name;\n\n        this.form = this.formBuilder.group({\n            isLocked: node.isLocked || false,\n            allowOwner: node.properties['cm:lockType'] === 'WRITE_LOCK',\n            isTimeLock: !!node.properties['cm:expiryDate'],\n            time: !!node.properties['cm:expiryDate'] ? moment(node.properties['cm:expiryDate']) : moment()\n        });\n    }\n\n    private get lockTimeInSeconds(): number {\n        if (this.form.value.isTimeLock) {\n            const duration = moment.duration(moment(this.form.value.time).diff(moment()));\n            return duration.asSeconds();\n        }\n\n        return 0;\n    }\n\n    private get nodeBodyLock(): NodeBodyLock {\n        return new NodeBodyLock({\n            'timeToExpire': this.lockTimeInSeconds,\n            'type': this.form.value.allowOwner ? 'ALLOW_OWNER_CHANGES' : 'FULL',\n            'lifetime': 'PERSISTENT'\n        });\n    }\n\n    private toggleLock(): Promise<NodeEntry> {\n        const { alfrescoApi: { nodesApi }, data: { node } } = this;\n\n        if (this.form.value.isLocked) {\n            return nodesApi.lockNode(node.id, this.nodeBodyLock);\n        }\n\n        return nodesApi.unlockNode(node.id);\n    }\n\n    submit(): void {\n        this.toggleLock()\n            .then((node: NodeEntry) => {\n                this.data.node.isLocked = this.form.value.isLocked;\n                this.dialog.close(node.entry);\n            })\n            .catch((error: any) => this.data.onError(error));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ContentService, ThumbnailService } from '@alfresco/adf-core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { ShareDataRow } from '../document-list/data/share-data-row.model';\nimport { Node, NodeEntry, SitePaging } from '@alfresco/js-api';\nimport { DataColumn, SitesService, TranslationService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeLockDialogComponent } from '../dialogs/node-lock.dialog';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentNodeDialogService {\n    static nonDocumentSiteContent = [\n        'blog',\n        'calendar',\n        'dataLists',\n        'discussions',\n        'links',\n        'wiki'\n    ];\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private contentService: ContentService,\n                private documentListService: DocumentListService,\n                private siteService: SitesService,\n                private translation: TranslationService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    /**\n     * Opens a file browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((nodeEntry: NodeEntry) => {\n            return this.openUploadFileDialog('Choose', nodeEntry.entry);\n        }));\n    }\n\n    /**\n     * Opens a lock node dialog.\n     * @param contentEntry Node to lock\n     * @returns Error/status message (if any)\n     */\n    public openLockNodeDialog(contentEntry: Node): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasAllowableOperations(contentEntry, AllowableOperationsEnum.LOCK)) {\n            this.dialog.open(NodeLockDialogComponent, {\n                data: {\n                    node: contentEntry,\n                    onError: (error) => {\n                        this.error.emit(error);\n                        observable.error(error);\n                    }\n                },\n                width: '400px'\n            });\n        } else {\n            observable.error('OPERATION.FAIL.NODE.NO_PERMISSION');\n        }\n\n        return observable;\n    }\n\n    /**\n     * Opens a file browser at a chosen site location.\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogBySite(): Observable<Node[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFileBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a folder browser at a chosen site location.\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogBySite(): Observable<Node[]> {\n        return this.openFolderBrowseDialogByFolderId('-my-');\n    }\n\n    /**\n     * Opens a folder browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: NodeEntry) => {\n            return this.openUploadFolderDialog('Choose', node.entry);\n        }));\n    }\n\n    /**\n     * Opens a dialog to copy or move an item to a new location.\n     * @param action Name of the action (eg, \"Copy\" or \"Move\") to show in the title\n     * @param contentEntry Item to be copied or moved\n     * @param permission Permission for the operation\n     * @param excludeSiteContent The site content that should be filtered out\n     * @returns Information about files that were copied/moved\n     */\n    openCopyMoveDialog(action: string, contentEntry: Node, permission?: string, excludeSiteContent?: string[]): Observable<Node[]> {\n        if (this.contentService.hasAllowableOperations(contentEntry, permission)) {\n\n            const select = new Subject<Node[]>();\n            select.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const title = this.getTitleTranslation(action, contentEntry.name);\n\n            const data: ContentNodeSelectorComponentData = {\n                title: title,\n                actionName: action,\n                currentFolderId: contentEntry.parentId,\n                imageResolver: this.imageResolver.bind(this),\n                where: '(isFolder=true)',\n                isSelectionValid: this.isCopyMoveSelectionValid.bind(this),\n                excludeSiteContent: excludeSiteContent || ContentNodeDialogService.nonDocumentSiteContent,\n                select: select\n            };\n\n            this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n\n            return select;\n        } else {\n            const errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            return throwError(errors);\n        }\n    }\n\n    /**\n     * Gets the translation of the dialog title.\n     * @param action Name of the action to display in the dialog title\n     * @param name Name of the item on which the action is being performed\n     * @returns Translated version of the title\n     */\n    getTitleTranslation(action: string, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action.toUpperCase()}_ITEM`, { name });\n    }\n\n    /**\n     * Opens a dialog to choose folders to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry  Item to upload\n     * @returns Information about the chosen folder(s)\n     */\n    openUploadFolderDialog(action: string, contentEntry: Node): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.hasAllowableOperationsOnNodeFolder.bind(this),\n            where: '(isFolder=true)',\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openUploadFileDialog(action: string, contentEntry: Node): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.isNodeFile.bind(this),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string | null {\n        const entry: Node = row.node.entry;\n        if (!this.contentService.hasAllowableOperations(entry, 'create')) {\n            return this.thumbnailService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n\n    private isNodeFile(entry: Node): boolean {\n        return entry.isFile;\n    }\n\n    private hasAllowableOperationsOnNodeFolder(entry: Node): boolean {\n        return this.isNodeFolder(entry) && this.contentService.hasAllowableOperations(entry, 'create');\n    }\n\n    private isNodeFolder(entry: Node): boolean {\n        return entry.isFolder;\n    }\n\n    private isCopyMoveSelectionValid(entry: Node): boolean {\n        return this.hasEntityCreatePermission(entry) && !this.isSite(entry);\n    }\n\n    private hasEntityCreatePermission(entry: Node): boolean {\n        return this.contentService.hasAllowableOperations(entry, 'create');\n    }\n\n    private isSite(entry) {\n        return !!entry.guid || entry.nodeType === 'st:site' || entry.nodeType === 'st:sites';\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AllowableOperationsEnum, ContentService } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '../content-node-selector/content-node-dialog.service';\n\n@Directive({\n    selector: '[adf-node-lock]'\n})\nexport class NodeLockDirective implements AfterViewInit {\n\n    /** Node to lock/unlock. */\n    @Input('adf-node-lock')\n    node: Node;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.contentNodeDialogService.openLockNodeDialog(this.node);\n    }\n\n    constructor(\n        public element: ElementRef,\n        private renderer: Renderer2,\n        private contentService: ContentService,\n        private contentNodeDialogService: ContentNodeDialogService\n    ) {}\n\n    ngAfterViewInit() {\n        const hasAllowableOperations = this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.LOCK);\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', !hasAllowableOperations);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NodeLockDirective } from './node-lock.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        NodeLockDirective\n    ],\n    exports: [\n        NodeLockDirective\n    ]\n})\nexport class ContentDirectiveModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { RatingEntry, RatingBody } from '@alfresco/js-api';\nimport { from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the current user's rating for a node.\n     * @param nodeId Node to get the rating from\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @returns The rating value\n     */\n    getRating(nodeId: string, ratingType: any): Observable<RatingEntry | {}> {\n        return from(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Adds the current user's rating for a node.\n     * @param nodeId Target node for the rating\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @param vote Rating value (boolean for \"likes\", numeric 0..5 for \"fiveStar\")\n     * @returns Details about the rating, including the new value\n     */\n    postRating(nodeId: string, ratingType: string, vote: any): Observable<RatingEntry | {}> {\n        const ratingBody: RatingBody = new RatingBody({\n            'id': ratingType,\n            'myRating': vote\n        });\n        return from(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Removes the current user's rating for a node.\n     * @param nodeId Target node\n     * @param ratingType Type of rating to remove (can be \"likes\" or \"fiveStar\")\n     * @returns Null response indicating that the operation is complete\n     */\n    deleteRating(nodeId: string, ratingType: any): Observable<any> {\n        return from(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nimport { RatingEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-rating',\n    styleUrls: ['./rating.component.scss'],\n    templateUrl: './rating.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    /** Identifier of the node to apply the rating to. */\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        const ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    this.average = ratingEntry.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({ fill: true });\n            } else {\n                this.stars.push({ fill: false });\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    if (this.average !== ratingEntry.entry.aggregate.average) {\n                        this.average = ratingEntry.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nimport { RatingEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-like',\n    styleUrls: ['./like.component.scss'],\n    templateUrl: './like.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n    /** Identifier of a node to apply likes to. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;\n                    if (ratingEntry.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (ratingEntry: RatingEntry) => {\n                    this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ]\n})\nexport class SocialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TagBody,  TagPaging, TagEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TagService {\n\n    /** Emitted when tag information is updated. */\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of tags added to a node.\n     * @param nodeId ID of the target node\n     * @returns TagPaging object (defined in JS-API) containing the tags\n     */\n    getTagsByNodeId(nodeId: string): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a list of all the tags already defined in the repository.\n     * @param opts Options supported by JS-API\n     * @returns TagPaging object (defined in JS-API) containing the tags\n     */\n    getAllTheTags(opts?: any): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getTags(opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Adds a tag to a node.\n     * @param nodeId ID of the target node\n     * @param tagName Name of the tag to add\n     * @returns TagEntry object (defined in JS-API) with details of the new tag\n     */\n    addTag(nodeId: string, tagName: string): Observable<TagEntry> {\n        const tagBody = new TagBody();\n        tagBody.tag = tagName;\n\n        const observableAdd = from(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        observableAdd.subscribe((tagEntry: TagEntry) => {\n            this.refresh.emit(tagEntry);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return observableAdd;\n    }\n\n    /**\n     * Removes a tag from a node.\n     * @param nodeId ID of the target node\n     * @param tag Name of the tag to remove\n     * @returns Null object when the operation completes\n     */\n    removeTag(nodeId: string, tag: string): Observable<any> {\n        const observableRemove = from(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        observableRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return observableRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, OnDestroy, OnInit } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { Subscription } from 'rxjs';\nimport { TagPaging } from '@alfresco/js-api';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    templateUrl: './tag-actions.component.html',\n    styleUrls: ['./tag-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a tag is added successfully. */\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an action is chosen. */\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n    tagsEntries: any;\n    errorMsg: string;\n    disableAddTag: boolean = true;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private tagService: TagService, private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.tagService.refresh.subscribe(() => {\n                this.refreshTag();\n            })\n        );\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging: TagPaging) => {\n                this.tagsEntries = tagPaging.list.entries;\n                this.disableAddTag = false;\n                this.result.emit(this.tagsEntries);\n            }, () => {\n                this.tagsEntries = null;\n                this.disableAddTag = true;\n                this.result.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { PaginationModel } from '@alfresco/adf-core';\n\n/**\n * This component provide a list of all the tag inside the ECM\n */\n@Component({\n    selector: 'adf-tag-list',\n    templateUrl: './tag-list.component.html',\n    styleUrls: ['./tag-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Array of tags that are displayed\n     */\n    tagsEntries: any = [];\n\n    /**\n     * Number of items per iteration\n     */\n    size: number = 10;\n\n    defaultPagination: PaginationModel;\n    pagination: PaginationModel;\n\n    isLoading = false;\n    isSizeMinimum = true;\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n\n        this.defaultPagination = {\n            skipCount: 0,\n            maxItems: this.size,\n            hasMoreItems: false\n        };\n\n        this.pagination = this.defaultPagination;\n\n        this.tagService.refresh.subscribe(() => {\n            this.tagsEntries = [];\n            this.refreshTag(this.defaultPagination);\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag(this.defaultPagination);\n    }\n\n    refreshTag(opts?: any) {\n        this.tagService.getAllTheTags(opts).subscribe((tags: any) => {\n            this.tagsEntries = this.tagsEntries.concat(tags.list.entries);\n            this.pagination = tags.list.pagination;\n            this.result.emit(this.tagsEntries);\n            this.isLoading = false;\n        });\n    }\n\n    loadMoreTags() {\n        if (this.pagination.hasMoreItems) {\n            this.isLoading = true;\n            this.isSizeMinimum = false;\n\n            this.refreshTag({\n                skipCount: this.pagination.skipCount + this.pagination.count,\n                maxItems: this.size\n            });\n        }\n    }\n\n    loadLessTags() {\n        this.isSizeMinimum = false;\n        this.tagsEntries = this.tagsEntries.slice(0, this.tagsEntries.length - this.pagination.count);\n        this.pagination.skipCount = this.pagination.skipCount - this.pagination.count;\n        this.pagination.hasMoreItems = true;\n\n        if (this.tagsEntries.length <= this.size) {\n            this.isSizeMinimum = true;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { TagPaging } from '@alfresco/js-api';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    templateUrl: './tag-node-list.component.html',\n    styleUrls: ['./tag-node-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Show delete button */\n    @Input()\n    showDelete = true;\n\n    tagsEntries: any;\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging: TagPaging) => {\n                this.tagsEntries = tagPaging.list.entries;\n                this.results.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ]\n})\nexport class TagModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are received\n *\n */\n@Component({\n    selector: 'adf-webscript-get',\n    templateUrl: 'webscript.component.html'\n})\nexport class WebscriptComponent implements OnChanges {\n\n    /** (required) Path to the webscript (as defined by webscript). */\n    @Input()\n    scriptPath: string;\n\n    /** Arguments to pass to the webscript. */\n    @Input()\n    scriptArgs: any;\n\n    /** Toggles whether to show or hide the data. */\n    @Input()\n    showData: boolean = true;\n\n    /** Path where the application is deployed */\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    /** Path that the webscript service is mapped to. */\n    @Input()\n    servicePath: string = 'service';\n\n    /** Content type to interpret the data received from the webscript.\n     * Can be \"JSON\" , \"HTML\" , \"DATATABLE\" or \"TEXT\"\n     */\n    @Input()\n    contentType: string = 'TEXT';\n\n    /** Emitted when the operation succeeds. You can get the plain data from\n     * the webscript through the **success** event parameter and use it as you\n     * need in your application.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptData) => {\n\n                this.data = webScriptData;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptData);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @returns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        const datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (error) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRow, ObjectUtils, ThumbnailService, ContentService } from '@alfresco/adf-core';\nimport { MinimalNode, NodeEntry } from '@alfresco/js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): NodeEntry {\n        return this.obj;\n    }\n\n    set node(value: NodeEntry) {\n        this.obj = value;\n        this.cache = {};\n    }\n\n    constructor(private obj: NodeEntry,\n                private contentService: ContentService,\n                private permissionsStyle: PermissionStyleModel[],\n                private thumbnailService?: ThumbnailService) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: NodeEntry): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.contentService.hasAllowableOperations(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(nodeEntry: NodeEntry): boolean {\n        return this.isFolder(nodeEntry) && this.contentService.hasAllowableOperations(nodeEntry.entry, 'create');\n    }\n\n    isFolder(nodeEntry: NodeEntry): boolean {\n        return nodeEntry.entry && nodeEntry.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    imageErrorResolver(event: Event): any {\n        if (this.obj.entry.content) {\n            return this.thumbnailService.getMimeTypeIcon(this.obj.entry.content.mimeType);\n        }\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataColumn,\n    DataRow,\n    DataSorting,\n    DataTableAdapter,\n    ThumbnailService,\n    ContentService\n} from '@alfresco/adf-core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { ShareDataRow } from './share-data-row.model';\nimport { NodeEntry } from '@alfresco/js-api/src/api/content-rest-api/model/nodeEntry';\nimport { RowFilter } from './row-filter.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private _sortingMode: string;\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n\n    private filter: RowFilter;\n    private imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    set sortingMode(value: string) {\n        let newValue = (value || 'client').toLowerCase();\n        if (newValue !== 'client' && newValue !== 'server') {\n            newValue = 'client';\n        }\n        this._sortingMode = newValue;\n    }\n\n    get sortingMode(): string {\n        return this._sortingMode;\n    }\n\n    constructor(private thumbnailService: ThumbnailService,\n                private contentService: ContentService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting,\n                sortingMode: string = 'client') {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n        this.sortingMode = sortingMode;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        const dataRow: ShareDataRow = <ShareDataRow> row;\n        const value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                const resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                return this.getFolderIcon(node);\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.thumbnailService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.thumbnailService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.thumbnailService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                const resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: RowFilter) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n\n    private getFolderIcon(node: any) {\n        if (this.isSmartFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('smartFolder');\n        } else if (this.isRuleFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('ruleFolder');\n        } else if (this.isALinkFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('linkFolder');\n        } else {\n            return this.thumbnailService.getMimeTypeIcon('folder');\n        }\n    }\n\n    isSmartFolder(node: any) {\n        const nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('smf:customConfigSmartFolder') > -1 ||\n            (nodeAspects.indexOf('smf:systemConfigSmartFolder') > -1);\n    }\n\n    isRuleFolder(node: any) {\n        const nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('rule:rules') > -1 ||\n            (nodeAspects.indexOf('rule:rules') > -1);\n    }\n\n    isALinkFolder(node: any) {\n        const nodeType = node.entry ? node.entry.nodeType : node.nodeType;\n        return nodeType === 'app:folderlink';\n    }\n\n    private getNodeAspectNames(node: any): any[] {\n        return node.entry && node.entry.aspectNames ? node.entry.aspectNames : node.aspectNames ? node.aspectNames : [];\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        if (this.sortingMode === 'server') {\n            return;\n        }\n\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(nodePaging: NodePaging, merge: boolean = false) {\n        let shareDataRows: ShareDataRow[] = [];\n\n        if (nodePaging && nodePaging.list) {\n            const nodeEntries: NodeEntry[] = nodePaging.list.entries;\n            if (nodeEntries && nodeEntries.length > 0) {\n                shareDataRows = nodeEntries.map((item) => new ShareDataRow(item, this.contentService, this.permissionsStyle, this.thumbnailService));\n\n                if (this.filter) {\n                    shareDataRows = shareDataRows.filter(this.filter);\n                }\n\n                if (this.sortingMode !== 'server') {\n                    // Sort by first sortable or just first column\n                    if (this.columns && this.columns.length > 0) {\n                        const sorting = this.getSorting();\n                        if (sorting) {\n                            this.sortRows(shareDataRows, sorting);\n                        } else {\n                            const sortable = this.columns.filter((c) => c.sortable);\n                            if (sortable.length > 0) {\n                                this.sort(sortable[0].key, 'asc');\n                            } else {\n                                this.sort(this.columns[0].key, 'asc');\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            const listPrunedDuplicate = shareDataRows.filter((elementToFilter: any) => {\n                const isPresent = this.rows.find((currentRow: any) => {\n                    return currentRow.obj.entry.id === elementToFilter.obj.entry.id;\n                });\n\n                return !isPresent;\n            });\n\n            this.rows = this.rows.concat(listPrunedDuplicate);\n        } else {\n            this.rows = shareDataRows;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean | Function = false;\n    visible: boolean | Function = true;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n\n            if (obj.hasOwnProperty('disabled')) {\n                this.disabled = obj.disabled;\n            }\n\n            if (obj.hasOwnProperty('visible')) {\n                this.visible = obj.visible;\n            }\n        }\n    }\n}\n\nexport enum ContentActionTarget {\n    Document = 'document',\n    Folder = 'folder',\n    All = 'all'\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nexport class NodeEntityEvent extends BaseEvent<NodeEntry> {\n\n    value: NodeEntry;\n\n    defaultPrevented: boolean;\n\n    constructor(nodeEntry: NodeEntry) {\n        super();\n        this.value = nodeEntry;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<Node> {\n\n    value: Node;\n\n    defaultPrevented: boolean;\n\n    constructor(node: Node) {\n        super();\n        this.value = node;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    ContentService,\n    DataCellEvent,\n    DataColumn,\n    DataRowActionEvent,\n    DataSorting,\n    DataTableComponent,\n    DisplayMode,\n    ObjectDataColumn,\n    PaginatedComponent,\n    AppConfigService,\n    DataColumnListComponent,\n    UserPreferencesService,\n    PaginationModel,\n    ThumbnailService,\n    CustomLoadingContentTemplateDirective,\n    CustomNoPermissionTemplateDirective,\n    CustomEmptyContentTemplateDirective,\n    RequestPaginationModel,\n    AlfrescoApiService,\n    UserPreferenceValues,\n    LockService\n} from '@alfresco/adf-core';\n\nimport { Node, NodeEntry, NodePaging, Pagination } from '@alfresco/js-api';\nimport { Subject, BehaviorSubject, Subscription, of } from 'rxjs';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { NavigableComponentInterface } from '../../breadcrumb/navigable-component.interface';\nimport { RowFilter } from '../data/row-filter.model';\nimport { DocumentListService } from '../services/document-list.service';\nimport { DocumentLoaderNode } from '../models/document-folder.model';\n\n@Component({\n    selector: 'adf-document-list',\n    styleUrls: ['./document-list.component.scss'],\n    templateUrl: './document-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: '.adf-document-list' }\n})\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent, NavigableComponentInterface {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n\n    DEFAULT_PAGINATION: Pagination = new Pagination({\n        hasMoreItems: false,\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    @ContentChild(CustomNoPermissionTemplateDirective)\n    customNoPermissionsTemplate: CustomNoPermissionTemplateDirective;\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customNoContentTemplate: CustomEmptyContentTemplateDirective;\n\n    /** Include additional information about the node in the server request. For example: association, isLink, isLocked and others. */\n    @Input()\n    includeFields: string[];\n\n    /**\n     * Filters the Node list using the *where* condition of the REST API\n     * (for example, isFolder=true). See the REST API documentation for more information.\n     */\n    @Input()\n    where: string;\n\n    /** Change the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** Define a set of CSS styles to apply depending on the permission\n     * of the user on that node. See the Permission Style model\n     * page for further details and examples.\n     */\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    /** The default route for all the location-based columns (if declared). */\n    @Input()\n    locationFormat: string = '/';\n\n    /** Toggles navigation to folder content or file preview */\n    @Input()\n    navigate: boolean = true;\n\n    /** Toggles the header */\n    @Input()\n    showHeader: boolean = true;\n\n    /** User interaction for folder navigation or file preview.\n     * Valid values are \"click\" and \"dblclick\". Default value: \"dblclick\"\n     */\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    /** Show document thumbnails rather than icons */\n    @Input()\n    thumbnails: boolean = false;\n\n    /** Row selection mode. Can be null, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    /** Toggles multiselect mode */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles content actions for each row */\n    @Input()\n    contentActions: boolean = false;\n\n    /** Position of the content actions dropdown menu. Can be set to \"left\" or \"right\". */\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    /** Toggles context menus for each row */\n    @Input()\n    contextMenuActions: boolean = false;\n\n    /** Custom image for empty folder. Default value: './assets/images/empty_doc_lib.svg' */\n    @Input()\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    /**\n     * When true, this enables you to drop files directly into subfolders shown\n     * as items in the list. When false, the dropped file will be added to the\n     * current folder (ie, the one containing all the items shown in the list).\n     * See the Upload directive for further details about how the file drop is\n     * handled.\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** Defines default sorting. The format is an array of 2 strings `[key, direction]`\n     * i.e. `['name', 'desc']` or `['name', 'asc']`. Set this value only if you want to\n     * override the default sorting detected by the component based on columns.\n     */\n    @Input()\n    sorting = ['name', 'asc'];\n\n    /** Defines sorting mode. Can be either `client` (items in the list\n     * are sorted client-side) or `server` (the ordering supplied by the\n     * server is used without further client-side sorting).\n     * Note that the `server` option *does not* request the server to sort the data\n     * before delivering it.\n     */\n    @Input()\n    sortingMode = 'client';\n\n    /** The inline style to apply to every row. See\n     * the Angular NgStyle\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row */\n    @Input()\n    rowStyleClass: string;\n\n    /** Toggles the loading state and animated spinners for the component. Used in\n     * combination with `navigate=false` to perform custom navigation and loading\n     * state indication.\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** @hidden */\n    @Input()\n    _rowFilter: RowFilter | null = null;\n\n    /**\n     * Custom function to choose whether to show or hide rows.\n     * See the [Row Filter Model](row-filter.model.md) page for\n     * more information.\n     */\n    @Input()\n    set rowFilter(rowFilter: RowFilter) {\n        this._rowFilter = rowFilter;\n        if (this.data) {\n            this.data.setFilter(this._rowFilter);\n            if (this._currentFolderId) {\n                this.reload();\n            }\n        }\n    }\n\n    get rowFilter(): RowFilter {\n        return this._rowFilter;\n    }\n\n    /**\n     * Custom function to choose image file paths to show. See the\n     * [Image Resolver Model](image-resolver.model.md) page for\n     * more information.\n     */\n    @Input()\n    imageResolver: any | null = null;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    _currentFolderId: string = null;\n\n    /** The ID of the folder node to display or a reserved string alias for special sources */\n    @Input()\n    set currentFolderId(currentFolderId: string) {\n        if (this._currentFolderId !== currentFolderId) {\n            this._currentFolderId = currentFolderId;\n            if (this.data) {\n                this.data.loadPage(null, false);\n                this.resetNewFolderPagination();\n            }\n\n            if (this._currentFolderId) {\n                this.loadFolder();\n            }\n        }\n    }\n\n    get currentFolderId(): string {\n        return this._currentFolderId;\n    }\n\n    /** The Document list will show all the nodes contained in the NodePaging entity */\n    @Input()\n    node: NodePaging = null;\n\n    /** Default value is stored in the user preference settings. Use this only if you are not using pagination. */\n    @Input()\n    maxItems: number = this.DEFAULT_PAGINATION.maxItems;\n\n    /** Emitted when the user clicks a list node */\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the user double-clicks a list node */\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the current display folder changes */\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the user acts upon files with either single or double click\n     * (depends on `navigation-mode`). Useful for integration with the\n     * Viewer component.\n     */\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the Document List has loaded all items and is ready for use */\n    @Output()\n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when the API fails to get the Document List data */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('dataTable')\n    dataTable: DataTableComponent;\n\n    actions: ContentActionModel[] = [];\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    noPermission: boolean = false;\n    selection = new Array<NodeEntry>();\n    $folderNode: Subject<Node> = new Subject<Node>();\n\n    // @deprecated 3.0.0\n    folderNode: Node;\n\n    private _pagination: PaginationModel = this.DEFAULT_PAGINATION;\n    pagination: BehaviorSubject<PaginationModel> = new BehaviorSubject<PaginationModel>(this.DEFAULT_PAGINATION);\n\n    private layoutPresets = {};\n    private subscriptions: Subscription[] = [];\n    private rowMenuCache: { [key: string]: ContentActionModel[] } = {};\n    private loadingTimeout;\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private appConfig: AppConfigService,\n                private userPreferencesService: UserPreferencesService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private alfrescoApiService: AlfrescoApiService,\n                private lockService: LockService) {\n\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.maxItems = this._pagination.maxItems = pagSize;\n        });\n    }\n\n    getContextActions(node: NodeEntry) {\n        if (node && node.entry) {\n            const actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    ngOnInit() {\n        this.rowMenuCache = {};\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.thumbnailService, this.contentService, null, this.getDefaultSorting(), this.sortingMode);\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this._rowFilter) {\n            this.data.setFilter(this._rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.subscriptions.push(\n            this.contextActionHandler.subscribe((val) => this.contextActionCallback(val))\n        );\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.setTableSchema();\n    }\n\n    private setTableSchema() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.thumbnailService, this.contentService, schema, this.getDefaultSorting(), this.sortingMode);\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        const columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this._currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.resetSelection();\n        if (this.data) {\n            this.data.thumbnails = this.thumbnails;\n\n        }\n        if (changes.sortingMode && !changes.sortingMode.firstChange && this.data) {\n            this.data.sortingMode = changes.sortingMode.currentValue;\n        }\n\n        if (changes.sorting && !changes.sorting.firstChange && this.data) {\n            const newValue = changes.sorting.currentValue;\n            if (newValue && newValue.length > 0) {\n                const [key, direction] = newValue;\n                this.data.setSorting(new DataSorting(key, direction));\n            }\n        }\n\n        if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                const merge = this._pagination ? this._pagination.merge : false;\n\n                this.data.loadPage(changes.node.currentValue, merge);\n                this.onDataReady(changes.node.currentValue);\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload() {\n        this.ngZone.run(() => {\n            this.resetSelection();\n            if (this.node) {\n                this.data.loadPage(this.node, this._pagination.merge);\n                this.onDataReady(this.node);\n            } else {\n                this.loadFolder();\n            }\n        });\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    getNodeActions(node: NodeEntry | any): ContentActionModel[] {\n        if (node && node.entry) {\n            let target = null;\n\n            if (node.entry.isFile) {\n                target = 'document';\n            } else if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                const actions = this.rowMenuCache[node.entry.id];\n                if (actions) {\n                    actions.forEach((action) => {\n                        this.refreshAction(action, node);\n                    });\n                    return actions;\n                }\n\n                const actionsByTarget = this.actions\n                    .filter((entry) => {\n                        const isVisible = (typeof entry.visible === 'function')\n                            ? entry.visible(node)\n                            : entry.visible;\n\n                        return isVisible && entry.target.toLowerCase() === target;\n                    })\n                    .map((action) => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.refreshAction(action, node);\n                });\n\n                this.rowMenuCache[node.entry.id] = actionsByTarget;\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    private refreshAction(action: ContentActionModel, node: NodeEntry) {\n        action.disabled = this.isActionDisabled(action, node);\n        action.visible = this.isActionVisible(action, node);\n    }\n\n    private isActionVisible(action: ContentActionModel, node: NodeEntry): boolean {\n        if (typeof action.visible === 'function') {\n            return action.visible(node);\n        }\n\n        return action.visible;\n    }\n\n    private isActionDisabled(action: ContentActionModel, node: NodeEntry): boolean {\n        if (typeof action.disabled === 'function') {\n            return action.disabled(node);\n        }\n\n        if ((action.permission &&\n            action.disableWithNoPermission &&\n            !this.contentService.hasAllowableOperations(node.entry, action.permission)) ||\n            this.lockService.isLocked(node.entry)) {\n            return true;\n        } else {\n            return action.disabled;\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    navigateTo(node: Node | string): boolean {\n        if (typeof node === 'string') {\n            this.resetNewFolderPagination();\n            this._currentFolderId = node;\n            this.folderChange.emit(new NodeEntryEvent(<Node> { id: node }));\n            this.reload();\n            return true;\n        } else {\n            if (this.canNavigateFolder(node)) {\n                this.resetNewFolderPagination();\n                this._currentFolderId = this.getNodeFolderDestinationId(node);\n                this.folderChange.emit(new NodeEntryEvent(<Node> { id: this._currentFolderId }));\n                this.reload();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private getNodeFolderDestinationId(node: Node) {\n        return this.isLinkFolder(node) ? node.properties['cm:destination'] : node.id;\n    }\n\n    private isLinkFolder(node: Node) {\n        return node.nodeType === 'app:folderlink' && node.properties &&\n            node.properties['cm:destination'];\n    }\n\n    updateCustomSourceData(nodeId: string): void {\n        this._currentFolderId = nodeId;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: NodeEntry, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = of(true);\n            }\n\n            if (typeof action.execute === 'function' && handlerSub) {\n                handlerSub.subscribe(() => {\n                    action.execute(node);\n                });\n            }\n        }\n    }\n\n    private setLoadingState(value: boolean) {\n        if (value) {\n            clearTimeout(this.loadingTimeout);\n            this.loadingTimeout = setTimeout(() => {\n                this.loading = true;\n            }, 1000);\n        } else {\n            clearTimeout(this.loadingTimeout);\n            this.loading = false;\n        }\n    }\n\n    loadFolder() {\n        if (!this._pagination.merge) {\n            this.setLoadingState(true);\n        }\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(this._currentFolderId);\n        }\n\n        if (this.documentListService.isCustomSourceService(this._currentFolderId)) {\n            this.updateCustomSourceData(this._currentFolderId);\n        }\n\n        this.documentListService.loadFolderByNodeId(this._currentFolderId, this._pagination, this.includeFields, this.where)\n            .subscribe((documentNode: DocumentLoaderNode) => {\n                if (documentNode.currentNode) {\n                    this.folderNode = documentNode.currentNode.entry;\n                    this.$folderNode.next(documentNode.currentNode.entry);\n                }\n                this.onPageLoaded(documentNode.children);\n            }, (err) => {\n                this.handleError(err);\n            });\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n        this.noPermission = false;\n    }\n\n    onPageLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.data.loadPage(nodePaging, this._pagination.merge);\n            this.setLoadingState(false);\n            this.onDataReady(nodePaging);\n        }\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: NodeEntry) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(nodeEntry: NodeEntry) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: nodeEntry\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(nodeEntry);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                this.executeActionClick(nodeEntry);\n            }\n        }\n\n    }\n\n    onNodeDblClick(nodeEntry: NodeEntry) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: nodeEntry\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(nodeEntry);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                this.executeActionClick(nodeEntry);\n            }\n        }\n    }\n\n    executeActionClick(nodeEntry: NodeEntry) {\n        if (nodeEntry && nodeEntry.entry) {\n            if (nodeEntry.entry.isFile) {\n                this.onPreviewFile(nodeEntry);\n            }\n\n            if (nodeEntry.entry.isFolder) {\n                this.navigateTo(nodeEntry.entry);\n            }\n\n            if (nodeEntry.entry['guid']) {\n                const options = {\n                    include: this.includeFields\n                };\n\n                this.alfrescoApiService.nodesApi.getNode(nodeEntry.entry['guid'], options)\n                    .then((node: NodeEntry) => {\n                        this.navigateTo(node.entry);\n                    });\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map((entry) => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map((entry) => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            const action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    canNavigateFolder(node: Node): boolean {\n        let canNavigateFolder: boolean = false;\n\n        if (node && node.isFolder) {\n            canNavigateFolder = true;\n        }\n\n        return canNavigateFolder;\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n    }\n\n    private onDataReady(nodePaging: NodePaging) {\n        this.ready.emit(nodePaging);\n        this.pagination.next(nodePaging.list.pagination);\n    }\n\n    updatePagination(requestPaginationModel: RequestPaginationModel) {\n        this._pagination.maxItems = requestPaginationModel.maxItems;\n        this._pagination.merge = requestPaginationModel.merge;\n        this._pagination.skipCount = requestPaginationModel.skipCount;\n        this.reload();\n    }\n\n    private resetNewFolderPagination() {\n        this._pagination.skipCount = 0;\n        this._pagination.maxItems = this.maxItems;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private handleError(err: any) {\n        if (err.message) {\n            try {\n                if (JSON.parse(err.message).error.statusCode === 403) {\n                    this.setLoadingState(false);\n                    this.noPermission = true;\n                }\n            } catch (error) {\n            }\n        }\n        this.error.emit(err);\n\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { Component } from '@angular/core';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            const columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Node, NodeEntry } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, ContentService, NodeDownloadDirective } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material';\n\nimport { DocumentListService } from './document-list.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeActionsService {\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private contentDialogService: ContentNodeDialogService,\n                public dialogRef: MatDialog,\n                public content: ContentService,\n                private documentListService?: DocumentListService,\n                private apiService?: AlfrescoApiService,\n                private dialog?: MatDialog) {}\n\n    downloadNode(node: NodeEntry) {\n        new NodeDownloadDirective(this.apiService, this.dialog)\n            .downloadNode(node);\n    }\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: Node, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        this.contentDialogService\n            .openCopyMoveDialog(action, contentEntry, permission)\n            .subscribe((selections: Node[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                    observable.next.bind(observable, `OPERATION.SUCCESS.${type.toUpperCase()}.${action.toUpperCase()}`),\n                    observable.error.bind(observable)\n                    );\n            },\n            (error) => {\n                observable.error(error);\n                return observable;\n            });\n        return observable;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private contentNodeDialogService: ContentNodeDialogService,\n                private translation: TranslationService,\n                private documentListService?: DocumentListService,\n                private contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler for an action.\n     * @param key Identifier of the action\n     * @returns The handler for the action\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            const lKey = key.toLowerCase();\n            return this.handlers[lKey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler for an action.\n     * @param key Identifier of the action\n     * @param handler Handler for the action\n     * @returns False if the key was an empty/null string, true otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            const lKey = key.toLowerCase();\n            this.handlers[lKey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if actions can be executed for an item.\n     * @param nodeEntry Item to receive an action\n     * @returns True if the action can be executed on this item, false otherwise\n     */\n    canExecuteAction(nodeEntry: NodeEntry): boolean {\n        return this.documentListService && nodeEntry && nodeEntry.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n        this.handlers['lock'] = this.lockNode.bind(this);\n    }\n\n    private lockNode(node: NodeEntry, target?: any, permission?: string) {\n        return this.contentNodeDialogService.openLockNodeDialog(node.entry);\n    }\n\n    private downloadNode(obj: NodeEntry, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(node: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(node: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: NodeEntry, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasAllowableOperations(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({\n                    type: 'content',\n                    action: 'delete',\n                    permission: permission\n                }));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: ContentService,\n                private translation: TranslationService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler function for an action.\n     * @param key Identifier for the action\n     * @returns The handler function\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            const lKey = key.toLowerCase();\n            return this.handlers[lKey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler function for an action.\n     * @param key Identifier for the action\n     * @param handler The new handler function\n     * @returns True if the key was a valid action identifier, false otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            const lKey = key.toLowerCase();\n            this.handlers[lKey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if an action is available for a particular item.\n     * @param nodeEntry Item to check\n     * @returns True if the action is available, false otherwise\n     */\n    canExecuteAction(nodeEntry: NodeEntry): boolean {\n        return this.documentListService && nodeEntry && nodeEntry.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n    }\n\n    private downloadNode(nodeEntry: NodeEntry) {\n        this.nodeActionsService.downloadNode(nodeEntry);\n    }\n\n    private copyNode(nodeEntry: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(nodeEntry.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(nodeEntry: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(nodeEntry.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: NodeEntry, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasAllowableOperations(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n\n                    const message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n\n    unregisterAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            const idx = this.documentList.actions.indexOf(action);\n            if (idx >= 0) {\n                this.documentList.actions.splice(idx, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel, ContentActionTarget } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** The title of the action as shown in the menu. */\n    @Input()\n    title: string = 'Action';\n\n    /** The name of the icon to display next to the menu command (can be left blank). */\n    @Input()\n    icon: string;\n\n    /** Visibility state (see examples). */\n    @Input()\n    visible: boolean | Function = true;\n\n    /** System actions. Can be \"delete\", \"download\", \"copy\" or \"move\". */\n    @Input()\n    handler: string;\n\n    /** Type of item that the action applies to. Can be \"document\" or \"folder\" */\n    @Input()\n    target: string = ContentActionTarget.All;\n\n    /** The permission type. */\n    @Input()\n    permission: string;\n\n    /** Should this action be disabled in the menu if the user doesn't have permission for it? */\n    @Input()\n    disableWithNoPermission: boolean;\n\n    /** Is the menu item disabled? */\n    @Input()\n    disabled: boolean | Function = false;\n\n    /** Emitted when the user selects the action from the menu. */\n    @Output()\n    execute = new EventEmitter();\n\n    /** Emitted when a permission error occurs */\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    /** Emitted when an error occurs during the action.\n     * Applies to copy and move actions.\n     */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the action succeeds with the success string message.\n     * Applies to copy, move and delete actions.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    documentActionModel: ContentActionModel;\n    folderActionModel: ContentActionModel;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n    }\n\n    ngOnInit() {\n        if (this.target === ContentActionTarget.All) {\n            this.folderActionModel = this.generateAction(ContentActionTarget.Folder);\n            this.documentActionModel = this.generateAction(ContentActionTarget.Document);\n        } else {\n            this.documentActionModel = this.generateAction(this.target);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.visible && !changes.visible.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.visible = changes.visible.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.visible = changes.visible.currentValue;\n            }\n        }\n\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.disabled = changes.disabled.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.disabled = changes.disabled.currentValue;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.documentActionModel) {\n            this.unregister(this.documentActionModel);\n            this.documentActionModel = null;\n        }\n\n        if (this.folderActionModel) {\n            this.unregister(this.folderActionModel);\n            this.folderActionModel = null;\n        }\n    }\n\n    register(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.registerAction(model);\n        }\n        return false;\n    }\n\n    unregister(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.unregisterAction(model);\n        }\n        return false;\n    }\n\n    private generateAction(target: string): ContentActionModel {\n        const model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: target,\n            disabled: this.disabled,\n            visible: this.visible\n        });\n        if (this.handler) {\n            model.handler = this.getSystemHandler(target, this.handler);\n        }\n\n        if (this.execute) {\n            model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register(model);\n        return model;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            target = target.toLowerCase();\n\n            if (target === ContentActionTarget.Document) {\n                if (this.documentActions) {\n                    this.subscriptions.push(\n                        this.documentActions.permissionEvent.subscribe((permission) => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.documentActions.error.subscribe((errors) => {\n                            this.error.emit(errors);\n                        }),\n                        this.documentActions.success.subscribe((message) => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (target === ContentActionTarget.Folder) {\n                if (this.folderActions) {\n                    this.subscriptions.push(\n                        this.folderActions.permissionEvent.subscribe((permission) => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.folderActions.error.subscribe((errors) => {\n                            this.error.emit(errors);\n                        }),\n                        this.folderActions.success.subscribe((message) => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnInit,\n    Input,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { NodeEntry, Node, Site } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'adf-library-name-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ displayTooltip$ | async }}\" (click)=\"onClick()\">\n            {{ displayText$ | async }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-datatable-content-cell adf-datatable-link adf-library-name-column'\n    }\n})\nexport class LibraryNameColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayTooltip$ = new BehaviorSubject<string>('');\n    displayText$ = new BehaviorSubject<string>('');\n    node: NodeEntry;\n\n    private sub: Subscription;\n\n    constructor(\n        private element: ElementRef,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe(\n            (node: Node) => {\n                const row: ShareDataRow = this.context.row;\n                if (row) {\n                    const { entry } = row.node;\n\n                    if (entry === node) {\n                        row.node = { entry };\n                        this.updateValue();\n                    }\n                }\n            }\n        );\n    }\n\n    protected updateValue() {\n        this.node = this.context.row.node;\n        const rows: Array<ShareDataRow> = this.context.data.rows || [];\n        if (this.node && this.node.entry) {\n            this.displayText$.next(\n                this.makeLibraryTitle(<any> this.node.entry, rows)\n            );\n            this.displayTooltip$.next(this.makeLibraryTooltip(this.node.entry));\n        }\n    }\n\n    onClick() {\n        this.element.nativeElement.dispatchEvent(\n            new CustomEvent('name-click', {\n                bubbles: true,\n                detail: {\n                    node: this.node\n                }\n            })\n        );\n    }\n\n    makeLibraryTooltip(library: any): string {\n        const { description, title } = library;\n\n        return description || title || '';\n    }\n\n    makeLibraryTitle(library: Site, rows: Array<ShareDataRow>): string {\n        const entries = rows.map((row: ShareDataRow) => row.node.entry);\n        const { title, id } = library;\n\n        let isDuplicate = false;\n\n        if (entries) {\n            isDuplicate = entries.some((entry: any) => {\n                return entry.id !== id && entry.title === title;\n            });\n        }\n\n        return isDuplicate ? `${title} (${id})` : `${title}`;\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    OnInit,\n    Input,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Node, SiteEntry, Site } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n    selector: 'adf-library-role-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ (displayText$ | async) | translate }}\">\n            {{ (displayText$ | async) | translate }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-library-role-column adf-datatable-content-cell' }\n})\nexport class LibraryRoleColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    private sub: Subscription;\n\n    constructor(private api: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.api.nodeUpdated.subscribe((node: Node) => {\n            const row: ShareDataRow = this.context.row;\n            if (row) {\n                const { entry } = row.node;\n\n                if (entry === node) {\n                    row.node = { entry };\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        const node: SiteEntry = this.context.row.node;\n        if (node && node.entry) {\n            const role: string = node.entry.role;\n            switch (role) {\n                case Site.RoleEnum.SiteManager:\n                    this.displayText$.next('LIBRARY.ROLE.MANAGER');\n                    break;\n                case Site.RoleEnum.SiteCollaborator:\n                    this.displayText$.next('LIBRARY.ROLE.COLLABORATOR');\n                    break;\n                case Site.RoleEnum.SiteContributor:\n                    this.displayText$.next('LIBRARY.ROLE.CONTRIBUTOR');\n                    break;\n                case Site.RoleEnum.SiteConsumer:\n                    this.displayText$.next('LIBRARY.ROLE.CONSUMER');\n                    break;\n                default:\n                    this.displayText$.next('');\n                    break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { Node, Site, SiteEntry } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n    selector: 'adf-library-status-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ (displayText$ | async) | translate }}\">\n            {{ (displayText$ | async) | translate }}\n        </span>\n    `,\n    host: { class: 'adf-library-status-column adf-datatable-content-cell' }\n})\nexport class LibraryStatusColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    private sub: Subscription;\n\n    constructor(private api: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.api.nodeUpdated.subscribe((node: Node) => {\n            const row: ShareDataRow = this.context.row;\n            if (row) {\n                const { entry } = row.node;\n\n                if (entry === node) {\n                    row.node = { entry };\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        const node: SiteEntry = this.context.row.node;\n        if (node && node.entry) {\n            const visibility: string = node.entry.visibility;\n\n            switch (visibility) {\n                case Site.VisibilityEnum.PUBLIC:\n                    this.displayText$.next('LIBRARY.VISIBILITY.PUBLIC');\n                    break;\n                case Site.VisibilityEnum.PRIVATE:\n                    this.displayText$.next('LIBRARY.VISIBILITY.PRIVATE');\n                    break;\n                case Site.VisibilityEnum.MODERATED:\n                    this.displayText$.next('LIBRARY.VISIBILITY.MODERATED');\n                    break;\n                default:\n                    this.displayText$.next('UNKNOWN');\n                    break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n    selector: 'adf-name-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ node | adfNodeNameTooltip }}\" (click)=\"onClick()\">\n            {{ displayText$ | async }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell adf-datatable-link adf-name-column' }\n})\nexport class NameColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n    node: NodeEntry;\n\n    private sub: Subscription;\n\n    constructor(private element: ElementRef, private alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe((node: Node) => {\n            const row: ShareDataRow = this.context.row;\n            if (row) {\n                const { entry } = row.node;\n\n                if (entry === node) {\n                    row.node = { entry };\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        this.node = this.context.row.node;\n\n        if (this.node && this.node.entry) {\n            this.displayText$.next(this.node.entry.name || this.node.entry.id);\n        }\n    }\n\n    onClick() {\n        this.element.nativeElement.dispatchEvent(\n            new CustomEvent('name-click', {\n                bubbles: true,\n                detail: {\n                    node: this.node\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnInit,\n  Input\n} from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n  selector: 'adf-trashcan-name-column',\n  template: `\n    <ng-container *ngIf=\"!isLibrary\">\n      <span class=\"adf-datatable-cell-value\" title=\"{{ node | adfNodeNameTooltip }}\">{{ displayText }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"isLibrary\">\n      <span class=\"adf-datatable-cell-value\" title=\"{{ displayTooltip }}\">{{ displayText }}</span>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'adf-datatable-content-cell adf-trashcan-name-column' }\n})\nexport class TrashcanNameColumnComponent implements OnInit {\n  @Input()\n  context: any;\n\n  isLibrary = false;\n  displayText: string;\n  displayTooltip: string;\n  node: NodeEntry;\n\n  ngOnInit() {\n    this.node = this.context.row.node;\n    const rows: Array<ShareDataRow> = this.context.data.rows || [];\n\n    if (this.node && this.node.entry) {\n      this.isLibrary = this.node.entry.nodeType === 'st:site';\n\n      if (this.isLibrary) {\n        const { properties } = this.node.entry;\n\n        this.displayText = this.makeLibraryTitle(this.node.entry, rows);\n        this.displayTooltip =\n          properties['cm:description'] || properties['cm:title'];\n      } else {\n        this.displayText = this.node.entry.name || this.node.entry.id;\n      }\n    }\n  }\n\n  makeLibraryTitle(library: any, rows: Array<ShareDataRow>): string {\n    const entries = rows.map((r: ShareDataRow) => r.node.entry);\n    const { id } = library;\n    const title = library.properties['cm:title'];\n\n    let isDuplicate = false;\n\n    if (entries) {\n      isDuplicate = entries.some((entry: any) => {\n        return entry.id !== id && entry.properties['cm:title'] === title;\n      });\n    }\n\n    return isDuplicate\n      ? `${library.properties['cm:title']} (${library.name})`\n      : `${library.properties['cm:title']}`;\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements NodeEntry {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements Node {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n    aspectNames: string[];\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum } from '@alfresco/adf-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: AllowableOperationsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: AllowableOperationsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n    FileUploadErrorEvent, FileUploadStatus, UploadService\n} from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription, merge } from 'rxjs';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\n\n@Component({\n    selector: 'adf-file-uploading-dialog',\n    templateUrl: './file-uploading-dialog.component.html',\n    styleUrls: ['./file-uploading-dialog.component.scss']\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    @ViewChild('uploadList')\n    uploadList: FileUploadingListComponent;\n\n    /** Dialog position. Can be 'left' or 'right'. */\n    @Input()\n    position: string = 'right';\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n\n    constructor(private uploadService: UploadService,\n                private changeDetector: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n            });\n\n        this.counterSubscription = merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent | FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetector.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetector.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetector.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                const file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetector.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confirmation\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetector.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetector.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    templateUrl: './file-uploading-list-row.component.html',\n    styleUrls: ['./file-uploading-list-row.component.scss']\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n\n    showCancelledStatus(): boolean {\n        return this.file.status === FileUploadStatus.Cancelled ||\n            this.file.status === FileUploadStatus.Aborted ||\n            this.file.status === FileUploadStatus.Deleted;\n    }\n\n    get versionNumber(): string {\n        return this.file.data.entry.properties['cm:versionLabel'];\n    }\n\n    get mimeType(): string {\n        if (this.file && this.file.file && this.file.file.type) {\n            return this.file.file.type;\n        }\n\n        return 'default';\n    }\n\n    isUploadVersion(): boolean {\n        return (\n            !!this.file.data &&\n            this.file.options &&\n            this.file.options.newVersion &&\n            this.file.data.entry.properties &&\n            this.file.data.entry.properties['cm:versionLabel']\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel,\n    FileUploadStatus,\n    NodesApiService,\n    TranslationService,\n    UploadService\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    TemplateRef,\n    EventEmitter\n} from '@angular/core';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    templateUrl: './file-uploading-list.component.html',\n    styleUrls: ['./file-uploading-list.component.scss']\n})\nexport class FileUploadingListComponent {\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private translateService: TranslationService\n    ) {}\n\n    /**\n     * Cancel file upload\n     *\n     * @param file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n\n    /**\n     * Remove uploaded file\n     *\n     * @param file File model to remove upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    removeFile(file: FileModel): void {\n        this.deleteNode(file).subscribe(() => {\n            if (file.status === FileUploadStatus.Error) {\n                this.notifyError(file);\n            }\n\n            this.cancelNodeVersionInstances(file);\n            this.uploadService.cancelUpload(file);\n        });\n    }\n\n    /**\n     * Call the appropriate method for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        this.getUploadingFiles().forEach((file) =>\n            this.uploadService.cancelUpload(file)\n        );\n\n        const deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        forkJoin(...deletedFiles).subscribe((files: FileModel[]) => {\n            const errors = files.filter(\n                (file) => file.status === FileUploadStatus.Error\n            );\n\n            if (errors.length) {\n                this.notifyError(...errors);\n            }\n\n            this.uploadService.cancelUpload(...files);\n        });\n    }\n\n    /**\n     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n        return (\n            !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files.some(\n                ({ status }) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n            )\n        );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return (\n            !!this.files.length &&\n            this.files.every(\n                ({ status }) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n            )\n        );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi.deleteNode(id, { permanent: true }).pipe(\n            map(() => {\n                file.status = FileUploadStatus.Deleted;\n                return file;\n            }),\n            catchError(() => {\n                file.status = FileUploadStatus.Error;\n                return of(file);\n            })\n        );\n    }\n\n    private cancelNodeVersionInstances(file) {\n        this.files\n            .filter(\n                (item) =>\n                    item.data.entry.id === file.data.entry.id &&\n                    item.options.newVersion\n            )\n            .map((item) => {\n                item.status = FileUploadStatus.Deleted;\n            });\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let messageError: string = null;\n\n        if (files.length === 1) {\n            messageError = this.translateService.instant(\n                'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                { fileName: files[0].name }\n            );\n        } else {\n            messageError = this.translateService.instant(\n                'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                { total: files.length }\n            );\n        }\n\n        this.error.emit(messageError);\n    }\n\n    private getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, UploadService } from '@alfresco/adf-core';\nimport { EventEmitter } from '@angular/core';\n\nexport class UploadFilesEvent {\n    private isDefaultPrevented: boolean = false;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n    constructor(\n        public files: Array<FileModel>,\n        private uploadService: UploadService,\n        private callback: EventEmitter<any>\n    ) {}\n\n    pauseUpload() {\n        this.preventDefault();\n    }\n\n    resumeUpload() {\n        if (this.files && this.files.length > 0) {\n            this.uploadService.addToQueue(...this.files);\n            this.uploadService.uploadFilesInTheQueue(this.callback);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileInfo } from '@alfresco/adf-core';\nimport { EventEmitter, Input, Output, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { UploadService, TranslationService } from '@alfresco/adf-core';\nimport { Subscription } from 'rxjs';\nimport { UploadFilesEvent } from '../upload-files.event';\n\nexport abstract class UploadBase implements OnInit, OnDestroy {\n\n    /** Sets a limit on the maximum size (in bytes) of a file to be uploaded.\n     * Has no effect if undefined.\n     */\n    @Input()\n    maxFilesSize: number;\n\n    /** The ID of the root. Use the nodeId for\n     * Content Services or the taskId/processId for Process Services.\n     */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    /** Toggles component disabled state (if there is no node permission checking). */\n    @Input()\n    disabled: boolean = false;\n\n    /** Filter for accepted file types. */\n    @Input()\n    acceptedFilesType: string = '*';\n\n    /** Toggles versioning. */\n    @Input()\n    versioning: boolean = false;\n\n    /** majorVersion boolean field to true to indicate a major version should be created. */\n    @Input()\n    majorVersion: boolean = false;\n\n    /** When you overwrite existing content, you can use the comment field to add a version comment that appears in the version history */\n    @Input()\n    comment: string;\n\n    /** Custom node type for uploaded file */\n    @Input()\n    nodeType: string = 'cm:content';\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the upload begins. */\n    @Output()\n    beginUpload = new EventEmitter<UploadFilesEvent>();\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                protected ngZone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.uploadService.fileUploadError.subscribe((error) => {\n                this.error.emit(error);\n            })\n        );\n\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     * @param path\n     */\n    uploadFiles(files: File[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((file: File) => {\n                return this.createFileModel(file, this.rootFolderId, ((<any> file).webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''));\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    uploadFilesInfo(files: FileInfo[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((fileInfo: FileInfo) => {\n                return this.createFileModel(fileInfo.file, this.rootFolderId, fileInfo.relativeFolder);\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    private uploadQueue(files: FileModel[]) {\n        const filteredFiles = files\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        this.ngZone.run(() => {\n            const event = new UploadFilesEvent(\n                [...filteredFiles],\n                this.uploadService,\n                this.success\n            );\n            this.beginUpload.emit(event);\n\n            if (!event.defaultPrevented) {\n                if (filteredFiles.length > 0) {\n                    this.uploadService.addToQueue(...filteredFiles);\n                    this.uploadService.uploadFilesInTheQueue(this.success);\n                }\n            }\n        });\n    }\n\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    protected isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map((ext) => ext.trim().replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     */\n    protected createFileModel(file: File, parentId: string, path: string, id?: string): FileModel {\n        return new FileModel(file, {\n            comment: this.comment,\n            majorVersion: this.majorVersion,\n            newVersion: this.versioning,\n            parentId: parentId,\n            path: path,\n            nodeType: this.nodeType\n        }, id);\n    }\n\n    protected isFileSizeAllowed(file: FileModel) {\n        let isFileSizeAllowed = true;\n        if (this.isMaxFileSizeDefined()) {\n            isFileSizeAllowed = this.isFileSizeCorrect(file);\n        }\n\n        return isFileSizeAllowed;\n    }\n\n    protected isMaxFileSizeDefined() {\n        return this.maxFilesSize !== undefined && this.maxFilesSize !== null;\n    }\n\n    protected isFileSizeCorrect(file: FileModel) {\n        return this.maxFilesSize >= 0 && file.size <= this.maxFilesSize;\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if (!this.isFileSizeAllowed(file)) {\n            acceptableSize = false;\n\n            const message = this.translationService.instant(\n                'FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE',\n                { fileName: file.name }\n            );\n\n            this.error.emit(message);\n        }\n\n        return acceptableSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentService, EXTENDIBLE_COMPONENT, FileUtils,\n    LogService, NodeAllowableOperationSubject, TranslationService, UploadService, AllowableOperationsEnum\n} from '@alfresco/adf-core';\nimport {\n    Component, EventEmitter, forwardRef, Input,\n    OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation, NgZone\n} from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent extends UploadBase implements OnInit, OnChanges, NodeAllowableOperationSubject {\n\n    /** Allows/disallows upload folders (only for Chrome). */\n    @Input()\n    uploadFolders: boolean = false;\n\n    /** Allows/disallows multiple files */\n    @Input()\n    multipleFiles: boolean = false;\n\n    /** Defines the text of the upload button. */\n    @Input()\n    staticTitle: string;\n\n    /** Custom tooltip text. */\n    @Input()\n    tooltip: string = null;\n\n    /** Emitted when create permission is missing. */\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasAllowableOperations: boolean = false;\n\n    protected permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(protected uploadService: UploadService,\n                private contentService: ContentService,\n                protected translationService: TranslationService,\n                protected logService: LogService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasAllowableOperations = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        const files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasAllowableOperations) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasAllowableOperations) {\n            const files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            const opts: any = {\n                includeSource: true,\n                include: ['allowableOperations']\n            };\n\n            this.contentService.getNode(this.rootFolderId, opts).subscribe(\n                (res) => this.permissionValue.next(this.nodeHasPermission(res.entry, AllowableOperationsEnum.CREATE)),\n                (error) => this.error.emit(error)\n            );\n        }\n    }\n\n    nodeHasPermission(node: Node, permission: AllowableOperationsEnum | string): boolean {\n        return this.contentService.hasAllowableOperations(node, permission);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum  } from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, OnChanges, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { UploadButtonComponent } from './upload-button.component';\nimport { FileModel, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-upload-version-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadVersionButtonComponent extends UploadButtonComponent implements OnChanges, OnInit {\n\n    /** (**Required**) The node to be versioned. */\n    @Input()\n    node: Node;\n\n    protected createFileModel(file: File): FileModel {\n        const fileModel = super.createFileModel(file, this.rootFolderId, ((<any> file).webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''), this.node.id);\n\n        if (!this.isFileAcceptable(fileModel)) {\n            const message = this.translationService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');\n            this.error.emit(message);\n        }\n\n        return fileModel;\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.checkPermission();\n    }\n\n    checkPermission() {\n        this.permissionValue.next(this.nodeHasPermission(this.node, AllowableOperationsEnum.UPDATE));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    EXTENDIBLE_COMPONENT, FileInfo, FileModel, FileUtils, NodeAllowableOperationSubject,\n    NotificationService, TranslationService, UploadService, ContentService, AllowableOperationsEnum\n} from '@alfresco/adf-core';\nimport { Component, forwardRef, ViewEncapsulation, NgZone } from '@angular/core';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    templateUrl: './upload-drag-area.component.html',\n    styleUrls: ['./upload-drag-area.component.scss'],\n    host: { 'class': 'adf-upload-drag-area' },\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent extends UploadBase implements NodeAllowableOperationSubject {\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                private notificationService: NotificationService,\n                private contentService: ContentService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            this.uploadFiles(files);\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flatten(folder).then((filesInfo) => {\n                this.uploadFilesInfo(filesInfo);\n            });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translationService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translationService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        const isAllowed: boolean = this.contentService.hasAllowableOperations(event.detail.data.obj.entry, AllowableOperationsEnum.CREATE);\n        if (isAllowed) {\n            const fileInfo: FileInfo[] = event.detail.files;\n            if (this.isTargetNodeFolder(event)) {\n                const destinationFolderName = event.detail.data.obj.entry.name;\n                fileInfo.map((file) => file.relativeFolder = destinationFolderName ? destinationFolderName.concat(file.relativeFolder) : file.relativeFolder);\n            }\n            if (fileInfo && fileInfo.length > 0) {\n                this.uploadFilesInfo(fileInfo);\n            }\n        }\n    }\n\n    private isTargetNodeFolder(event: CustomEvent): boolean {\n        return event.detail.data.obj && event.detail.data.obj.entry.isFolder;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '@alfresco/adf-core';\n\n@Pipe({\n    name: 'adfFileUploadError',\n    pure: true\n})\nexport class FileUploadErrorPipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(errorCode: number): string {\n        return this.translation.instant(`FILE_UPLOAD.ERRORS.${errorCode || 'GENERIC'}`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    /** Enables/disables drag-and-drop functionality. */\n    @Input('adf-file-draggable')\n    enabled: boolean = true;\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Emitted when a directory is dragged and dropped onto the draggable element. */\n    @Output()\n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    private cssClassName: string = 'adf-file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            // Chrome, Edge, Firefox, Opera (Files + Folders)\n            const items = event.dataTransfer.items;\n            if (items) {\n                const files: File[] = [];\n\n                for (let i = 0; i < items.length; i++) {\n                    if (items[i].webkitGetAsEntry) {\n                        const item = items[i].webkitGetAsEntry();\n\n                        if (item) {\n                            if (item.isFile) {\n                                const file = items[i].getAsFile();\n\n                                if (file) {\n                                    files.push(file);\n                                }\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    }\n                }\n                if (files.length > 0) {\n                    this.filesDropped.emit(files);\n                }\n            } else {\n                // IE, Safari, Chrome, Edge, Firefox, Opera (Files only)\n                const files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param event - DOM event.\n     */\n    onDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadVersionButtonComponent } from './components/upload-version-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\nimport { FileUploadErrorPipe } from './pipes/file-upload-error.pipe';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent,\n        FileUploadErrorPipe\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent,\n        FileUploadErrorPipe\n    ]\n})\nexport class UploadModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { TrashcanNameColumnComponent } from './components/trashcan-name-column/trashcan-name-column.component';\nimport { LibraryStatusColumnComponent } from './components/library-status-column/library-status-column.component';\nimport { LibraryRoleColumnComponent } from './components/library-role-column/library-role-column.component';\nimport { LibraryNameColumnComponent } from './components/library-name-column/library-name-column.component';\nimport { NameColumnComponent } from './components/name-column/name-column.component';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent\n    ],\n    entryComponents: [\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent\n    ]\n})\nexport class DocumentListModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport {\n    QueryBody,\n    RequestFacetFields,\n    RequestFacetField,\n    RequestSortDefinitionInner,\n    ResultSetPaging,\n    RequestHighlight\n} from '@alfresco/js-api';\nimport { SearchCategory } from './search-category.interface';\nimport { FilterQuery } from './filter-query.interface';\nimport { SearchRange } from './search-range.interface';\nimport { SearchConfiguration } from './search-configuration.interface';\nimport { FacetQuery } from './facet-query.interface';\nimport { SearchSortingDefinition } from './search-sorting-definition.interface';\nimport { FacetField } from './facet-field.interface';\nimport { FacetFieldBucket } from './facet-field-bucket.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchQueryBuilderService {\n\n    private _userQuery = '';\n\n    updated = new Subject<QueryBody>();\n    executed = new Subject<ResultSetPaging>();\n    error = new Subject();\n\n    categories: Array<SearchCategory> = [];\n    queryFragments: { [id: string]: string } = {};\n    filterQueries: FilterQuery[] = [];\n    paging: { maxItems?: number; skipCount?: number } = null;\n    sorting: Array<SearchSortingDefinition> = [];\n\n    protected userFacetBuckets: { [key: string]: Array<FacetFieldBucket> } = {};\n\n    get userQuery(): string {\n        return this._userQuery;\n    }\n\n    set userQuery(value: string) {\n        value = (value || '').trim();\n        this._userQuery = value ? `(${value})` : '';\n    }\n\n    config: SearchConfiguration = {\n        categories: []\n    };\n\n    // TODO: to be supported in future iterations\n    ranges: { [id: string]: SearchRange } = {};\n\n    constructor(private appConfig: AppConfigService, private alfrescoApiService: AlfrescoApiService) {\n        this.resetToDefaults();\n    }\n\n    /**\n     * Resets the query to the defaults specified in the app config.\n     */\n    resetToDefaults() {\n        const template = this.appConfig.get<SearchConfiguration>('search');\n        if (template) {\n            this.config = JSON.parse(JSON.stringify(template));\n            this.categories = (this.config.categories || []).filter((category) => category.enabled);\n            this.filterQueries = this.config.filterQueries || [];\n            this.userFacetBuckets = {};\n            if (this.config.sorting) {\n                this.sorting = this.config.sorting.defaults || [];\n            }\n        }\n    }\n\n    /**\n     * Adds a facet bucket to a field.\n     * @param field The target field\n     * @param bucket Bucket to add\n     */\n    addUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            const existing = buckets.find((facetBucket) => facetBucket.label === bucket.label);\n            if (!existing) {\n                buckets.push(bucket);\n            }\n            this.userFacetBuckets[field.field] = buckets;\n        }\n    }\n\n    /**\n     * Gets the buckets currently added to a field\n     * @param field The target fields\n     * @returns Bucket array\n     */\n    getUserFacetBuckets(field: string) {\n        return this.userFacetBuckets[field] || [];\n    }\n\n    /**\n     * Removes an existing bucket from a field.\n     * @param field The target field\n     * @param bucket Bucket to remove\n     */\n    removeUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            this.userFacetBuckets[field.field] = buckets\n                .filter((facetBucket) => facetBucket.label !== bucket.label);\n        }\n    }\n\n    /**\n     * Adds a filter query to the current query.\n     * @param query Query string to add\n     */\n    addFilterQuery(query: string): void {\n        if (query) {\n            const existing = this.filterQueries.find((filterQuery) => filterQuery.query === query);\n            if (!existing) {\n                this.filterQueries.push({ query: query });\n            }\n        }\n    }\n\n    /**\n     * Removes an existing filter query.\n     * @param query The query to remove\n     */\n    removeFilterQuery(query: string): void {\n        if (query) {\n            this.filterQueries = this.filterQueries\n                .filter((filterQuery) => filterQuery.query !== query);\n        }\n    }\n\n    /**\n     * Gets a facet query by label.\n     * @param label Label of the query\n     * @returns Facet query data\n     */\n    getFacetQuery(label: string): FacetQuery {\n        if (label && this.hasFacetQueries) {\n            const result = this.config.facetQueries.queries.find((query) => query.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Gets a facet field by label.\n     * @param label Label of the facet field\n     * @returns Facet field data\n     */\n    getFacetField(label: string): FacetField {\n        if (label) {\n            const fields = this.config.facetFields.fields || [];\n            const result = fields.find((field) => field.label === label);\n            if (result) {\n                result.label = this.getSupportedLabel(result.label);\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Builds the current query and triggers the `updated` event.\n     */\n    update(): void {\n        const query = this.buildQuery();\n        this.updated.next(query);\n    }\n\n    /**\n     * Builds and executes the current query.\n     * @returns Nothing\n     */\n    async execute() {\n        try {\n            const query = this.buildQuery();\n            if (query) {\n                const resultSetPaging: ResultSetPaging = await this.alfrescoApiService.searchApi.search(query);\n                this.executed.next(resultSetPaging);\n            }\n        } catch (error) {\n            this.error.next(error);\n\n            this.executed.next({\n                list: {\n                    pagination: {\n                        totalItems: 0\n                    },\n                    entries: []\n                }\n            });\n        }\n    }\n\n    /**\n     * Builds the current query.\n     * @returns The finished query\n     */\n    buildQuery(): QueryBody {\n        const query = this.getFinalQuery();\n\n        const include = this.config.include || [];\n        if (include.length === 0) {\n            include.push('path', 'allowableOperations');\n        }\n\n        if (query) {\n            const result: QueryBody = <QueryBody> {\n                query: {\n                    query: query,\n                    language: 'afts'\n                },\n                include: include,\n                paging: this.paging,\n                fields: this.config.fields,\n                filterQueries: this.filterQueries,\n                facetQueries: this.facetQueries,\n                facetIntervals: this.facetIntervals,\n                facetFields: this.facetFields,\n                sort: this.sort,\n                highlight: this.highlight\n            };\n\n            result['facetFormat'] = 'V2';\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets the primary sorting definition.\n     * @returns The primary sorting definition\n     */\n    getPrimarySorting(): SearchSortingDefinition {\n        if (this.sorting && this.sorting.length > 0) {\n            return this.sorting[0];\n        }\n        return null;\n    }\n\n    /**\n     * Gets all pre-configured sorting options that users can choose from.\n     * @returns Pre-configured sorting options\n     */\n    getSortingOptions(): SearchSortingDefinition[] {\n        if (this.config && this.config.sorting) {\n            return this.config.sorting.options || [];\n        }\n        return [];\n    }\n\n    /**\n     * Gets the query group.\n     * @param query Target query\n     * @returns Query group\n     */\n    getQueryGroup(query) {\n        return query.group || this.config.facetQueries.label || 'Facet Queries';\n    }\n\n    /**\n     * Checks if FacetQueries has been defined\n     * @returns True if defined, false otherwise\n     */\n    get hasFacetQueries(): boolean {\n        if (this.config\n            && this.config.facetQueries\n            && this.config.facetQueries.queries\n            && this.config.facetQueries.queries.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if FacetIntervals has been defined\n     * @returns True if defined, false otherwise\n     */\n    get hasFacetIntervals(): boolean {\n        if (this.config\n            && this.config.facetIntervals\n            && this.config.facetIntervals.intervals\n            && this.config.facetIntervals.intervals.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    get hasFacetHighlight(): boolean {\n        return this.config && this.config.highlight ? true : false;\n    }\n\n    protected get sort(): RequestSortDefinitionInner[] {\n        return this.sorting.map((def) => {\n            return new RequestSortDefinitionInner({\n                type: def.type,\n                field: def.field,\n                ascending: def.ascending\n            });\n        });\n    }\n\n    protected get facetQueries(): FacetQuery[] {\n        if (this.hasFacetQueries) {\n            return this.config.facetQueries.queries.map((query) => {\n                query.group = this.getQueryGroup(query);\n                return <FacetQuery> { ...query };\n            });\n        }\n\n        return null;\n    }\n\n    protected get facetIntervals(): any {\n        if (this.hasFacetIntervals) {\n            const configIntervals = this.config.facetIntervals;\n\n            return {\n                intervals: configIntervals.intervals.map((interval) => <any> {\n                    label: this.getSupportedLabel(interval.label),\n                    field: interval.field,\n                    sets: interval.sets.map((set) => <any> {\n                        label: this.getSupportedLabel(set.label),\n                        start: set.start,\n                        end: set.end,\n                        startInclusive: set.startInclusive,\n                        endInclusive: set.endInclusive\n                    })\n                })\n            };\n        }\n\n        return null;\n    }\n\n    protected get highlight(): RequestHighlight {\n        return this.hasFacetHighlight ? this.config.highlight : null;\n    }\n\n    protected getFinalQuery(): string {\n        let query = '';\n\n        this.categories.forEach((facet) => {\n            const customQuery = this.queryFragments[facet.id];\n            if (customQuery) {\n                if (query.length > 0) {\n                    query += ' AND ';\n                }\n                query += `(${customQuery})`;\n            }\n        });\n\n        let result = [this.userQuery, query]\n            .filter((entry) => entry)\n            .join(' AND ');\n\n        if (this.userFacetBuckets) {\n            Object.keys(this.userFacetBuckets).forEach((key) => {\n                const subQuery = (this.userFacetBuckets[key] || [])\n                    .filter((bucket) => bucket.filterQuery)\n                    .map((bucket) => bucket.filterQuery)\n                    .join(' OR ');\n                if (subQuery) {\n                    if (result.length > 0) {\n                        result += ' AND ';\n                    }\n                    result += `(${subQuery})`;\n                }\n            });\n        }\n\n        return result;\n    }\n\n    protected get facetFields(): RequestFacetFields {\n        const facetFields = this.config.facetFields && this.config.facetFields.fields;\n\n        if (facetFields && facetFields.length > 0) {\n            return {\n                facets: facetFields.map((facet) => <RequestFacetField> {\n                    field: facet.field,\n                    mincount: facet.mincount,\n                    label: this.getSupportedLabel(facet.label),\n                    limit: facet.limit,\n                    offset: facet.offset,\n                    prefix: facet.prefix\n                })\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Encloses a label name with double quotes if it contains whitespace characters.\n     * @param configLabel Original label text\n     * @returns Label, possibly with quotes if it contains spaces\n     */\n    getSupportedLabel(configLabel: string): string {\n        const spaceInsideLabelIndex = configLabel.search(/\\s/g);\n        if (spaceInsideLabelIndex > -1) {\n            return `\"${configLabel}\"`;\n        }\n        return configLabel;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n})\nexport class SearchComponent implements AfterContentInit, OnChanges {\n\n    @ViewChild('panel')\n    panel: ElementRef;\n\n    @ContentChild(TemplateRef)\n    template: TemplateRef<any>;\n\n    /** Function that maps an option's value to its display value in the trigger. */\n    @Input()\n    displayWith: ((value: any) => string) | null = null;\n\n    /** Maximum number of results to show in the search. */\n    @Input()\n    maxResults: number = 20;\n\n    /** Number of results to skip from the results pagination. */\n    @Input()\n    skipResults: number = 0;\n\n    /** Search term to use when executing the search. Updating this value will\n     * run a new search and update the results.\n     */\n    @Input()\n    searchTerm: string = '';\n\n    /** CSS class for display. */\n    @Input('class')\n    set classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach((className) => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Emitted when search results have fully loaded. */\n    @Output()\n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n\n    keyPressedStream: Subject<string> = new Subject();\n\n    _classList: { [key: string]: boolean } = {};\n\n    constructor(private searchService: SearchService,\n                private _elementRef: ElementRef) {\n        this.keyPressedStream.asObservable()\n            .pipe(\n                debounceTime(200)\n            )\n            .subscribe((searchedWord: string) => {\n                this.loadSearchResults(searchedWord);\n            });\n\n        searchService.dataLoaded.subscribe(\n            (nodePaging: NodePaging) => this.onSearchDataLoaded(nodePaging),\n            (error) => this.onSearchDataError(error)\n        );\n    }\n\n    ngAfterContentInit() {\n        this.setVisibility();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    resetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n\n    reload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n\n    private cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n\n    private loadSearchResults(searchTerm?: string) {\n        this.resetResults();\n        if (searchTerm) {\n            this.searchService.search(searchTerm, this.maxResults, this.skipResults).subscribe(\n                (result) => this.onSearchDataLoaded(result),\n                (err) => this.onSearchDataError(err)\n            );\n        } else {\n            this.cleanResults();\n        }\n    }\n\n    onSearchDataLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.results = nodePaging;\n            this.resultLoaded.emit(this.results);\n            this.isOpen = true;\n            this.setVisibility();\n        }\n    }\n\n    onSearchDataError(error) {\n        if (error && error.status !== 400) {\n            this.results = null;\n            this.error.emit(error);\n        }\n    }\n\n    hidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n        }\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-search-result',\n    templateUrl: './empty-search-result.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptySearchResultComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationService, ThumbnailService } from '@alfresco/adf-core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, ElementRef, TemplateRef, ContentChild } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material';\nimport { EmptySearchResultComponent } from './empty-search-result.component';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-control',\n    templateUrl: './search-control.component.html',\n    styleUrls: ['./search-control.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({ transform: 'translateX(0%)', 'margin-left': '13px' })),\n            state('inactive', style({ transform: 'translateX(82%)'})),\n            state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n})\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    /** Toggles whether to use an expanding search control. If false\n     * then a regular input is used.\n     */\n    @Input()\n    expandable: boolean = true;\n\n    /** Toggles highlighting of the search term in the results. */\n    @Input()\n    highlight: boolean = false;\n\n    /** Type of the input field to render, e.g. \"search\" or \"text\" (default). */\n    @Input()\n    inputType: string = 'text';\n\n    /** Toggles auto-completion of the search input field. */\n    @Input()\n    autocomplete: boolean = false;\n\n    /** Toggles \"find-as-you-type\" suggestions for possible matches. */\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    /** Maximum number of results to show in the live search. */\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    /** Emitted when the search is submitted by pressing the ENTER key.\n     * The search term is provided as the value of the event.\n     */\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the search term is changed. The search term is provided\n     * in the 'value' property of the returned object.  If the term is less\n     * than three characters in length then it is truncated to an empty\n     * string.\n     */\n    @Output()\n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    /** Emitted when a file item from the list of \"find-as-you-type\" results is selected. */\n    @Output()\n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('search')\n    searchAutocomplete: SearchComponent;\n\n    @ViewChild('searchInput')\n    searchInput: ElementRef;\n\n    @ViewChildren(MatListItem)\n    private listResultElement: QueryList<MatListItem>;\n\n    @ContentChild(EmptySearchResultComponent)\n    emptySearchTemplate: EmptySearchResultComponent;\n\n    searchTerm: string = '';\n    subscriptAnimationState: string;\n    noSearchResultTemplate: TemplateRef <any> = null;\n\n    private toggleSearch = new Subject<any>();\n    private focusSubject = new Subject<FocusEvent>();\n\n    constructor(public authService: AuthenticationService,\n                private thumbnailService: ThumbnailService) {\n\n        this.toggleSearch.asObservable().pipe(debounceTime(200)).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                    this.searchAutocomplete.resetResults();\n                    if ( document.activeElement.id === this.searchInput.nativeElement.id) {\n                        this.searchInput.nativeElement.blur();\n                    }\n                }\n            }\n        });\n    }\n\n    applySearchFocus(animationDoneEvent) {\n        if (animationDoneEvent.toState === 'active') {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n        this.setupFocusEventHandlers();\n    }\n\n    isNoSearchTemplatePresent(): boolean {\n        return this.emptySearchTemplate ? true : false;\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusSubject) {\n            this.focusSubject.complete();\n            this.focusSubject = null;\n        }\n\n        if (this.toggleSearch) {\n            this.toggleSearch.complete();\n            this.toggleSearch = null;\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n\n    searchSubmit(event: any) {\n        this.submit.emit(event);\n        this.toggleSearchBar();\n    }\n\n    inputChange(event: any) {\n        this.searchChange.emit(event);\n    }\n\n    getAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n\n    getMimeTypeIcon(node: NodeEntry): string {\n        const mimeType = this.getMimeType(node);\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    getMimeType(node: NodeEntry): string {\n        let mimeType: string;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n        return mimeType;\n    }\n\n    isSearchBarActive() {\n        return this.subscriptAnimationState === 'active' && this.liveSearchEnabled;\n    }\n\n    toggleSearchBar() {\n        if (this.toggleSearch) {\n            this.toggleSearch.next();\n        }\n    }\n\n    elementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.toggleSearchBar();\n        }\n    }\n\n    onFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onBlur($event): void {\n        this.focusSubject.next($event);\n    }\n\n    activateToolbar() {\n        if (!this.isSearchBarActive()) {\n            this.toggleSearchBar();\n        }\n    }\n\n    selectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            const firstElement: MatListItem = <MatListItem> this.listResultElement.first;\n            firstElement._getHostElement().focus();\n        }\n    }\n\n    onRowArrowDown($event: KeyboardEvent): void {\n        const nextElement: any = this.getNextElementSibling(<Element> $event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp($event: KeyboardEvent): void {\n        const previousElement: any = this.getPreviousElementSibling(<Element> $event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.searchInput.nativeElement.focus();\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n\n    private setupFocusEventHandlers() {\n        const focusEvents: Observable<FocusEvent> = this.focusSubject\n            .asObservable()\n            .pipe(\n                debounceTime(50),\n                filter(($event: any) => {\n                    return this.isSearchBarActive() && ($event.type === 'blur' || $event.type === 'focusout');\n                })\n            );\n\n        focusEvents.subscribe(() => {\n            this.toggleSearchBar();\n        });\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable: no-input-rename no-use-before-declare no-input-rename  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, Subject, Subscription, merge, of, fromEvent } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\n\nexport const SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SearchTriggerDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: `input[searchAutocomplete], textarea[searchAutocomplete]`,\n    host: {\n        'role': 'combobox',\n        '[attr.autocomplete]': 'autocomplete',\n        'aria-autocomplete': 'list',\n        '[attr.aria-expanded]': 'panelOpen.toString()',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    providers: [SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {\n    private onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n    @Input('searchAutocomplete')\n    searchPanel: SearchComponent;\n\n    @Input()\n    autocomplete: string = 'off';\n\n    private _panelOpen: boolean = false;\n    private closingActionsSubscription: Subscription;\n    private escapeEventStream = new Subject<void>();\n\n    onChange: (value: any) => void = () => { };\n\n    onTouched = () => { };\n\n    constructor(private element: ElementRef,\n                private ngZone: NgZone,\n                private changeDetectorRef: ChangeDetectorRef,\n                @Optional() @Inject(DOCUMENT) private document: any) { }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n\n        if (this.escapeEventStream) {\n            this.escapeEventStream = null;\n        }\n        if ( this.closingActionsSubscription ) {\n            this.closingActionsSubscription.unsubscribe();\n        }\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen && this.searchPanel.showPanel;\n    }\n\n    openPanel(): void {\n        this.searchPanel.isOpen = this._panelOpen = true;\n        this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n\n    closePanel(): void {\n        if (this._panelOpen) {\n            this.closingActionsSubscription.unsubscribe();\n            this._panelOpen = false;\n            this.searchPanel.resetResults();\n            this.searchPanel.hidePanel();\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    get panelClosingActions(): Observable<any> {\n        return merge(\n            this.escapeEventStream,\n            this.outsideClickStream\n        );\n    }\n\n    private get outsideClickStream(): Observable<any> {\n        if (!this.document) {\n            return of(null);\n        }\n\n        return merge(\n            fromEvent(this.document, 'click'),\n            fromEvent(this.document, 'touchend')\n        ).pipe(\n            filter((event: MouseEvent | TouchEvent) => {\n                const clickTarget = event.target as HTMLElement;\n                return this._panelOpen && clickTarget !== this.element.nativeElement;\n            }),\n            takeUntil(this.onDestroy$)\n        );\n    }\n\n    writeValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n\n    registerOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this.escapeEventStream.next();\n            event.stopPropagation();\n        } else if (keyCode === ENTER) {\n            this.escapeEventStream.next();\n            event.preventDefault();\n        }\n\n    }\n\n    handleInput(event: KeyboardEvent): void {\n        if (document.activeElement === event.target) {\n            const inputValue: string = (event.target as HTMLInputElement).value;\n            this.onChange(inputValue);\n            if (inputValue) {\n                this.searchPanel.keyPressedStream.next(inputValue);\n                this.openPanel();\n            } else {\n                this.searchPanel.resetResults();\n                this.closePanel();\n            }\n        }\n    }\n\n    private isPanelOptionClicked(event: MouseEvent) {\n        let isPanelOption: boolean = false;\n        if ( event ) {\n            const clickTarget = event.target as HTMLElement;\n            isPanelOption = !this.isNoResultOption(event) &&\n                            !!this.searchPanel.panel &&\n                            !!this.searchPanel.panel.nativeElement.contains(clickTarget);\n        }\n        return isPanelOption;\n    }\n\n    private isNoResultOption(event: MouseEvent) {\n        return this.searchPanel.results.list ? this.searchPanel.results.list.entries.length === 0 : true;\n    }\n\n    private subscribeToClosingActions(): Subscription {\n        const firstStable = this.ngZone.onStable.asObservable();\n        const optionChanges = this.searchPanel.keyPressedStream.asObservable();\n\n        return merge(firstStable, optionChanges)\n            .pipe(\n                switchMap(() => {\n                    this.searchPanel.setVisibility();\n                    return this.panelClosingActions;\n                }),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe((event) => this.setValueAndClose(event));\n    }\n\n    private setTriggerValue(value: any): void {\n        const toDisplay = this.searchPanel && this.searchPanel.displayWith ?\n            this.searchPanel.displayWith(value) : value;\n        const inputValue = toDisplay != null ? toDisplay : '';\n        this.element.nativeElement.value = inputValue;\n    }\n\n    private setValueAndClose(event: any | null): void {\n        if (this.isPanelOptionClicked(event) && !event.defaultPrevented) {\n            this.setTriggerValue(event.target.textContent.trim());\n            this.onChange(event.target.textContent.trim());\n            this.element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport class SearchFilterList<T> implements Iterable<T> {\n\n    private filteredItems: T[] = [];\n    private _filterText: string = '';\n\n    items: T[] = [];\n    pageSize: number = DEFAULT_PAGE_SIZE;\n    currentPageSize: number = DEFAULT_PAGE_SIZE;\n\n    get filterText(): string {\n        return this._filterText;\n    }\n\n    set filterText(value: string) {\n        this._filterText = value;\n        this.applyFilter();\n    }\n\n    private _filter: (item: T) => boolean = () => true;\n\n    get filter(): (item: T) => boolean {\n        return this._filter;\n    }\n\n    set filter(value: (item: T) => boolean ) {\n        this._filter = value;\n        this.applyFilter();\n    }\n\n    private applyFilter() {\n        if (this.filter) {\n            this.filteredItems = this.items.filter(this.filter);\n        } else {\n            this.filteredItems = this.items;\n        }\n        this.currentPageSize = this.pageSize;\n    }\n\n    /** Returns visible portion of the items.  */\n    get visibleItems(): T[] {\n        return this.filteredItems.slice(0, this.currentPageSize);\n    }\n\n    /** Returns entire collection length including items not displayed on the page. */\n    get length(): number {\n        return this.items.length;\n    }\n\n    /** Detects whether more items can be displayed. */\n    get canShowMoreItems(): boolean {\n        return this.filteredItems.length > this.currentPageSize;\n    }\n\n    /** Detects whether less items can be displayed. */\n    get canShowLessItems(): boolean {\n        return this.currentPageSize > this.pageSize;\n    }\n\n    /** Detects whether content fits single page. */\n    get fitsPage(): boolean {\n        return this.pageSize >= this.filteredItems.length;\n    }\n\n    constructor(items: T[] = [], pageSize?: number) {\n        this.items = items;\n        this.filteredItems = items;\n        this.pageSize = pageSize || DEFAULT_PAGE_SIZE;\n        this.currentPageSize = pageSize || DEFAULT_PAGE_SIZE;\n    }\n\n    /** Display more items. */\n    showMoreItems() {\n        if (this.canShowMoreItems) {\n            this.currentPageSize += this.pageSize;\n        }\n    }\n\n    /** Display less items. */\n    showLessItems() {\n        if (this.canShowLessItems) {\n            this.currentPageSize -= this.pageSize;\n        }\n    }\n\n    /** Reset entire collection and page settings. */\n    clear() {\n        this.currentPageSize = this.pageSize;\n        this.items = [];\n        this.filteredItems = [];\n        this.filterText = '';\n    }\n\n    addItem(item: T) {\n        if (!item) {\n            return;\n        }\n        this.items.push(item);\n        this.applyFilter();\n    }\n\n    deleteItem(item: T) {\n        const removeIndex = this.items.indexOf(item);\n        if (removeIndex > -1) {\n            this.items.splice(removeIndex, 1);\n            this.filteredItems.splice(removeIndex, 1);\n        }\n    }\n\n    [Symbol.iterator](): Iterator<T> {\n        let pointer = 0;\n        const items = this.visibleItems;\n\n        return {\n            next(): IteratorResult<T> {\n                if (pointer < items.length) {\n                    return {\n                        done: false,\n                        value: items[pointer++]\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: null\n                    };\n                }\n            }\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchService, TranslationService } from '@alfresco/adf-core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { FacetFieldBucket } from '../../facet-field-bucket.interface';\nimport { FacetField } from '../../facet-field.interface';\nimport { SearchFilterList } from './models/search-filter-list.model';\nimport { takeWhile } from 'rxjs/operators';\nimport { ResultSetPaging, GenericBucket, GenericFacetResponse, ResultSetContext } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-search-filter',\n    templateUrl: './search-filter.component.html',\n    styleUrls: ['./search-filter.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-filter' }\n})\nexport class SearchFilterComponent implements OnInit, OnDestroy {\n\n    private DEFAULT_PAGE_SIZE = 5;\n\n    isAlive = true;\n\n    /** All facet field items to be displayed in the component. These are updated according to the response.\n     *  When a new search is performed, the already existing items are updated with the new bucket count values and\n     *  the newly received items are added to the responseFacets.\n     */\n    responseFacets: FacetField[] = null;\n\n    private facetQueriesPageSize = this.DEFAULT_PAGE_SIZE;\n    facetQueriesLabel: string = 'Facet Queries';\n    facetExpanded = {\n        'default': false\n    };\n    displayResetButton: boolean;\n    selectedBuckets: Array<{ field: FacetField, bucket: FacetFieldBucket }> = [];\n\n    constructor(public queryBuilder: SearchQueryBuilderService,\n                private searchService: SearchService,\n                private translationService: TranslationService) {\n        if (queryBuilder.config && queryBuilder.config.facetQueries) {\n            this.facetQueriesLabel = queryBuilder.config.facetQueries.label || 'Facet Queries';\n            this.facetQueriesPageSize = queryBuilder.config.facetQueries.pageSize || this.DEFAULT_PAGE_SIZE;\n            this.facetExpanded['query'] = queryBuilder.config.facetQueries.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetFields) {\n            this.facetExpanded['field'] = queryBuilder.config.facetFields.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetIntervals) {\n            this.facetExpanded['interval'] = queryBuilder.config.facetIntervals.expanded;\n        }\n        this.displayResetButton = this.queryBuilder.config && !!this.queryBuilder.config.resetButton;\n\n        this.queryBuilder.updated.pipe(\n            takeWhile(() => this.isAlive)\n        ).subscribe(() => {\n            this.queryBuilder.execute();\n        });\n    }\n\n    ngOnInit() {\n        if (this.queryBuilder) {\n            this.queryBuilder.executed.pipe(\n                takeWhile(() => this.isAlive)\n            ).subscribe((resultSetPaging: ResultSetPaging) => {\n                this.onDataLoaded(resultSetPaging);\n                this.searchService.dataLoaded.next(resultSetPaging);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n\n    private updateSelectedBuckets() {\n        if (this.responseFacets) {\n            this.selectedBuckets = [];\n            for (const field of this.responseFacets) {\n                if (field.buckets) {\n                    this.selectedBuckets.push(\n                        ...this.queryBuilder.getUserFacetBuckets(field.field)\n                            .filter((bucket) => bucket.checked)\n                            .map((bucket) => {\n                                return { field, bucket };\n                            })\n                    );\n                }\n            }\n        } else {\n            this.selectedBuckets = [];\n        }\n    }\n\n    onToggleBucket(event: MatCheckboxChange, field: FacetField, bucket: FacetFieldBucket) {\n        if (event && bucket) {\n            if (event.checked) {\n                this.selectFacetBucket(field, bucket);\n            } else {\n                this.unselectFacetBucket(field, bucket);\n            }\n        }\n    }\n\n    selectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = true;\n            this.queryBuilder.addUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = false;\n            this.queryBuilder.removeUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    canResetSelectedBuckets(field: FacetField): boolean {\n        if (field && field.buckets) {\n            return field.buckets.items.some((bucket) => bucket.checked);\n        }\n        return false;\n    }\n\n    resetSelectedBuckets(field: FacetField) {\n        if (field && field.buckets) {\n            for (const bucket of field.buckets.items) {\n                bucket.checked = false;\n                this.queryBuilder.removeUserFacetBucket(field, bucket);\n            }\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    resetAllSelectedBuckets() {\n        this.responseFacets.forEach((field) => {\n            if (field && field.buckets) {\n                for (const bucket of field.buckets.items) {\n                    bucket.checked = false;\n                    this.queryBuilder.removeUserFacetBucket(field, bucket);\n                }\n                this.updateSelectedBuckets();\n            }\n        });\n        this.queryBuilder.update();\n    }\n\n    resetAll() {\n        this.resetAllSelectedBuckets();\n        this.responseFacets = null;\n    }\n\n    shouldExpand(field: FacetField): boolean {\n        return this.facetExpanded[field.type] || this.facetExpanded['default'];\n    }\n\n    onDataLoaded(data: any) {\n        const context = data.list.context;\n\n        if (context) {\n            this.parseFacets(context);\n        } else {\n            this.responseFacets = null;\n        }\n    }\n\n    private parseFacets(context: ResultSetContext) {\n        this.parseFacetFields(context);\n        this.parseFacetIntervals(context);\n        this.parseFacetQueries(context);\n    }\n\n    private parseFacetItems(context: ResultSetContext, configFacetFields: FacetField[], itemType: string) {\n        configFacetFields.forEach((field) => {\n            const responseField = this.findFacet(context, itemType, field.label);\n            const responseBuckets = this.getResponseBuckets(responseField, field)\n                .filter(this.getFilterByMinCount(field.mincount));\n            const alreadyExistingField = this.findResponseFacet(itemType, field.label);\n\n            if (alreadyExistingField) {\n                const alreadyExistingBuckets = alreadyExistingField.buckets && alreadyExistingField.buckets.items || [];\n\n                this.updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets);\n            } else if (responseField) {\n\n                const bucketList = new SearchFilterList<FacetFieldBucket>(responseBuckets, field.pageSize);\n                bucketList.filter = this.getBucketFilterFunction(bucketList);\n\n                if (!this.responseFacets) {\n                    this.responseFacets = [];\n                }\n                this.responseFacets.push(<FacetField> {\n                    ...field,\n                    type: responseField.type || itemType,\n                    label: field.label,\n                    pageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    currentPageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    buckets: bucketList\n                });\n            }\n        });\n    }\n\n    private parseFacetFields(context: ResultSetContext) {\n        const configFacetFields = this.queryBuilder.config.facetFields && this.queryBuilder.config.facetFields.fields || [];\n        this.parseFacetItems(context, configFacetFields, 'field');\n    }\n\n    private parseFacetIntervals(context: ResultSetContext) {\n        const configFacetIntervals = this.queryBuilder.config.facetIntervals && this.queryBuilder.config.facetIntervals.intervals || [];\n        this.parseFacetItems(context, configFacetIntervals, 'interval');\n    }\n\n    private parseFacetQueries(context: ResultSetContext) {\n        const configFacetQueries = this.queryBuilder.config.facetQueries && this.queryBuilder.config.facetQueries.queries || [];\n        const configGroups = configFacetQueries.reduce((acc, query) => {\n            const group = this.queryBuilder.getQueryGroup(query);\n            if (acc[group]) {\n                acc[group].push(query);\n            } else {\n                acc[group] = [query];\n            }\n            return acc;\n        }, []);\n\n        const mincount = this.queryBuilder.config.facetQueries && this.queryBuilder.config.facetQueries.mincount;\n        const mincountFilter = this.getFilterByMinCount(mincount);\n\n        Object.keys(configGroups).forEach((group) => {\n            const responseField = this.findFacet(context, 'query', group);\n            const responseBuckets = this.getResponseQueryBuckets(responseField, configGroups[group])\n                .filter(mincountFilter);\n            const alreadyExistingField = this.findResponseFacet('query', group);\n\n            if (alreadyExistingField) {\n                const alreadyExistingBuckets = alreadyExistingField.buckets && alreadyExistingField.buckets.items || [];\n\n                this.updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets);\n            } else if (responseField) {\n\n                const bucketList = new SearchFilterList<FacetFieldBucket>(responseBuckets, this.facetQueriesPageSize);\n                bucketList.filter = this.getBucketFilterFunction(bucketList);\n\n                if (!this.responseFacets) {\n                    this.responseFacets = [];\n                }\n                this.responseFacets.push(<FacetField> {\n                    field: group,\n                    type: responseField.type || 'query',\n                    label: group,\n                    pageSize: this.DEFAULT_PAGE_SIZE,\n                    currentPageSize: this.DEFAULT_PAGE_SIZE,\n                    buckets: bucketList\n                });\n            }\n        });\n\n    }\n\n    private getResponseBuckets(responseField: GenericFacetResponse, configField: FacetField): FacetFieldBucket[] {\n        return ((responseField && responseField.buckets) || []).map((respBucket) => {\n\n            respBucket['count'] = this.getCountValue(respBucket);\n            respBucket.filterQuery = respBucket.filterQuery || this.getCorrespondingFilterQuery(configField, respBucket.label);\n            return <FacetFieldBucket> {\n                ...respBucket,\n                checked: false,\n                display: respBucket.display,\n                label: respBucket.label\n            };\n        });\n    }\n\n    private getResponseQueryBuckets(responseField: GenericFacetResponse, configGroup: any): FacetFieldBucket[] {\n        return (configGroup || []).map((query) => {\n            const respBucket = ((responseField && responseField.buckets) || [])\n                .find((bucket) => bucket.label === query.label);\n\n            respBucket['count'] = this.getCountValue(respBucket);\n            return <FacetFieldBucket> {\n                ...respBucket,\n                checked: false,\n                display: respBucket.display,\n                label: respBucket.label\n            };\n        });\n    }\n\n    private getCountValue(bucket: GenericBucket): number {\n        return (!!bucket && !!bucket.metrics && bucket.metrics[0] && bucket.metrics[0].value && bucket.metrics[0].value.count)\n            || 0;\n    }\n\n    getBucketCountDisplay(bucket: FacetFieldBucket): string {\n        return bucket.count === null ? '' : `(${bucket.count})`;\n    }\n\n    private getFilterByMinCount(mincountInput: number) {\n        return (bucket) => {\n            let mincount = mincountInput;\n            if (mincount === undefined) {\n                mincount = 1;\n            }\n            return bucket.count >= mincount;\n        };\n    }\n\n    private getCorrespondingFilterQuery (configFacetItem: FacetField, bucketLabel: string): string {\n        let filterQuery = null;\n\n        if (configFacetItem.field && bucketLabel) {\n\n            if (configFacetItem.sets) {\n                const configSet = configFacetItem.sets.find((set) => bucketLabel === set.label);\n\n                if (configSet) {\n                    filterQuery = this.buildIntervalQuery(configFacetItem.field, configSet);\n                }\n\n            } else {\n                filterQuery = `${configFacetItem.field}:\"${bucketLabel}\"`;\n            }\n        }\n\n        return filterQuery;\n    }\n\n    private buildIntervalQuery(fieldName: string, interval: any): string {\n        const start = interval.start;\n        const end = interval.end;\n        const startLimit = (interval.startInclusive === undefined || interval.startInclusive === true) ? '[' : '<';\n        const endLimit = (interval.endInclusive === undefined || interval.endInclusive === true) ? ']' : '>';\n\n        return `${fieldName}:${startLimit}\"${start}\" TO \"${end}\"${endLimit}`;\n    }\n\n    private findFacet(context: ResultSetContext, itemType: string, fieldLabel: string): GenericFacetResponse {\n        return (context.facets || []).find((response) => response.type === itemType && response.label === fieldLabel) || {};\n    }\n\n    private findResponseFacet(itemType: string, fieldLabel: string): FacetField {\n        return (this.responseFacets || []).find((response) => response.type === itemType && response.label === fieldLabel);\n    }\n\n    private updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets) {\n        const bucketsToDelete = [];\n\n        alreadyExistingBuckets\n            .map((bucket) => {\n                const responseBucket = ((responseField && responseField.buckets) || []).find((respBucket) => respBucket.label === bucket.label);\n\n                if (!responseBucket) {\n                    bucketsToDelete.push(bucket);\n                }\n                bucket.count = this.getCountValue(responseBucket);\n                return bucket;\n            });\n\n        const hasSelection = this.selectedBuckets\n            .find((selBuckets) => alreadyExistingField.label === selBuckets.field.label && alreadyExistingField.type === selBuckets.field.type);\n\n        if (!hasSelection && bucketsToDelete.length) {\n            bucketsToDelete.forEach((bucket) => {\n                alreadyExistingField.buckets.deleteItem(bucket);\n            });\n        }\n\n        responseBuckets.forEach((respBucket) => {\n            const existingBucket = alreadyExistingBuckets.find((oldBucket) => oldBucket.label === respBucket.label);\n\n            if (!existingBucket) {\n                alreadyExistingField.buckets.addItem(respBucket);\n            }\n        });\n    }\n\n    private getBucketFilterFunction (bucketList) {\n        return (bucket: FacetFieldBucket): boolean => {\n            if (bucket && bucketList.filterText) {\n                const pattern = (bucketList.filterText || '').toLowerCase();\n                const label = (this.translationService.instant(bucket.display) || this.translationService.instant(bucket.label)).toLowerCase();\n                return this.queryBuilder.config.filterWithContains ? label.indexOf(pattern) !== -1 : label.startsWith(pattern);\n            }\n            return true;\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-text',\n    templateUrl: './search-text.component.html',\n    styleUrls: ['./search-text.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-text' }\n})\nexport class SearchTextComponent implements SearchWidget, OnInit {\n\n    /** The content of the text box. */\n    @Input()\n    value = '';\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        if (this.context && this.settings && this.settings.pattern) {\n            const pattern = new RegExp(this.settings.pattern, 'g');\n            const match = pattern.exec(this.context.queryFragments[this.id] || '');\n\n            if (match && match.length > 1) {\n                this.value = match[1];\n            }\n        }\n    }\n\n    reset() {\n        this.value = '';\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event) {\n        this.value = event.target.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: string) {\n        if (this.context && this.settings && this.settings.field) {\n            this.context.queryFragments[this.id] = value ? `${this.settings.field}:'${value}'` : '';\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatRadioChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchRadioOption {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'adf-search-radio',\n    templateUrl: './search-radio.component.html',\n    styleUrls: ['./search-radio.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-radio' }\n})\nexport class SearchRadioComponent implements SearchWidget, OnInit {\n\n    /** The value of the selected radio button. */\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    options: SearchFilterList<SearchRadioOption>;\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchRadioOption>();\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList<SearchRadioOption>(\n                    this.settings.options, this.pageSize\n                );\n            }\n        }\n\n        const initialValue = this.getSelectedValue();\n        if (initialValue !== null) {\n            this.setValue(initialValue);\n        }\n    }\n\n    private getSelectedValue(): string {\n        const options: any[] = this.settings['options'] || [];\n        if (options && options.length > 0) {\n            let selected = options.find((opt) => opt.default);\n            if (!selected) {\n                selected = options[0];\n            }\n            return selected.value;\n        }\n        return null;\n    }\n\n    private setValue(newValue: string) {\n        this.value = newValue;\n        this.context.queryFragments[this.id] = newValue;\n        this.context.update();\n    }\n\n    changeHandler(event: MatRadioChange) {\n        this.setValue(event.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { MatSliderChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-search-slider',\n    templateUrl: './search-slider.component.html',\n    styleUrls: ['./search-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-slider' }\n})\nexport class SearchSliderComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    step: number;\n    min: number;\n    max: number;\n    thumbLabel = false;\n\n    /** The numeric value represented by the slider. */\n    @Input()\n    value: number | null;\n\n    ngOnInit() {\n        if (this.settings) {\n            if (this.settings.hasOwnProperty('min')) {\n                this.min = this.settings['min'];\n            }\n\n            if (this.settings.hasOwnProperty('max')) {\n                this.max = this.settings['max'];\n            }\n\n            if (this.settings.hasOwnProperty('step')) {\n                this.step = this.settings['step'];\n            }\n\n            this.thumbLabel = this.settings['thumbLabel'] ? true : false;\n        }\n    }\n\n    reset() {\n        this.value = this.min || 0;\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event: MatSliderChange) {\n        this.value = event.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: number | null) {\n        if (this.id && this.context && this.settings && this.settings.field) {\n            if (value === null) {\n                this.context.queryFragments[this.id] = '';\n            } else {\n                this.context.queryFragments[this.id] = `${this.settings.field}:[0 TO ${value}]`;\n            }\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorStateMatcher } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\nexport class LiveErrorStateMatcher implements ErrorStateMatcher {\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || (!control.pristine && isSubmitted)));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\n\n@Component({\n    selector: 'adf-search-number-range',\n    templateUrl: './search-number-range.component.html',\n    styleUrls: ['./search-number-range.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-number-range' }\n})\nexport class SearchNumberRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n\n    field: string;\n    format = '[{FROM} TO {TO}]';\n\n    validators: Validators;\n\n    ngOnInit(): void {\n\n        if (this.settings) {\n            this.field = this.settings.field;\n            this.format = this.settings.format || '[{FROM} TO {TO}]';\n        }\n\n        this.validators = Validators.compose([\n            Validators.required,\n            Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n            Validators.min(0)\n        ]);\n\n        this.from = new FormControl('', this.validators);\n        this.to = new FormControl('', this.validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        }, this.formValidator);\n    }\n\n    formValidator(formGroup: FormGroup) {\n        return parseInt(formGroup.get('from').value, 10) < parseInt(formGroup.get('to').value, 10) ? null : {'mismatch': true};\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.field) {\n            const map = new Map<string, string>();\n            map.set('FROM', model.from);\n            map.set('TO', model.to);\n\n            const value = this.formatString(this.format, map);\n\n            this.context.queryFragments[this.id] = `${this.field}:${value}`;\n            this.context.update();\n        }\n    }\n\n    private formatString(str: string, map: Map<string, string>): string {\n        let result = str;\n\n        map.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchListOption {\n    name: string;\n    value: string;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'adf-search-check-list',\n    templateUrl: './search-check-list.component.html',\n    styleUrls: ['./search-check-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-check-list' }\n})\nexport class SearchCheckListComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    options: SearchFilterList<SearchListOption>;\n    operator: string = 'OR';\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchListOption>();\n    }\n\n    ngOnInit(): void {\n        if (this.settings) {\n            this.operator = this.settings.operator || 'OR';\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList(this.settings.options, this.pageSize);\n            }\n        }\n    }\n\n    reset() {\n        this.options.items.forEach((opt) => {\n            opt.checked = false;\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    changeHandler(event: MatCheckboxChange, option: any) {\n        option.checked = event.checked;\n        this.flush();\n    }\n\n    flush() {\n        const checkedValues = this.options.items\n            .filter((option) => option.checked)\n            .map((option) => option.value);\n\n        const query = checkedValues.join(` ${this.operator} `);\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = query;\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\n\ndeclare let moment: any;\n\nconst DEFAULT_FORMAT_DATE: string = 'DD/MM/YYYY';\n\n@Component({\n    selector: 'adf-search-date-range',\n    templateUrl: './search-date-range.component.html',\n    styleUrls: ['./search-date-range.component.scss'],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-date-range' }\n})\nexport class SearchDateRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    maxDate: any;\n    datePickerDateFormat = DEFAULT_FORMAT_DATE;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    getFromValidationMessage(): string {\n        return this.from.hasError('invalidOnChange') || this.hasParseError(this.from) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.from.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.from.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    getToValidationMessage(): string {\n        return this.to.hasError('invalidOnChange') || this.hasParseError(this.to) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.to.hasError('matDatepickerMin') ? 'SEARCH.FILTER.VALIDATION.NO-DAYS' :\n            this.to.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.to.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.datePickerDateFormat = this.settings.dateFormat || DEFAULT_FORMAT_DATE;\n        }\n        const theCustomDateAdapter = <MomentDateAdapter> <any> this.dateAdapter;\n        theCustomDateAdapter.overrideDisplayFormat = this.datePickerDateFormat;\n\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.setLocale(locale);\n        });\n\n        const validators = Validators.compose([\n            Validators.required\n        ]);\n\n        this.from = new FormControl('', validators);\n        this.to = new FormControl('', validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        });\n\n        this.maxDate = this.dateAdapter.today().startOf('day');\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.settings && this.settings.field) {\n            const start = moment(model.from).startOf('day').format();\n            const end = moment(model.to).endOf('day').format();\n\n            this.context.queryFragments[this.id] = `${this.settings.field}:['${start}' TO '${end}']`;\n            this.context.update();\n        }\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    onChangedHandler(event: any, formControl: FormControl) {\n        const inputValue = event.srcElement.value;\n\n        const formatDate = this.dateAdapter.parse(inputValue, this.datePickerDateFormat);\n        if (formatDate && formatDate.isValid()) {\n            formControl.setValue(formatDate);\n        } else if (formatDate) {\n            formControl.setErrors({\n                'invalidOnChange': true\n            });\n        } else {\n            formControl.setErrors({\n                'required': true\n            });\n        }\n    }\n\n    setLocale(locale) {\n        this.dateAdapter.setLocale(locale);\n        moment.locale(locale);\n    }\n\n    hasParseError(formControl) {\n        return formControl.hasError('matDatepickerParse') && formControl.getError('matDatepickerParse').text;\n    }\n\n    forcePlaceholder(event: any) {\n        event.srcElement.click();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { SearchTextComponent } from '../search-text/search-text.component';\nimport { SearchRadioComponent } from '../search-radio/search-radio.component';\nimport { SearchSliderComponent } from '../search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from '../search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from '../search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from '../search-date-range/search-date-range.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchFilterService {\n\n    /**\n     * Contains string-to-type mappings for registered widgets.\n     */\n    widgets: { [id: string]: Type<{}> } = {\n        'text': SearchTextComponent,\n        'radio': SearchRadioComponent,\n        'slider': SearchSliderComponent,\n        'number-range': SearchNumberRangeComponent,\n        'check-list': SearchCheckListComponent,\n        'date-range': SearchDateRangeComponent\n    };\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { SearchFilterComponent } from '../../components/search-filter/search-filter.component';\n\n@Component({\n    selector: 'adf-search-chip-list',\n    templateUrl: './search-chip-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-chip-list' }\n})\nexport class SearchChipListComponent {\n\n    /** Search filter to supply the data for the chips. */\n    @Input()\n    searchFilter: SearchFilterComponent;\n\n    /** Flag used to enable the display of a clear-all-filters button. */\n    @Input()\n    clearAll: boolean = false;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchSortingDefinition } from '../../search-sorting-definition.interface';\n\n@Component({\n    selector: 'adf-search-sorting-picker',\n    templateUrl: './search-sorting-picker.component.html',\n    styleUrls: ['./search-sorting-picker.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-sorting-picker' }\n})\nexport class SearchSortingPickerComponent implements OnInit {\n\n    options: SearchSortingDefinition[] = [];\n    value: string;\n    ascending: boolean;\n\n    constructor(private queryBuilder: SearchQueryBuilderService) {}\n\n    ngOnInit() {\n        this.options = this.queryBuilder.getSortingOptions();\n\n        const primary = this.queryBuilder.getPrimarySorting();\n        if (primary) {\n            this.value = primary.key;\n            this.ascending = primary.ascending;\n        }\n    }\n\n    onValueChanged(key: string) {\n        this.value = key;\n        this.ascending = this.getSortingOrder();\n        this.applySorting();\n    }\n\n    onSortingChanged(ascending: boolean) {\n        this.ascending = ascending;\n        this.applySorting();\n    }\n\n    private findOptionByKey(key: string): SearchSortingDefinition {\n        if (key) {\n            return this.options.find((opt) => opt.key === key);\n        }\n        return null;\n    }\n\n    private applySorting() {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            this.queryBuilder.sorting = [{\n                ...option,\n                ascending: this.ascending\n            }];\n            this.queryBuilder.update();\n        }\n    }\n\n    private getSortingOrder(): boolean {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            return option.ascending;\n        }\n\n        return this.queryBuilder.getPrimarySorting().ascending;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, ViewContainerRef, OnInit, OnDestroy, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterService } from '../search-filter/search-filter.service';\n\n@Component({\n    selector: 'adf-search-widget-container',\n    template: '<div #content></div>'\n})\nexport class SearchWidgetContainerComponent implements OnInit, OnDestroy {\n\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    @Input()\n    id: string;\n\n    @Input()\n    selector: string;\n\n    @Input()\n    settings: any;\n\n    @Input()\n    config: any;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private searchFilterService: SearchFilterService,\n        private queryBuilder: SearchQueryBuilderService,\n        private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        const componentType = this.searchFilterService.widgets[this.selector];\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.setupWidget(this.componentRef);\n            }\n        }\n    }\n\n    private setupWidget(ref: ComponentRef<any>) {\n        if (ref && ref.instance) {\n            ref.instance.id = this.id;\n            ref.instance.settings = { ...this.settings };\n            ref.instance.context = this.queryBuilder;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { SearchTriggerDirective } from './components/search-trigger.directive';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\nimport { EmptySearchResultComponent } from './components/empty-search-result.component';\nimport { SearchWidgetContainerComponent } from './components/search-widget-container/search-widget-container.component';\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component';\nimport { SearchChipListComponent } from './components/search-chip-list/search-chip-list.component';\nimport { SearchTextComponent } from './components/search-text/search-text.component';\nimport { SearchRadioComponent } from './components/search-radio/search-radio.component';\nimport { SearchSliderComponent } from './components/search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from './components/search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from './components/search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from './components/search-date-range/search-date-range.component';\nimport { SearchSortingPickerComponent } from './components/search-sorting-picker/search-sorting-picker.component';\n\nexport const ALFRESCO_SEARCH_DIRECTIVES: any[] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchTriggerDirective,\n    EmptySearchResultComponent,\n    SearchFilterComponent,\n    SearchChipListComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    entryComponents: [\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent\n    ]\n})\nexport class SearchModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { SitesService, LogService } from '@alfresco/adf-core';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { MatSelect } from '@angular/material';\n\nexport enum Relations {\n    Members = 'members',\n    Containers = 'containers'\n}\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styleUrls: ['./sites-dropdown.component.scss'],\n    templateUrl: './sites-dropdown.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sites-dropdown' }\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    /** Hide the \"My Files\" option. */\n    @Input()\n    hideMyFiles: boolean = false;\n\n    /** A custom list of sites to be displayed by the dropdown. If no value\n     * is given, the sites of the current user are displayed by default. A\n     * list of objects only with properties 'title' and 'guid' is enough to\n     * be able to display the dropdown.\n     */\n    @Input()\n    siteList: SitePaging = null;\n\n    /** Id of the selected site */\n    @Input()\n    value: string = null;\n\n    /** Text or a translation key to act as a placeholder. Default value is the\n     * key \"DROPDOWN.PLACEHOLDER_LABEL\".\n     */\n    @Input()\n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    /** Filter for the results of the sites query. Possible values are\n     * \"members\" and \"containers\". When \"members\" is used, the site list\n     * will be restricted to the sites that the user is a member of.\n     */\n    @Input()\n    relations: string;\n\n    /** Emitted when the user selects a site. When the default option is selected,\n     * an empty model is emitted.\n     */\n    @Output()\n    change: EventEmitter<SiteEntry> = new EventEmitter();\n\n    @ViewChild('siteSelect')\n    siteSelect: MatSelect;\n\n    private loading = true;\n    private skipCount = 0;\n    private readonly MAX_ITEMS = 50;\n    private readonly ITEM_HEIGHT = 45;\n    private readonly ITEM_HEIGHT_TO_WAIT_BEFORE_LOAD_NEXT = (this.ITEM_HEIGHT * (this.MAX_ITEMS / 2));\n\n    selected: SiteEntry = null;\n\n    public MY_FILES_VALUE = '-my-';\n\n    constructor(private sitesService: SitesService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        this.siteSelect.openedChange.subscribe(() => {\n            if (this.siteSelect.panelOpen) {\n                this.siteSelect.panel.nativeElement.addEventListener('scroll', (event) => this.loadAllOnScroll(event));\n            }\n        });\n\n        if (!this.siteList) {\n            this.loadSiteList();\n        }\n    }\n\n    loadAllOnScroll(event) {\n        if (this.isInfiniteScrollingEnabled() && this.isScrollInNextFetchArea(event)) {\n            this.loading = true;\n            this.loadSiteList();\n        }\n    }\n\n    isScrollInNextFetchArea(event) {\n        return event.target.scrollTop >= (event.target.scrollHeight - event.target.offsetHeight - this.ITEM_HEIGHT_TO_WAIT_BEFORE_LOAD_NEXT);\n    }\n\n    selectedSite(event: any) {\n        this.change.emit(event.value);\n    }\n\n    private loadSiteList() {\n        const extendedOptions: any = {\n            skipCount: this.skipCount,\n            maxItems: this.MAX_ITEMS\n        };\n\n        this.skipCount += this.MAX_ITEMS;\n\n        if (this.relations) {\n            extendedOptions.relations = [this.relations];\n        }\n\n        this.sitesService.getSites(extendedOptions).subscribe((sitePaging: SitePaging) => {\n\n                if (!this.siteList) {\n                    this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;\n\n                    if (!this.hideMyFiles) {\n                        const siteEntry = new SiteEntry({\n                            entry: {\n                                id: '-my-',\n                                guid: '-my-',\n                                title: 'DROPDOWN.MY_FILES_OPTION'\n                            }\n                        });\n\n                        this.siteList.list.entries.unshift(siteEntry);\n\n                        if (!this.value) {\n                            this.value = '-my-';\n                        }\n                    }\n\n                } else {\n                    const siteList: SitePaging = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;\n\n                    this.siteList.list.entries = this.siteList.list.entries.concat(siteList.list.entries);\n                    this.siteList.list.pagination = sitePaging.list.pagination;\n                }\n\n                this.selected = this.siteList.list.entries.find((site: SiteEntry) => site.entry.id === this.value);\n\n                this.loading = false;\n            },\n            (error) => {\n                this.logService.error(error);\n            });\n    }\n\n    showLoading(): boolean {\n        return this.loading && (this.siteList && this.siteList.list.pagination && this.siteList.list.pagination.hasMoreItems);\n    }\n\n    isInfiniteScrollingEnabled(): boolean {\n        return !this.loading && (this.siteList && this.siteList.list.pagination && this.siteList.list.pagination.hasMoreItems);\n    }\n\n    private filteredResultsByMember(sites: SitePaging): SitePaging {\n        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();\n        sites.list.entries = sites.list.entries.filter((site) => this.isCurrentUserMember(site, loggedUserName));\n        return sites;\n    }\n\n    private isCurrentUserMember(site, loggedUserName): boolean {\n        return site.entry.visibility === 'PUBLIC' ||\n            !!site.relations.members.list.entries.find((member) => {\n                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();\n            });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ]\n})\nexport class SitesDropdownModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { Node, PathElementEntity } from '@alfresco/js-api';\nimport { DocumentListComponent } from '../document-list';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    /** Active node, builds UI based on folderNode.path.elements collection. */\n    @Input()\n    folderNode: Node = null;\n\n    /** (optional) Name of the root element of the breadcrumb. You can use\n     * this property to rename \"Company Home\" to \"Personal Files\" for\n     * example. You can use an i18n resource key for the property value.\n     */\n    @Input()\n    root: string = null;\n\n    /** (optional) The id of the root element. You can use this property\n     * to set a custom element the breadcrumb should start with.\n     */\n    @Input()\n    rootId: string = null;\n\n    /** (optional) Document List component to operate with. The list will\n     * update when the breadcrumb is clicked.\n     */\n    @Input()\n    target: DocumentListComponent;\n\n    /** Transformation to be performed on the chosen/folder node before building\n     * the breadcrumb UI. Can be useful when custom formatting is needed for the\n     * breadcrumb. You can change the path elements from the node that are used to\n     * build the breadcrumb using this function.\n     */\n    @Input()\n    transform: (node) => any;\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    /** Maximum number of nodes to display before wrapping them with a dropdown element.  */\n    @Input()\n    maxItems: number;\n\n    previousNodes: PathElementEntity[];\n    lastNodes: PathElementEntity[];\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    /** Emitted when the user clicks on a breadcrumb. */\n    @Output()\n    navigate = new EventEmitter<PathElementEntity>();\n\n    ngOnInit() {\n        this.transform = this.transform ? this.transform : null;\n\n        if (this.target) {\n            this.target.$folderNode.subscribe((folderNode: Node) => {\n                this.folderNode = folderNode;\n                this.recalculateNodes();\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateNodes();\n    }\n\n    protected recalculateNodes(): void {\n        const node: Node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n\n        this.route = this.parseRoute(node);\n\n        if (this.maxItems && this.route.length > this.maxItems) {\n            this.lastNodes = this.route.slice(this.route.length - this.maxItems);\n            this.previousNodes = this.route.slice(0, this.route.length - this.maxItems);\n            this.previousNodes.reverse();\n        } else {\n            this.lastNodes = this.route;\n            this.previousNodes = null;\n        }\n    }\n\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    hasPreviousNodes(): boolean {\n        return this.previousNodes ? true : false;\n    }\n\n    parseRoute(node: Node): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name,\n                node: node\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let position: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            position = route.findIndex((el) => el.id === nodeId);\n        }\n\n        return position;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.navigateTo(route.id);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity, Node } from '@alfresco/js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    templateUrl: './dropdown-breadcrumb.component.html',\n    styleUrls: ['./dropdown-breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    protected recalculateNodes(): void {\n        const node: Node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n\n        this.route = this.parseRoute(node);\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the node picker menu\n     */\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n})\nexport class BreadcrumbModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, SecurityContext } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-confirm-dialog',\n    templateUrl: './confirm.dialog.html',\n    styleUrls: ['./confirm.dialog.scss'],\n    host: { 'class': 'adf-confirm-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmDialogComponent {\n\n    title: string;\n    message: string;\n    yesLabel: string;\n    noLabel: string;\n    thirdOptionLabel: string;\n    htmlContent: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) data, private sanitizer: DomSanitizer) {\n        data = data || {};\n        this.title = data.title || 'ADF_CONFIRM_DIALOG.CONFIRM';\n        this.message = data.message || 'ADF_CONFIRM_DIALOG.MESSAGE';\n        this.yesLabel = data.yesLabel || 'ADF_CONFIRM_DIALOG.YES_LABEL';\n        this.thirdOptionLabel = data.thirdOptionLabel;\n        this.noLabel = data.noLabel || 'ADF_CONFIRM_DIALOG.NO_LABEL';\n        this.htmlContent = data.htmlContent;\n    }\n\n    public sanitizedHtmlContent() {\n        return this.sanitizer.sanitize(SecurityContext.HTML, this.htmlContent);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation, EventEmitter, Output } from '@angular/core';\nimport { VersionsApi, Node, VersionEntry, VersionPaging } from '@alfresco/js-api';\nimport { MatDialog } from '@angular/material';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\n\n@Component({\n    selector: 'adf-version-list',\n    templateUrl: './version-list.component.html',\n    styleUrls: ['./version-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: VersionEntry[] = [];\n    isLoading = true;\n\n    /** The target node. */\n    @Input()\n    node: Node;\n\n    /** Toggles showing/hiding of comments */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles showing/hiding of version actions */\n    @Input()\n    showActions = true;\n\n    /** Emitted when a version is restored */\n    @Output()\n    restored: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when a version is deleted */\n    @Output()\n    deleted: EventEmitter<Node> = new EventEmitter<Node>();\n\n    constructor(private alfrescoApi: AlfrescoApiService,\n                private contentService: ContentService,\n                private dialog: MatDialog) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update') && this.versions.length > 1;\n    }\n\n    canDelete(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'delete') && this.versions.length > 1;\n    }\n\n    restore(versionId) {\n        if (this.canUpdate()) {\n            this.versionsApi\n                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: '' })\n                .then(() =>\n                    this.alfrescoApi.nodesApi.getNodeInfo(\n                        this.node.id,\n                        { include: ['permissions', 'path', 'isFavorite', 'allowableOperations'] }\n                    )\n                )\n                .then((node) => this.onVersionRestored(node));\n        }\n    }\n\n    loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.node.id).then((versionPaging: VersionPaging) => {\n            this.versions = versionPaging.list.entries;\n            this.isLoading = false;\n        });\n    }\n\n    downloadVersion(versionId: string) {\n        if (this.allowDownload) {\n            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);\n            this.downloadContent(versionDownloadUrl);\n        }\n    }\n\n    deleteVersion(versionId: string) {\n        if (this.canUpdate()) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',\n                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',\n                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',\n                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'\n                },\n                minWidth: '250px'\n            });\n\n            dialogRef.afterClosed().subscribe((result) => {\n                if (result === true) {\n                    this.alfrescoApi.versionsApi\n                        .deleteVersion(this.node.id, versionId)\n                        .then(() => this.onVersionDeleted(this.node));\n                }\n            });\n        }\n    }\n\n    onVersionDeleted(node: any) {\n        this.loadVersionHistory();\n        this.deleted.emit(node);\n    }\n\n    onVersionRestored(node: any) {\n        this.loadVersionHistory();\n        this.restored.emit(node);\n    }\n\n    private getVersionContentUrl(nodeId: string, versionId: string, attachment?: boolean) {\n        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);\n        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');\n    }\n\n    downloadContent(url: string) {\n        if (url) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { AppConfigService, ContentService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n    selector: 'adf-version-manager',\n    templateUrl: './version-manager.component.html',\n    styleUrls: ['./version-manager.component.scss'],\n    animations: [\n        trigger('uploadToggle', [\n            state('open', style({ height: '175px', opacity: 1, visibility: 'visible' })),\n            state('close', style({ height: '0%', opacity: 0, visibility: 'hidden' })),\n            transition('open => close', [\n                style({ visibility: 'hidden' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ]),\n            transition('close => open', [\n                style({ visibility: 'visible' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent {\n\n    /** Target node to manage version history. */\n    @Input()\n    node: Node;\n\n    /** Toggles showing/hiding of comments. */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Emitted when a file is uploaded successfully. */\n    @Output()\n    uploadSuccess: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when an error occurs during upload. */\n    @Output()\n    uploadError: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @ViewChild('versionList')\n    versionListComponent: VersionListComponent;\n\n    uploadState: string = 'close';\n\n    constructor(config: AppConfigService,\n                private contentService: ContentService,\n                private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    refresh(node: Node) {\n        this.alfrescoApiService.nodeUpdated.next(node);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(node);\n        this.uploadState = 'close';\n    }\n\n    onUploadSuccess(event: any) {\n        this.alfrescoApiService.nodeUpdated.next(event.value.entry);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(event.value.entry);\n        this.uploadState = 'close';\n    }\n\n    onUploadError(event: any) {\n        this.uploadError.emit(event);\n    }\n\n    onUploadCancel() {\n        this.uploadState = 'close';\n    }\n\n    toggleNewVersion() {\n        this.uploadState = this.uploadState === 'open' ? 'close' : 'open';\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-upload',\n    templateUrl: './version-upload.component.html',\n    styleUrls: ['./version-upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-version-upload' }\n})\nexport class VersionUploadComponent {\n\n    semanticVersion: string = 'minor';\n    comment: string;\n    uploadVersion: boolean = false;\n\n    @Input()\n    node: Node;\n\n    @Output()\n    success = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    cancel = new EventEmitter();\n\n    constructor(private contentService: ContentService) {\n    }\n\n    canUpload(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update');\n    }\n\n    isMajorVersion(): boolean {\n        return this.semanticVersion === 'minor' ? false : true;\n    }\n\n    cancelUpload() {\n        this.cancel.emit();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        UploadModule,\n        FormsModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent,\n        FormsModule\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ]\n})\nexport class VersionManagerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataRow } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-name-location-cell',\n    template: `\n        <div class=\"adf-name-location-cell-name adf-datatable-cell-value\">{{ name }}</div>\n        <div class=\"adf-name-location-cell-location adf-datatable-cell-value\" [title]=\"path\">{{ path }}</div>\n    `,\n    styleUrls: ['./name-location-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-name-location-cell adf-datatable-content-cell' }\n})\nexport class NameLocationCellComponent implements OnInit {\n\n    name: string = '';\n    path: string = '';\n\n    @Input()\n    row: DataRow;\n\n    ngOnInit() {\n        if (this.row) {\n            this.name = this.row.getValue('name');\n\n            const fullPath = this.row.getValue('path');\n            if (fullPath) {\n                this.path = fullPath.name || '';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\n\n/**\n * Internal service used by ContentNodeSelector component.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentNodeSelectorService {\n\n    constructor(private searchService: SearchService) {\n    }\n\n    /**\n     * Performs a search for content node selection\n     *\n     * @param searchTerm    The term to search for\n     * @param rootNodeId    The root is to start the search from\n     * @param skipCount     From where to start the loading\n     * @param maxItems      How many items to load\n     * @param [extraNodeIds]  List of extra node ids to search from. This last parameter is necessary when\n     * the rootNodeId is one of the supported aliases (e.g. '-my-', '-root-', '-mysites-', etc.)\n     * and search is not supported for that alias, but can be performed on its corresponding nodes.\n     */\n    public search(searchTerm: string, rootNodeId: string = null, skipCount: number = 0, maxItems: number = 25, extraNodeIds?: string[]): Observable<NodePaging> {\n\n        let extraParentFiltering = '';\n\n        if (extraNodeIds && extraNodeIds.length) {\n            extraNodeIds\n                .filter((id) => id !== rootNodeId)\n                .forEach((extraId) => {\n                    extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;\n                });\n        }\n\n        const parentFiltering = rootNodeId ? [{ query: `ANCESTOR:'workspace://SpacesStore/${rootNodeId}'${extraParentFiltering}` }] : [];\n\n        const defaultSearchNode: any = {\n            query: {\n                query: `${searchTerm}* OR name:${searchTerm}*`\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxItems,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder'\" },\n                { query: 'NOT cm:creator:System' },\n                ...parentFiltering\n            ],\n            scope: {\n                locations: ['nodes']\n            }\n        };\n\n        return this.searchService.searchByQueryBody(defaultSearchNode);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    HighlightDirective,\n    UserPreferencesService,\n    PaginationModel,\n    UserPreferenceValues,\n    InfinitePaginationComponent, PaginatedComponent\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { Node, NodePaging, Pagination, SiteEntry, SitePaging } from '@alfresco/js-api';\nimport { DocumentListComponent } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { CustomResourcesService } from '../document-list/services/custom-resources.service';\nimport { ShareDataRow } from '../document-list';\n\nexport type ValidationFunction = (entry: Node) => boolean;\n\nconst defaultValidation = () => true;\n\n@Component({\n    selector: 'adf-content-node-selector-panel',\n    styleUrls: ['./content-node-selector-panel.component.scss'],\n    templateUrl: './content-node-selector-panel.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-node-selector-panel' }\n})\nexport class ContentNodeSelectorPanelComponent implements OnInit {\n\n    DEFAULT_PAGINATION: Pagination = new Pagination({\n        maxItems: 25,\n        skipCount: 0,\n        totalItems: 0,\n        hasMoreItems: false\n    });\n\n    /** Node ID of the folder currently listed. */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Hide the \"My Files\" option added to the site list by default.\n     * See the [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /** Custom site for site dropdown. This is the same as the `siteList`.\n     * property of the Sites Dropdown component (see its doc page\n     * for more information).\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    _rowFilter: RowFilter = defaultValidation;\n\n    /** Custom *where* filter function. See the\n     * Document List component\n     * for more information.\n     */\n    @Input()\n    where: string;\n\n    /**\n     * Custom row filter function. See the\n     * [Row Filter Model](row-filter.model.md) page\n     * for more information.\n     */\n    @Input()\n    set rowFilter(rowFilter: RowFilter) {\n        this.createRowFilter(rowFilter);\n    }\n\n    get rowFilter(): RowFilter {\n        return this._rowFilter;\n    }\n\n    _excludeSiteContent: string[] = [];\n\n    /** Custom list of site content componentIds.\n     * Used to filter out the corresponding items from the displayed nodes\n     */\n    @Input()\n    set excludeSiteContent(excludeSiteContent: string[]) {\n        this._excludeSiteContent = excludeSiteContent;\n        this.createRowFilter(this._rowFilter);\n    }\n\n    get excludeSiteContent(): string[] {\n        return this._excludeSiteContent;\n    }\n\n    /**\n     * Custom image resolver function. See the\n     * [Image Resolver Model](image-resolver.model.md) page\n     * for more information.\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /** Number of items shown per page in the list. */\n    @Input()\n    pageSize: number = this.DEFAULT_PAGINATION.maxItems;\n\n    /** Function used to decide if the selected node has permission to be selected.\n     * Default value is a function that always returns true.\n     */\n    @Input()\n    isSelectionValid: ValidationFunction = defaultValidation;\n\n    /** Transformation to be performed on the chosen/folder node before building the\n     * breadcrumb UI. Can be useful when custom formatting is needed for the breadcrumb.\n     * You can change the path elements from the node that are used to build the\n     * breadcrumb using this function.\n     */\n    @Input()\n    breadcrumbTransform: (node) => any;\n\n    /** Emitted when the user has chosen an item. */\n    @Output()\n    select: EventEmitter<Node[]> = new EventEmitter<Node[]>();\n\n    @ViewChild('documentList')\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    nodePaging: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    _chosenNode: Node = null;\n    folderIdToShow: string | null = null;\n    breadcrumbFolderTitle: string | null = null;\n\n    pagination: PaginationModel = this.DEFAULT_PAGINATION;\n\n    @ViewChild(InfinitePaginationComponent)\n    infinitePaginationComponent: InfinitePaginationComponent;\n\n    infiniteScroll: boolean = false;\n    debounceSearch: number = 200;\n    searchInput: FormControl = new FormControl();\n\n    target: PaginatedComponent;\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private customResourcesService: CustomResourcesService,\n                private userPreferencesService: UserPreferencesService) {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch)\n            )\n            .subscribe((searchValue) => {\n                this.search(searchValue);\n            });\n\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.pageSize = pagSize;\n        });\n\n    }\n\n    set chosenNode(value: Node) {\n        this._chosenNode = value;\n        let valuesArray = null;\n        if (value) {\n            valuesArray = [value];\n        }\n        this.select.next(valuesArray);\n    }\n\n    get chosenNode() {\n        return this._chosenNode;\n    }\n\n    ngOnInit() {\n        this.target = this.documentList;\n        this.folderIdToShow = this.currentFolderId;\n\n        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;\n        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;\n    }\n\n    private createRowFilter(filter?: RowFilter) {\n        if (!filter) {\n            filter = () => true;\n        }\n        this._rowFilter = (value: ShareDataRow, index: number, array: ShareDataRow[]) => {\n            return filter(value, index, array) &&\n                !this.isExcludedSiteContent(value);\n        };\n    }\n\n    private isExcludedSiteContent(row: ShareDataRow): boolean {\n        const entry = row.node.entry;\n        if (this._excludeSiteContent && this._excludeSiteContent.length &&\n            entry &&\n            entry.properties &&\n            entry.properties['st:componentId']) {\n            const excludedItem = this._excludeSiteContent.find(\n                (id: string) => entry.properties['st:componentId'] === id\n            );\n            return !!excludedItem;\n        }\n        return false;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite SiteEntry to search within\n     */\n    siteChanged(chosenSite: SiteEntry): void {\n        this.siteId = chosenSite.entry.guid;\n        this.setTitleIfCustomSite(chosenSite);\n        this.updateResults();\n\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): Node | null {\n        let folderNode: Node;\n\n        if (this.showingSearchResults && this.chosenNode) {\n            folderNode = this.chosenNode;\n        } else {\n            folderNode = this.documentList.folderNode;\n        }\n\n        return folderNode;\n    }\n\n    /**\n     * Clear the search input and reset to last folder node in which search was performed\n     */\n    clear(): void {\n        this.clearSearch();\n        this.folderIdToShow = this.siteId || this.currentFolderId;\n    }\n\n    /**\n     * Clear the search input and search related data\n     */\n    clearSearch() {\n        this.searchTerm = '';\n        this.nodePaging = null;\n        this.pagination.maxItems = this.pageSize;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Update the result list depending on the criteria\n     */\n    private updateResults(): void {\n        this.target = this.searchTerm.length > 0 ? null : this.documentList;\n\n        if (this.searchTerm.length === 0) {\n            this.clear();\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodePaging = null;\n        this.pagination.maxItems = this.pageSize;\n        if (this.target) {\n            this.infinitePaginationComponent.reset();\n        }\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        this.loadingSearchResults = true;\n\n        if (this.customResourcesService.hasCorrespondingNodeIds(this.siteId)) {\n            this.customResourcesService.getCorrespondingNodeIds(this.siteId)\n                .subscribe((nodeIds) => {\n                        this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.pagination.skipCount, this.pagination.maxItems, nodeIds)\n                            .subscribe(this.showSearchResults.bind(this));\n                    },\n                    () => {\n                        this.showSearchResults({ list: { entries: [] } });\n                    });\n        } else {\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.pagination.skipCount, this.pagination.maxItems)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(nodePaging: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        this.nodePaging = nodePaging;\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n        this.infiniteScroll = false;\n        this.clearSearch();\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(): void {\n        if (!this.showingSearchResults) {\n            this.attemptNodeSelection(this.documentList.folderNode);\n        }\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    showBreadcrumbs() {\n        return !this.showingSearchResults || this.chosenNode;\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(pagination: Pagination): void {\n        this.infiniteScroll = true;\n        this.pagination = pagination;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: Node): void {\n        if (entry && this.isSelectionValid(entry)) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    setTitleIfCustomSite(site: SiteEntry) {\n        if (this.customResourcesService.isCustomSource(site.entry.guid)) {\n            this.breadcrumbFolderTitle = site.entry.title;\n        } else {\n            this.breadcrumbFolderTitle = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { ContentNodeSelectorPanelComponent } from './content-node-selector-panel.component';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nimport { NameLocationCellComponent } from './name-location-cell/name-location-cell.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        DocumentListModule\n    ],\n    exports: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    entryComponents: [\n        ContentNodeSelectorPanelComponent,\n        ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ]\n})\nexport class ContentNodeSelectorModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { Component, Inject, OnInit, Optional, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { Node } from '@alfresco/js-api';\nimport { NodesApiService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './folder.dialog.html'\n})\nexport class FolderDialogComponent implements OnInit {\n\n    form: FormGroup;\n\n    folder: Node = null;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the edit/create folder is successfully created/modified\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<Node>();\n\n    editTitle = 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE';\n    createTitle = 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE';\n    nodeType = 'cm:folder';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n        if (data) {\n            this.editTitle = data.editTitle || this.editTitle;\n            this.createTitle = data.createTitle || this.createTitle;\n            this.nodeType = data.nodeType || this.nodeType;\n        }\n    }\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        const { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get description(): string {\n        const { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<Node> {\n        const { name, properties, nodeType, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties, nodeType });\n    }\n\n    private edit(): Observable<Node> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: Node) => {\n                    this.success.emit(folder);\n                    dialog.close(folder);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.error.emit(this.translation.instant(errorMessage));\n\n        return error;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, Subject, from } from 'rxjs';\nimport {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  AbstractControl\n} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { SiteBodyCreate, SiteEntry, SitePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { debounceTime, mergeMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'adf-library-dialog',\n  styleUrls: ['./library.dialog.scss'],\n  templateUrl: './library.dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'adf-library-dialog' }\n})\nexport class LibraryDialogComponent implements OnInit, OnDestroy {\n  /** Emitted when an error occurs. */\n  @Output()\n  error: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Emitted when the new library is created successfully. The\n   * event parameter is a SiteEntry object with the details of the\n   * newly-created library.\n   */\n  @Output()\n  success: EventEmitter<any> = new EventEmitter<any>();\n\n  onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n  createTitle = 'LIBRARY.DIALOG.CREATE_TITLE';\n  libraryTitleExists = false;\n  form: FormGroup;\n  visibilityOption: any;\n  visibilityOptions = [\n    { value: 'PUBLIC', label: 'LIBRARY.VISIBILITY.PUBLIC', disabled: false },\n    { value: 'PRIVATE', label: 'LIBRARY.VISIBILITY.PRIVATE', disabled: false },\n    {\n      value: 'MODERATED',\n      label: 'LIBRARY.VISIBILITY.MODERATED',\n      disabled: false\n    }\n  ];\n\n  constructor(\n    private alfrescoApiService: AlfrescoApiService,\n    private formBuilder: FormBuilder,\n    private dialog: MatDialogRef<LibraryDialogComponent>\n  ) {}\n\n  ngOnInit() {\n    const validators = {\n      id: [\n        Validators.required,\n        Validators.maxLength(72),\n        this.forbidSpecialCharacters\n      ],\n      title: [\n        Validators.required,\n        this.forbidOnlySpaces,\n        Validators.minLength(2),\n        Validators.maxLength(256)\n      ],\n      description: [Validators.maxLength(512)]\n    };\n\n    this.form = this.formBuilder.group({\n      title: [null, validators.title],\n      id: [null, validators.id, this.createSiteIdValidator()],\n      description: ['', validators.description]\n    });\n\n    this.visibilityOption = this.visibilityOptions[0].value;\n\n    this.form.controls['title'].valueChanges\n      .pipe(\n        debounceTime(300),\n        mergeMap(\n            (title) => this.checkLibraryNameExists(title),\n            (title) => title\n        ),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((title: string) => {\n        if (!this.form.controls['id'].dirty && this.canGenerateId(title)) {\n          this.form.patchValue({ id: this.sanitize(title.trim()) });\n          this.form.controls['id'].markAsTouched();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  get title(): string {\n    const { title } = this.form.value;\n\n    return (title || '').trim();\n  }\n\n  get id(): string {\n    const { id } = this.form.value;\n\n    return (id || '').trim();\n  }\n\n  get description(): string {\n    const { description } = this.form.value;\n\n    return (description || '').trim();\n  }\n\n  get visibility(): string {\n    return this.visibilityOption || '';\n  }\n\n  submit() {\n    const { form, dialog } = this;\n\n    if (!form.valid) {\n      return;\n    }\n\n    this.create().subscribe(\n      (node: SiteEntry) => {\n        this.success.emit(node);\n        dialog.close(node);\n      },\n      (error) => this.handleError(error)\n    );\n  }\n\n  visibilityChangeHandler(event) {\n    this.visibilityOption = event.value;\n  }\n\n  private create(): Observable<SiteEntry> {\n    const { title, id, description, visibility } = this;\n    const siteBody = <SiteBodyCreate> {\n      id,\n      title,\n      description,\n      visibility\n    };\n\n    return from(this.alfrescoApiService.sitesApi.createSite(siteBody));\n  }\n\n  private sanitize(input: string) {\n    return input.replace(/[\\s\\s]+/g, '-').replace(/[^A-Za-z0-9-]/g, '');\n  }\n\n  private canGenerateId(title) {\n    return Boolean(title.replace(/[^A-Za-z0-9-]/g, '').length);\n  }\n\n  private handleError(error: any): any {\n    const {\n      error: { statusCode }\n    } = JSON.parse(error.message);\n\n    if (statusCode === 409) {\n      this.form.controls['id'].setErrors({\n        message: 'LIBRARY.ERRORS.CONFLICT'\n      });\n    }\n\n    return error;\n  }\n\n  private async checkLibraryNameExists(libraryTitle: string) {\n    let entries = [];\n\n    try {\n        entries = (await this.findLibraryByTitle(libraryTitle)).list.entries;\n    } catch {\n        entries = [];\n    }\n\n    if (entries.length) {\n      this.libraryTitleExists = entries[0].entry.title.toLowerCase() === libraryTitle.toLowerCase();\n    } else {\n      this.libraryTitleExists = false;\n    }\n  }\n\n  private async findLibraryByTitle(libraryTitle: string): Promise<SitePaging> {\n    return this.alfrescoApiService\n      .getInstance()\n      .core.queriesApi.findSites(libraryTitle, {\n        maxItems: 1,\n        fields: ['title']\n      });\n  }\n\n  private forbidSpecialCharacters({ value }: FormControl) {\n    if (value === null || value.length === 0) {\n      return null;\n    }\n\n    const validCharacters: RegExp = /[^A-Za-z0-9-]/;\n    const isValid: boolean = !validCharacters.test(value);\n\n    return isValid\n      ? null\n      : {\n          message: 'LIBRARY.ERRORS.ILLEGAL_CHARACTERS'\n        };\n  }\n\n  private forbidOnlySpaces({ value }: FormControl) {\n    if (value === null || value.length === 0) {\n      return null;\n    }\n\n    const isValid: boolean = !!(value || '').trim();\n\n    return isValid\n      ? null\n      : {\n          message: 'LIBRARY.ERRORS.ONLY_SPACES'\n        };\n  }\n\n  private createSiteIdValidator() {\n    let timer;\n\n    return (control: AbstractControl) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return new Promise((resolve) => {\n        timer = setTimeout(() => {\n          return from(\n            this.alfrescoApiService.sitesApi.getSite(control.value)\n          ).subscribe(\n            () => resolve({ message: 'LIBRARY.ERRORS.EXISTENT_SITE' }),\n            () => resolve(null)\n          );\n        }, 300);\n      });\n    };\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { FolderDialogComponent } from './folder.dialog';\nimport { NodeLockDialogComponent } from './node-lock.dialog';\nimport { ConfirmDialogComponent } from './confirm.dialog';\nimport { MatDatetimepickerModule } from '@mat-datetimepicker/core';\nimport { MatMomentDatetimeModule } from '@mat-datetimepicker/moment';\nimport { LibraryDialogComponent } from './library/library.dialog';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        MatMomentDatetimeModule,\n        MatDatetimepickerModule\n    ],\n    declarations: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ],\n    exports: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ],\n    entryComponents: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { Node } from '@alfresco/js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Parent folder where the new folder will be located after creation. */\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    /** Title of folder creation dialog. */\n    @Input()\n    title: string = null;\n\n    /** Type of node to create. */\n    @Input()\n    nodeType = 'cm:folder';\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the folder is created successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId, title: createTitle, nodeType } = this;\n\n        return {\n            data: { parentNodeId, createTitle, nodeType },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: Node) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: Node) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { Node } from '@alfresco/js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Folder node to edit. */\n    @Input('adf-edit-folder')\n    folder: Node;\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Title of folder edit dialog. */\n    @Input()\n    title: string = null;\n\n    /** Emitted when the folder has been edited successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: {\n                folder,\n                editTitle: this.title\n            },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: Node) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: Node) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n})\nexport class FolderDirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-content-metadata-card',\n    templateUrl: './content-metadata-card.component.html',\n    styleUrls: ['./content-metadata-card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-metadata-card' }\n})\nexport class ContentMetadataCardComponent implements OnChanges {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: Node;\n\n    /** (optional) This flag displays/hides empty metadata\n     * fields.\n     */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** (optional) This flag displays desired aspect when open for the first time\n     * fields.\n     */\n    @Input()\n    displayAspect: string = null;\n\n    /** (required) Name of the metadata preset, which defines aspects\n     * and their properties.\n     */\n    @Input()\n    preset: string;\n\n    /** (optional) This flag sets the metadata in read only mode\n     * preventing changes.\n     */\n    @Input()\n    readOnly = false;\n\n    /** (optional) This flag allows the component to display more\n     * than one accordion at a time.\n     */\n    @Input()\n    multi = false;\n\n    private _displayDefaultProperties: boolean = true;\n\n    /** (optional) This flag displays/hides the metadata\n     * properties.\n     */\n    @Input()\n    set displayDefaultProperties(value: boolean) {\n        this._displayDefaultProperties = value;\n        this.onDisplayDefaultPropertiesChange();\n    }\n\n    get displayDefaultProperties(): boolean {\n        return this._displayDefaultProperties;\n    }\n\n    editable: boolean = false;\n\n    expanded: boolean;\n\n    constructor(private contentService: ContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.displayAspect && changes.displayAspect.currentValue) {\n            this.expanded = true;\n        }\n    }\n\n    onDisplayDefaultPropertiesChange(): void {\n        this.expanded = !this._displayDefaultProperties;\n    }\n\n    toggleEdit(): void {\n        this.editable = !this.editable;\n    }\n\n    toggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n\n    hasAllowableOperations() {\n        return this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.UPDATE);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BasicPropertiesService {\n\n    constructor(private fileSizePipe: FileSizePipe) {\n    }\n\n    getProperties(node: Node) {\n\n        const sizeInBytes = node.content ? node.content.sizeInBytes : '',\n            mimeTypeName = node.content ? node.content.mimeTypeName : '',\n            author = node.properties ? node.properties['cm:author'] : '',\n            description = node.properties ? node.properties['cm:description'] : '',\n            title = node.properties ? node.properties['cm:title'] : '';\n\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: title,\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: author,\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: description,\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    CardViewItemProperties,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewDatetimeItemModel,\n    CardViewIntItemModel,\n    CardViewFloatItemModel,\n    LogService,\n    MultiValuePipe,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { Property, CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\n\nconst D_TEXT = 'd:text';\nconst D_MLTEXT = 'd:mltext';\nconst D_DATE = 'd:date';\nconst D_DATETIME = 'd:datetime';\nconst D_INT = 'd:int';\nconst D_LONG = 'd:long';\nconst D_FLOAT = 'd:float';\nconst D_DOUBLE = 'd:double';\nconst D_BOOLEAN = 'd:boolean';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropertyGroupTranslatorService {\n\n    static readonly RECOGNISED_ECM_TYPES = [D_TEXT, D_MLTEXT, D_DATE, D_DATETIME, D_INT, D_LONG, D_FLOAT, D_DOUBLE, D_BOOLEAN];\n\n    valueSeparator: string;\n\n    constructor(private logService: LogService,\n                private multiValuePipe: MultiValuePipe,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator');\n    }\n\n    public translateToCardViewGroups(propertyGroups: OrganisedPropertyGroup[], propertyValues): CardViewGroup[] {\n        return propertyGroups.map((propertyGroup) => {\n            const translatedPropertyGroup: any = Object.assign({}, propertyGroup);\n            translatedPropertyGroup.properties = this.translateArray(propertyGroup.properties, propertyValues);\n            return translatedPropertyGroup;\n        });\n    }\n\n    private translateArray(properties: Property[], propertyValues: any): CardViewItem[] {\n        return properties.map((property) => {\n            return this.translate(property, propertyValues);\n        });\n    }\n\n    private translate(property: Property, propertyValues: any): CardViewItem {\n        let propertyValue;\n        if (propertyValues && propertyValues[property.name]) {\n            propertyValue = propertyValues[property.name];\n        }\n\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        const propertyDefinition: CardViewItemProperties = {\n            label: property.title || property.name,\n            value: propertyValue,\n            key: `${prefix}${property.name}`,\n            default: property.defaultValue,\n            editable: true\n        };\n        let cardViewItemProperty;\n\n        switch (property.dataType) {\n\n            case D_MLTEXT:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: true\n                }));\n                break;\n\n            case D_INT:\n            case D_LONG:\n                cardViewItemProperty = new CardViewIntItemModel(propertyDefinition);\n                break;\n\n            case D_FLOAT:\n            case D_DOUBLE:\n                cardViewItemProperty = new CardViewFloatItemModel(propertyDefinition);\n                break;\n\n            case D_DATE:\n                cardViewItemProperty = new CardViewDateItemModel(propertyDefinition);\n                break;\n\n            case D_DATETIME:\n                cardViewItemProperty = new CardViewDatetimeItemModel(propertyDefinition);\n                break;\n\n            case D_BOOLEAN:\n                cardViewItemProperty = new CardViewBoolItemModel(propertyDefinition);\n                break;\n\n            case D_TEXT:\n            default:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multivalued: property.multiValued,\n                    multiline: property.multiValued,\n                    pipes: [{ pipe: this.multiValuePipe, params: [this.valueSeparator]}]\n                }));\n        }\n\n        return cardViewItemProperty;\n    }\n\n    private checkECMTypeValidity(ecmPropertyType) {\n        if (PropertyGroupTranslatorService.RECOGNISED_ECM_TYPES.indexOf(ecmPropertyType) === -1) {\n            this.logService.error(`Unknown type for mapping: ${ecmPropertyType}`);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyGroup, Property, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\n\nconst emptyGroup = {\n    properties: {}\n};\n\nfunction convertObjectToArray(object: any): Property[] {\n    return Object.keys(object).map((key) => object[key]);\n}\n\nexport function getGroup(propertyGroups: PropertyGroupContainer, groupName: string): PropertyGroup | undefined {\n    return propertyGroups[groupName];\n}\n\nexport function getProperty(propertyGroups: PropertyGroupContainer, groupName: string, propertyName: string): Property | Property[] | undefined {\n    const groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;\n    let propertyDefinitions;\n\n    if (propertyName === '*') {\n        propertyDefinitions = convertObjectToArray(groupDefinition.properties);\n    } else {\n        propertyDefinitions = groupDefinition.properties[propertyName];\n    }\n\n    return propertyDefinitions;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\nimport { getGroup, getProperty } from './property-group-reader';\n\nexport class AspectOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) { }\n\n    public isGroupAllowed(groupName: string): boolean {\n        if (this.isIncludeAllEnabled()) {\n            return true;\n        }\n        const groupNames = Object.keys(this.config);\n        return groupNames.indexOf(groupName) !== -1;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const aspects = this.config,\n            aspectNames = Object.keys(aspects);\n\n        return aspectNames\n            .reduce((groupAccumulator, aspectName) => {\n                const newGroup = this.getOrganisedPropertyGroup(propertyGroups, aspectName);\n                return groupAccumulator.concat(newGroup);\n            }, [])\n            .filter((organisedPropertyGroup) => organisedPropertyGroup.properties.length > 0);\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const groups =  Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n\n        return groups;\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        if (this.config.exclude) {\n            return propertyGroups.filter((preset) => {\n                return !this.config.exclude.includes(preset.name);\n            });\n        }\n        return propertyGroups;\n    }\n\n    public isIncludeAllEnabled() {\n        return this.config.includeAll;\n    }\n\n    private getOrganisedPropertyGroup(propertyGroups, aspectName) {\n        const group = getGroup(propertyGroups, aspectName);\n        let newGroup = [];\n\n        if (group) {\n            const aspectProperties = this.config[aspectName];\n            let properties;\n\n            if (aspectProperties === '*') {\n                properties = getProperty(propertyGroups, aspectName, aspectProperties);\n            } else {\n                properties = (<string[]> aspectProperties)\n                    .map((propertyName) => getProperty(propertyGroups, aspectName, propertyName))\n                    .filter((props) => props !== undefined);\n            }\n\n            newGroup = [{ title: group.title, properties }];\n        }\n\n        return newGroup;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\n\nexport class IndifferentConfigService implements ContentMetadataConfig {\n\n    constructor(config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return true;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        return propertyGroups;\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return[];\n    }\n\n    public isIncludeAllEnabled(): boolean {\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentMetadataConfig,\n    LayoutOrientedConfigItem,\n    OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\nimport { getProperty } from './property-group-reader';\n\nexport class LayoutOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) { }\n\n    public isGroupAllowed(groupName: string): boolean {\n        if (this.isIncludeAllEnabled()) {\n            return true;\n        }\n        return this.getMatchingGroups(groupName).length > 0;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const layoutBlocks = this.config.filter((itemsGroup) => itemsGroup.items);\n\n        const organisedPropertyGroup = layoutBlocks.map((layoutBlock) => {\n            const flattenedItems = this.flattenItems(layoutBlock.items),\n                properties = flattenedItems.reduce((props, explodedItem) => {\n                    const property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];\n                    return props.concat(property);\n                }, []);\n\n            return {\n                title: layoutBlock.title,\n                properties\n            };\n        });\n\n        return organisedPropertyGroup;\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        let excludedConfig = this.config\n            .map((config) => config.exclude)\n            .find((exclude) => exclude !== undefined);\n\n        if (excludedConfig === undefined) {\n            excludedConfig = [];\n        } else if (typeof excludedConfig === 'string') {\n            excludedConfig = [excludedConfig];\n        }\n\n        return propertyGroups.filter((props) => {\n            return !excludedConfig.includes(props.name);\n        });\n    }\n\n    public isIncludeAllEnabled() {\n        const includeAllProperty = this.config\n            .map((config) => config.includeAll)\n            .find((includeAll) => includeAll !== undefined);\n\n        return includeAllProperty !== undefined ? includeAllProperty : false;\n    }\n\n    private flattenItems(items) {\n        return items.reduce((accumulator, item) => {\n            const properties = Array.isArray(item.properties) ? item.properties : [item.properties];\n            const flattenedProperties = properties.map((propertyName) => {\n                return {\n                    groupName: item.aspect || item.type,\n                    propertyName\n                };\n            });\n\n            return accumulator.concat(flattenedProperties);\n        }, []);\n    }\n\n    private getMatchingGroups(groupName: string): LayoutOrientedConfigItem[] {\n        return this.config\n            .map((layoutBlock) => layoutBlock.items)\n            .reduce((accumulator, items) => accumulator.concat(items), [])\n            .filter((item) => item.aspect === groupName || item.type === groupName);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, LogService } from '@alfresco/adf-core';\nimport { AspectOrientedConfigService } from './aspect-oriented-config.service';\nimport { IndifferentConfigService } from './indifferent-config.service';\nimport { LayoutOrientedConfigService } from './layout-oriented-config.service';\nimport {\n    PresetConfig,\n    ContentMetadataConfig,\n    AspectOrientedConfig,\n    InDifferentConfig,\n    LayoutOrientedConfig\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentMetadataConfigFactory {\n\n    static readonly INDIFFERENT_PRESET = '*';\n    static readonly DEFAULT_PRESET_NAME = 'default';\n\n    constructor(private appConfigService: AppConfigService, private logService: LogService) {}\n\n    public get(presetName: string = 'default'): ContentMetadataConfig {\n        let presetConfig;\n        try {\n            presetConfig = this.appConfigService.config['content-metadata'].presets[presetName];\n        } catch {\n            if (presetName !== ContentMetadataConfigFactory.DEFAULT_PRESET_NAME) {\n                this.logService.error(`No content-metadata preset for: ${presetName}`);\n            }\n            presetConfig = ContentMetadataConfigFactory.INDIFFERENT_PRESET;\n        }\n\n        return this.createConfig(presetConfig);\n    }\n\n    private createConfig(presetConfig: PresetConfig): ContentMetadataConfig {\n        let config: ContentMetadataConfig;\n\n        if (this.isLayoutOrientedPreset(presetConfig)) {\n            config = new LayoutOrientedConfigService(<LayoutOrientedConfig> presetConfig);\n        } else if (this.isAspectOrientedPreset(presetConfig)) {\n            config = new AspectOrientedConfigService(<AspectOrientedConfig> presetConfig);\n        } else {\n            config = new IndifferentConfigService(<InDifferentConfig> presetConfig);\n        }\n\n        Object.freeze(config);\n        return config;\n    }\n\n    private isAspectOrientedPreset(presetConfig: PresetConfig): boolean {\n        return this.isObject(presetConfig);\n    }\n\n    private isLayoutOrientedPreset(presetConfig: PresetConfig): boolean {\n        return Array.isArray(presetConfig);\n    }\n\n    private isObject(x) {\n        return x != null && typeof x === 'object';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Observable, defer, forkJoin } from 'rxjs';\nimport { PropertyGroup, PropertyGroupContainer } from '../interfaces/content-metadata.interfaces';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropertyDescriptorsService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    load(groupNames: string[]): Observable<PropertyGroupContainer> {\n        const groupFetchStreams = groupNames\n            .map((groupName) => groupName.replace(':', '_'))\n            .map((groupName) => defer( () => this.alfrescoApiService.classesApi.getClass(groupName)) );\n\n        return forkJoin(groupFetchStreams).pipe(\n            map(this.convertToObject)\n        );\n    }\n\n    private convertToObject(propertyGroupsArray: PropertyGroup[]): PropertyGroupContainer {\n        return propertyGroupsArray.reduce((propertyGroups, propertyGroup) => {\n            return Object.assign({}, propertyGroups, {\n                [propertyGroup.name]: propertyGroup\n            });\n        }, {});\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { BasicPropertiesService } from './basic-properties.service';\nimport { Observable, of, iif } from 'rxjs';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nimport { CardViewItem } from '@alfresco/adf-core';\nimport { CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\nimport { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';\nimport { PropertyDescriptorsService } from './property-descriptors.service';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentMetadataService {\n\n    constructor(private basicPropertiesService: BasicPropertiesService,\n                private contentMetadataConfigFactory: ContentMetadataConfigFactory,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService,\n                private propertyDescriptorsService: PropertyDescriptorsService) {\n    }\n\n    getBasicProperties(node: Node): Observable<CardViewItem[]> {\n        return of(this.basicPropertiesService.getProperties(node));\n    }\n\n    getGroupedProperties(node: Node, presetName: string = 'default'): Observable<CardViewGroup[]> {\n        let groupedProperties = of([]);\n\n        if (node.aspectNames) {\n            const contentMetadataConfig = this.contentMetadataConfigFactory.get(presetName),\n                groupNames = node.aspectNames\n                    .concat(node.nodeType)\n                    .filter((groupName) => contentMetadataConfig.isGroupAllowed(groupName));\n\n            if (groupNames.length > 0) {\n                groupedProperties = this.propertyDescriptorsService.load(groupNames).pipe(\n                    switchMap((groups) =>\n                        iif(\n                            () => contentMetadataConfig.isIncludeAllEnabled(),\n                            of(contentMetadataConfig.appendAllPreset(groups).concat(contentMetadataConfig.reorganiseByConfig(groups))),\n                            of(contentMetadataConfig.reorganiseByConfig(groups))\n                        )),\n                    map((groups) => contentMetadataConfig.filterExcludedPreset(groups)),\n                    map((groups) => this.filterEmptyPreset(groups)),\n                    map((groups) => this.setTitleToNameIfNotSet(groups)),\n                    map((groups) => this.propertyGroupTranslatorService.translateToCardViewGroups(groups, node.properties))\n                );\n            }\n        }\n\n        return groupedProperties;\n    }\n\n    setTitleToNameIfNotSet(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        propertyGroups.map((propertyGroup) => {\n            propertyGroup.title = propertyGroup.title || propertyGroup.name;\n        });\n        return propertyGroups;\n    }\n\n    filterEmptyPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[]  {\n        return propertyGroups.filter((props) => props.properties.length);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Observable, Subscription } from 'rxjs';\nimport { CardViewItem, NodesApiService, LogService, CardViewUpdateService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { ContentMetadataService } from '../../services/content-metadata.service';\nimport { CardViewGroup } from '../../interfaces/content-metadata.interfaces';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-content-metadata',\n    templateUrl: './content-metadata.component.html',\n    styleUrls: ['./content-metadata.component.scss'],\n    host: { 'class': 'adf-content-metadata' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentMetadataComponent implements OnChanges, OnInit, OnDestroy {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: Node;\n\n    /** Toggles whether the edit button should be shown */\n    @Input()\n    editable: boolean = false;\n\n    /** Toggles whether to display empty values in the card view */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** Toggles between expanded (ie, full information) and collapsed\n     * (ie, reduced information) in the display\n     */\n    @Input()\n    expanded: boolean = false;\n\n    /** The multi parameter of the underlying material expansion panel, set to true to allow multi accordion to be expanded at the same time */\n    @Input()\n    multi = false;\n\n    /** Name of the metadata preset, which defines aspects and their properties */\n    @Input()\n    preset: string;\n\n    /** Toggles whether the metadata properties should be shown */\n    @Input()\n    displayDefaultProperties: boolean = true;\n\n    /** (Optional) shows the given aspect in the expanded  card */\n    @Input()\n    displayAspect: string = null;\n\n    basicProperties$: Observable<CardViewItem[]>;\n    groupedProperties$: Observable<CardViewGroup[]>;\n    disposableNodeUpdate: Subscription;\n\n    constructor(\n        private contentMetadataService: ContentMetadataService,\n        private cardViewUpdateService: CardViewUpdateService,\n        private nodesApiService: NodesApiService,\n        private logService: LogService,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.disposableNodeUpdate =  this.cardViewUpdateService.itemUpdated$\n            .pipe(\n                switchMap(this.saveNode.bind(this))\n            )\n            .subscribe(\n                (updatedNode) => {\n                    Object.assign(this.node, updatedNode);\n                    this.alfrescoApiService.nodeUpdated.next(this.node);\n                },\n                (error) => this.logService.error(error)\n            );\n\n        this.loadProperties(this.node);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node && !changes.node.firstChange) {\n            this.loadProperties(changes.node.currentValue);\n        }\n    }\n\n    private loadProperties(node: Node) {\n        if (node) {\n            this.basicProperties$ = this.contentMetadataService.getBasicProperties(node);\n            this.groupedProperties$ = this.contentMetadataService.getGroupedProperties(node, this.preset);\n        }\n    }\n\n    private saveNode({ changed: nodeBody }): Observable<Node> {\n        return this.nodesApiService.updateNode(this.node.id, nodeBody);\n    }\n\n    showGroup(group: CardViewGroup) {\n        const properties = group.properties.filter((property) => {\n            return !!property.displayValue;\n        });\n\n        return properties.length;\n    }\n\n    ngOnDestroy() {\n        this.disposableNodeUpdate.unsubscribe();\n    }\n\n    public canExpandTheCard(group: CardViewGroup): boolean {\n        return group.title === this.displayAspect;\n    }\n\n    public canExpandProperties(): boolean {\n        return !this.expanded || this.displayAspect === 'Properties';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentMetadataComponent } from './components/content-metadata/content-metadata.component';\nimport { ContentMetadataCardComponent } from './components/content-metadata-card/content-metadata-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n})\nexport class ContentMetadataModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionElement } from '@alfresco/js-api';\n\nexport class PermissionDisplayModel implements PermissionElement {\n\n    authorityId?: string;\n    name?: string;\n    accessStatus?: PermissionElement.AccessStatusEnum;\n    isInherited: boolean = false;\n    icon: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.authorityId = obj.authorityId;\n            this.name = obj.name;\n            this.accessStatus = obj.accessStatus;\n            this.isInherited = obj.isInherited !== null && obj.isInherited !== undefined ? obj.isInherited : false;\n            this.icon = obj.icon ? obj.icon : 'vpn_key';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, from, throwError } from 'rxjs';\nimport { AlfrescoApiService, SearchService, NodesApiService, TranslationService } from '@alfresco/adf-core';\nimport { QueryBody, Node, NodeEntry, PathElement, GroupMemberEntry, GroupMemberPaging, PermissionElement } from '@alfresco/js-api';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodePermissionService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchApiService: SearchService,\n                private nodeService: NodesApiService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Gets a list of roles for the current node.\n     * @param node The target node\n     * @returns Array of strings representing the roles\n     */\n    getNodeRoles(node: Node): Observable<string[]> {\n        const retrieveSiteQueryBody: QueryBody = this.buildRetrieveSiteQueryBody(node.path.elements);\n        return this.searchApiService.searchByQueryBody(retrieveSiteQueryBody)\n            .pipe(\n                switchMap((siteNodeList: any) => {\n                    if ( siteNodeList.list.entries.length > 0 ) {\n                        const siteName = siteNodeList.list.entries[0].entry.name;\n                        return this.getGroupMembersBySiteName(siteName);\n                    } else {\n                        return of(node.permissions.settable);\n                    }\n                })\n            );\n    }\n\n    /**\n     * Updates the permission role for a node.\n     * @param node Target node\n     * @param updatedPermissionRole Permission role to update or add\n     * @returns Node with updated permission\n     */\n    updatePermissionRole(node: Node, updatedPermissionRole: PermissionElement): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: []} };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(updatedPermissionRole.authorityId);\n        permissionBody.permissions.locallySet = permissionBody.permissions.locallySet.concat(node.permissions.locallySet);\n        if (index !== -1) {\n            permissionBody.permissions.locallySet[index] = updatedPermissionRole;\n        } else {\n            permissionBody.permissions.locallySet.push(updatedPermissionRole);\n        }\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * Update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param permissionList New permission settings\n     * @returns Node with updated permissions\n     */\n    updateNodePermissions(nodeId: string, permissionList: NodeEntry[]): Observable<Node> {\n       return this.nodeService.getNode(nodeId).pipe(\n           switchMap((node) => {\n                return this.getNodeRoles(node).pipe(\n                    switchMap((nodeRoles) => of({node, nodeRoles}) )\n                );\n            }),\n            switchMap(({node, nodeRoles}) => this.updateLocallySetPermissions(node, permissionList, nodeRoles))\n        );\n    }\n\n    /**\n     * Updates the locally set permissions for a node.\n     * @param node ID of the target node\n     * @param nodes Permission settings\n     * @param nodeRole Permission role\n     * @returns Node with updated permissions\n     */\n    updateLocallySetPermissions(node: Node, nodes: NodeEntry[], nodeRole: string[]): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: []} };\n        const permissionList = this.transformNodeToPermissionElement(nodes, nodeRole[0]);\n        const duplicatedPermissions = this.getDuplicatedPermissions(node.permissions.locallySet, permissionList);\n        if (duplicatedPermissions.length > 0) {\n            const list = duplicatedPermissions.map((permission) => 'authority -> ' + permission.authorityId + ' / role -> ' + permission.name).join(', ');\n            const duplicatePermissionMessage: string = this.translation.instant('PERMISSION_MANAGER.ERROR.DUPLICATE-PERMISSION',  {list});\n            return throwError(duplicatePermissionMessage);\n        }\n        permissionBody.permissions.locallySet = node.permissions.locallySet ? node.permissions.locallySet.concat(permissionList) : permissionList;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    private getDuplicatedPermissions(nodeLocallySet: PermissionElement[], permissionListAdded: PermissionElement[]): PermissionElement[] {\n        const duplicatePermissions: PermissionElement[] = [];\n        if (nodeLocallySet) {\n            permissionListAdded.forEach((permission: PermissionElement) => {\n                const duplicate = nodeLocallySet.find((localPermission) => this.isEqualPermission(localPermission, permission));\n                if (duplicate) {\n                    duplicatePermissions.push(duplicate);\n                }\n            });\n        }\n        return duplicatePermissions;\n    }\n\n    private isEqualPermission(oldPermission: PermissionElement, newPermission: PermissionElement): boolean {\n        return oldPermission.accessStatus === newPermission.accessStatus &&\n               oldPermission.authorityId === newPermission.authorityId &&\n               oldPermission.name === newPermission.name;\n    }\n\n    private transformNodeToPermissionElement(nodes: NodeEntry[], nodeRole: any): PermissionElement[] {\n        return nodes.map((node) => {\n            const newPermissionElement: PermissionElement = <PermissionElement> {\n                'authorityId': node.entry.properties['cm:authorityName'] ?\n                    node.entry.properties['cm:authorityName'] :\n                    node.entry.properties['cm:userName'],\n                'name': nodeRole,\n                'accessStatus': 'ALLOWED'\n            };\n            return newPermissionElement;\n        });\n    }\n\n    /**\n     * Removes a permission setting from a node.\n     * @param node ID of the target node\n     * @param permissionToRemove Permission setting to remove\n     * @returns Node with modified permissions\n     */\n    removePermission(node: Node, permissionToRemove: PermissionElement): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: [] } };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(permissionToRemove.authorityId);\n        if (index !== -1) {\n            node.permissions.locallySet.splice(index, 1);\n            permissionBody.permissions.locallySet = node.permissions.locallySet;\n            return this.nodeService.updateNode(node.id, permissionBody);\n        }\n    }\n\n    private getGroupMembersBySiteName(siteName: string): Observable<string[]> {\n        const groupName = 'GROUP_site_' + siteName;\n        return this.getGroupMemberByGroupName(groupName)\n            .pipe(\n                map((groupMemberPaging: GroupMemberPaging) => {\n                    const displayResult: string[] = [];\n                    groupMemberPaging.list.entries.forEach((member: GroupMemberEntry) => {\n                        displayResult.push(this.formattedRoleName(member.entry.displayName, 'site_' + siteName));\n                    });\n                    return displayResult;\n                })\n            );\n    }\n\n    /**\n     * Gets all members related to a group name.\n     * @param groupName Name of group to look for members\n     * @param opts Extra options supported by JS-API\n     * @returns List of members\n     */\n    getGroupMemberByGroupName(groupName: string, opts?: any): Observable<GroupMemberPaging> {\n        return from(this.apiService.groupsApi.getGroupMembers(groupName, opts));\n    }\n\n    private formattedRoleName(displayName, siteName): string {\n        return displayName.replace(siteName + '_', '');\n    }\n\n    private buildRetrieveSiteQueryBody(nodePath: PathElement[]): QueryBody {\n        const pathNames = nodePath.map((node: PathElement) => 'name: \"' + node.name + '\"');\n        const buildedPathNames = pathNames.join(' OR ');\n        return {\n            'query': {\n                'query': buildedPathNames\n            },\n            'paging': {\n                'maxItems': 100,\n                'skipCount': 0\n            },\n            'include': ['aspectNames', 'properties'],\n            'filterQueries': [\n                {\n                    'query':\n                        \"TYPE:'st:site'\"\n                }\n            ]\n        };\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Node, PermissionElement } from '@alfresco/js-api';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\n\n@Component({\n    selector: 'adf-permission-list',\n    templateUrl: './permission-list.component.html',\n    styleUrls: ['./permission-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PermissionListComponent implements OnInit {\n\n    /** ID of the node whose permissions you want to show. */\n    @Input()\n    nodeId: string = '';\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    update: EventEmitter<PermissionElement> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    permissionList: PermissionDisplayModel[];\n    settableRoles: any[];\n    actualNode: Node;\n\n    constructor(private nodeService: NodesApiService,\n                private nodePermissionService: NodePermissionService) {\n\n    }\n\n    ngOnInit() {\n        this.fetchNodePermissions();\n    }\n\n    reload() {\n        this.fetchNodePermissions();\n    }\n\n    private fetchNodePermissions() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: Node) => {\n            this.actualNode = node;\n            this.permissionList = this.getPermissionList(node);\n            this.nodePermissionService.getNodeRoles(node).subscribe((settableList: string[]) => {\n                this.settableRoles = settableList;\n            });\n        });\n    }\n\n    private getPermissionList(node: Node): PermissionDisplayModel[] {\n        const allPermissions: PermissionDisplayModel[] = [];\n        if (node.permissions.locallySet) {\n            node.permissions.locallySet.map((permissionElement: PermissionElement) => {\n                const permission = new PermissionDisplayModel(permissionElement);\n                allPermissions.push(permission);\n            });\n        }\n        if (node.permissions.inherited) {\n            node.permissions.inherited.map((permissionElement: PermissionElement) => {\n                const permissionInherited = new PermissionDisplayModel(permissionElement);\n                permissionInherited.isInherited = true;\n                allPermissions.push(permissionInherited);\n            });\n        }\n        return allPermissions;\n    }\n\n    saveNewRole(event: any, permissionRow: PermissionDisplayModel) {\n        const updatedPermissionRole: PermissionElement = this.buildUpdatedPermission(event.value, permissionRow);\n        this.nodePermissionService.updatePermissionRole(this.actualNode, updatedPermissionRole)\n            .subscribe((node: Node) => {\n                this.update.emit(updatedPermissionRole);\n            });\n    }\n\n    private buildUpdatedPermission(newRole: string, permissionRow: PermissionDisplayModel): PermissionElement {\n        const permissionRole: PermissionElement = {};\n        permissionRole.accessStatus = permissionRow.accessStatus;\n        permissionRole.name = newRole;\n        permissionRole.authorityId = permissionRow.authorityId;\n        return permissionRole;\n    }\n\n    removePermission(permissionRow: PermissionDisplayModel) {\n        this.nodePermissionService.removePermission(this.actualNode, permissionRow).subscribe((node) => {\n            this.update.emit(node);\n        }, (error) => this.error.emit(error));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-no-permission-template',\n    template: '<ng-content></ng-content>'\n})\nexport class NoPermissionTemplateComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { NodesApiService, ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\n\n@Directive({\n    selector: 'button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]',\n    host: {\n        'role': 'button',\n        '(click)': 'onInheritPermissionClicked()'\n    }\n})\nexport class InheritPermissionDirective {\n\n    /** ID of the node to add/remove inherited permissions. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated. */\n    @Output()\n    updated: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private nodeService: NodesApiService,\n                private contentService: ContentService) {\n    }\n\n    onInheritPermissionClicked() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: Node) => {\n            if (this.contentService.hasAllowableOperations(node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n                const nodeBody = { permissions: { isInheritanceEnabled: !node.permissions.isInheritanceEnabled } };\n                this.nodeService.updateNode(this.nodeId, nodeBody, { include: ['permissions'] }).subscribe((nodeUpdated: Node) => {\n                    this.updated.emit(nodeUpdated);\n                }, (error) => this.error.emit(error));\n            } else {\n                this.error.emit('PERMISSION_MANAGER.ERROR.NOT-ALLOWED');\n            }\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { AddPermissionDialogData } from './add-permission-dialog-data.interface';\nimport { AddPermissionComponent } from '../add-permission/add-permission.component';\n\n@Component({\n    selector: 'adf-add-permission-dialog',\n    templateUrl: './add-permission-dialog.component.html',\n    styleUrls: ['./add-permission-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionDialogComponent {\n\n    @ViewChild('addPermission')\n    addPermissionComponent: AddPermissionComponent;\n\n    currentSelection: NodeEntry[] = [];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AddPermissionDialogData) {\n    }\n\n    onSelect(items: NodeEntry[]) {\n        this.currentSelection = items;\n    }\n\n    onAddClicked() {\n        this.data.confirm.next(this.currentSelection);\n        this.data.confirm.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { AddPermissionDialogComponent } from '../components/add-permission/add-permission-dialog.component';\nimport { AddPermissionDialogData } from '../components/add-permission/add-permission-dialog-data.interface';\nimport { NodeEntry, Node } from '@alfresco/js-api';\nimport { NodePermissionService } from './node-permission.service';\nimport { ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodePermissionDialogService {\n\n    constructor(private dialog: MatDialog,\n                private nodePermissionService: NodePermissionService,\n                private contentService: ContentService) {\n    }\n\n    /**\n     * Opens a dialog to add permissions to a node.\n     * @param node ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    openAddPermissionDialog(node: Node, title?: string): Observable<NodeEntry[]> {\n        if (this.contentService.hasAllowableOperations(node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            const confirm = new Subject<NodeEntry[]>();\n\n            confirm.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const data: AddPermissionDialogData = {\n                nodeId: node.id,\n                title: title,\n                confirm: confirm\n            };\n\n            this.openDialog(data, 'adf-add-permission-dialog', '630px');\n            return confirm;\n        } else {\n            const errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            errors.message = 'PERMISSION_MANAGER.ERROR.NOT-ALLOWED';\n            return throwError(errors);\n        }\n    }\n\n    private openDialog(data: any, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AddPermissionDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /**\n     * Closes the currently-open dialog.\n     */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    /**\n     * Opens a dialog to update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    updateNodePermissionByDialog(nodeId?: string, title?: string): Observable<Node> {\n        return this.contentService.getNode(nodeId, { include: ['allowableOperations'] })\n            .pipe(\n                switchMap((node) => {\n                    return this.openAddPermissionDialog(node.entry, title)\n                        .pipe(\n                            switchMap((selection) => {\n                                return this.nodePermissionService.updateNodePermissions(nodeId, selection);\n                            })\n                        );\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '@alfresco/adf-core';\n\nexport class SearchPermissionConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `authorityName:*${searchTerm}* OR userName:*${searchTerm}*` : searchTerm\n            },\n            include: ['properties', 'aspectNames'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                /*tslint:disable-next-line */\n                { query: \"TYPE:'cm:authority'\" }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { SearchPermissionConfigurationService } from './search-config-permission.service';\nimport { SearchService, SearchConfigurationService } from '@alfresco/adf-core';\nimport { SearchComponent } from '../../../search/components/search.component';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-add-permission-panel',\n    templateUrl: './add-permission-panel.component.html',\n    styleUrls: ['./add-permission-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },\n        SearchService\n    ]\n})\nexport class AddPermissionPanelComponent {\n\n    @ViewChild('search')\n    search: SearchComponent;\n\n    /** Emitted when a permission list item is selected. */\n    @Output()\n    select: EventEmitter<any> = new EventEmitter();\n\n    searchInput: FormControl = new FormControl();\n    searchedWord = '';\n    debounceSearch: number = 200;\n\n    selectedItems: NodeEntry[] = [];\n\n    EVERYONE: NodeEntry = new NodeEntry({ entry: { properties: {'cm:authorityName': 'GROUP_EVERYONE'}}});\n\n    constructor() {\n        this.searchInput.valueChanges\n        .pipe(\n            debounceTime(this.debounceSearch)\n        )\n        .subscribe((searchValue) => {\n            this.searchedWord = searchValue;\n            if (!searchValue) {\n                this.search.resetResults();\n            }\n        });\n    }\n\n    elementClicked(item: NodeEntry) {\n        if (this.isAlreadySelected(item)) {\n            this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n        } else {\n            this.selectedItems.push(item);\n        }\n        this.select.emit(this.selectedItems);\n    }\n\n    private isAlreadySelected(item: NodeEntry): boolean {\n        return this.selectedItems.indexOf(item) >= 0;\n    }\n\n    clearSearch() {\n        this.searchedWord = '';\n        this.selectedItems.splice(0, this.selectedItems.length);\n        this.search.resetResults();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { NodeEntry, Node } from '@alfresco/js-api';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { NodesApiService, ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-add-permission',\n    templateUrl: './add-permission.component.html',\n    styleUrls: ['./add-permission.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionComponent {\n\n    /** ID of the target node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter();\n\n    /** Emitted when an error occurs during the update. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    selectedItems: NodeEntry[] = [];\n    currentNode: Node;\n    currentNodeRoles: string[];\n\n    constructor(private nodePermissionService: NodePermissionService,\n                private nodeApiService: NodesApiService,\n                private contentService: ContentService) {\n        this.nodeApiService.getNode(this.nodeId).subscribe((node) => this.currentNode = node);\n    }\n\n    onSelect(selection: NodeEntry[]) {\n        this.selectedItems = selection;\n    }\n\n    isAddEnabled(): boolean {\n        return this.contentService.hasAllowableOperations(this.currentNode, AllowableOperationsEnum.UPDATEPERMISSIONS) &&\n                this.selectedItems.length !== 0;\n    }\n\n    applySelection() {\n        if (this.contentService.hasAllowableOperations(this.currentNode, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            this.nodePermissionService.updateNodePermissions(this.nodeId, this.selectedItems)\n                .subscribe(\n                    (node) => {\n                        this.success.emit(node);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n                    });\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { PermissionListComponent } from './components/permission-list/permission-list.component';\nimport { AddPermissionComponent } from './components/add-permission/add-permission.component';\nimport { AddPermissionDialogComponent } from './components/add-permission/add-permission-dialog.component';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { InheritPermissionDirective } from './components/inherited-button.directive';\nimport { NoPermissionTemplateComponent } from './components/permission-list/no-permission.component';\nimport { AddPermissionPanelComponent } from './components/add-permission/add-permission-panel.component';\nimport { SearchModule } from '../search/search.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        SearchModule\n    ],\n    declarations: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    entryComponents: [\n        AddPermissionPanelComponent,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    exports: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ]\n})\nexport class PermissionManagerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Inject,\n    OnInit,\n    ViewEncapsulation,\n    ViewChild,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef,  MatDialog } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { tap, skip } from 'rxjs/operators';\nimport {\n    SharedLinksApiService,\n    NodesApiService,\n    ContentService,\n    RenditionsService\n} from '@alfresco/adf-core';\nimport { SharedLinkEntry, Node } from '@alfresco/js-api';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-share-dialog',\n    templateUrl: './content-node-share.dialog.html',\n    styleUrls: ['./content-node-share.dialog.scss'],\n    host: { 'class': 'adf-share-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ShareDialogComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n\n    minDate = moment().add(1, 'd');\n    sharedId: string;\n    fileName: string;\n    baseShareUrl: string;\n    isFileShared: boolean = false;\n    isDisabled: boolean = false;\n    form: FormGroup = new FormGroup({\n        'sharedUrl': new FormControl(''),\n        'time': new FormControl({value: '', disabled: false})\n    });\n\n    @ViewChild('sharedLinkInput') sharedLinkInput: ElementRef;\n\n    constructor(\n        private sharedLinksApiService: SharedLinksApiService,\n        private dialogRef: MatDialogRef<ShareDialogComponent>,\n        private dialog: MatDialog,\n        private nodesApiService: NodesApiService,\n        private contentService: ContentService,\n        private renditionService: RenditionsService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n\n        if (!this.canUpdate) {\n            this.form.controls['time'].disable();\n        }\n\n        this.subscriptions.push(\n            this.form.valueChanges\n                .pipe(\n                    skip(1),\n                    tap((updates) => {\n                        this.updateNode(updates);\n                    })\n                )\n                .subscribe((updates) => this.updateEntryExpiryDate(updates))\n        );\n\n        if (this.data.node && this.data.node.entry) {\n            this.fileName = this.data.node.entry.name;\n            this.baseShareUrl = this.data.baseShareUrl;\n            const properties = this.data.node.entry.properties;\n\n            if (properties && !properties['qshare:sharedId']) {\n\n                this.createSharedLinks(this.data.node.entry.id);\n\n            } else {\n                this.sharedId = properties['qshare:sharedId'];\n                this.isFileShared = true;\n\n                this.updateForm();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe);\n    }\n\n    removeShare() {\n        this.deleteSharedLink(this.sharedId);\n    }\n\n    onSlideShareChange(event: any) {\n        if (event.checked) {\n            this.createSharedLinks(this.data.node.entry.id);\n        } else {\n            this.openConfirmationDialog();\n        }\n    }\n\n    get canUpdate() {\n        return this.contentService.hasAllowableOperations(this.data.node.entry, 'update');\n    }\n\n    private openConfirmationDialog() {\n        this.isFileShared = false;\n\n        this.dialog\n            .open(ConfirmDialogComponent, {\n                data: {\n                    title: 'SHARE.CONFIRMATION.DIALOG-TITLE',\n                    message: 'SHARE.CONFIRMATION.MESSAGE',\n                    yesLabel: 'SHARE.CONFIRMATION.REMOVE',\n                    noLabel: 'SHARE.CONFIRMATION.CANCEL'\n                },\n                minWidth: '250px',\n                closeOnNavigation: true\n            })\n            .beforeClose().subscribe((deleteSharedLink) => {\n                if (deleteSharedLink) {\n                    this.deleteSharedLink(this.sharedId);\n                } else {\n                    this.isFileShared = true;\n                }\n            });\n    }\n\n    private createSharedLinks(nodeId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.createSharedLinks(nodeId)\n            .subscribe((sharedLink: SharedLinkEntry) => {\n\n                if (sharedLink.entry) {\n                    this.sharedId = sharedLink.entry.id;\n                    this.data.node.entry.properties['qshare:sharedId'] = this.sharedId;\n                    this.isDisabled = false;\n                    this.isFileShared = true;\n                    this.renditionService.generateRenditionForNode(this.data.node.entry.id).subscribe(() => {});\n\n                    this.updateForm();\n                }\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private deleteSharedLink(sharedId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.deleteSharedLink(sharedId).subscribe(() => {\n                this.data.node.entry.properties['qshare:sharedId'] = null;\n                this.data.node.entry.properties['qshare:expiryDate'] = null;\n                this.dialogRef.close(false);\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private updateForm() {\n        const { entry } = this.data.node;\n        const expiryDate = entry.properties['qshare:expiryDate'];\n\n        this.form.setValue({\n            'sharedUrl': `${this.baseShareUrl}${this.sharedId}`,\n            'time': expiryDate ? expiryDate : null\n        });\n    }\n\n    private updateNode(updates): Observable<Node> {\n        return this.nodesApiService.updateNode(\n            this.data.node.entry.id,\n            {\n                properties: {\n                    'qshare:expiryDate': updates.time ? updates.time.utc().format() : null\n                }\n            }\n        );\n    }\n\n    private updateEntryExpiryDate(updates) {\n        const { properties } = this.data.node.entry;\n\n        properties['qshare:expiryDate'] = updates.time\n            ? updates.time.local()\n            : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, OnChanges, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { NodeEntry } from '@alfresco/js-api';\n\nimport { ShareDialogComponent } from './content-node-share.dialog';\n\n@Directive({\n    selector: '[adf-share]',\n    exportAs: 'adfShare'\n})\nexport class NodeSharedDirective implements OnChanges {\n\n    isFile: boolean = false;\n    isShared: boolean = false;\n\n    /** Node to share. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-share')\n    node: NodeEntry;\n\n    /** Prefix to add to the generated link. */\n    @Input()\n    baseShareUrl: string;\n\n    @HostListener('click')\n    onClick() {\n        if (this.node) {\n            this.shareNode(this.node);\n        }\n    }\n\n    constructor(private dialog: MatDialog, private zone: NgZone) {}\n\n    shareNode(nodeEntry: NodeEntry) {\n        if (nodeEntry && nodeEntry.entry && nodeEntry.entry.isFile) {\n            this.dialog.open(ShareDialogComponent, {\n                width: '600px',\n                panelClass: 'adf-share-link-dialog',\n                data: {\n                    node: nodeEntry,\n                    baseShareUrl: this.baseShareUrl\n                }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        this.zone.onStable.subscribe(() => {\n            if (this.node && this.node.entry) {\n                this.isFile = this.node.entry.isFile;\n                this.isShared = this.node.entry.properties['qshare:sharedId'];\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ShareDialogComponent } from './content-node-share.dialog';\nimport { NodeSharedDirective } from './content-node-share.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    exports: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    entryComponents: [\n        ShareDialogComponent\n    ]\n})\nexport class ContentNodeShareModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry } from '@alfresco/js-api';\n\nexport class TreeBaseNode {\n\n    name: string;\n    nodeId: string;\n    level: number;\n    expandable = true;\n    node: NodeEntry;\n\n    constructor(nodeEntry: NodeEntry, level?: number, expandable?: boolean) {\n        this.name = nodeEntry.entry.name;\n        this.nodeId = nodeEntry.entry.id;\n        this.level = level ? level : 0;\n        this.expandable = expandable ? expandable : true;\n        this.node = nodeEntry ? new NodeEntry(nodeEntry) : undefined;\n\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { NodePaging, NodeEntry } from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeViewService {\n\n    constructor(private nodeApi: NodesApiService) {\n    }\n\n    getTreeNodes(nodeId): Observable<TreeBaseNode[]> {\n        return this.nodeApi.getNodeChildren(nodeId)\n            .pipe(\n                map((nodePage: NodePaging) => {\n                    return nodePage.list.entries.filter((node) => node.entry.isFolder ? node : null);\n                }),\n                map((nodes: NodeEntry[]) => nodes.map((node) => new TreeBaseNode(node)))\n            );\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { TreeViewService } from '../services/tree-view.service';\n\n@Injectable()\nexport class TreeViewDataSource {\n\n    treeNodes: TreeBaseNode[];\n    dataChange = new BehaviorSubject<TreeBaseNode[]>([]);\n    childrenSubscription = null;\n    changeSubscription = null;\n\n    get data(): TreeBaseNode[] {\n        return this.treeNodes;\n    }\n\n    set data(value: TreeBaseNode[]) {\n        this.treeControl.dataNodes = value;\n        this.dataChange.next(value);\n    }\n\n    constructor(private treeControl: FlatTreeControl<TreeBaseNode>,\n                private treeViewService: TreeViewService) {\n        this.dataChange.subscribe((treeNodes) => this.treeNodes = treeNodes);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<TreeBaseNode[]> {\n        this.changeSubscription = this.treeControl.expansionModel.onChange.subscribe((change) => {\n            if ((change as SelectionChange<TreeBaseNode>).added &&\n                (change as SelectionChange<TreeBaseNode>).added.length > 0) {\n                this.expandTreeNodes(change as SelectionChange<TreeBaseNode>);\n            } else if ((change as SelectionChange<TreeBaseNode>).removed) {\n                this.reduceTreeNodes(change as SelectionChange<TreeBaseNode>);\n            }\n        });\n        return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        if (this.childrenSubscription) {\n            this.childrenSubscription.unsubscribe();\n        }\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n    }\n\n    private expandTreeNodes(change: SelectionChange<TreeBaseNode>) {\n        change.added.forEach((node) => this.expandNode(node));\n    }\n\n    private reduceTreeNodes(change: SelectionChange<TreeBaseNode>) {\n        change.removed.slice().reverse().forEach((node) => this.toggleNode(node));\n    }\n\n    private expandNode(node: TreeBaseNode) {\n        this.childrenSubscription = this.treeViewService.getTreeNodes(node.nodeId)\n            .subscribe((children) => {\n                const index = this.data.indexOf(node);\n                if (!children || index < 0) {\n                    node.expandable = false;\n                    return;\n                }\n                const nodes = children.map((actualNode) => {\n                    actualNode.level = node.level + 1;\n                    return actualNode;\n                });\n                this.data.splice(index + 1, 0, ...nodes);\n                this.dataChange.next(this.data);\n            });\n    }\n\n    toggleNode(node: TreeBaseNode) {\n        const index = this.data.indexOf(node);\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n            && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n        this.dataChange.next(this.data);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { TreeViewDataSource } from '../data/tree-view-datasource';\nimport { TreeViewService } from '../services/tree-view.service';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-tree-view-list',\n    templateUrl: 'tree-view.component.html',\n    styleUrls: ['tree-view.component.scss']\n})\n\nexport class TreeViewComponent implements OnChanges {\n\n    /** Identifier of the node to display. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a node in the tree view is clicked. */\n    @Output()\n    nodeClicked: EventEmitter<NodeEntry> = new EventEmitter();\n\n    /** Emitted when an invalid node id is given. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    treeControl: FlatTreeControl<TreeBaseNode>;\n    dataSource: TreeViewDataSource;\n\n    constructor(private treeViewService: TreeViewService) {\n        this.treeControl = new FlatTreeControl<TreeBaseNode>(this.getLevel, this.isExpandable);\n        this.dataSource = new TreeViewDataSource(this.treeControl, this.treeViewService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['nodeId'] && changes['nodeId'].currentValue &&\n            changes['nodeId'].currentValue !== changes['nodeId'].previousValue) {\n            this.loadTreeNode();\n        } else {\n            this.dataSource.data = [];\n        }\n    }\n\n    onNodeClicked(node: NodeEntry) {\n        this.nodeClicked.emit(node);\n    }\n\n    getLevel = (node: TreeBaseNode) => node.level;\n\n    isExpandable = (node: TreeBaseNode) => node.expandable;\n\n    hasChild = (level: number, nodeData: TreeBaseNode) => nodeData.expandable;\n\n    private loadTreeNode() {\n        this.treeViewService.getTreeNodes(this.nodeId)\n            .subscribe(\n                (treeNode: TreeBaseNode[]) => {\n                    this.dataSource.data = treeNode;\n                },\n                (error) => this.error.emit(error)\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { TreeViewComponent } from './components/tree-view.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        TreeViewComponent\n    ],\n    exports: [\n        TreeViewComponent\n    ]\n})\nexport class TreeViewModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { ContentNodeShareModule } from './content-node-share/content-node-share.module';\nimport { ContentDirectiveModule } from './directives/content-directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nimport { PermissionManagerModule } from './permission-manager/permission-manager.module';\nimport { TreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ]\n})\nexport class ContentModuleLazy {}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        }\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ]\n})\nexport class ContentModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-content-services',\n                        source: 'assets/adf-content-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentModuleLazy\n        };\n    }\n}\n"],"names":["MatButtonModule","MatChipsModule","MatDialogModule","MatIconModule","MatCardModule","MatInputModule","MatListModule","MatProgressSpinnerModule","MatProgressBarModule","MatRippleModule","MatMenuModule","MatOptionModule","MatExpansionModule","MatSelectModule","MatCheckboxModule","MatDatepickerModule","MatSlideToggleModule","MatRadioModule","MatSliderModule","MatTreeModule","NgModule","Observable","SearchRequest","catchError","SiteMemberPaging","from","map","of","tslib_1.__spread","throwError","Injectable","AlfrescoApiService","LogService","forkJoin","ContentService","Component","ViewEncapsulation","Inject","MAT_DIALOG_DATA","moment","NodeBodyLock","FormBuilder","MatDialogRef","Optional","EventEmitter","switchMap","Subject","AllowableOperationsEnum","MatDialog","SitesService","TranslationService","ThumbnailService","Output","Directive","ElementRef","Renderer2","Input","HostListener","CommonModule","RatingBody","TagBody","FormsModule","ReactiveFormsModule","CoreModule","ObjectDataTableAdapter","ObjectUtils","DataSorting","tslib_1.__extends","BaseEvent","Pagination","DisplayMode","BehaviorSubject","UserPreferenceValues","ObjectDataColumn","NgZone","AppConfigService","UserPreferencesService","LockService","ContentChild","DataColumnListComponent","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","CustomEmptyContentTemplateDirective","ViewChild","TemplateRef","NodeDownloadDirective","ChangeDetectionStrategy","Site","merge","FileUploadStatus","UploadService","ChangeDetectorRef","NodesApiService","FileModel","FileUtils","EXTENDIBLE_COMPONENT","forwardRef","NotificationService","Pipe","FlexLayoutModule","RequestSortDefinitionInner","debounceTime","SearchService","filter","trigger","state","style","transition","animate","AuthenticationService","ViewChildren","MatListItem","NG_VALUE_ACCESSOR","fromEvent","takeUntil","ESCAPE","ENTER","DOCUMENT","takeWhile","tslib_1.__values","Validators","FormControl","FormGroup","MOMENT_DATE_FORMATS","DateAdapter","MomentDateAdapter","MAT_DATE_LOCALE","MAT_DATE_FORMATS","ComponentFactoryResolver","ViewContainerRef","SiteEntry","SecurityContext","DomSanitizer","HighlightDirective","InfinitePaginationComponent","mergeMap","MatMomentDatetimeModule","MatDatetimepickerModule","CardViewTextItemModel","CardViewDateItemModel","FileSizePipe","CardViewIntItemModel","CardViewFloatItemModel","CardViewDatetimeItemModel","CardViewBoolItemModel","MultiValuePipe","defer","iif","CardViewUpdateService","NodeEntry","SearchConfigurationService","skip","tap","SharedLinksApiService","RenditionsService","FlatTreeControl","TranslateModule","TRANSLATION_PROVIDER"],"mappings":";;;;;;;;;;;;;;;AAyCA,aAAgB,OAAO;QACnB,OAAO;YACHA,wBAAe;YACfC,uBAAc;YACdC,wBAAe;YACfC,sBAAa;YACbC,sBAAa;YACbC,uBAAc;YACdC,sBAAa;YACbC,iCAAwB;YACxBC,6BAAoB;YACpBC,wBAAe;YACfC,sBAAa;YACbC,wBAAe;YACfC,2BAAkB;YAClBC,wBAAe;YACfC,0BAAiB;YACjBC,4BAAmB;YACnBC,6BAAoB;YACpBC,uBAAc;YACdC,wBAAe;YACfC,sBAAa;SAChB,CAAC;IACN,CAAC;AAED;QAAA;SAKC;;oBALAC,WAAQ,SAAC;wBACN,OAAO,EAAE,OAAO,EAAE;wBAClB,OAAO,EAAE,OAAO,EAAE;qBACrB;;QAED,qBAAC;KALD;;IClEA;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC/E,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AAEF,aAAgB,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AAED,IAAO,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;AAED,aAyBgB,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC/I,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;AAED,aAAgB,WAAW,CAAC,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;AAED,aAIgB,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAClE,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO;YACH,IAAI,EAAE;gBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;oBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;gBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;aAC3C;SACJ,CAAC;IACN,CAAC;AAED,aAAgB,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;AAED,aAAgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;;;;;;;;;;;;;;;;;;;;;;ICvHD;QAII,4BAAY,WAAsB,EAAE,QAAoB;YACpD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACL,yBAAC;IAAD,CAAC,IAAA;;;;;;;QCkBG,gCAAoB,UAA8B,EAC9B,UAAsB;YADtB,eAAU,GAAV,UAAU,CAAoB;YAC9B,eAAU,GAAV,UAAU,CAAY;YAHlC,sBAAiB,GAAG,QAAQ,CAAC;SAIpC;;;;;;;;;;;;;;;QASD,+CAAc;;;;;;;YAAd,UAAe,QAAgB,EAAE,UAA2B,EAAE,OAAkB;gBAAhF,iBAwEC;;oBAvES,aAAa,GAAG;oBAClB,gBAAgB;oBAChB,iBAAiB;oBACjB,sBAAsB;oBACtB,sBAAsB;oBACtB,4BAA4B;oBAC5B,mBAAmB;oBACnB,qBAAqB;oBACrB,qBAAqB;oBACrB,kBAAkB;oBAClB,oBAAoB;oBACpB,wBAAwB;oBACxB,kBAAkB;oBAClB,iBAAiB;oBACjB,uBAAuB;oBACvB,0BAA0B;oBAC1B,qBAAqB;oBACrB,kBAAkB;oBAClB,iBAAiB;oBACjB,0BAA0B;oBAC1B,kBAAkB;iBACrB;gBAED,OAAO,IAAIC,eAAU;;;mBAAC,UAAC,QAAQ;oBAC3B,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC;yBACxC,IAAI;;;mBAAC,UAAC,MAAmB;;4BACZ,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE;;4BAC1B,aAAa,GAAG;4BAClB,EAAE,KAAK,EAAE,8CAA8C,EAAE;4BACzD,EAAE,KAAK,EAAE,iBAAe,QAAQ,uBAAkB,QAAU,EAAE;4BAC9D,EAAE,KAAK,EAAE,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;yBACzC;wBAED,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC/B,aAAa,CAAC,IAAI,CAAC;gCACf,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE;6BACxB,CAAC,CAAC;yBACN;;4BAEK,KAAK,GAAkB,IAAIC,mBAAa,CAAC;4BAC3C,KAAK,EAAE;gCACH,KAAK,EAAE,GAAG;gCACV,QAAQ,EAAE,MAAM;6BACnB;4BACD,aAAa,eAAA;4BACb,OAAO,EAAE,CAAC,MAAM,EAAE,YAAY,EAAE,qBAAqB,CAAC;4BACtD,IAAI,EAAE,CAAC;oCACH,IAAI,EAAE,OAAO;oCACb,KAAK,EAAE,aAAa;oCACpB,SAAS,EAAE,KAAK;iCACnB,CAAC;4BACF,MAAM,EAAE;gCACJ,QAAQ,EAAE,UAAU,CAAC,QAAQ;gCAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;6BAClC;yBACJ,CAAC;wBACF,OAAO,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;6BACzC,IAAI;;;uBAAC,UAAC,YAAY;4BACX,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;4BAC5B,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACvB;;;2BACD,UAAC,GAAG;4BACA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;yBACvB,EAAC,CAAC;qBACd;;;uBACD,UAAC,GAAG;wBACA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB,EAAC,CAAC;iBACd,EAAC,CAAC,IAAI,CAACC,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aACvD;;;;;;;;;;;;;QAQD,8CAAa;;;;;;YAAb,UAAc,UAA2B,EAAE,aAA4B;gBAAvE,iBAsCC;gBAtC0C,8BAAA;oBAAA,kBAA4B;;;oBAC7D,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;;oBAE5D,OAAO,GAAG;oBACZ,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;oBAC/B,KAAK,EAAE,gDAAgD;oBACvD,OAAO,EAAE,oBAAoB;iBAChC;gBAED,OAAO,IAAIF,eAAU;;;mBAAC,UAAC,QAAQ;oBAC3B,KAAI,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;yBACrD,IAAI;;;mBAAC,UAAC,MAAsB;;4BACf,IAAI,GAAmB;4BACzB,IAAI,EAAE;gCACF,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO;qCACvB,GAAG;;;+BAAC,UAAC,EAA0B;wCAAf,wBAAM;oCAAc,QAAC;wCAClC,KAAK,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM;qCACtC;iCAAC,EAAC;qCACF,GAAG;;;+BAAC,UAAC,EAAc;wCAAZ,gBAAK;oCACT,KAAK,CAAC,UAAU,GAAG;wCACf,UAAU,EAAE,KAAK,CAAC,KAAK;wCACvB,gBAAgB,EAAE,KAAK,CAAC,WAAW;qCACtC,CAAC;oCACF,OAAO,EAAE,KAAK,OAAA,EAAE,CAAC;iCACpB,EAAC;gCACN,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU;6BACrC;yBACJ;wBAED,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;;;uBACD,UAAC,GAAG;wBACA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB,EAAC,CAAC;iBACd,EAAC,CAAC,IAAI,CAACE,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aACvD;;;;;;;;;;;QAOD,gDAAe;;;;;YAAf,UAAgB,UAA2B;gBAA3C,iBAgCC;;oBA/BS,OAAO,GAAG;oBACZ,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;iBAClC;gBAED,OAAO,IAAIF,eAAU;;;mBAAC,UAAC,QAAQ;oBAC3B,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,4BAA4B,CAAC,MAAM,EAAE,OAAO,CAAC;yBAClE,IAAI;;;mBAAC,UAAC,MAAsB;;4BACf,IAAI,GAAqB,IAAIG,sBAAgB,CAAE;4BACjD,IAAI,EAAE;gCACF,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO;qCACvB,GAAG;;;+BAAC,UAAC,EAAwB;wCAAb,oBAAI;oCACjB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;oCAC1G,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC;oCACpC,OAAO;wCACH,KAAK,EAAE,IAAI;qCACd,CAAC;iCACL,EAAC;gCACN,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU;6BACrC;yBACJ,CAAC;wBAEF,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;;;uBACD,UAAC,GAAG;wBACA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB,EAAC,CAAC;iBACd,EAAC,CAAC,IAAI,CAACD,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aACvD;;;;;;;;;;;QAOD,0CAAS;;;;;YAAT,UAAU,UAA2B;gBAArC,iBAwBC;;oBAvBS,OAAO,GAAG;oBACZ,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;oBACtC,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;iBAClC;gBAED,OAAO,IAAIF,eAAU;;;mBAAC,UAAC,QAAQ;oBAC3B,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;yBACrC,IAAI;;;mBAAC,UAAC,IAAgB;wBACf,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;;;2BACjB,UAAC,EAAc;gCAAZ,gBAAK;4BACJ,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;4BACvC,OAAO,EAAE,KAAK,OAAA,EAAE,CAAC;yBACpB,EACJ,CAAC;wBACF,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB;;;uBACD,UAAC,GAAG;wBACA,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACpB,QAAQ,CAAC,QAAQ,EAAE,CAAC;qBACvB,EAAC,CAAC;iBACd,EAAC,CAAC,IAAI,CAACE,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aACvD;;;;;;;;;;;;;QAQD,6CAAY;;;;;;YAAZ,UAAa,UAA2B,EAAE,aAA4B;gBAAtE,iBAYC;gBAZyC,8BAAA;oBAAA,kBAA4B;;;oBAC5D,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;;oBAE5D,OAAO,GAAG;oBACZ,OAAO,EAAE,oBAAoB;oBAC7B,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;iBAClC;gBAED,OAAOE,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;qBACzD,IAAI,CAACF,oBAAU;;;eAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aAEzD;;;;;;;;;;;;;QAQD,gDAAe;;;;;;YAAf,UAAgB,UAA2B,EAAE,aAA4B;gBAAzE,iBAWC;gBAX4C,8BAAA;oBAAA,kBAA4B;;;oBAC/D,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC;;oBAE5D,OAAO,GAAG;oBACZ,OAAO,EAAE,oBAAoB;oBAC7B,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;iBAClC;gBAED,OAAOE,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;qBAC/D,IAAI,CAACF,oBAAU;;;eAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aACzD;;;;;;;;;;;QAOD,+CAAc;;;;;YAAd,UAAe,QAAgB;;oBACvB,eAAe,GAAG,KAAK;;oBACrB,OAAO,GAAG,CAAC,YAAY,EAAE,eAAe,EAAE,SAAS,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,CAAC;gBAElG,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;oBAChC,eAAe,GAAG,IAAI,CAAC;iBAC1B;gBAED,OAAO,eAAe,CAAC;aAC1B;;;;;;;;;;;QAOD,kDAAiB;;;;;YAAjB,UAAkB,QAAgB;;oBAC1B,kBAAkB,GAAG,KAAK;;oBACxB,OAAO,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC;gBAE9C,IAAI,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;oBAChC,kBAAkB,GAAG,IAAI,CAAC;iBAC7B;gBAED,OAAO,kBAAkB,CAAC;aAC7B;;;;;;;;;;;;;;;QASD,mDAAkB;;;;;;;YAAlB,UAAmB,MAAc,EAAE,UAA2B,EAAE,aAA4B;gBAA5B,8BAAA;oBAAA,kBAA4B;;gBACxF,IAAI,MAAM,KAAK,YAAY,EAAE;oBACzB,OAAO,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;iBACvD;qBAAM,IAAI,MAAM,KAAK,eAAe,EAAE;oBACnC,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;iBAC1D;qBAAM,IAAI,MAAM,KAAK,SAAS,EAAE;oBAC7B,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;iBACrC;qBAAM,IAAI,MAAM,KAAK,WAAW,EAAE;oBAC/B,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;iBAC3C;qBAAM,IAAI,MAAM,KAAK,aAAa,EAAE;oBACjC,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;iBACxD;qBAAM,IAAI,MAAM,KAAK,UAAU,EAAE;oBAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;iBAClD;aACJ;;;;;;;;;;;;;;;QAUD,wDAAuB;;;;;;;;YAAvB,UAAwB,MAAc,EAAE,UAAgC;gBAAxE,iBAeC;gBAfuC,2BAAA;oBAAA,eAAgC;;gBACpE,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;oBAE7B,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,UAAU,CAAC;yBAC7C,IAAI,CAACG,aAAG;;;mBAAC,UAAC,MAAW;wBAClB,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;;;2BAAC,UAAC,IAAS,IAAa,OAAA,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,GAAA,EAAC,CAAC;qBAC5F,EAAC,CAAC,CAAC;iBAEX;qBAAM,IAAI,MAAM,EAAE;;oBAEf,OAAOD,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;yBAC/C,IAAI;;;mBAAC,UAAC,IAAI,IAAK,OAAA,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAA,EAAC,CAAC,CAAC;iBACzC;gBAED,OAAOE,OAAE,CAAC,EAAE,CAAC,CAAC;aACjB;;;;;;;;;;;;;QAQD,+CAAc;;;;;;YAAd,UAAe,IAAS,EAAE,MAAc;gBACpC,IAAI,MAAM,KAAK,eAAe,EAAE;oBAC5B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;iBAC5B;qBAAM,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,WAAW,EAAE;oBACvD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;iBAC1B;qBAAM,IAAI,MAAM,KAAK,aAAa,EAAE;oBACjC,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;iBAChC;qBAAM;oBACH,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;iBACxB;aACJ;;;;;;;;;;;QAOD,wDAAuB;;;;;YAAvB,UAAwB,MAAc;gBAClC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;aACxE;;;;;;QAEO,kDAAiB;;;;;YAAzB,UAA0B,aAAuB;gBAC7C,OAAOC,UAAC,MAAM,EAAE,YAAY,EAAE,qBAAqB,EAAE,aAAa,EAAE,aAAa,GAAK,aAAa,EAC9F,MAAM;;;;;mBAAC,UAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAA,EAAC,CAAC;aAC5E;;;;;;QAEO,4CAAW;;;;;YAAnB,UAAoB,KAAe;gBAC/B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC7B,OAAOC,eAAU,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;aAC9C;;oBA1WJC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAtBGC,uBAAkB;wBAClBC,eAAU;;;;qCAnBd;KAsCA;;;;;;;QCFI,6BAAoB,cAA8B,EAC9B,UAA8B,EAC9B,UAAsB,EACtB,sBAA8C;YAH9C,mBAAc,GAAd,cAAc,CAAgB;YAC9B,eAAU,GAAV,UAAU,CAAoB;YAC9B,eAAU,GAAV,UAAU,CAAY;YACtB,2BAAsB,GAAtB,sBAAsB,CAAwB;SACjE;;;;;;;;;;;QAOD,wCAAU;;;;;YAAV,UAAW,MAAc;gBACrB,OAAOP,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;aACvE;;;;;;;;;;;;;;;QASD,sCAAQ;;;;;;;YAAR,UAAS,MAAc,EAAE,cAAsB;gBAA/C,iBAIC;gBAHG,OAAOA,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,cAAc,gBAAA,EAAE,CAAC,CAAC,CAAC,IAAI,CACtFF,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAC7C,CAAC;aACL;;;;;;;;;;;;;;;QASD,sCAAQ;;;;;;;YAAR,UAAS,MAAc,EAAE,cAAsB;gBAA/C,iBAIC;gBAHG,OAAOE,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,cAAc,gBAAA,EAAE,CAAC,CAAC,CAAC,IAAI,CACtFF,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAC7C,CAAC;aACL;;;;;;;;;;;;;;;QASD,uCAAS;;;;;;;YAAT,UAAU,MAAc,EAAE,IAAU,EAAE,aAA4B;gBAAlE,iBAiCC;gBAjCqC,8BAAA;oBAAA,kBAA4B;;;oBAC1D,UAAU,GAAG,mBAAmB,CAAC,OAAO;gBAC5C,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC3B,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;iBAClC;;oBAEK,oBAAoB,GAAGK,UAAC,MAAM,EAAE,YAAY,EAAE,qBAAqB,EAAE,aAAa,EAAE,aAAa,GAAK,aAAa,EACpH,MAAM;;;;;mBAAC,UAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAA,EAAC;;oBAElE,MAAM,GAAQ;oBAChB,aAAa,EAAE,IAAI;oBACnB,OAAO,EAAE,oBAAoB;iBAChC;gBAED,IAAI,MAAM,EAAE;oBACR,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC;iBAChC;gBAED,IAAI,IAAI,EAAE;oBACN,IAAI,IAAI,CAAC,QAAQ,EAAE;wBACf,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;qBACnC;oBACD,IAAI,IAAI,CAAC,SAAS,EAAE;wBAChB,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;qBACrC;oBACD,IAAI,IAAI,CAAC,KAAK,EAAE;wBACZ,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;qBAC7B;iBACJ;gBAED,OAAOH,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,IAAI,CACrFF,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAC7C,CAAC;aACL;;;;;;;;;;;;;QAQD,qCAAO;;;;;;YAAP,UAAQ,MAAc,EAAE,aAA4B;gBAA5B,8BAAA;oBAAA,kBAA4B;;;oBAE1C,oBAAoB,GAAGK,UAAC,MAAM,EAAE,YAAY,EAAE,qBAAqB,EAAE,aAAa,GAAK,aAAa,EACrG,MAAM;;;;;mBAAC,UAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAA,EAAC;;oBAElE,IAAI,GAAQ;oBACd,aAAa,EAAE,IAAI;oBACnB,OAAO,EAAE,oBAAoB;iBAChC;gBAED,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACpD;;;;;;;;;;;;;QAQD,2CAAa;;;;;;YAAb,UAAc,MAAc,EAAE,aAA4B;gBAA1D,iBAaC;gBAb6B,8BAAA;oBAAA,kBAA4B;;;oBAEhD,oBAAoB,GAAGA,UAAC,MAAM,EAAE,YAAY,EAAE,qBAAqB,EAAE,aAAa,EAAE,aAAa,GAAK,aAAa,EACpH,MAAM;;;;;mBAAC,UAAC,OAAO,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAA,EAAC;;oBAElE,IAAI,GAAQ;oBACd,aAAa,EAAE,IAAI;oBACnB,OAAO,EAAE,oBAAoB;iBAChC;gBAED,OAAOH,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CACvEF,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAC7C,CAAC;aACL;;;;;QAED,mDAAqB;;;;YAArB,UAAsB,MAAM;gBACxB,OAAO,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;aAC7D;;;;;;;;QAED,gDAAkB;;;;;;;YAAlB,UAAmB,MAAc,EAAE,UAA2B,EAAE,aAAuB,EAAE,KAAc;gBACnG,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;oBACpD,OAAO,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC,IAAI,CACzFG,aAAG;;;uBAAC,UAAC,MAAW,IAAK,OAAA,IAAI,kBAAkB,CAAC,IAAI,EAAE,MAAM,CAAC,GAAA,EAAC,CAC7D,CAAC;iBACL;qBAAM;oBACH,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;iBAC9E;aACJ;;;;;;;;;QAEO,kDAAoB;;;;;;;;YAA5B,UAA6B,MAAc,EAAE,UAA2B,EAAE,aAAuB,EAAE,KAAc;gBAC7G,OAAOO,aAAQ,CACX,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,aAAa,CAAC,EACzC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;oBACjB,QAAQ,EAAE,UAAU,CAAC,QAAQ;oBAC7B,SAAS,EAAE,UAAU,CAAC,SAAS;oBAC/B,YAAY,EAAE,MAAM;oBACpB,KAAK,EAAE,KAAK;iBACf,EAAE,aAAa,CAAC,CAAC,CAAC,IAAI,CACnBP,aAAG;;;mBAAC,UAAC,OAAO,IAAK,OAAA,IAAI,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAA,EAAC,CACnE,CAAC;aACT;;;;;;QAEO,yCAAW;;;;;YAAnB,UAAoB,KAAU;gBAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC7B,OAAOG,eAAU,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;aAC9C;QA3JM,2BAAO,GAAG,QAAQ,CAAC;;oBAL7BC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAbuBI,mBAAc;wBAAlCH,uBAAkB;wBAAkBC,eAAU;wBASzC,sBAAsB;;;;kCA3B/B;KA6BA;;;;;;;QCII,sCAA4C,IAAsC;YAAtC,SAAI,GAAJ,IAAI,CAAkC;YAC9E,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,GAAG,mBAAiB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAI,GAAG,sBAAsB,CAAC;SACvH;;;;QAED,4CAAK;;;YAAL;gBACI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC/B;;;;;QAED,+CAAQ;;;;YAAR,UAAS,QAAgB;gBACrB,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;aAC9B;;;;QAED,8CAAO;;;YAAP;gBACI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC/B;;oBA1BJG,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,uuCAAqD;wBAErD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wDAMgBC,SAAM,SAACC,wBAAe;;;QAgBvC,mCAAC;KA3BD;;;;;;;QCeI,iCACY,WAAwB,EACzB,MAA6C,EAC5C,WAA+B,EAGhC,IAAS;YALR,gBAAW,GAAX,WAAW,CAAa;YACzB,WAAM,GAAN,MAAM,CAAuC;YAC5C,gBAAW,GAAX,WAAW,CAAoB;YAGhC,SAAI,GAAJ,IAAI,CAAK;YATpB,SAAI,GAAS,IAAI,CAAC;SAWjB;;;;QAED,0CAAQ;;;YAAR;gBACY,IAAA,qBAAI;gBACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;gBAE1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,KAAK;oBAChC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,YAAY;oBAC3D,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC;oBAC9C,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,GAAGC,QAAM,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,GAAGA,QAAM,EAAE;iBACjG,CAAC,CAAC;aACN;QAED,sBAAY,sDAAiB;;;;gBAA7B;gBACI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;;wBACtB,QAAQ,GAAGA,QAAM,CAAC,QAAQ,CAACA,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAACA,QAAM,EAAE,CAAC,CAAC;oBAC7E,OAAO,QAAQ,CAAC,SAAS,EAAE,CAAC;iBAC/B;gBAED,OAAO,CAAC,CAAC;aACZ;;;WAAA;QAED,sBAAY,iDAAY;;;;gBAAxB;gBACI,OAAO,IAAIC,kBAAY,CAAC;oBACpB,cAAc,EAAE,IAAI,CAAC,iBAAiB;oBACtC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,qBAAqB,GAAG,MAAM;oBACnE,UAAU,EAAE,YAAY;iBAC3B,CAAC,CAAC;aACN;;;WAAA;;;;;QAEO,4CAAU;;;;YAAlB;gBACU,IAAA,SAAoD,EAAnC,kCAAQ,EAAY,mBAAe;gBAE1D,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBAC1B,OAAO,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;iBACxD;gBAED,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACvC;;;;QAED,wCAAM;;;YAAN;gBAAA,iBAOC;gBANG,IAAI,CAAC,UAAU,EAAE;qBACZ,IAAI;;;eAAC,UAAC,IAAe;oBAClB,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;oBACnD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACjC,EAAC;qBACD,KAAK;;;eAAC,UAAC,KAAU,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;aACxD;;oBAnEJL,YAAS,SAAC;wBACP,QAAQ,EAAE,eAAe;wBAEzB,0/DAAsC;;qBACzC;;;;;wBATQM,iBAAW;wBADMC,qBAAY;wBAI7BX,uBAAkB;wDAiBlBY,WAAQ,YACRN,SAAM,SAACC,wBAAe;;;QAoD/B,8BAAC;KApED;;;;;;;QCqBI,kCAAoB,MAAiB,EACjB,cAA8B,EAC9B,mBAAwC,EACxC,WAAyB,EACzB,WAA+B,EAC/B,gBAAkC;YALlC,WAAM,GAAN,MAAM,CAAW;YACjB,mBAAc,GAAd,cAAc,CAAgB;YAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,gBAAW,GAAX,WAAW,CAAc;YACzB,gBAAW,GAAX,WAAW,CAAoB;YAC/B,qBAAgB,GAAhB,gBAAgB,CAAkB;;;;YAPtD,UAAK,GAAsB,IAAIM,eAAY,EAAO,CAAC;SAQlD;;;;;;;;;;;QAOD,iEAA8B;;;;;YAA9B,UAA+B,YAAoB;gBAAnD,iBAIC;gBAHG,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAACC,mBAAS;;;mBAAC,UAAC,SAAoB;oBAC5F,OAAO,KAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;iBAC/D,EAAC,CAAC,CAAC;aACP;;;;;;;;;;;QAOM,qDAAkB;;;;;YAAzB,UAA0B,YAAkB;gBAA5C,iBAmBC;;oBAlBS,UAAU,GAAoB,IAAIC,YAAO,EAAU;gBAEzD,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,YAAY,EAAEC,4BAAuB,CAAC,IAAI,CAAC,EAAE;oBACxF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;wBACtC,IAAI,EAAE;4BACF,IAAI,EAAE,YAAY;4BAClB,OAAO;;;+BAAE,UAAC,KAAK;gCACX,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gCACvB,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;6BAC3B,CAAA;yBACJ;wBACD,KAAK,EAAE,OAAO;qBACjB,CAAC,CAAC;iBACN;qBAAM;oBACH,UAAU,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;iBACzD;gBAED,OAAO,UAAU,CAAC;aACrB;;;;;;;;;QAMD,6DAA0B;;;;YAA1B;gBAAA,iBAIC;gBAHG,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAACF,mBAAS;;;mBAAC,UAAC,QAAoB;oBACnE,OAAO,KAAI,CAAC,8BAA8B,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACnF,EAAC,CAAC,CAAC;aACP;;;;;;;;;QAMD,+DAA4B;;;;YAA5B;gBACI,OAAO,IAAI,CAAC,gCAAgC,CAAC,MAAM,CAAC,CAAC;aACxD;;;;;;;;;;;QAOD,mEAAgC;;;;;YAAhC,UAAiC,YAAoB;gBAArD,iBAIC;gBAHG,OAAO,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAACA,mBAAS;;;mBAAC,UAAC,IAAe;oBACvF,OAAO,KAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC5D,EAAC,CAAC,CAAC;aACP;;;;;;;;;;;;;;;;;QAUD,qDAAkB;;;;;;;;YAAlB,UAAmB,MAAc,EAAE,YAAkB,EAAE,UAAmB,EAAE,kBAA6B;gBACrG,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,YAAY,EAAE,UAAU,CAAC,EAAE;;wBAEhE,MAAM,GAAG,IAAIC,YAAO,EAAU;oBACpC,MAAM,CAAC,SAAS,CAAC;wBACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;qBAClC,CAAC,CAAC;;wBAEG,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,YAAY,CAAC,IAAI,CAAC;;wBAE3D,IAAI,GAAqC;wBAC3C,KAAK,EAAE,KAAK;wBACZ,UAAU,EAAE,MAAM;wBAClB,eAAe,EAAE,YAAY,CAAC,QAAQ;wBACtC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;wBAC5C,KAAK,EAAE,iBAAiB;wBACxB,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC;wBAC1D,kBAAkB,EAAE,kBAAkB,IAAI,wBAAwB,CAAC,sBAAsB;wBACzF,MAAM,EAAE,MAAM;qBACjB;oBAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,kCAAkC,EAAE,OAAO,CAAC,CAAC;oBAE9E,OAAO,MAAM,CAAC;iBACjB;qBAAM;;wBACG,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;oBACxE,OAAOjB,eAAU,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACJ;;;;;;;;;;;;;QAQD,sDAAmB;;;;;;YAAnB,UAAoB,MAAc,EAAE,IAAY;gBAC5C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mBAAiB,MAAM,CAAC,WAAW,EAAE,UAAO,EAAE,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;aAC3F;;;;;;;;;;;;;QAQD,yDAAsB;;;;;;YAAtB,UAAuB,MAAc,EAAE,YAAkB;;oBAC/C,MAAM,GAAG,IAAIiB,YAAO,EAAU;gBACpC,MAAM,CAAC,SAAS,CAAC;oBACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;iBAClC,CAAC,CAAC;;oBAEG,IAAI,GAAqC;oBAC3C,KAAK,EAAK,MAAM,UAAK,YAAY,CAAC,IAAI,aAAU;oBAChD,UAAU,EAAE,MAAM;oBAClB,eAAe,EAAE,YAAY,CAAC,EAAE;oBAChC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC5C,gBAAgB,EAAE,IAAI,CAAC,kCAAkC,CAAC,IAAI,CAAC,IAAI,CAAC;oBACpE,KAAK,EAAE,iBAAiB;oBACxB,MAAM,EAAE,MAAM;iBACjB;gBAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,kCAAkC,EAAE,OAAO,CAAC,CAAC;gBAC9E,OAAO,MAAM,CAAC;aACjB;;;;;;;;;;;;;QAQD,uDAAoB;;;;;;YAApB,UAAqB,MAAc,EAAE,YAAkB;;oBAC7C,MAAM,GAAG,IAAIA,YAAO,EAAU;gBACpC,MAAM,CAAC,SAAS,CAAC;oBACb,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;iBAClC,CAAC,CAAC;;oBAEG,IAAI,GAAqC;oBAC3C,KAAK,EAAK,MAAM,UAAK,YAAY,CAAC,IAAI,aAAU;oBAChD,UAAU,EAAE,MAAM;oBAClB,eAAe,EAAE,YAAY,CAAC,EAAE;oBAChC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC5C,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC5C,MAAM,EAAE,MAAM;iBACjB;gBAED,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,kCAAkC,EAAE,OAAO,CAAC,CAAC;gBAC9E,OAAO,MAAM,CAAC;aACjB;;;;;;;;QAEO,wDAAqB;;;;;;;YAA7B,UAA8B,IAAsC,EAAE,iBAAyB,EAAE,WAAmB;gBAChH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,IAAI,MAAA,EAAE,UAAU,EAAE,iBAAiB,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;aAC/G;;;;;;;QAEO,gDAAa;;;;;;YAArB,UAAsB,GAAiB,EAAE,GAAe;;oBAC9C,KAAK,GAAS,GAAG,CAAC,IAAI,CAAC,KAAK;gBAClC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE;oBAC9D,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;iBAClE;gBAED,OAAO,IAAI,CAAC;aACf;;;;;;QAEO,6CAAU;;;;;YAAlB,UAAmB,KAAW;gBAC1B,OAAO,KAAK,CAAC,MAAM,CAAC;aACvB;;;;;;QAEO,qEAAkC;;;;;YAA1C,UAA2C,KAAW;gBAClD,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aAClG;;;;;;QAEO,+CAAY;;;;;YAApB,UAAqB,KAAW;gBAC5B,OAAO,KAAK,CAAC,QAAQ,CAAC;aACzB;;;;;;QAEO,2DAAwB;;;;;YAAhC,UAAiC,KAAW;gBACxC,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aACvE;;;;;;QAEO,4DAAyB;;;;;YAAjC,UAAkC,KAAW;gBACzC,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACtE;;;;;;QAEO,yCAAM;;;;;YAAd,UAAe,KAAK;gBAChB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,UAAU,CAAC;aACxF;;;;;;QAGD,wCAAK;;;;YAAL;gBACI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC1B;QAlOM,+CAAsB,GAAG;YAC5B,MAAM;YACN,UAAU;YACV,WAAW;YACX,aAAa;YACb,OAAO;YACP,MAAM;SACT,CAAC;;oBAXLhB,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAfQkB,kBAAS;wBAETd,mBAAc;wBAKd,mBAAmB;wBADPe,iBAAY;wBAAEC,uBAAkB;wBAJ5BC,qBAAgB;;;;4BAyBpCC,SAAM;;;uCA5CX;KA8BA;;;;;;;QCSI,2BACW,OAAmB,EAClB,QAAmB,EACnB,cAA8B,EAC9B,wBAAkD;YAHnD,YAAO,GAAP,OAAO,CAAY;YAClB,aAAQ,GAAR,QAAQ,CAAW;YACnB,mBAAc,GAAd,cAAc,CAAgB;YAC9B,6BAAwB,GAAxB,wBAAwB,CAA0B;SAC1D;;;;;QAVJ,mCAAO;;;;YADP,UACQ,KAAK;gBACT,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/D;;;;QASD,2CAAe;;;YAAf;;oBACU,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAEL,4BAAuB,CAAC,IAAI,CAAC;gBAClH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,EAAE,CAAC,sBAAsB,CAAC,CAAC;aAC9F;;oBAzBJM,YAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;qBAC9B;;;;;wBAPmBC,aAAU;wBAAEC,YAAS;wBAEPrB,mBAAc;wBACvC,wBAAwB;;;;2BAQ5BsB,QAAK,SAAC,eAAe;8BAGrBC,eAAY,SAAC,OAAO,EAAE,CAAE,QAAQ,CAAE;;QAiBvC,wBAAC;KA1BD;;;;;;;QCDA;SAaC;;oBAbArC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;yBACjB;wBACD,YAAY,EAAE;4BACV,iBAAiB;yBACpB;wBACD,OAAO,EAAE;4BACL,iBAAiB;yBACpB;qBACJ;;QAED,6BAAC;KAbD;;;;;;;;;;;;;;;;;QCMI,uBAAoB,UAA8B;YAA9B,eAAU,GAAV,UAAU,CAAoB;SACjD;;;;;;;;;;;;;QAQD,iCAAS;;;;;;YAAT,UAAU,MAAc,EAAE,UAAe;gBACrC,OAAOjC,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;qBACnF,IAAI,CACDF,oBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;aACT;;;;;;;;;;;;;;;QASD,kCAAU;;;;;;;YAAV,UAAW,MAAc,EAAE,UAAkB,EAAE,IAAS;;oBAC9C,UAAU,GAAe,IAAIoC,gBAAU,CAAC;oBAC1C,IAAI,EAAE,UAAU;oBAChB,UAAU,EAAE,IAAI;iBACnB,CAAC;gBACF,OAAOlC,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;qBAC9E,IAAI,CACDF,oBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;aACT;;;;;;;;;;;;;QAQD,oCAAY;;;;;;YAAZ,UAAa,MAAc,EAAE,UAAe;gBACxC,OAAOE,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;qBACtF,IAAI,CACDF,oBAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC;aACT;;;;;;QAEO,mCAAW;;;;;YAAnB,UAAoB,KAAU;gBAC1B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBACrB,OAAOM,eAAU,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;aAC9C;;oBAvDJC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBATQC,uBAAkB;;;;4BAjB3B;KAwBA;;;;;;;QCmBI,yBAAoB,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;YAVhD,YAAO,GAAW,CAAC,CAAC;YAEpB,eAAU,GAAW,UAAU,CAAC;;;;YAIhC,eAAU,GAAG,IAAIa,eAAY,EAAE,CAAC;YAEhC,UAAK,GAAe,EAAE,CAAC;SAGtB;;;;QAED,qCAAW;;;YAAX;gBAAA,iBAaC;;oBAZS,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC;gBAEjF,cAAc,CAAC,SAAS;;;mBACpB,UAAC,WAAwB;oBACrB,IAAI,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;wBAC7B,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;wBACnD,KAAI,CAAC,cAAc,EAAE,CAAC;qBACzB;iBACJ,EACJ,CAAC;gBAEF,OAAO,cAAc,CAAC;aACzB;;;;QAED,wCAAc;;;YAAd;gBACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBACxB,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE;wBAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;qBACnC;yBAAM;wBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC;qBACpC;iBACJ;gBAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACtC;;;;;QAED,oCAAU;;;;YAAV,UAAW,IAAY;gBAAvB,iBAWC;gBAVG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS;;;mBACvE,UAAC,WAAwB;oBACrB,IAAI,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;wBAC7B,IAAI,KAAI,CAAC,OAAO,KAAK,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE;4BACtD,KAAI,CAAC,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;4BACnD,KAAI,CAAC,cAAc,EAAE,CAAC;yBACzB;qBACJ;iBACJ,EACJ,CAAC;aACL;;oBAjEJT,YAAS,SAAC;wBACP,QAAQ,EAAE,YAAY;wBAEtB,4rBAAsC;wBACtC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBARQ,aAAa;;;;6BAYjBoB,QAAK;iCAQLJ,SAAM;;QAiDX,sBAAC;KAlED;;;;;;;QCmBI,uBAAoB,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;;;;YANhD,eAAU,GAAG,IAAIR,eAAY,EAAE,CAAC;YAEhC,iBAAY,GAAW,CAAC,CAAC;YACzB,eAAU,GAAW,OAAO,CAAC;YAC7B,WAAM,GAAY,KAAK,CAAC;SAGvB;;;;QAED,mCAAW;;;YAAX;gBAAA,iBAaC;gBAZG,IAAI,CAAC,KAAK,EAAE,CAAC;gBAEb,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS;;;mBAChE,UAAC,WAAwB;oBACrB,IAAI,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE;wBAC7B,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC;wBAChE,IAAI,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE;4BAC3B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;yBACtB;qBACJ;iBACJ,EACJ,CAAC;aACL;;;;QAED,iCAAS;;;YAAT;gBAAA,iBAkBC;gBAjBG,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS;;uBACnE;wBACI,KAAI,CAAC,YAAY,IAAI,CAAC,CAAC;wBACvB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;wBACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;qBAC3C,EACJ,CAAC;iBACL;qBAAM;oBACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS;;;uBACvE,UAAC,WAAwB;wBACrB,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,eAAe,CAAC;wBAChE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;wBACnB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;qBAC3C,EACJ,CAAC;iBACL;aACJ;;;;QAED,6BAAK;;;YAAL;gBACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;aACzB;;oBA5DJT,YAAS,SAAC;wBACP,QAAQ,EAAE,UAAU;wBAEpB,wiBAAoC;wBACpC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBARQ,aAAa;;;;6BAWjBoB,QAAK;iCAILJ,SAAM;;QAiDX,oBAAC;KA7DD;;;;;;;QCGA;SAc4B;;oBAd3BhC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;yBACjB;wBACD,OAAO,EAAE;4BACL,eAAe;4BACf,aAAa;yBAChB;wBACD,YAAY,EAAE;4BACV,eAAe;4BACf,aAAa;yBAChB;qBACJ;;QAC0B,mBAAC;KAd5B;;;;;;;;;;;;;;;;;QCQI,oBAAoB,UAA8B,EAC9B,UAAsB;YADtB,eAAU,GAAV,UAAU,CAAoB;YAC9B,eAAU,GAAV,UAAU,CAAY;;;;YAH1C,YAAO,GAAG,IAAId,eAAY,EAAE,CAAC;SAI5B;;;;;;;;;;;QAOD,oCAAe;;;;;YAAf,UAAgB,MAAc;gBAA9B,iBAIC;gBAHG,OAAOnB,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAC5EF,oBAAU;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAC7C,CAAC;aACL;;;;;;;;;;;QAOD,kCAAa;;;;;YAAb,UAAc,IAAU;gBAAxB,iBAGC;gBAFG,OAAOE,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;qBAChE,IAAI,CAACF,oBAAU;;;eAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC,CAAC;aACzD;;;;;;;;;;;;;QAQD,2BAAM;;;;;;YAAN,UAAO,MAAc,EAAE,OAAe;gBAAtC,iBAaC;;oBAZS,OAAO,GAAG,IAAIqC,aAAO,EAAE;gBAC7B,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC;;oBAEhB,aAAa,GAAGnC,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBAE9F,aAAa,CAAC,SAAS;;;mBAAC,UAAC,QAAkB;oBACvC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC/B;;;mBAAE,UAAC,GAAG;oBACH,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACzB,EAAC,CAAC;gBAEH,OAAO,aAAa,CAAC;aACxB;;;;;;;;;;;;;QAQD,8BAAS;;;;;;YAAT,UAAU,MAAc,EAAE,GAAW;gBAArC,iBAUC;;oBATS,gBAAgB,GAAGA,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;gBAEhG,gBAAgB,CAAC,SAAS;;;mBAAC,UAAC,IAAI;oBAC5B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC3B;;;mBAAE,UAAC,GAAG;oBACH,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACzB,EAAC,CAAC;gBAEH,OAAO,gBAAgB,CAAC;aAC3B;;;;;;QAEO,gCAAW;;;;;YAAnB,UAAoB,KAAU;gBAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC7B,OAAOI,eAAU,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;aAC9C;;oBA5EJC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBARQC,uBAAkB;wBAAEC,eAAU;;;;8BAYlCoB,SAAM;;;yBA7BX;KAuBA;;;;;;;;;;ACKA;QA+BI,6BAAoB,UAAsB,EAAU,gBAAoC;YAApE,eAAU,GAAV,UAAU,CAAY;YAAU,qBAAgB,GAAhB,gBAAgB,CAAoB;;;;YAjBxF,eAAU,GAAsB,IAAIR,eAAY,EAAE,CAAC;;;;YAInD,UAAK,GAAsB,IAAIA,eAAY,EAAE,CAAC;;;;YAI9C,WAAM,GAAG,IAAIA,eAAY,EAAE,CAAC;YAK5B,kBAAa,GAAY,IAAI,CAAC;YAEtB,kBAAa,GAAmB,EAAE,CAAC;SAG1C;;;;QAED,sCAAQ;;;YAAR;gBAAA,iBAMC;gBALG,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;;mBAAC;oBAC9B,KAAI,CAAC,UAAU,EAAE,CAAC;iBACrB,EAAC,CACL,CAAC;aACL;;;;QAED,yCAAW;;;YAAX;gBACI,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;aAC5B;;;;QAED,yCAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO;;;mBAAC,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,WAAW,EAAE,GAAA,EAAC,CAAC;gBACzE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aAC3B;;;;QAED,wCAAU;;;YAAV;gBAAA,iBAYC;gBAXG,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS;;;uBAAC,UAAC,SAAoB;wBACxE,KAAI,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;wBAC1C,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;wBAC3B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;qBACtC;;uBAAE;wBACC,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBACxB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;qBACtC,EAAC,CAAC;iBACN;aACJ;;;;QAED,oCAAM;;;YAAN;gBAAA,iBAYC;gBAXG,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;oBACjC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,SAAS;;;uBAAC,UAAC,KAAK;wBAC5D,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACzB,EAAC,CAAC;oBACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAClC;qBAAM;oBACH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS;;uBAAC;wBAC3D,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;wBACrB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;qBACrC,EAAC,CAAC;iBACN;aACJ;;;;;QAED,uCAAS;;;;YAAT,UAAU,aAAqB;gBAC3B,IAAI,IAAI,CAAC,WAAW,EAAE;oBAClB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI;;;uBAAC,UAAC,UAAU;wBACpC,QAAQ,aAAa,KAAK,UAAU,CAAC,KAAK,CAAC,GAAG,EAAE;qBACnD,EAAC,CAAC;iBACN;aACJ;;;;QAED,2CAAa;;;YAAb;gBACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACtB;;;;;QAED,uCAAS;;;;YAAT,UAAU,GAAW;gBACjB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;aAC/C;;oBA7FJT,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,25CAA2C;wBAE3C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAdQ,UAAU;wBAFVc,uBAAkB;;;;6BAoBtBM,QAAK;iCAILJ,SAAM;4BAINA,SAAM;6BAINA,SAAM;;QAyEX,0BAAC;KA9FD;;;;;;;;;ACJA;;;;;QAgCI,0BAAoB,UAAsB;YAA1C,iBAcC;YAdmB,eAAU,GAAV,UAAU,CAAY;;;;YAtB1C,WAAM,GAAG,IAAIR,eAAY,EAAE,CAAC;;;;YAK5B,gBAAW,GAAQ,EAAE,CAAC;;;;YAKtB,SAAI,GAAW,EAAE,CAAC;YAKlB,cAAS,GAAG,KAAK,CAAC;YAClB,kBAAa,GAAG,IAAI,CAAC;YAQjB,IAAI,CAAC,iBAAiB,GAAG;gBACrB,SAAS,EAAE,CAAC;gBACZ,QAAQ,EAAE,IAAI,CAAC,IAAI;gBACnB,YAAY,EAAE,KAAK;aACtB,CAAC;YAEF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC;YAEzC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;;eAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;aAC3C,EAAC,CAAC;SACN;;;;QAED,mCAAQ;;;YAAR;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aAClD;;;;;QAED,qCAAU;;;;YAAV,UAAW,IAAU;gBAArB,iBAOC;gBANG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,SAAS;;;mBAAC,UAAC,IAAS;oBACpD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9D,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;oBACvC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;oBACnC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC1B,EAAC,CAAC;aACN;;;;QAED,uCAAY;;;YAAZ;gBACI,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;oBAC9B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAE3B,IAAI,CAAC,UAAU,CAAC;wBACZ,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK;wBAC5D,QAAQ,EAAE,IAAI,CAAC,IAAI;qBACtB,CAAC,CAAC;iBACN;aACJ;;;;QAED,uCAAY;;;YAAZ;gBACI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAC9F,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC9E,IAAI,CAAC,UAAU,CAAC,YAAY,GAAG,IAAI,CAAC;gBAEpC,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;oBACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC7B;aACJ;;oBAlFJT,YAAS,SAAC;wBACP,QAAQ,EAAE,cAAc;wBACxB,04BAAwC;wBAExC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAXQ,UAAU;;;;6BAedgB,SAAM;;QA0EX,uBAAC;KAnFD;;;;;;;;;;ACEA;;;;;QAyBI,8BAAoB,UAAsB;YAA1C,iBAIC;YAJmB,eAAU,GAAV,UAAU,CAAY;;;;YAZ1C,eAAU,GAAG,IAAI,CAAC;;;;YAMlB,YAAO,GAAG,IAAIR,eAAY,EAAE,CAAC;YAOzB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS;;eAAC;gBAC9B,KAAI,CAAC,UAAU,EAAE,CAAC;aACrB,EAAC,CAAC;SACN;;;;QAED,0CAAW;;;YAAX;gBACI,OAAO,IAAI,CAAC,UAAU,EAAE,CAAC;aAC5B;;;;QAED,yCAAU;;;YAAV;gBAAA,iBAOC;gBANG,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS;;;uBAAC,UAAC,SAAoB;wBACxE,KAAI,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;wBAC1C,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;qBACvC,EAAC,CAAC;iBACN;aACJ;;;;;QAED,wCAAS;;;;YAAT,UAAU,GAAW;gBAArB,iBAIC;gBAHG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,SAAS;;mBAAC;oBAClD,KAAI,CAAC,UAAU,EAAE,CAAC;iBACrB,EAAC,CAAC;aACN;;oBAhDJT,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,oiBAA6C;wBAE7C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAbQ,UAAU;;;;6BAgBdoB,QAAK;iCAILA,QAAK;8BAMLJ,SAAM;;QA+BX,2BAAC;KAjDD;;;;;;;QCCA;SAmByB;;oBAnBxBhC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdG,iBAAW;4BACXC,yBAAmB;4BACnBC,eAAU,CAAC,QAAQ,EAAE;yBACxB;wBACD,OAAO,EAAE;4BACL,mBAAmB;4BACnB,gBAAgB;4BAChB,oBAAoB;yBACvB;wBACD,YAAY,EAAE;4BACV,mBAAmB;4BACnB,gBAAgB;4BAChB,oBAAoB;yBACvB;qBACJ;;QACuB,gBAAC;KAnBzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcA;QA0CI,4BAAoB,UAA8B,EAC9B,UAAsB;YADtB,eAAU,GAAV,UAAU,CAAoB;YAC9B,eAAU,GAAV,UAAU,CAAY;;;;YA3B1C,aAAQ,GAAY,IAAI,CAAC;;;;YAIzB,gBAAW,GAAW,UAAU,CAAC;;;;YAIjC,gBAAW,GAAW,SAAS,CAAC;;;;;YAMhC,gBAAW,GAAW,MAAM,CAAC;;;;;;YAO7B,YAAO,GAAG,IAAInB,eAAY,EAAE,CAAC;YAE7B,SAAI,GAAQ,SAAS,CAAC;YACtB,cAAS,GAAY,KAAK,CAAC;SAI1B;;;;;QAED,wCAAW;;;;YAAX,UAAY,OAAO;gBAAnB,iBAwBC;gBAvBG,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;gBAED,OAAO,IAAI,OAAO;;;;mBAAC,UAAC,OAAO,EAAE,MAAM;oBAC/B,KAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,EAAE,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,IAAI;;;uBAAC,UAAC,aAAa;wBAErJ,KAAI,CAAC,IAAI,GAAG,aAAa,CAAC;wBAE1B,IAAI,KAAI,CAAC,QAAQ,EAAE;4BACf,IAAI,KAAI,CAAC,WAAW,KAAK,WAAW,EAAE;gCAClC,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;6BACvD;yBACJ;wBAED,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;wBAE7B,OAAO,EAAE,CAAC;qBACb;;;uBAAE,UAAC,KAAK;wBACL,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;wBACrC,MAAM,EAAE,CAAC;qBACZ,EAAC,CAAC;iBACN,EAAC,CAAC;aACN;;;;;;;;;;;;;;;QASD,gDAAmB;;;;;;;YAAnB,UAAoB,IAAS;;oBACnB,aAAa,GAAQ,IAAI;gBAC/B,IAAI;oBAEA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBACd,IAAI,CAAC,MAAM,GAAGoB,2BAAsB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAClE;oBAED,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;wBACvC,IAAI,CAAC,IAAI,GAAG,IAAIA,2BAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;qBAClE;iBAEJ;gBAAC,OAAO,KAAK,EAAE;oBACZ,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;iBAC/D;gBAED,OAAO,aAAa,CAAC;aACxB;;;;QAED,kCAAK;;;YAAL;gBACI,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;aACzB;;;;QAED,+CAAkB;;;YAAlB;gBACI,OAAO,IAAI,CAAC,WAAW,KAAK,WAAW,CAAC;aAC3C;;oBAxGJ7B,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,0sBAAuC;qBAC1C;;;;;wBA1BQJ,uBAAkB;wBAAEC,eAAU;;;;iCA8BlCwB,QAAK;iCAILA,QAAK;+BAILA,QAAK;kCAILA,QAAK;kCAILA,QAAK;kCAMLA,QAAK;8BAOLJ,SAAM;;QAqEX,yBAAC;KAzGD;;;;;;;QCjBA;SAa+B;;oBAb9BhC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdK,eAAU,CAAC,QAAQ,EAAE;yBACxB;wBACD,OAAO,EAAE;4BACL,kBAAkB;yBACrB;wBACD,YAAY,EAAE;4BACV,kBAAkB;yBACrB;qBACJ;;QAC6B,sBAAC;KAb/B;;;;;;;;;;;;;;;;;QCeI,sBAAoB,GAAc,EACd,cAA8B,EAC9B,gBAAwC,EACxC,gBAAmC;YAHnC,QAAG,GAAH,GAAG,CAAW;YACd,mBAAc,GAAd,cAAc,CAAgB;YAC9B,qBAAgB,GAAhB,gBAAgB,CAAwB;YACxC,qBAAgB,GAAhB,gBAAgB,CAAmB;YAjBvD,UAAK,GAA2B,EAAE,CAAC;YACnC,eAAU,GAAY,KAAK,CAAC;YAE5B,aAAQ,GAAW,EAAE,CAAC;YAelB,IAAI,CAAC,GAAG,EAAE;gBACN,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;aACtD;YAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gCAAgC,CAAC,GAAG,CAAC,CAAC;YAE/D,IAAI,gBAAgB,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;aAChD;SACJ;QAtBD,sBAAI,8BAAI;;;gBAAR;gBACI,OAAO,IAAI,CAAC,GAAG,CAAC;aACnB;;;;gBAED,UAAS,KAAgB;gBACrB,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;gBACjB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;aACnB;;;WALA;;;;;QAsBD,yCAAkB;;;;YAAlB,UAAmB,UAAqB;gBAAxC,iBAeC;;oBAdO,kBAAkB,GAAG,EAAE;gBAE3B,IAAI,CAAC,gBAAgB,CAAC,OAAO;;;mBAAC,UAAC,uBAA6C;oBAExE,IAAI,KAAI,CAAC,4BAA4B,CAAC,UAAU,CAAC,KAAK,EAAE,uBAAuB,CAAC,IAAI,KAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC,KAAK,EAAE,uBAAuB,CAAC,EAAE;wBAE5J,IAAI,KAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,UAAU,CAAC,KAAK,EAAE,uBAAuB,CAAC,UAAU,CAAC,EAAE;4BAClG,kBAAkB,IAAI,MAAI,uBAAuB,CAAC,GAAK,CAAC;yBAC3D;qBACJ;iBAEJ,EAAC,CAAC;gBAEH,OAAO,kBAAkB,CAAC;aAC7B;;;;;;;QAEO,iDAA0B;;;;;;YAAlC,UAAmC,IAAiB,EAAE,uBAA6C;gBAC/F,QAAQ,uBAAuB,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;aAC1D;;;;;;;QAEO,mDAA4B;;;;;;YAApC,UAAqC,IAAiB,EAAE,uBAA6C;gBACjG,QAAQ,uBAAuB,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;aAC9D;;;;;QAED,uDAAgC;;;;YAAhC,UAAiC,SAAoB;gBACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aAC5G;;;;;QAED,+BAAQ;;;;YAAR,UAAS,SAAoB;gBACzB,OAAO,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;aACtD;;;;;;QAED,iCAAU;;;;;YAAV,UAAW,GAAW,EAAE,KAAU;gBAC9B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBACxB,OAAO,KAAK,CAAC;aAChB;;;;;QAED,+BAAQ;;;;YAAR,UAAS,GAAW;gBAChB,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;oBAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBAC1B;gBACD,OAAOE,gBAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;aACpD;;;;;QAED,yCAAkB;;;;YAAlB,UAAmB,KAAY;gBAC3B,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE;oBACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;iBACjF;aACJ;;;;;QAED,+BAAQ;;;;YAAR,UAAS,GAAW;gBAChB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC;aAC3C;QApFM,iCAAoB,GAAW,yBAAyB,CAAC;QAqFpE,mBAAC;KAvFD;;;;;;;QCuCI,+BAAoB,gBAAkC,EAClC,cAA8B,EACtC,MAAyB,EACzB,OAAqB,EACrB,WAA8B;YAF9B,uBAAA;gBAAA,WAAyB;;YAEzB,4BAAA;gBAAA,sBAA8B;;YAJtB,qBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,mBAAc,GAAd,cAAc,CAAgB;YA5BlD,sBAAiB,GAAW,eAAe,CAAC;YAC5C,sBAAiB,GAAW,kBAAkB,CAAC;YAU/C,eAAU,GAAY,KAAK,CAAC;YAqBxB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,EAAE,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAClC;QArBD,sBAAI,8CAAW;;;gBAQf;gBACI,OAAO,IAAI,CAAC,YAAY,CAAC;aAC5B;;;;gBAVD,UAAgB,KAAa;;oBACrB,QAAQ,GAAG,CAAC,KAAK,IAAI,QAAQ,EAAE,WAAW,EAAE;gBAChD,IAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;oBAChD,QAAQ,GAAG,QAAQ,CAAC;iBACvB;gBACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;aAChC;;;WAAA;;;;QAiBD,uCAAO;;;YAAP;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC;aACpB;;;;;;;QAGD,uCAAO;;;;;;YAAP,UAAQ,IAAoB;gBACxB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,IAAI,CAAC,IAAI,EAAE,CAAC;aACf;;;;QAED,0CAAU;;;YAAV;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;;QAED,0CAAU;;;;YAAV,UAAW,OAA0B;gBACjC,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;aAChC;;;;;;QAED,wCAAQ;;;;;YAAR,UAAS,GAAY,EAAE,GAAe;gBAClC,IAAI,CAAC,GAAG,EAAE;oBACN,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAC3C;gBACD,IAAI,CAAC,GAAG,EAAE;oBACN,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;iBAC3C;;oBACK,OAAO,sBAAgC,GAAG,EAAA;;oBAC1C,KAAK,GAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;gBACxC,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;oBACtC,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBACjC;gBAED,IAAI,GAAG,CAAC,GAAG,KAAK,YAAY,EAAE;oBAE1B,IAAI,IAAI,CAAC,aAAa,EAAE;;4BACd,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC;wBAC7C,IAAI,QAAQ,EAAE;4BACV,OAAO,QAAQ,CAAC;yBACnB;qBACJ;;wBAEK,IAAI,GAAG,oBAAgB,GAAG,IAAE,IAAI;oBAEtC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;wBACrB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;qBACnC;oBAED,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACnB,IAAI,IAAI,CAAC,UAAU,EAAE;4BACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;yBAC9D;qBACJ;oBAED,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;;4BACd,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ;wBAC5C,IAAI,QAAQ,EAAE;4BACV,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;yBAC1D;qBACJ;oBAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAAE,CAAC;iBACzD;gBAED,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO,EAAE;oBAEtB,IAAI,IAAI,CAAC,aAAa,EAAE;;4BACd,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,CAAC;wBAC7C,IAAI,QAAQ,EAAE;4BACV,OAAO,QAAQ,CAAC;yBACnB;qBACJ;iBACJ;gBAED,OAAO,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC7C;;;;QAED,0CAAU;;;YAAV;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;;QAED,0CAAU;;;;YAAV,UAAW,OAAoB;gBAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;;;;;;QAED,oCAAI;;;;;YAAJ,UAAK,GAAY,EAAE,SAAkB;;oBAC3B,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAIC,gBAAW,EAAE;gBACjD,IAAI,GAAG,EAAE;oBACL,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;oBAClB,OAAO,CAAC,SAAS,GAAG,SAAS,IAAI,KAAK,CAAC;iBAC1C;gBACD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAC5B;;;;;QAED,yCAAS;;;;YAAT,UAAU,MAAiB;gBACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACxB;;;;;QAED,gDAAgB;;;;YAAhB,UAAiB,QAAa;gBAC1B,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;aACjC;;;;;;QAEO,6CAAa;;;;;YAArB,UAAsB,IAAS;gBAC3B,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;oBAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;iBAC/D;qBAAM,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;oBAChC,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;iBAC9D;qBAAM,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;oBACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;iBAC9D;qBAAM;oBACH,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBAC1D;aACJ;;;;;QAED,6CAAa;;;;YAAb,UAAc,IAAS;;oBACb,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBACjD,OAAO,WAAW,CAAC,OAAO,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC;qBACzD,WAAW,CAAC,OAAO,CAAC,6BAA6B,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACjE;;;;;QAED,4CAAY;;;;YAAZ,UAAa,IAAS;;oBACZ,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBACjD,OAAO,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;qBACxC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAChD;;;;;QAED,6CAAa;;;;YAAb,UAAc,IAAS;;oBACb,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;gBACjE,OAAO,QAAQ,KAAK,gBAAgB,CAAC;aACxC;;;;;;QAEO,kDAAkB;;;;;YAA1B,UAA2B,IAAS;gBAChC,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;aACnH;;;;;;;QAEO,wCAAQ;;;;;;YAAhB,UAAiB,IAAe,EAAE,OAAoB;gBAClD,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;oBAC/B,OAAO;iBACV;;oBAEK,OAAO,GAAyB,EAAE;gBAExC,IAAI,OAAO,IAAI,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;oBAEnD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,OAAO,CAAC,GAAG,KAAK,MAAM,EAAE;wBAC/D,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;qBAC1B;oBAED,IAAI,CAAC,IAAI;;;;uBAAC,UAAC,CAAe,EAAE,CAAe;wBACvC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;4BACjD,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;yBACzC;;4BAEG,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;wBAClC,IAAI,IAAI,EAAE;4BACN,IAAI,GAAG,CAAC,IAAI,YAAY,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;yBAC/E;6BAAM;4BACH,IAAI,GAAG,EAAE,CAAC;yBACb;;4BAEG,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;wBACnC,IAAI,KAAK,EAAE;4BACP,KAAK,GAAG,CAAC,KAAK,YAAY,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;yBACnF;6BAAM;4BACH,KAAK,GAAG,EAAE,CAAC;yBACd;wBAED,OAAO,OAAO,CAAC,SAAS,KAAK,KAAK;8BAC5B,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC;8BAC7C,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;qBACvD,EAAC,CAAC;iBACN;aACJ;;;;;;QAEM,wCAAQ;;;;;YAAf,UAAgB,UAAsB,EAAE,KAAsB;gBAA9D,iBA4CC;gBA5CuC,sBAAA;oBAAA,aAAsB;;;oBACtD,aAAa,GAAmB,EAAE;gBAEtC,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,EAAE;;wBACzB,WAAW,GAAgB,UAAU,CAAC,IAAI,CAAC,OAAO;oBACxD,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;wBACvC,aAAa,GAAG,WAAW,CAAC,GAAG;;;2BAAC,UAAC,IAAI,IAAK,OAAA,IAAI,YAAY,CAAC,IAAI,EAAE,KAAI,CAAC,cAAc,EAAE,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,gBAAgB,CAAC,GAAA,EAAC,CAAC;wBAErI,IAAI,IAAI,CAAC,MAAM,EAAE;4BACb,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBACrD;wBAED,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;;4BAE/B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;oCACnC,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE;gCACjC,IAAI,OAAO,EAAE;oCACT,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;iCACzC;qCAAM;;wCACG,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;;uCAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,QAAQ,GAAA,EAAC;oCACvD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wCACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;qCACrC;yCAAM;wCACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;qCACzC;iCACJ;6BACJ;yBACJ;qBACJ;iBACJ;gBAED,IAAI,KAAK,EAAE;;wBACD,mBAAmB,GAAG,aAAa,CAAC,MAAM;;;uBAAC,UAAC,eAAoB;;4BAC5D,SAAS,GAAG,KAAI,CAAC,IAAI,CAAC,IAAI;;;2BAAC,UAAC,UAAe;4BAC7C,OAAO,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;yBACnE,EAAC;wBAEF,OAAO,CAAC,SAAS,CAAC;qBACrB,EAAC;oBAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;iBACrD;qBAAM;oBACH,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;iBAC7B;aACJ;QAEL,4BAAC;IAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;AClRD,QAAW,mBAAmB,GAAG;QAC7B,YAAY,EAAE;YACV;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,mCAAmC;gBAC1C,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,qBAAqB;gBAC1B,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,qCAAqC;gBAC5C,MAAM,EAAE,SAAS;gBACjB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,4BAA4B;gBACjC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,qCAAqC;gBAC5C,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,SAAS,EAAE;YACP;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,OAAO;gBACZ,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,iCAAiC;gBACxC,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,WAAW,EAAE;YACT;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,OAAO;gBACZ,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,iCAAiC;gBACxC,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,aAAa,EAAE;YACX;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,mCAAmC;gBAC1C,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,qBAAqB;gBAC1B,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,MAAM,EAAE,SAAS;gBACjB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,4BAA4B;gBACjC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,UAAU,EAAE;YACR;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,mCAAmC;gBAC1C,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,qBAAqB;gBAC1B,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,MAAM,EAAE,SAAS;gBACjB,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,eAAe,EAAE;YACb;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,mCAAmC;gBAC1C,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,qBAAqB;gBAC1B,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,MAAM,EAAE,SAAS;gBACjB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,4BAA4B;gBACjC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,0BAA0B;gBAC/B,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,oCAAoC;gBAC3C,QAAQ,EAAE,IAAI;aACjB;SACJ;QACD,SAAS,EAAE;YACP;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,OAAO;gBACb,OAAO,EAAE,oCAAoC;gBAC7C,QAAQ,EAAE,KAAK;aAClB;YACD;gBACI,GAAG,EAAE,MAAM;gBACX,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,qBAAqB;gBAC1B,IAAI,EAAE,UAAU;gBAChB,KAAK,EAAE,+BAA+B;gBACtC,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,YAAY;gBACjB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,MAAM,EAAE,SAAS;gBACjB,QAAQ,EAAE,IAAI;aACjB;YACD;gBACI,GAAG,EAAE,4BAA4B;gBACjC,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,sCAAsC;gBAC7C,QAAQ,EAAE,IAAI;aACjB;SACJ;KACJ;;;;;;;;;;;;;;;;;;;;;;AC/OD;QAWI,4BAAY,GAAS;YAJrB,4BAAuB,GAAY,KAAK,CAAC;YACzC,aAAQ,GAAuB,KAAK,CAAC;YACrC,YAAO,GAAuB,IAAI,CAAC;YAG/B,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC3B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;gBAC3B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;gBACzB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;gBACjC,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC,uBAAuB,CAAC;gBAE3D,IAAI,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;oBAChC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;iBAChC;gBAED,IAAI,GAAG,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;oBAC/B,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;iBAC9B;aACJ;SACJ;QACL,yBAAC;IAAD,CAAC,IAAA;;;QAGG,UAAW,UAAU;QACrB,QAAS,QAAQ;QACjB,KAAM,KAAK;;;QAK0BC,uCAAkB;QACvD,6BAAY,IAAU;YAAtB,YACI,kBAAM,IAAI,CAAC,SAEd;YADG,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC;;SAC5B;QACL,0BAAC;IAAD,CALA,CAAyC,kBAAkB,GAK1D;;QAEuCA,qCAAkB;QACtD,2BAAY,IAAU;YAAtB,YACI,kBAAM,IAAI,CAAC,SAEd;YADG,KAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;;SAC1B;QACL,wBAAC;IAAD,CALA,CAAwC,kBAAkB;;;;;;;QC5CrBA,mCAAoB;QAMrD,yBAAY,SAAoB;YAAhC,YACI,iBAAO,SAEV;YADG,KAAI,CAAC,KAAK,GAAG,SAAS,CAAC;;SAC1B;QACL,sBAAC;IAAD,CAVA,CAAqCC,cAAS,GAU7C;;QAEmCD,kCAAe;QAM/C,wBAAY,IAAU;YAAtB,YACI,iBAAO,SAEV;YADG,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;SACrB;QACL,qBAAC;IAAD,CAVA,CAAoCC,cAAS;;;;;;;QCgSzC,+BAAoB,mBAAwC,EACxC,MAAc,EACd,UAAsB,EACtB,SAA2B,EAC3B,sBAA8C,EAC9C,cAA8B,EAC9B,gBAAkC,EAClC,kBAAsC,EACtC,WAAwB;YAR5C,iBAaC;YAbmB,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,WAAM,GAAN,MAAM,CAAQ;YACd,eAAU,GAAV,UAAU,CAAY;YACtB,cAAS,GAAT,SAAS,CAAkB;YAC3B,2BAAsB,GAAtB,sBAAsB,CAAwB;YAC9C,mBAAc,GAAd,cAAc,CAAgB;YAC9B,qBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,gBAAW,GAAX,WAAW,CAAa;YA/P5C,uBAAkB,GAAe,IAAIC,gBAAU,CAAC;gBAC5C,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,CAAC;gBACZ,QAAQ,EAAE,EAAE;gBACZ,UAAU,EAAE,CAAC;aAChB,CAAC,CAAC;;;;YA2BH,YAAO,GAAWC,gBAAW,CAAC,IAAI,CAAC;;;;;;YAOnC,qBAAgB,GAA2B,EAAE,CAAC;;;;YAI9C,mBAAc,GAAW,GAAG,CAAC;;;;YAI7B,aAAQ,GAAY,IAAI,CAAC;;;;YAIzB,eAAU,GAAY,IAAI,CAAC;;;;;YAM3B,mBAAc,GAAW,qBAAqB,CAAC,uBAAuB,CAAC;;;;;YAIvE,eAAU,GAAY,KAAK,CAAC;;;;;YAM5B,kBAAa,GAAW,QAAQ,CAAC;;;;;YAIjC,gBAAW,GAAY,KAAK,CAAC;;;;YAI7B,mBAAc,GAAY,KAAK,CAAC;;;;YAIhC,2BAAsB,GAAW,OAAO,CAAC;;;;;YAIzC,uBAAkB,GAAY,KAAK,CAAC;;;;YAIpC,wBAAmB,GAAW,mCAAmC,CAAC;;;;;;;;YAUlE,mBAAc,GAAY,KAAK,CAAC;;;;;;YAOhC,YAAO,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;;;;;;;;YAS1B,gBAAW,GAAG,QAAQ,CAAC;;;;;;YAkBvB,YAAO,GAAY,KAAK,CAAC;;;;YAIzB,eAAU,GAAqB,IAAI,CAAC;;;;;;YA4BpC,kBAAa,GAAe,IAAI,CAAC;;;;YAIjC,iBAAY,GAAY,KAAK,CAAC;YAE9B,qBAAgB,GAAW,IAAI,CAAC;;;;YAwBhC,SAAI,GAAe,IAAI,CAAC;;;;YAIxB,aAAQ,GAAW,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;;;;YAIpD,cAAS,GAAkC,IAAI1B,eAAY,EAAmB,CAAC;;;;YAI/E,iBAAY,GAAkC,IAAIA,eAAY,EAAmB,CAAC;;;;YAIlF,iBAAY,GAAiC,IAAIA,eAAY,EAAkB,CAAC;;;;;;YAOhF,YAAO,GAAkC,IAAIA,eAAY,EAAmB,CAAC;;;;YAI7E,UAAK,GAA6B,IAAIA,eAAY,EAAE,CAAC;;;;YAIrD,UAAK,GAAsB,IAAIA,eAAY,EAAE,CAAC;YAK9C,YAAO,GAAyB,EAAE,CAAC;YACnC,yBAAoB,GAAiB,IAAIE,YAAO,EAAE,CAAC;YAEnD,iBAAY,GAAY,KAAK,CAAC;YAC9B,cAAS,GAAG,IAAI,KAAK,EAAa,CAAC;YACnC,gBAAW,GAAkB,IAAIA,YAAO,EAAQ,CAAC;YAKzC,gBAAW,GAAoB,IAAI,CAAC,kBAAkB,CAAC;YAC/D,eAAU,GAAqC,IAAIyB,oBAAe,CAAkB,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAErG,kBAAa,GAAG,EAAE,CAAC;YACnB,kBAAa,GAAmB,EAAE,CAAC;YACnC,iBAAY,GAA4C,EAAE,CAAC;YAa/D,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAACC,yBAAoB,CAAC,cAAc,CAAC,CAAC,SAAS;;;eAAC,UAAC,OAAO;gBACtF,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,OAAO,CAAC;aACvD,EAAC,CAAC;SACN;QAtHD,sBACI,4CAAS;;;gBAUb;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;;;;;;;;;gBAbD,UACc,SAAoB;gBAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;gBAC5B,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACrC,IAAI,IAAI,CAAC,gBAAgB,EAAE;wBACvB,IAAI,CAAC,MAAM,EAAE,CAAC;qBACjB;iBACJ;aACJ;;;WAAA;QAqBD,sBACI,kDAAe;;;gBAcnB;gBACI,OAAO,IAAI,CAAC,gBAAgB,CAAC;aAChC;;;;;;gBAjBD,UACoB,eAAuB;gBACvC,IAAI,IAAI,CAAC,gBAAgB,KAAK,eAAe,EAAE;oBAC3C,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;oBACxC,IAAI,IAAI,CAAC,IAAI,EAAE;wBACX,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;wBAChC,IAAI,CAAC,wBAAwB,EAAE,CAAC;qBACnC;oBAED,IAAI,IAAI,CAAC,gBAAgB,EAAE;wBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;iBACJ;aACJ;;;WAAA;;;;;QA6ED,iDAAiB;;;;YAAjB,UAAkB,IAAe;gBAAjC,iBAcC;gBAbG,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;;wBACd,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACzC,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC/B,OAAO,OAAO,CAAC,GAAG;;;2BAAC,UAAC,aAAiC;4BACjD,OAAO;gCACH,KAAK,EAAE,aAAa;gCACpB,IAAI,EAAE,IAAI;gCACV,OAAO,EAAE,KAAI,CAAC,oBAAoB;6BACrC,CAAC;yBACL,EAAC,CAAC;qBACN;iBACJ;gBACD,OAAO,IAAI,CAAC;aACf;QAED,sBAAI,kDAAe;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;aAC3F;;;WAAA;;;;;QAEO,iDAAiB;;;;YAAzB;;oBACQ,cAA2B;gBAC/B,IAAI,IAAI,CAAC,OAAO,EAAE;oBACR,IAAA,4BAA+B,EAA9B,WAAG,EAAE,iBAAyB;oBACrC,cAAc,GAAG,IAAIN,gBAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;iBACpD;gBACD,OAAO,cAAc,CAAC;aACzB;;;;;;QAEO,+CAAe;;;;;YAAvB,UAAwB,IAAwB;gBAAxB,qBAAA;oBAAA,gBAAwB;;gBAC5C,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,GAAG;;;mBAAC,UAAC,GAAG,IAAK,OAAA,IAAIO,qBAAgB,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;aAC9G;;;;QAED,wCAAQ;;;YAAR;gBACI,OAAO,CAAC,CAAC,gEAAgE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACvG;;;;QAED,uCAAO;;;YAAP;gBACI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC;aACzD;;;;QAED,wCAAQ;;;YAAR;gBAAA,iBAoBC;gBAnBG,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,CAAC,IAAI,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBACpI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACvC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;gBAEnD,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;iBACxC;gBAED,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;iBAClD;gBAED,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,oBAAoB,CAAC,SAAS;;;mBAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,GAAA,EAAC,CAChF,CAAC;gBAEF,IAAI,CAAC,qCAAqC,EAAE,CAAC;aAChD;;;;QAED,kDAAkB;;;YAAlB;gBAAA,iBASC;gBARG,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS;;uBAAC;wBACtC,KAAI,CAAC,cAAc,EAAE,CAAC;qBACzB,EAAC,CACL,CAAC;iBACL;gBACD,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;;;;;QAEO,8CAAc;;;;YAAtB;;oBACQ,MAAM,GAAiB,EAAE;gBAE7B,IAAI,IAAI,CAAC,eAAe,EAAE;oBACtB,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG;;;uBAAC,UAAC,CAAC,8BAAkB,CAAC,KAAA,EAAC,CAAC;iBAC/D;gBAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACZ,IAAI,CAAC,IAAI,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;iBACzI;qBAAM,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;iBAChC;;oBAEK,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACtC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBAClC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACnD;aACJ;;;;;QAED,2CAAW;;;;YAAX,UAAY,OAAsB;gBAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBAE1C;gBACD,IAAI,OAAO,CAAC,WAAW,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,EAAE;oBACtE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC;iBAC5D;gBAED,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,EAAE;;wBACxD,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY;oBAC7C,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3B,IAAA,wBAA2B,EAA1B,WAAG,EAAE,iBAAqB;wBACjC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAIP,gBAAW,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC;qBACzD;iBACJ;gBAED,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;;4BACrC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK;wBAE/D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;wBACrD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBAC/C;yBAAM,IAAI,OAAO,CAAC,aAAa,EAAE;wBAC9B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;qBAClE;iBACJ;aACJ;;;;QAED,sCAAM;;;YAAN;gBAAA,iBAUC;gBATG,IAAI,CAAC,MAAM,CAAC,GAAG;;mBAAC;oBACZ,KAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,IAAI,KAAI,CAAC,IAAI,EAAE;wBACX,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,EAAE,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;wBACtD,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;qBAC/B;yBAAM;wBACH,KAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;iBACJ,EAAC,CAAC;aACN;;;;;QAED,qDAAqB;;;;YAArB,UAAsB,MAAM;gBACxB,IAAI,MAAM,EAAE;oBACR,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;iBACxD;aACJ;;;;;QAED,8CAAc;;;;YAAd,UAAe,IAAqB;gBAApC,iBAuCC;gBAtCG,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;;wBAChB,QAAM,GAAG,IAAI;oBAEjB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;wBACnB,QAAM,GAAG,UAAU,CAAC;qBACvB;yBAAM,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;wBAC5B,QAAM,GAAG,QAAQ,CAAC;qBACrB;oBAED,IAAI,QAAM,EAAE;;4BACF,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;wBAChD,IAAI,OAAO,EAAE;4BACT,OAAO,CAAC,OAAO;;;+BAAC,UAAC,MAAM;gCACnB,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;6BACpC,EAAC,CAAC;4BACH,OAAO,OAAO,CAAC;yBAClB;;4BAEK,eAAe,GAAG,IAAI,CAAC,OAAO;6BAC/B,MAAM;;;uBAAC,UAAC,KAAK;;gCACJ,SAAS,GAAG,CAAC,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU;kCAChD,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;kCACnB,KAAK,CAAC,OAAO;4BAEnB,OAAO,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,QAAM,CAAC;yBAC7D,EAAC;6BACD,GAAG;;;uBAAC,UAAC,MAAM,IAAK,OAAA,IAAI,kBAAkB,CAAC,MAAM,CAAC,GAAA,EAAC;wBAEpD,eAAe,CAAC,OAAO;;;2BAAC,UAAC,MAAM;4BAC3B,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;yBACpC,EAAC,CAAC;wBAEH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC;wBACnD,OAAO,eAAe,CAAC;qBAC1B;iBACJ;gBAED,OAAO,EAAE,CAAC;aACb;;;;;;;QAEO,6CAAa;;;;;;YAArB,UAAsB,MAA0B,EAAE,IAAe;gBAC7D,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBACtD,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACvD;;;;;;;QAEO,+CAAe;;;;;;YAAvB,UAAwB,MAA0B,EAAE,IAAe;gBAC/D,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,UAAU,EAAE;oBACtC,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAC/B;gBAED,OAAO,MAAM,CAAC,OAAO,CAAC;aACzB;;;;;;;QAEO,gDAAgB;;;;;;YAAxB,UAAyB,MAA0B,EAAE,IAAe;gBAChE,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,UAAU,EAAE;oBACvC,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBAChC;gBAED,IAAI,CAAC,MAAM,CAAC,UAAU;oBAClB,MAAM,CAAC,uBAAuB;oBAC9B,CAAC,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,UAAU,CAAC;oBAC1E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;oBACvC,OAAO,IAAI,CAAC;iBACf;qBAAM;oBACH,OAAO,MAAM,CAAC,QAAQ,CAAC;iBAC1B;aACJ;;;;;QAGD,iDAAiB;;;;YADjB,UACkB,CAAS;gBACvB,IAAI,CAAC,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBAC9B,CAAC,CAAC,cAAc,EAAE,CAAC;iBACtB;aACJ;;;;;QAED,0CAAU;;;;YAAV,UAAW,IAAmB;gBAC1B,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;oBAC1B,IAAI,CAAC,wBAAwB,EAAE,CAAC;oBAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,cAAc,oBAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,GAAC,CAAC,CAAC;oBAChE,IAAI,CAAC,MAAM,EAAE,CAAC;oBACd,OAAO,IAAI,CAAC;iBACf;qBAAM;oBACH,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;wBAC9B,IAAI,CAAC,wBAAwB,EAAE,CAAC;wBAChC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;wBAC9D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,cAAc,oBAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,gBAAgB,EAAE,GAAC,CAAC,CAAC;wBACjF,IAAI,CAAC,MAAM,EAAE,CAAC;wBACd,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;;QAEO,0DAA0B;;;;;YAAlC,UAAmC,IAAU;gBACzC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;aAChF;;;;;;QAEO,4CAAY;;;;;YAApB,UAAqB,IAAU;gBAC3B,OAAO,IAAI,CAAC,QAAQ,KAAK,gBAAgB,IAAI,IAAI,CAAC,UAAU;oBACxD,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;aACzC;;;;;QAED,sDAAsB;;;;YAAtB,UAAuB,MAAc;gBACjC,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;aAClC;;;;;;;;;;;;QAOD,oDAAoB;;;;;;YAApB,UAAqB,IAAe,EAAE,MAA0B;gBAC5D,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,EAAE;;wBAC1B,UAAU,SAAA;oBAEd,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,UAAU,EAAE;wBACtC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;qBAC9D;yBAAM;wBACH,UAAU,GAAGvC,OAAE,CAAC,IAAI,CAAC,CAAC;qBACzB;oBAED,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,UAAU,IAAI,UAAU,EAAE;wBACpD,UAAU,CAAC,SAAS;;2BAAC;4BACjB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;yBACxB,EAAC,CAAC;qBACN;iBACJ;aACJ;;;;;;QAEO,+CAAe;;;;;YAAvB,UAAwB,KAAc;gBAAtC,iBAUC;gBATG,IAAI,KAAK,EAAE;oBACP,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAClC,IAAI,CAAC,cAAc,GAAG,UAAU;;uBAAC;wBAC7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;qBACvB,GAAE,IAAI,CAAC,CAAC;iBACZ;qBAAM;oBACH,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACxB;aACJ;;;;QAED,0CAAU;;;YAAV;gBAAA,iBAuBC;gBAtBG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;oBACzB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;iBAC9B;gBAED,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;oBACvB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACnD;gBAED,IAAI,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;oBACvE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;iBACtD;gBAED,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC;qBAC/G,SAAS;;;eAAC,UAAC,YAAgC;oBACxC,IAAI,YAAY,CAAC,WAAW,EAAE;wBAC1B,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;wBACjD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;qBACzD;oBACD,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;iBAC5C;;;mBAAE,UAAC,GAAG;oBACH,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;iBACzB,EAAC,CAAC;aACV;;;;QAED,8CAAc;;;YAAd;gBACI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;gBAChC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;aAC7B;;;;;QAED,4CAAY;;;;YAAZ,UAAa,UAAsB;gBAC/B,IAAI,UAAU,EAAE;oBACZ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACvD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;oBAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;iBAChC;aACJ;;;;;;;;;QAKD,mDAAmB;;;;;YAAnB,UAAoB,MAA0B;gBAA1B,uBAAA;oBAAA,kBAA0B;;gBAC1C,IAAI,IAAI,CAAC,IAAI,EAAE;;wBACL,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;oBAC5C,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBACjC;aACJ;;;;;QAED,6CAAa;;;;YAAb,UAAc,IAAe;gBACzB,IAAI,IAAI,EAAE;oBACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;iBAChD;aACJ;;;;;QAED,2CAAW;;;;YAAX,UAAY,SAAoB;;oBACtB,QAAQ,GAAG,IAAI,WAAW,CAAC,YAAY,EAAE;oBAC3C,MAAM,EAAE;wBACJ,MAAM,EAAE,IAAI;wBACZ,IAAI,EAAE,SAAS;qBAClB;oBACD,OAAO,EAAE,IAAI;iBAChB,CAAC;gBAEF,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;;oBAEhD,KAAK,GAAG,IAAI,eAAe,CAAC,SAAS,CAAC;gBAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE3B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBACzB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,qBAAqB,CAAC,uBAAuB,EAAE;wBACxF,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;qBACtC;iBACJ;aAEJ;;;;;QAED,8CAAc;;;;YAAd,UAAe,SAAoB;;oBACzB,QAAQ,GAAG,IAAI,WAAW,CAAC,eAAe,EAAE;oBAC9C,MAAM,EAAE;wBACJ,MAAM,EAAE,IAAI;wBACZ,IAAI,EAAE,SAAS;qBAClB;oBACD,OAAO,EAAE,IAAI;iBAChB,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;;oBAEhD,KAAK,GAAG,IAAI,eAAe,CAAC,SAAS,CAAC;gBAC5C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAE9B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBACzB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,qBAAqB,CAAC,uBAAuB,EAAE;wBACxF,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;qBACtC;iBACJ;aACJ;;;;;QAED,kDAAkB;;;;YAAlB,UAAmB,SAAoB;gBAAvC,iBAqBC;gBApBG,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;oBAC9B,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;wBACxB,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;qBACjC;oBAED,IAAI,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE;wBAC1B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;qBACpC;oBAED,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;;4BACnB,OAAO,GAAG;4BACZ,OAAO,EAAE,IAAI,CAAC,aAAa;yBAC9B;wBAED,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;6BACrE,IAAI;;;uBAAC,UAAC,IAAe;4BAClB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBAC/B,EAAC,CAAC;qBACV;iBACJ;aACJ;;;;;QAED,4CAAY;;;;YAAZ,UAAa,KAA4D;gBACrE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG;;;mBAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,IAAI,GAAA,EAAC,CAAC;;oBACtD,QAAQ,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;oBAC5C,MAAM,EAAE;wBACJ,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI;wBACpB,SAAS,EAAE,IAAI,CAAC,SAAS;qBAC5B;oBACD,OAAO,EAAE,IAAI;iBAChB,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACzD;;;;;QAED,8CAAc;;;;YAAd,UAAe,KAA4D;gBACvE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG;;;mBAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,IAAI,GAAA,EAAC,CAAC;;oBACtD,QAAQ,GAAG,IAAI,WAAW,CAAC,eAAe,EAAE;oBAC9C,MAAM,EAAE;wBACJ,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI;wBACpB,SAAS,EAAE,IAAI,CAAC,SAAS;qBAC5B;oBACD,OAAO,EAAE,IAAI;iBAChB,CAAC;gBACF,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACzD;;;;;QAED,oDAAoB;;;;YAApB,UAAqB,KAAoB;gBACrC,IAAI,IAAI,CAAC,kBAAkB,EAAE;;wBACnB,IAAI,GAAG,KAAK,CAAC,KAAK;;wBAClB,IAAI,GAAG,oBAAgB,IAAI,CAAC,GAAG,IAAE,IAAI;oBAC3C,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;qBACrD;iBACJ;aACJ;;;;;QAED,oDAAoB;;;;YAApB,UAAqB,KAAoB;gBACrC,IAAI,IAAI,CAAC,cAAc,EAAE;;wBACf,IAAI,GAAG,KAAK,CAAC,KAAK;;wBAClB,IAAI,GAAG,oBAAgB,IAAI,CAAC,GAAG,IAAE,IAAI;oBAC3C,IAAI,IAAI,EAAE;wBACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;qBAClD;iBACJ;aACJ;;;;;QAED,kDAAkB;;;;YAAlB,UAAmB,KAAyB;gBACxC,IAAI,IAAI,CAAC,cAAc,EAAE;;wBACf,IAAI,GAAG,KAAK,CAAC,KAAK;;wBAClB,IAAI,GAAG,oBAAgB,IAAI,CAAC,GAAG,IAAE,IAAI;;wBACrC,MAAM,uBAAyB,IAAI,CAAC,MAAM,GAAC;oBACjD,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBAC3C;aACJ;;;;;QAEO,qEAAqC;;;;YAA7C;gBACI,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;oBACjB,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,uBAAuB,CAAC;iBACvE;aACJ;;;;;QAED,iDAAiB;;;;YAAjB,UAAkB,IAAU;;oBACpB,iBAAiB,GAAY,KAAK;gBAEtC,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACvB,iBAAiB,GAAG,IAAI,CAAC;iBAC5B;gBAED,OAAO,iBAAiB,CAAC;aAC5B;;;;;QAEO,iDAAiB;;;;YAAzB;;oBACU,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,EAAE,IAAI,CAAC;gBAE1E,IAAI,gBAAgB,EAAE;oBAClB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;iBACjF;qBAAM;oBACH,IAAI,CAAC,aAAa,GAAG,mBAAmB,CAAC;iBAC5C;aACJ;;;;;;QAEO,2CAAW;;;;;YAAnB,UAAoB,UAAsB;gBACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACpD;;;;;QAED,gDAAgB;;;;YAAhB,UAAiB,sBAA8C;gBAC3D,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,sBAAsB,CAAC,QAAQ,CAAC;gBAC5D,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,sBAAsB,CAAC,KAAK,CAAC;gBACtD,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,sBAAsB,CAAC,SAAS,CAAC;gBAC9D,IAAI,CAAC,MAAM,EAAE,CAAC;aACjB;;;;;QAEO,wDAAwB;;;;YAAhC;gBACI,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC7C;;;;QAED,2CAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO;;;mBAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,WAAW,EAAE,GAAA,EAAC,CAAC;gBACnD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aAC3B;;;;;;QAEO,2CAAW;;;;;YAAnB,UAAoB,GAAQ;gBACxB,IAAI,GAAG,CAAC,OAAO,EAAE;oBACb,IAAI;wBACA,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,KAAK,GAAG,EAAE;4BAClD,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;4BAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;yBAC5B;qBACJ;oBAAC,OAAO,KAAK,EAAE;qBACf;iBACJ;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAExB;QA9wBM,6CAAuB,GAAW,OAAO,CAAC;QAC1C,6CAAuB,GAAW,UAAU,CAAC;;oBAVvDQ,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAE7B,0nGAA6C;wBAC7C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE;;qBACxC;;;;;wBATQ,mBAAmB;wBAtCkEsC,SAAM;wBAArDpB,aAAU;wBAcrDqB,qBAAgB;wBAEhBC,2BAAsB;wBAXtB1C,mBAAc;wBAadiB,qBAAgB;wBAKhBpB,uBAAkB;wBAElB8C,gBAAW;;;;iCAmCVC,eAAY,SAACC,4BAAuB;2CAGpCD,eAAY,SAACE,0CAAqC;kDAGlDF,eAAY,SAACG,wCAAmC;8CAGhDH,eAAY,SAACI,wCAAmC;oCAIhD1B,QAAK;4BAOLA,QAAK;8BAILA,QAAK;uCAOLA,QAAK;qCAILA,QAAK;+BAILA,QAAK;iCAILA,QAAK;qCAMLA,QAAK;iCAILA,QAAK;oCAMLA,QAAK;kCAILA,QAAK;qCAILA,QAAK;6CAILA,QAAK;yCAILA,QAAK;0CAILA,QAAK;qCAULA,QAAK;8BAOLA,QAAK;kCASLA,QAAK;+BAOLA,QAAK;oCAILA,QAAK;8BAOLA,QAAK;iCAILA,QAAK;gCAQLA,QAAK;oCAoBLA,QAAK;mCAILA,QAAK;sCAMLA,QAAK;2BAoBLA,QAAK;+BAILA,QAAK;gCAILJ,SAAM;mCAINA,SAAM;mCAINA,SAAM;8BAONA,SAAM;4BAINA,SAAM;4BAINA,SAAM;gCAGN+B,YAAS,SAAC,WAAW;wCAsPrB1B,eAAY,SAAC,aAAa,EAAE,CAAC,QAAQ,CAAC;;QAqT3C,4BAAC;KAzxBD;;;;;;;QC9BI,oCAAoB,YAAmC,EAAU,UAAsB;YAAnE,iBAAY,GAAZ,YAAY,CAAuB;YAAU,eAAU,GAAV,UAAU,CAAY;YACnF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0IAA0I,CAAC,CAAC;SACnK;;;;;;;;;;QAMD,mDAAc;;;;;YAAd,UAAe,MAAkB;gBAC7B,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE;;wBACvB,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE;oBACnD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACrB,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;oBArBJtB,YAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,EAAE;qBACf;;;;;wBALQ,qBAAqB;wBAHrBH,eAAU;;;QA2BnB,iCAAC;KAtBD;;;;;;;QCiCI,gCAAoB,IAAgC,EAAU,UAAsB;YAAhE,SAAI,GAAJ,IAAI,CAA4B;YAAU,eAAU,GAAV,UAAU,CAAY;YAvBpF,SAAI,GAAW,MAAM,CAAC;YAMtB,aAAQ,GAAY,KAAK,CAAC;YAG1B,UAAK,GAAW,EAAE,CAAC;YAef,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kIAAkI,CAAC,CAAC;SAC3J;;;;QAED,yCAAQ;;;YAAR;gBACI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,KAAK,YAAY,EAAE;oBAC5C,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC;iBAC9B;aACJ;;;;QAED,mDAAkB;;;YAAlB;gBACI,IAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;;;;QAED,yCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBACzC;gBACD,OAAO,KAAK,CAAC;aAChB;;oBApDJG,YAAS,SAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,EAAE;qBACf;;;;;wBALQ,0BAA0B;wBAH1BH,eAAU;;;;0BAWdwB,QAAK;2BAGLA,QAAK;6BAGLA,QAAK;+BAGLA,QAAK;4BAGLA,QAAK;+BAGLsB,eAAY,SAACM,cAAW;8BAMxB5B,QAAK,SAAC,UAAU;+BAGhBA,QAAK,SAAC,OAAO;;QAuBlB,6BAAC;KArDD;;;;;;;;;;;;;;;;;;;;;;ACRA;QAKI,yBAAY,GAAS;YACjB,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC;gBACjC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC;aAC5C;SACJ;QACL,sBAAC;IAAD,CAAC;;;;;;;QCKG,4BAAoB,oBAA8C,EAC/C,SAAoB,EACpB,OAAuB,EACtB,mBAAyC,EACzC,UAA+B,EAC/B,MAAkB;YALlB,yBAAoB,GAApB,oBAAoB,CAA0B;YAC/C,cAAS,GAAT,SAAS,CAAW;YACpB,YAAO,GAAP,OAAO,CAAgB;YACtB,wBAAmB,GAAnB,mBAAmB,CAAsB;YACzC,eAAU,GAAV,UAAU,CAAqB;YAC/B,WAAM,GAAN,MAAM,CAAY;YAPtC,UAAK,GAAsB,IAAIZ,eAAY,EAAO,CAAC;SAOT;;;;;QAE1C,yCAAY;;;;YAAZ,UAAa,IAAe;gBACxB,IAAIyC,0BAAqB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC;qBAClD,YAAY,CAAC,IAAI,CAAC,CAAC;aAC3B;;;;;;;;;;;;;;QAQM,wCAAW;;;;;;;YAAlB,UAAmB,YAAkB,EAAE,UAAmB;gBACtD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;aAC5E;;;;;;;;;;;;;;QAQM,uCAAU;;;;;;;YAAjB,UAAkB,YAAkB,EAAE,UAAmB;gBACrD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;aAC3E;;;;;;;;;;;;;;QAQM,wCAAW;;;;;;;YAAlB,UAAmB,YAAkB,EAAE,UAAmB;gBACtD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;aAC5E;;;;;;;;;;;;;;QAQM,uCAAU;;;;;;;YAAjB,UAAkB,YAAkB,EAAE,UAAmB;gBACrD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;aAC3E;;;;;;;;;;;;;;;;;;;QAUO,4CAAe;;;;;;;;;;YAAvB,UAAwB,MAAc,EAAE,IAAY,EAAE,YAAkB,EAAE,UAAmB;gBAA7F,iBAkBC;;oBAjBS,UAAU,GAAoB,IAAIvC,YAAO,EAAU;gBAEzD,IAAI,CAAC,oBAAoB;qBACpB,kBAAkB,CAAC,MAAM,EAAE,YAAY,EAAE,UAAU,CAAC;qBACpD,SAAS;;;eAAC,UAAC,UAAkB;;wBACpB,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC;oBAC/B,KAAI,CAAC,mBAAmB,CAAI,MAAM,SAAM,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,EAAE,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC;yBAClG,SAAS,CACV,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,uBAAqB,IAAI,CAAC,WAAW,EAAE,SAAI,MAAM,CAAC,WAAW,EAAI,CAAC,EACnG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAChC,CAAC;iBACT;;;mBACD,UAAC,KAAK;oBACF,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACxB,OAAO,UAAU,CAAC;iBACrB,EAAC,CAAC;gBACP,OAAO,UAAU,CAAC;aACrB;;oBAtFJhB,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAJQ,wBAAwB;wBAHxBkB,kBAAS;wBADWd,mBAAc;wBAGlC,mBAAmB;wBAHnBH,uBAAkB;wBAClBiB,kBAAS;;;;4BAUbI,SAAM;;;iCA/BX;KA0BA;;;;;;;QCYI,gCAAoB,kBAAsC,EACtC,wBAAkD,EAClD,WAA+B,EAC/B,mBAAyC,EACzC,cAA+B;YAJ/B,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,6BAAwB,GAAxB,wBAAwB,CAA0B;YAClD,gBAAW,GAAX,WAAW,CAAoB;YAC/B,wBAAmB,GAAnB,mBAAmB,CAAsB;YACzC,mBAAc,GAAd,cAAc,CAAiB;YAVnD,oBAAe,GAA6B,IAAIN,YAAO,EAAmB,CAAC;YAC3E,UAAK,GAAmB,IAAIA,YAAO,EAAS,CAAC;YAC7C,YAAO,GAAoB,IAAIA,YAAO,EAAU,CAAC;YAEzC,aAAQ,GAA4C,EAAE,CAAC;YAO3D,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;;;;;;;;;;;QAOD,2CAAU;;;;;YAAV,UAAW,GAAW;gBAClB,IAAI,GAAG,EAAE;;wBACC,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE;oBAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;iBACtC;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;;;;;;;;QAQD,2CAAU;;;;;;YAAV,UAAW,GAAW,EAAE,OAA6B;gBACjD,IAAI,GAAG,EAAE;;wBACC,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;oBAC9B,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;;;;;;;QAOD,iDAAgB;;;;;YAAhB,UAAiB,SAAoB;gBACjC,OAAO,IAAI,CAAC,mBAAmB,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC;aACnF;;;;;QAEO,oDAAmB;;;;YAA3B;gBACI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACzD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACpD;;;;;;;;QAEO,yCAAQ;;;;;;;YAAhB,UAAiB,IAAe,EAAE,MAAY,EAAE,UAAmB;gBAC/D,OAAO,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACvE;;;;;;;;QAEO,6CAAY;;;;;;;YAApB,UAAqB,GAAc,EAAE,MAAY,EAAE,UAAmB;gBAClE,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;aAC7C;;;;;;;;QAEO,yCAAQ;;;;;;;YAAhB,UAAiB,IAAe,EAAE,MAAY,EAAE,UAAmB;;oBACzD,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC;gBACpF,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC9E,OAAO,gBAAgB,CAAC;aAC3B;;;;;;;;QAEO,yCAAQ;;;;;;;YAAhB,UAAiB,IAAe,EAAE,MAAY,EAAE,UAAmB;;oBACzD,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC;gBACpF,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC9E,OAAO,gBAAgB,CAAC;aAC3B;;;;;;;;;;QAEO,gDAAe;;;;;;;;;YAAvB,UAAwB,gBAAgB,EAAE,IAAY,EAAE,MAAc,EAAE,MAAY,EAAE,UAAmB;gBAAzG,iBAOC;gBANG,gBAAgB,CAAC,SAAS;;;mBACtB,UAAC,oBAAoB;oBACjB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;iBAC3C,GACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CACnC,CAAC;aACL;;;;;;;;QAEO,2CAAU;;;;;;;YAAlB,UAAmB,IAAe,EAAE,MAAY,EAAE,UAAmB;gBAArE,iBAuBC;;oBAtBO,iBAAiB;gBAErB,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBAC7B,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;wBACpE,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACvE,iBAAiB,CAAC,SAAS;;2BAAC;;gCAClB,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;4BAChG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC9B;;2BAAE;;gCACO,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;4BACtG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC5B,EAAC,CAAC;wBACH,OAAO,iBAAiB,CAAC;qBAC5B;yBAAM;wBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC;4BAC1C,IAAI,EAAE,SAAS;4BACf,MAAM,EAAE,QAAQ;4BAChB,UAAU,EAAE,UAAU;yBACzB,CAAC,CAAC,CAAC;wBACJ,OAAOjB,eAAU,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;qBAC3D;iBACJ;aACJ;;oBApHJC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBALQ,kBAAkB;wBAClB,wBAAwB;wBARRoB,uBAAkB;wBAMlC,mBAAmB;wBANnBhB,mBAAc;;;;qCAjBvB;KA2BA;;;;;;;QCUI,8BAAoB,kBAAsC,EACtC,mBAAwC,EACxC,cAA8B,EAC9B,WAA+B;YAH/B,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,gBAAW,GAAX,WAAW,CAAoB;YATnD,oBAAe,GAA6B,IAAIY,YAAO,EAAmB,CAAC;YAC3E,UAAK,GAAmB,IAAIA,YAAO,EAAS,CAAC;YAC7C,YAAO,GAAoB,IAAIA,YAAO,EAAU,CAAC;YAEzC,aAAQ,GAA4C,EAAE,CAAC;YAM3D,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC9B;;;;;;;;;;;QAOD,yCAAU;;;;;YAAV,UAAW,GAAW;gBAClB,IAAI,GAAG,EAAE;;wBACC,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE;oBAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;iBACtC;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;;;;;;;;QAQD,yCAAU;;;;;;YAAV,UAAW,GAAW,EAAE,OAA6B;gBACjD,IAAI,GAAG,EAAE;;wBACC,IAAI,GAAG,GAAG,CAAC,WAAW,EAAE;oBAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;oBAC9B,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;;;;;;;QAOD,+CAAgB;;;;;YAAhB,UAAiB,SAAoB;gBACjC,OAAO,IAAI,CAAC,mBAAmB,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC;aACrF;;;;;QAEO,kDAAmB;;;;YAA3B;gBACI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5D;;;;;;QAEO,2CAAY;;;;;YAApB,UAAqB,SAAoB;gBACrC,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aACnD;;;;;;;;QAEO,uCAAQ;;;;;;;YAAhB,UAAiB,SAAoB,EAAE,MAAY,EAAE,UAAmB;;oBAC9D,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC;gBACxF,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC7E,OAAO,gBAAgB,CAAC;aAC3B;;;;;;;;QAEO,uCAAQ;;;;;;;YAAhB,UAAiB,SAAoB,EAAE,MAAY,EAAE,UAAmB;;oBAC9D,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,EAAE,UAAU,CAAC;gBACxF,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC7E,OAAO,gBAAgB,CAAC;aAC3B;;;;;;;;;;QAEO,8CAAe;;;;;;;;;YAAvB,UAAwB,gBAAgB,EAAE,IAAY,EAAE,MAAc,EAAE,MAAY,EAAE,UAAmB;gBAAzG,iBAUC;gBATG,gBAAgB,CAAC,SAAS;;;mBACtB,UAAC,oBAAoB;oBACjB,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,EAAE;wBAC/C,MAAM,CAAC,MAAM,EAAE,CAAC;qBACnB;oBACD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;iBAC3C,GACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CACnC,CAAC;aACL;;;;;;;;QAEO,yCAAU;;;;;;;YAAlB,UAAmB,IAAe,EAAE,MAAY,EAAE,UAAmB;gBAArE,iBAwBC;;oBAvBO,iBAAkC;gBAEtC,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;oBAC7B,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE;wBACpE,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;wBACvE,iBAAiB,CAAC,SAAS;;2BAAC;4BACxB,IAAI,MAAM,IAAI,OAAO,MAAM,CAAC,MAAM,KAAK,UAAU,EAAE;gCAC/C,MAAM,CAAC,MAAM,EAAE,CAAC;6BACnB;;gCAEK,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;4BAChG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC9B;;2BAAE;;gCACO,OAAO,GAAG,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,iCAAiC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;4BACtG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;yBAC5B,EAAC,CAAC;wBAEH,OAAO,iBAAiB,CAAC;qBAC5B;yBAAM;wBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAC,CAAC,CAAC,CAAC;wBAC3G,OAAOjB,eAAU,CAAC,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;qBAC3D;iBACJ;aACJ;;oBAlHJC,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAJQ,kBAAkB;wBADlB,mBAAmB;wBANnBI,mBAAc;wBAAEgB,uBAAkB;;;;mCAjB3C;KA0BA;;;;;;;QCII,oCAAoB,YAAmC;YAAnC,iBAAY,GAAZ,YAAY,CAAuB;SACtD;;;;;;;;;;QAMD,mDAAc;;;;;YAAd,UAAe,MAA0B;gBACrC,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE;oBAC7B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBACvC,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;QAED,qDAAgB;;;;YAAhB,UAAiB,MAA0B;gBACvC,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE;;wBACvB,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;oBACrD,IAAI,GAAG,IAAI,CAAC,EAAE;wBACV,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wBACzC,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,OAAO,KAAK,CAAC;aAChB;;oBA9BJf,YAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,EAAE;qBACf;;;;;wBALQ,qBAAqB;;;QAiC9B,iCAAC;KA/BD;;;;;;;QCuEI,gCACY,IAAgC,EAChC,eAAuC,EACvC,aAAmC;YAFnC,SAAI,GAAJ,IAAI,CAA4B;YAChC,oBAAe,GAAf,eAAe,CAAwB;YACvC,kBAAa,GAAb,aAAa,CAAsB;;;;YA1D/C,UAAK,GAAW,QAAQ,CAAC;;;;YAQzB,YAAO,GAAuB,IAAI,CAAC;;;;YAQnC,WAAM,GAAW,mBAAmB,CAAC,GAAG,CAAC;;;;YAYzC,aAAQ,GAAuB,KAAK,CAAC;;;;YAIrC,YAAO,GAAG,IAAIS,eAAY,EAAE,CAAC;;;;YAI7B,oBAAe,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;;YAMrC,UAAK,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;;YAM3B,YAAO,GAAG,IAAIA,eAAY,EAAE,CAAC;YAKrB,kBAAa,GAAmB,EAAE,CAAC;SAM1C;;;;QAED,yCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,MAAM,KAAK,mBAAmB,CAAC,GAAG,EAAE;oBACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBACzE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;iBAChF;qBAAM;oBACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBAC/D;aACJ;;;;;QAED,4CAAW;;;;YAAX,UAAY,OAAsB;gBAC9B,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,EAAE;oBACjD,IAAI,IAAI,CAAC,mBAAmB,EAAE;wBAC1B,IAAI,CAAC,mBAAmB,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;qBACnE;oBACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;wBACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC;qBACjE;iBACJ;gBAED,IAAI,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE;oBACnD,IAAI,IAAI,CAAC,mBAAmB,EAAE;wBAC1B,IAAI,CAAC,mBAAmB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;qBACrE;oBACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;wBACxB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;qBACnE;iBACJ;aACJ;;;;QAED,4CAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO;;;mBAAC,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,WAAW,EAAE,GAAA,EAAC,CAAC;gBACzE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBAExB,IAAI,IAAI,CAAC,mBAAmB,EAAE;oBAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;iBACnC;gBAED,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;oBACxC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBACjC;aACJ;;;;;QAED,yCAAQ;;;;YAAR,UAAS,KAAyB;gBAC9B,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;iBAC1C;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;QAED,2CAAU;;;;YAAV,UAAW,KAAyB;gBAChC,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;iBAC5C;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;;QAEO,+CAAc;;;;;YAAtB,UAAuB,MAAc;gBAArC,iBAsBC;;oBArBS,KAAK,GAAG,IAAI,kBAAkB,CAAC;oBACjC,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;oBACrD,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,OAAO,EAAE,IAAI,CAAC,OAAO;iBACxB,CAAC;gBACF,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC/D;gBAED,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,KAAK,CAAC,OAAO;;;uBAAG,UAAC,KAAU;wBACvB,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;qBAChC,CAAA,CAAC;iBACL;gBAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,OAAO,KAAK,CAAC;aAChB;;;;;;QAED,iDAAgB;;;;;YAAhB,UAAiB,MAAc,EAAE,IAAY;gBAA7C,iBA2CC;gBA1CG,IAAI,MAAM,EAAE;oBACR,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;oBAE9B,IAAI,MAAM,KAAK,mBAAmB,CAAC,QAAQ,EAAE;wBACzC,IAAI,IAAI,CAAC,eAAe,EAAE;4BACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,SAAS;;;+BAAC,UAAC,UAAU;gCACtD,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;6BACzC,EAAC,EACF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS;;;+BAAC,UAAC,MAAM;gCACxC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;6BAC3B,EAAC,EACF,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS;;;+BAAC,UAAC,OAAO;gCAC3C,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAC9B,EAAC,CACL,CAAC;4BAEF,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;yBAChD;wBACD,OAAO,IAAI,CAAC;qBACf;oBAED,IAAI,MAAM,KAAK,mBAAmB,CAAC,MAAM,EAAE;wBACvC,IAAI,IAAI,CAAC,aAAa,EAAE;4BACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS;;;+BAAC,UAAC,UAAU;gCACpD,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;6BACzC,EAAC,EACF,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS;;;+BAAC,UAAC,MAAM;gCACtC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;6BAC3B,EAAC,EACF,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS;;;+BAAC,UAAC,OAAO;gCACzC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BAC9B,EAAC,CACL,CAAC;4BAEF,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;yBAC9C;wBACD,OAAO,IAAI,CAAC;qBACf;iBACJ;gBACD,OAAO,IAAI,CAAC;aACf;;oBAtMJT,YAAS,SAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,EAAE;wBACZ,SAAS,EAAE;4BACP,sBAAsB;4BACtB,oBAAoB;yBACvB;qBACJ;;;;;wBAVQ,0BAA0B;wBAH1B,sBAAsB;wBACtB,oBAAoB;;;;4BAgBxBqB,QAAK;2BAILA,QAAK;8BAILA,QAAK;8BAILA,QAAK;6BAILA,QAAK;iCAILA,QAAK;8CAILA,QAAK;+BAILA,QAAK;8BAILJ,SAAM;sCAINA,SAAM;4BAMNA,SAAM;8BAMNA,SAAM;;QA4IX,6BAAC;KAvMD;;;;;;;QC0BI,oCACY,OAAmB,EACnB,kBAAsC;YADtC,YAAO,GAAP,OAAO,CAAY;YACnB,uBAAkB,GAAlB,kBAAkB,CAAoB;YARlD,oBAAe,GAAG,IAAImB,oBAAe,CAAS,EAAE,CAAC,CAAC;YAClD,iBAAY,GAAG,IAAIA,oBAAe,CAAS,EAAE,CAAC,CAAC;SAQ3C;;;;QAEJ,6CAAQ;;;YAAR;gBAAA,iBAgBC;gBAfG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS;;;mBACpD,UAAC,IAAU;;wBACD,GAAG,GAAiB,KAAI,CAAC,OAAO,CAAC,GAAG;oBAC1C,IAAI,GAAG,EAAE;wBACG,IAAA,sBAAK;wBAEb,IAAI,KAAK,KAAK,IAAI,EAAE;4BAChB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,OAAA,EAAE,CAAC;4BACrB,KAAI,CAAC,WAAW,EAAE,CAAC;yBACtB;qBACJ;iBACJ,EACJ,CAAC;aACL;;;;;QAES,gDAAW;;;;YAArB;gBACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;;oBAC5B,IAAI,GAAwB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;gBAC9D,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAClB,IAAI,CAAC,gBAAgB,oBAAO,IAAI,CAAC,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,CACrD,CAAC;oBACF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;iBACvE;aACJ;;;;QAED,4CAAO;;;YAAP;gBACI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CACpC,IAAI,WAAW,CAAC,YAAY,EAAE;oBAC1B,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE;wBACJ,IAAI,EAAE,IAAI,CAAC,IAAI;qBAClB;iBACJ,CAAC,CACL,CAAC;aACL;;;;;QAED,uDAAkB;;;;YAAlB,UAAmB,OAAY;gBACnB,IAAA,iCAAW,EAAE,qBAAK;gBAE1B,OAAO,WAAW,IAAI,KAAK,IAAI,EAAE,CAAC;aACrC;;;;;;QAED,qDAAgB;;;;;YAAhB,UAAiB,OAAa,EAAE,IAAyB;;oBAC/C,OAAO,GAAG,IAAI,CAAC,GAAG;;;mBAAC,UAAC,GAAiB,IAAK,OAAA,GAAG,CAAC,IAAI,CAAC,KAAK,GAAA,EAAC;gBACvD,IAAA,qBAAK,EAAE,eAAE;;oBAEb,WAAW,GAAG,KAAK;gBAEvB,IAAI,OAAO,EAAE;oBACT,WAAW,GAAG,OAAO,CAAC,IAAI;;;uBAAC,UAAC,KAAU;wBAClC,OAAO,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC;qBACnD,EAAC,CAAC;iBACN;gBAED,OAAO,WAAW,GAAM,KAAK,UAAK,EAAE,MAAG,GAAG,KAAG,KAAO,CAAC;aACxD;;;;QAED,gDAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;oBACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBACnB;aACJ;;oBA9FJpC,YAAS,SAAC;wBACP,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,kLAIT;wBACD,eAAe,EAAEmD,0BAAuB,CAAC,MAAM;wBAC/C,aAAa,EAAElD,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE;4BACF,KAAK,EAAE,uEAAuE;yBACjF;qBACJ;;;;;wBApBGkB,aAAU;wBAKLvB,uBAAkB;;;;8BAiBtByB,QAAK;;QAiFV,iCAAC;KA/FD;;;;;;;QCkBI,oCAAoB,GAAuB;YAAvB,QAAG,GAAH,GAAG,CAAoB;YAJ3C,iBAAY,GAAG,IAAIe,oBAAe,CAAS,EAAE,CAAC,CAAC;SAIA;;;;QAE/C,6CAAQ;;;YAAR;gBAAA,iBAcC;gBAbG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS;;;mBAAC,UAAC,IAAU;;wBAC3C,GAAG,GAAiB,KAAI,CAAC,OAAO,CAAC,GAAG;oBAC1C,IAAI,GAAG,EAAE;wBACG,IAAA,sBAAK;wBAEb,IAAI,KAAK,KAAK,IAAI,EAAE;4BAChB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,OAAA,EAAE,CAAC;4BACrB,KAAI,CAAC,WAAW,EAAE,CAAC;yBACtB;qBACJ;iBACJ,EAAC,CAAC;aACN;;;;;QAES,gDAAW;;;;YAArB;;oBACU,IAAI,GAAc,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI;gBAC7C,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;;wBACd,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI;oBACpC,QAAQ,IAAI;wBACR,KAAKgB,UAAI,CAAC,QAAQ,CAAC,WAAW;4BAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;4BAC/C,MAAM;wBACV,KAAKA,UAAI,CAAC,QAAQ,CAAC,gBAAgB;4BAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;4BACpD,MAAM;wBACV,KAAKA,UAAI,CAAC,QAAQ,CAAC,eAAe;4BAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;4BACnD,MAAM;wBACV,KAAKA,UAAI,CAAC,QAAQ,CAAC,YAAY;4BAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;4BAChD,MAAM;wBACV;4BACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;4BAC3B,MAAM;qBACb;iBACJ;aACJ;;;;QAED,gDAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;oBACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBACnB;aACJ;;oBAlEJpD,YAAS,SAAC;wBACP,QAAQ,EAAE,yBAAyB;wBACnC,QAAQ,EAAE,qLAIT;wBACD,eAAe,EAAEmD,0BAAuB,CAAC,MAAM;wBAC/C,aAAa,EAAElD,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,oDAAoD,EAAE;qBACxE;;;;;wBAdQL,uBAAkB;;;;8BAgBtByB,QAAK;;QAuDV,iCAAC;KAnED;;;;;;;QCUI,sCAAoB,GAAuB;YAAvB,QAAG,GAAH,GAAG,CAAoB;YAJ3C,iBAAY,GAAG,IAAIe,oBAAe,CAAS,EAAE,CAAC,CAAC;SAIA;;;;QAE/C,+CAAQ;;;YAAR;gBAAA,iBAcC;gBAbG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,SAAS;;;mBAAC,UAAC,IAAU;;wBAC3C,GAAG,GAAiB,KAAI,CAAC,OAAO,CAAC,GAAG;oBAC1C,IAAI,GAAG,EAAE;wBACG,IAAA,sBAAK;wBAEb,IAAI,KAAK,KAAK,IAAI,EAAE;4BAChB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,OAAA,EAAE,CAAC;4BACrB,KAAI,CAAC,WAAW,EAAE,CAAC;yBACtB;qBACJ;iBACJ,EAAC,CAAC;aACN;;;;;QAES,kDAAW;;;;YAArB;;oBACU,IAAI,GAAc,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI;gBAC7C,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;;wBACd,UAAU,GAAW,IAAI,CAAC,KAAK,CAAC,UAAU;oBAEhD,QAAQ,UAAU;wBACd,KAAKgB,UAAI,CAAC,cAAc,CAAC,MAAM;4BAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;4BACpD,MAAM;wBACV,KAAKA,UAAI,CAAC,cAAc,CAAC,OAAO;4BAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;4BACrD,MAAM;wBACV,KAAKA,UAAI,CAAC,cAAc,CAAC,SAAS;4BAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;4BACvD,MAAM;wBACV;4BACI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;4BAClC,MAAM;qBACb;iBACJ;aACJ;;;;QAED,kDAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;oBACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBACnB;aACJ;;oBA9DJpD,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,QAAQ,EAAE,qLAIT;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,sDAAsD,EAAE;qBAC1E;;;;;wBAbQJ,uBAAkB;;;;8BAetByB,QAAK;;QAqDV,mCAAC;KA/DD;;;;;;;QC6BI,6BAAoB,OAAmB,EAAU,kBAAsC;YAAnE,YAAO,GAAP,OAAO,CAAY;YAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;YALvF,iBAAY,GAAG,IAAIe,oBAAe,CAAS,EAAE,CAAC,CAAC;SAK4C;;;;QAE3F,sCAAQ;;;YAAR;gBAAA,iBAcC;gBAbG,IAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,SAAS;;;mBAAC,UAAC,IAAU;;wBAC1D,GAAG,GAAiB,KAAI,CAAC,OAAO,CAAC,GAAG;oBAC1C,IAAI,GAAG,EAAE;wBACG,IAAA,sBAAK;wBAEb,IAAI,KAAK,KAAK,IAAI,EAAE;4BAChB,GAAG,CAAC,IAAI,GAAG,EAAE,KAAK,OAAA,EAAE,CAAC;4BACrB,KAAI,CAAC,WAAW,EAAE,CAAC;yBACtB;qBACJ;iBACJ,EAAC,CAAC;aACN;;;;;QAES,yCAAW;;;;YAArB;gBACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;gBAElC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBACtE;aACJ;;;;QAED,qCAAO;;;YAAP;gBACI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CACpC,IAAI,WAAW,CAAC,YAAY,EAAE;oBAC1B,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE;wBACJ,IAAI,EAAE,IAAI,CAAC,IAAI;qBAClB;iBACJ,CAAC,CACL,CAAC;aACL;;;;QAED,yCAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;oBACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;iBACnB;aACJ;;oBA9DJpC,YAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,QAAQ,EAAE,oLAIT;wBACD,eAAe,EAAEmD,0BAAuB,CAAC,MAAM;wBAC/C,aAAa,EAAElD,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,+DAA+D,EAAE;qBACnF;;;;;wBAnBGkB,aAAU;wBAKLvB,uBAAkB;;;;8BAgBtByB,QAAK;;QAmDV,0BAAC;KA/DD;;;;;;;QCLA;YAkBE,cAAS,GAAG,KAAK,CAAC;SAyCnB;;;;QApCC,8CAAQ;;;YAAR;gBACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;;oBAC5B,IAAI,GAAwB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;gBAE9D,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAChC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC;oBAExD,IAAI,IAAI,CAAC,SAAS,EAAE;wBACV,IAAA,uCAAU;wBAElB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;wBAChE,IAAI,CAAC,cAAc;4BACjB,UAAU,CAAC,gBAAgB,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC;qBAC1D;yBAAM;wBACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;qBAC/D;iBACF;aACF;;;;;;QAED,sDAAgB;;;;;YAAhB,UAAiB,OAAY,EAAE,IAAyB;;oBAChD,OAAO,GAAG,IAAI,CAAC,GAAG;;;mBAAC,UAAC,CAAe,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,KAAK,GAAA,EAAC;gBACnD,IAAA,eAAE;;oBACJ,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC;;oBAExC,WAAW,GAAG,KAAK;gBAEvB,IAAI,OAAO,EAAE;oBACX,WAAW,GAAG,OAAO,CAAC,IAAI;;;uBAAC,UAAC,KAAU;wBACpC,OAAO,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,KAAK,CAAC;qBAClE,EAAC,CAAC;iBACJ;gBAED,OAAO,WAAW;sBACX,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,UAAK,OAAO,CAAC,IAAI,MAAG;sBACrD,KAAG,OAAO,CAAC,UAAU,CAAC,UAAU,CAAG,CAAC;aACzC;;oBA1DFrB,YAAS,SAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,QAAQ,EAAE,4VAOT;wBACD,eAAe,EAAEmD,0BAAuB,CAAC,MAAM;wBAC/C,aAAa,EAAElD,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,qDAAqD,EAAE;qBACvE;;;8BAEEoB,QAAK;;QA4CR,kCAAC;KA3DD;;;;;;;;;;;;;;;;;;;;;;;ACNA;QAAA;SAEC;QAAD,iBAAC;IAAD,CAAC,IAAA;;QAED;SAGC;QAAD,qBAAC;IAAD,CAAC,IAAA;;QAED;SAEC;QAAD,uBAAC;IAAD,CAAC,IAAA;;QAED;SAMC;QAAD,iBAAC;IAAD,CAAC,IAAA;;QAED;YAaI,eAAU,GAAmB,EAAE,CAAC;SAEnC;QAAD,kBAAC;IAAD,CAAC,IAAA;;QAED;SAGC;QAAD,eAAC;IAAD,CAAC,IAAA;;QAED;SAKC;QAAD,kBAAC;IAAD,CAAC,IAAA;;QAED;SAIC;QAAD,qBAAC;IAAD,CAAC,IAAA;;QAED;SAGC;QAAD,wBAAC;IAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;AC7DD;QAMI,8BAAY,GAAW,EAAE,UAAmC,EAAE,MAAsB,EAAE,QAAwB;YAAhD,uBAAA;gBAAA,aAAsB;;YAAE,yBAAA;gBAAA,eAAwB;;YAH9G,aAAQ,GAAY,IAAI,CAAC;YACzB,WAAM,GAAY,IAAI,CAAC;YAGnB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACL,2BAAC;IAAD,CAAC;;;;;;;QCuBG,sCAAoB,aAA4B,EAC5B,cAAiC;YADjC,kBAAa,GAAb,aAAa,CAAe;YAC5B,mBAAc,GAAd,cAAc,CAAmB;;;;YAnBrD,aAAQ,GAAW,OAAO,CAAC;;;;YAI3B,UAAK,GAAsB,IAAIZ,eAAY,EAAE,CAAC;YAE9C,uBAAkB,GAAgB,EAAE,CAAC;YACrC,mBAAc,GAAY,KAAK,CAAC;YAChC,mBAAc,GAAW,CAAC,CAAC;YAC3B,gBAAW,GAAW,CAAC,CAAC;YACxB,sBAAiB,GAAY,KAAK,CAAC;YACnC,mBAAc,GAAY,KAAK,CAAC;SAS/B;;;;QAED,+CAAQ;;;YAAR;gBAAA,iBAyCC;gBAxCG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa;qBACrC,YAAY,CAAC,SAAS;;;eAAC,UAAC,QAAqB;oBAC1C,KAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;oBAEnC,IAAI,KAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;wBAChC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;qBAC9B;iBACJ,EAAC,CAAC;gBAEP,IAAI,CAAC,mBAAmB,GAAG4C,UAAK,CACxB,IAAI,CAAC,aAAa,CAAC,kBAAkB,EACrC,IAAI,CAAC,aAAa,CAAC,iBAAiB,CACvC;qBACA,SAAS;;;eAAC,UAAC,KAAwD;oBAChE,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC;oBAC1C,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;iBACvC,EAAC,CAAC;gBAEP,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe;qBACtD,SAAS;;;eAAC,UAAC,KAA2B;oBACnC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;iBACvC,EAAC,CAAC;gBAEP,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa;qBAC3C,UAAU,CAAC,SAAS;;eAAC;oBAClB,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;iBACvC,EAAC,CAAC;gBAEP,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS;;;mBAAC,UAAC,KAAK;oBAC3C,IAAI,KAAI,CAAC,kBAAkB,EAAE;;4BACnB,IAAI,GAAG,KAAI,CAAC,kBAAkB,CAAC,IAAI;;;2BAAC,UAAC,IAAI;4BAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK,CAAC;yBACvC,EAAC;wBACF,IAAI,IAAI,EAAE;4BACN,IAAI,CAAC,MAAM,GAAGC,qBAAgB,CAAC,SAAS,CAAC;4BACzC,KAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;yBACvC;qBACJ;iBACJ,EAAC,CAAC;aACN;;;;;;;;QAKD,yDAAkB;;;;YAAlB;gBACI,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;gBAE3C,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBACxB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;iBAClC;aACJ;;;;;;;;QAKD,uDAAgB;;;;YAAhB;gBACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAE1B,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC;aACpC;;;;;;;;QAKD,sDAAe;;;;YAAf;gBACI,IAAI,CAAC,iBAAiB,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBACjD,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;aACvC;;;;;;;;QAKD,4CAAK;;;;YAAL;gBACI,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;gBACxB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;gBAC7B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBAChC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;aACvC;;;;QAED,kDAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;gBAChC,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;gBACpC,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;gBACvC,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;gBAC1C,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;aACxC;;oBA5HJtD,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,ixIAAqD;;qBAExD;;;;;wBAV2CuD,kBAAa;wBAEhDC,oBAAiB;;;;iCAUrBR,YAAS,SAAC,YAAY;+BAItB3B,QAAK;4BAILJ,SAAM;;QA+GX,mCAAC;KA7HD;;;;;;;QCLA;YAUI,WAAM,GAA4B,IAAIR,eAAY,EAAa,CAAC;YAGhE,WAAM,GAA4B,IAAIA,eAAY,EAAa,CAAC;YAEhE,qBAAgB,GAAG6C,qBAAgB,CAAC;SAqCvC;;;;;QAnCG,gDAAQ;;;;YAAR,UAAS,IAAe;gBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;;;;;QAED,gDAAQ;;;;YAAR,UAAS,IAAe;gBACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;;;;QAED,2DAAmB;;;YAAnB;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,SAAS;oBAClD,IAAI,CAAC,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,OAAO;oBAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,OAAO,CAAC;aACrD;QAED,sBAAI,wDAAa;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;aAC7D;;;WAAA;QAED,sBAAI,mDAAQ;;;gBAAZ;gBACI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;oBACpD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;iBAC9B;gBAED,OAAO,SAAS,CAAC;aACpB;;;WAAA;;;;QAED,uDAAe;;;YAAf;gBACI,QACI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;oBAChB,IAAI,CAAC,IAAI,CAAC,OAAO;oBACjB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU;oBAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU;oBAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,EACpD;aACL;;oBAnDJtD,YAAS,SAAC;wBACP,QAAQ,EAAE,6BAA6B;wBACvC,2iHAAuD;;qBAE1D;;;2BAEIqB,QAAK;6BAGLJ,SAAM;6BAGNA,SAAM;;QAwCX,oCAAC;KApDD;;;;;;;QCiCI,oCACY,aAA4B,EAC5B,QAAyB,EACzB,gBAAoC;YAFpC,kBAAa,GAAb,aAAa,CAAe;YAC5B,aAAQ,GAAR,QAAQ,CAAiB;YACzB,qBAAgB,GAAhB,gBAAgB,CAAoB;YAfhD,qBAAgB,GAAGqC,qBAAgB,CAAC;YAMpC,UAAK,GAAgB,EAAE,CAAC;;;;YAIxB,UAAK,GAAsB,IAAI7C,eAAY,EAAE,CAAC;SAM1C;;;;;;;;;;;;;;;;QASJ,+CAAU;;;;;;;;YAAV,UAAW,IAAe;gBACtB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzC;;;;;;;;;;;;;;;;QASD,+CAAU;;;;;;;;YAAV,UAAW,IAAe;gBAA1B,iBASC;gBARG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS;;mBAAC;oBAC5B,IAAI,IAAI,CAAC,MAAM,KAAK6C,qBAAgB,CAAC,KAAK,EAAE;wBACxC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;qBAC1B;oBAED,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;oBACtC,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBACzC,EAAC,CAAC;aACN;;;;;;;;QAKD,mDAAc;;;;YAAd;gBAAA,iBAoBC;gBAnBG,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO;;;mBAAC,UAAC,IAAI;oBAClC,OAAA,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;iBAAA,EACxC,CAAC;;oBAEI,YAAY,GAAG,IAAI,CAAC,KAAK;qBAC1B,MAAM;;;eAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,QAAQ,GAAA,EAAC;qBAC3D,GAAG;;;eAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA,EAAC;gBAEzCxD,aAAQ,wBAAI,YAAY,GAAE,SAAS;;;mBAAC,UAAC,KAAkB;;;wBAC7C,MAAM,GAAG,KAAK,CAAC,MAAM;;;uBACvB,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAKwD,qBAAgB,CAAC,KAAK,GAAA,EACnD;oBAED,IAAI,MAAM,CAAC,MAAM,EAAE;wBACf,KAAI,CAAC,WAAW,OAAhB,KAAI,WAAgB,MAAM,GAAE;qBAC/B;oBAED,CAAA,KAAA,KAAI,CAAC,aAAa,EAAC,YAAY,oBAAI,KAAK,GAAE;iBAC7C,EAAC,CAAC;aACN;;;;;;;;QAKD,sDAAiB;;;;YAAjB;gBACI,QACI,CAAC,IAAI,CAAC,iBAAiB,EAAE;oBACzB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC1B,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI;;;uBACZ,UAAC,EAAU;4BAAR,kBAAM;wBACL,OAAA,MAAM,KAAKA,qBAAgB,CAAC,QAAQ;4BACpC,MAAM,KAAKA,qBAAgB,CAAC,QAAQ;4BACpC,MAAM,KAAKA,qBAAgB,CAAC,OAAO;qBAAA,EAC1C,EACH;aACL;;;;;;;;QAKD,sDAAiB;;;;YAAjB;gBACI,QACI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM;oBACnB,IAAI,CAAC,KAAK,CAAC,KAAK;;;uBACZ,UAAC,EAAU;4BAAR,kBAAM;wBACL,OAAA,MAAM,KAAKA,qBAAgB,CAAC,OAAO;4BACnC,MAAM,KAAKA,qBAAgB,CAAC,SAAS;4BACrC,MAAM,KAAKA,qBAAgB,CAAC,OAAO;qBAAA,EAC1C,EACH;aACL;;;;;;QAEO,+CAAU;;;;;YAAlB,UAAmB,IAAe;gBACtB,IAAA,uBAAE;gBAEV,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CACzD/D,aAAG;;mBAAC;oBACA,IAAI,CAAC,MAAM,GAAG+D,qBAAgB,CAAC,OAAO,CAAC;oBACvC,OAAO,IAAI,CAAC;iBACf,EAAC,EACFlE,oBAAU;;mBAAC;oBACP,IAAI,CAAC,MAAM,GAAGkE,qBAAgB,CAAC,KAAK,CAAC;oBACrC,OAAO9D,OAAE,CAAC,IAAI,CAAC,CAAC;iBACnB,EAAC,CACL,CAAC;aACL;;;;;;QAEO,+DAA0B;;;;;YAAlC,UAAmC,IAAI;gBACnC,IAAI,CAAC,KAAK;qBACL,MAAM;;;eACH,UAAC,IAAI;oBACD,OAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBACzC,IAAI,CAAC,OAAO,CAAC,UAAU;iBAAA,EAC9B;qBACA,GAAG;;;eAAC,UAAC,IAAI;oBACN,IAAI,CAAC,MAAM,GAAG8D,qBAAgB,CAAC,OAAO,CAAC;iBAC1C,EAAC,CAAC;aACV;;;;;;QAEO,gDAAW;;;;;YAAnB;gBAAoB,eAAqB;qBAArB,UAAqB,EAArB,qBAAqB,EAArB,IAAqB;oBAArB,0BAAqB;;;oBACjC,YAAY,GAAW,IAAI;gBAE/B,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpB,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,wCAAwC,EACxC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAC9B,CAAC;iBACL;qBAAM;oBACH,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CACxC,yCAAyC,EACzC,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,CAC1B,CAAC;iBACL;gBAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aACjC;;;;;QAEO,sDAAiB;;;;YAAzB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM;;;mBAAC,UAAC,IAAI;oBAC1B,IACI,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,OAAO;wBACxC,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,QAAQ;wBACzC,IAAI,CAAC,MAAM,KAAKA,qBAAgB,CAAC,QAAQ,EAC3C;wBACE,OAAO,IAAI,CAAC;qBACf;iBACJ,EAAC,CAAC;aACN;;oBApKJtD,YAAS,SAAC;wBACP,QAAQ,EAAE,yBAAyB;wBACnC,0KAAmD;;qBAEtD;;;;;wBAjBGuD,kBAAa;wBAFbE,oBAAe;wBACf1C,uBAAkB;;;;+BAsBjB4B,eAAY,SAACM,cAAW;4BAGxB5B,QAAK;4BAILJ,SAAM;;QAsJX,iCAAC;KArKD;;;;;;;;;;;;;;;;;;;;;;ACfA;QAWI,0BACW,KAAuB,EACtB,aAA4B,EAC5B,QAA2B;YAF5B,UAAK,GAAL,KAAK,CAAkB;YACtB,kBAAa,GAAb,aAAa,CAAe;YAC5B,aAAQ,GAAR,QAAQ,CAAmB;YAb/B,uBAAkB,GAAY,KAAK,CAAC;SAcxC;QAZJ,sBAAI,8CAAgB;;;gBAApB;gBACI,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;WAAA;;;;QAED,yCAAc;;;YAAd;gBACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;aAClC;;;;QAQD,sCAAW;;;YAAX;gBACI,IAAI,CAAC,cAAc,EAAE,CAAC;aACzB;;;;QAED,uCAAY;;;YAAZ;;gBACI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;oBACrC,CAAA,KAAA,IAAI,CAAC,aAAa,EAAC,UAAU,oBAAI,IAAI,CAAC,KAAK,GAAE;oBAC7C,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;iBAC3D;aACJ;QACL,uBAAC;IAAD,CAAC;;;;;;;;;ACxBD;QAoDI,oBAAsB,aAA4B,EAC5B,kBAAsC,EACtC,MAAc;YAFd,kBAAa,GAAb,aAAa,CAAe;YAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,WAAM,GAAN,MAAM,CAAQ;;;;;YA1CpC,iBAAY,GAAW,QAAQ,CAAC;;;;YAIhC,aAAQ,GAAY,KAAK,CAAC;;;;YAI1B,sBAAiB,GAAW,GAAG,CAAC;;;;YAIhC,eAAU,GAAY,KAAK,CAAC;;;;YAI5B,iBAAY,GAAY,KAAK,CAAC;;;;YAQ9B,aAAQ,GAAW,YAAY,CAAC;;;;YAIhC,YAAO,GAAG,IAAIR,eAAY,EAAE,CAAC;;;;YAI7B,UAAK,GAAG,IAAIA,eAAY,EAAE,CAAC;;;;YAI3B,gBAAW,GAAG,IAAIA,eAAY,EAAoB,CAAC;YAEzC,kBAAa,GAAmB,EAAE,CAAC;SAK5C;;;;QAED,6BAAQ;;;YAAR;gBAAA,iBAOC;gBANG,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,SAAS;;;mBAAC,UAAC,KAAK;oBAC/C,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B,EAAC,CACL,CAAC;aAEL;;;;QAED,gCAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO;;;mBAAC,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,WAAW,EAAE,GAAA,EAAC,CAAC;gBACzE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;aAC3B;;;;;;;;;;;QAOD,gCAAW;;;;;YAAX,UAAY,KAAa;gBAAzB,iBAOC;;oBANS,aAAa,GAAgB,KAAK;qBACnC,GAAG;;;eAAY,UAAC,IAAU;oBACvB,OAAO,KAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,oBAAO,IAAI,IAAE,kBAAkB,IAAI,EAAE,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;iBAC1H,EAAC;gBAEN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;aACnC;;;;;QAED,oCAAe;;;;YAAf,UAAgB,KAAiB;gBAAjC,iBAOC;;oBANS,aAAa,GAAgB,KAAK;qBACnC,GAAG;;;eAAY,UAAC,QAAkB;oBAC/B,OAAO,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,cAAc,CAAC,CAAC;iBAC1F,EAAC;gBAEN,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;aACnC;;;;;;QAEO,gCAAW;;;;;YAAnB,UAAoB,KAAkB;gBAAtC,iBAoBC;;oBAnBS,aAAa,GAAG,KAAK;qBACtB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACxC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEjD,IAAI,CAAC,MAAM,CAAC,GAAG;;mBAAC;;;wBACN,KAAK,GAAG,IAAI,gBAAgB,UAC1B,aAAa,GACjB,KAAI,CAAC,aAAa,EAClB,KAAI,CAAC,OAAO,CACf;oBACD,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE7B,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;wBACzB,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;4BAC1B,CAAA,KAAA,KAAI,CAAC,aAAa,EAAC,UAAU,oBAAI,aAAa,GAAE;4BAChD,KAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;yBAC1D;qBACJ;iBACJ,EAAC,CAAC;aACN;;;;;;;;;;;;;QAOS,qCAAgB;;;;;;;YAA1B,UAA2B,IAAe;gBACtC,IAAI,IAAI,CAAC,iBAAiB,KAAK,GAAG,EAAE;oBAChC,OAAO,IAAI,CAAC;iBACf;;oBAEK,iBAAiB,GAAG,IAAI,CAAC,iBAAiB;qBAC3C,KAAK,CAAC,GAAG,CAAC;qBACV,GAAG;;;eAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAA,EAAC;gBAEhD,IAAI,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;oBAClD,OAAO,IAAI,CAAC;iBACf;gBAED,OAAO,KAAK,CAAC;aAChB;;;;;;;;;;;;;;;;QAOS,oCAAe;;;;;;;;;;YAAzB,UAA0B,IAAU,EAAE,QAAgB,EAAE,IAAY,EAAE,EAAW;gBAC7E,OAAO,IAAIiD,cAAS,CAAC,IAAI,EAAE;oBACvB,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,QAAQ,EAAE,QAAQ;oBAClB,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAE,IAAI,CAAC,QAAQ;iBAC1B,EAAE,EAAE,CAAC,CAAC;aACV;;;;;;QAES,sCAAiB;;;;;YAA3B,UAA4B,IAAe;;oBACnC,iBAAiB,GAAG,IAAI;gBAC5B,IAAI,IAAI,CAAC,oBAAoB,EAAE,EAAE;oBAC7B,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;iBACpD;gBAED,OAAO,iBAAiB,CAAC;aAC5B;;;;;QAES,yCAAoB;;;;YAA9B;gBACI,OAAO,IAAI,CAAC,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC;aACxE;;;;;;QAES,sCAAiB;;;;;YAA3B,UAA4B,IAAe;gBACvC,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC;aACnE;;;;;;;;;;;;;QAOO,yCAAoB;;;;;;;YAA5B,UAA6B,IAAe;;oBACpC,cAAc,GAAG,IAAI;gBAEzB,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;oBAC/B,cAAc,GAAG,KAAK,CAAC;;wBAEjB,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAC3C,2CAA2C,EAC3C,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,CAC1B;oBAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;gBAED,OAAO,cAAc,CAAC;aACzB;;mCAzLArC,QAAK;mCAMLA,QAAK;+BAILA,QAAK;wCAILA,QAAK;iCAILA,QAAK;mCAILA,QAAK;8BAILA,QAAK;+BAILA,QAAK;8BAILJ,SAAM;4BAINA,SAAM;kCAINA,SAAM;;QAiJX,iBAAC;KAhMD;;;;;;;QCgB2Ce,yCAAU;QA0BjD,+BAAsB,aAA4B,EAC9B,cAA8B,EAC5B,kBAAsC,EACtC,UAAsB,EACtB,MAAc;YAJpC,YAKI,kBAAM,aAAa,EAAE,kBAAkB,EAAE,MAAM,CAAC,SACnD;YANqB,mBAAa,GAAb,aAAa,CAAe;YAC9B,oBAAc,GAAd,cAAc,CAAgB;YAC5B,wBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,gBAAU,GAAV,UAAU,CAAY;YACtB,YAAM,GAAN,MAAM,CAAQ;;;;YA1BpC,mBAAa,GAAY,KAAK,CAAC;;;;YAI/B,mBAAa,GAAY,KAAK,CAAC;;;;YAQ/B,aAAO,GAAW,IAAI,CAAC;;;;YAIvB,qBAAe,GAAkC,IAAIvB,eAAY,EAAmB,CAAC;YAE7E,4BAAsB,GAAY,KAAK,CAAC;YAEtC,qBAAe,GAAqB,IAAIE,YAAO,EAAW,CAAC;;SAQpE;;;;QAED,wCAAQ;;;YAAR;gBAAA,iBAIC;gBAHG,IAAI,CAAC,eAAe,CAAC,SAAS;;;mBAAC,UAAC,UAAmB;oBAC/C,KAAI,CAAC,sBAAsB,GAAG,UAAU,CAAC;iBAC5C,EAAC,CAAC;aACN;;;;;QAED,2CAAW;;;;YAAX,UAAY,OAAsB;;oBACxB,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC;gBAC5C,IAAI,YAAY,IAAI,YAAY,CAAC,YAAY,EAAE;oBAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;aACJ;;;;QAED,gDAAgB;;;YAAhB;gBACI,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,SAAS,CAAC;aAC3C;;;;;QAED,4CAAY;;;;YAAZ,UAAa,MAAW;;oBACd,KAAK,GAAWgD,cAAS,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;gBAEvE,IAAI,IAAI,CAAC,sBAAsB,EAAE;oBAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAC/G;;gBAED,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;aAC5B;;;;;QAED,gDAAgB;;;;YAAhB,UAAiB,MAAW;gBACxB,IAAI,IAAI,CAAC,sBAAsB,EAAE;;wBACvB,KAAK,GAAWA,cAAS,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC;oBACvE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,eAAe,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;iBAC/G;;gBAED,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;aAC5B;;;;QAED,+CAAe;;;YAAf;gBAAA,iBAYC;gBAXG,IAAI,IAAI,CAAC,YAAY,EAAE;;wBACb,IAAI,GAAQ;wBACd,aAAa,EAAE,IAAI;wBACnB,OAAO,EAAE,CAAC,qBAAqB,CAAC;qBACnC;oBAED,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,SAAS;;;uBAC1D,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,EAAE/C,4BAAuB,CAAC,MAAM,CAAC,CAAC,GAAA;;;uBACrG,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,EACpC,CAAC;iBACL;aACJ;;;;;;QAED,iDAAiB;;;;;YAAjB,UAAkB,IAAU,EAAE,UAA4C;gBACtE,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;aACvE;;oBAnGJZ,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,sgGAA6C;wBAE7C,aAAa,EAAE;4BACX,EAAE,OAAO,EAAE4D,yBAAoB,EAAE,WAAW,EAAEC,aAAU;;uCAAC,cAAM,OAAA,qBAAqB,GAAA,EAAC,EAAE;yBAC1F;wBACD,aAAa,EAAE5D,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAnBkEsD,kBAAa;wBAD5ExD,mBAAc;wBAC6BgB,uBAAkB;wBAA7DlB,eAAU;wBAImD0C,SAAM;;;;oCAmBlElB,QAAK;oCAILA,QAAK;kCAILA,QAAK;8BAILA,QAAK;sCAILJ,SAAM;;QAwEX,4BAAC;KAAA,CA3F0C,UAAU;;;;;;;QCPHe,gDAAqB;QATvE;;SAkCC;;;;;;QAnBa,sDAAe;;;;;YAAzB,UAA0B,IAAU;;oBAC1B,SAAS,GAAG,iBAAM,eAAe,YAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC,oBAAO,IAAI,IAAE,kBAAkB,IAAI,EAAE,EAAE,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;gBAEhJ,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE;;wBAC7B,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,mDAAmD,CAAC;oBACpG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;gBAED,OAAO,SAAS,CAAC;aACpB;;;;QAED,+CAAQ;;;YAAR;gBACI,iBAAM,QAAQ,WAAE,CAAC;gBACjB,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;;;;QAED,sDAAe;;;YAAf;gBACI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAEpB,4BAAuB,CAAC,MAAM,CAAC,CAAC,CAAC;aAChG;;oBAjCJZ,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,sgGAA6C;wBAE7C,aAAa,EAAE;4BACX,EAAE,OAAO,EAAE4D,yBAAoB,EAAE,WAAW,EAAEC,aAAU;;uCAAC,cAAM,OAAA,4BAA4B,GAAA,EAAC,EAAE;yBACjG;wBACD,aAAa,EAAE5D,oBAAiB,CAAC,IAAI;;qBACxC;;;2BAIIoB,QAAK;;QAsBV,mCAAC;KAAA,CAzBiD,qBAAqB;;;;;;;QCE1BW,2CAAU;QAEnD,iCAAsB,aAA4B,EAC5B,kBAAsC,EACxC,mBAAwC,EACxC,cAA8B,EAC5B,MAAc;YAJpC,YAKI,kBAAM,aAAa,EAAE,kBAAkB,EAAE,MAAM,CAAC,SACnD;YANqB,mBAAa,GAAb,aAAa,CAAe;YAC5B,wBAAkB,GAAlB,kBAAkB,CAAoB;YACxC,yBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,oBAAc,GAAd,cAAc,CAAgB;YAC5B,YAAM,GAAN,MAAM,CAAQ;;SAEnC;;;;;;;;;;;;QAOD,gDAAc;;;;;;YAAd,UAAe,KAAa;gBACxB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;oBAChC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBAC3B;aACJ;;;;;;;;;;;;QAOD,uDAAqB;;;;;;YAArB,UAAsB,MAAW;gBAAjC,iBAMC;gBALG,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;oBACtC2B,cAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI;;;uBAAC,UAAC,SAAS;wBACrC,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;qBACnC,EAAC,CAAC;iBACN;aACJ;;;;;;;;;;;;QAOD,yDAAuB;;;;;;YAAvB,UAAwB,gBAA6B;gBAArD,iBAQC;;oBAPO,gBAAqB;;oBAAE,eAAoB;gBAC/C,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;gBAChF,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBAEzE,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS;;mBAAC;;oBACtH,CAAA,KAAA,KAAI,CAAC,aAAa,EAAC,YAAY,oBAAI,gBAAgB,GAAE;iBACxD,EAAC,CAAC;aACN;;;;;;QAGD,6CAAW;;;;YAAX;gBACI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;aACzB;;;;;;;;;;;;QAOD,+CAAa;;;;;;YAAb,UAAc,KAAkB;gBAC5B,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,cAAc,EAAE,CAAC;;oBACjB,SAAS,GAAY,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE/C,4BAAuB,CAAC,MAAM,CAAC;gBAClI,IAAI,SAAS,EAAE;;wBACL,QAAQ,GAAe,KAAK,CAAC,MAAM,CAAC,KAAK;oBAC/C,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE;;4BAC1B,uBAAqB,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI;wBAC9D,QAAQ,CAAC,GAAG;;;2BAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,cAAc,GAAG,uBAAqB,GAAG,uBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc,GAAA,EAAC,CAAC;qBACjJ;oBACD,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;wBACjC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;qBAClC;iBACJ;aACJ;;;;;;QAEO,oDAAkB;;;;;YAA1B,UAA2B,KAAkB;gBACzC,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;aACxE;;oBAvFJZ,YAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;wBAChC,6UAAgD;wBAEhD,IAAI,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE;wBACzC,aAAa,EAAE;4BACX,EAAE,OAAO,EAAE4D,yBAAoB,EAAE,WAAW,EAAEC,aAAU;;uCAAC,cAAM,OAAA,uBAAuB,GAAA,EAAC,EAAE;yBAC5F;wBACD,aAAa,EAAE5D,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAd4CsD,kBAAa;wBAAjCxC,uBAAkB;wBAAvC+C,wBAAmB;wBAAqC/D,mBAAc;wBAEvBwC,SAAM;;;QA4FzD,8BAAC;KAAA,CA/E4C,UAAU;;;;;;;QCRnD,6BAAoB,WAA+B;YAA/B,gBAAW,GAAX,WAAW,CAAoB;SAClD;;;;;QAED,uCAAS;;;;YAAT,UAAU,SAAiB;gBACvB,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,yBAAsB,SAAS,IAAI,SAAS,CAAE,CAAC,CAAC;aACnF;;oBAXJwB,OAAI,SAAC;wBACF,IAAI,EAAE,oBAAoB;wBAC1B,IAAI,EAAE,IAAI;qBACb;;;;;wBALQhD,uBAAkB;;;QAc3B,0BAAC;KAZD;;;;;;;;;ACKA;QAsBI,gCAAY,EAAc,EAAU,MAAc;YAAd,WAAM,GAAN,MAAM,CAAQ;;;;YAblD,YAAO,GAAY,IAAI,CAAC;;;;YAIxB,iBAAY,GAAyB,IAAIN,eAAY,EAAU,CAAC;;;;YAIhE,wBAAmB,GAAsB,IAAIA,eAAY,EAAE,CAAC;YAEpD,iBAAY,GAAW,iCAAiC,CAAC;YAI7D,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,CAAC;SACnC;;;;QAED,yCAAQ;;;YAAR;gBAAA,iBAOC;gBANG,IAAI,CAAC,MAAM,CAAC,iBAAiB;;mBAAC;oBAC1B,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;oBACxE,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;oBACtE,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;oBACxE,KAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;iBACtE,EAAC,CAAC;aACN;;;;QAED,4CAAW;;;YAAX;gBACI,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC9D,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChE,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aAC9D;;;;;;;;;;QAMD,4CAAW;;;;;YAAX,UAAY,KAAU;gBAClB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;;;wBAGrB,KAAK,GAAG,KAAK,CAAC,YAAY,CAAC,KAAK;oBACtC,IAAI,KAAK,EAAE;;4BACD,KAAK,GAAW,EAAE;wBAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACnC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;;oCACrB,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,EAAE;gCAExC,IAAI,IAAI,EAAE;oCACN,IAAI,IAAI,CAAC,MAAM,EAAE;;4CACP,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;wCAEjC,IAAI,IAAI,EAAE;4CACN,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yCACpB;qCACJ;yCAAM,IAAI,IAAI,CAAC,WAAW,EAAE;wCACzB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qCACvC;iCACJ;6BACJ;yBACJ;wBACD,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;yBACjC;qBACJ;yBAAM;;;4BAEG,KAAK,GAAGkD,cAAS,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC;wBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBACjC;oBAED,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACpD;aACJ;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,KAAY;gBACpB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACjD;aACJ;;;;;;;;;;;;QAOD,4CAAW;;;;;;YAAX,UAAY,KAAY;gBACpB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACpD;aACJ;;;;;;;;;;;;QAOD,2CAAU;;;;;;YAAV,UAAW,KAAY;gBACnB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBACzC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;oBAC3B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBACjD;aACJ;;;;;;;;;;;;QAOD,+CAAc;;;;;;YAAd,UAAe,KAAY;gBACvB,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,KAAK,CAAC,cAAc,EAAE,CAAC;aAC1B;;oBAjIJzC,YAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;qBACnC;;;;;wBAPmBC,aAAU;wBAAuBoB,SAAM;;;;8BAatDlB,QAAK,SAAC,oBAAoB;mCAI1BJ,SAAM;0CAINA,SAAM;;QAkHX,6BAAC;KAlID;;;;;;;QCOA;SA2B4B;;oBA3B3BhC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACL2C,eAAU,CAAC,QAAQ,EAAE;4BACrBL,mBAAY;4BACZ,cAAc;yBACjB;wBACD,YAAY,EAAE;4BACV,sBAAsB;4BACtB,uBAAuB;4BACvB,qBAAqB;4BACrB,4BAA4B;4BAC5B,4BAA4B;4BAC5B,0BAA0B;4BAC1B,6BAA6B;4BAC7B,mBAAmB;yBACtB;wBACD,OAAO,EAAE;4BACL,sBAAsB;4BACtB,uBAAuB;4BACvB,qBAAqB;4BACrB,4BAA4B;4BAC5B,4BAA4B;4BAC5B,0BAA0B;4BAC1B,6BAA6B;4BAC7B,mBAAmB;yBACtB;qBACJ;;QAC0B,mBAAC;KA3B5B;;;;;;;QCKA;SAwCkC;;oBAxCjCtC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACL2C,eAAU,CAAC,QAAQ,EAAE;4BACrBL,mBAAY;4BACZyC,2BAAgB;4BAChB,cAAc;4BACd,YAAY;yBACf;wBACD,YAAY,EAAE;4BACV,qBAAqB;4BACrB,sBAAsB;4BACtB,2BAA2B;4BAC3B,4BAA4B;4BAC5B,0BAA0B;4BAC1B,0BAA0B;4BAC1B,mBAAmB;4BACnB,0BAA0B;4BAC1B,sBAAsB;4BACtB,0BAA0B;yBAC7B;wBACD,OAAO,EAAE;4BACL,qBAAqB;4BACrB,sBAAsB;4BACtB,2BAA2B;4BAC3B,4BAA4B;4BAC5B,0BAA0B;4BAC1B,0BAA0B;4BAC1B,mBAAmB;4BACnB,0BAA0B;4BAC1B,sBAAsB;4BACtB,0BAA0B;yBAC7B;wBACD,eAAe,EAAE;4BACb,2BAA2B;4BAC3B,4BAA4B;4BAC5B,0BAA0B;4BAC1B,0BAA0B;4BAC1B,mBAAmB;yBACtB;qBACJ;;QACgC,yBAAC;KAxClC;;;;;;;;;;;;;;;;;;;;;;;;;;;QCmCI,mCAAoB,SAA2B,EAAU,kBAAsC;YAA3E,cAAS,GAAT,SAAS,CAAkB;YAAU,uBAAkB,GAAlB,kBAAkB,CAAoB;YA9BvF,eAAU,GAAG,EAAE,CAAC;YAExB,YAAO,GAAG,IAAIrD,YAAO,EAAa,CAAC;YACnC,aAAQ,GAAG,IAAIA,YAAO,EAAmB,CAAC;YAC1C,UAAK,GAAG,IAAIA,YAAO,EAAE,CAAC;YAEtB,eAAU,GAA0B,EAAE,CAAC;YACvC,mBAAc,GAA6B,EAAE,CAAC;YAC9C,kBAAa,GAAkB,EAAE,CAAC;YAClC,WAAM,GAA8C,IAAI,CAAC;YACzD,YAAO,GAAmC,EAAE,CAAC;YAEnC,qBAAgB,GAA+C,EAAE,CAAC;YAW5E,WAAM,GAAwB;gBAC1B,UAAU,EAAE,EAAE;aACjB,CAAC;;YAGF,WAAM,GAAkC,EAAE,CAAC;YAGvC,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;QAlBD,sBAAI,gDAAS;;;gBAAb;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;gBAED,UAAc,KAAa;gBACvB,KAAK,GAAG,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;gBAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,GAAG,MAAI,KAAK,MAAG,GAAG,EAAE,CAAC;aAC/C;;;WALA;;;;;;;;QAqBD,mDAAe;;;;YAAf;;oBACU,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAsB,QAAQ,CAAC;gBAClE,IAAI,QAAQ,EAAE;oBACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnD,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,EAAE,MAAM;;;uBAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,OAAO,GAAA,EAAC,CAAC;oBACxF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC;oBACrD,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;oBAC3B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;wBACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;qBACrD;iBACJ;aACJ;;;;;;;;;;;;QAOD,sDAAkB;;;;;;YAAlB,UAAmB,KAAiB,EAAE,MAAwB;gBAC1D,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,MAAM,EAAE;;wBAC1B,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;;wBAClD,QAAQ,GAAG,OAAO,CAAC,IAAI;;;uBAAC,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,GAAA,EAAC;oBAClF,IAAI,CAAC,QAAQ,EAAE;wBACX,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACxB;oBACD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;iBAChD;aACJ;;;;;;;;;;;QAOD,uDAAmB;;;;;YAAnB,UAAoB,KAAa;gBAC7B,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;aAC7C;;;;;;;;;;;;QAOD,yDAAqB;;;;;;YAArB,UAAsB,KAAiB,EAAE,MAAwB;gBAC7D,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,MAAM,EAAE;;wBAC1B,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE;oBACxD,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO;yBACvC,MAAM;;;mBAAC,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,GAAA,EAAC,CAAC;iBACpE;aACJ;;;;;;;;;;QAMD,kDAAc;;;;;YAAd,UAAe,KAAa;gBACxB,IAAI,KAAK,EAAE;;wBACD,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI;;;uBAAC,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,KAAK,KAAK,KAAK,GAAA,EAAC;oBACtF,IAAI,CAAC,QAAQ,EAAE;wBACX,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;qBAC7C;iBACJ;aACJ;;;;;;;;;;QAMD,qDAAiB;;;;;YAAjB,UAAkB,KAAa;gBAC3B,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa;yBAClC,MAAM;;;mBAAC,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,KAAK,KAAK,KAAK,GAAA,EAAC,CAAC;iBAC7D;aACJ;;;;;;;;;;;QAOD,iDAAa;;;;;YAAb,UAAc,KAAa;gBACvB,IAAI,KAAK,IAAI,IAAI,CAAC,eAAe,EAAE;;wBACzB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI;;;uBAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,KAAK,KAAK,KAAK,GAAA,EAAC;oBACtF,IAAI,MAAM,EAAE;wBACR,oBAAY,MAAM,EAAG;qBACxB;iBACJ;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;;;;;;QAOD,iDAAa;;;;;YAAb,UAAc,KAAa;gBACvB,IAAI,KAAK,EAAE;;wBACD,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,EAAE;;wBAC7C,MAAM,GAAG,MAAM,CAAC,IAAI;;;uBAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,KAAK,KAAK,KAAK,GAAA,EAAC;oBAC5D,IAAI,MAAM,EAAE;wBACR,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBACpD,oBAAY,MAAM,EAAG;qBACxB;iBACJ;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;;;QAKD,0CAAM;;;;YAAN;;oBACU,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE;gBAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5B;;;;;;;;;QAMK,2CAAO;;;;YAAb;;;;;;;gCAEc,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE;qCAC3B,KAAK;oCAAL,wBAAK;gCACoC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAA;;gCAAxF,eAAe,GAAoB,SAAqD;gCAC9F,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;;;;gCAGxC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAK,CAAC,CAAC;gCAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oCACf,IAAI,EAAE;wCACF,UAAU,EAAE;4CACR,UAAU,EAAE,CAAC;yCAChB;wCACD,OAAO,EAAE,EAAE;qCACd;iCACJ,CAAC,CAAC;;;;;;aAEV;;;;;;;;;QAMD,8CAAU;;;;YAAV;;oBACU,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE;;oBAE5B,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE;gBACzC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;iBAC/C;gBAED,IAAI,KAAK,EAAE;;wBACD,MAAM,sBAA0B;wBAClC,KAAK,EAAE;4BACH,KAAK,EAAE,KAAK;4BACZ,QAAQ,EAAE,MAAM;yBACnB;wBACD,OAAO,EAAE,OAAO;wBAChB,MAAM,EAAE,IAAI,CAAC,MAAM;wBACnB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;wBAC1B,aAAa,EAAE,IAAI,CAAC,aAAa;wBACjC,YAAY,EAAE,IAAI,CAAC,YAAY;wBAC/B,cAAc,EAAE,IAAI,CAAC,cAAc;wBACnC,WAAW,EAAE,IAAI,CAAC,WAAW;wBAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,SAAS,EAAE,IAAI,CAAC,SAAS;qBAC5B,EAAA;oBAED,MAAM,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;oBAC7B,OAAO,MAAM,CAAC;iBACjB;gBAED,OAAO,IAAI,CAAC;aACf;;;;;;;;;QAMD,qDAAiB;;;;YAAjB;gBACI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBAC1B;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;;;;QAMD,qDAAiB;;;;YAAjB;gBACI,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;oBACpC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;iBAC5C;gBACD,OAAO,EAAE,CAAC;aACb;;;;;;;;;;;QAOD,iDAAa;;;;;YAAb,UAAc,KAAK;gBACf,OAAO,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,IAAI,eAAe,CAAC;aAC3E;QAMD,sBAAI,sDAAe;;;;;;;;gBAAnB;gBACI,IAAI,IAAI,CAAC,MAAM;uBACR,IAAI,CAAC,MAAM,CAAC,YAAY;uBACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO;uBAChC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBAChD,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;;WAAA;QAMD,sBAAI,wDAAiB;;;;;;;;gBAArB;gBACI,IAAI,IAAI,CAAC,MAAM;uBACR,IAAI,CAAC,MAAM,CAAC,cAAc;uBAC1B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS;uBACpC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpD,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,KAAK,CAAC;aAChB;;;WAAA;QAED,sBAAI,wDAAiB;;;gBAArB;gBACI,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,GAAG,KAAK,CAAC;aAC9D;;;WAAA;QAED,sBAAc,2CAAI;;;;gBAAlB;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG;;;mBAAC,UAAC,GAAG;oBACxB,OAAO,IAAIsD,gCAA0B,CAAC;wBAClC,IAAI,EAAE,GAAG,CAAC,IAAI;wBACd,KAAK,EAAE,GAAG,CAAC,KAAK;wBAChB,SAAS,EAAE,GAAG,CAAC,SAAS;qBAC3B,CAAC,CAAC;iBACN,EAAC,CAAC;aACN;;;WAAA;QAED,sBAAc,mDAAY;;;;gBAA1B;gBAAA,iBASC;gBARG,IAAI,IAAI,CAAC,eAAe,EAAE;oBACtB,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG;;;uBAAC,UAAC,KAAK;wBAC9C,KAAK,CAAC,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;wBACxC,uCAAyB,KAAK,IAAG;qBACpC,EAAC,CAAC;iBACN;gBAED,OAAO,IAAI,CAAC;aACf;;;WAAA;QAED,sBAAc,qDAAc;;;;gBAA5B;gBAAA,iBAoBC;gBAnBG,IAAI,IAAI,CAAC,iBAAiB,EAAE;;wBAClB,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc;oBAElD,OAAO;wBACH,SAAS,EAAE,eAAe,CAAC,SAAS,CAAC,GAAG;;;2BAAC,UAAC,QAAQ;sDAAW;gCACzD,KAAK,EAAE,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC;gCAC7C,KAAK,EAAE,QAAQ,CAAC,KAAK;gCACrB,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAG;;;mCAAC,UAAC,GAAG;8DAAW;wCACnC,KAAK,EAAE,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;wCACxC,KAAK,EAAE,GAAG,CAAC,KAAK;wCAChB,GAAG,EAAE,GAAG,CAAC,GAAG;wCACZ,cAAc,EAAE,GAAG,CAAC,cAAc;wCAClC,YAAY,EAAE,GAAG,CAAC,YAAY;qCACjC;iCAAA,EAAC;6BACL;yBAAA,EAAC;qBACL,CAAC;iBACL;gBAED,OAAO,IAAI,CAAC;aACf;;;WAAA;QAED,sBAAc,gDAAS;;;;gBAAvB;gBACI,OAAO,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;aAChE;;;WAAA;;;;;QAES,iDAAa;;;;YAAvB;gBAAA,iBAiCC;;oBAhCO,KAAK,GAAG,EAAE;gBAEd,IAAI,CAAC,UAAU,CAAC,OAAO;;;mBAAC,UAAC,KAAK;;wBACpB,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC;oBACjD,IAAI,WAAW,EAAE;wBACb,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;4BAClB,KAAK,IAAI,OAAO,CAAC;yBACpB;wBACD,KAAK,IAAI,MAAI,WAAW,MAAG,CAAC;qBAC/B;iBACJ,EAAC,CAAC;;oBAEC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC;qBAC/B,MAAM;;;eAAC,UAAC,KAAK,IAAK,OAAA,KAAK,GAAA,EAAC;qBACxB,IAAI,CAAC,OAAO,CAAC;gBAElB,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,OAAO;;;uBAAC,UAAC,GAAG;;4BACrC,QAAQ,GAAG,CAAC,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE;6BAC7C,MAAM;;;uBAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,WAAW,GAAA,EAAC;6BACtC,GAAG;;;uBAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,WAAW,GAAA,EAAC;6BACnC,IAAI,CAAC,MAAM,CAAC;wBACjB,IAAI,QAAQ,EAAE;4BACV,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gCACnB,MAAM,IAAI,OAAO,CAAC;6BACrB;4BACD,MAAM,IAAI,MAAI,QAAQ,MAAG,CAAC;yBAC7B;qBACJ,EAAC,CAAC;iBACN;gBAED,OAAO,MAAM,CAAC;aACjB;QAED,sBAAc,kDAAW;;;;gBAAzB;gBAAA,iBAiBC;;oBAhBS,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM;gBAE7E,IAAI,WAAW,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oBACvC,OAAO;wBACH,MAAM,EAAE,WAAW,CAAC,GAAG;;;2BAAC,UAAC,KAAK;sDAAyB;gCACnD,KAAK,EAAE,KAAK,CAAC,KAAK;gCAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ;gCACxB,KAAK,EAAE,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;gCAC1C,KAAK,EAAE,KAAK,CAAC,KAAK;gCAClB,MAAM,EAAE,KAAK,CAAC,MAAM;gCACpB,MAAM,EAAE,KAAK,CAAC,MAAM;6BACvB;yBAAA,EAAC;qBACL,CAAC;iBACL;gBAED,OAAO,IAAI,CAAC;aACf;;;WAAA;;;;;;;;;;;QAOD,qDAAiB;;;;;YAAjB,UAAkB,WAAmB;;oBAC3B,qBAAqB,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;gBACvD,IAAI,qBAAqB,GAAG,CAAC,CAAC,EAAE;oBAC5B,OAAO,OAAI,WAAW,OAAG,CAAC;iBAC7B;gBACD,OAAO,WAAW,CAAC;aACtB;;oBAzYJtE,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBApB4B6C,qBAAgB;wBAApC5C,uBAAkB;;;;wCAnB3B;KAqCA;;;;;;;QCqEI,yBAAoB,aAA4B,EAC5B,WAAuB;YAD3C,iBAcC;YAdmB,kBAAa,GAAb,aAAa,CAAe;YAC5B,gBAAW,GAAX,WAAW,CAAY;;;;YAnD3C,gBAAW,GAAoC,IAAI,CAAC;;;;YAIpD,eAAU,GAAW,EAAE,CAAC;;;;YAIxB,gBAAW,GAAW,CAAC,CAAC;;;;;YAMxB,eAAU,GAAW,EAAE,CAAC;;;;YAaxB,iBAAY,GAA6B,IAAIa,eAAY,EAAE,CAAC;;;;YAI5D,UAAK,GAAsB,IAAIA,eAAY,EAAE,CAAC;YAE9C,cAAS,GAAY,KAAK,CAAC;YAW3B,YAAO,GAAY,KAAK,CAAC;YAEzB,qBAAgB,GAAoB,IAAIE,YAAO,EAAE,CAAC;YAElD,eAAU,GAA+B,EAAE,CAAC;YAIxC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE;iBAC/B,IAAI,CACDuD,sBAAY,CAAC,GAAG,CAAC,CACpB;iBACA,SAAS;;;WAAC,UAAC,YAAoB;gBAC5B,KAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;aACxC,EAAC,CAAC;YAEP,aAAa,CAAC,UAAU,CAAC,SAAS;;;eAC9B,UAAC,UAAsB,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,GAAA;;;eAC/D,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAA,EAC3C,CAAC;SACL;QA/CD,sBACI,sCAAS;;;;;;gBADb,UACc,SAAiB;gBAD/B,iBAMC;gBAJG,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,EAAE;oBAC/B,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO;;;uBAAC,UAAC,SAAS,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,GAAA,EAAC,CAAC;oBACtF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;iBACjD;aACJ;;;WAAA;QAaD,sBAAI,mCAAM;;;gBAAV;gBACI,OAAO,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC;aACzC;;;;gBAED,UAAW,KAAc;gBACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;WAJA;;;;QA4BD,4CAAkB;;;YAAlB;gBACI,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;;;;;QAED,qCAAW;;;;YAAX,UAAY,OAAO;gBACf,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,YAAY,EAAE;oBACvD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;iBAC3D;aACJ;;;;QAED,sCAAY;;;YAAZ;gBACI,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;;;;QAED,gCAAM;;;YAAN;gBACI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC3C;;;;;QAEO,sCAAY;;;;YAApB;gBACI,IAAI,IAAI,CAAC,OAAO,EAAE;oBACd,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;iBACrB;aACJ;;;;;;QAEO,2CAAiB;;;;;YAAzB,UAA0B,UAAmB;gBAA7C,iBAUC;gBATG,IAAI,CAAC,YAAY,EAAE,CAAC;gBACpB,IAAI,UAAU,EAAE;oBACZ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS;;;uBAC9E,UAAC,MAAM,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAA;;;uBAC3C,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAA,EACvC,CAAC;iBACL;qBAAM;oBACH,IAAI,CAAC,YAAY,EAAE,CAAC;iBACvB;aACJ;;;;;QAED,4CAAkB;;;;YAAlB,UAAmB,UAAsB;gBACrC,IAAI,UAAU,EAAE;oBACZ,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;oBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnB,IAAI,CAAC,aAAa,EAAE,CAAC;iBACxB;aACJ;;;;;QAED,2CAAiB;;;;YAAjB,UAAkB,KAAK;gBACnB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B;aACJ;;;;QAED,mCAAS;;;YAAT;gBACI,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;oBAC1C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;iBACvB;aACJ;;;;QAED,uCAAa;;;YAAb;gBACI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;gBACvD,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;gBACpD,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aACxD;;oBAxJJlE,YAAS,SAAC;wBACP,QAAQ,EAAE,YAAY;wBACtB,gQAAsC;wBAEtC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,mBAAmB,EAAE,KAAK;wBAC1B,QAAQ,EAAE,oBAAoB;wBAC9B,IAAI,EAAE;4BACF,OAAO,EAAE,YAAY;yBACxB;;qBACJ;;;;;wBA5BQkE,kBAAa;wBAKlBhD,aAAU;;;;4BA0BT6B,YAAS,SAAC,OAAO;+BAGjBL,eAAY,SAACM,cAAW;kCAIxB5B,QAAK;iCAILA,QAAK;kCAILA,QAAK;iCAMLA,QAAK;gCAILA,QAAK,SAAC,OAAO;mCASbJ,SAAM;4BAINA,SAAM;;QAsGX,sBAAC;KAzJD;;;;;;;QChBA;SAK0C;;oBALzCjB,YAAS,SAAC;wBACP,QAAQ,EAAE,yBAAyB;wBACnC,4FAAmD;wBACnD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;qBACxC;;QACwC,iCAAC;KAL1C;;;;;;;QC4FI,gCAAmB,WAAkC,EACjC,gBAAkC;YADtD,iBAgBC;YAhBkB,gBAAW,GAAX,WAAW,CAAuB;YACjC,qBAAgB,GAAhB,gBAAgB,CAAkB;;;;;YA5DtD,eAAU,GAAY,IAAI,CAAC;;;;YAI3B,cAAS,GAAY,KAAK,CAAC;;;;YAI3B,cAAS,GAAW,MAAM,CAAC;;;;YAI3B,iBAAY,GAAY,KAAK,CAAC;;;;YAI9B,sBAAiB,GAAY,IAAI,CAAC;;;;YAIlC,yBAAoB,GAAW,CAAC,CAAC;;;;;YAMjC,WAAM,GAAsB,IAAIQ,eAAY,EAAE,CAAC;;;;;;;YAQ/C,iBAAY,GAAyB,IAAIA,eAAY,EAAE,CAAC;;;;YAIxD,kBAAa,GAAsB,IAAIA,eAAY,EAAE,CAAC;YActD,eAAU,GAAW,EAAE,CAAC;YAExB,2BAAsB,GAAsB,IAAI,CAAC;YAEzC,iBAAY,GAAG,IAAIE,YAAO,EAAO,CAAC;YAClC,iBAAY,GAAG,IAAIA,YAAO,EAAc,CAAC;YAK7C,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,IAAI,CAACuD,sBAAY,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS;;eAAC;gBAC/D,IAAI,KAAI,CAAC,UAAU,EAAE;oBACjB,KAAI,CAAC,uBAAuB,GAAG,KAAI,CAAC,uBAAuB,KAAK,UAAU,GAAG,QAAQ,GAAG,UAAU,CAAC;oBAEnG,IAAI,KAAI,CAAC,uBAAuB,KAAK,UAAU,EAAE;wBAC7C,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;wBACrB,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;wBACvC,IAAK,QAAQ,CAAC,aAAa,CAAC,EAAE,KAAK,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,EAAE;4BAClE,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;yBACzC;qBACJ;iBACJ;aACJ,EAAC,CAAC;SACN;;;;;QAED,iDAAgB;;;;YAAhB,UAAiB,kBAAkB;gBAC/B,IAAI,kBAAkB,CAAC,OAAO,KAAK,QAAQ,EAAE;oBACzC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;iBAC1C;aACJ;;;;QAED,yCAAQ;;;YAAR;gBACI,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,cAAc,CAAC;gBAC7E,IAAI,CAAC,uBAAuB,EAAE,CAAC;aAClC;;;;QAED,0DAAyB;;;YAAzB;gBACI,OAAO,IAAI,CAAC,mBAAmB,GAAG,IAAI,GAAG,KAAK,CAAC;aAClD;;;;QAED,4CAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;oBAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC5B;gBAED,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;oBAC7B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC5B;aACJ;;;;QAED,2CAAU;;;YAAV;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAC3C;;;;;QAED,6CAAY;;;;YAAZ,UAAa,KAAU;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;aAC1B;;;;;QAED,4CAAW;;;;YAAX,UAAY,KAAU;gBAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjC;;;;QAED,gDAAe;;;YAAf;gBACI,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,KAAK,CAAC;aAC3C;;;;;QAED,gDAAe;;;;YAAf,UAAgB,IAAe;;oBACrB,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBACvC,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAC1D;;;;;QAED,4CAAW;;;;YAAX,UAAY,IAAe;;oBACnB,QAAgB;gBAEpB,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE;oBACnD,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;iBAC1C;gBACD,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;oBACrB,QAAQ,GAAG,QAAQ,CAAC;iBACvB;gBACD,OAAO,QAAQ,CAAC;aACnB;;;;QAED,kDAAiB;;;YAAjB;gBACI,OAAO,IAAI,CAAC,uBAAuB,KAAK,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC;aAC9E;;;;QAED,gDAAe;;;YAAf;gBACI,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;iBAC5B;aACJ;;;;;QAED,+CAAc;;;;YAAd,UAAe,IAAS;gBACpB,IAAI,IAAI,CAAC,KAAK,EAAE;oBACZ,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC9B,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;aACJ;;;;;QAED,wCAAO;;;;YAAP,UAAQ,MAAM;gBACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC;;;;;QAED,uCAAM;;;;YAAN,UAAO,MAAM;gBACT,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aAClC;;;;QAED,gDAAe;;;YAAf;gBACI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE;oBAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;aACJ;;;;QAED,kDAAiB;;;YAAjB;gBACI,IAAK,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;;wBACxD,YAAY,sBAA8B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAA;oBAC5E,YAAY,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,CAAC;iBAC1C;aACJ;;;;;QAED,+CAAc;;;;YAAd,UAAe,MAAqB;;oBAC1B,WAAW,GAAQ,IAAI,CAAC,qBAAqB,oBAAW,MAAM,CAAC,MAAM,GAAC;gBAC5E,IAAI,WAAW,EAAE;oBACb,WAAW,CAAC,KAAK,EAAE,CAAC;iBACvB;aACJ;;;;;QAED,6CAAY;;;;YAAZ,UAAa,MAAqB;;oBACxB,eAAe,GAAQ,IAAI,CAAC,yBAAyB,oBAAW,MAAM,CAAC,MAAM,GAAC;gBACpF,IAAI,eAAe,EAAE;oBACjB,eAAe,CAAC,KAAK,EAAE,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;iBACnD;aACJ;;;;;QAEO,wDAAuB;;;;YAA/B;gBAAA,iBAaC;;oBAZS,WAAW,GAA2B,IAAI,CAAC,YAAY;qBACxD,YAAY,EAAE;qBACd,IAAI,CACDA,sBAAY,CAAC,EAAE,CAAC,EAChBE,gBAAM;;;eAAC,UAAC,MAAW;oBACf,OAAO,KAAI,CAAC,iBAAiB,EAAE,KAAK,MAAM,CAAC,IAAI,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;iBAC7F,EAAC,CACL;gBAEL,WAAW,CAAC,SAAS;;mBAAC;oBAClB,KAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B,EAAC,CAAC;aACN;;;;;;QAEO,sDAAqB;;;;;YAA7B,UAA8B,IAAa;gBACvC,OAAO,IAAI,CAAC,kBAAkB,CAAC;aAClC;;;;;;QAEO,0DAAyB;;;;;YAAjC,UAAkC,IAAa;gBAC3C,OAAO,IAAI,CAAC,sBAAsB,CAAC;aACtC;;oBA9OJpE,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,4gIAA8C;wBAE9C,UAAU,EAAE;4BACRqE,kBAAO,CAAC,oBAAoB,EAAE;gCAC1BC,gBAAK,CAAC,QAAQ,EAAEC,gBAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,CAAC;gCAC9ED,gBAAK,CAAC,UAAU,EAAEC,gBAAK,CAAC,EAAE,SAAS,EAAE,iBAAiB,EAAC,CAAC,CAAC;gCACzDD,gBAAK,CAAC,cAAc,EAAEC,gBAAK,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;gCAC5EC,qBAAU,CAAC,oBAAoB,EAC3BC,kBAAO,CAAC,wCAAwC,CAAC,CAAC;gCACtDD,qBAAU,CAAC,oBAAoB,EAC3BC,kBAAO,CAAC,wCAAwC,CAAC,CAAC;6BACzD,CAAC;yBACL;wBACD,aAAa,EAAExE,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE;;qBACxC;;;;;wBA5BQyE,0BAAqB;wBAAE1D,qBAAgB;;;;iCAkC3CK,QAAK;gCAILA,QAAK;gCAILA,QAAK;mCAILA,QAAK;wCAILA,QAAK;2CAILA,QAAK;6BAMLJ,SAAM;mCAQNA,SAAM;oCAINA,SAAM;yCAGN+B,YAAS,SAAC,QAAQ;kCAGlBA,YAAS,SAAC,aAAa;wCAGvB2B,eAAY,SAACC,oBAAW;0CAGxBjC,eAAY,SAAC,0BAA0B;;QAuK5C,6BAAC;KAhPD;;;;;;;ACSA,QAAa,kCAAkC,GAAQ;QACnD,OAAO,EAAEkC,uBAAiB;QAC1B,WAAW,EAAEhB,aAAU;;WAAC,cAAM,OAAA,sBAAsB,GAAA,EAAC;QACrD,KAAK,EAAE,IAAI;KACd;;;;AAKD;QA+BI,gCAAoB,OAAmB,EACnB,MAAc,EACd,iBAAoC,EACN,QAAa;YAH3C,YAAO,GAAP,OAAO,CAAY;YACnB,WAAM,GAAN,MAAM,CAAQ;YACd,sBAAiB,GAAjB,iBAAiB,CAAmB;YACN,aAAQ,GAAR,QAAQ,CAAK;YAnBvD,eAAU,GAAqB,IAAIlD,YAAO,EAAW,CAAC;YAM9D,iBAAY,GAAW,KAAK,CAAC;YAErB,eAAU,GAAY,KAAK,CAAC;YAE5B,sBAAiB,GAAG,IAAIA,YAAO,EAAQ,CAAC;YAEhD,aAAQ;;eAAyB,eAAS,EAAC;YAE3C,cAAS;;eAAG,eAAS,EAAC;SAK8C;;;;QAEpE,4CAAW;;;YAAX;gBACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;gBAE3B,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;iBACjC;gBACD,IAAK,IAAI,CAAC,0BAA0B,EAAG;oBACnC,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;iBACjD;aACJ;QAED,sBAAI,6CAAS;;;gBAAb;gBACI,OAAO,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;aACxD;;;WAAA;;;;QAED,0CAAS;;;YAAT;gBACI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACjD,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;aACtE;;;;QAED,2CAAU;;;YAAV;gBACI,IAAI,IAAI,CAAC,UAAU,EAAE;oBACjB,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;oBAC9C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;oBAChC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;oBAC7B,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;iBAC1C;aACJ;QAED,sBAAI,uDAAmB;;;gBAAvB;gBACI,OAAO0C,UAAK,CACR,IAAI,CAAC,iBAAiB,EACtB,IAAI,CAAC,kBAAkB,CAC1B,CAAC;aACL;;;WAAA;QAED,sBAAY,sDAAkB;;;;gBAA9B;gBAAA,iBAeC;gBAdG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAChB,OAAO7D,OAAE,CAAC,IAAI,CAAC,CAAC;iBACnB;gBAED,OAAO6D,UAAK,CACRyB,cAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,EACjCA,cAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,CACvC,CAAC,IAAI,CACFV,gBAAM;;;mBAAC,UAAC,KAA8B;;wBAC5B,WAAW,sBAAG,KAAK,CAAC,MAAM,EAAe;oBAC/C,OAAO,KAAI,CAAC,UAAU,IAAI,WAAW,KAAK,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC;iBACxE,EAAC,EACFW,mBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC7B,CAAC;aACL;;;WAAA;;;;;QAED,2CAAU;;;;YAAV,UAAW,KAAU;gBAArB,iBAEC;gBADG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI;;mBAAC,cAAM,OAAA,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;aACjE;;;;;QAED,iDAAgB;;;;YAAhB,UAAiB,EAAsB;gBACnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;aACtB;;;;;QAED,kDAAiB;;;;YAAjB,UAAkB,EAAY;gBAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;aACvB;;;;;QAED,8CAAa;;;;YAAb,UAAc,KAAoB;;oBACxB,OAAO,GAAG,KAAK,CAAC,OAAO;gBAE7B,IAAI,OAAO,KAAKC,eAAM,IAAI,IAAI,CAAC,SAAS,EAAE;oBACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;oBAC9B,KAAK,CAAC,eAAe,EAAE,CAAC;iBAC3B;qBAAM,IAAI,OAAO,KAAKC,cAAK,EAAE;oBAC1B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;oBAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;iBAC1B;aAEJ;;;;;QAED,4CAAW;;;;YAAX,UAAY,KAAoB;gBAC5B,IAAI,QAAQ,CAAC,aAAa,KAAK,KAAK,CAAC,MAAM,EAAE;;wBACnC,UAAU,GAAW,oBAAC,KAAK,CAAC,MAAM,IAAsB,KAAK;oBACnE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;oBAC1B,IAAI,UAAU,EAAE;wBACZ,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACnD,IAAI,CAAC,SAAS,EAAE,CAAC;qBACpB;yBAAM;wBACH,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;wBAChC,IAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;iBACJ;aACJ;;;;;;QAEO,qDAAoB;;;;;YAA5B,UAA6B,KAAiB;;oBACtC,aAAa,GAAY,KAAK;gBAClC,IAAK,KAAK,EAAG;;wBACH,WAAW,sBAAG,KAAK,CAAC,MAAM,EAAe;oBAC/C,aAAa,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;wBAC7B,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK;wBACxB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;iBAChF;gBACD,OAAO,aAAa,CAAC;aACxB;;;;;;QAEO,iDAAgB;;;;;YAAxB,UAAyB,KAAiB;gBACtC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,CAAC;aACpG;;;;;QAEO,0DAAyB;;;;YAAjC;gBAAA,iBAaC;;oBAZS,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;;oBACjD,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,YAAY,EAAE;gBAEtE,OAAO5B,UAAK,CAAC,WAAW,EAAE,aAAa,CAAC;qBACnC,IAAI,CACD3C,mBAAS;;eAAC;oBACN,KAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;oBACjC,OAAO,KAAI,CAAC,mBAAmB,CAAC;iBACnC,EAAC,EACFqE,mBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC7B;qBACA,SAAS;;;eAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;aAC3D;;;;;;QAEO,gDAAe;;;;;YAAvB,UAAwB,KAAU;;oBACxB,SAAS,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW;oBAC9D,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK;;oBACzC,UAAU,GAAG,SAAS,IAAI,IAAI,GAAG,SAAS,GAAG,EAAE;gBACrD,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,UAAU,CAAC;aACjD;;;;;;QAEO,iDAAgB;;;;;YAAxB,UAAyB,KAAiB;gBACtC,IAAI,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAAE;oBAC7D,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;oBACtD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;oBAC/C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;iBACtC;gBACD,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;;oBA9KJ7D,YAAS,SAAC;;wBAEP,QAAQ,EAAE,yDAAyD;wBACnE,IAAI,EAAE;4BACF,MAAM,EAAE,UAAU;4BAClB,qBAAqB,EAAE,cAAc;4BACrC,mBAAmB,EAAE,MAAM;4BAC3B,sBAAsB,EAAE,sBAAsB;4BAC9C,QAAQ,EAAE,aAAa;4BACvB,SAAS,EAAE,qBAAqB;4BAChC,WAAW,EAAE,uBAAuB;yBACvC;wBACD,SAAS,EAAE,CAAC,kCAAkC,CAAC;qBAClD;;;;;wBApCGC,aAAU;wBAIVoB,SAAM;wBANNiB,oBAAiB;wDA2DJhD,WAAQ,YAAIN,SAAM,SAACgF,eAAQ;;;;kCAjBvC7D,QAAK,SAAC,oBAAoB;mCAG1BA,QAAK;;QA2JV,6BAAC;KA/KD;;;;;;;;;;;;;;;;;;;;;;;QC7BM,iBAAiB,GAAG,CAAC;;;;IAE3B;;;QA+DI,0BAAY,KAAe,EAAE,QAAiB;YAAlC,sBAAA;gBAAA,UAAe;;YA7DnB,kBAAa,GAAQ,EAAE,CAAC;YACxB,gBAAW,GAAW,EAAE,CAAC;YAEjC,UAAK,GAAQ,EAAE,CAAC;YAChB,aAAQ,GAAW,iBAAiB,CAAC;YACrC,oBAAe,GAAW,iBAAiB,CAAC;YAWpC,YAAO;;eAAyB,cAAM,OAAA,IAAI,GAAA,EAAC;YA8C/C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,iBAAiB,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,QAAQ,IAAI,iBAAiB,CAAC;SACxD;QA3DD,sBAAI,wCAAU;;;gBAAd;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBAED,UAAe,KAAa;gBACxB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gBACzB,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;;;WALA;QASD,sBAAI,oCAAM;;;gBAAV;gBACI,OAAO,IAAI,CAAC,OAAO,CAAC;aACvB;;;;gBAED,UAAW,KAA2B;gBAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;;;WALA;;;;;QAOO,sCAAW;;;;YAAnB;gBACI,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACvD;qBAAM;oBACH,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;iBACnC;gBACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;aACxC;QAGD,sBAAI,0CAAY;;;;;gBAAhB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;aAC5D;;;WAAA;QAGD,sBAAI,oCAAM;;;;;gBAAV;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC5B;;;WAAA;QAGD,sBAAI,8CAAgB;;;;;gBAApB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC;aAC3D;;;WAAA;QAGD,sBAAI,8CAAgB;;;;;gBAApB;gBACI,OAAO,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;aAC/C;;;WAAA;QAGD,sBAAI,sCAAQ;;;;;gBAAZ;gBACI,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;aACrD;;;WAAA;;;;;;QAUD,wCAAa;;;;YAAb;gBACI,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvB,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,QAAQ,CAAC;iBACzC;aACJ;;;;;;QAGD,wCAAa;;;;YAAb;gBACI,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACvB,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,QAAQ,CAAC;iBACzC;aACJ;;;;;;QAGD,gCAAK;;;;YAAL;gBACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACrC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;aACxB;;;;;QAED,kCAAO;;;;YAAP,UAAQ,IAAO;gBACX,IAAI,CAAC,IAAI,EAAE;oBACP,OAAO;iBACV;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;;;;;QAED,qCAAU;;;;YAAV,UAAW,IAAO;;oBACR,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC;gBAC5C,IAAI,WAAW,GAAG,CAAC,CAAC,EAAE;oBAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;oBAClC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;iBAC7C;aACJ;;;;QAED,2BAAC,MAAM,CAAC,QAAQ,CAAC;;;YAAjB;;oBACQ,OAAO,GAAG,CAAC;;oBACT,KAAK,GAAG,IAAI,CAAC,YAAY;gBAE/B,OAAO;oBACH,IAAI;;wBAAJ;wBACI,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;4BACxB,OAAO;gCACH,IAAI,EAAE,KAAK;gCACX,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;6BAC1B,CAAC;yBACL;6BAAM;4BACH,OAAO;gCACH,IAAI,EAAE,IAAI;gCACV,KAAK,EAAE,IAAI;6BACd,CAAC;yBACL;qBACJ;iBACJ,CAAC;aACL;QACL,uBAAC;IAAD,CAAC,IAAA;;;;;;;QC7FG,+BAAmB,YAAuC,EACtC,aAA4B,EAC5B,kBAAsC;YAF1D,iBAqBC;YArBkB,iBAAY,GAAZ,YAAY,CAA2B;YACtC,kBAAa,GAAb,aAAa,CAAe;YAC5B,uBAAkB,GAAlB,kBAAkB,CAAoB;YApBlD,sBAAiB,GAAG,CAAC,CAAC;YAE9B,YAAO,GAAG,IAAI,CAAC;;;;;;YAMf,mBAAc,GAAiB,IAAI,CAAC;YAE5B,yBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC;YACtD,sBAAiB,GAAW,eAAe,CAAC;YAC5C,kBAAa,GAAG;gBACZ,SAAS,EAAE,KAAK;aACnB,CAAC;YAEF,oBAAe,GAA2D,EAAE,CAAC;YAKzE,IAAI,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE;gBACzD,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,IAAI,eAAe,CAAC;gBACnF,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,CAAC;gBAChG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;aAC3E;YACD,IAAI,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,WAAW,EAAE;gBACxD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;aAC1E;YACD,IAAI,YAAY,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,CAAC,cAAc,EAAE;gBAC3D,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC;aAChF;YACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC;YAE7F,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAC1B8D,mBAAS;;eAAC,cAAM,OAAA,KAAI,CAAC,OAAO,GAAA,EAAC,CAChC,CAAC,SAAS;;eAAC;gBACR,KAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;aAC/B,EAAC,CAAC;SACN;;;;QAED,wCAAQ;;;YAAR;gBAAA,iBASC;gBARG,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAC3BA,mBAAS;;uBAAC,cAAM,OAAA,KAAI,CAAC,OAAO,GAAA,EAAC,CAChC,CAAC,SAAS;;;uBAAC,UAAC,eAAgC;wBACzC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;wBACnC,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;qBACvD,EAAC,CAAC;iBACN;aACJ;;;;QAED,2CAAW;;;YAAX;gBACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACxB;;;;;QAEO,qDAAqB;;;;YAA7B;;gBACI,IAAI,IAAI,CAAC,cAAc,EAAE;oBACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;4CACf,KAAK;;wBACZ,IAAI,KAAK,CAAC,OAAO,EAAE;4BACf,CAAA,KAAA,OAAK,eAAe,EAAC,IAAI,oBAClB,OAAK,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC;iCAChD,MAAM;;;2BAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,GAAA,EAAC;iCAClC,GAAG;;;2BAAC,UAAC,MAAM;gCACR,OAAO,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;6BAC5B,EAAC,GACR;yBACL;;;;wBATL,KAAoB,IAAA,KAAAC,SAAA,IAAI,CAAC,cAAc,CAAA,gBAAA;4BAAlC,IAAM,KAAK,WAAA;oCAAL,KAAK;yBAUf;;;;;;;;;;;;;;;iBACJ;qBAAM;oBACH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;iBAC7B;aACJ;;;;;;;QAED,8CAAc;;;;;;YAAd,UAAe,KAAwB,EAAE,KAAiB,EAAE,MAAwB;gBAChF,IAAI,KAAK,IAAI,MAAM,EAAE;oBACjB,IAAI,KAAK,CAAC,OAAO,EAAE;wBACf,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;qBACzC;yBAAM;wBACH,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;qBAC3C;iBACJ;aACJ;;;;;;QAED,iDAAiB;;;;;YAAjB,UAAkB,KAAiB,EAAE,MAAwB;gBACzD,IAAI,MAAM,EAAE;oBACR,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC;oBACtB,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACpD,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC9B;aACJ;;;;;;QAED,mDAAmB;;;;;YAAnB,UAAoB,KAAiB,EAAE,MAAwB;gBAC3D,IAAI,MAAM,EAAE;oBACR,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;oBACvD,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC9B;aACJ;;;;;QAED,uDAAuB;;;;YAAvB,UAAwB,KAAiB;gBACrC,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;oBACxB,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;;;uBAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,GAAA,EAAC,CAAC;iBAC/D;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;QAED,oDAAoB;;;;YAApB,UAAqB,KAAiB;;gBAClC,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;;wBACxB,KAAqB,IAAA,KAAAA,SAAA,KAAK,CAAC,OAAO,CAAC,KAAK,CAAA,gBAAA,4BAAE;4BAArC,IAAM,MAAM,WAAA;4BACb,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;4BACvB,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;yBAC1D;;;;;;;;;;;;;;;oBACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC9B;aACJ;;;;QAED,uDAAuB;;;YAAvB;gBAAA,iBAWC;gBAVG,IAAI,CAAC,cAAc,CAAC,OAAO;;;mBAAC,UAAC,KAAK;;oBAC9B,IAAI,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;;4BACxB,KAAqB,IAAA,KAAAA,SAAA,KAAK,CAAC,OAAO,CAAC,KAAK,CAAA,gBAAA,4BAAE;gCAArC,IAAM,MAAM,WAAA;gCACb,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;gCACvB,KAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;6BAC1D;;;;;;;;;;;;;;;wBACD,KAAI,CAAC,qBAAqB,EAAE,CAAC;qBAChC;iBACJ,EAAC,CAAC;gBACH,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;aAC9B;;;;QAED,wCAAQ;;;YAAR;gBACI,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;aAC9B;;;;;QAED,4CAAY;;;;YAAZ,UAAa,KAAiB;gBAC1B,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aAC1E;;;;;QAED,4CAAY;;;;YAAZ,UAAa,IAAS;;oBACZ,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO;gBAEjC,IAAI,OAAO,EAAE;oBACT,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;iBAC7B;qBAAM;oBACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC9B;aACJ;;;;;;QAEO,2CAAW;;;;;YAAnB,UAAoB,OAAyB;gBACzC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;gBAC/B,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;aACnC;;;;;;;;QAEO,+CAAe;;;;;;;YAAvB,UAAwB,OAAyB,EAAE,iBAA+B,EAAE,QAAgB;gBAApG,iBA6BC;gBA5BG,iBAAiB,CAAC,OAAO;;;mBAAC,UAAC,KAAK;;wBACtB,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC;;wBAC9D,eAAe,GAAG,KAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,KAAK,CAAC;yBAChE,MAAM,CAAC,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;;wBAC/C,oBAAoB,GAAG,KAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,CAAC;oBAE1E,IAAI,oBAAoB,EAAE;;4BAChB,sBAAsB,GAAG,oBAAoB,CAAC,OAAO,IAAI,oBAAoB,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;wBAEvG,KAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,eAAe,EAAE,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;qBAC5G;yBAAM,IAAI,aAAa,EAAE;;4BAEhB,UAAU,GAAG,IAAI,gBAAgB,CAAmB,eAAe,EAAE,KAAK,CAAC,QAAQ,CAAC;wBAC1F,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;wBAE7D,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE;4BACtB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;yBAC5B;wBACD,KAAI,CAAC,cAAc,CAAC,IAAI,iCACjB,KAAK,IACR,IAAI,EAAE,aAAa,CAAC,IAAI,IAAI,QAAQ,EACpC,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,QAAQ,EAAE,KAAK,CAAC,QAAQ,GAAG,KAAI,CAAC,iBAAiB,EACjD,eAAe,EAAE,KAAK,CAAC,QAAQ,GAAG,KAAI,CAAC,iBAAiB,EACxD,OAAO,EAAE,UAAU,MACrB,CAAC;qBACN;iBACJ,EAAC,CAAC;aACN;;;;;;QAEO,gDAAgB;;;;;YAAxB,UAAyB,OAAyB;;oBACxC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,IAAI,EAAE;gBACnH,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,iBAAiB,EAAE,OAAO,CAAC,CAAC;aAC7D;;;;;;QAEO,mDAAmB;;;;;YAA3B,UAA4B,OAAyB;;oBAC3C,oBAAoB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,IAAI,EAAE;gBAC/H,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,oBAAoB,EAAE,UAAU,CAAC,CAAC;aACnE;;;;;;QAEO,iDAAiB;;;;;YAAzB,UAA0B,OAAyB;gBAAnD,iBA4CC;;oBA3CS,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,IAAI,EAAE;;oBACjH,YAAY,GAAG,kBAAkB,CAAC,MAAM;;;;mBAAC,UAAC,GAAG,EAAE,KAAK;;wBAChD,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;oBACpD,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE;wBACZ,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC1B;yBAAM;wBACH,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;qBACxB;oBACD,OAAO,GAAG,CAAC;iBACd,GAAE,EAAE,CAAC;;oBAEA,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ;;oBAClG,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC;gBAEzD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO;;;mBAAC,UAAC,KAAK;;wBAC9B,aAAa,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;;wBACvD,eAAe,GAAG,KAAI,CAAC,uBAAuB,CAAC,aAAa,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;yBACnF,MAAM,CAAC,cAAc,CAAC;;wBACrB,oBAAoB,GAAG,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,CAAC;oBAEnE,IAAI,oBAAoB,EAAE;;4BAChB,sBAAsB,GAAG,oBAAoB,CAAC,OAAO,IAAI,oBAAoB,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;wBAEvG,KAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,eAAe,EAAE,oBAAoB,EAAE,sBAAsB,CAAC,CAAC;qBAC5G;yBAAM,IAAI,aAAa,EAAE;;4BAEhB,UAAU,GAAG,IAAI,gBAAgB,CAAmB,eAAe,EAAE,KAAI,CAAC,oBAAoB,CAAC;wBACrG,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;wBAE7D,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE;4BACtB,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;yBAC5B;wBACD,KAAI,CAAC,cAAc,CAAC,IAAI,oBAAc;4BAClC,KAAK,EAAE,KAAK;4BACZ,IAAI,EAAE,aAAa,CAAC,IAAI,IAAI,OAAO;4BACnC,KAAK,EAAE,KAAK;4BACZ,QAAQ,EAAE,KAAI,CAAC,iBAAiB;4BAChC,eAAe,EAAE,KAAI,CAAC,iBAAiB;4BACvC,OAAO,EAAE,UAAU;yBACtB,GAAC,CAAC;qBACN;iBACJ,EAAC,CAAC;aAEN;;;;;;;QAEO,kDAAkB;;;;;;YAA1B,UAA2B,aAAmC,EAAE,WAAuB;gBAAvF,iBAYC;gBAXG,OAAO,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,OAAO,KAAK,EAAE,EAAE,GAAG;;;mBAAC,UAAC,UAAU;oBAEnE,UAAU,CAAC,OAAO,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;oBACrD,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,IAAI,KAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;oBACnH,uCACO,UAAU,IACb,OAAO,EAAE,KAAK,EACd,OAAO,EAAE,UAAU,CAAC,OAAO,EAC3B,KAAK,EAAE,UAAU,CAAC,KAAK,MACzB;iBACL,EAAC,CAAC;aACN;;;;;;;QAEO,uDAAuB;;;;;;YAA/B,UAAgC,aAAmC,EAAE,WAAgB;gBAArF,iBAaC;gBAZG,OAAO,CAAC,WAAW,IAAI,EAAE,EAAE,GAAG;;;mBAAC,UAAC,KAAK;;wBAC3B,UAAU,GAAG,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,OAAO,KAAK,EAAE;yBAC7D,IAAI;;;mBAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,GAAA,EAAC;oBAEnD,UAAU,CAAC,OAAO,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;oBACrD,uCACO,UAAU,IACb,OAAO,EAAE,KAAK,EACd,OAAO,EAAE,UAAU,CAAC,OAAO,EAC3B,KAAK,EAAE,UAAU,CAAC,KAAK,MACzB;iBACL,EAAC,CAAC;aACN;;;;;;QAEO,6CAAa;;;;;YAArB,UAAsB,MAAqB;gBACvC,OAAO,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK;uBAC9G,CAAC,CAAC;aACZ;;;;;QAED,qDAAqB;;;;YAArB,UAAsB,MAAwB;gBAC1C,OAAO,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,MAAI,MAAM,CAAC,KAAK,MAAG,CAAC;aAC3D;;;;;;QAEO,mDAAmB;;;;;YAA3B,UAA4B,aAAqB;gBAC7C;;;mBAAO,UAAC,MAAM;;wBACN,QAAQ,GAAG,aAAa;oBAC5B,IAAI,QAAQ,KAAK,SAAS,EAAE;wBACxB,QAAQ,GAAG,CAAC,CAAC;qBAChB;oBACD,OAAO,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC;iBACnC,EAAC;aACL;;;;;;;QAEO,2DAA2B;;;;;;YAAnC,UAAqC,eAA2B,EAAE,WAAmB;;oBAC7E,WAAW,GAAG,IAAI;gBAEtB,IAAI,eAAe,CAAC,KAAK,IAAI,WAAW,EAAE;oBAEtC,IAAI,eAAe,CAAC,IAAI,EAAE;;4BAChB,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC,IAAI;;;2BAAC,UAAC,GAAG,IAAK,OAAA,WAAW,KAAK,GAAG,CAAC,KAAK,GAAA,EAAC;wBAE/E,IAAI,SAAS,EAAE;4BACX,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;yBAC3E;qBAEJ;yBAAM;wBACH,WAAW,GAAM,eAAe,CAAC,KAAK,WAAK,WAAW,OAAG,CAAC;qBAC7D;iBACJ;gBAED,OAAO,WAAW,CAAC;aACtB;;;;;;;QAEO,kDAAkB;;;;;;YAA1B,UAA2B,SAAiB,EAAE,QAAa;;oBACjD,KAAK,GAAG,QAAQ,CAAC,KAAK;;oBACtB,GAAG,GAAG,QAAQ,CAAC,GAAG;;oBAClB,UAAU,GAAG,CAAC,QAAQ,CAAC,cAAc,KAAK,SAAS,IAAI,QAAQ,CAAC,cAAc,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG;;oBACpG,QAAQ,GAAG,CAAC,QAAQ,CAAC,YAAY,KAAK,SAAS,IAAI,QAAQ,CAAC,YAAY,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG;gBAEpG,OAAU,SAAS,SAAI,UAAU,UAAI,KAAK,gBAAS,GAAG,UAAI,QAAU,CAAC;aACxE;;;;;;;;QAEO,yCAAS;;;;;;;YAAjB,UAAkB,OAAyB,EAAE,QAAgB,EAAE,UAAkB;gBAC7E,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,EAAE,IAAI;;;mBAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,KAAK,UAAU,GAAA,EAAC,IAAI,EAAE,CAAC;aACvH;;;;;;;QAEO,iDAAiB;;;;;;YAAzB,UAA0B,QAAgB,EAAE,UAAkB;gBAC1D,OAAO,CAAC,IAAI,CAAC,cAAc,IAAI,EAAE,EAAE,IAAI;;;mBAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,CAAC,KAAK,KAAK,UAAU,GAAA,EAAC,CAAC;aACtH;;;;;;;;;QAEO,qDAAqB;;;;;;;;YAA7B,UAA8B,aAAa,EAAE,eAAe,EAAE,oBAAoB,EAAE,sBAAsB;gBAA1G,iBA8BC;;oBA7BS,eAAe,GAAG,EAAE;gBAE1B,sBAAsB;qBACjB,GAAG;;;eAAC,UAAC,MAAM;;wBACF,cAAc,GAAG,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,OAAO,KAAK,EAAE,EAAE,IAAI;;;uBAAC,UAAC,UAAU,IAAK,OAAA,UAAU,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,GAAA,EAAC;oBAE/H,IAAI,CAAC,cAAc,EAAE;wBACjB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAChC;oBACD,MAAM,CAAC,KAAK,GAAG,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;oBAClD,OAAO,MAAM,CAAC;iBACjB,EAAC,CAAC;;oBAED,YAAY,GAAG,IAAI,CAAC,eAAe;qBACpC,IAAI;;;eAAC,UAAC,UAAU,IAAK,OAAA,oBAAoB,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,CAAC,KAAK,IAAI,oBAAoB,CAAC,IAAI,KAAK,UAAU,CAAC,KAAK,CAAC,IAAI,GAAA,EAAC;gBAEvI,IAAI,CAAC,YAAY,IAAI,eAAe,CAAC,MAAM,EAAE;oBACzC,eAAe,CAAC,OAAO;;;uBAAC,UAAC,MAAM;wBAC3B,oBAAoB,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;qBACnD,EAAC,CAAC;iBACN;gBAED,eAAe,CAAC,OAAO;;;mBAAC,UAAC,UAAU;;wBACzB,cAAc,GAAG,sBAAsB,CAAC,IAAI;;;uBAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,KAAK,KAAK,UAAU,CAAC,KAAK,GAAA,EAAC;oBAEvG,IAAI,CAAC,cAAc,EAAE;wBACjB,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACpD;iBACJ,EAAC,CAAC;aACN;;;;;;QAEO,uDAAuB;;;;;YAA/B,UAAiC,UAAU;gBAA3C,iBASC;gBARG;;;mBAAO,UAAC,MAAwB;oBAC5B,IAAI,MAAM,IAAI,UAAU,CAAC,UAAU,EAAE;;4BAC3B,OAAO,GAAG,CAAC,UAAU,CAAC,UAAU,IAAI,EAAE,EAAE,WAAW,EAAE;;4BACrD,KAAK,GAAG,CAAC,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE;wBAC9H,OAAO,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,kBAAkB,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;qBAClH;oBACD,OAAO,IAAI,CAAC;iBACf,EAAC;aACL;;oBA7XJpF,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,2gJAA6C;wBAE7C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE;;qBACvC;;;;;wBAbQ,yBAAyB;wBADzBkE,kBAAa;wBAAEpD,uBAAkB;;;QAsY1C,4BAAC;KA9XD;;;;;;;QCLA;;;;YAWI,UAAK,GAAG,EAAE,CAAC;SAkCd;;;;QA5BG,sCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;;wBAClD,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,GAAG,CAAC;;wBAChD,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;oBAEtE,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;qBACzB;iBACJ;aACJ;;;;QAED,mCAAK;;;YAAL;gBACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;gBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC1B;;;;;QAED,8CAAgB;;;;YAAhB,UAAiB,KAAK;gBAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;gBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChC;;;;;;QAEO,yCAAW;;;;;YAAnB,UAAoB,KAAa;gBAC7B,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;oBACtD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,GAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,UAAK,KAAK,MAAG,GAAG,EAAE,CAAC;oBACxF,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;oBA3CJf,YAAS,SAAC;wBACP,QAAQ,EAAE,iBAAiB;wBAC3B,yVAA2C;wBAE3C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;;qBACrC;;;4BAIIoB,QAAK;;QAmCV,0BAAC;KA7CD;;;;;;;QC2BI;YAFA,aAAQ,GAAG,CAAC,CAAC;YAGT,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAqB,CAAC;SAC5D;;;;QAED,uCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC;oBAE5C,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CACvC,CAAC;qBACL;iBACJ;;oBAEK,YAAY,GAAG,IAAI,CAAC,gBAAgB,EAAE;gBAC5C,IAAI,YAAY,KAAK,IAAI,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;iBAC/B;aACJ;;;;;QAEO,+CAAgB;;;;YAAxB;;oBACU,OAAO,GAAU,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,EAAE;gBACrD,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;wBAC3B,QAAQ,GAAG,OAAO,CAAC,IAAI;;;uBAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,OAAO,GAAA,EAAC;oBACjD,IAAI,CAAC,QAAQ,EAAE;wBACX,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;qBACzB;oBACD,OAAO,QAAQ,CAAC,KAAK,CAAC;iBACzB;gBACD,OAAO,IAAI,CAAC;aACf;;;;;;QAEO,uCAAQ;;;;;YAAhB,UAAiB,QAAgB;gBAC7B,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;gBAChD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aACzB;;;;;QAED,4CAAa;;;;YAAb,UAAc,KAAqB;gBAC/B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aAC9B;;oBA5DJrB,YAAS,SAAC;wBACP,QAAQ,EAAE,kBAAkB;wBAC5B,unCAA4C;wBAE5C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,kBAAkB,EAAE;;qBACtC;;;;;4BAIIoB,QAAK;;QAmDV,2BAAC;KA7DD;;;;;;;QCPA;YAeI,eAAU,GAAG,KAAK,CAAC;SA6CtB;;;;QAvCG,wCAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;wBACrC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACnC;oBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;wBACrC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACnC;oBAED,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;wBACtC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;qBACrC;oBAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;iBAChE;aACJ;;;;QAED,qCAAK;;;YAAL;gBACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;aAC1B;;;;;QAED,gDAAgB;;;;YAAhB,UAAiB,KAAsB;gBACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChC;;;;;;QAEO,2CAAW;;;;;YAAnB,UAAoB,KAAoB;gBACpC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;oBACjE,IAAI,KAAK,KAAK,IAAI,EAAE;wBAChB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;qBAC7C;yBAAM;wBACH,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,eAAU,KAAK,MAAG,CAAC;qBACnF;oBACD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;oBA1DJrB,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAC7B,0cAA6C;wBAE7C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,mBAAmB,EAAE;;qBACvC;;;4BAYIoB,QAAK;;QA0CV,4BAAC;KA5DD;;;;;;;;;;;;;;;;;;;;;;ICHA;QAAA;SAOC;;;;;;QALG,4CAAY;;;;;YAAZ,UAAa,OAA2B,EAAE,IAAwC;;oBACxE,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS;gBAC1C,OAAO,CAAC,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC;aACrH;QAEL,4BAAC;IAAD,CAAC,IAAA;;;;;;;QCHD;YAaI,YAAO,GAAG,IAAI,qBAAqB,EAAE,CAAC;YAOtC,WAAM,GAAG,kBAAkB,CAAC;SAiE/B;;;;QA7DG,6CAAQ;;;YAAR;gBAEI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;oBACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,kBAAkB,CAAC;iBAC5D;gBAED,IAAI,CAAC,UAAU,GAAGgE,gBAAU,CAAC,OAAO,CAAC;oBACjCA,gBAAU,CAAC,QAAQ;oBACnBA,gBAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC;oBACvCA,gBAAU,CAAC,GAAG,CAAC,CAAC,CAAC;iBACpB,CAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,GAAG,IAAIC,iBAAW,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACjD,IAAI,CAAC,EAAE,GAAG,IAAIA,iBAAW,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAE/C,IAAI,CAAC,IAAI,GAAG,IAAIC,eAAS,CAAC;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,EAAE,EAAE,IAAI,CAAC,EAAE;iBACd,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;aAC1B;;;;;QAED,kDAAa;;;;YAAb,UAAc,SAAoB;gBAC9B,OAAO,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,GAAG,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC;aAC1H;;;;;;QAED,0CAAK;;;;;YAAL,UAAM,KAAmC,EAAE,OAAgB;gBACvD,IAAI,OAAO,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE;;wBAC5C,GAAG,GAAG,IAAI,GAAG,EAAkB;oBACrC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC5B,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;;wBAElB,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;oBAEjD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAM,IAAI,CAAC,KAAK,SAAI,KAAO,CAAC;oBAChE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;;;;;;QAEO,iDAAY;;;;;;YAApB,UAAqB,GAAW,EAAE,GAAwB;;oBAClD,MAAM,GAAG,GAAG;gBAEhB,GAAG,CAAC,OAAO;;;;mBAAC,UAAC,KAAK,EAAE,GAAG;;wBACb,IAAI,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC;oBAC9C,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBACxC,EAAC,CAAC;gBAEH,OAAO,MAAM,CAAC;aACjB;;;;QAED,0CAAK;;;YAAL;gBACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACZ,IAAI,EAAE,EAAE;oBACR,EAAE,EAAE,EAAE;iBACT,CAAC,CAAC;gBAEH,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;oBACzB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;oBApFJvF,YAAS,SAAC;wBACP,QAAQ,EAAE,yBAAyB;wBACnC,ghEAAmD;wBAEnD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,yBAAyB,EAAE;;qBAC7C;;QA+ED,iCAAC;KArFD;;;;;;;QCsBI;YAHA,aAAQ,GAAW,IAAI,CAAC;YACxB,aAAQ,GAAG,CAAC,CAAC;YAGT,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAoB,CAAC;SAC3D;;;;QAED,2CAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC;oBAC/C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,CAAC,CAAC;oBAE5C,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC7E;iBACJ;aACJ;;;;QAED,wCAAK;;;YAAL;gBACI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO;;;mBAAC,UAAC,GAAG;oBAC3B,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;iBACvB,EAAC,CAAC;gBAEH,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;oBACzB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;;;;;QAED,gDAAa;;;;;YAAb,UAAc,KAAwB,EAAE,MAAW;gBAC/C,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;;;;QAED,wCAAK;;;YAAL;;oBACU,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;qBACnC,MAAM;;;eAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,GAAA,EAAC;qBAClC,GAAG;;;eAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,KAAK,GAAA,EAAC;;oBAE5B,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,MAAI,IAAI,CAAC,QAAQ,MAAG,CAAC;gBAEtD,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;oBACzB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;oBAC7C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;oBA1DJD,YAAS,SAAC;wBACP,QAAQ,EAAE,uBAAuB;wBACjC,2+CAAiD;wBAEjD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE;;qBAC3C;;;;QAqDD,+BAAC;KA3DD;;;;;;;QCCM,mBAAmB,GAAW,YAAY;aAQFuF,wBAAmB;AANjE;QAyBI,kCAAoB,WAAgC,EAChC,sBAA8C;YAD9C,gBAAW,GAAX,WAAW,CAAqB;YAChC,2BAAsB,GAAtB,sBAAsB,CAAwB;YATlE,YAAO,GAAG,IAAI,qBAAqB,EAAE,CAAC;YAMtC,yBAAoB,GAAG,mBAAmB,CAAC;SAI1C;;;;QAED,2DAAwB;;;YAAxB;gBACI,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,uCAAuC;oBACnH,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,0CAA0C;wBACnF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,yCAAyC;4BAC1E,EAAE,CAAC;aACV;;;;QAED,yDAAsB;;;YAAtB;gBACI,OAAO,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,uCAAuC;oBAC/G,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,kCAAkC;wBACzE,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,0CAA0C;4BACjF,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,yCAAyC;gCACxE,EAAE,CAAC;aACV;;;;QAED,2CAAQ;;;YAAR;gBAAA,iBAwBC;gBAvBG,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,IAAI,mBAAmB,CAAC;iBAC/E;;oBACK,oBAAoB,yCAA6B,IAAI,CAAC,WAAW,IAAA;gBACvE,oBAAoB,CAAC,qBAAqB,GAAG,IAAI,CAAC,oBAAoB,CAAC;gBAEvE,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAACnD,yBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS;;;mBAAC,UAAC,MAAM;oBAC7E,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAC1B,EAAC,CAAC;;oBAEG,UAAU,GAAGgD,gBAAU,CAAC,OAAO,CAAC;oBAClCA,gBAAU,CAAC,QAAQ;iBACtB,CAAC;gBAEF,IAAI,CAAC,IAAI,GAAG,IAAIC,iBAAW,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;gBAC5C,IAAI,CAAC,EAAE,GAAG,IAAIA,iBAAW,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;gBAE1C,IAAI,CAAC,IAAI,GAAG,IAAIC,eAAS,CAAC;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI;oBACf,EAAE,EAAE,IAAI,CAAC,EAAE;iBACd,CAAC,CAAC;gBAEH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;aAC1D;;;;;;QAED,wCAAK;;;;;YAAL,UAAM,KAAmC,EAAE,OAAgB;gBACvD,IAAI,OAAO,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;;wBACtE,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;;wBAClD,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;oBAElD,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAM,IAAI,CAAC,QAAQ,CAAC,KAAK,WAAM,KAAK,cAAS,GAAG,OAAI,CAAC;oBACzF,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;;;QAED,wCAAK;;;YAAL;gBACI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;oBACZ,IAAI,EAAE,EAAE;oBACR,EAAE,EAAE,EAAE;iBACT,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;oBACzB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;oBAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;iBACzB;aACJ;;;;;;QAED,mDAAgB;;;;;YAAhB,UAAiB,KAAU,EAAE,WAAwB;;oBAC3C,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,KAAK;;oBAEnC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,oBAAoB,CAAC;gBAChF,IAAI,UAAU,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE;oBACpC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;iBACpC;qBAAM,IAAI,UAAU,EAAE;oBACnB,WAAW,CAAC,SAAS,CAAC;wBAClB,iBAAiB,EAAE,IAAI;qBAC1B,CAAC,CAAC;iBACN;qBAAM;oBACH,WAAW,CAAC,SAAS,CAAC;wBAClB,UAAU,EAAE,IAAI;qBACnB,CAAC,CAAC;iBACN;aACJ;;;;;QAED,4CAAS;;;;YAAT,UAAU,MAAM;gBACZ,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBACnC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aACzB;;;;;QAED,gDAAa;;;;YAAb,UAAc,WAAW;gBACrB,OAAO,WAAW,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,WAAW,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC;aACxG;;;;;QAED,mDAAgB;;;;YAAhB,UAAiB,KAAU;gBACvB,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;aAC5B;;oBAvHJvF,YAAS,SAAC;wBACP,QAAQ,EAAE,uBAAuB;wBACjC,s6EAAiD;wBAEjD,SAAS,EAAE;4BACP,EAAC,OAAO,EAAEyF,gBAAW,EAAE,QAAQ,EAAEC,sBAAiB,EAAE,IAAI,EAAE,CAACC,oBAAe,CAAC,EAAC;4BAC5E,EAAC,OAAO,EAAEC,qBAAgB,EAAE,QAAQ,IAAqB,EAAC;yBAC7D;wBACD,aAAa,EAAE3F,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,uBAAuB,EAAE;;qBAC3C;;;;;wBAxBQwF,gBAAW;wBAQXhD,2BAAsB;;;QA+H/B,+BAAC;KAzHD;;;;;;;QCRA;;;;YAQI,YAAO,GAA+B;gBAClC,MAAM,EAAE,mBAAmB;gBAC3B,OAAO,EAAE,oBAAoB;gBAC7B,QAAQ,EAAE,qBAAqB;gBAC/B,cAAc,EAAE,0BAA0B;gBAC1C,YAAY,EAAE,wBAAwB;gBACtC,YAAY,EAAE,wBAAwB;aACzC,CAAC;SAEL;;oBAjBA9C,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;kCA3BD;KAyBA;;;;;;;QCLA;;;;YAcI,aAAQ,GAAY,KAAK,CAAC;SAC7B;;oBAfAK,YAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;wBAChC,s9BAAgD;wBAChD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,sBAAsB,EAAE;qBAC1C;;;mCAIIoB,QAAK;+BAILA,QAAK;;QAEV,8BAAC;KAfD;;;;;;;QCcI,sCAAoB,YAAuC;YAAvC,iBAAY,GAAZ,YAAY,CAA2B;YAJ3D,YAAO,GAA8B,EAAE,CAAC;SAIuB;;;;QAE/D,+CAAQ;;;YAAR;gBACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC;;oBAE/C,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE;gBACrD,IAAI,OAAO,EAAE;oBACT,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;oBACzB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;iBACtC;aACJ;;;;;QAED,qDAAc;;;;YAAd,UAAe,GAAW;gBACtB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;gBACxC,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;;;;;QAED,uDAAgB;;;;YAAhB,UAAiB,SAAkB;gBAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;aACvB;;;;;;QAEO,sDAAe;;;;;YAAvB,UAAwB,GAAW;gBAC/B,IAAI,GAAG,EAAE;oBACL,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;;;uBAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,GAAG,KAAK,GAAG,GAAA,EAAC,CAAC;iBACtD;gBACD,OAAO,IAAI,CAAC;aACf;;;;;QAEO,mDAAY;;;;YAApB;;oBACU,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC/C,IAAI,MAAM,EAAE;oBACR,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,cACrB,MAAM,IACT,SAAS,EAAE,IAAI,CAAC,SAAS,IAC3B,CAAC;oBACH,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;iBAC9B;aACJ;;;;;QAEO,sDAAe;;;;YAAvB;;oBACU,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC/C,IAAI,MAAM,EAAE;oBACR,OAAO,MAAM,CAAC,SAAS,CAAC;iBAC3B;gBAED,OAAO,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC;aAC1D;;oBA7DJrB,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,6OAAqD;wBAErD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,2BAA2B,EAAE;;qBAC/C;;;;;wBATQ,yBAAyB;;;QAkElC,mCAAC;KA/DD;;;;;;;QCuBI,wCACY,mBAAwC,EACxC,YAAuC,EACvC,wBAAkD;YAFlD,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,iBAAY,GAAZ,YAAY,CAA2B;YACvC,6BAAwB,GAAxB,wBAAwB,CAA0B;SAC7D;;;;QAED,iDAAQ;;;YAAR;;oBACU,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;gBACrE,IAAI,aAAa,EAAE;;wBACT,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,aAAa,CAAC;oBACpF,IAAI,OAAO,EAAE;wBACT,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;wBACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC7D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACvC;iBACJ;aACJ;;;;;;QAEO,oDAAW;;;;;YAAnB,UAAoB,GAAsB;gBACtC,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE;oBACrB,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;oBAC1B,GAAG,CAAC,QAAQ,CAAC,QAAQ,gBAAQ,IAAI,CAAC,QAAQ,CAAE,CAAC;oBAC7C,GAAG,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;iBAC5C;aACJ;;;;QAED,oDAAW;;;YAAX;gBACI,IAAI,IAAI,CAAC,YAAY,EAAE;oBACnB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;oBAC5B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;iBAC5B;aACJ;;oBAtDJD,YAAS,SAAC;wBACP,QAAQ,EAAE,6BAA6B;wBACvC,QAAQ,EAAE,sBAAsB;qBACnC;;;;;wBALQ,mBAAmB;wBADnB,yBAAyB;wBADuD6F,2BAAwB;;;;8BAU5G7C,YAAS,SAAC,SAAS,EAAE,EAAE,IAAI,EAAE8C,mBAAgB,EAAE;yBAG/CzE,QAAK;+BAGLA,QAAK;+BAGLA,QAAK;6BAGLA,QAAK;;QAsCV,qCAAC;KAxDD;;;;;;;ACmBA,QAAa,0BAA0B,GAAU;QAC7C,eAAe;QACf,sBAAsB;QACtB,sBAAsB;QACtB,0BAA0B;QAC1B,qBAAqB;QACrB,uBAAuB;KAC1B;AAED;QAAA;SAwC4B;;oBAxC3BpC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZG,iBAAW;4BACXC,yBAAmB;4BACnB,cAAc;4BACdC,eAAU,CAAC,QAAQ,EAAE;yBACxB;wBACD,YAAY,WACL,0BAA0B;4BAC7B,8BAA8B;4BAC9B,mBAAmB;4BACnB,oBAAoB;4BACpB,qBAAqB;4BACrB,0BAA0B;4BAC1B,wBAAwB;4BACxB,wBAAwB;4BACxB,4BAA4B;0BAC/B;wBACD,OAAO,WACA,0BAA0B;4BAC7B,8BAA8B;4BAC9B,mBAAmB;4BACnB,oBAAoB;4BACpB,qBAAqB;4BACrB,0BAA0B;4BAC1B,wBAAwB;4BACxB,wBAAwB;4BACxB,4BAA4B;0BAC/B;wBACD,eAAe,EAAE;4BACb,8BAA8B;4BAC9B,mBAAmB;4BACnB,oBAAoB;4BACpB,qBAAqB;4BACrB,0BAA0B;4BAC1B,wBAAwB;4BACxB,wBAAwB;yBAC3B;qBACJ;;QAC0B,mBAAC;KAxC5B;;;;;;;;;;;;;;;;;;QC1BI,SAAU,SAAS;QACnB,YAAa,YAAY;;;QA4DzB,gCAAoB,YAA0B,EAC1B,UAAsB;YADtB,iBAAY,GAAZ,YAAY,CAAc;YAC1B,eAAU,GAAV,UAAU,CAAY;;;;YA/C1C,gBAAW,GAAY,KAAK,CAAC;;;;;;;YAQ7B,aAAQ,GAAe,IAAI,CAAC;;;;YAI5B,UAAK,GAAW,IAAI,CAAC;;;;;YAMrB,gBAAW,GAAW,4BAA4B,CAAC;;;;;YAanD,WAAM,GAA4B,IAAInB,eAAY,EAAE,CAAC;YAK7C,YAAO,GAAG,IAAI,CAAC;YACf,cAAS,GAAG,CAAC,CAAC;YACL,cAAS,GAAG,EAAE,CAAC;YACf,gBAAW,GAAG,EAAE,CAAC;YACjB,yCAAoC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;YAElG,aAAQ,GAAc,IAAI,CAAC;YAEpB,mBAAc,GAAG,MAAM,CAAC;SAI9B;;;;QAED,yCAAQ;;;YAAR;gBAAA,iBAUC;gBATG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS;;mBAAC;oBACnC,IAAI,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE;wBAC3B,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ;;;2BAAE,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;qBAC1G;iBACJ,EAAC,CAAC;gBAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;oBAChB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACvB;aACJ;;;;;QAED,gDAAe;;;;YAAf,UAAgB,KAAK;gBACjB,IAAI,IAAI,CAAC,0BAA0B,EAAE,IAAI,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,EAAE;oBAC1E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,IAAI,CAAC,YAAY,EAAE,CAAC;iBACvB;aACJ;;;;;QAED,wDAAuB;;;;YAAvB,UAAwB,KAAK;gBACzB,OAAO,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,oCAAoC,CAAC,CAAC;aACxI;;;;;QAED,6CAAY;;;;YAAZ,UAAa,KAAU;gBACnB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACjC;;;;;QAEO,6CAAY;;;;YAApB;gBAAA,iBA+CC;;oBA9CS,eAAe,GAAQ;oBACzB,SAAS,EAAE,IAAI,CAAC,SAAS;oBACzB,QAAQ,EAAE,IAAI,CAAC,SAAS;iBAC3B;gBAED,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;gBAEjC,IAAI,IAAI,CAAC,SAAS,EAAE;oBAChB,eAAe,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAChD;gBAED,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,SAAS;;;mBAAC,UAAC,UAAsB;oBAErE,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;wBAChB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,KAAK,SAAS,CAAC,OAAO,GAAG,KAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;wBAE7G,IAAI,CAAC,KAAI,CAAC,WAAW,EAAE;;gCACb,SAAS,GAAG,IAAIsF,eAAS,CAAC;gCAC5B,KAAK,EAAE;oCACH,EAAE,EAAE,MAAM;oCACV,IAAI,EAAE,MAAM;oCACZ,KAAK,EAAE,0BAA0B;iCACpC;6BACJ,CAAC;4BAEF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;4BAE9C,IAAI,CAAC,KAAI,CAAC,KAAK,EAAE;gCACb,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC;6BACvB;yBACJ;qBAEJ;yBAAM;;4BACG,QAAQ,GAAe,KAAI,CAAC,SAAS,KAAK,SAAS,CAAC,OAAO,GAAG,KAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC,GAAG,UAAU;wBAEzH,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACtF,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC;qBAC9D;oBAED,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;;;uBAAC,UAAC,IAAe,IAAK,OAAA,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,KAAI,CAAC,KAAK,GAAA,EAAC,CAAC;oBAEnG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;iBACxB;;;mBACD,UAAC,KAAK;oBACF,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAChC,EAAC,CAAC;aACV;;;;QAED,4CAAW;;;YAAX;gBACI,OAAO,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aACzH;;;;QAED,2DAA0B;;;YAA1B;gBACI,OAAO,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;aAC1H;;;;;;QAEO,wDAAuB;;;;;YAA/B,UAAgC,KAAiB;gBAAjD,iBAIC;;oBAHS,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE;gBACtE,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM;;;mBAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,cAAc,CAAC,GAAA,EAAC,CAAC;gBACzG,OAAO,KAAK,CAAC;aAChB;;;;;;;QAEO,oDAAmB;;;;;;YAA3B,UAA4B,IAAI,EAAE,cAAc;gBAC5C,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,QAAQ;oBACrC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI;;;uBAAC,UAAC,MAAM;wBAC9C,OAAO,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,WAAW,EAAE,KAAK,cAAc,CAAC,WAAW,EAAE,CAAC;qBACzE,EAAC,CAAC;aACV;;oBA5JJ/F,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAE9B,q4BAA8C;wBAC9C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE;;qBAC1C;;;;;wBAfQa,iBAAY;wBAAEjB,eAAU;;;;kCAmB5BwB,QAAK;+BAQLA,QAAK;4BAILA,QAAK;kCAMLA,QAAK;gCAOLA,QAAK;6BAMLJ,SAAM;iCAGN+B,YAAS,SAAC,YAAY;;QAkH3B,6BAAC;KA9JD;;;;;;;QCFA;SAemC;;oBAflC/D,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdG,iBAAW;4BACXC,yBAAmB;4BACnBC,eAAU,CAAC,QAAQ,EAAE;yBACxB;wBACD,OAAO,EAAE;4BACL,sBAAsB;yBACzB;wBACD,YAAY,EAAE;4BACV,sBAAsB;yBACzB;qBACJ;;QACiC,0BAAC;KAfnC;;;;;;;;;;;;;;;;;QCOA;;;;YAaI,eAAU,GAAS,IAAI,CAAC;;;;;;YAOxB,SAAI,GAAW,IAAI,CAAC;;;;;YAMpB,WAAM,GAAW,IAAI,CAAC;YA0BtB,UAAK,GAAwB,EAAE,CAAC;;;;YAQhC,aAAQ,GAAG,IAAInB,eAAY,EAAqB,CAAC;SA8FpD;QApGG,sBAAI,wCAAO;;;gBAAX;gBACI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;aACtB;;;WAAA;;;;QAMD,sCAAQ;;;YAAR;gBAAA,iBASC;gBARG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBAExD,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,SAAS;;;uBAAC,UAAC,UAAgB;wBAC/C,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;wBAC7B,KAAI,CAAC,gBAAgB,EAAE,CAAC;qBAC3B,EAAC,CAAC;iBACN;aACJ;;;;;QAED,yCAAW;;;;YAAX,UAAY,OAAsB;gBAC9B,IAAI,CAAC,gBAAgB,EAAE,CAAC;aAC3B;;;;;QAES,8CAAgB;;;;YAA1B;;oBACU,IAAI,GAAS,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU;gBAErF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAEnC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE;oBACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACrE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC5E,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;iBAChC;qBAAM;oBACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC7B;aACJ;;;;QAED,kCAAI;;;YAAJ;gBACI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACxB;aACJ;;;;QAED,8CAAgB;;;YAAhB;gBACI,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,KAAK,CAAC;aAC5C;;;;;QAED,wCAAU;;;;YAAV,UAAW,IAAU;gBACjB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;;wBACb,KAAK,sBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE,KAAK,EAAE,EAAA;oBAEtE,KAAK,CAAC,IAAI,oBAAqB;wBAC3B,EAAE,EAAE,IAAI,CAAC,EAAE;wBACX,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,IAAI,EAAE,IAAI;qBACb,GAAC,CAAC;;wBAEG,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;oBAC3D,IAAI,OAAO,GAAG,CAAC,EAAE;wBACb,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;qBAC5B;oBAED,IAAI,OAAO,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;wBAC/B,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;qBAC7B;oBAED,IAAI,IAAI,CAAC,IAAI,EAAE;wBACX,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;qBAC7B;oBAED,OAAO,KAAK,CAAC;iBAChB;gBAED,OAAO,EAAE,CAAC;aACb;;;;;;;QAEO,gDAAkB;;;;;;YAA1B,UAA2B,KAA0B,EAAE,MAAc;;oBAC7D,QAAQ,GAAW,CAAC,CAAC;gBAEzB,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,EAAE;oBACrC,QAAQ,GAAG,KAAK,CAAC,SAAS;;;uBAAC,UAAC,EAAE,IAAK,OAAA,EAAE,CAAC,EAAE,KAAK,MAAM,GAAA,EAAC,CAAC;iBACxD;gBAED,OAAO,QAAQ,CAAC;aACnB;;;;;;QAED,8CAAgB;;;;;YAAhB,UAAiB,KAAwB,EAAE,KAAa;gBACpD,IAAI,KAAK,EAAE;oBACP,KAAK,CAAC,cAAc,EAAE,CAAC;iBAC1B;gBAED,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAE1B,IAAI,IAAI,CAAC,MAAM,EAAE;wBACb,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBACpC;iBACJ;aACJ;;oBAzJJT,YAAS,SAAC;wBACP,QAAQ,EAAE,gBAAgB;wBAC1B,6jEAA0C;wBAE1C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE;4BACF,OAAO,EAAE,gBAAgB;yBAC5B;;qBACJ;;;iCAIIoB,QAAK;2BAOLA,QAAK;6BAMLA,QAAK;6BAMLA,QAAK;gCAQLA,QAAK;+BAGL2B,YAAS,SAAC,UAAU;+BAIpB3B,QAAK;+BAaLJ,SAAM;;QA+FX,0BAAC;KA1JD;;;;;;;QCDiDe,+CAAmB;QATpE;;SA2CC;;;;;;;;;QAvBa,sDAAgB;;;;;YAA1B;;oBACU,IAAI,GAAS,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU;gBAErF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACrD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;aAC7E;;;;;;;;QAKD,0CAAI;;;;YAAJ;gBACI,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACxB;aACJ;;;;;;;;QAKD,sDAAgB;;;;YAAhB;gBACI,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;aACxC;;oBA1CJhC,YAAS,SAAC;wBACP,QAAQ,EAAE,yBAAyB;wBACnC,iyCAAmD;wBAEnD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE;4BACF,OAAO,EAAE,yBAAyB;yBACrC;;qBACJ;;;+BAGI+C,YAAS,SAAC,UAAU;;QAgCzB,kCAAC;KAAA,CAlCgD,mBAAmB;;;;;;;QCNpE;SAegC;;oBAf/B/D,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdK,eAAU,CAAC,QAAQ,EAAE;yBACxB;wBACD,OAAO,EAAE;4BACL,mBAAmB;4BACnB,2BAA2B;yBAC9B;wBACD,YAAY,EAAE;4BACV,mBAAmB;4BACnB,2BAA2B;yBAC9B;qBACJ;;QAC8B,uBAAC;KAfhC;;;;;;;;;;;;;;;;;QCYI,gCAAqC,IAAI,EAAU,SAAuB;YAAvB,cAAS,GAAT,SAAS,CAAc;YACtE,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;YAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,4BAA4B,CAAC;YACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,4BAA4B,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,8BAA8B,CAAC;YAChE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,6BAA6B,CAAC;YAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;SACvC;;;;QAEM,qDAAoB;;;YAA3B;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAACoE,kBAAe,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aAC1E;;oBA5BJhG,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,0sCAAoC;wBAEpC,IAAI,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE;wBACvC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wDAUgBC,SAAM,SAACC,wBAAe;wBAlB9B8F,4BAAY;;;QAgCrB,6BAAC;KA9BD;;;;;;;QCyCI,8BAAoB,WAA+B,EAC/B,cAA8B,EAC9B,MAAiB;YAFjB,gBAAW,GAAX,WAAW,CAAoB;YAC/B,mBAAc,GAAd,cAAc,CAAgB;YAC9B,WAAM,GAAN,MAAM,CAAW;YA7BrC,aAAQ,GAAmB,EAAE,CAAC;YAC9B,cAAS,GAAG,IAAI,CAAC;;;;YAQjB,iBAAY,GAAG,IAAI,CAAC;;;;YAIpB,kBAAa,GAAG,IAAI,CAAC;;;;YAIrB,gBAAW,GAAG,IAAI,CAAC;;;;YAInB,aAAQ,GAAuB,IAAIxF,eAAY,EAAQ,CAAC;;;;YAIxD,YAAO,GAAuB,IAAIA,eAAY,EAAQ,CAAC;YAKnD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;SACnD;;;;QAED,0CAAW;;;YAAX;gBACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;;;;QAED,wCAAS;;;YAAT;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;aACtG;;;;QAED,wCAAS;;;YAAT;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;aACtG;;;;;QAED,sCAAO;;;;YAAP,UAAQ,SAAS;gBAAjB,iBAYC;gBAXG,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;oBAClB,IAAI,CAAC,WAAW;yBACX,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;yBAC3E,IAAI;;mBAAC;wBACF,OAAA,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,CACjC,KAAI,CAAC,IAAI,CAAC,EAAE,EACZ,EAAE,OAAO,EAAE,CAAC,aAAa,EAAE,MAAM,EAAE,YAAY,EAAE,qBAAqB,CAAC,EAAE,CAC5E;qBAAA,EACJ;yBACA,IAAI;;;mBAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;iBACrD;aACJ;;;;QAED,iDAAkB;;;YAAlB;gBAAA,iBAMC;gBALG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI;;;mBAAC,UAAC,aAA4B;oBAChF,KAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;oBAC3C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBAC1B,EAAC,CAAC;aACN;;;;;QAED,8CAAe;;;;YAAf,UAAgB,SAAiB;gBAC7B,IAAI,IAAI,CAAC,aAAa,EAAE;;wBACd,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC;oBACnF,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;iBAC5C;aACJ;;;;;QAED,4CAAa;;;;YAAb,UAAc,SAAiB;gBAA/B,iBAoBC;gBAnBG,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;;wBACZ,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE;wBACvD,IAAI,EAAE;4BACF,KAAK,EAAE,uCAAuC;4BAC9C,OAAO,EAAE,yCAAyC;4BAClD,QAAQ,EAAE,2CAA2C;4BACrD,OAAO,EAAE,0CAA0C;yBACtD;wBACD,QAAQ,EAAE,OAAO;qBACpB,CAAC;oBAEF,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS;;;uBAAC,UAAC,MAAM;wBACrC,IAAI,MAAM,KAAK,IAAI,EAAE;4BACjB,KAAI,CAAC,WAAW,CAAC,WAAW;iCACvB,aAAa,CAAC,KAAI,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC;iCACtC,IAAI;;2BAAC,cAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;yBACrD;qBACJ,EAAC,CAAC;iBACN;aACJ;;;;;QAED,+CAAgB;;;;YAAhB,UAAiB,IAAS;gBACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;;;;;QAED,gDAAiB;;;;YAAjB,UAAkB,IAAS;gBACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC5B;;;;;;;;QAEO,mDAAoB;;;;;;;YAA5B,UAA6B,MAAc,EAAE,SAAiB,EAAE,UAAoB;;oBAC1E,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC;gBACrF,OAAO,eAAe,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC;aACrF;;;;;QAED,8CAAe;;;;YAAf,UAAgB,GAAW;gBACvB,IAAI,GAAG,EAAE;;wBACC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC;oBAExC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;oBAC5B,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;oBAEhB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;oBAChC,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;iBACnC;aACJ;;oBAtIJT,YAAS,SAAC;wBACP,QAAQ,EAAE,kBAAkB;wBAC5B,0nFAA4C;wBAE5C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE;4BACF,OAAO,EAAE,kBAAkB;yBAC9B;;qBACJ;;;;;wBAdQL,uBAAkB;wBAAEG,mBAAc;wBAGlCc,kBAAS;;;;2BAmBbQ,QAAK;mCAILA,QAAK;oCAILA,QAAK;kCAILA,QAAK;+BAILJ,SAAM;8BAINA,SAAM;;QAmGX,2BAAC;KAvID;;;;;;;QC+CI,iCAAY,MAAwB,EAChB,cAA8B,EAC9B,kBAAsC;YADtC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;;;;YArB1D,iBAAY,GAAG,IAAI,CAAC;;;;YAIpB,kBAAa,GAAG,IAAI,CAAC;;;;YAIrB,kBAAa,GAAuB,IAAIR,eAAY,EAAQ,CAAC;;;;YAI7D,gBAAW,GAAuB,IAAIA,eAAY,EAAQ,CAAC;YAK3D,gBAAW,GAAW,OAAO,CAAC;SAK7B;;;;;QAED,yCAAO;;;;YAAP,UAAQ,IAAU;gBACd,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/C,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;aAC9B;;;;;QAED,iDAAe;;;;YAAf,UAAgB,KAAU;gBACtB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC5D,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;gBAC/C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;aAC9B;;;;;QAED,+CAAa;;;;YAAb,UAAc,KAAU;gBACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAChC;;;;QAED,gDAAc;;;YAAd;gBACI,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;aAC9B;;;;QAED,kDAAgB;;;YAAhB;gBACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;aACrE;;;;QAED,2CAAS;;;YAAT;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAC1E;;oBAhFJT,YAAS,SAAC;wBACP,QAAQ,EAAE,qBAAqB;wBAC/B,mrDAA+C;wBAE/C,UAAU,EAAE;4BACRqE,kBAAO,CAAC,cAAc,EAAE;gCACpBC,gBAAK,CAAC,MAAM,EAAEC,gBAAK,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC;gCAC5ED,gBAAK,CAAC,OAAO,EAAEC,gBAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;gCACzEC,qBAAU,CAAC,eAAe,EAAE;oCACxBD,gBAAK,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;oCAC/BE,kBAAO,CAAC,uCAAuC,CAAC;iCACnD,CAAC;gCACFD,qBAAU,CAAC,eAAe,EAAE;oCACxBD,gBAAK,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;oCAChCE,kBAAO,CAAC,uCAAuC,CAAC;iCACnD,CAAC;6BACL,CAAC;yBACL;wBACD,aAAa,EAAExE,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAtBQuC,qBAAgB;wBAAEzC,mBAAc;wBAAEH,uBAAkB;;;;2BA0BxDyB,QAAK;mCAILA,QAAK;oCAILA,QAAK;oCAILJ,SAAM;kCAINA,SAAM;2CAGN+B,YAAS,SAAC,aAAa;;QAuC5B,8BAAC;KAjFD;;;;;;;QCuBI,gCAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;YAhBlD,oBAAe,GAAW,OAAO,CAAC;YAElC,kBAAa,GAAY,KAAK,CAAC;YAM/B,YAAO,GAAG,IAAIvC,eAAY,EAAE,CAAC;YAG7B,UAAK,GAAG,IAAIA,eAAY,EAAE,CAAC;YAG3B,WAAM,GAAG,IAAIA,eAAY,EAAE,CAAC;SAG3B;;;;QAED,0CAAS;;;YAAT;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;aAC1E;;;;QAED,+CAAc;;;YAAd;gBACI,OAAO,IAAI,CAAC,eAAe,KAAK,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;aAC1D;;;;QAED,6CAAY;;;YAAZ;gBACI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;aACtB;;oBAtCJT,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,svDAA8C;wBAE9C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,OAAO,EAAE,oBAAoB,EAAE;;qBAC1C;;;;;wBARQF,mBAAc;;;;2BAelBsB,QAAK;8BAGLJ,SAAM;4BAGNA,SAAM;6BAGNA,SAAM;;QAkBX,6BAAC;KAxCD;;;;;;;QCOA;SAoBoC;;oBApBnChC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdK,eAAU,CAAC,QAAQ,EAAE;4BACrB,YAAY;4BACZF,iBAAW;yBACd;wBACD,OAAO,EAAE;4BACL,sBAAsB;4BACtB,uBAAuB;4BACvB,oBAAoB;4BACpBA,iBAAW;yBACd;wBACD,YAAY,EAAE;4BACV,sBAAsB;4BACtB,uBAAuB;4BACvB,oBAAoB;yBACvB;qBACJ;;QACkC,2BAAC;KApBpC;;;;;;;;;;;;;;;;;QCRA;YAaI,SAAI,GAAW,EAAE,CAAC;YAClB,SAAI,GAAW,EAAE,CAAC;SAerB;;;;QAVG,4CAAQ;;;YAAR;gBACI,IAAI,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;wBAEhC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC;oBAC1C,IAAI,QAAQ,EAAE;wBACV,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;qBACnC;iBACJ;aACJ;;oBA5BJ1B,YAAS,SAAC;wBACP,QAAQ,EAAE,wBAAwB;wBAClC,QAAQ,EAAE,yNAGT;wBAED,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,eAAe,EAAEkD,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,mDAAmD,EAAE;;qBACvE;;;0BAMI9B,QAAK;;QAaV,gCAAC;KA7BD;;;;;;;;;ACKA;QAKI,oCAAoB,aAA4B;YAA5B,kBAAa,GAAb,aAAa,CAAe;SAC/C;;;;;;;;;;;;;;;;;;;;;;QAaM,2CAAM;;;;;;;;;;YAAb,UAAc,UAAkB,EAAE,UAAyB,EAAE,SAAqB,EAAE,QAAqB,EAAE,YAAuB;gBAAhG,2BAAA;oBAAA,iBAAyB;;gBAAE,0BAAA;oBAAA,aAAqB;;gBAAE,yBAAA;oBAAA,aAAqB;;;oBAEjG,oBAAoB,GAAG,EAAE;gBAE7B,IAAI,YAAY,IAAI,YAAY,CAAC,MAAM,EAAE;oBACrC,YAAY;yBACP,MAAM;;;mBAAC,UAAC,EAAE,IAAK,OAAA,EAAE,KAAK,UAAU,GAAA,EAAC;yBACjC,OAAO;;;mBAAC,UAAC,OAAO;wBACb,oBAAoB,IAAI,2CAAyC,OAAO,MAAG,CAAC;qBAC/E,EAAC,CAAC;iBACV;;oBAEK,eAAe,GAAG,UAAU,GAAG,CAAC,EAAE,KAAK,EAAE,uCAAqC,UAAU,SAAI,oBAAsB,EAAE,CAAC,GAAG,EAAE;;oBAE1H,iBAAiB,GAAQ;oBAC3B,KAAK,EAAE;wBACH,KAAK,EAAK,UAAU,kBAAa,UAAU,MAAG;qBACjD;oBACD,OAAO,EAAE,CAAC,MAAM,EAAE,qBAAqB,CAAC;oBACxC,MAAM,EAAE;wBACJ,QAAQ,EAAE,QAAQ;wBAClB,SAAS,EAAE,SAAS;qBACvB;oBACD,aAAa;wBACT,EAAE,KAAK,EAAE,kBAAkB,EAAE;wBAC7B,EAAE,KAAK,EAAE,uBAAuB,EAAE;uBAC/B,eAAe,CACrB;oBACD,KAAK,EAAE;wBACH,SAAS,EAAE,CAAC,OAAO,CAAC;qBACvB;iBACJ;gBAED,OAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;aAClE;;oBArDJ1B,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAVQwE,kBAAa;;;;yCAjBtB;KAyBA;;;;;;;QCYM,iBAAiB;;OAAG,cAAM,OAAA,IAAI,GAAA,CAAA;;QAmIhC,2CAAoB,0BAAsD,EACtD,sBAA8C,EAC9C,sBAA8C;YAFlE,iBAeC;YAfmB,+BAA0B,GAA1B,0BAA0B,CAA4B;YACtD,2BAAsB,GAAtB,sBAAsB,CAAwB;YAC9C,2BAAsB,GAAtB,sBAAsB,CAAwB;YA1HlE,uBAAkB,GAAe,IAAIjC,gBAAU,CAAC;gBAC5C,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,CAAC;gBACZ,UAAU,EAAE,CAAC;gBACb,YAAY,EAAE,KAAK;aACtB,CAAC,CAAC;;;;YAIH,oBAAe,GAAW,IAAI,CAAC;;;;;;YAO/B,wBAAmB,GAAY,KAAK,CAAC;;;;;;YAOrC,qBAAgB,GAAe,IAAI,CAAC;YAEpC,eAAU,GAAc,iBAAiB,CAAC;YAuB1C,wBAAmB,GAAa,EAAE,CAAC;;;;;;YAqBnC,kBAAa,GAAkB,IAAI,CAAC;;;;YAIpC,aAAQ,GAAW,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;;;;;YAMpD,qBAAgB,GAAuB,iBAAiB,CAAC;;;;YAYzD,WAAM,GAAyB,IAAIzB,eAAY,EAAU,CAAC;YAQ1D,eAAU,GAAsB,IAAI,CAAC;YAErC,eAAU,GAAW,EAAE,CAAC;YACxB,yBAAoB,GAAY,KAAK,CAAC;YACtC,yBAAoB,GAAY,KAAK,CAAC;YACtC,aAAQ,GAAY,KAAK,CAAC;YAC1B,gBAAW,GAAS,IAAI,CAAC;YACzB,mBAAc,GAAkB,IAAI,CAAC;YACrC,0BAAqB,GAAkB,IAAI,CAAC;YAE5C,eAAU,GAAoB,IAAI,CAAC,kBAAkB,CAAC;YAKtD,mBAAc,GAAY,KAAK,CAAC;YAChC,mBAAc,GAAW,GAAG,CAAC;YAC7B,gBAAW,GAAgB,IAAI6E,iBAAW,EAAE,CAAC;YAOzC,IAAI,CAAC,WAAW,CAAC,YAAY;iBACxB,IAAI,CACDpB,sBAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CACpC;iBACA,SAAS;;;WAAC,UAAC,WAAW;gBACnB,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aAC5B,EAAC,CAAC;YAEP,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC7B,yBAAoB,CAAC,cAAc,CAAC,CAAC,SAAS;;;eAAC,UAAC,OAAO;gBACtF,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;aAC3B,EAAC,CAAC;SAEN;QAhGD,sBACI,wDAAS;;;gBAIb;gBACI,OAAO,IAAI,CAAC,UAAU,CAAC;aAC1B;;;;;;;;;;;;gBAPD,UACc,SAAoB;gBAC9B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;aACnC;;;WAAA;QAWD,sBACI,iEAAkB;;;gBAKtB;gBACI,OAAO,IAAI,CAAC,mBAAmB,CAAC;aACnC;;;;;;;;;gBARD,UACuB,kBAA4B;gBAC/C,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;gBAC9C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACzC;;;WAAA;QAgFD,sBAAI,yDAAU;;;gBASd;gBACI,OAAO,IAAI,CAAC,WAAW,CAAC;aAC3B;;;;gBAXD,UAAe,KAAW;gBACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;oBACrB,WAAW,GAAG,IAAI;gBACtB,IAAI,KAAK,EAAE;oBACP,WAAW,GAAG,CAAC,KAAK,CAAC,CAAC;iBACzB;gBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACjC;;;WAAA;;;;QAMD,oDAAQ;;;YAAR;gBACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC;gBAE3C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;gBACtF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;aAC7F;;;;;;QAEO,2DAAe;;;;;YAAvB,UAAwB,MAAkB;gBAA1C,iBAQC;gBAPG,IAAI,CAAC,MAAM,EAAE;oBACT,MAAM;;uBAAG,cAAM,OAAA,IAAI,GAAA,CAAA,CAAC;iBACvB;gBACD,IAAI,CAAC,UAAU;;;;;mBAAG,UAAC,KAAmB,EAAE,KAAa,EAAE,KAAqB;oBACxE,OAAO,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;wBAC9B,CAAC,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;iBAC1C,CAAA,CAAC;aACL;;;;;;QAEO,iEAAqB;;;;;YAA7B,UAA8B,GAAiB;;oBACrC,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK;gBAC5B,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM;oBAC3D,KAAK;oBACL,KAAK,CAAC,UAAU;oBAChB,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;;wBAC9B,YAAY,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI;;;uBAC9C,UAAC,EAAU,IAAK,OAAA,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAA,EAC5D;oBACD,OAAO,CAAC,CAAC,YAAY,CAAC;iBACzB;gBACD,OAAO,KAAK,CAAC;aAChB;;;;;;;;;;;;QAOD,uDAAW;;;;;;YAAX,UAAY,UAAqB;gBAC7B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC;gBACpC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;gBACtC,IAAI,CAAC,aAAa,EAAE,CAAC;aAExB;;;;;;;;;;;;QAOD,kDAAM;;;;;;YAAN,UAAO,UAAkB;gBACrB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;aACxB;QAKD,sBAAI,mEAAoB;;;;;;;gBAAxB;;oBACQ,UAAgB;gBAEpB,IAAI,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC9C,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;iBAChC;qBAAM;oBACH,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;iBAC7C;gBAED,OAAO,UAAU,CAAC;aACrB;;;WAAA;;;;;;;;QAKD,iDAAK;;;;YAAL;gBACI,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC;aAC7D;;;;;;;;QAKD,uDAAW;;;;YAAX;gBACI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACrC;;;;;;;;;QAKO,yDAAa;;;;;YAArB;gBACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;gBAEpE,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;iBAChB;qBAAM;oBACH,IAAI,CAAC,cAAc,EAAE,CAAC;iBACzB;aACJ;;;;;;;;;QAKO,0DAAc;;;;;YAAtB;gBACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACzC,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,2BAA2B,CAAC,KAAK,EAAE,CAAC;iBAC5C;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;;;;;;;;;QAKO,uDAAW;;;;;YAAnB;gBAAA,iBAgBC;gBAfG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBAEjC,IAAI,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;oBAClE,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC;yBAC3D,SAAS;;;mBAAC,UAAC,OAAO;wBACX,KAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,SAAS,EAAE,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC;6BAC7H,SAAS,CAAC,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;qBACrD;;uBACD;wBACI,KAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;qBACrD,EAAC,CAAC;iBACd;qBAAM;oBACH,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;yBACpH,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBACrD;aACJ;;;;;;;;;;;;;QAOO,6DAAiB;;;;;;;YAAzB,UAA0B,UAAsB;gBAC5C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAElC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;aAChC;;;;;;;;QAKD,0DAAc;;;;YAAd;gBACI,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;gBAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;aACtB;;;;;;;;QAKD,0DAAc;;;;YAAd;gBACI,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;oBAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;iBAC3D;aACJ;;;;;;;;QAKD,2DAAe;;;;YAAf;gBACI,OAAO,CAAC,IAAI,CAAC,oBAAoB,IAAI,IAAI,CAAC,UAAU,CAAC;aACxD;;;;;;;;;;;;QAOD,+DAAmB;;;;;;YAAnB,UAAoB,UAAsB;gBACtC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBAE7B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;iBACtB;aACJ;;;;;;;;;;;;;QAOO,gEAAoB;;;;;;;YAA5B,UAA6B,KAAW;gBACpC,IAAI,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;oBACvC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBAC3B;qBAAM;oBACH,IAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;aACJ;;;;;;;;QAKD,2DAAe;;;;YAAf;gBACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;aAC1B;;;;;;;;;;;;QAOD,wDAAY;;;;;;YAAZ,UAAa,KAAU;gBACnB,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtD;;;;;QAED,gEAAoB;;;;YAApB,UAAqB,IAAe;gBAChC,IAAI,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;oBAC7D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;iBACjD;qBAAM;oBACH,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;iBACrC;aACJ;;oBA7XJrC,YAAS,SAAC;wBACP,QAAQ,EAAE,iCAAiC;wBAE3C,gjJAA2D;wBAC3D,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,OAAO,EAAE,iCAAiC,EAAE;;qBACvD;;;;;wBAfQ,0BAA0B;wBAE1B,sBAAsB;wBAZ3BwC,2BAAsB;;;;sCAoCrBpB,QAAK;0CAOLA,QAAK;uCAOLA,QAAK;4BASLA,QAAK;gCAQLA,QAAK;yCAcLA,QAAK;oCAeLA,QAAK;+BAILA,QAAK;uCAMLA,QAAK;0CAQLA,QAAK;6BAILJ,SAAM;mCAGN+B,YAAS,SAAC,cAAc;kCAGxBA,YAAS,SAACkD,uBAAkB;kDAe5BlD,YAAS,SAACmD,gCAA2B;;QAsQ1C,wCAAC;KA9XD;;;;;;;QCTA;SA0ByC;;oBA1BxClH,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLyC,iBAAW;4BACXC,yBAAmB;4BACnBC,eAAU,CAAC,QAAQ,EAAE;4BACrBL,mBAAY;4BACZ,cAAc;4BACd,mBAAmB;4BACnB,gBAAgB;4BAChB,kBAAkB;yBACrB;wBACD,OAAO,EAAE;4BACL,iCAAiC;4BACjC,yBAAyB;4BACzB,4BAA4B;yBAC/B;wBACD,eAAe,EAAE;4BACb,iCAAiC;4BACjC,4BAA4B;yBAC/B;wBACD,YAAY,EAAE;4BACV,iCAAiC;4BACjC,yBAAyB;4BACzB,4BAA4B;yBAC/B;qBACJ;;QACuC,gCAAC;KA1BzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXM,gBAAgB,GAAG,uCAAuC;;;;;AAEhE,aAAgB,uBAAuB,CAAC,EAAsB;YAApB,gBAAK;;YACrC,iBAAiB,GAAW,wBAAwB;;YACpD,OAAO,GAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC;QAEvD,OAAO,CAAC,OAAO,IAAI,IAAI,GAAG;YACtB,OAAO,EAAK,gBAAgB,wBAAqB;SACpD,CAAC;IACN,CAAC;;;;;AAED,aAAgB,eAAe,CAAC,EAAsB;YAApB,gBAAK;;YAC7B,OAAO,IAAa,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,KAAK,GAAG,CAAC;QAEvE,OAAO,OAAO,GAAG,IAAI,GAAG;YACpB,OAAO,EAAK,gBAAgB,gBAAa;SAC5C,CAAC;IACN,CAAC;;;;;AAED,aAAgB,gBAAgB,CAAC,EAAsB;YAApB,gBAAK;;YAC9B,OAAO,GAAY,CAAC,CAAC,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE;QAEjD,OAAO,OAAO,GAAG,IAAI,GAAG;YACpB,OAAO,EAAK,gBAAgB,iBAAc;SAC7C,CAAC;IACN,CAAC;;;;;;;QCSG,+BACY,WAAwB,EACxB,MAA2C,EAC3C,QAAyB,EACzB,WAA+B,EAGhC,IAAS;YANR,gBAAW,GAAX,WAAW,CAAa;YACxB,WAAM,GAAN,MAAM,CAAqC;YAC3C,aAAQ,GAAR,QAAQ,CAAiB;YACzB,gBAAW,GAAX,WAAW,CAAoB;YAGhC,SAAI,GAAJ,IAAI,CAAK;YAvBpB,WAAM,GAAS,IAAI,CAAC;;;;YAKpB,UAAK,GAAsB,IAAId,eAAY,EAAO,CAAC;;;;YAKnD,YAAO,GAAsB,IAAIA,eAAY,EAAQ,CAAC;YAEtD,cAAS,GAAG,sCAAsC,CAAC;YACnD,gBAAW,GAAG,wCAAwC,CAAC;YACvD,aAAQ,GAAG,WAAW,CAAC;YAWnB,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC;gBAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC;gBACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;aAClD;SACJ;QAED,sBAAI,0CAAO;;;gBAAX;gBACI,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aAC7B;;;WAAA;;;;QAED,wCAAQ;;;YAAR;gBACY,IAAA,yBAAM;;oBACV,IAAI,GAAG,EAAE;;oBACT,WAAW,GAAG,EAAE;gBAEpB,IAAI,MAAM,EAAE;oBACA,IAAA,8BAAU;oBAElB,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC;oBACzB,WAAW,GAAG,UAAU,GAAG,UAAU,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;iBAChE;;oBAEK,UAAU,GAAG;oBACf,IAAI,EAAE;wBACF4E,gBAAU,CAAC,QAAQ;wBACnB,uBAAuB;wBACvB,eAAe;wBACf,gBAAgB;qBACnB;iBACJ;gBAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBAC/B,IAAI,EAAE,CAAE,IAAI,EAAE,UAAU,CAAC,IAAI,CAAE;oBAC/B,WAAW,EAAE,CAAE,WAAW,CAAE;iBAC/B,CAAC,CAAC;aACN;QAED,sBAAI,uCAAI;;;gBAAR;gBACY,IAAA,2BAAI;gBAEZ,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aAC9B;;;WAAA;QAED,sBAAI,8CAAW;;;gBAAf;gBACY,IAAA,yCAAW;gBAEnB,OAAO,CAAC,WAAW,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aACrC;;;WAAA;QAED,sBAAY,6CAAU;;;;gBAAtB;gBACU,IAAA,SAAmC,EAAjC,eAAW,EAAE,4BAAoB;gBAEzC,OAAO;oBACH,UAAU,EAAE,KAAK;oBACjB,gBAAgB,EAAE,WAAW;iBAChC,CAAC;aACL;;;WAAA;;;;;QAEO,sCAAM;;;;YAAd;gBACU,IAAA,SAAsE,EAApE,cAAI,EAAE,0BAAU,EAAE,sBAAQ,EAAE,sBAAQ,EAAU,mCAAsB;gBAC5E,OAAO,QAAQ,CAAC,YAAY,CAAC,YAAY,EAAE,EAAE,IAAI,MAAA,EAAE,UAAU,YAAA,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;aAC9E;;;;;QAEO,oCAAI;;;;YAAZ;gBACU,IAAA,SAAsE,EAApE,cAAI,EAAE,0BAAU,EAAE,sBAAQ,EAAoB,0BAAsB;gBAC5E,OAAO,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE,UAAU,YAAA,EAAE,CAAC,CAAC;aAC5D;;;;QAED,sCAAM;;;YAAN;gBAAA,iBAaC;gBAZS,IAAA,SAAgC,EAA9B,cAAI,EAAE,kBAAM,EAAE,oBAAgB;gBAEtC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBAAE,OAAO;iBAAE;gBAE5B,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE;qBACjC,SAAS;;;eACN,UAAC,MAAY;oBACT,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC1B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;iBACxB;;;mBACD,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAA,EACrC,CAAC;aACT;;;;;QAED,2CAAW;;;;YAAX,UAAY,KAAU;;oBACd,YAAY,GAAG,8BAA8B;gBAEjD,IAAI;oBACiB,IAAA,uDAAU;oBAE3B,IAAI,UAAU,KAAK,GAAG,EAAE;wBACpB,YAAY,GAAG,sCAAsC,CAAC;qBACzD;iBACJ;gBAAC,OAAO,GAAG,EAAE,+CAA+C;gBAE7D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;gBAExD,OAAO,KAAK,CAAC;aAChB;;oBApIJrF,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;wBAE7B,snEAAmC;;qBACtC;;;;;wBAZQM,iBAAW;wBACMC,qBAAY;wBAG7BkD,oBAAe;wBAAE1C,uBAAkB;wDAkCnCP,WAAQ,YACRN,SAAM,SAACC,wBAAe;;;;4BAlB1Bc,SAAM;8BAKNA,SAAM;;QAmHX,4BAAC;KArID;;;;;;;QC6CE,gCACU,kBAAsC,EACtC,WAAwB,EACxB,MAA4C;YAF5C,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,gBAAW,GAAX,WAAW,CAAa;YACxB,WAAM,GAAN,MAAM,CAAsC;;;;YA5BtD,UAAK,GAAsB,IAAIR,eAAY,EAAO,CAAC;;;;;;YAOnD,YAAO,GAAsB,IAAIA,eAAY,EAAO,CAAC;YAErD,eAAU,GAAqB,IAAIE,YAAO,EAAW,CAAC;YAEtD,gBAAW,GAAG,6BAA6B,CAAC;YAC5C,uBAAkB,GAAG,KAAK,CAAC;YAG3B,sBAAiB,GAAG;gBAClB,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,2BAA2B,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACxE,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,4BAA4B,EAAE,QAAQ,EAAE,KAAK,EAAE;gBAC1E;oBACE,KAAK,EAAE,WAAW;oBAClB,KAAK,EAAE,8BAA8B;oBACrC,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC;SAME;;;;QAEJ,yCAAQ;;;YAAR;gBAAA,iBAuCC;;oBAtCO,UAAU,GAAG;oBACjB,EAAE,EAAE;wBACF0E,gBAAU,CAAC,QAAQ;wBACnBA,gBAAU,CAAC,SAAS,CAAC,EAAE,CAAC;wBACxB,IAAI,CAAC,uBAAuB;qBAC7B;oBACD,KAAK,EAAE;wBACLA,gBAAU,CAAC,QAAQ;wBACnB,IAAI,CAAC,gBAAgB;wBACrBA,gBAAU,CAAC,SAAS,CAAC,CAAC,CAAC;wBACvBA,gBAAU,CAAC,SAAS,CAAC,GAAG,CAAC;qBAC1B;oBACD,WAAW,EAAE,CAACA,gBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;iBACzC;gBAED,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACjC,KAAK,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC;oBAC/B,EAAE,EAAE,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,qBAAqB,EAAE,CAAC;oBACvD,WAAW,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,WAAW,CAAC;iBAC1C,CAAC,CAAC;gBAEH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;gBAExD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,YAAY;qBACrC,IAAI,CACHnB,sBAAY,CAAC,GAAG,CAAC,EACjBkC,kBAAQ;;;eACJ,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,GAAA;;;mBAC7C,UAAC,KAAK,IAAK,OAAA,KAAK,GAAA,EACnB,EACDrB,mBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;qBACA,SAAS;;;eAAC,UAAC,KAAa;oBACvB,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;wBAChE,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;wBAC1D,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,aAAa,EAAE,CAAC;qBAC1C;iBACF,EAAC,CAAC;aACN;;;;QAED,4CAAW;;;YAAX;gBACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;aAC5B;QAED,sBAAI,yCAAK;;;gBAAT;gBACU,IAAA,6BAAK;gBAEb,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aAC7B;;;WAAA;QAED,sBAAI,sCAAE;;;gBAAN;gBACU,IAAA,uBAAE;gBAEV,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aAC1B;;;WAAA;QAED,sBAAI,+CAAW;;;gBAAf;gBACU,IAAA,yCAAW;gBAEnB,OAAO,CAAC,WAAW,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;aACnC;;;WAAA;QAED,sBAAI,8CAAU;;;gBAAd;gBACE,OAAO,IAAI,CAAC,gBAAgB,IAAI,EAAE,CAAC;aACpC;;;WAAA;;;;QAED,uCAAM;;;YAAN;gBAAA,iBAcC;gBAbO,IAAA,SAAuB,EAArB,cAAI,EAAE,kBAAe;gBAE7B,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACf,OAAO;iBACR;gBAED,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS;;;mBACrB,UAAC,IAAe;oBACd,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBACpB;;;mBACD,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAA,EACnC,CAAC;aACH;;;;;QAED,wDAAuB;;;;YAAvB,UAAwB,KAAK;gBAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,KAAK,CAAC;aACrC;;;;;QAEO,uCAAM;;;;YAAd;gBACQ,IAAA,SAA6C,EAA3C,gBAAK,EAAE,UAAE,EAAE,4BAAW,EAAE,0BAAmB;;oBAC7C,QAAQ,sBAAoB;oBAChC,EAAE,IAAA;oBACF,KAAK,OAAA;oBACL,WAAW,aAAA;oBACX,UAAU,YAAA;iBACX,EAAA;gBAED,OAAOzF,SAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;aACpE;;;;;;QAEO,yCAAQ;;;;;YAAhB,UAAiB,KAAa;gBAC5B,OAAO,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;aACrE;;;;;;QAEO,8CAAa;;;;;YAArB,UAAsB,KAAK;gBACzB,OAAO,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;aAC5D;;;;;;QAEO,4CAAW;;;;;YAAnB,UAAoB,KAAU;gBAEjB,IAAA,uDAAU;gBAGrB,IAAI,UAAU,KAAK,GAAG,EAAE;oBACtB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;wBACjC,OAAO,EAAE,yBAAyB;qBACnC,CAAC,CAAC;iBACJ;gBAED,OAAO,KAAK,CAAC;aACd;;;;;;QAEa,uDAAsB;;;;;YAApC,UAAqC,YAAoB;;;;;;gCACnD,OAAO,GAAG,EAAE;;;;gCAGD,qBAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,EAAA;;gCAAtD,OAAO,GAAG,CAAC,SAA2C,EAAE,IAAI,CAAC,OAAO,CAAC;;;;gCAErE,OAAO,GAAG,EAAE,CAAC;;;gCAGjB,IAAI,OAAO,CAAC,MAAM,EAAE;oCAClB,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,YAAY,CAAC,WAAW,EAAE,CAAC;iCAC/F;qCAAM;oCACL,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;iCACjC;;;;;aACF;;;;;;QAEa,mDAAkB;;;;;YAAhC,UAAiC,YAAoB;;;wBACnD,sBAAO,IAAI,CAAC,kBAAkB;iCAC3B,WAAW,EAAE;iCACb,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,EAAE;gCACvC,QAAQ,EAAE,CAAC;gCACX,MAAM,EAAE,CAAC,OAAO,CAAC;6BAClB,CAAC,EAAC;;;aACN;;;;;;QAEO,wDAAuB;;;;;YAA/B,UAAgC,EAAsB;oBAApB,gBAAK;gBACrC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxC,OAAO,IAAI,CAAC;iBACb;;oBAEK,eAAe,GAAW,eAAe;;oBACzC,OAAO,GAAY,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;gBAErD,OAAO,OAAO;sBACV,IAAI;sBACJ;wBACE,OAAO,EAAE,mCAAmC;qBAC7C,CAAC;aACP;;;;;;QAEO,iDAAgB;;;;;YAAxB,UAAyB,EAAsB;oBAApB,gBAAK;gBAC9B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxC,OAAO,IAAI,CAAC;iBACb;;oBAEK,OAAO,GAAY,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE;gBAE/C,OAAO,OAAO;sBACV,IAAI;sBACJ;wBACE,OAAO,EAAE,4BAA4B;qBACtC,CAAC;aACP;;;;;QAEO,sDAAqB;;;;YAA7B;gBAAA,iBAmBC;;oBAlBK,KAAK;gBAET;;;mBAAO,UAAC,OAAwB;oBAC9B,IAAI,KAAK,EAAE;wBACT,YAAY,CAAC,KAAK,CAAC,CAAC;qBACrB;oBAED,OAAO,IAAI,OAAO;;;uBAAC,UAAC,OAAO;wBACzB,KAAK,GAAG,UAAU;;2BAAC;4BACjB,OAAOA,SAAI,CACT,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CACxD,CAAC,SAAS;;+BACT,cAAM,OAAA,OAAO,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,GAAA;;+BAC1D,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,EACpB,CAAC;yBACH,GAAE,GAAG,CAAC,CAAC;qBACT,EAAC,CAAC;iBACJ,EAAC;aACH;;oBA5OFU,YAAS,SAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAE9B,i7FAAoC;wBACpC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE;;qBACtC;;;;;wBATQL,uBAAkB;wBARzBU,iBAAW;wBAMJC,qBAAY;;;;4BAclBU,SAAM;8BAONA,SAAM;;QA6NT,6BAAC;KA7OD;;;;;;;QCRA;SA6B4B;;oBA7B3BhC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdK,eAAU,CAAC,QAAQ,EAAE;4BACrBF,iBAAW;4BACXC,yBAAmB;4BACnB0E,gCAAuB;4BACvBC,8BAAuB;yBAC1B;wBACD,YAAY,EAAE;4BACV,qBAAqB;4BACrB,uBAAuB;4BACvB,sBAAsB;4BACtB,sBAAsB;yBACzB;wBACD,OAAO,EAAE;4BACL,qBAAqB;4BACrB,uBAAuB;4BACvB,sBAAsB;4BACtB,sBAAsB;yBACzB;wBACD,eAAe,EAAE;4BACb,qBAAqB;4BACrB,uBAAuB;4BACvB,sBAAsB;4BACtB,sBAAsB;yBACzB;qBACJ;;QAC0B,mBAAC;KA7B5B;;;;;;;;;;;;;;;;;QCLM,wBAAwB,GAAG,MAAM;AAEvC;QAgCI,+BACW,SAAoB,EACpB,OAAuB;YADvB,cAAS,GAAT,SAAS,CAAW;YACpB,YAAO,GAAP,OAAO,CAAgB;;;;YA1BlC,iBAAY,GAAW,wBAAwB,CAAC;;;;YAIhD,UAAK,GAAW,IAAI,CAAC;;;;YAIrB,aAAQ,GAAG,WAAW,CAAC;;;;YAIvB,UAAK,GAAsB,IAAI7F,eAAY,EAAO,CAAC;;;;YAInD,YAAO,GAAuB,IAAIA,eAAY,EAAQ,CAAC;SAWnD;;;;;QARJ,uCAAO;;;;YADP,UACQ,KAAK;gBACT,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,UAAU,EAAE,CAAC;aACrB;QAOD,sBAAY,+CAAY;;;;gBAAxB;gBACY,IAAA,0CAAmB;gBACrB,IAAA,SAAqD,EAAnD,8BAAY,EAAE,sBAAkB,EAAE,sBAAiB;gBAE3D,OAAO;oBACH,IAAI,EAAE,EAAE,YAAY,cAAA,EAAE,WAAW,aAAA,EAAE,QAAQ,UAAA,EAAE;oBAC7C,KAAK,EAAK,KAAK,OAAI;iBACtB,CAAC;aACL;;;WAAA;;;;;QAEO,0CAAU;;;;YAAlB;gBAAA,iBAiBC;gBAhBS,IAAA,SAA2C,EAAzC,wBAAS,EAAE,8BAAY,EAAE,oBAAgB;;oBAC3C,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,qBAAqB,EAAE,YAAY,CAAC;gBAE1E,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS;;;mBAAC,UAAC,KAAK;oBACnD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B,EAAC,CAAC;gBAEH,cAAc,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS;;;mBAAC,UAAC,IAAU;oBAC1D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC3B,EAAC,CAAC;gBAEH,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS;;;mBAAC,UAAC,IAAU;oBAC9C,IAAI,IAAI,EAAE;wBACN,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACnC;iBACJ,EAAC,CAAC;aACN;QA5DM,kCAAY,GAAW,GAAG,CAAC;;oBAJrCS,YAAS,SAAC;wBACP,QAAQ,EAAE,qBAAqB;qBAClC;;;;;wBATQL,kBAAS;wBAGTd,mBAAc;;;;mCAWlBsB,QAAK,SAAC,mBAAmB;4BAIzBA,QAAK;+BAILA,QAAK;4BAILJ,SAAM;8BAINA,SAAM;8BAGNK,eAAY,SAAC,OAAO,EAAE,CAAE,QAAQ,CAAE;;QAuCvC,4BAAC;KAjED;;;;;;;QC8BI,6BACW,SAAoB,EACpB,UAAsB,EACtB,OAAuB;YAFvB,cAAS,GAAT,SAAS,CAAW;YACpB,eAAU,GAAV,UAAU,CAAY;YACtB,YAAO,GAAP,OAAO,CAAgB;;;;YArBlC,UAAK,GAAsB,IAAIb,eAAY,EAAO,CAAC;;;;YAInD,UAAK,GAAW,IAAI,CAAC;;;;YAIrB,YAAO,GAAuB,IAAIA,eAAY,EAAQ,CAAC;SAcnD;;;;;QAXJ,qCAAO;;;;YADP,UACQ,KAAK;gBACT,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,IAAI,CAAC,MAAM,EAAE;oBACb,IAAI,CAAC,UAAU,EAAE,CAAC;iBACrB;aACJ;QAQD,sBAAY,6CAAY;;;;gBAAxB;gBACY,IAAA,wCAAmB;gBACnB,IAAA,oBAAM;gBAEd,OAAO;oBACH,IAAI,EAAE;wBACF,MAAM,QAAA;wBACN,SAAS,EAAE,IAAI,CAAC,KAAK;qBACxB;oBACD,KAAK,EAAK,KAAK,OAAI;iBACtB,CAAC;aACL;;;WAAA;;;;;QAEO,wCAAU;;;;YAAlB;gBAAA,iBAiBC;gBAhBS,IAAA,SAA2C,EAAzC,wBAAS,EAAE,8BAAY,EAAE,oBAAgB;;oBAC3C,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC,qBAAqB,EAAE,YAAY,CAAC;gBAE1E,cAAc,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS;;;mBAAC,UAAC,KAAK;oBACnD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBAC1B,EAAC,CAAC;gBAEH,cAAc,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS;;;mBAAC,UAAC,IAAU;oBAC1D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC3B,EAAC,CAAC;gBAEH,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS;;;mBAAC,UAAC,IAAU;oBAC9C,IAAI,IAAI,EAAE;wBACN,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBACjC;iBACJ,EAAC,CAAC;aACN;QA9DM,gCAAY,GAAW,GAAG,CAAC;;oBAJrCS,YAAS,SAAC;wBACP,QAAQ,EAAE,mBAAmB;qBAChC;;;;;wBATQL,kBAAS;wBADEM,aAAU;wBAMrBpB,mBAAc;;;;6BASlBsB,QAAK,SAAC,iBAAiB;4BAIvBJ,SAAM;4BAINI,QAAK;8BAILJ,SAAM;8BAGNK,eAAY,SAAC,OAAO,EAAE,CAAE,QAAQ,CAAE;;QA6CvC,0BAAC;KAnED;;;;;;;QCHA;SAcqC;;oBAdpCrC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;yBACjB;wBACD,YAAY,EAAE;4BACV,qBAAqB;4BACrB,mBAAmB;yBACtB;wBACD,OAAO,EAAE;4BACL,qBAAqB;4BACrB,mBAAmB;yBACtB;qBACJ;;QACmC,4BAAC;KAdrC;;;;;;;;;;;;;;;;;QC0DI,sCAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;;;;;YA7ClD,iBAAY,GAAY,KAAK,CAAC;;;;;YAM9B,kBAAa,GAAW,IAAI,CAAC;;;;;YAY7B,aAAQ,GAAG,KAAK,CAAC;;;;;YAMjB,UAAK,GAAG,KAAK,CAAC;YAEN,8BAAyB,GAAY,IAAI,CAAC;YAelD,aAAQ,GAAY,KAAK,CAAC;SAKzB;QAfD,sBACI,kEAAwB;;;gBAK5B;gBACI,OAAO,IAAI,CAAC,yBAAyB,CAAC;aACzC;;;;;;;;;gBARD,UAC6B,KAAc;gBACvC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;gBACvC,IAAI,CAAC,gCAAgC,EAAE,CAAC;aAC3C;;;WAAA;;;;;QAaD,kDAAW;;;;YAAX,UAAY,OAAsB;gBAC9B,IAAI,OAAO,CAAC,aAAa,IAAI,OAAO,CAAC,aAAa,CAAC,YAAY,EAAE;oBAC7D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACxB;aACJ;;;;QAED,uEAAgC;;;YAAhC;gBACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC;aACnD;;;;QAED,iDAAU;;;YAAV;gBACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aAClC;;;;QAED,qDAAc;;;YAAd;gBACI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aAClC;;;;QAED,6DAAsB;;;YAAtB;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAEX,4BAAuB,CAAC,MAAM,CAAC,CAAC;aAChG;;oBApFJZ,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,uuDAAqD;wBAErD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,IAAI,EAAE,EAAE,OAAO,EAAE,2BAA2B,EAAE;;qBACjD;;;;;wBARQF,mBAAc;;;;2BAWlBsB,QAAK;mCAMLA,QAAK;oCAMLA,QAAK;6BAMLA,QAAK;+BAMLA,QAAK;4BAMLA,QAAK;+CAQLA,QAAK;;QAsCV,mCAAC;KArFD;;;;;;;QCKI,gCAAoB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;SAC7C;;;;;QAED,8CAAa;;;;YAAb,UAAc,IAAU;;oBAEd,WAAW,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,EAAE;;oBAC5D,YAAY,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,EAAE;;oBAC5D,MAAM,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE;;oBAC5D,WAAW,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,EAAE;;oBACtE,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,EAAE;gBAE9D,OAAO;oBACH,IAAIkF,0BAAqB,CAAC;wBACtB,KAAK,EAAE,0BAA0B;wBACjC,KAAK,EAAE,IAAI,CAAC,IAAI;wBAChB,GAAG,EAAE,MAAM;wBACX,QAAQ,EAAE,IAAI;qBACjB,CAAC;oBACF,IAAIA,0BAAqB,CAAC;wBACtB,KAAK,EAAE,2BAA2B;wBAClC,KAAK,EAAE,KAAK;wBACZ,GAAG,EAAE,qBAAqB;wBAC1B,QAAQ,EAAE,IAAI;qBACjB,CAAC;oBACF,IAAIA,0BAAqB,CAAC;wBACtB,KAAK,EAAE,6BAA6B;wBACpC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW;wBACrC,GAAG,EAAE,2BAA2B;wBAChC,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBACF,IAAIC,0BAAqB,CAAC;wBACtB,KAAK,EAAE,kCAAkC;wBACzC,KAAK,EAAE,IAAI,CAAC,SAAS;wBACrB,GAAG,EAAE,WAAW;wBAChB,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBACF,IAAID,0BAAqB,CAAC;wBACtB,KAAK,EAAE,0BAA0B;wBACjC,KAAK,EAAE,WAAW;wBAClB,GAAG,EAAE,qBAAqB;wBAC1B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,CAAC;wBACpC,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBACF,IAAIA,0BAAqB,CAAC;wBACtB,KAAK,EAAE,8BAA8B;wBACrC,KAAK,EAAE,IAAI,CAAC,cAAc,CAAC,WAAW;wBACtC,GAAG,EAAE,4BAA4B;wBACjC,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBACF,IAAIC,0BAAqB,CAAC;wBACtB,KAAK,EAAE,mCAAmC;wBAC1C,KAAK,EAAE,IAAI,CAAC,UAAU;wBACtB,GAAG,EAAE,YAAY;wBACjB,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBACF,IAAID,0BAAqB,CAAC;wBACtB,KAAK,EAAE,8BAA8B;wBACrC,KAAK,EAAE,YAAY;wBACnB,GAAG,EAAE,sBAAsB;wBAC3B,QAAQ,EAAE,KAAK;qBAClB,CAAC;oBACF,IAAIA,0BAAqB,CAAC;wBACtB,KAAK,EAAE,4BAA4B;wBACnC,KAAK,EAAE,MAAM;wBACb,GAAG,EAAE,sBAAsB;wBAC3B,QAAQ,EAAE,IAAI;qBACjB,CAAC;oBACF,IAAIA,0BAAqB,CAAC;wBACtB,KAAK,EAAE,iCAAiC;wBACxC,KAAK,EAAE,WAAW;wBAClB,GAAG,EAAE,2BAA2B;wBAChC,SAAS,EAAE,IAAI;wBACf,QAAQ,EAAE,IAAI;qBACjB,CAAC;iBACL,CAAC;aACL;;oBAhFJ5G,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAJsD8G,iBAAY;;;;qCAnBnE;KAqBA;;;;;;;QCYM,MAAM,GAAG,QAAQ;;QACjB,QAAQ,GAAG,UAAU;;QACrB,MAAM,GAAG,QAAQ;;QACjB,UAAU,GAAG,YAAY;;QACzB,KAAK,GAAG,OAAO;;QACf,MAAM,GAAG,QAAQ;;QACjB,OAAO,GAAG,SAAS;;QACnB,QAAQ,GAAG,UAAU;;QACrB,SAAS,GAAG,WAAW;AAE7B;QASI,wCAAoB,UAAsB,EACtB,cAA8B,EAC9B,SAA2B;YAF3B,eAAU,GAAV,UAAU,CAAY;YACtB,mBAAc,GAAd,cAAc,CAAgB;YAC9B,cAAS,GAAT,SAAS,CAAkB;YAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAS,6CAA6C,CAAC,CAAC;SACnG;;;;;;QAEM,kEAAyB;;;;;YAAhC,UAAiC,cAAwC,EAAE,cAAc;gBAAzF,iBAMC;gBALG,OAAO,cAAc,CAAC,GAAG;;;mBAAC,UAAC,aAAa;;wBAC9B,uBAAuB,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC;oBACrE,uBAAuB,CAAC,UAAU,GAAG,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;oBACnG,OAAO,uBAAuB,CAAC;iBAClC,EAAC,CAAC;aACN;;;;;;;QAEO,uDAAc;;;;;;YAAtB,UAAuB,UAAsB,EAAE,cAAmB;gBAAlE,iBAIC;gBAHG,OAAO,UAAU,CAAC,GAAG;;;mBAAC,UAAC,QAAQ;oBAC3B,OAAO,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;iBACnD,EAAC,CAAC;aACN;;;;;;;QAEO,kDAAS;;;;;;YAAjB,UAAkB,QAAkB,EAAE,cAAmB;;oBACjD,aAAa;gBACjB,IAAI,cAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;oBACjD,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACjD;gBAED,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;oBAEvC,MAAM,GAAG,aAAa;;oBAEtB,kBAAkB,GAA2B;oBAC/C,KAAK,EAAE,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI;oBACtC,KAAK,EAAE,aAAa;oBACpB,GAAG,EAAE,KAAG,MAAM,GAAG,QAAQ,CAAC,IAAM;oBAChC,OAAO,EAAE,QAAQ,CAAC,YAAY;oBAC9B,QAAQ,EAAE,IAAI;iBACjB;;oBACG,oBAAoB;gBAExB,QAAQ,QAAQ,CAAC,QAAQ;oBAErB,KAAK,QAAQ;wBACT,oBAAoB,GAAG,IAAIF,0BAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE;4BAC/E,SAAS,EAAE,IAAI;yBAClB,CAAC,CAAC,CAAC;wBACJ,MAAM;oBAEV,KAAK,KAAK,CAAC;oBACX,KAAK,MAAM;wBACP,oBAAoB,GAAG,IAAIG,yBAAoB,CAAC,kBAAkB,CAAC,CAAC;wBACpE,MAAM;oBAEV,KAAK,OAAO,CAAC;oBACb,KAAK,QAAQ;wBACT,oBAAoB,GAAG,IAAIC,2BAAsB,CAAC,kBAAkB,CAAC,CAAC;wBACtE,MAAM;oBAEV,KAAK,MAAM;wBACP,oBAAoB,GAAG,IAAIH,0BAAqB,CAAC,kBAAkB,CAAC,CAAC;wBACrE,MAAM;oBAEV,KAAK,UAAU;wBACX,oBAAoB,GAAG,IAAII,8BAAyB,CAAC,kBAAkB,CAAC,CAAC;wBACzE,MAAM;oBAEV,KAAK,SAAS;wBACV,oBAAoB,GAAG,IAAIC,0BAAqB,CAAC,kBAAkB,CAAC,CAAC;wBACrE,MAAM;oBAEV,KAAK,MAAM,CAAC;oBACZ;wBACI,oBAAoB,GAAG,IAAIN,0BAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE;4BAC/E,WAAW,EAAE,QAAQ,CAAC,WAAW;4BACjC,SAAS,EAAE,QAAQ,CAAC,WAAW;4BAC/B,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,EAAC,CAAC;yBACvE,CAAC,CAAC,CAAC;iBACX;gBAED,OAAO,oBAAoB,CAAC;aAC/B;;;;;;QAEO,6DAAoB;;;;;YAA5B,UAA6B,eAAe;gBACxC,IAAI,8BAA8B,CAAC,oBAAoB,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;oBACrF,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,+BAA6B,eAAiB,CAAC,CAAC;iBACzE;aACJ;QAzFe,mDAAoB,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;;oBAL9H5G,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAlBGE,eAAU;wBACViH,mBAAc;wBACdtE,qBAAgB;;;;6CA7BpB;KA2CA;;;;;;;;;;;;;;;;;;;;;;;QCxBM,UAAU,GAAG;QACf,UAAU,EAAE,EAAE;KACjB;;;;;IAED,SAAS,oBAAoB,CAAC,MAAW;QACrC,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG;;;WAAC,UAAC,GAAG,IAAK,OAAA,MAAM,CAAC,GAAG,CAAC,GAAA,EAAC,CAAC;IACzD,CAAC;;;;;;AAED,aAAgB,QAAQ,CAAC,cAAsC,EAAE,SAAiB;QAC9E,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC;IACrC,CAAC;;;;;;;AAED,aAAgB,WAAW,CAAC,cAAsC,EAAE,SAAiB,EAAE,YAAoB;;YACjG,eAAe,GAAG,QAAQ,CAAC,cAAc,EAAE,SAAS,CAAC,IAAI,UAAU;;YACrE,mBAAmB;QAEvB,IAAI,YAAY,KAAK,GAAG,EAAE;YACtB,mBAAmB,GAAG,oBAAoB,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;SAC1E;aAAM;YACH,mBAAmB,GAAG,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAClE;QAED,OAAO,mBAAmB,CAAC;IAC/B,CAAC;;;;;;;QCpBG,qCAAoB,MAAW;YAAX,WAAM,GAAN,MAAM,CAAK;SAAK;;;;;QAE7B,oDAAc;;;;YAArB,UAAsB,SAAiB;gBACnC,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC5B,OAAO,IAAI,CAAC;iBACf;;oBACK,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC3C,OAAO,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;aAC/C;;;;;QAEM,wDAAkB;;;;YAAzB,UAA0B,cAAsC;gBAAhE,iBAUC;;oBATS,OAAO,GAAG,IAAI,CAAC,MAAM;;oBACvB,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;gBAEtC,OAAO,WAAW;qBACb,MAAM;;;;eAAC,UAAC,gBAAgB,EAAE,UAAU;;wBAC3B,QAAQ,GAAG,KAAI,CAAC,yBAAyB,CAAC,cAAc,EAAE,UAAU,CAAC;oBAC3E,OAAO,gBAAgB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAC5C,GAAE,EAAE,CAAC;qBACL,MAAM;;;eAAC,UAAC,sBAAsB,IAAK,OAAA,sBAAsB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAA,EAAC,CAAC;aACzF;;;;;QAEM,qDAAe;;;;YAAtB,UAAuB,cAAsC;;oBACnD,MAAM,GAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;qBACtC,GAAG;;;eAAC,UAAC,SAAS;;wBACL,aAAa,GAAG,cAAc,CAAC,SAAS,CAAC;;wBAC3C,UAAU,GAAG,aAAa,CAAC,UAAU;oBAEzC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE;wBACpC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;;;2BAAC,UAAC,YAAY,IAAK,OAAA,UAAU,CAAC,YAAY,CAAC,GAAA,EAAC;qBACtF,CAAC,CAAC;iBACN,EAAC;gBAEN,OAAO,MAAM,CAAC;aACjB;;;;;QAEM,0DAAoB;;;;YAA3B,UAA4B,cAAwC;gBAApE,iBAOC;gBANG,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;oBACrB,OAAO,cAAc,CAAC,MAAM;;;uBAAC,UAAC,MAAM;wBAChC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;qBACrD,EAAC,CAAC;iBACN;gBACD,OAAO,cAAc,CAAC;aACzB;;;;QAEM,yDAAmB;;;YAA1B;gBACI,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;aACjC;;;;;;;QAEO,+DAAyB;;;;;;YAAjC,UAAkC,cAAc,EAAE,UAAU;;oBAClD,KAAK,GAAG,QAAQ,CAAC,cAAc,EAAE,UAAU,CAAC;;oBAC9C,QAAQ,GAAG,EAAE;gBAEjB,IAAI,KAAK,EAAE;;wBACD,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;;wBAC5C,UAAU,SAAA;oBAEd,IAAI,gBAAgB,KAAK,GAAG,EAAE;wBAC1B,UAAU,GAAG,WAAW,CAAC,cAAc,EAAE,UAAU,EAAE,gBAAgB,CAAC,CAAC;qBAC1E;yBAAM;wBACH,UAAU,GAAG,oBAAY,gBAAgB;6BACpC,GAAG;;;uBAAC,UAAC,YAAY,IAAK,OAAA,WAAW,CAAC,cAAc,EAAE,UAAU,EAAE,YAAY,CAAC,GAAA,EAAC;6BAC5E,MAAM;;;uBAAC,UAAC,KAAK,IAAK,OAAA,KAAK,KAAK,SAAS,GAAA,EAAC,CAAC;qBAC/C;oBAED,QAAQ,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,UAAU,YAAA,EAAE,CAAC,CAAC;iBACnD;gBAED,OAAO,QAAQ,CAAC;aACnB;QACL,kCAAC;IAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACvED;QAEI,kCAAY,MAAW;SAAI;;;;;QAEpB,iDAAc;;;;YAArB,UAAsB,SAAiB;gBACnC,OAAO,IAAI,CAAC;aACf;;;;;QAEM,qDAAkB;;;;YAAzB,UAA0B,cAAsC;gBAC5D,OAAO,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;qBAC7B,GAAG;;;eAAC,UAAC,SAAS;;wBACL,aAAa,GAAG,cAAc,CAAC,SAAS,CAAC;;wBAC3C,UAAU,GAAG,aAAa,CAAC,UAAU;oBAEzC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE;wBACpC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;;;2BAAC,UAAC,YAAY,IAAK,OAAA,UAAU,CAAC,YAAY,CAAC,GAAA,EAAC;qBACtF,CAAC,CAAC;iBACN,EAAC,CAAC;aACV;;;;;QAEM,uDAAoB;;;;YAA3B,UAA4B,cAAwC;gBAChE,OAAO,cAAc,CAAC;aACzB;;;;;QAEM,kDAAe;;;;YAAtB,UAAuB,cAAsC;gBACzD,OAAM,EAAE,CAAC;aACZ;;;;QAEM,sDAAmB;;;YAA1B;gBACI,OAAO,IAAI,CAAC;aACf;QACL,+BAAC;IAAD,CAAC;;;;;;;QCzBG,qCAAoB,MAAW;YAAX,WAAM,GAAN,MAAM,CAAK;SAAK;;;;;QAE7B,oDAAc;;;;YAArB,UAAsB,SAAiB;gBACnC,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;oBAC5B,OAAO,IAAI,CAAC;iBACf;gBACD,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;aACvD;;;;;QAEM,wDAAkB;;;;YAAzB,UAA0B,cAAsC;gBAAhE,iBAiBC;;oBAhBS,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;;;mBAAC,UAAC,UAAU,IAAK,OAAA,UAAU,CAAC,KAAK,GAAA,EAAC;;oBAEnE,sBAAsB,GAAG,YAAY,CAAC,GAAG;;;mBAAC,UAAC,WAAW;;wBAClD,cAAc,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC;;wBACvD,UAAU,GAAG,cAAc,CAAC,MAAM;;;;uBAAC,UAAC,KAAK,EAAE,YAAY;;4BAC7C,QAAQ,GAAG,WAAW,CAAC,cAAc,EAAE,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,YAAY,CAAC,IAAI,EAAE;wBACrG,OAAO,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;qBACjC,GAAE,EAAE,CAAC;oBAEV,OAAO;wBACH,KAAK,EAAE,WAAW,CAAC,KAAK;wBACxB,UAAU,YAAA;qBACb,CAAC;iBACL,EAAC;gBAEF,OAAO,sBAAsB,CAAC;aACjC;;;;;QAEM,qDAAe;;;;YAAtB,UAAuB,cAAsC;gBACzD,OAAO,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;qBAC7B,GAAG;;;eAAC,UAAC,SAAS;;wBACL,aAAa,GAAG,cAAc,CAAC,SAAS,CAAC;;wBAC3C,UAAU,GAAG,aAAa,CAAC,UAAU;oBAEzC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE;wBACpC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG;;;2BAAC,UAAC,YAAY,IAAK,OAAA,UAAU,CAAC,YAAY,CAAC,GAAA,EAAC;qBACtF,CAAC,CAAC;iBACN,EAAC,CAAC;aACV;;;;;QAEM,0DAAoB;;;;YAA3B,UAA4B,cAAwC;;oBAC5D,cAAc,GAAG,IAAI,CAAC,MAAM;qBAC3B,GAAG;;;eAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,OAAO,GAAA,EAAC;qBAC/B,IAAI;;;eAAC,UAAC,OAAO,IAAK,OAAA,OAAO,KAAK,SAAS,GAAA,EAAC;gBAE7C,IAAI,cAAc,KAAK,SAAS,EAAE;oBAC9B,cAAc,GAAG,EAAE,CAAC;iBACvB;qBAAM,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;oBAC3C,cAAc,GAAG,CAAC,cAAc,CAAC,CAAC;iBACrC;gBAED,OAAO,cAAc,CAAC,MAAM;;;mBAAC,UAAC,KAAK;oBAC/B,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;iBAC/C,EAAC,CAAC;aACN;;;;QAEM,yDAAmB;;;YAA1B;;oBACU,kBAAkB,GAAG,IAAI,CAAC,MAAM;qBACjC,GAAG;;;eAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,UAAU,GAAA,EAAC;qBAClC,IAAI;;;eAAC,UAAC,UAAU,IAAK,OAAA,UAAU,KAAK,SAAS,GAAA,EAAC;gBAEnD,OAAO,kBAAkB,KAAK,SAAS,GAAG,kBAAkB,GAAG,KAAK,CAAC;aACxE;;;;;;QAEO,kDAAY;;;;;YAApB,UAAqB,KAAK;gBACtB,OAAO,KAAK,CAAC,MAAM;;;;mBAAC,UAAC,WAAW,EAAE,IAAI;;wBAC5B,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;;wBACjF,mBAAmB,GAAG,UAAU,CAAC,GAAG;;;uBAAC,UAAC,YAAY;wBACpD,OAAO;4BACH,SAAS,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI;4BACnC,YAAY,cAAA;yBACf,CAAC;qBACL,EAAC;oBAEF,OAAO,WAAW,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;iBAClD,GAAE,EAAE,CAAC,CAAC;aACV;;;;;;QAEO,uDAAiB;;;;;YAAzB,UAA0B,SAAiB;gBACvC,OAAO,IAAI,CAAC,MAAM;qBACb,GAAG;;;eAAC,UAAC,WAAW,IAAK,OAAA,WAAW,CAAC,KAAK,GAAA,EAAC;qBACvC,MAAM;;;;eAAC,UAAC,WAAW,EAAE,KAAK,IAAK,OAAA,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,GAAA,GAAE,EAAE,CAAC;qBAC7D,MAAM;;;eAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,GAAA,EAAC,CAAC;aAC/E;QACL,kCAAC;IAAD,CAAC;;;;;;;QCzEG,sCAAoB,gBAAkC,EAAU,UAAsB;YAAlE,qBAAgB,GAAhB,gBAAgB,CAAkB;YAAU,eAAU,GAAV,UAAU,CAAY;SAAI;;;;;QAEnF,0CAAG;;;;YAAV,UAAW,UAA8B;gBAA9B,2BAAA;oBAAA,sBAA8B;;;oBACjC,YAAY;gBAChB,IAAI;oBACA,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;iBACvF;gBAAC,WAAM;oBACJ,IAAI,UAAU,KAAK,4BAA4B,CAAC,mBAAmB,EAAE;wBACjE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,qCAAmC,UAAY,CAAC,CAAC;qBAC1E;oBACD,YAAY,GAAG,4BAA4B,CAAC,kBAAkB,CAAC;iBAClE;gBAED,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;aAC1C;;;;;;QAEO,mDAAY;;;;;YAApB,UAAqB,YAA0B;;oBACvC,MAA6B;gBAEjC,IAAI,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,EAAE;oBAC3C,MAAM,GAAG,IAAI,2BAA2B,oBAAwB,YAAY,GAAC,CAAC;iBACjF;qBAAM,IAAI,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,EAAE;oBAClD,MAAM,GAAG,IAAI,2BAA2B,oBAAwB,YAAY,GAAC,CAAC;iBACjF;qBAAM;oBACH,MAAM,GAAG,IAAI,wBAAwB,oBAAqB,YAAY,GAAC,CAAC;iBAC3E;gBAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACtB,OAAO,MAAM,CAAC;aACjB;;;;;;QAEO,6DAAsB;;;;;YAA9B,UAA+B,YAA0B;gBACrD,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;aACtC;;;;;;QAEO,6DAAsB;;;;;YAA9B,UAA+B,YAA0B;gBACrD,OAAO,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;aACtC;;;;;;QAEO,+CAAQ;;;;;YAAhB,UAAiB,CAAC;gBACd,OAAO,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,CAAC;aAC7C;QA5Ce,+CAAkB,GAAG,GAAG,CAAC;QACzB,gDAAmB,GAAG,SAAS,CAAC;;oBANnD7C,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAdQ6C,qBAAgB;wBAAE3C,eAAU;;;;2CAlBrC;KA8BA;;;;;;;QCFI,oCAAoB,kBAAsC;YAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;SAAI;;;;;QAE9D,yCAAI;;;;YAAJ,UAAK,UAAoB;gBAAzB,iBAQC;;oBAPS,iBAAiB,GAAG,UAAU;qBAC/B,GAAG;;;eAAC,UAAC,SAAS,IAAK,OAAA,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAA,EAAC;qBAC/C,GAAG;;;eAAC,UAAC,SAAS;oBAAK,OAAAkH,UAAK;;uBAAE,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAA,EAAC;iBAAA,EAAE;gBAE9F,OAAOjH,aAAQ,CAAC,iBAAiB,CAAC,CAAC,IAAI,CACnCP,aAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAC5B,CAAC;aACL;;;;;;QAEO,oDAAe;;;;;YAAvB,UAAwB,mBAAoC;gBACxD,OAAO,mBAAmB,CAAC,MAAM;;;;mBAAC,UAAC,cAAc,EAAE,aAAa;;oBAC5D,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc;wBACnC,GAAC,aAAa,CAAC,IAAI,IAAG,aAAa;4BACrC,CAAC;iBACN,GAAE,EAAE,CAAC,CAAC;aACV;;oBAvBJI,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAPQC,uBAAkB;;;;yCAlB3B;KAuBA;;;;;;;QCUI,gCAAoB,sBAA8C,EAC9C,4BAA0D,EAC1D,8BAA8D,EAC9D,0BAAsD;YAHtD,2BAAsB,GAAtB,sBAAsB,CAAwB;YAC9C,iCAA4B,GAA5B,4BAA4B,CAA8B;YAC1D,mCAA8B,GAA9B,8BAA8B,CAAgC;YAC9D,+BAA0B,GAA1B,0BAA0B,CAA4B;SACzE;;;;;QAED,mDAAkB;;;;YAAlB,UAAmB,IAAU;gBACzB,OAAOJ,OAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;aAC9D;;;;;;QAED,qDAAoB;;;;;YAApB,UAAqB,IAAU,EAAE,UAA8B;gBAA/D,iBA0BC;gBA1BgC,2BAAA;oBAAA,sBAA8B;;;oBACvD,iBAAiB,GAAGA,OAAE,CAAC,EAAE,CAAC;gBAE9B,IAAI,IAAI,CAAC,WAAW,EAAE;;wBACZ,uBAAqB,GAAG,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,UAAU,CAAC;;wBAC3E,UAAU,GAAG,IAAI,CAAC,WAAW;yBACxB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;yBACrB,MAAM;;;mBAAC,UAAC,SAAS,IAAK,OAAA,uBAAqB,CAAC,cAAc,CAAC,SAAS,CAAC,GAAA,EAAC;oBAE/E,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;wBACvB,iBAAiB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CACrEkB,mBAAS;;;2BAAC,UAAC,MAAM;4BACb,OAAAsG,QAAG;;+BACC,cAAM,OAAA,uBAAqB,CAAC,mBAAmB,EAAE,GAAA,GACjDxH,OAAE,CAAC,uBAAqB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,uBAAqB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,EAC1GA,OAAE,CAAC,uBAAqB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CACvD;yBAAA,EAAC,EACND,aAAG;;;2BAAC,UAAC,MAAM,IAAK,OAAA,uBAAqB,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAA,EAAC,EACnEA,aAAG;;;2BAAC,UAAC,MAAM,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAA,EAAC,EAC/CA,aAAG;;;2BAAC,UAAC,MAAM,IAAK,OAAA,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,GAAA,EAAC,EACpDA,aAAG;;;2BAAC,UAAC,MAAM,IAAK,OAAA,KAAI,CAAC,8BAA8B,CAAC,yBAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,GAAA,EAAC,CAC1G,CAAC;qBACL;iBACJ;gBAED,OAAO,iBAAiB,CAAC;aAC5B;;;;;QAED,uDAAsB;;;;YAAtB,UAAuB,cAAwC;gBAC3D,cAAc,CAAC,GAAG;;;mBAAC,UAAC,aAAa;oBAC7B,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,IAAI,aAAa,CAAC,IAAI,CAAC;iBACnE,EAAC,CAAC;gBACH,OAAO,cAAc,CAAC;aACzB;;;;;QAED,kDAAiB;;;;YAAjB,UAAkB,cAAwC;gBACtD,OAAO,cAAc,CAAC,MAAM;;;mBAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,UAAU,CAAC,MAAM,GAAA,EAAC,CAAC;aACpE;;oBApDJI,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAXQ,sBAAsB;wBAKtB,4BAA4B;wBAH5B,8BAA8B;wBAI9B,0BAA0B;;;;qCAzBnC;KA4BA;;;;;;;QC2CI,kCACY,sBAA8C,EAC9C,qBAA4C,EAC5C,eAAgC,EAChC,UAAsB,EACtB,kBAAsC;YAJtC,2BAAsB,GAAtB,sBAAsB,CAAwB;YAC9C,0BAAqB,GAArB,qBAAqB,CAAuB;YAC5C,oBAAe,GAAf,eAAe,CAAiB;YAChC,eAAU,GAAV,UAAU,CAAY;YACtB,uBAAkB,GAAlB,kBAAkB,CAAoB;;;;YArClD,aAAQ,GAAY,KAAK,CAAC;;;;YAI1B,iBAAY,GAAY,KAAK,CAAC;;;;;YAM9B,aAAQ,GAAY,KAAK,CAAC;;;;YAI1B,UAAK,GAAG,KAAK,CAAC;;;;YAQd,6BAAwB,GAAY,IAAI,CAAC;;;;YAIzC,kBAAa,GAAW,IAAI,CAAC;SAYzB;;;;QAEJ,2CAAQ;;;YAAR;gBAAA,iBAcC;gBAbG,IAAI,CAAC,oBAAoB,GAAI,IAAI,CAAC,qBAAqB,CAAC,YAAY;qBAC/D,IAAI,CACDe,mBAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CACtC;qBACA,SAAS;;;eACN,UAAC,WAAW;oBACR,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;oBACtC,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;iBACvD;;;mBACD,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,GAAA,EAC1C,CAAC;gBAEN,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC;;;;;QAED,8CAAW;;;;YAAX,UAAY,OAAsB;gBAC9B,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE;oBAC3C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAClD;aACJ;;;;;;QAEO,iDAAc;;;;;YAAtB,UAAuB,IAAU;gBAC7B,IAAI,IAAI,EAAE;oBACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;oBAC7E,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBACjG;aACJ;;;;;;QAEO,2CAAQ;;;;;YAAhB,UAAiB,EAAqB;oBAAnB,qBAAiB;gBAChC,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;aAClE;;;;;QAED,4CAAS;;;;YAAT,UAAU,KAAoB;;oBACpB,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM;;;mBAAC,UAAC,QAAQ;oBAChD,OAAO,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC;iBAClC,EAAC;gBAEF,OAAO,UAAU,CAAC,MAAM,CAAC;aAC5B;;;;QAED,8CAAW;;;YAAX;gBACI,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;aAC3C;;;;;QAEM,mDAAgB;;;;YAAvB,UAAwB,KAAoB;gBACxC,OAAO,KAAK,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC;aAC7C;;;;QAEM,sDAAmB;;;YAA1B;gBACI,OAAO,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,YAAY,CAAC;aAChE;;oBAzGJV,YAAS,SAAC;wBACP,QAAQ,EAAE,sBAAsB;wBAChC,oqEAAgD;wBAEhD,IAAI,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE;wBACzC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAVQ,sBAAsB;wBADqBgH,0BAAqB;wBAAlDxD,oBAAe;wBAAE5D,eAAU;wBAAyBD,uBAAkB;;;;2BAcxFyB,QAAK;+BAILA,QAAK;mCAILA,QAAK;+BAMLA,QAAK;4BAILA,QAAK;6BAILA,QAAK;+CAILA,QAAK;oCAILA,QAAK;;QAoEV,+BAAC;KA3GD;;;;;;;QCAA;SAgBqC;;oBAhBpCpC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdyC,2BAAgB;4BAChBpC,eAAU,CAAC,QAAQ,EAAE;yBACxB;wBACD,OAAO,EAAE;4BACL,wBAAwB;4BACxB,4BAA4B;yBAC/B;wBACD,YAAY,EAAE;4BACV,wBAAwB;4BACxB,4BAA4B;yBAC/B;qBACJ;;QACmC,4BAAC;KAhBrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;QAQI,gCAAY,GAAS;YAHrB,gBAAW,GAAY,KAAK,CAAC;YAIzB,IAAI,GAAG,EAAE;gBACL,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;gBACnC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACrB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC;gBACrC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,KAAK,IAAI,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,GAAG,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC;gBACvG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC;aAC/C;SACJ;QACL,6BAAC;IAAD,CAAC;;;;;;;QCRG,+BAAoB,UAA8B,EAC9B,gBAA+B,EAC/B,WAA4B,EAC5B,WAA+B;YAH/B,eAAU,GAAV,UAAU,CAAoB;YAC9B,qBAAgB,GAAhB,gBAAgB,CAAe;YAC/B,gBAAW,GAAX,WAAW,CAAiB;YAC5B,gBAAW,GAAX,WAAW,CAAoB;SAClD;;;;;;;;;;;QAOD,4CAAY;;;;;YAAZ,UAAa,IAAU;gBAAvB,iBAaC;;oBAZS,qBAAqB,GAAc,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;gBAC5F,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,qBAAqB,CAAC;qBAChE,IAAI,CACDlB,mBAAS;;;eAAC,UAAC,YAAiB;oBACxB,IAAK,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAG;;4BAClC,QAAQ,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI;wBACxD,OAAO,KAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;qBACnD;yBAAM;wBACH,OAAOlB,OAAE,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;qBACxC;iBACJ,EAAC,CACL,CAAC;aACT;;;;;;;;;;;;;QAQD,oDAAoB;;;;;;YAApB,UAAqB,IAAU,EAAE,qBAAwC;;oBAC/D,cAAc,GAAG,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,EAAE,EAAC,EAAE;;oBACnD,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG;;;mBAAC,UAAC,UAAU,IAAK,OAAA,UAAU,CAAC,WAAW,GAAA,EAAC,CAAC,OAAO,CAAC,qBAAqB,CAAC,WAAW,CAAC;gBAChI,cAAc,CAAC,WAAW,CAAC,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBAClH,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBACd,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,qBAAqB,CAAC;iBACxE;qBAAM;oBACH,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;iBACrE;gBACD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;aAC/D;;;;;;;;;;;;;QAQD,qDAAqB;;;;;;YAArB,UAAsB,MAAc,EAAE,cAA2B;gBAAjE,iBASC;gBARE,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,CACxCkB,mBAAS;;;mBAAC,UAAC,IAAI;oBACV,OAAO,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAC/BA,mBAAS;;;uBAAC,UAAC,SAAS,IAAK,OAAAlB,OAAE,CAAC,EAAC,IAAI,MAAA,EAAE,SAAS,WAAA,EAAC,CAAC,GAAA,EAAE,CACnD,CAAC;iBACL,EAAC,EACFkB,mBAAS;;;mBAAC,UAAC,EAAiB;wBAAhB,cAAI,EAAE,wBAAS;oBAAM,OAAA,KAAI,CAAC,2BAA2B,CAAC,IAAI,EAAE,cAAc,EAAE,SAAS,CAAC;iBAAA,EAAC,CACtG,CAAC;aACL;;;;;;;;;;;;;;;QASD,2DAA2B;;;;;;;YAA3B,UAA4B,IAAU,EAAE,KAAkB,EAAE,QAAkB;;oBACpE,cAAc,GAAG,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,EAAE,EAAC,EAAE;;oBACnD,cAAc,GAAG,IAAI,CAAC,gCAAgC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;oBAC1E,qBAAqB,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,cAAc,CAAC;gBACxG,IAAI,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;;wBAC5B,IAAI,GAAG,qBAAqB,CAAC,GAAG;;;uBAAC,UAAC,UAAU,IAAK,OAAA,eAAe,GAAG,UAAU,CAAC,WAAW,GAAG,aAAa,GAAG,UAAU,CAAC,IAAI,GAAA,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;wBACvI,0BAA0B,GAAW,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,+CAA+C,EAAG,EAAC,IAAI,MAAA,EAAC,CAAC;oBAC7H,OAAOhB,eAAU,CAAC,0BAA0B,CAAC,CAAC;iBACjD;gBACD,cAAc,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,GAAG,cAAc,CAAC;gBAC1I,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;aAC/D;;;;;;;QAEO,wDAAwB;;;;;;YAAhC,UAAiC,cAAmC,EAAE,mBAAwC;gBAA9G,iBAWC;;oBAVS,oBAAoB,GAAwB,EAAE;gBACpD,IAAI,cAAc,EAAE;oBAChB,mBAAmB,CAAC,OAAO;;;uBAAC,UAAC,UAA6B;;4BAChD,SAAS,GAAG,cAAc,CAAC,IAAI;;;2BAAC,UAAC,eAAe,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,UAAU,CAAC,GAAA,EAAC;wBAC/G,IAAI,SAAS,EAAE;4BACX,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;yBACxC;qBACJ,EAAC,CAAC;iBACN;gBACD,OAAO,oBAAoB,CAAC;aAC/B;;;;;;;QAEO,iDAAiB;;;;;;YAAzB,UAA0B,aAAgC,EAAE,aAAgC;gBACxF,OAAO,aAAa,CAAC,YAAY,KAAK,aAAa,CAAC,YAAY;oBACzD,aAAa,CAAC,WAAW,KAAK,aAAa,CAAC,WAAW;oBACvD,aAAa,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,CAAC;aACpD;;;;;;;QAEO,gEAAgC;;;;;;YAAxC,UAAyC,KAAkB,EAAE,QAAa;gBACtE,OAAO,KAAK,CAAC,GAAG;;;mBAAC,UAAC,IAAI;;wBACZ,oBAAoB,sBAA0C;wBAChE,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC;4BACpD,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC;4BACzC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC;wBACxC,MAAM,EAAE,QAAQ;wBAChB,cAAc,EAAE,SAAS;qBAC5B,EAAA;oBACD,OAAO,oBAAoB,CAAC;iBAC/B,EAAC,CAAC;aACN;;;;;;;;;;;;;QAQD,gDAAgB;;;;;;YAAhB,UAAiB,IAAU,EAAE,kBAAqC;;oBACxD,cAAc,GAAG,EAAE,WAAW,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE;;oBACpD,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG;;;mBAAC,UAAC,UAAU,IAAK,OAAA,UAAU,CAAC,WAAW,GAAA,EAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC;gBAC7H,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBACd,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC7C,cAAc,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;oBACpE,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;iBAC/D;aACJ;;;;;;QAEO,yDAAyB;;;;;YAAjC,UAAkC,QAAgB;gBAAlD,iBAYC;;oBAXS,SAAS,GAAG,aAAa,GAAG,QAAQ;gBAC1C,OAAO,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC;qBAC3C,IAAI,CACDH,aAAG;;;eAAC,UAAC,iBAAoC;;wBAC/B,aAAa,GAAa,EAAE;oBAClC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO;;;uBAAC,UAAC,MAAwB;wBAC5D,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;qBAC5F,EAAC,CAAC;oBACH,OAAO,aAAa,CAAC;iBACxB,EAAC,CACL,CAAC;aACT;;;;;;;;;;;;;QAQD,yDAAyB;;;;;;YAAzB,UAA0B,SAAiB,EAAE,IAAU;gBACnD,OAAOD,SAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;aAC3E;;;;;;;QAEO,iDAAiB;;;;;;YAAzB,UAA0B,WAAW,EAAE,QAAQ;gBAC3C,OAAO,WAAW,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;aAClD;;;;;;QAEO,0DAA0B;;;;;YAAlC,UAAmC,QAAuB;;oBAChD,SAAS,GAAG,QAAQ,CAAC,GAAG;;;mBAAC,UAAC,IAAiB,IAAK,OAAA,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,GAAA,EAAC;;oBAC5E,gBAAgB,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC/C,OAAO;oBACH,OAAO,EAAE;wBACL,OAAO,EAAE,gBAAgB;qBAC5B;oBACD,QAAQ,EAAE;wBACN,UAAU,EAAE,GAAG;wBACf,WAAW,EAAE,CAAC;qBACjB;oBACD,SAAS,EAAE,CAAC,aAAa,EAAE,YAAY,CAAC;oBACxC,eAAe,EAAE;wBACb;4BACI,OAAO,EACH,gBAAgB;yBACvB;qBACJ;iBACJ,CAAC;aACL;;oBArLJK,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBANQC,uBAAkB;wBAAEuE,kBAAa;wBAAEV,oBAAe;wBAAE1C,uBAAkB;;;;oCAnB/E;KAuBA;;;;;;;QCwBI,iCAAoB,WAA4B,EAC5B,qBAA4C;YAD5C,gBAAW,GAAX,WAAW,CAAiB;YAC5B,0BAAqB,GAArB,qBAAqB,CAAuB;;;;YAfhE,WAAM,GAAW,EAAE,CAAC;;;;YAIpB,WAAM,GAAoC,IAAIN,eAAY,EAAE,CAAC;;;;YAI7D,UAAK,GAAsB,IAAIA,eAAY,EAAE,CAAC;SAS7C;;;;QAED,0CAAQ;;;YAAR;gBACI,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC/B;;;;QAED,wCAAM;;;YAAN;gBACI,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC/B;;;;;QAEO,sDAAoB;;;;YAA5B;gBAAA,iBAQC;gBAPG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS;;;mBAAC,UAAC,IAAU;oBACvD,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;oBACnD,KAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS;;;uBAAC,UAAC,YAAsB;wBAC3E,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC;qBACrC,EAAC,CAAC;iBACN,EAAC,CAAC;aACN;;;;;;QAEO,mDAAiB;;;;;YAAzB,UAA0B,IAAU;;oBAC1B,cAAc,GAA6B,EAAE;gBACnD,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;oBAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG;;;uBAAC,UAAC,iBAAoC;;4BAC3D,UAAU,GAAG,IAAI,sBAAsB,CAAC,iBAAiB,CAAC;wBAChE,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;qBACnC,EAAC,CAAC;iBACN;gBACD,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;oBAC5B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG;;;uBAAC,UAAC,iBAAoC;;4BAC1D,mBAAmB,GAAG,IAAI,sBAAsB,CAAC,iBAAiB,CAAC;wBACzE,mBAAmB,CAAC,WAAW,GAAG,IAAI,CAAC;wBACvC,cAAc,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;qBAC5C,EAAC,CAAC;iBACN;gBACD,OAAO,cAAc,CAAC;aACzB;;;;;;QAED,6CAAW;;;;;YAAX,UAAY,KAAU,EAAE,aAAqC;gBAA7D,iBAMC;;oBALS,qBAAqB,GAAsB,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,EAAE,aAAa,CAAC;gBACxG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,qBAAqB,CAAC;qBAClF,SAAS;;;eAAC,UAAC,IAAU;oBAClB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;iBAC3C,EAAC,CAAC;aACV;;;;;;;QAEO,wDAAsB;;;;;;YAA9B,UAA+B,OAAe,EAAE,aAAqC;;oBAC3E,cAAc,GAAsB,EAAE;gBAC5C,cAAc,CAAC,YAAY,GAAG,aAAa,CAAC,YAAY,CAAC;gBACzD,cAAc,CAAC,IAAI,GAAG,OAAO,CAAC;gBAC9B,cAAc,CAAC,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;gBACvD,OAAO,cAAc,CAAC;aACzB;;;;;QAED,kDAAgB;;;;YAAhB,UAAiB,aAAqC;gBAAtD,iBAIC;gBAHG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,SAAS;;;mBAAC,UAAC,IAAI;oBACvF,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC1B;;;mBAAE,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;aACzC;;oBArFJT,YAAS,SAAC;wBACP,QAAQ,EAAE,qBAAqB;wBAC/B,w7HAA+C;wBAE/C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAVQwD,oBAAe;wBAGf,qBAAqB;;;;6BAWzBpC,QAAK;6BAILJ,SAAM;4BAINA,SAAM;;QAsEX,8BAAC;KAvFD;;;;;;;QCFA;SAI6C;;oBAJ5CjB,YAAS,SAAC;wBACP,QAAQ,EAAE,4BAA4B;wBACtC,QAAQ,EAAE,2BAA2B;qBACxC;;QAC2C,oCAAC;KAJ7C;;;;;;;QCsBI,oCAAoB,WAA4B,EAC5B,cAA8B;YAD9B,gBAAW,GAAX,WAAW,CAAiB;YAC5B,mBAAc,GAAd,cAAc,CAAgB;;;;YAPlD,YAAO,GAAuB,IAAIS,eAAY,EAAQ,CAAC;;;;YAIvD,UAAK,GAAsB,IAAIA,eAAY,EAAO,CAAC;SAIlD;;;;QAED,+DAA0B;;;YAA1B;gBAAA,iBAWC;gBAVG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS;;;mBAAC,UAAC,IAAU;oBACvD,IAAI,KAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,EAAEG,4BAAuB,CAAC,iBAAiB,CAAC,EAAE;;4BACvF,QAAQ,GAAG,EAAE,WAAW,EAAE,EAAE,oBAAoB,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,EAAE;wBAClG,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS;;;2BAAC,UAAC,WAAiB;4BACzG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBAClC;;;2BAAE,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,EAAC,CAAC;qBACzC;yBAAM;wBACH,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;qBAC3D;iBACJ,EAAC,CAAC;aACN;;oBApCJM,YAAS,SAAC;wBACP,QAAQ,EAAE,2EAA2E;wBACrF,IAAI,EAAE;4BACF,MAAM,EAAE,QAAQ;4BAChB,SAAS,EAAE,8BAA8B;yBAC5C;qBACJ;;;;;wBATQuC,oBAAe;wBAAE1D,mBAAc;;;;6BAanCsB,QAAK;8BAILJ,SAAM;4BAINA,SAAM;;QAoBX,iCAAC;KAtCD;;;;;;;QCcI,sCAA4C,IAA6B;YAA7B,SAAI,GAAJ,IAAI,CAAyB;YAFzE,qBAAgB,GAAgB,EAAE,CAAC;SAGlC;;;;;QAED,+CAAQ;;;;YAAR,UAAS,KAAkB;gBACvB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;aACjC;;;;QAED,mDAAY;;;YAAZ;gBACI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC9C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;aAChC;;oBAvBJjB,YAAS,SAAC;wBACP,QAAQ,EAAE,2BAA2B;wBACrC,20BAAqD;wBAErD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wDAQgBC,SAAM,SAACC,wBAAe;;;;6CALlC6C,YAAS,SAAC,eAAe;;QAgB9B,mCAAC;KAxBD;;;;;;;QCSI,qCAAoB,MAAiB,EACjB,qBAA4C,EAC5C,cAA8B;YAF9B,WAAM,GAAN,MAAM,CAAW;YACjB,0BAAqB,GAArB,qBAAqB,CAAuB;YAC5C,mBAAc,GAAd,cAAc,CAAgB;SACjD;;;;;;;;;;;;;QAQD,6DAAuB;;;;;;YAAvB,UAAwB,IAAU,EAAE,KAAc;gBAC9C,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,EAAEpC,4BAAuB,CAAC,iBAAiB,CAAC,EAAE;;wBACvF,SAAO,GAAG,IAAID,YAAO,EAAe;oBAE1C,SAAO,CAAC,SAAS,CAAC;wBACd,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;qBAClC,CAAC,CAAC;;wBAEG,IAAI,GAA4B;wBAClC,MAAM,EAAE,IAAI,CAAC,EAAE;wBACf,KAAK,EAAE,KAAK;wBACZ,OAAO,EAAE,SAAO;qBACnB;oBAED,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,2BAA2B,EAAE,OAAO,CAAC,CAAC;oBAC5D,OAAO,SAAO,CAAC;iBAClB;qBAAM;;wBACG,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,EAAE,UAAU,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;oBACxE,MAAM,CAAC,OAAO,GAAG,sCAAsC,CAAC;oBACxD,OAAOjB,eAAU,CAAC,MAAM,CAAC,CAAC;iBAC7B;aACJ;;;;;;;;QAEO,gDAAU;;;;;;;YAAlB,UAAmB,IAAS,EAAE,iBAAyB,EAAE,WAAmB;gBACxE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE,EAAE,IAAI,MAAA,EAAE,UAAU,EAAE,iBAAiB,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC;aAC/G;;;;;;;;QAKD,2CAAK;;;;YAAL;gBACI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aAC1B;;;;;;;;;;;;;QAQD,kEAA4B;;;;;;YAA5B,UAA6B,MAAe,EAAE,KAAc;gBAA5D,iBAYC;gBAXG,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,qBAAqB,CAAC,EAAE,CAAC;qBAC3E,IAAI,CACDgB,mBAAS;;;eAAC,UAAC,IAAI;oBACX,OAAO,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC;yBACjD,IAAI,CACDA,mBAAS;;;mBAAC,UAAC,SAAS;wBAChB,OAAO,KAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;qBAC9E,EAAC,CACL,CAAC;iBACT,EAAC,CACL,CAAC;aACT;;oBApEJf,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBAZQkB,kBAAS;wBAMT,qBAAqB;wBACrBd,mBAAc;;;;0CAxBvB;KA2BA;;;;;;;;;;;;;;;;;;;;;;ACPA;QAEI;SACC;;;;;;;QAEM,gEAAiB;;;;;;YAAxB,UAAyB,UAAkB,EAAE,UAAkB,EAAE,SAAiB;;oBACxE,gBAAgB,GAAc;oBAChC,KAAK,EAAE;wBACH,KAAK,EAAE,UAAU,GAAG,oBAAkB,UAAU,uBAAkB,UAAU,MAAG,GAAG,UAAU;qBAC/F;oBACD,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;oBACtC,MAAM,EAAE;wBACJ,QAAQ,EAAE,UAAU;wBACpB,SAAS,EAAE,SAAS;qBACvB;oBACD,aAAa,EAAE;;wBAEX,EAAE,KAAK,EAAE,qBAAqB,EAAE;qBAAC;iBACxC;gBAED,OAAO,gBAAgB,CAAC;aAC3B;QACL,2CAAC;IAAD,CAAC;;;;;;;QCUG;YAAA,iBAWC;;;;YArBD,WAAM,GAAsB,IAAIU,eAAY,EAAE,CAAC;YAE/C,gBAAW,GAAgB,IAAI6E,iBAAW,EAAE,CAAC;YAC7C,iBAAY,GAAG,EAAE,CAAC;YAClB,mBAAc,GAAW,GAAG,CAAC;YAE7B,kBAAa,GAAgB,EAAE,CAAC;YAEhC,aAAQ,GAAc,IAAI4B,eAAS,CAAC,EAAE,KAAK,EAAE,EAAE,UAAU,EAAE,EAAC,kBAAkB,EAAE,gBAAgB,EAAC,EAAC,EAAC,CAAC,CAAC;YAGjG,IAAI,CAAC,WAAW,CAAC,YAAY;iBAC5B,IAAI,CACDhD,sBAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CACpC;iBACA,SAAS;;;WAAC,UAAC,WAAW;gBACnB,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC;gBAChC,IAAI,CAAC,WAAW,EAAE;oBACd,KAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;iBAC9B;aACJ,EAAC,CAAC;SACN;;;;;QAED,oDAAc;;;;YAAd,UAAe,IAAe;gBAC1B,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE;oBAC9B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;iBAClE;qBAAM;oBACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACjC;gBACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACxC;;;;;;QAEO,uDAAiB;;;;;YAAzB,UAA0B,IAAe;gBACrC,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChD;;;;QAED,iDAAW;;;YAAX;gBACI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;gBACxD,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;aAC9B;;oBAzDJlE,YAAS,SAAC;wBACP,QAAQ,EAAE,0BAA0B;wBACpC,4sFAAoD;wBAEpD,aAAa,EAAEC,oBAAiB,CAAC,IAAI;wBACrC,SAAS,EAAE;4BACP,EAAE,OAAO,EAAEkH,+BAA0B,EAAE,QAAQ,EAAE,oCAAoC,EAAE;4BACvFhD,kBAAa;yBAChB;;qBACJ;;;;;6BAGInB,YAAS,SAAC,QAAQ;6BAIlB/B,SAAM;;QA2CX,kCAAC;KA3DD;;;;;;;QCqBI,gCAAoB,qBAA4C,EAC5C,cAA+B,EAC/B,cAA8B;YAFlD,iBAIC;YAJmB,0BAAqB,GAArB,qBAAqB,CAAuB;YAC5C,mBAAc,GAAd,cAAc,CAAiB;YAC/B,mBAAc,GAAd,cAAc,CAAgB;;;;YAZlD,YAAO,GAAuB,IAAIR,eAAY,EAAE,CAAC;;;;YAIjD,UAAK,GAAsB,IAAIA,eAAY,EAAE,CAAC;YAE9C,kBAAa,GAAgB,EAAE,CAAC;YAO5B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS;;;eAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,GAAG,IAAI,GAAA,EAAC,CAAC;SACzF;;;;;QAED,yCAAQ;;;;YAAR,UAAS,SAAsB;gBAC3B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;aAClC;;;;QAED,6CAAY;;;YAAZ;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,EAAEG,4BAAuB,CAAC,iBAAiB,CAAC;oBACtG,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC;aAC3C;;;;QAED,+CAAc;;;YAAd;gBAAA,iBAWC;gBAVG,IAAI,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,EAAEA,4BAAuB,CAAC,iBAAiB,CAAC,EAAE;oBACzG,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC;yBAC5E,SAAS;;;mBACN,UAAC,IAAI;wBACD,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAC3B;;;uBACD,UAAC,KAAK;wBACF,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC1B,EAAC,CAAC;iBACd;aACJ;;oBAlDJZ,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,ybAA8C;wBAE9C,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBARQ,qBAAqB;wBACrBwD,oBAAe;wBAAE1D,mBAAc;;;;6BAWnCsB,QAAK;8BAILJ,SAAM;4BAINA,SAAM;;QAmCX,6BAAC;KApDD;;;;;;;QCQA;SA+BuC;;oBA/BtChC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACL2C,eAAU,CAAC,QAAQ,EAAE;4BACrBL,mBAAY;4BACZG,iBAAW;4BACXC,yBAAmB;4BACnB,cAAc;4BACd,YAAY;yBACf;wBACD,YAAY,EAAE;4BACV,uBAAuB;4BACvB,6BAA6B;4BAC7B,2BAA2B;4BAC3B,0BAA0B;4BAC1B,sBAAsB;4BACtB,4BAA4B;yBAC/B;wBACD,eAAe,EAAE;4BACb,2BAA2B;4BAC3B,sBAAsB;4BACtB,4BAA4B;yBAC/B;wBACD,OAAO,EAAE;4BACL,uBAAuB;4BACvB,6BAA6B;4BAC7B,2BAA2B;4BAC3B,0BAA0B;4BAC1B,sBAAsB;4BACtB,4BAA4B;yBAC/B;qBACJ;;QACqC,8BAAC;KA/BvC;;;;;;;;;;;;;;;;;QCiCI,8BACY,qBAA4C,EAC5C,SAA6C,EAC7C,MAAiB,EACjB,eAAgC,EAChC,cAA8B,EAC9B,gBAAmC,EACX,IAAS;YANjC,0BAAqB,GAArB,qBAAqB,CAAuB;YAC5C,cAAS,GAAT,SAAS,CAAoC;YAC7C,WAAM,GAAN,MAAM,CAAW;YACjB,oBAAe,GAAf,eAAe,CAAiB;YAChC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,qBAAgB,GAAhB,gBAAgB,CAAmB;YACX,SAAI,GAAJ,IAAI,CAAK;YAtBrC,kBAAa,GAAmB,EAAE,CAAC;YAE3C,YAAO,GAAGvB,QAAM,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;YAI/B,iBAAY,GAAY,KAAK,CAAC;YAC9B,eAAU,GAAY,KAAK,CAAC;YAC5B,SAAI,GAAc,IAAImF,eAAS,CAAC;gBAC5B,WAAW,EAAE,IAAID,iBAAW,CAAC,EAAE,CAAC;gBAChC,MAAM,EAAE,IAAIA,iBAAW,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;aACxD,CAAC,CAAC;SAYF;;;;QAED,uCAAQ;;;YAAR;gBAAA,iBAiCC;gBA/BG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;iBACxC;gBAED,IAAI,CAAC,aAAa,CAAC,IAAI,CACnB,IAAI,CAAC,IAAI,CAAC,YAAY;qBACjB,IAAI,CACD8B,cAAI,CAAC,CAAC,CAAC,EACPC,aAAG;;;eAAC,UAAC,OAAO;oBACR,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;iBAC5B,EAAC,CACL;qBACA,SAAS;;;eAAC,UAAC,OAAO,IAAK,OAAA,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,GAAA,EAAC,CACnE,CAAC;gBAEF,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC1C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;;wBACrC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU;oBAElD,IAAI,UAAU,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE;wBAE9C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBAEnD;yBAAM;wBACH,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC;wBAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBAEzB,IAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;iBACJ;aACJ;;;;QAED,0CAAW;;;YAAX;gBACI,IAAI,CAAC,aAAa,CAAC,OAAO;;;mBAAC,UAAC,YAAY,IAAK,OAAA,YAAY,CAAC,WAAW,GAAA,EAAC,CAAC;aAC1E;;;;QAED,0CAAW;;;YAAX;gBACI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACxC;;;;;QAED,iDAAkB;;;;YAAlB,UAAmB,KAAU;gBACzB,IAAI,KAAK,CAAC,OAAO,EAAE;oBACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;iBACnD;qBAAM;oBACH,IAAI,CAAC,sBAAsB,EAAE,CAAC;iBACjC;aACJ;QAED,sBAAI,2CAAS;;;gBAAb;gBACI,OAAO,IAAI,CAAC,cAAc,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACrF;;;WAAA;;;;;QAEO,qDAAsB;;;;YAA9B;gBAAA,iBAqBC;gBApBG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAE1B,IAAI,CAAC,MAAM;qBACN,IAAI,CAAC,sBAAsB,EAAE;oBAC1B,IAAI,EAAE;wBACF,KAAK,EAAE,iCAAiC;wBACxC,OAAO,EAAE,4BAA4B;wBACrC,QAAQ,EAAE,2BAA2B;wBACrC,OAAO,EAAE,2BAA2B;qBACvC;oBACD,QAAQ,EAAE,OAAO;oBACjB,iBAAiB,EAAE,IAAI;iBAC1B,CAAC;qBACD,WAAW,EAAE,CAAC,SAAS;;;eAAC,UAAC,gBAAgB;oBACtC,IAAI,gBAAgB,EAAE;wBAClB,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;qBACxC;yBAAM;wBACH,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;qBAC5B;iBACJ,EAAC,CAAC;aACV;;;;;;QAEO,gDAAiB;;;;;YAAzB,UAA0B,MAAc;gBAAxC,iBAoBC;gBAnBG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,IAAI,CAAC,qBAAqB,CAAC,iBAAiB,CAAC,MAAM,CAAC;qBAC/C,SAAS;;;eAAC,UAAC,UAA2B;oBAEnC,IAAI,UAAU,CAAC,KAAK,EAAE;wBAClB,KAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;wBACpC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,KAAI,CAAC,QAAQ,CAAC;wBACnE,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,KAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS;;2BAAC,eAAQ,EAAC,CAAC;wBAE5F,KAAI,CAAC,UAAU,EAAE,CAAC;qBACrB;iBACJ;;mBACD;oBACI,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC7B,EAAC,CAAC;aACV;;;;;;QAEO,+CAAgB;;;;;YAAxB,UAAyB,QAAgB;gBAAzC,iBAYC;gBAXG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBAEvB,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,SAAS;;mBAAC;oBACxD,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC;oBAC1D,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC;oBAC5D,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC/B;;mBACD;oBACI,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;iBAC7B,EAAC,CAAC;aACV;;;;;QAEO,yCAAU;;;;YAAlB;gBACY,IAAA,4BAAK;;oBACP,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC;gBAExD,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACf,WAAW,EAAE,KAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAU;oBACnD,MAAM,EAAE,UAAU,GAAG,UAAU,GAAG,IAAI;iBACzC,CAAC,CAAC;aACN;;;;;;QAEO,yCAAU;;;;;YAAlB,UAAmB,OAAO;gBACtB,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAClC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EACvB;oBACI,UAAU,EAAE;wBACR,mBAAmB,EAAE,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI;qBACzE;iBACJ,CACJ,CAAC;aACL;;;;;;QAEO,oDAAqB;;;;;YAA7B,UAA8B,OAAO;gBACzB,IAAA,4CAAU;gBAElB,UAAU,CAAC,mBAAmB,CAAC,GAAG,OAAO,CAAC,IAAI;sBACxC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;sBACpB,IAAI,CAAC;aACd;;oBA9KJrH,YAAS,SAAC;wBACP,QAAQ,EAAE,kBAAkB;wBAC5B,wgFAA+C;wBAE/C,IAAI,EAAE,EAAE,OAAO,EAAE,kBAAkB,EAAE;wBACrC,aAAa,EAAEC,oBAAiB,CAAC,IAAI;;qBACxC;;;;;wBAfGqH,0BAAqB;wBALC/G,qBAAY;wBAAGM,kBAAS;wBAM9C4C,oBAAe;wBACf1D,mBAAc;wBACdwH,sBAAiB;wDAoCZrH,SAAM,SAACC,wBAAe;;;;sCAT1B6C,YAAS,SAAC,iBAAiB;;QA0JhC,2BAAC;KA/KD;;;;;;;QCQI,6BAAoB,MAAiB,EAAU,IAAY;YAAvC,WAAM,GAAN,MAAM,CAAW;YAAU,SAAI,GAAJ,IAAI,CAAQ;YAnB3D,WAAM,GAAY,KAAK,CAAC;YACxB,aAAQ,GAAY,KAAK,CAAC;SAkBqC;;;;QAN/D,qCAAO;;;YADP;gBAEI,IAAI,IAAI,CAAC,IAAI,EAAE;oBACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC7B;aACJ;;;;;QAID,uCAAS;;;;YAAT,UAAU,SAAoB;gBAC1B,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE;oBACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE;wBACnC,KAAK,EAAE,OAAO;wBACd,UAAU,EAAE,uBAAuB;wBACnC,IAAI,EAAE;4BACF,IAAI,EAAE,SAAS;4BACf,YAAY,EAAE,IAAI,CAAC,YAAY;yBAClC;qBACJ,CAAC,CAAC;iBACN;aACJ;;;;QAED,yCAAW;;;YAAX;gBAAA,iBAOC;gBANG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS;;mBAAC;oBACzB,IAAI,KAAI,CAAC,IAAI,IAAI,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE;wBAC9B,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBACrC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;qBACjE;iBACJ,EAAC,CAAC;aACN;;oBA/CJ9B,YAAS,SAAC;wBACP,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,UAAU;qBACvB;;;;;wBARQL,kBAAS;wBADkC0B,SAAM;;;;2BAiBrDlB,QAAK,SAAC,WAAW;mCAIjBA,QAAK;8BAGLC,eAAY,SAAC,OAAO;;QA8BzB,0BAAC;KAhDD;;;;;;;QCCA;SA8BC;;;;QAXU,8BAAO;;;YAAd;gBACI,OAAO;oBACH,QAAQ,EAAE,sBAAsB;iBACnC,CAAC;aACL;;;;QAEM,+BAAQ;;;YAAf;gBACI,OAAO;oBACH,QAAQ,EAAE,sBAAsB;iBACnC,CAAC;aACL;;oBA7BJrC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACL2C,eAAU,CAAC,QAAQ,EAAE;4BACrBL,mBAAY;4BACZ,cAAc;yBACjB;wBACD,YAAY,EAAE;4BACV,oBAAoB;4BACpB,mBAAmB;yBACtB;wBACD,OAAO,EAAE;4BACL,oBAAoB;4BACpB,mBAAmB;yBACtB;wBACD,eAAe,EAAE;4BACb,oBAAoB;yBACvB;qBACJ;;QAaD,6BAAC;KA9BD;;;;;;;;;;;;;;;;;QCGI,sBAAY,SAAoB,EAAE,KAAc,EAAE,UAAoB;YAHtE,eAAU,GAAG,IAAI,CAAC;YAId,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,IAAI,CAAC;YACjD,IAAI,CAAC,IAAI,GAAG,SAAS,GAAG,IAAI2F,eAAS,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC;SAEhE;QACL,mBAAC;IAAD,CAAC;;;;;;;QCNG,yBAAoB,OAAwB;YAAxB,YAAO,GAAP,OAAO,CAAiB;SAC3C;;;;;QAED,sCAAY;;;;YAAZ,UAAa,MAAM;gBACf,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC;qBACtC,IAAI,CACD3H,aAAG;;;eAAC,UAAC,QAAoB;oBACrB,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM;;;uBAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAA,EAAC,CAAC;iBACpF,EAAC,EACFA,aAAG;;;mBAAC,UAAC,KAAkB;oBAAK,OAAA,KAAK,CAAC,GAAG;;;uBAAC,UAAC,IAAI,IAAK,OAAA,IAAI,YAAY,CAAC,IAAI,CAAC,GAAA,EAAC;iBAAA,EAAC,CAC3E,CAAC;aACT;;oBAhBJI,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;;;wBATQ8D,oBAAe;;;;8BAjBxB;KAwBA;;;;;;;QCkBI,4BAAoB,WAA0C,EAC1C,eAAgC;YADpD,iBAGC;YAHmB,gBAAW,GAAX,WAAW,CAA+B;YAC1C,oBAAe,GAAf,eAAe,CAAiB;YAdpD,eAAU,GAAG,IAAIrB,oBAAe,CAAiB,EAAE,CAAC,CAAC;YACrD,yBAAoB,GAAG,IAAI,CAAC;YAC5B,uBAAkB,GAAG,IAAI,CAAC;YAatB,IAAI,CAAC,UAAU,CAAC,SAAS;;;eAAC,UAAC,SAAS,IAAK,OAAA,KAAI,CAAC,SAAS,GAAG,SAAS,GAAA,EAAC,CAAC;SACxE;QAZD,sBAAI,oCAAI;;;gBAAR;gBACI,OAAO,IAAI,CAAC,SAAS,CAAC;aACzB;;;;gBAED,UAAS,KAAqB;gBAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC/B;;;WALA;;;;;QAYD,oCAAO;;;;YAAP,UAAQ,gBAAkC;gBAA1C,iBAUC;gBATG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS;;;mBAAC,UAAC,MAAM;oBAChF,IAAI,oBAAC,MAAM,IAAmC,KAAK;wBAC/C,oBAAC,MAAM,IAAmC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC5D,KAAI,CAAC,eAAe,oBAAC,MAAM,GAAkC,CAAC;qBACjE;yBAAM,IAAI,oBAAC,MAAM,IAAmC,OAAO,EAAE;wBAC1D,KAAI,CAAC,eAAe,oBAAC,MAAM,GAAkC,CAAC;qBACjE;iBACJ,EAAC,CAAC;gBACH,OAAOiB,UAAK,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC9D,aAAG;;mBAAC,cAAM,OAAA,KAAI,CAAC,IAAI,GAAA,EAAC,CAAC,CAAC;aACzF;;;;QAED,uCAAU;;;YAAV;gBACI,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBAC3B,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,CAAC;iBAC3C;gBACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBACzB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;iBACzC;aACJ;;;;;;QAEO,4CAAe;;;;;YAAvB,UAAwB,MAAqC;gBAA7D,iBAEC;gBADG,MAAM,CAAC,KAAK,CAAC,OAAO;;;mBAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;aACzD;;;;;;QAEO,4CAAe;;;;;YAAvB,UAAwB,MAAqC;gBAA7D,iBAEC;gBADG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO;;;mBAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAA,EAAC,CAAC;aAC7E;;;;;;QAEO,uCAAU;;;;;YAAlB,UAAmB,IAAkB;gBAArC,iBAeC;gBAdG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;qBACrE,SAAS;;;eAAC,UAAC,QAAQ;;;wBACV,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBACrC,IAAI,CAAC,QAAQ,IAAI,KAAK,GAAG,CAAC,EAAE;wBACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,OAAO;qBACV;;wBACK,KAAK,GAAG,QAAQ,CAAC,GAAG;;;uBAAC,UAAC,UAAU;wBAClC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;wBAClC,OAAO,UAAU,CAAC;qBACrB,EAAC;oBACF,CAAA,KAAA,KAAI,CAAC,IAAI,EAAC,MAAM,qBAAC,KAAK,GAAG,CAAC,EAAE,CAAC,GAAK,KAAK,GAAE;oBACzC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;iBACnC,EAAC,CAAC;aACV;;;;;QAED,uCAAU;;;;YAAV,UAAW,IAAkB;;oBACnB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;;oBACjC,KAAK,GAAG,CAAC;gBACb,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;uBACrC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,EAAG,KAAK,EAAE,EAAE,GAAG;gBAC1D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;gBACnC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACnC;;oBA3EJI,aAAU;;;;;wBAJF6H,oBAAe;wBAEf,eAAe;;;QA+ExB,yBAAC;KA7ED;;;;;;;QCsBI,2BAAoB,eAAgC;YAAhC,oBAAe,GAAf,eAAe,CAAiB;;;;YATpD,gBAAW,GAA4B,IAAI/G,eAAY,EAAE,CAAC;;;;YAI1D,UAAK,GAAsB,IAAIA,eAAY,EAAE,CAAC;YAuB9C,aAAQ;;;eAAG,UAAC,IAAkB,IAAK,OAAA,IAAI,CAAC,KAAK,GAAA,EAAC;YAE9C,iBAAY;;;eAAG,UAAC,IAAkB,IAAK,OAAA,IAAI,CAAC,UAAU,GAAA,EAAC;YAEvD,aAAQ;;;;eAAG,UAAC,KAAa,EAAE,QAAsB,IAAK,OAAA,QAAQ,CAAC,UAAU,GAAA,EAAC;YArBtE,IAAI,CAAC,WAAW,GAAG,IAAI+G,oBAAe,CAAe,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;YACvF,IAAI,CAAC,UAAU,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;SACpF;;;;;QAED,uCAAW;;;;YAAX,UAAY,OAAsB;gBAC9B,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY;oBACnD,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,KAAK,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE;oBACpE,IAAI,CAAC,YAAY,EAAE,CAAC;iBACvB;qBAAM;oBACH,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;iBAC7B;aACJ;;;;;QAED,yCAAa;;;;YAAb,UAAc,IAAe;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC/B;;;;;QAQO,wCAAY;;;;YAApB;gBAAA,iBAQC;gBAPG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;qBACzC,SAAS;;;eACN,UAAC,QAAwB;oBACrB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;iBACnC;;;mBACD,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAA,EACpC,CAAC;aACT;;oBAvDJxH,YAAS,SAAC;wBACP,QAAQ,EAAE,oBAAoB;wBAC9B,0rCAAuC;;qBAE1C;;;;;wBAPQ,eAAe;;;;6BAYnBqB,QAAK;kCAILJ,SAAM;4BAINA,SAAM;;QAuCX,wBAAC;KAxDD;;;;;;;QCDA;SAcC;;oBAdAhC,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACLsC,mBAAY;4BACZ,cAAc;4BACdkG,sBAAe,CAAC,QAAQ,EAAE;yBAC7B;wBACD,YAAY,EAAE;4BACV,iBAAiB;yBACpB;wBACD,OAAO,EAAE;4BACL,iBAAiB;yBACpB;qBACJ;;QAED,qBAAC;KAdD;;;;;;;;;;;;;;;;;QCmBA;SA6CiC;;oBA7ChCxI,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACL2C,eAAU,CAAC,QAAQ,EAAE;4BACrB,YAAY;4BACZ,SAAS;4BACTL,mBAAY;4BACZ,eAAe;4BACfG,iBAAW;4BACXC,yBAAmB;4BACnB,YAAY;4BACZ,YAAY;4BACZ,kBAAkB;4BAClB,YAAY;4BACZ,cAAc;4BACd,mBAAmB;4BACnB,gBAAgB;4BAChB,yBAAyB;4BACzB,sBAAsB;4BACtB,qBAAqB;4BACrB,qBAAqB;4BACrB,sBAAsB;4BACtB,uBAAuB;4BACvB,oBAAoB;4BACpB,cAAc;yBACjB;wBACD,OAAO,EAAE;4BACL,YAAY;4BACZ,SAAS;4BACT,eAAe;4BACf,kBAAkB;4BAClB,YAAY;4BACZ,YAAY;4BACZ,mBAAmB;4BACnB,gBAAgB;4BAChB,yBAAyB;4BACzB,sBAAsB;4BACtB,qBAAqB;4BACrB,YAAY;4BACZ,qBAAqB;4BACrB,sBAAsB;4BACtB,uBAAuB;4BACvB,oBAAoB;4BACpB,cAAc;yBACjB;qBACJ;;QAC+B,wBAAC;KA7CjC,IA6CiC;eA+BX;QACN,IAAI,EAAE,sBAAsB;QAC5B,MAAM,EAAE,6BAA6B;KACxC;AAhCb;QAAA;SA6EC;;;;QArBU,qBAAO;;;YAAd;gBACI,OAAO;oBACH,QAAQ,EAAE,aAAa;oBACvB,SAAS,EAAE;wBACP;4BACI,OAAO,EAAE+F,yBAAoB;4BAC7B,KAAK,EAAE,IAAI;4BACX,QAAQ,EAAE;gCACN,IAAI,EAAE,sBAAsB;gCAC5B,MAAM,EAAE,6BAA6B;6BACxC;yBACJ;qBACJ;iBACJ,CAAC;aACL;;;;QAEM,sBAAQ;;;YAAf;gBACI,OAAO;oBACH,QAAQ,EAAE,iBAAiB;iBAC9B,CAAC;aACL;;oBA5EJzI,WAAQ,SAAC;wBACN,OAAO,EAAE;4BACL2C,eAAU,CAAC,QAAQ,EAAE;4BACrB,YAAY;4BACZ,SAAS;4BACTL,mBAAY;4BACZ,eAAe;4BACfG,iBAAW;4BACXC,yBAAmB;4BACnB,YAAY;4BACZ,YAAY;4BACZ,kBAAkB;4BAClB,YAAY;4BACZ,cAAc;4BACd,mBAAmB;4BACnB,gBAAgB;4BAChB,yBAAyB;4BACzB,sBAAsB;4BACtB,qBAAqB;4BACrB,qBAAqB;4BACrB,sBAAsB;4BACtB,uBAAuB;4BACvB,oBAAoB;4BACpB,cAAc;yBACjB;wBACD,SAAS,EAAE;4BACP;gCACI,OAAO,EAAE+F,yBAAoB;gCAC7B,KAAK,EAAE,IAAI;gCACX,QAAQ,MAGP;6BACJ;yBACJ;wBACD,OAAO,EAAE;4BACL,YAAY;4BACZ,SAAS;4BACT,eAAe;4BACf,kBAAkB;4BAClB,YAAY;4BACZ,YAAY;4BACZ,mBAAmB;4BACnB,gBAAgB;4BAChB,yBAAyB;4BACzB,sBAAsB;4BACtB,qBAAqB;4BACrB,YAAY;4BACZ,qBAAqB;4BACrB,sBAAsB;4BACtB,uBAAuB;4BACvB,oBAAoB;4BACpB,cAAc;yBACjB;qBACJ;;QAuBD,oBAAC;KA7ED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
