{"version":3,"sources":["ng://@alfresco/adf-content-services/material.module.ts","node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-content-services/document-list/models/document-folder.model.ts","ng://@alfresco/adf-content-services/document-list/services/custom-resources.service.ts","ng://@alfresco/adf-content-services/document-list/services/document-list.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.component.ts","ng://@alfresco/adf-content-services/dialogs/node-lock.dialog.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-dialog.service.ts","ng://@alfresco/adf-content-services/directives/node-lock.directive.ts","ng://@alfresco/adf-content-services/directives/content-directive.module.ts","ng://@alfresco/adf-content-services/social/services/rating.service.ts","ng://@alfresco/adf-content-services/social/rating.component.ts","ng://@alfresco/adf-content-services/social/like.component.ts","ng://@alfresco/adf-content-services/social/social.module.ts","ng://@alfresco/adf-content-services/tag/services/tag.service.ts","ng://@alfresco/adf-content-services/tag/tag-actions.component.ts","ng://@alfresco/adf-content-services/tag/tag-list.component.ts","ng://@alfresco/adf-content-services/tag/tag-node-list.component.ts","ng://@alfresco/adf-content-services/tag/tag.module.ts","ng://@alfresco/adf-content-services/webscript/webscript.component.ts","ng://@alfresco/adf-content-services/webscript/webscript.module.ts","ng://@alfresco/adf-content-services/document-list/data/share-data-row.model.ts","ng://@alfresco/adf-content-services/document-list/data/share-datatable-adapter.ts","ng://@alfresco/adf-content-services/document-list/models/preset.model.ts","ng://@alfresco/adf-content-services/document-list/models/content-action.model.ts","ng://@alfresco/adf-content-services/document-list/components/node.event.ts","ng://@alfresco/adf-content-services/document-list/components/document-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-column/content-column.component.ts","ng://@alfresco/adf-content-services/document-list/models/permissions.model.ts","ng://@alfresco/adf-content-services/document-list/services/node-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/document-actions.service.ts","ng://@alfresco/adf-content-services/document-list/services/folder-actions.service.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action-list.component.ts","ng://@alfresco/adf-content-services/document-list/components/content-action/content-action.component.ts","ng://@alfresco/adf-content-services/document-list/components/library-name-column/library-name-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/library-role-column/library-role-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/library-status-column/library-status-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/name-column/name-column.component.ts","ng://@alfresco/adf-content-services/document-list/components/trashcan-name-column/trashcan-name-column.component.ts","ng://@alfresco/adf-content-services/document-list/models/document-library.model.ts","ng://@alfresco/adf-content-services/document-list/models/permissions-style.model.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-dialog.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list-row.component.ts","ng://@alfresco/adf-content-services/upload/components/file-uploading-list.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-files.event.ts","ng://@alfresco/adf-content-services/upload/components/base-upload/upload-base.ts","ng://@alfresco/adf-content-services/upload/components/upload-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-version-button.component.ts","ng://@alfresco/adf-content-services/upload/components/upload-drag-area.component.ts","ng://@alfresco/adf-content-services/upload/pipes/file-upload-error.pipe.ts","ng://@alfresco/adf-content-services/upload/directives/file-draggable.directive.ts","ng://@alfresco/adf-content-services/upload/upload.module.ts","ng://@alfresco/adf-content-services/document-list/document-list.module.ts","ng://@alfresco/adf-content-services/search/search-query-builder.service.ts","ng://@alfresco/adf-content-services/search/components/search.component.ts","ng://@alfresco/adf-content-services/search/components/empty-search-result.component.ts","ng://@alfresco/adf-content-services/search/components/search-control.component.ts","ng://@alfresco/adf-content-services/search/components/search-trigger.directive.ts","ng://@alfresco/adf-content-services/search/components/search-filter/models/search-filter-list.model.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.component.ts","ng://@alfresco/adf-content-services/search/components/search-text/search-text.component.ts","ng://@alfresco/adf-content-services/search/components/search-radio/search-radio.component.ts","ng://@alfresco/adf-content-services/search/components/search-slider/search-slider.component.ts","ng://@alfresco/adf-content-services/search/forms/live-error-state-matcher.ts","ng://@alfresco/adf-content-services/search/components/search-number-range/search-number-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-check-list/search-check-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-date-range/search-date-range.component.ts","ng://@alfresco/adf-content-services/search/components/search-filter/search-filter.service.ts","ng://@alfresco/adf-content-services/search/components/search-chip-list/search-chip-list.component.ts","ng://@alfresco/adf-content-services/search/components/search-sorting-picker/search-sorting-picker.component.ts","ng://@alfresco/adf-content-services/search/components/search-widget-container/search-widget-container.component.ts","ng://@alfresco/adf-content-services/search/search.module.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.component.ts","ng://@alfresco/adf-content-services/site-dropdown/sites-dropdown.module.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/dropdown-breadcrumb.component.ts","ng://@alfresco/adf-content-services/breadcrumb/breadcrumb.module.ts","ng://@alfresco/adf-content-services/dialogs/confirm.dialog.ts","ng://@alfresco/adf-content-services/version-manager/version-list.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.component.ts","ng://@alfresco/adf-content-services/version-manager/version-upload.component.ts","ng://@alfresco/adf-content-services/version-manager/version-manager.module.ts","ng://@alfresco/adf-content-services/content-node-selector/name-location-cell/name-location-cell.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.service.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector-panel.component.ts","ng://@alfresco/adf-content-services/content-node-selector/content-node-selector.module.ts","ng://@alfresco/adf-content-services/dialogs/folder-name.validators.ts","ng://@alfresco/adf-content-services/dialogs/folder.dialog.ts","ng://@alfresco/adf-content-services/dialogs/library/library.dialog.ts","ng://@alfresco/adf-content-services/dialogs/dialog.module.ts","ng://@alfresco/adf-content-services/folder-directive/folder-create.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-edit.directive.ts","ng://@alfresco/adf-content-services/folder-directive/folder-directive.module.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata-card/content-metadata-card.component.ts","ng://@alfresco/adf-content-services/content-metadata/services/basic-properties.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-groups-translator.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/property-group-reader.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/aspect-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/indifferent-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/layout-oriented-config.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/config/content-metadata-config.factory.ts","ng://@alfresco/adf-content-services/content-metadata/services/property-descriptors.service.ts","ng://@alfresco/adf-content-services/content-metadata/services/content-metadata.service.ts","ng://@alfresco/adf-content-services/content-metadata/components/content-metadata/content-metadata.component.ts","ng://@alfresco/adf-content-services/content-metadata/content-metadata.module.ts","ng://@alfresco/adf-content-services/permission-manager/models/permission.model.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/permission-list.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/permission-list/no-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/inherited-button.directive.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-dialog.component.ts","ng://@alfresco/adf-content-services/permission-manager/services/node-permission-dialog.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/search-config-permission.service.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission-panel.component.ts","ng://@alfresco/adf-content-services/permission-manager/components/add-permission/add-permission.component.ts","ng://@alfresco/adf-content-services/permission-manager/permission-manager.module.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.dialog.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.directive.ts","ng://@alfresco/adf-content-services/content-node-share/content-node-share.module.ts","ng://@alfresco/adf-content-services/tree-view/models/tree-view.model.ts","ng://@alfresco/adf-content-services/tree-view/services/tree-view.service.ts","ng://@alfresco/adf-content-services/tree-view/data/tree-view-datasource.ts","ng://@alfresco/adf-content-services/tree-view/components/tree-view.component.ts","ng://@alfresco/adf-content-services/tree-view/tree-view.module.ts","ng://@alfresco/adf-content-services/content.module.ts"],"names":["modules","MatButtonModule","MatChipsModule","MatDialogModule","MatIconModule","MatCardModule","MatInputModule","MatListModule","MatProgressSpinnerModule","MatProgressBarModule","MatRippleModule","MatMenuModule","MatOptionModule","MatExpansionModule","MatSelectModule","MatCheckboxModule","MatDatepickerModule","MatSlideToggleModule","MatRadioModule","MatSliderModule","MatTreeModule","MaterialModule","NgModule","args","imports","exports","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","r","ar","error","__spread","concat","DocumentLoaderNode","currentNode","children","CustomResourcesService","apiService","logService","CREATE_PERMISSION","getRecentFiles","personId","pagination","filters","_this","defaultFilter","Observable","observer","peopleApi","getPerson","person","username","entry","id","filterQueries","query","join","SearchRequest","language","include","sort","type","field","ascending","paging","maxItems","skipCount","searchApi","search","searchResult","complete","err","pipe","catchError","handleError","loadFavorites","includeFields","includeFieldsRequest","getIncludesFields","options","where","favoritesApi","getFavorites","page","list","entries","map","_a","target","file","folder","properties","cm:title","title","cm:description","description","loadMemberSites","listSiteMembershipsForPerson","SiteMemberPaging","site","allowableOperations","name","loadSites","sitesApi","getSites","loadTrashcan","from","nodesApi","getDeletedNodes","loadSharedLinks","sharedLinksApi","findSharedLinks","isCustomSource","folderId","isCustomSources","indexOf","isSupportedSource","isSupportedSources","loadFolderByNodeId","nodeId","getCorrespondingNodeIds","node","getIdFromEntry","getNode","of","guid","targetGuid","hasCorrespondingNodeIds","tslib_1.__spread","filter","element","index","array","throwError","Injectable","providedIn","AlfrescoApiService","LogService","DocumentListService","contentService","customResourcesService","deleteNode","getInstance","nodes","copyNode","targetParentId","moveNode","getFolder","opts","rootNodeId","ROOT_ID","rootFolderId","params","includeSource","relativePath","getNodeChildren","getFolderNode","isCustomSourceService","retrieveDocumentNode","forkJoin","results","ContentService","ContentNodeSelectorComponent","data","buttonActionName","actionName","toUpperCase","close","select","onSelect","nodeList","chosenNode","onClick","Component","selector","template","encapsulation","ViewEncapsulation","None","Inject","MAT_DIALOG_DATA","NodeLockDialogComponent","formBuilder","dialog","alfrescoApi","ngOnInit","nodeName","form","group","isLocked","allowOwner","isTimeLock","time","moment","defineProperty","duration","diff","asSeconds","NodeBodyLock","timeToExpire","lockTimeInSeconds","lifetime","toggleLock","lockNode","nodeBodyLock","unlockNode","submit","catch","onError","FormBuilder","MatDialogRef","Optional","ContentNodeDialogService","documentListService","siteService","translation","thumbnailService","EventEmitter","openFileBrowseDialogByFolderId","folderNodeId","switchMap","nodeEntry","openUploadFileDialog","openLockNodeDialog","contentEntry","observable","Subject","hasAllowableOperations","AllowableOperationsEnum","LOCK","open","emit","width","openFileBrowseDialogBySite","response","openFolderBrowseDialogBySite","openFolderBrowseDialogByFolderId","openUploadFolderDialog","openCopyMoveDialog","action","permission","excludeSiteContent","subscribe","bind","getTitleTranslation","currentFolderId","parentId","imageResolver","isSelectionValid","isCopyMoveSelectionValid","nonDocumentSiteContent","openContentNodeDialog","errors","Error","JSON","stringify","statusCode","instant","hasAllowableOperationsOnNodeFolder","isNodeFile","currentPanelClass","chosenWidth","panelClass","row","col","getMimeTypeIcon","isFile","isNodeFolder","isFolder","hasEntityCreatePermission","isSite","nodeType","closeAll","MatDialog","SitesService","TranslationService","ThumbnailService","Output","NodeLockDirective","renderer","contentNodeDialogService","event","preventDefault","ngAfterViewInit","setProperty","nativeElement","Directive","ElementRef","Renderer2","Input","HostListener","ContentDirectiveModule","CommonModule","declarations","RatingService","getRating","ratingType","core","ratingsApi","postRating","vote","ratingBody","RatingBody","myRating","rate","deleteRating","removeRating","console","RatingComponent","ratingService","average","changeVote","stars","ngOnChanges","ratingObserver","ratingEntry","aggregate","calculateStars","fill","updateVote","LikeComponent","likesCounter","isLike","clean","numberOfRatings","ratedAt","likeClick","SocialModule","TagService","refresh","getTagsByNodeId","tagsApi","getNodeTags","getAllTheTags","getTags","addTag","tagName","tagBody","TagBody","tag","observableAdd","tagEntry","removeTag","observableRemove","TagActionsComponent","tagService","translateService","successAdd","disableAddTag","subscriptions","refreshTag","ngOnDestroy","forEach","subscription","unsubscribe","tagPaging","tagsEntries","searchTag","newTagName","get","errorMsg","searchTagName","find","currentTag","cleanErrorMsg","TagListComponent","size","isLoading","isSizeMinimum","defaultPagination","hasMoreItems","tags","loadMoreTags","count","loadLessTags","slice","TagNodeListComponent","showDelete","TagModule","FormsModule","ReactiveFormsModule","CoreModule","forChild","WebscriptComponent","showData","contextRoot","servicePath","contentType","success","undefined","showError","changes","webScript","executeWebScript","scriptPath","scriptArgs","webScriptData","showDataAsDataTable","log","schema","ObjectDataTableAdapter","generateSchema","isDataTableContent","WebScriptModule","ShareDataRow","obj","permissionsStyle","cache","isSelected","cssClass","ERR_OBJECT_NOT_FOUND","isDropTarget","isFolderAndHasPermissionToUpload","getPermissionClass","nodeEntity","permissionsClasses","currentPermissionsStyle","applyPermissionStyleToFolder","applyPermissionStyleToFile","css","cacheValue","key","getValue","ObjectUtils","imageErrorResolver","content","mimeType","hasValue","ShareDataTableAdapter","sorting","sortingMode","ERR_ROW_NOT_FOUND","ERR_COL_NOT_FOUND","thumbnails","rows","columns","_sortingMode","newValue","toLowerCase","getRows","setRows","getColumns","setColumns","dataRow","resolved","getFolderIcon","getDocumentThumbnailUrl","getDefaultMimeTypeIcon","getSorting","setSorting","sortRows","direction","DataSorting","setFilter","setImageResolver","resolver","isSmartFolder","isRuleFolder","isALinkFolder","nodeAspects","getNodeAspectNames","aspectNames","includes","numeric","a","left","Date","valueOf","toString","right","localeCompare","loadPage","nodePaging","merge","shareDataRows","nodeEntries","item","sortable","c","listPrunedDuplicate","elementToFilter","currentRow","presetsDefaultModel","-trashcan-","srTitle","format","-sites-","-mysites-","-favorites-","-recent-","-sharedlinks-","default","ContentActionModel","disableWithNoPermission","disabled","visible","icon","handler","execute","Document","Folder","All","DocumentActionModel","json","_super","tslib_1.__extends","FolderActionModel","NodeEntityEvent","BaseEvent","NodeEntryEvent","DocumentListComponent","ngZone","elementRef","appConfig","userPreferencesService","alfrescoApiService","lockService","DEFAULT_PAGINATION","Pagination","totalItems","display","DisplayMode","List","locationFormat","navigate","showHeader","navigationMode","DOUBLE_CLICK_NAVIGATION","selectionMode","multiselect","contentActions","contentActionsPosition","contextMenuActions","emptyFolderImageUrl","allowDropFiles","loading","_rowFilter","stickyHeader","_currentFolderId","nodeClick","nodeDblClick","folderChange","preview","ready","actions","contextActionHandler","noPermission","selection","$folderNode","_pagination","BehaviorSubject","layoutPresets","rowMenuCache","UserPreferenceValues","PaginationSize","pagSize","rowFilter","reload","resetNewFolderPagination","loadFolder","getContextActions","getNodeActions","currentAction","model","subject","columnList","getDefaultSorting","defaultSorting","getLayoutPreset","ObjectDataColumn","isMobile","test","navigator","userAgent","isEmpty","loadLayoutPresets","val","contextActionCallback","enforceSingleClickNavigationForMobile","ngAfterContentInit","setTableSchema","hasCustomLayout","setupDefaultColumns","resetSelection","firstChange","currentValue","onDataReady","run","executeContentAction","target_1","refreshAction","actionsByTarget","isActionDisabled","isActionVisible","onShowContextMenu","navigateTo","canNavigateFolder","getNodeFolderDestinationId","isLinkFolder","updateCustomSourceData","handlerSub","setLoadingState","clearTimeout","loadingTimeout","setTimeout","documentNode","folderNode","onPageLoaded","dataTable","preset","onPreviewFile","onNodeClick","domEvent","CustomEvent","detail","sender","bubbles","dispatchEvent","defaultPrevented","SINGLE_CLICK_NAVIGATION","executeActionClick","onNodeDblClick","onNodeSelect","onNodeUnselect","onShowRowContextMenu","onShowRowActionsMenu","onExecuteRowAction","externalSettings","updatePagination","requestPaginationModel","message","parse","host","class","NgZone","AppConfigService","UserPreferencesService","LockService","ContentChild","DataColumnListComponent","CustomLoadingContentTemplateDirective","CustomNoPermissionTemplateDirective","CustomEmptyContentTemplateDirective","ViewChild","ContentColumnListComponent","documentList","registerColumn","column","ContentColumnComponent","register","TemplateRef","PermissionModel","NodeActionsService","contentDialogService","dialogRef","downloadNode","NodeDownloadDirective","copyContent","doFileOperation","copyFolder","moveContent","moveFolder","selections","DocumentActionsService","nodeActionsService","permissionEvent","handlers","setupActionHandlers","getHandler","lKey","setHandler","canExecuteAction","actionObservable","prepareHandlers","fileOperationMessage","handlerObservable","FolderActionsService","ContentActionListComponent","registerAction","unregisterAction","idx","splice","ContentActionComponent","documentActions","folderActions","ContentActionTarget","folderActionModel","generateAction","documentActionModel","unregister","getSystemHandler","providers","LibraryNameColumnComponent","displayTooltip$","displayText$","updateValue","sub","nodeUpdated","context","makeLibraryTitle","makeLibraryTooltip","library","isDuplicate","some","changeDetection","ChangeDetectionStrategy","OnPush","LibraryRoleColumnComponent","api","role","Site","RoleEnum","SiteManager","SiteCollaborator","SiteContributor","SiteConsumer","LibraryStatusColumnComponent","visibility","VisibilityEnum","PUBLIC","PRIVATE","MODERATED","NameColumnComponent","TrashcanNameColumnComponent","isLibrary","displayText","displayTooltip","NodePaging","NodePagingList","NodeMinimalEntry","NodeMinimal","UserInfo","ContentInfo","PathInfoEntity","PathElementEntity","PermissionStyleModel","FileUploadingDialogComponent","uploadService","changeDetector","position","filesUploadingList","isDialogActive","totalCompleted","totalErrors","isDialogMinimized","isConfirmation","listSubscription","queueChanged","fileList","counterSubscription","fileUploadComplete","fileUploadDeleted","totalComplete","detectChanges","errorSubscription","fileUploadError","totalError","fileUploadSubscription","fileUpload","fileDeleted","objId","status","FileUploadStatus","Cancelled","toggleConfirmation","cancelAllUploads","uploadList","cancelAllFiles","toggleMinimized","clearQueue","UploadService","ChangeDetectorRef","FileUploadingListRowComponent","cancel","remove","onCancel","onRemove","showCancelledStatus","Aborted","Deleted","isUploadVersion","newVersion","FileUploadingListComponent","files","cancelFile","cancelUpload","removeFile","notifyError","cancelNodeVersionInstances","getUploadingFiles","deletedFiles","Complete","isUploadCompleted","isUploadCancelled","Boolean","Starting","Progress","Pending","every","permanent","_i","messageError","fileName","total","NodesApiService","UploadFilesEvent","callback","isDefaultPrevented","pauseUpload","resumeUpload","addToQueue","uploadFilesInTheQueue","UploadBase","translationService","acceptedFilesType","versioning","majorVersion","beginUpload","uploadFiles","filteredFiles","createFileModel","webkitRelativePath","replace","uploadQueue","uploadFilesInfo","fileInfo","relativeFolder","isFileAcceptable","isFileSizeAcceptable","split","ext","trim","extension","path","FileModel","comment","isFileSizeAllowed","isMaxFileSizeDefined","isFileSizeCorrect","maxFilesSize","acceptableSize","UploadButtonComponent","uploadFolders","multipleFiles","tooltip","permissionValue","checkPermission","isButtonDisabled","onFilesAdded","$event","FileUtils","toFileArray","currentTarget","onDirectoryAdded","res","nodeHasPermission","CREATE","viewProviders","provide","EXTENDIBLE_COMPONENT","useExisting","forwardRef","UploadVersionButtonComponent","fileModel","UPDATE","UploadDragAreaComponent","notificationService","onFilesDropped","onFolderEntityDropped","isDirectory","flatten","filesInfo","showUndoNotificationBar","latestFilesAdded","messageTranslate","actionTranslate","openSnackMessageAction","onAction","isDroppable","onUploadFiles","stopPropagation","isTargetNodeFolder","destinationFolderName_1","NotificationService","FileUploadErrorPipe","transform","errorCode","Pipe","pure","FileDraggableDirective","el","enabled","filesDropped","folderEntityDropped","cssClassName","runOutsideAngular","addEventListener","onDragEnter","onDragOver","onDragLeave","onDropFiles","removeEventListener","items","dataTransfer","webkitGetAsEntry","getAsFile","classList","add","UploadModule","DocumentListModule","FlexLayoutModule","entryComponents","SearchQueryBuilderService","_userQuery","updated","executed","categories","queryFragments","userFacetBuckets","config","ranges","resetToDefaults","category","defaults","addUserFacetBucket","bucket","buckets","facetBucket","getUserFacetBuckets","removeUserFacetBucket","addFilterQuery","filterQuery","removeFilterQuery","getFacetQuery","hasFacetQueries","facetQueries","queries","getFacetField","facetFields","fields","getSupportedLabel","update","buildQuery","resultSetPaging","error_1","getFinalQuery","facetIntervals","highlight","facetFormat","getPrimarySorting","getSortingOptions","getQueryGroup","intervals","def","RequestSortDefinitionInner","hasFacetIntervals","interval","sets","set","start","end","startInclusive","endInclusive","hasFacetHighlight","facet","customQuery","userQuery","keys","subQuery","facets","mincount","limit","offset","prefix","configLabel","SearchComponent","searchService","_elementRef","displayWith","maxResults","skipResults","searchTerm","resultLoaded","showPanel","_isOpen","keyPressedStream","_classList","asObservable","debounceTime","searchedWord","loadSearchResults","dataLoaded","onSearchDataLoaded","onSearchDataError","className","setVisibility","resetResults","cleanResults","isOpen","hidePanel","preserveWhitespaces","exportAs","SearchService","EmptySearchResultComponent","SearchControlComponent","authService","expandable","inputType","autocomplete","liveSearchEnabled","liveSearchMaxResults","searchChange","optionClicked","noSearchResultTemplate","toggleSearch","focusSubject","subscriptAnimationState","searchAutocomplete","document","activeElement","searchInput","blur","applySearchFocus","animationDoneEvent","toState","focus","setupFocusEventHandlers","isNoSearchTemplatePresent","emptySearchTemplate","isLoggedIn","isEcmLoggedIn","searchSubmit","toggleSearchBar","inputChange","getAutoComplete","getMimeType","isSearchBarActive","elementClicked","onFocus","onBlur","activateToolbar","selectFirstResult","listResultElement","_getHostElement","onRowArrowDown","nextElement","getNextElementSibling","onRowArrowUp","previousElement","getPreviousElementSibling","FocusEvent","nextElementSibling","previousElementSibling","animations","trigger","state","style","margin-left","transition","animate","AuthenticationService","ViewChildren","MatListItem","SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","SearchTriggerDirective","multi","changeDetectorRef","onDestroy$","_panelOpen","escapeEventStream","onChange","onTouched","closingActionsSubscription","searchPanel","openPanel","subscribeToClosingActions","closePanel","outsideClickStream","fromEvent","clickTarget","takeUntil","writeValue","setTriggerValue","registerOnChange","fn","registerOnTouched","handleKeydown","keyCode","ESCAPE","panelOpen","ENTER","handleInput","inputValue","isPanelOptionClicked","isPanelOption","isNoResultOption","panel","contains","firstStable","onStable","optionChanges","panelClosingActions","setValueAndClose","toDisplay","textContent","[attr.autocomplete]","aria-autocomplete","[attr.aria-expanded]","(blur)","(input)","(keydown)","DOCUMENT","SearchFilterList","pageSize","filteredItems","_filterText","currentPageSize","_filter","applyFilter","showMoreItems","canShowMoreItems","showLessItems","canShowLessItems","clear","filterText","addItem","deleteItem","removeIndex","pointer","visibleItems","SearchFilterComponent","queryBuilder","DEFAULT_PAGE_SIZE","isAlive","responseFacets","facetQueriesPageSize","facetQueriesLabel","facetExpanded","selectedBuckets","expanded","displayResetButton","resetButton","takeWhile","onDataLoaded","updateSelectedBuckets","this_1","checked","_b","tslib_1.__values","_c","onToggleBucket","selectFacetBucket","unselectFacetBucket","canResetSelectedBuckets","resetSelectedBuckets","resetAllSelectedBuckets","resetAll","shouldExpand","parseFacets","parseFacetFields","parseFacetIntervals","parseFacetQueries","parseFacetItems","configFacetFields","itemType","responseField","findFacet","responseBuckets","getResponseBuckets","getFilterByMinCount","alreadyExistingField","findResponseFacet","alreadyExistingBuckets","updateExistingBuckets","bucketList","getBucketFilterFunction","configFacetIntervals","configGroups","reduce","acc","mincountFilter","getResponseQueryBuckets","configField","respBucket","getCountValue","getCorrespondingFilterQuery","configGroup","metrics","getBucketCountDisplay","mincountInput","configFacetItem","bucketLabel","configSet","buildIntervalQuery","fieldName","fieldLabel","bucketsToDelete","responseBucket","selBuckets","oldBucket","pattern","filterWithContains","startsWith","SearchTextComponent","settings","match","RegExp","exec","reset","updateQuery","onChangedHandler","SearchRadioComponent","initialValue","getSelectedValue","setValue","selected","opt","changeHandler","SearchSliderComponent","thumbLabel","min","max","LiveErrorStateMatcher","isErrorState","control","isSubmitted","submitted","invalid","dirty","touched","pristine","SearchNumberRangeComponent","matcher","validators","Validators","compose","required","FormControl","to","FormGroup","formValidator","formGroup","parseInt","mismatch","isValid","Map","formatString","str","expr","SearchCheckListComponent","operator","option","flush","DEFAULT_FORMAT_DATE","MOMENT_DATE_FORMATS","SearchDateRangeComponent","dateAdapter","datePickerDateFormat","getFromValidationMessage","hasError","hasParseError","getToValidationMessage","dateFormat","overrideDisplayFormat","Locale","locale","setLocale","maxDate","today","startOf","endOf","formControl","srcElement","formatDate","setErrors","invalidOnChange","getError","text","forcePlaceholder","click","DateAdapter","useClass","MomentDateAdapter","deps","MAT_DATE_LOCALE","MAT_DATE_FORMATS","useValue","ɵ0","SearchFilterService","widgets","radio","slider","number-range","check-list","date-range","SearchChipListComponent","clearAll","SearchSortingPickerComponent","primary","onValueChanged","getSortingOrder","applySorting","onSortingChanged","findOptionByKey","SearchWidgetContainerComponent","searchFilterService","componentFactoryResolver","componentType","factory","resolveComponentFactory","componentRef","createComponent","setupWidget","ref","instance","destroy","ComponentFactoryResolver","read","ViewContainerRef","ALFRESCO_SEARCH_DIRECTIVES","SearchModule","Members","Containers","DropdownSitesComponent","sitesService","hideMyFiles","siteList","placeholder","change","MAX_ITEMS","ITEM_HEIGHT","ITEM_HEIGHT_TO_WAIT_BEFORE_LOAD_NEXT","MY_FILES_VALUE","siteSelect","openedChange","loadAllOnScroll","loadSiteList","isInfiniteScrollingEnabled","isScrollInNextFetchArea","scrollTop","scrollHeight","offsetHeight","selectedSite","extendedOptions","relations","sitePaging","Relations","filteredResultsByMember","siteEntry","SiteEntry","unshift","showLoading","sites","loggedUserName","getEcmCurrentLoggedUserName","isCurrentUserMember","members","member","SitesDropdownModule","BreadcrumbComponent","root","rootId","route","recalculateNodes","parseRoute","lastNodes","previousNodes","reverse","dropdown","hasPreviousNodes","elements","rootPos","getElementPosition","findIndex","onRoutePathClick","DropdownBreadcrumbComponent","BreadcrumbModule","ConfirmDialogComponent","sanitizer","yesLabel","thirdOptionLabel","noLabel","htmlContent","sanitizedHtmlContent","sanitize","SecurityContext","HTML","DomSanitizer","VersionListComponent","versions","showComments","allowDownload","showActions","restored","deleted","versionsApi","loadVersionHistory","canUpdate","canDelete","restore","versionId","revertVersion","getNodeInfo","onVersionRestored","listVersionHistory","versionPaging","downloadVersion","versionDownloadUrl","getVersionContentUrl","downloadContent","deleteVersion","minWidth","afterClosed","onVersionDeleted","attachment","contentApi","getContentUrl","url","link","createElement","href","appendChild","removeChild","VersionManagerComponent","uploadSuccess","uploadError","uploadState","versionListComponent","onUploadSuccess","onUploadError","onUploadCancel","toggleNewVersion","height","opacity","VersionUploadComponent","semanticVersion","uploadVersion","canUpload","isMajorVersion","VersionManagerModule","NameLocationCellComponent","fullPath","ContentNodeSelectorService","extraNodeIds","extraParentFiltering","extraId","defaultSearchNode","scope","locations","searchByQueryBody","defaultValidation","ContentNodeSelectorPanelComponent","contentNodeSelectorService","dropdownHideMyFiles","dropdownSiteList","_excludeSiteContent","showingSearchResults","loadingSearchResults","inDialog","_chosenNode","folderIdToShow","breadcrumbFolderTitle","infiniteScroll","debounceSearch","valueChanges","searchValue","createRowFilter","valuesArray","breadcrumbTransform","isExcludedSiteContent","siteChanged","chosenSite","siteId","setTitleIfCustomSite","updateResults","clearSearch","startNewSearch","infinitePaginationComponent","querySearch","nodeIds","showSearchResults","onFolderChange","onFolderLoaded","attemptNodeSelection","showBreadcrumbs","getNextPageOfSearch","resetChosenNode","HighlightDirective","InfinitePaginationComponent","ContentNodeSelectorModule","I18N_ERRORS_PATH","forbidSpecialCharacters","forbidEndingDot","forbidOnlySpaces","FolderDialogComponent","editTitle","createTitle","parentNodeId","createFolder","edit","updateNode","editing","valid","errorMessage","LibraryDialogComponent","libraryTitleExists","visibilityOptions","maxLength","minLength","createSiteIdValidator","visibilityOption","controls","mergeMap","checkLibraryNameExists","canGenerateId","patchValue","markAsTouched","visibilityChangeHandler","siteBody","createSite","input","libraryTitle","findLibraryByTitle","queriesApi","findSites","timer","getSite","DialogModule","MatMomentDatetimeModule","MatDatetimepickerModule","FolderCreateDirective","openDialog","DIALOG_WIDTH","dialogConfig","dialogInstance","componentInstance","folderCreate","FolderEditDirective","folderEdit","FolderDirectiveModule","ContentMetadataCardComponent","displayEmpty","displayAspect","readOnly","_displayDefaultProperties","editable","onDisplayDefaultPropertiesChange","toggleEdit","toggleExpanded","BasicPropertiesService","fileSizePipe","getProperties","sizeInBytes","mimeTypeName","author","CardViewTextItemModel","createdByUser","displayName","CardViewDateItemModel","createdAt","pipes","modifiedByUser","modifiedAt","multiline","FileSizePipe","D_MLTEXT","D_DATETIME","D_FLOAT","D_DOUBLE","D_BOOLEAN","PropertyGroupTranslatorService","multiValuePipe","valueSeparator","translateToCardViewGroups","propertyGroups","propertyValues","propertyGroup","translatedPropertyGroup","translateArray","property","translate","propertyValue","checkECMTypeValidity","dataType","cardViewItemProperty","propertyDefinition","defaultValue","CardViewIntItemModel","CardViewFloatItemModel","CardViewDatetimeItemModel","CardViewBoolItemModel","multivalued","multiValued","ecmPropertyType","RECOGNISED_ECM_TYPES","MultiValuePipe","emptyGroup","getGroup","groupName","getProperty","propertyName","groupDefinition","convertObjectToArray","object","AspectOrientedConfigService","isGroupAllowed","isIncludeAllEnabled","reorganiseByConfig","aspects","groupAccumulator","aspectName","newGroup","getOrganisedPropertyGroup","organisedPropertyGroup","appendAllPreset","filterExcludedPreset","exclude","includeAll","aspectProperties","props","IndifferentConfigService","LayoutOrientedConfigService","getMatchingGroups","itemsGroup","layoutBlock","flattenItems","explodedItem","excludedConfig","includeAllProperty","accumulator","flattenedProperties","isArray","aspect","ContentMetadataConfigFactory","appConfigService","presetName","presetConfig","presets","DEFAULT_PRESET_NAME","INDIFFERENT_PRESET","createConfig","isLayoutOrientedPreset","isAspectOrientedPreset","freeze","isObject","x","PropertyDescriptorsService","load","groupNames","groupFetchStreams","defer","classesApi","getClass","convertToObject","propertyGroupsArray","ContentMetadataService","basicPropertiesService","contentMetadataConfigFactory","propertyGroupTranslatorService","propertyDescriptorsService","getBasicProperties","getGroupedProperties","groupedProperties","contentMetadataConfig_1","groups","iif","filterEmptyPreset","setTitleToNameIfNotSet","ContentMetadataComponent","contentMetadataService","cardViewUpdateService","nodesApiService","displayDefaultProperties","disposableNodeUpdate","itemUpdated$","saveNode","updatedNode","loadProperties","basicProperties$","groupedProperties$","nodeBody","changed","showGroup","displayValue","canExpandTheCard","canExpandProperties","CardViewUpdateService","ContentMetadataModule","PermissionDisplayModel","isInherited","authorityId","accessStatus","NodePermissionService","searchApiService","nodeService","getNodeRoles","retrieveSiteQueryBody","buildRetrieveSiteQueryBody","siteNodeList","siteName","getGroupMembersBySiteName","permissions","settable","updatePermissionRole","updatedPermissionRole","permissionBody","locallySet","updateNodePermissions","permissionList","nodeRoles","updateLocallySetPermissions","nodeRole","transformNodeToPermissionElement","duplicatedPermissions","getDuplicatedPermissions","duplicatePermissionMessage","nodeLocallySet","permissionListAdded","duplicatePermissions","duplicate","localPermission","isEqualPermission","oldPermission","newPermission","removePermission","permissionToRemove","getGroupMemberByGroupName","groupMemberPaging","displayResult","formattedRoleName","groupsApi","getGroupMembers","nodePath","PermissionListComponent","nodePermissionService","fetchNodePermissions","actualNode","getPermissionList","settableList","settableRoles","allPermissions","permissionElement","inherited","permissionInherited","saveNewRole","permissionRow","buildUpdatedPermission","newRole","permissionRole","NoPermissionTemplateComponent","InheritPermissionDirective","onInheritPermissionClicked","UPDATEPERMISSIONS","isInheritanceEnabled","(click)","AddPermissionDialogComponent","currentSelection","onAddClicked","confirm","NodePermissionDialogService","openAddPermissionDialog","confirm_1","updateNodePermissionByDialog","SearchPermissionConfigurationService","generateQueryBody","AddPermissionPanelComponent","selectedItems","EVERYONE","NodeEntry","cm:authorityName","isAlreadySelected","SearchConfigurationService","AddPermissionComponent","nodeApiService","isAddEnabled","applySelection","PermissionManagerModule","ShareDialogComponent","sharedLinksApiService","renditionService","minDate","isFileShared","isDisabled","sharedUrl","disable","skip","tap","updates","updateEntryExpiryDate","baseShareUrl","createSharedLinks","sharedId","updateForm","removeShare","deleteSharedLink","onSlideShareChange","openConfirmationDialog","closeOnNavigation","beforeClose","sharedLink","generateRenditionForNode","expiryDate","qshare:expiryDate","utc","local","SharedLinksApiService","RenditionsService","NodeSharedDirective","zone","isShared","shareNode","ContentNodeShareModule","forRoot","ngModule","TreeBaseNode","level","TreeViewService","nodeApi","getTreeNodes","nodePage","TreeViewDataSource","treeControl","treeViewService","dataChange","childrenSubscription","changeSubscription","treeNodes","dataNodes","connect","collectionViewer","expansionModel","added","expandTreeNodes","removed","reduceTreeNodes","viewChange","disconnect","expandNode","toggleNode","FlatTreeControl","TreeViewComponent","nodeClicked","getLevel","isExpandable","hasChild","nodeData","dataSource","previousValue","loadTreeNode","onNodeClicked","treeNode","TreeViewModule","TranslateModule","ContentModuleLazy","source","ContentModule","TRANSLATION_PROVIDER","ɵ0$2"],"mappings":"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","sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatIconModule,\n    MatCardModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatExpansionModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatSlideToggleModule,\n    MatRadioModule,\n    MatSliderModule,\n    MatTreeModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatChipsModule,\n        MatDialogModule,\n        MatIconModule,\n        MatCardModule,\n        MatInputModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatRippleModule,\n        MatMenuModule,\n        MatOptionModule,\n        MatExpansionModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatDatepickerModule,\n        MatSlideToggleModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatTreeModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry, NodePaging } from '@alfresco/js-api';\n\nexport class DocumentLoaderNode {\n    currentNode: NodeEntry;\n    children: NodePaging;\n\n    constructor(currentNode: NodeEntry, children: NodePaging) {\n        this.currentNode = currentNode;\n        this.children = children;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService,\n    LogService,\n    PaginationModel\n} from '@alfresco/adf-core';\n\nimport {\n    NodePaging,\n    PersonEntry,\n    SitePaging,\n    DeletedNodesPaging,\n    SearchRequest,\n    SharedLinkPaging,\n    FavoritePaging,\n    SiteMemberPaging,\n    SiteRolePaging\n} from '@alfresco/js-api';\nimport { Injectable } from '@angular/core';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomResourcesService {\n\n    private CREATE_PERMISSION = 'create';\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets files recently accessed by a user.\n     * @param personId ID of the user\n     * @param pagination Specifies how to paginate the results\n     * @param filters Specifies additional filters to apply (joined with **AND**)\n     * @returns List of nodes for the recently used files\n     */\n    getRecentFiles(personId: string, pagination: PaginationModel, filters?: string[]): Observable<NodePaging> {\n        const defaultFilter = [\n            'TYPE:\"content\"',\n            '-PNAME:\"0/wiki\"',\n            '-TYPE:\"app:filelink\"',\n            '-TYPE:\"cm:thumbnail\"',\n            '-TYPE:\"cm:failedThumbnail\"',\n            '-TYPE:\"cm:rating\"',\n            '-TYPE:\"dl:dataList\"',\n            '-TYPE:\"dl:todoList\"',\n            '-TYPE:\"dl:issue\"',\n            '-TYPE:\"dl:contact\"',\n            '-TYPE:\"dl:eventAgenda\"',\n            '-TYPE:\"dl:event\"',\n            '-TYPE:\"dl:task\"',\n            '-TYPE:\"dl:simpletask\"',\n            '-TYPE:\"dl:meetingAgenda\"',\n            '-TYPE:\"dl:location\"',\n            '-TYPE:\"fm:topic\"',\n            '-TYPE:\"fm:post\"',\n            '-TYPE:\"ia:calendarEvent\"',\n            '-TYPE:\"lnk:link\"'\n        ];\n\n        return new Observable((observer) => {\n            this.apiService.peopleApi.getPerson(personId)\n                .then((person: PersonEntry) => {\n                        const username = person.entry.id;\n                        const filterQueries = [\n                            { query: `cm:modified:[NOW/DAY-30DAYS TO NOW/DAY+1DAY]` },\n                            { query: `cm:modifier:${username} OR cm:creator:${username}` },\n                            { query: defaultFilter.join(' AND ') }\n                        ];\n\n                        if (filters && filters.length > 0) {\n                            filterQueries.push({\n                                query: filters.join()\n                            });\n                        }\n\n                        const query: SearchRequest = new SearchRequest({\n                            query: {\n                                query: '*',\n                                language: 'afts'\n                            },\n                            filterQueries,\n                            include: ['path', 'properties', 'allowableOperations'],\n                            sort: [{\n                                type: 'FIELD',\n                                field: 'cm:modified',\n                                ascending: false\n                            }],\n                            paging: {\n                                maxItems: pagination.maxItems,\n                                skipCount: pagination.skipCount\n                            }\n                        });\n                        return this.apiService.searchApi.search(query)\n                            .then((searchResult) => {\n                                    observer.next(searchResult);\n                                    observer.complete();\n                                },\n                                (err) => {\n                                    observer.error(err);\n                                    observer.complete();\n                                });\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets favorite files for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of favorite files\n     */\n    loadFavorites(pagination: PaginationModel, includeFields: string[] = []): Observable<NodePaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: includeFieldsRequest\n        };\n\n        return new Observable((observer) => {\n            this.apiService.favoritesApi.getFavorites('-me-', options)\n                .then((result: FavoritePaging) => {\n                        const page: FavoritePaging = {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { target } }: any) => ({\n                                        entry: target.file || target.folder\n                                    }))\n                                    .map(({ entry }: any) => {\n                                        entry.properties = {\n                                            'cm:title': entry.title,\n                                            'cm:description': entry.description\n                                        };\n                                        return { entry };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        };\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets sites that the current user is a member of.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadMemberSites(pagination: PaginationModel): Observable<SiteMemberPaging> {\n        const options = {\n            include: ['properties'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable((observer) => {\n            this.apiService.peopleApi.listSiteMembershipsForPerson('-me-', options)\n                .then((result: SiteRolePaging) => {\n                        const page: SiteMemberPaging = new SiteMemberPaging( {\n                            list: {\n                                entries: result.list.entries\n                                    .map(({ entry: { site } }: any) => {\n                                        site.allowableOperations = site.allowableOperations ? site.allowableOperations : [this.CREATE_PERMISSION];\n                                        site.name = site.name || site.title;\n                                        return {\n                                            entry: site\n                                        };\n                                    }),\n                                pagination: result.list.pagination\n                            }\n                        });\n\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets all sites in the repository.\n     * @param pagination Specifies how to paginate the results\n     * @returns List of sites\n     */\n    loadSites(pagination: PaginationModel): Observable<NodePaging> {\n        const options = {\n            include: ['properties', 'aspectNames'],\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return new Observable((observer) => {\n            this.apiService.sitesApi.getSites(options)\n                .then((page: SitePaging) => {\n                        page.list.entries.map(\n                            ({ entry }: any) => {\n                                entry.name = entry.name || entry.title;\n                                return { entry };\n                            }\n                        );\n                        observer.next(page);\n                        observer.complete();\n                    },\n                    (err) => {\n                        observer.error(err);\n                        observer.complete();\n                    });\n        }).pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Gets all items currently in the trash.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of deleted items\n     */\n    loadTrashcan(pagination: PaginationModel, includeFields: string[] = []): Observable<DeletedNodesPaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.nodesApi.getDeletedNodes(options))\n            .pipe(catchError((err) => this.handleError(err)));\n\n    }\n\n    /**\n     * Gets shared links for the current user.\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of shared links\n     */\n    loadSharedLinks(pagination: PaginationModel, includeFields: string[] = []): Observable<SharedLinkPaging> {\n        const includeFieldsRequest = this.getIncludesFields(includeFields);\n\n        const options = {\n            include: includeFieldsRequest,\n            maxItems: pagination.maxItems,\n            skipCount: pagination.skipCount\n        };\n\n        return from(this.apiService.sharedLinksApi.findSharedLinks(options))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Is the folder ID one of the well-known aliases?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is a well-known name, false otherwise\n     */\n    isCustomSource(folderId: string): boolean {\n        let isCustomSources = false;\n        const sources = ['-trashcan-', '-sharedlinks-', '-sites-', '-mysites-', '-favorites-', '-recent-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isCustomSources = true;\n        }\n\n        return isCustomSources;\n    }\n\n    /**\n     * Is the folder ID a \"-my\", \"-root-\", or \"-shared-\" alias?\n     * @param folderId Folder ID name to check\n     * @returns True if the ID is one of the supported sources, false otherwise\n     */\n    isSupportedSource(folderId: string): boolean {\n        let isSupportedSources = false;\n        const sources = ['-my-', '-root-', '-shared-'];\n\n        if (sources.indexOf(folderId) > -1) {\n            isSupportedSources = true;\n        }\n\n        return isSupportedSources;\n    }\n\n    /**\n     * Gets a folder's contents.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @param includeFields List of data field names to include in the results\n     * @returns List of items contained in the folder\n     */\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[] = []): any {\n        if (nodeId === '-trashcan-') {\n            return this.loadTrashcan(pagination, includeFields);\n        } else if (nodeId === '-sharedlinks-') {\n            return this.loadSharedLinks(pagination, includeFields);\n        } else if (nodeId === '-sites-') {\n            return this.loadSites(pagination);\n        } else if (nodeId === '-mysites-') {\n            return this.loadMemberSites(pagination);\n        } else if (nodeId === '-favorites-') {\n            return this.loadFavorites(pagination, includeFields);\n        } else if (nodeId === '-recent-') {\n            return this.getRecentFiles('-me-', pagination);\n        }\n    }\n\n    // TODO: remove it from here\n\n    /**\n     * Gets the contents of one of the well-known aliases in the form of node ID strings.\n     * @param nodeId ID of the target folder node\n     * @param pagination Specifies how to paginate the results\n     * @returns List of node IDs\n     */\n    getCorrespondingNodeIds(nodeId: string, pagination: PaginationModel = {}): Observable<string[]> {\n        if (this.isCustomSource(nodeId)) {\n\n            return this.loadFolderByNodeId(nodeId, pagination)\n                .pipe(map((result: any): string[] => {\n                    return result.list.entries.map((node: any): string => this.getIdFromEntry(node, nodeId));\n                }));\n\n        } else if (nodeId) {\n            // cases when nodeId is '-my-', '-root-' or '-shared-'\n            return from(this.apiService.nodesApi.getNode(nodeId)\n                .then((node) => [node.entry.id]));\n        }\n\n        return of([]);\n    }\n\n    /**\n     * Chooses the correct ID for a node entry.\n     * @param node Node object\n     * @param nodeId ID of the node object\n     * @returns ID value\n     */\n    getIdFromEntry(node: any, nodeId: string): string {\n        if (nodeId === '-sharedlinks-') {\n            return node.entry.nodeId;\n        } else if (nodeId === '-sites-' || nodeId === '-mysites-') {\n            return node.entry.guid;\n        } else if (nodeId === '-favorites-') {\n            return node.entry.targetGuid;\n        } else {\n            return node.entry.id;\n        }\n    }\n\n    /**\n     * Does the well-known alias have a corresponding node ID?\n     * @param nodeId Node to check\n     * @returns True if the alias has a corresponding node ID, false otherwise\n     */\n    hasCorrespondingNodeIds(nodeId: string): boolean {\n        return this.isCustomSource(nodeId) || this.isSupportedSource(nodeId);\n    }\n\n    private getIncludesFields(includeFields: string[]): string[] {\n        return ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n    }\n\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AlfrescoApiService, ContentService, LogService, PaginationModel\n} from '@alfresco/adf-core';\n\nimport { Injectable } from '@angular/core';\nimport { NodeEntry, NodePaging } from '@alfresco/js-api';\nimport { DocumentLoaderNode } from '../models/document-folder.model';\nimport { Observable, from, throwError, forkJoin } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { DocumentListLoader } from '../interfaces/document-list-loader.interface';\nimport { CustomResourcesService } from './custom-resources.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DocumentListService implements DocumentListLoader {\n\n    static ROOT_ID = '-root-';\n\n    constructor(private contentService: ContentService,\n                private apiService: AlfrescoApiService,\n                private logService: LogService,\n                private customResourcesService: CustomResourcesService) {\n    }\n\n    /**\n     * Deletes a node.\n     * @param nodeId ID of the node to delete\n     * @returns Empty response when the operation is complete\n     */\n    deleteNode(nodeId: string): Observable<any> {\n        return from(this.apiService.getInstance().nodes.deleteNode(nodeId));\n    }\n\n    /**\n     * Copy a node to destination node\n     *\n     * @param nodeId The id of the node to be copied\n     * @param targetParentId The id of the folder where the node will be copied\n     * @returns NodeEntry for the copied node\n     */\n    copyNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.copyNode(nodeId, { targetParentId })).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Moves a node to destination node.\n     *\n     * @param nodeId The id of the node to be moved\n     * @param targetParentId The id of the folder where the node will be moved\n     * @returns NodeEntry for the moved node\n     */\n    moveNode(nodeId: string, targetParentId: string) {\n        return from(this.apiService.getInstance().nodes.moveNode(nodeId, { targetParentId })).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets the folder node with the specified relative name path below the root node.\n     * @param folder Path to folder.\n     * @param opts Options.\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolder(folder: string, opts?: any, includeFields: string[] = []): Observable<NodePaging> {\n        let rootNodeId = DocumentListService.ROOT_ID;\n        if (opts && opts.rootFolderId) {\n            rootNodeId = opts.rootFolderId;\n        }\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const params: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        if (folder) {\n            params.relativePath = folder;\n        }\n\n        if (opts) {\n            if (opts.maxItems) {\n                params.maxItems = opts.maxItems;\n            }\n            if (opts.skipCount) {\n                params.skipCount = opts.skipCount;\n            }\n            if (opts.where) {\n                params.where = opts.where;\n            }\n        }\n\n        return from(this.apiService.getInstance().nodes.getNodeChildren(rootNodeId, params)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a node via its node ID.\n     * @param nodeId ID of the target node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return this.contentService.getNode(nodeId, opts);\n    }\n\n    /**\n     * Gets a folder node via its node ID.\n     * @param nodeId ID of the folder node\n     * @param includeFields Extra information to include (available options are \"aspectNames\", \"isLink\" and \"association\")\n     * @returns Details of the folder\n     */\n    getFolderNode(nodeId: string, includeFields: string[] = []): Observable<NodeEntry> {\n\n        const includeFieldsRequest = ['path', 'properties', 'allowableOperations', 'permissions', 'aspectNames', ...includeFields]\n            .filter((element, index, array) => index === array.indexOf(element));\n\n        const opts: any = {\n            includeSource: true,\n            include: includeFieldsRequest\n        };\n\n        return from(this.apiService.getInstance().nodes.getNode(nodeId, opts)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    isCustomSourceService(nodeId): boolean {\n        return this.customResourcesService.isCustomSource(nodeId);\n    }\n\n    loadFolderByNodeId(nodeId: string, pagination: PaginationModel, includeFields: string[], where?: string): Observable<DocumentLoaderNode> {\n        if (this.customResourcesService.isCustomSource(nodeId)) {\n            return this.customResourcesService.loadFolderByNodeId(nodeId, pagination, includeFields).pipe(\n                map((result: any) => new DocumentLoaderNode(null, result))\n            );\n        } else {\n            return this.retrieveDocumentNode(nodeId, pagination, includeFields, where);\n        }\n    }\n\n    private retrieveDocumentNode(nodeId: string, pagination: PaginationModel, includeFields: string[], where?: string): Observable<DocumentLoaderNode> {\n        return forkJoin(\n            this.getFolderNode(nodeId, includeFields),\n            this.getFolder(null, {\n                maxItems: pagination.maxItems,\n                skipCount: pagination.skipCount,\n                rootFolderId: nodeId,\n                where: where\n            }, includeFields)).pipe(\n                map((results) => new DocumentLoaderNode(results[0], results[1]))\n            );\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { Node } from '@alfresco/js-api';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\n\n@Component({\n    selector: 'adf-content-node-selector',\n    templateUrl: './content-node-selector.component.html',\n    styleUrls: ['./content-node-selector.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentNodeSelectorComponent {\n\n    buttonActionName: string;\n    chosenNode: Node[];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: ContentNodeSelectorComponentData) {\n        this.buttonActionName = data.actionName ? `NODE_SELECTOR.${data.actionName.toUpperCase()}` : 'NODE_SELECTOR.CHOOSE';\n    }\n\n    close() {\n        this.data.select.complete();\n    }\n\n    onSelect(nodeList: Node[]) {\n        this.chosenNode = nodeList;\n    }\n\n    onClick(): void {\n        this.data.select.next(this.chosenNode);\n        this.data.select.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport moment from 'moment-es6';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { NodeBodyLock, Node, NodeEntry } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-node-lock',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './node-lock.dialog.html'\n})\nexport class NodeLockDialogComponent implements OnInit {\n\n    form: FormGroup;\n    node: Node = null;\n    nodeName: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        public dialog: MatDialogRef<NodeLockDialogComponent>,\n        private alfrescoApi: AlfrescoApiService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n    }\n\n    ngOnInit() {\n        const { node } = this.data;\n        this.nodeName = node.name;\n\n        this.form = this.formBuilder.group({\n            isLocked: node.isLocked || false,\n            allowOwner: node.properties['cm:lockType'] === 'WRITE_LOCK',\n            isTimeLock: !!node.properties['cm:expiryDate'],\n            time: !!node.properties['cm:expiryDate'] ? moment(node.properties['cm:expiryDate']) : moment()\n        });\n    }\n\n    private get lockTimeInSeconds(): number {\n        if (this.form.value.isTimeLock) {\n            const duration = moment.duration(moment(this.form.value.time).diff(moment()));\n            return duration.asSeconds();\n        }\n\n        return 0;\n    }\n\n    private get nodeBodyLock(): NodeBodyLock {\n        return new NodeBodyLock({\n            'timeToExpire': this.lockTimeInSeconds,\n            'type': this.form.value.allowOwner ? 'ALLOW_OWNER_CHANGES' : 'FULL',\n            'lifetime': 'PERSISTENT'\n        });\n    }\n\n    private toggleLock(): Promise<NodeEntry> {\n        const { alfrescoApi: { nodesApi }, data: { node } } = this;\n\n        if (this.form.value.isLocked) {\n            return nodesApi.lockNode(node.id, this.nodeBodyLock);\n        }\n\n        return nodesApi.unlockNode(node.id);\n    }\n\n    submit(): void {\n        this.toggleLock()\n            .then((node: NodeEntry) => {\n                this.data.node.isLocked = this.form.value.isLocked;\n                this.dialog.close(node.entry);\n            })\n            .catch((error: any) => this.data.onError(error));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ContentService, ThumbnailService } from '@alfresco/adf-core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { ShareDataRow } from '../document-list/data/share-data-row.model';\nimport { Node, NodeEntry, SitePaging } from '@alfresco/js-api';\nimport { DataColumn, SitesService, TranslationService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { DocumentListService } from '../document-list/services/document-list.service';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { ContentNodeSelectorComponentData } from './content-node-selector.component-data.interface';\nimport { NodeLockDialogComponent } from '../dialogs/node-lock.dialog';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentNodeDialogService {\n    static nonDocumentSiteContent = [\n        'blog',\n        'calendar',\n        'dataLists',\n        'discussions',\n        'links',\n        'wiki'\n    ];\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private dialog: MatDialog,\n                private contentService: ContentService,\n                private documentListService: DocumentListService,\n                private siteService: SitesService,\n                private translation: TranslationService,\n                private thumbnailService: ThumbnailService) {\n    }\n\n    /**\n     * Opens a file browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((nodeEntry: NodeEntry) => {\n            return this.openUploadFileDialog('Choose', nodeEntry.entry);\n        }));\n    }\n\n    /**\n     * Opens a lock node dialog.\n     * @param contentEntry Node to lock\n     * @returns Error/status message (if any)\n     */\n    public openLockNodeDialog(contentEntry: Node): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        if (this.contentService.hasAllowableOperations(contentEntry, AllowableOperationsEnum.LOCK)) {\n            this.dialog.open(NodeLockDialogComponent, {\n                data: {\n                    node: contentEntry,\n                    onError: (error) => {\n                        this.error.emit(error);\n                        observable.error(error);\n                    }\n                },\n                width: '400px'\n            });\n        } else {\n            observable.error('OPERATION.FAIL.NODE.NO_PERMISSION');\n        }\n\n        return observable;\n    }\n\n    /**\n     * Opens a file browser at a chosen site location.\n     * @returns Information about the selected file(s)\n     */\n    openFileBrowseDialogBySite(): Observable<Node[]> {\n        return this.siteService.getSites().pipe(switchMap((response: SitePaging) => {\n            return this.openFileBrowseDialogByFolderId(response.list.entries[0].entry.guid);\n        }));\n    }\n\n    /**\n     * Opens a folder browser at a chosen site location.\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogBySite(): Observable<Node[]> {\n        return this.openFolderBrowseDialogByFolderId('-my-');\n    }\n\n    /**\n     * Opens a folder browser at a chosen folder location.\n     * @param folderNodeId ID of the folder to use\n     * @returns Information about the selected folder(s)\n     */\n    openFolderBrowseDialogByFolderId(folderNodeId: string): Observable<Node[]> {\n        return this.documentListService.getFolderNode(folderNodeId).pipe(switchMap((node: NodeEntry) => {\n            return this.openUploadFolderDialog('Choose', node.entry);\n        }));\n    }\n\n    /**\n     * Opens a dialog to copy or move an item to a new location.\n     * @param action Name of the action (eg, \"Copy\" or \"Move\") to show in the title\n     * @param contentEntry Item to be copied or moved\n     * @param permission Permission for the operation\n     * @param excludeSiteContent The site content that should be filtered out\n     * @returns Information about files that were copied/moved\n     */\n    openCopyMoveDialog(action: string, contentEntry: Node, permission?: string, excludeSiteContent?: string[]): Observable<Node[]> {\n        if (this.contentService.hasAllowableOperations(contentEntry, permission)) {\n\n            const select = new Subject<Node[]>();\n            select.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const title = this.getTitleTranslation(action, contentEntry.name);\n\n            const data: ContentNodeSelectorComponentData = {\n                title: title,\n                actionName: action,\n                currentFolderId: contentEntry.parentId,\n                imageResolver: this.imageResolver.bind(this),\n                where: '(isFolder=true)',\n                isSelectionValid: this.isCopyMoveSelectionValid.bind(this),\n                excludeSiteContent: excludeSiteContent || ContentNodeDialogService.nonDocumentSiteContent,\n                select: select\n            };\n\n            this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n\n            return select;\n        } else {\n            const errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            return throwError(errors);\n        }\n    }\n\n    /**\n     * Gets the translation of the dialog title.\n     * @param action Name of the action to display in the dialog title\n     * @param name Name of the item on which the action is being performed\n     * @returns Translated version of the title\n     */\n    getTitleTranslation(action: string, name: string): string {\n        return this.translation.instant(`NODE_SELECTOR.${action.toUpperCase()}_ITEM`, { name });\n    }\n\n    /**\n     * Opens a dialog to choose folders to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry  Item to upload\n     * @returns Information about the chosen folder(s)\n     */\n    openUploadFolderDialog(action: string, contentEntry: Node): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.hasAllowableOperationsOnNodeFolder.bind(this),\n            where: '(isFolder=true)',\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    /**\n     * Opens a dialog to choose a file to upload.\n     * @param action Name of the action to show in the title\n     * @param contentEntry Item to upload\n     * @returns Information about the chosen file(s)\n     */\n    openUploadFileDialog(action: string, contentEntry: Node): Observable<Node[]> {\n        const select = new Subject<Node[]>();\n        select.subscribe({\n            complete: this.close.bind(this)\n        });\n\n        const data: ContentNodeSelectorComponentData = {\n            title: `${action} '${contentEntry.name}' to ...`,\n            actionName: action,\n            currentFolderId: contentEntry.id,\n            imageResolver: this.imageResolver.bind(this),\n            isSelectionValid: this.isNodeFile.bind(this),\n            select: select\n        };\n\n        this.openContentNodeDialog(data, 'adf-content-node-selector-dialog', '630px');\n        return select;\n    }\n\n    private openContentNodeDialog(data: ContentNodeSelectorComponentData, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(ContentNodeSelectorComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    private imageResolver(row: ShareDataRow, col: DataColumn): string | null {\n        const entry: Node = row.node.entry;\n        if (!this.contentService.hasAllowableOperations(entry, 'create')) {\n            return this.thumbnailService.getMimeTypeIcon('disable/folder');\n        }\n\n        return null;\n    }\n\n    private isNodeFile(entry: Node): boolean {\n        return entry.isFile;\n    }\n\n    private hasAllowableOperationsOnNodeFolder(entry: Node): boolean {\n        return this.isNodeFolder(entry) && this.contentService.hasAllowableOperations(entry, 'create');\n    }\n\n    private isNodeFolder(entry: Node): boolean {\n        return entry.isFolder;\n    }\n\n    private isCopyMoveSelectionValid(entry: Node): boolean {\n        return this.hasEntityCreatePermission(entry) && !this.isSite(entry);\n    }\n\n    private hasEntityCreatePermission(entry: Node): boolean {\n        return this.contentService.hasAllowableOperations(entry, 'create');\n    }\n\n    private isSite(entry) {\n        return !!entry.guid || entry.nodeType === 'st:site' || entry.nodeType === 'st:sites';\n    }\n\n    /** Closes the currently open dialog. */\n    close() {\n        this.dialog.closeAll();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, Renderer2, HostListener, Input, AfterViewInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { AllowableOperationsEnum, ContentService } from '@alfresco/adf-core';\nimport { ContentNodeDialogService } from '../content-node-selector/content-node-dialog.service';\n\n@Directive({\n    selector: '[adf-node-lock]'\n})\nexport class NodeLockDirective implements AfterViewInit {\n\n    /** Node to lock/unlock. */\n    @Input('adf-node-lock')\n    node: Node;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.contentNodeDialogService.openLockNodeDialog(this.node);\n    }\n\n    constructor(\n        public element: ElementRef,\n        private renderer: Renderer2,\n        private contentService: ContentService,\n        private contentNodeDialogService: ContentNodeDialogService\n    ) {}\n\n    ngAfterViewInit() {\n        const hasAllowableOperations = this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.LOCK);\n        this.renderer.setProperty(this.element.nativeElement, 'disabled', !hasAllowableOperations);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { NodeLockDirective } from './node-lock.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        NodeLockDirective\n    ],\n    exports: [\n        NodeLockDirective\n    ]\n})\nexport class ContentDirectiveModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { RatingEntry, RatingBody } from '@alfresco/js-api';\nimport { from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RatingService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Gets the current user's rating for a node.\n     * @param nodeId Node to get the rating from\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @returns The rating value\n     */\n    getRating(nodeId: string, ratingType: any): Observable<RatingEntry | {}> {\n        return from(this.apiService.getInstance().core.ratingsApi.getRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Adds the current user's rating for a node.\n     * @param nodeId Target node for the rating\n     * @param ratingType Type of rating (can be \"likes\" or \"fiveStar\")\n     * @param vote Rating value (boolean for \"likes\", numeric 0..5 for \"fiveStar\")\n     * @returns Details about the rating, including the new value\n     */\n    postRating(nodeId: string, ratingType: string, vote: any): Observable<RatingEntry | {}> {\n        const ratingBody: RatingBody = new RatingBody({\n            'id': ratingType,\n            'myRating': vote\n        });\n        return from(this.apiService.getInstance().core.ratingsApi.rate(nodeId, ratingBody))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Removes the current user's rating for a node.\n     * @param nodeId Target node\n     * @param ratingType Type of rating to remove (can be \"likes\" or \"fiveStar\")\n     * @returns Null response indicating that the operation is complete\n     */\n    deleteRating(nodeId: string, ratingType: any): Observable<any> {\n        return from(this.apiService.getInstance().core.ratingsApi.removeRating(nodeId, ratingType))\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    private handleError(error: any): any {\n        console.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nimport { RatingEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-rating',\n    styleUrls: ['./rating.component.scss'],\n    templateUrl: './rating.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class RatingComponent implements OnChanges {\n\n    /** Identifier of the node to apply the rating to. */\n    @Input()\n    nodeId: string;\n\n    average: number = 0;\n\n    ratingType: string = 'fiveStar';\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    stars: Array<any> = [];\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        const ratingObserver = this.ratingService.getRating(this.nodeId, this.ratingType);\n\n        ratingObserver.subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    this.average = ratingEntry.entry.aggregate.average;\n                    this.calculateStars();\n                }\n            }\n        );\n\n        return ratingObserver;\n    }\n\n    calculateStars() {\n        this.stars = [];\n\n        for (let i = 0; i < 5; i++) {\n            if (i < this.average) {\n                this.stars.push({ fill: true });\n            } else {\n                this.stars.push({ fill: false });\n            }\n        }\n\n        this.changeVote.emit(this.average);\n    }\n\n    updateVote(vote: number) {\n        this.ratingService.postRating(this.nodeId, this.ratingType, vote).subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    if (this.average !== ratingEntry.entry.aggregate.average) {\n                        this.average = ratingEntry.entry.aggregate.average;\n                        this.calculateStars();\n                    }\n                }\n            }\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { RatingService } from './services/rating.service';\nimport { RatingEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-like',\n    styleUrls: ['./like.component.scss'],\n    templateUrl: './like.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class LikeComponent implements OnChanges {\n    /** Identifier of a node to apply likes to. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the \"vote\" gets changed. */\n    @Output()\n    changeVote = new EventEmitter();\n\n    likesCounter: number = 0;\n    ratingType: string = 'likes';\n    isLike: boolean = false;\n\n    constructor(private ratingService: RatingService) {\n    }\n\n    ngOnChanges() {\n        this.clean();\n\n        this.ratingService.getRating(this.nodeId, this.ratingType).subscribe(\n            (ratingEntry: RatingEntry) => {\n                if (ratingEntry.entry.aggregate) {\n                    this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;\n                    if (ratingEntry.entry.ratedAt) {\n                        this.isLike = true;\n                    }\n                }\n            }\n        );\n    }\n\n    likeClick() {\n        if (this.isLike) {\n            this.ratingService.deleteRating(this.nodeId, this.ratingType).subscribe(\n                () => {\n                    this.likesCounter -= 1;\n                    this.isLike = false;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        } else {\n            this.ratingService.postRating(this.nodeId, this.ratingType, true).subscribe(\n                (ratingEntry: RatingEntry) => {\n                    this.likesCounter = ratingEntry.entry.aggregate.numberOfRatings;\n                    this.isLike = true;\n                    this.changeVote.emit(this.likesCounter);\n                }\n            );\n        }\n    }\n\n    clean() {\n        this.isLike = false;\n        this.likesCounter = 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { LikeComponent } from './like.component';\nimport { RatingComponent } from './rating.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    exports: [\n        RatingComponent,\n        LikeComponent\n    ],\n    declarations: [\n        RatingComponent,\n        LikeComponent\n    ]\n})\nexport class SocialModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { EventEmitter, Injectable, Output } from '@angular/core';\nimport { Observable, from, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { TagBody,  TagPaging, TagEntry } from '@alfresco/js-api';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TagService {\n\n    /** Emitted when tag information is updated. */\n    @Output()\n    refresh = new EventEmitter();\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    /**\n     * Gets a list of tags added to a node.\n     * @param nodeId ID of the target node\n     * @returns TagPaging object (defined in JS-API) containing the tags\n     */\n    getTagsByNodeId(nodeId: string): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getNodeTags(nodeId)).pipe(\n            catchError((err) => this.handleError(err))\n        );\n    }\n\n    /**\n     * Gets a list of all the tags already defined in the repository.\n     * @param opts Options supported by JS-API\n     * @returns TagPaging object (defined in JS-API) containing the tags\n     */\n    getAllTheTags(opts?: any): Observable<TagPaging> {\n        return from(this.apiService.getInstance().core.tagsApi.getTags(opts))\n            .pipe(catchError((err) => this.handleError(err)));\n    }\n\n    /**\n     * Adds a tag to a node.\n     * @param nodeId ID of the target node\n     * @param tagName Name of the tag to add\n     * @returns TagEntry object (defined in JS-API) with details of the new tag\n     */\n    addTag(nodeId: string, tagName: string): Observable<TagEntry> {\n        const tagBody = new TagBody();\n        tagBody.tag = tagName;\n\n        const observableAdd = from(this.apiService.getInstance().core.tagsApi.addTag(nodeId, tagBody));\n\n        observableAdd.subscribe((tagEntry: TagEntry) => {\n            this.refresh.emit(tagEntry);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return observableAdd;\n    }\n\n    /**\n     * Removes a tag from a node.\n     * @param nodeId ID of the target node\n     * @param tag Name of the tag to remove\n     * @returns Null object when the operation completes\n     */\n    removeTag(nodeId: string, tag: string): Observable<any> {\n        const observableRemove = from(this.apiService.getInstance().core.tagsApi.removeTag(nodeId, tag));\n\n        observableRemove.subscribe((data) => {\n            this.refresh.emit(data);\n        }, (err) => {\n            this.handleError(err);\n        });\n\n        return observableRemove;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return throwError(error || 'Server error');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { TranslationService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, OnDestroy, OnInit } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { Subscription } from 'rxjs';\nimport { TagPaging } from '@alfresco/js-api';\n\n/**\n *\n * This component, provide a list of the tags relative a node with actions button to add or remove new tag\n */\n\n@Component({\n    selector: 'adf-tag-node-actions-list',\n    templateUrl: './tag-actions.component.html',\n    styleUrls: ['./tag-actions.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagActionsComponent implements OnChanges, OnInit, OnDestroy {\n\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a tag is added successfully. */\n    @Output()\n    successAdd: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when an action is chosen. */\n    @Output()\n    result = new EventEmitter();\n\n    newTagName: string;\n    tagsEntries: any;\n    errorMsg: string;\n    disableAddTag: boolean = true;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(private tagService: TagService, private translateService: TranslationService) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.tagService.refresh.subscribe(() => {\n                this.refreshTag();\n            })\n        );\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging: TagPaging) => {\n                this.tagsEntries = tagPaging.list.entries;\n                this.disableAddTag = false;\n                this.result.emit(this.tagsEntries);\n            }, () => {\n                this.tagsEntries = null;\n                this.disableAddTag = true;\n                this.result.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    addTag() {\n        if (this.searchTag(this.newTagName)) {\n            this.translateService.get('TAG.MESSAGES.EXIST').subscribe((error) => {\n                this.errorMsg = error;\n            });\n            this.error.emit(this.errorMsg);\n        } else {\n            this.tagService.addTag(this.nodeId, this.newTagName).subscribe(() => {\n                this.newTagName = '';\n                this.successAdd.emit(this.nodeId);\n            });\n        }\n    }\n\n    searchTag(searchTagName: string) {\n        if (this.tagsEntries) {\n            return this.tagsEntries.find((currentTag) => {\n                return (searchTagName === currentTag.entry.tag);\n            });\n        }\n    }\n\n    cleanErrorMsg() {\n        this.errorMsg = '';\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { PaginationModel } from '@alfresco/adf-core';\n\n/**\n * This component provide a list of all the tag inside the ECM\n */\n@Component({\n    selector: 'adf-tag-list',\n    templateUrl: './tag-list.component.html',\n    styleUrls: ['./tag-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagListComponent implements OnInit {\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    result = new EventEmitter();\n\n    /**\n     * Array of tags that are displayed\n     */\n    tagsEntries: any = [];\n\n    /**\n     * Number of items per iteration\n     */\n    size: number = 10;\n\n    defaultPagination: PaginationModel;\n    pagination: PaginationModel;\n\n    isLoading = false;\n    isSizeMinimum = true;\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n\n        this.defaultPagination = {\n            skipCount: 0,\n            maxItems: this.size,\n            hasMoreItems: false\n        };\n\n        this.pagination = this.defaultPagination;\n\n        this.tagService.refresh.subscribe(() => {\n            this.tagsEntries = [];\n            this.refreshTag(this.defaultPagination);\n        });\n    }\n\n    ngOnInit() {\n        return this.refreshTag(this.defaultPagination);\n    }\n\n    refreshTag(opts?: any) {\n        this.tagService.getAllTheTags(opts).subscribe((tags: any) => {\n            this.tagsEntries = this.tagsEntries.concat(tags.list.entries);\n            this.pagination = tags.list.pagination;\n            this.result.emit(this.tagsEntries);\n            this.isLoading = false;\n        });\n    }\n\n    loadMoreTags() {\n        if (this.pagination.hasMoreItems) {\n            this.isLoading = true;\n            this.isSizeMinimum = false;\n\n            this.refreshTag({\n                skipCount: this.pagination.skipCount + this.pagination.count,\n                maxItems: this.size\n            });\n        }\n    }\n\n    loadLessTags() {\n        this.isSizeMinimum = false;\n        this.tagsEntries = this.tagsEntries.slice(0, this.tagsEntries.length - this.pagination.count);\n        this.pagination.skipCount = this.pagination.skipCount - this.pagination.count;\n        this.pagination.hasMoreItems = true;\n\n        if (this.tagsEntries.length <= this.size) {\n            this.isSizeMinimum = true;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\nimport { TagService } from './services/tag.service';\nimport { TagPaging } from '@alfresco/js-api';\n\n/**\n *\n * This component, ShowNodeTag a list of the tag on relative a node\n */\n\n@Component({\n    selector: 'adf-tag-node-list',\n    templateUrl: './tag-node-list.component.html',\n    styleUrls: ['./tag-node-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TagNodeListComponent implements OnChanges {\n    /** The identifier of a node. */\n    @Input()\n    nodeId: string;\n\n    /** Show delete button */\n    @Input()\n    showDelete = true;\n\n    tagsEntries: any;\n\n    /** Emitted when a tag is selected. */\n    @Output()\n    results = new EventEmitter();\n\n    /**\n     * Constructor\n     * @param tagService\n     */\n    constructor(private tagService: TagService) {\n        this.tagService.refresh.subscribe(() => {\n            this.refreshTag();\n        });\n    }\n\n    ngOnChanges() {\n        return this.refreshTag();\n    }\n\n    refreshTag() {\n        if (this.nodeId) {\n            this.tagService.getTagsByNodeId(this.nodeId).subscribe((tagPaging: TagPaging) => {\n                this.tagsEntries = tagPaging.list.entries;\n                this.results.emit(this.tagsEntries);\n            });\n        }\n    }\n\n    removeTag(tag: string) {\n        this.tagService.removeTag(this.nodeId, tag).subscribe(() => {\n            this.refreshTag();\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MaterialModule } from '../material.module';\nimport { TagActionsComponent } from './tag-actions.component';\nimport { TagListComponent } from './tag-list.component';\nimport { TagNodeListComponent } from './tag-node-list.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ],\n    declarations: [\n        TagActionsComponent,\n        TagListComponent,\n        TagNodeListComponent\n    ]\n})\nexport class TagModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ObjectDataTableAdapter } from '@alfresco/adf-core';\nimport { AlfrescoApiService, LogService } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\n\n/**\n * <adf-webscript-get [scriptPath]=\"string\"\n *                         [scriptArgs]=\"Object\"\n *                         [contextRoot]=\"string\"\n *                         [servicePath]=\"string\"\n *                         [contentType]=\"JSON|HTML|DATATABLE\"\n *                         (success)=\"customMethod($event)>\n * </adf-webscript-get>\n *\n * This component, provide a get webscript viewer\n *\n * @InputParam {string} scriptPath path to Web Script (as defined by Web Script)\n * @InputParam {Object} scriptArgs arguments to pass to Web Script\n * @InputParam {string} contextRoot path where application is deployed default value 'alfresco'\n * @InputParam {string} servicePath path where Web Script service is mapped default value 'service'\n * @InputParam {string} contentType JSON | HTML | DATATABLE | TEXT\n *\n * @Output - success - The event is emitted when the data are received\n *\n */\n@Component({\n    selector: 'adf-webscript-get',\n    templateUrl: 'webscript.component.html'\n})\nexport class WebscriptComponent implements OnChanges {\n\n    /** (required) Path to the webscript (as defined by webscript). */\n    @Input()\n    scriptPath: string;\n\n    /** Arguments to pass to the webscript. */\n    @Input()\n    scriptArgs: any;\n\n    /** Toggles whether to show or hide the data. */\n    @Input()\n    showData: boolean = true;\n\n    /** Path where the application is deployed */\n    @Input()\n    contextRoot: string = 'alfresco';\n\n    /** Path that the webscript service is mapped to. */\n    @Input()\n    servicePath: string = 'service';\n\n    /** Content type to interpret the data received from the webscript.\n     * Can be \"JSON\" , \"HTML\" , \"DATATABLE\" or \"TEXT\"\n     */\n    @Input()\n    contentType: string = 'TEXT';\n\n    /** Emitted when the operation succeeds. You can get the plain data from\n     * the webscript through the **success** event parameter and use it as you\n     * need in your application.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    data: any = undefined;\n    showError: boolean = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    ngOnChanges(changes) {\n        if (this.showData) {\n            this.clean();\n        }\n\n        return new Promise((resolve, reject) => {\n            this.apiService.getInstance().webScript.executeWebScript('GET', this.scriptPath, this.scriptArgs, this.contextRoot, this.servicePath).then((webScriptData) => {\n\n                this.data = webScriptData;\n\n                if (this.showData) {\n                    if (this.contentType === 'DATATABLE') {\n                        this.data = this.showDataAsDataTable(webScriptData);\n                    }\n                }\n\n                this.success.emit(this.data);\n\n                resolve();\n            }, (error) => {\n                this.logService.log('Error' + error);\n                reject();\n            });\n        });\n    }\n\n    /**\n     * show the data in a ng2-alfresco-datatable\n     *\n     * @param data\n     *\n     * @returns the data as datatable\n     */\n    showDataAsDataTable(data: any) {\n        const datatableData: any = null;\n        try {\n\n            if (!data.schema) {\n                data.schema = ObjectDataTableAdapter.generateSchema(data.data);\n            }\n\n            if (data.schema && data.schema.length > 0) {\n                this.data = new ObjectDataTableAdapter(data.data, data.schema);\n            }\n\n        } catch (error) {\n            this.logService.error('error during the cast as datatable');\n        }\n\n        return datatableData;\n    }\n\n    clean() {\n        this.data = undefined;\n    }\n\n    isDataTableContent() {\n        return this.contentType === 'DATATABLE';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { WebscriptComponent } from './webscript.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        WebscriptComponent\n    ],\n    declarations: [\n        WebscriptComponent\n    ]\n})\nexport class WebScriptModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DataRow, ObjectUtils, ThumbnailService, ContentService } from '@alfresco/adf-core';\nimport { MinimalNode, NodeEntry } from '@alfresco/js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\n\nexport class ShareDataRow implements DataRow {\n\n    static ERR_OBJECT_NOT_FOUND: string = 'Object source not found';\n\n    cache: { [key: string]: any } = {};\n    isSelected: boolean = false;\n    isDropTarget: boolean;\n    cssClass: string = '';\n\n    get node(): NodeEntry {\n        return this.obj;\n    }\n\n    set node(value: NodeEntry) {\n        this.obj = value;\n        this.cache = {};\n    }\n\n    constructor(private obj: NodeEntry,\n                private contentService: ContentService,\n                private permissionsStyle: PermissionStyleModel[],\n                private thumbnailService?: ThumbnailService) {\n        if (!obj) {\n            throw new Error(ShareDataRow.ERR_OBJECT_NOT_FOUND);\n        }\n\n        this.isDropTarget = this.isFolderAndHasPermissionToUpload(obj);\n\n        if (permissionsStyle) {\n            this.cssClass = this.getPermissionClass(obj);\n        }\n    }\n\n    getPermissionClass(nodeEntity: NodeEntry): string {\n        let permissionsClasses = '';\n\n        this.permissionsStyle.forEach((currentPermissionsStyle: PermissionStyleModel) => {\n\n            if (this.applyPermissionStyleToFolder(nodeEntity.entry, currentPermissionsStyle) || this.applyPermissionStyleToFile(nodeEntity.entry, currentPermissionsStyle)) {\n\n                if (this.contentService.hasAllowableOperations(nodeEntity.entry, currentPermissionsStyle.permission)) {\n                    permissionsClasses += ` ${currentPermissionsStyle.css}`;\n                }\n            }\n\n        });\n\n        return permissionsClasses;\n    }\n\n    private applyPermissionStyleToFile(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFile && node.isFile);\n    }\n\n    private applyPermissionStyleToFolder(node: MinimalNode, currentPermissionsStyle: PermissionStyleModel): boolean {\n        return (currentPermissionsStyle.isFolder && node.isFolder);\n    }\n\n    isFolderAndHasPermissionToUpload(nodeEntry: NodeEntry): boolean {\n        return this.isFolder(nodeEntry) && this.contentService.hasAllowableOperations(nodeEntry.entry, 'create');\n    }\n\n    isFolder(nodeEntry: NodeEntry): boolean {\n        return nodeEntry.entry && nodeEntry.entry.isFolder;\n    }\n\n    cacheValue(key: string, value: any): any {\n        this.cache[key] = value;\n        return value;\n    }\n\n    getValue(key: string): any {\n        if (this.cache[key] !== undefined) {\n            return this.cache[key];\n        }\n        return ObjectUtils.getValue(this.obj.entry, key);\n    }\n\n    imageErrorResolver(event: Event): any {\n        if (this.obj.entry.content) {\n            return this.thumbnailService.getMimeTypeIcon(this.obj.entry.content.mimeType);\n        }\n    }\n\n    hasValue(key: string): boolean {\n        return this.getValue(key) !== undefined;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    DataColumn,\n    DataRow,\n    DataSorting,\n    DataTableAdapter,\n    ThumbnailService,\n    ContentService\n} from '@alfresco/adf-core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { ShareDataRow } from './share-data-row.model';\nimport { NodeEntry } from '@alfresco/js-api/src/api/content-rest-api/model/nodeEntry';\nimport { RowFilter } from './row-filter.model';\n\nexport class ShareDataTableAdapter implements DataTableAdapter {\n\n    ERR_ROW_NOT_FOUND: string = 'Row not found';\n    ERR_COL_NOT_FOUND: string = 'Column not found';\n\n    private _sortingMode: string;\n    private sorting: DataSorting;\n    private rows: DataRow[];\n    private columns: DataColumn[];\n\n    private filter: RowFilter;\n    private imageResolver: any;\n\n    thumbnails: boolean = false;\n    permissionsStyle: PermissionStyleModel[];\n    selectedRow: DataRow;\n\n    set sortingMode(value: string) {\n        let newValue = (value || 'client').toLowerCase();\n        if (newValue !== 'client' && newValue !== 'server') {\n            newValue = 'client';\n        }\n        this._sortingMode = newValue;\n    }\n\n    get sortingMode(): string {\n        return this._sortingMode;\n    }\n\n    constructor(private thumbnailService: ThumbnailService,\n                private contentService: ContentService,\n                schema: DataColumn[] = [],\n                sorting?: DataSorting,\n                sortingMode: string = 'client') {\n        this.rows = [];\n        this.columns = schema || [];\n        this.sorting = sorting;\n        this.sortingMode = sortingMode;\n    }\n\n    getRows(): Array<DataRow> {\n        return this.rows;\n    }\n\n    // TODO: disable this api\n    setRows(rows: Array<DataRow>) {\n        this.rows = rows || [];\n        this.sort();\n    }\n\n    getColumns(): Array<DataColumn> {\n        return this.columns;\n    }\n\n    setColumns(columns: Array<DataColumn>) {\n        this.columns = columns || [];\n    }\n\n    getValue(row: DataRow, col: DataColumn): any {\n        if (!row) {\n            throw new Error(this.ERR_ROW_NOT_FOUND);\n        }\n        if (!col) {\n            throw new Error(this.ERR_COL_NOT_FOUND);\n        }\n        const dataRow: ShareDataRow = <ShareDataRow> row;\n        const value: any = row.getValue(col.key);\n        if (dataRow.cache[col.key] !== undefined) {\n            return dataRow.cache[col.key];\n        }\n\n        if (col.key === '$thumbnail') {\n\n            if (this.imageResolver) {\n                const resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n\n            const node = (<ShareDataRow> row).node;\n\n            if (node.entry.isFolder) {\n                return this.getFolderIcon(node);\n            }\n\n            if (node.entry.isFile) {\n                if (this.thumbnails) {\n                    return this.thumbnailService.getDocumentThumbnailUrl(node);\n                }\n            }\n\n            if (node.entry.content) {\n                const mimeType = node.entry.content.mimeType;\n                if (mimeType) {\n                    return this.thumbnailService.getMimeTypeIcon(mimeType);\n                }\n            }\n\n            return this.thumbnailService.getDefaultMimeTypeIcon();\n        }\n\n        if (col.type === 'image') {\n\n            if (this.imageResolver) {\n                const resolved = this.imageResolver(row, col);\n                if (resolved) {\n                    return resolved;\n                }\n            }\n        }\n\n        return dataRow.cacheValue(col.key, value);\n    }\n\n    getSorting(): DataSorting {\n        return this.sorting;\n    }\n\n    setSorting(sorting: DataSorting): void {\n        this.sorting = sorting;\n\n        this.sortRows(this.rows, this.sorting);\n    }\n\n    sort(key?: string, direction?: string): void {\n        const sorting = this.sorting || new DataSorting();\n        if (key) {\n            sorting.key = key;\n            sorting.direction = direction || 'asc';\n        }\n        this.setSorting(sorting);\n    }\n\n    setFilter(filter: RowFilter) {\n        this.filter = filter;\n    }\n\n    setImageResolver(resolver: any) {\n        this.imageResolver = resolver;\n    }\n\n    private getFolderIcon(node: any) {\n        if (this.isSmartFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('smartFolder');\n        } else if (this.isRuleFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('ruleFolder');\n        } else if (this.isALinkFolder(node)) {\n            return this.thumbnailService.getMimeTypeIcon('linkFolder');\n        } else {\n            return this.thumbnailService.getMimeTypeIcon('folder');\n        }\n    }\n\n    isSmartFolder(node: any) {\n        const nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('smf:customConfigSmartFolder') > -1 ||\n            (nodeAspects.indexOf('smf:systemConfigSmartFolder') > -1);\n    }\n\n    isRuleFolder(node: any) {\n        const nodeAspects = this.getNodeAspectNames(node);\n        return nodeAspects.indexOf('rule:rules') > -1 ||\n            (nodeAspects.indexOf('rule:rules') > -1);\n    }\n\n    isALinkFolder(node: any) {\n        const nodeType = node.entry ? node.entry.nodeType : node.nodeType;\n        return nodeType === 'app:folderlink';\n    }\n\n    private getNodeAspectNames(node: any): any[] {\n        return node.entry && node.entry.aspectNames ? node.entry.aspectNames : node.aspectNames ? node.aspectNames : [];\n    }\n\n    private sortRows(rows: DataRow[], sorting: DataSorting) {\n        if (this.sortingMode === 'server') {\n            return;\n        }\n\n        const options: Intl.CollatorOptions = {};\n\n        if (sorting && sorting.key && rows && rows.length > 0) {\n\n            if (sorting.key.includes('sizeInBytes') || sorting.key === 'name') {\n                options.numeric = true;\n            }\n\n            rows.sort((a: ShareDataRow, b: ShareDataRow) => {\n                if (a.node.entry.isFolder !== b.node.entry.isFolder) {\n                    return a.node.entry.isFolder ? -1 : 1;\n                }\n\n                let left = a.getValue(sorting.key);\n                if (left) {\n                    left = (left instanceof Date) ? left.valueOf().toString() : left.toString();\n                } else {\n                    left = '';\n                }\n\n                let right = b.getValue(sorting.key);\n                if (right) {\n                    right = (right instanceof Date) ? right.valueOf().toString() : right.toString();\n                } else {\n                    right = '';\n                }\n\n                return sorting.direction === 'asc'\n                    ? left.localeCompare(right, undefined, options)\n                    : right.localeCompare(left, undefined, options);\n            });\n        }\n    }\n\n    public loadPage(nodePaging: NodePaging, merge: boolean = false) {\n        let shareDataRows: ShareDataRow[] = [];\n\n        if (nodePaging && nodePaging.list) {\n            const nodeEntries: NodeEntry[] = nodePaging.list.entries;\n            if (nodeEntries && nodeEntries.length > 0) {\n                shareDataRows = nodeEntries.map((item) => new ShareDataRow(item, this.contentService, this.permissionsStyle, this.thumbnailService));\n\n                if (this.filter) {\n                    shareDataRows = shareDataRows.filter(this.filter);\n                }\n\n                if (this.sortingMode !== 'server') {\n                    // Sort by first sortable or just first column\n                    if (this.columns && this.columns.length > 0) {\n                        const sorting = this.getSorting();\n                        if (sorting) {\n                            this.sortRows(shareDataRows, sorting);\n                        } else {\n                            const sortable = this.columns.filter((c) => c.sortable);\n                            if (sortable.length > 0) {\n                                this.sort(sortable[0].key, 'asc');\n                            } else {\n                                this.sort(this.columns[0].key, 'asc');\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (merge) {\n            const listPrunedDuplicate = shareDataRows.filter((elementToFilter: any) => {\n                const isPresent = this.rows.find((currentRow: any) => {\n                    return currentRow.obj.entry.id === elementToFilter.obj.entry.id;\n                });\n\n                return !isPresent;\n            });\n\n            this.rows = this.rows.concat(listPrunedDuplicate);\n        } else {\n            this.rows = shareDataRows;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport let presetsDefaultModel = {\n    '-trashcan-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'archivedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'archivedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.DELETED_BY',\n            sortable: true\n        }\n    ],\n    '-sites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-mysites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'title',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'visibility',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.STATUS',\n            sortable: true\n        }\n    ],\n    '-favorites-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ],\n    '-recent-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        }\n    ],\n    '-sharedlinks-': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'path',\n            type: 'location',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.LOCATION',\n            cssClass: 'ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        },\n        {\n            key: 'sharedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SHARED_BY',\n            sortable: true\n        }\n    ],\n    'default': [\n        {\n            key: '$thumbnail',\n            type: 'image',\n            srTitle: 'ADF-DOCUMENT-LIST.LAYOUT.THUMBNAIL',\n            sortable: false\n        },\n        {\n            key: 'name',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.NAME',\n            cssClass: 'full-width ellipsis-cell',\n            sortable: true\n        },\n        {\n            key: 'content.sizeInBytes',\n            type: 'fileSize',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.SIZE',\n            sortable: true\n        },\n        {\n            key: 'modifiedAt',\n            type: 'date',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_ON',\n            format: 'timeAgo',\n            sortable: true\n        },\n        {\n            key: 'modifiedByUser.displayName',\n            type: 'text',\n            title: 'ADF-DOCUMENT-LIST.LAYOUT.MODIFIED_BY',\n            sortable: true\n        }\n    ]\n};\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ContentActionModel {\n    icon: string;\n    title: string;\n    handler: ContentActionHandler;\n    execute: Function;\n    target: string;\n    permission: string;\n    disableWithNoPermission: boolean = false;\n    disabled: boolean | Function = false;\n    visible: boolean | Function = true;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.icon = obj.icon;\n            this.title = obj.title;\n            this.handler = obj.handler;\n            this.execute = obj.execute;\n            this.target = obj.target;\n            this.permission = obj.permission;\n            this.disableWithNoPermission = obj.disableWithNoPermission;\n\n            if (obj.hasOwnProperty('disabled')) {\n                this.disabled = obj.disabled;\n            }\n\n            if (obj.hasOwnProperty('visible')) {\n                this.visible = obj.visible;\n            }\n        }\n    }\n}\n\nexport enum ContentActionTarget {\n    Document = 'document',\n    Folder = 'folder',\n    All = 'all'\n}\n\nexport type ContentActionHandler = (obj: any, target?: any, permission?: string) => any;\n\nexport class DocumentActionModel extends ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'document';\n    }\n}\n\nexport class FolderActionModel extends  ContentActionModel {\n    constructor(json?: any)  {\n        super(json);\n        this.target = 'folder';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from '@alfresco/adf-core';\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nexport class NodeEntityEvent extends BaseEvent<NodeEntry> {\n\n    value: NodeEntry;\n\n    defaultPrevented: boolean;\n\n    constructor(nodeEntry: NodeEntry) {\n        super();\n        this.value = nodeEntry;\n    }\n}\n\nexport class NodeEntryEvent extends BaseEvent<Node> {\n\n    value: Node;\n\n    defaultPrevented: boolean;\n\n    constructor(node: Node) {\n        super();\n        this.value = node;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:rxjs-no-subject-value */\n\nimport {\n    AfterContentInit, Component, ContentChild, ElementRef, EventEmitter, HostListener, Input, NgZone,\n    OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    ContentService,\n    DataCellEvent,\n    DataColumn,\n    DataRowActionEvent,\n    DataSorting,\n    DataTableComponent,\n    DisplayMode,\n    ObjectDataColumn,\n    PaginatedComponent,\n    AppConfigService,\n    DataColumnListComponent,\n    UserPreferencesService,\n    PaginationModel,\n    ThumbnailService,\n    CustomLoadingContentTemplateDirective,\n    CustomNoPermissionTemplateDirective,\n    CustomEmptyContentTemplateDirective,\n    RequestPaginationModel,\n    AlfrescoApiService,\n    UserPreferenceValues,\n    LockService\n} from '@alfresco/adf-core';\n\nimport { Node, NodeEntry, NodePaging, Pagination } from '@alfresco/js-api';\nimport { Subject, BehaviorSubject, Subscription, of } from 'rxjs';\nimport { ShareDataRow } from './../data/share-data-row.model';\nimport { ShareDataTableAdapter } from './../data/share-datatable-adapter';\nimport { presetsDefaultModel } from '../models/preset.model';\nimport { ContentActionModel } from './../models/content-action.model';\nimport { PermissionStyleModel } from './../models/permissions-style.model';\nimport { NodeEntityEvent, NodeEntryEvent } from './node.event';\nimport { NavigableComponentInterface } from '../../breadcrumb/navigable-component.interface';\nimport { RowFilter } from '../data/row-filter.model';\nimport { DocumentListService } from '../services/document-list.service';\nimport { DocumentLoaderNode } from '../models/document-folder.model';\n\n@Component({\n    selector: 'adf-document-list',\n    styleUrls: ['./document-list.component.scss'],\n    templateUrl: './document-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: '.adf-document-list' }\n})\nexport class DocumentListComponent implements OnInit, OnChanges, OnDestroy, AfterContentInit, PaginatedComponent, NavigableComponentInterface {\n\n    static SINGLE_CLICK_NAVIGATION: string = 'click';\n    static DOUBLE_CLICK_NAVIGATION: string = 'dblclick';\n\n    DEFAULT_PAGINATION: Pagination = new Pagination({\n        hasMoreItems: false,\n        skipCount: 0,\n        maxItems: 25,\n        totalItems: 0\n    });\n\n    @ContentChild(DataColumnListComponent)\n    columnList: DataColumnListComponent;\n\n    @ContentChild(CustomLoadingContentTemplateDirective)\n    customLoadingContent: CustomLoadingContentTemplateDirective;\n\n    @ContentChild(CustomNoPermissionTemplateDirective)\n    customNoPermissionsTemplate: CustomNoPermissionTemplateDirective;\n\n    @ContentChild(CustomEmptyContentTemplateDirective)\n    customNoContentTemplate: CustomEmptyContentTemplateDirective;\n\n    /** Include additional information about the node in the server request. For example: association, isLink, isLocked and others. */\n    @Input()\n    includeFields: string[];\n\n    /**\n     * Filters the Node list using the *where* condition of the REST API\n     * (for example, isFolder=true). See the REST API documentation for more information.\n     */\n    @Input()\n    where: string;\n\n    /** Change the display mode of the table. Can be \"list\" or \"gallery\". */\n    @Input()\n    display: string = DisplayMode.List;\n\n    /** Define a set of CSS styles to apply depending on the permission\n     * of the user on that node. See the Permission Style model\n     * page for further details and examples.\n     */\n    @Input()\n    permissionsStyle: PermissionStyleModel[] = [];\n\n    /** The default route for all the location-based columns (if declared). */\n    @Input()\n    locationFormat: string = '/';\n\n    /** Toggles navigation to folder content or file preview */\n    @Input()\n    navigate: boolean = true;\n\n    /** Toggles the header */\n    @Input()\n    showHeader: boolean = true;\n\n    /** User interaction for folder navigation or file preview.\n     * Valid values are \"click\" and \"dblclick\". Default value: \"dblclick\"\n     */\n    @Input()\n    navigationMode: string = DocumentListComponent.DOUBLE_CLICK_NAVIGATION; // click|dblclick\n\n    /** Show document thumbnails rather than icons */\n    @Input()\n    thumbnails: boolean = false;\n\n    /** Row selection mode. Can be null, `single` or `multiple`. For `multiple` mode,\n     * you can use Cmd (macOS) or Ctrl (Win) modifier key to toggle selection for multiple rows.\n     */\n    @Input()\n    selectionMode: string = 'single'; // null|single|multiple\n\n    /** Toggles multiselect mode */\n    @Input()\n    multiselect: boolean = false;\n\n    /** Toggles content actions for each row */\n    @Input()\n    contentActions: boolean = false;\n\n    /** Position of the content actions dropdown menu. Can be set to \"left\" or \"right\". */\n    @Input()\n    contentActionsPosition: string = 'right'; // left|right\n\n    /** Toggles context menus for each row */\n    @Input()\n    contextMenuActions: boolean = false;\n\n    /** Custom image for empty folder. Default value: './assets/images/empty_doc_lib.svg' */\n    @Input()\n    emptyFolderImageUrl: string = './assets/images/empty_doc_lib.svg';\n\n    /**\n     * When true, this enables you to drop files directly into subfolders shown\n     * as items in the list. When false, the dropped file will be added to the\n     * current folder (ie, the one containing all the items shown in the list).\n     * See the Upload directive for further details about how the file drop is\n     * handled.\n     */\n    @Input()\n    allowDropFiles: boolean = false;\n\n    /** Defines default sorting. The format is an array of 2 strings `[key, direction]`\n     * i.e. `['name', 'desc']` or `['name', 'asc']`. Set this value only if you want to\n     * override the default sorting detected by the component based on columns.\n     */\n    @Input()\n    sorting = ['name', 'asc'];\n\n    /** Defines sorting mode. Can be either `client` (items in the list\n     * are sorted client-side) or `server` (the ordering supplied by the\n     * server is used without further client-side sorting).\n     * Note that the `server` option *does not* request the server to sort the data\n     * before delivering it.\n     */\n    @Input()\n    sortingMode = 'client';\n\n    /** The inline style to apply to every row. See\n     * the Angular NgStyle\n     * docs for more details and usage examples.\n     */\n    @Input()\n    rowStyle: string;\n\n    /** The CSS class to apply to every row */\n    @Input()\n    rowStyleClass: string;\n\n    /** Toggles the loading state and animated spinners for the component. Used in\n     * combination with `navigate=false` to perform custom navigation and loading\n     * state indication.\n     */\n    @Input()\n    loading: boolean = false;\n\n    /** @hidden */\n    @Input()\n    _rowFilter: RowFilter | null = null;\n\n    /**\n     * Custom function to choose whether to show or hide rows.\n     * See the [Row Filter Model](row-filter.model.md) page for\n     * more information.\n     */\n    @Input()\n    set rowFilter(rowFilter: RowFilter) {\n        this._rowFilter = rowFilter;\n        if (this.data) {\n            this.data.setFilter(this._rowFilter);\n            if (this._currentFolderId) {\n                this.reload();\n            }\n        }\n    }\n\n    get rowFilter(): RowFilter {\n        return this._rowFilter;\n    }\n\n    /**\n     * Custom function to choose image file paths to show. See the\n     * [Image Resolver Model](image-resolver.model.md) page for\n     * more information.\n     */\n    @Input()\n    imageResolver: any | null = null;\n\n    /** Toggles the sticky header mode. */\n    @Input()\n    stickyHeader: boolean = false;\n\n    _currentFolderId: string = null;\n\n    /** The ID of the folder node to display or a reserved string alias for special sources */\n    @Input()\n    set currentFolderId(currentFolderId: string) {\n        if (this._currentFolderId !== currentFolderId) {\n            this._currentFolderId = currentFolderId;\n            if (this.data) {\n                this.data.loadPage(null, false);\n                this.resetNewFolderPagination();\n            }\n\n            if (this._currentFolderId) {\n                this.loadFolder();\n            }\n        }\n    }\n\n    get currentFolderId(): string {\n        return this._currentFolderId;\n    }\n\n    /** The Document list will show all the nodes contained in the NodePaging entity */\n    @Input()\n    node: NodePaging = null;\n\n    /** Default value is stored in the user preference settings. Use this only if you are not using pagination. */\n    @Input()\n    maxItems: number = this.DEFAULT_PAGINATION.maxItems;\n\n    /** Emitted when the user clicks a list node */\n    @Output()\n    nodeClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the user double-clicks a list node */\n    @Output()\n    nodeDblClick: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the current display folder changes */\n    @Output()\n    folderChange: EventEmitter<NodeEntryEvent> = new EventEmitter<NodeEntryEvent>();\n\n    /** Emitted when the user acts upon files with either single or double click\n     * (depends on `navigation-mode`). Useful for integration with the\n     * Viewer component.\n     */\n    @Output()\n    preview: EventEmitter<NodeEntityEvent> = new EventEmitter<NodeEntityEvent>();\n\n    /** Emitted when the Document List has loaded all items and is ready for use */\n    @Output()\n    ready: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when the API fails to get the Document List data */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('dataTable')\n    dataTable: DataTableComponent;\n\n    actions: ContentActionModel[] = [];\n    contextActionHandler: Subject<any> = new Subject();\n    data: ShareDataTableAdapter;\n    noPermission: boolean = false;\n    selection = new Array<NodeEntry>();\n    $folderNode: Subject<Node> = new Subject<Node>();\n\n    // @deprecated 3.0.0\n    folderNode: Node;\n\n    private _pagination: PaginationModel = this.DEFAULT_PAGINATION;\n    pagination: BehaviorSubject<PaginationModel> = new BehaviorSubject<PaginationModel>(this.DEFAULT_PAGINATION);\n\n    private layoutPresets = {};\n    private subscriptions: Subscription[] = [];\n    private rowMenuCache: { [key: string]: ContentActionModel[] } = {};\n    private loadingTimeout;\n\n    constructor(private documentListService: DocumentListService,\n                private ngZone: NgZone,\n                private elementRef: ElementRef,\n                private appConfig: AppConfigService,\n                private userPreferencesService: UserPreferencesService,\n                private contentService: ContentService,\n                private thumbnailService: ThumbnailService,\n                private alfrescoApiService: AlfrescoApiService,\n                private lockService: LockService) {\n\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.maxItems = this._pagination.maxItems = pagSize;\n        });\n    }\n\n    getContextActions(node: NodeEntry) {\n        if (node && node.entry) {\n            const actions = this.getNodeActions(node);\n            if (actions && actions.length > 0) {\n                return actions.map((currentAction: ContentActionModel) => {\n                    return {\n                        model: currentAction,\n                        node: node,\n                        subject: this.contextActionHandler\n                    };\n                });\n            }\n        }\n        return null;\n    }\n\n    get hasCustomLayout(): boolean {\n        return this.columnList && this.columnList.columns && this.columnList.columns.length > 0;\n    }\n\n    private getDefaultSorting(): DataSorting {\n        let defaultSorting: DataSorting;\n        if (this.sorting) {\n            const [key, direction] = this.sorting;\n            defaultSorting = new DataSorting(key, direction);\n        }\n        return defaultSorting;\n    }\n\n    private getLayoutPreset(name: string = 'default'): DataColumn[] {\n        return (this.layoutPresets[name] || this.layoutPresets['default']).map((col) => new ObjectDataColumn(col));\n    }\n\n    isMobile(): boolean {\n        return !!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    }\n\n    isEmpty() {\n        return !this.data || this.data.getRows().length === 0;\n    }\n\n    ngOnInit() {\n        this.rowMenuCache = {};\n        this.loadLayoutPresets();\n        this.data = new ShareDataTableAdapter(this.thumbnailService, this.contentService, null, this.getDefaultSorting(), this.sortingMode);\n        this.data.thumbnails = this.thumbnails;\n        this.data.permissionsStyle = this.permissionsStyle;\n\n        if (this._rowFilter) {\n            this.data.setFilter(this._rowFilter);\n        }\n\n        if (this.imageResolver) {\n            this.data.setImageResolver(this.imageResolver);\n        }\n\n        this.subscriptions.push(\n            this.contextActionHandler.subscribe((val) => this.contextActionCallback(val))\n        );\n\n        this.enforceSingleClickNavigationForMobile();\n    }\n\n    ngAfterContentInit() {\n        if (this.columnList) {\n            this.subscriptions.push(\n                this.columnList.columns.changes.subscribe(() => {\n                    this.setTableSchema();\n                })\n            );\n        }\n        this.setTableSchema();\n    }\n\n    private setTableSchema() {\n        let schema: DataColumn[] = [];\n\n        if (this.hasCustomLayout) {\n            schema = this.columnList.columns.map((c) => <DataColumn> c);\n        }\n\n        if (!this.data) {\n            this.data = new ShareDataTableAdapter(this.thumbnailService, this.contentService, schema, this.getDefaultSorting(), this.sortingMode);\n        } else if (schema && schema.length > 0) {\n            this.data.setColumns(schema);\n        }\n\n        const columns = this.data.getColumns();\n        if (!columns || columns.length === 0) {\n            this.setupDefaultColumns(this._currentFolderId);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.resetSelection();\n        if (this.data) {\n            this.data.thumbnails = this.thumbnails;\n\n        }\n        if (changes.sortingMode && !changes.sortingMode.firstChange && this.data) {\n            this.data.sortingMode = changes.sortingMode.currentValue;\n        }\n\n        if (changes.sorting && !changes.sorting.firstChange && this.data) {\n            const newValue = changes.sorting.currentValue;\n            if (newValue && newValue.length > 0) {\n                const [key, direction] = newValue;\n                this.data.setSorting(new DataSorting(key, direction));\n            }\n        }\n\n        if (this.data) {\n            if (changes.node && changes.node.currentValue) {\n                const merge = this._pagination ? this._pagination.merge : false;\n\n                this.data.loadPage(changes.node.currentValue, merge);\n                this.onDataReady(changes.node.currentValue);\n            } else if (changes.imageResolver) {\n                this.data.setImageResolver(changes.imageResolver.currentValue);\n            }\n        }\n    }\n\n    reload() {\n        this.ngZone.run(() => {\n            this.resetSelection();\n            if (this.node) {\n                this.data.loadPage(this.node, this._pagination.merge);\n                this.onDataReady(this.node);\n            } else {\n                this.loadFolder();\n            }\n        });\n    }\n\n    contextActionCallback(action) {\n        if (action) {\n            this.executeContentAction(action.node, action.model);\n        }\n    }\n\n    getNodeActions(node: NodeEntry | any): ContentActionModel[] {\n        if (node && node.entry) {\n            let target = null;\n\n            if (node.entry.isFile) {\n                target = 'document';\n            } else if (node.entry.isFolder) {\n                target = 'folder';\n            }\n\n            if (target) {\n                const actions = this.rowMenuCache[node.entry.id];\n                if (actions) {\n                    actions.forEach((action) => {\n                        this.refreshAction(action, node);\n                    });\n                    return actions;\n                }\n\n                const actionsByTarget = this.actions\n                    .filter((entry) => {\n                        const isVisible = (typeof entry.visible === 'function')\n                            ? entry.visible(node)\n                            : entry.visible;\n\n                        return isVisible && entry.target.toLowerCase() === target;\n                    })\n                    .map((action) => new ContentActionModel(action));\n\n                actionsByTarget.forEach((action) => {\n                    this.refreshAction(action, node);\n                });\n\n                this.rowMenuCache[node.entry.id] = actionsByTarget;\n                return actionsByTarget;\n            }\n        }\n\n        return [];\n    }\n\n    private refreshAction(action: ContentActionModel, node: NodeEntry) {\n        action.disabled = this.isActionDisabled(action, node);\n        action.visible = this.isActionVisible(action, node);\n    }\n\n    private isActionVisible(action: ContentActionModel, node: NodeEntry): boolean {\n        if (typeof action.visible === 'function') {\n            return action.visible(node);\n        }\n\n        return action.visible;\n    }\n\n    private isActionDisabled(action: ContentActionModel, node: NodeEntry): boolean {\n        if (typeof action.disabled === 'function') {\n            return action.disabled(node);\n        }\n\n        if ((action.permission &&\n            action.disableWithNoPermission &&\n            !this.contentService.hasAllowableOperations(node.entry, action.permission)) ||\n            this.lockService.isLocked(node.entry)) {\n            return true;\n        } else {\n            return action.disabled;\n        }\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(e?: Event) {\n        if (e && this.contextMenuActions) {\n            e.preventDefault();\n        }\n    }\n\n    navigateTo(node: Node | string): boolean {\n        if (typeof node === 'string') {\n            this.resetNewFolderPagination();\n            this._currentFolderId = node;\n            this.folderChange.emit(new NodeEntryEvent(<Node> { id: node }));\n            this.reload();\n            return true;\n        } else {\n            if (this.canNavigateFolder(node)) {\n                this.resetNewFolderPagination();\n                this._currentFolderId = this.getNodeFolderDestinationId(node);\n                this.folderChange.emit(new NodeEntryEvent(<Node> { id: this._currentFolderId }));\n                this.reload();\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private getNodeFolderDestinationId(node: Node) {\n        return this.isLinkFolder(node) ? node.properties['cm:destination'] : node.id;\n    }\n\n    private isLinkFolder(node: Node) {\n        return node.nodeType === 'app:folderlink' && node.properties &&\n            node.properties['cm:destination'];\n    }\n\n    updateCustomSourceData(nodeId: string): void {\n        this._currentFolderId = nodeId;\n    }\n\n    /**\n     * Invoked when executing content action for a document or folder.\n     * @param node Node to be the context of the execution.\n     * @param action Action to be executed against the context.\n     */\n    executeContentAction(node: NodeEntry, action: ContentActionModel) {\n        if (node && node.entry && action) {\n            let handlerSub;\n\n            if (typeof action.handler === 'function') {\n                handlerSub = action.handler(node, this, action.permission);\n            } else {\n                handlerSub = of(true);\n            }\n\n            if (typeof action.execute === 'function' && handlerSub) {\n                handlerSub.subscribe(() => {\n                    action.execute(node);\n                });\n            }\n        }\n    }\n\n    private setLoadingState(value: boolean) {\n        if (value) {\n            clearTimeout(this.loadingTimeout);\n            this.loadingTimeout = setTimeout(() => {\n                this.loading = true;\n            }, 1000);\n        } else {\n            clearTimeout(this.loadingTimeout);\n            this.loading = false;\n        }\n    }\n\n    loadFolder() {\n        if (!this._pagination.merge) {\n            this.setLoadingState(true);\n        }\n\n        if (!this.hasCustomLayout) {\n            this.setupDefaultColumns(this._currentFolderId);\n        }\n\n        if (this.documentListService.isCustomSourceService(this._currentFolderId)) {\n            this.updateCustomSourceData(this._currentFolderId);\n        }\n\n        this.documentListService.loadFolderByNodeId(this._currentFolderId, this._pagination, this.includeFields, this.where)\n            .subscribe((documentNode: DocumentLoaderNode) => {\n                if (documentNode.currentNode) {\n                    this.folderNode = documentNode.currentNode.entry;\n                    this.$folderNode.next(documentNode.currentNode.entry);\n                }\n                this.onPageLoaded(documentNode.children);\n            }, (err) => {\n                this.handleError(err);\n            });\n    }\n\n    resetSelection() {\n        this.dataTable.resetSelection();\n        this.selection = [];\n        this.noPermission = false;\n    }\n\n    onPageLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.data.loadPage(nodePaging, this._pagination.merge);\n            this.setLoadingState(false);\n            this.onDataReady(nodePaging);\n        }\n    }\n\n    /**\n     * Creates a set of predefined columns.\n     */\n    setupDefaultColumns(preset: string = 'default'): void {\n        if (this.data) {\n            const columns = this.getLayoutPreset(preset);\n            this.data.setColumns(columns);\n        }\n    }\n\n    onPreviewFile(node: NodeEntry) {\n        if (node) {\n            this.preview.emit(new NodeEntityEvent(node));\n        }\n    }\n\n    onNodeClick(nodeEntry: NodeEntry) {\n        const domEvent = new CustomEvent('node-click', {\n            detail: {\n                sender: this,\n                node: nodeEntry\n            },\n            bubbles: true\n        });\n\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(nodeEntry);\n        this.nodeClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.SINGLE_CLICK_NAVIGATION) {\n                this.executeActionClick(nodeEntry);\n            }\n        }\n\n    }\n\n    onNodeDblClick(nodeEntry: NodeEntry) {\n        const domEvent = new CustomEvent('node-dblclick', {\n            detail: {\n                sender: this,\n                node: nodeEntry\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n\n        const event = new NodeEntityEvent(nodeEntry);\n        this.nodeDblClick.emit(event);\n\n        if (!event.defaultPrevented) {\n            if (this.navigate && this.navigationMode === DocumentListComponent.DOUBLE_CLICK_NAVIGATION) {\n                this.executeActionClick(nodeEntry);\n            }\n        }\n    }\n\n    executeActionClick(nodeEntry: NodeEntry) {\n        if (nodeEntry && nodeEntry.entry) {\n            if (nodeEntry.entry.isFile) {\n                this.onPreviewFile(nodeEntry);\n            }\n\n            if (nodeEntry.entry.isFolder) {\n                this.navigateTo(nodeEntry.entry);\n            }\n\n            if (nodeEntry.entry['guid']) {\n                const options = {\n                    include: this.includeFields\n                };\n\n                this.alfrescoApiService.nodesApi.getNode(nodeEntry.entry['guid'], options)\n                    .then((node: NodeEntry) => {\n                        this.navigateTo(node.entry);\n                    });\n            }\n        }\n    }\n\n    onNodeSelect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map((entry) => entry.node);\n        const domEvent = new CustomEvent('node-select', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onNodeUnselect(event: { row: ShareDataRow, selection: Array<ShareDataRow> }) {\n        this.selection = event.selection.map((entry) => entry.node);\n        const domEvent = new CustomEvent('node-unselect', {\n            detail: {\n                node: event.row.node,\n                selection: this.selection\n            },\n            bubbles: true\n        });\n        this.elementRef.nativeElement.dispatchEvent(domEvent);\n    }\n\n    onShowRowContextMenu(event: DataCellEvent) {\n        if (this.contextMenuActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getContextActions(node) || [];\n            }\n        }\n    }\n\n    onShowRowActionsMenu(event: DataCellEvent) {\n        if (this.contentActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            if (node) {\n                args.actions = this.getNodeActions(node) || [];\n            }\n        }\n    }\n\n    onExecuteRowAction(event: DataRowActionEvent) {\n        if (this.contentActions) {\n            const args = event.value;\n            const node = (<ShareDataRow> args.row).node;\n            const action = (<ContentActionModel> args.action);\n            this.executeContentAction(node, action);\n        }\n    }\n\n    private enforceSingleClickNavigationForMobile(): void {\n        if (this.isMobile()) {\n            this.navigationMode = DocumentListComponent.SINGLE_CLICK_NAVIGATION;\n        }\n    }\n\n    canNavigateFolder(node: Node): boolean {\n        let canNavigateFolder: boolean = false;\n\n        if (node && node.isFolder) {\n            canNavigateFolder = true;\n        }\n\n        return canNavigateFolder;\n    }\n\n    private loadLayoutPresets(): void {\n        const externalSettings = this.appConfig.get('document-list.presets', null);\n\n        if (externalSettings) {\n            this.layoutPresets = Object.assign({}, presetsDefaultModel, externalSettings);\n        } else {\n            this.layoutPresets = presetsDefaultModel;\n        }\n    }\n\n    private onDataReady(nodePaging: NodePaging) {\n        this.ready.emit(nodePaging);\n        this.pagination.next(nodePaging.list.pagination);\n    }\n\n    updatePagination(requestPaginationModel: RequestPaginationModel) {\n        this._pagination.maxItems = requestPaginationModel.maxItems;\n        this._pagination.merge = requestPaginationModel.merge;\n        this._pagination.skipCount = requestPaginationModel.skipCount;\n        this.reload();\n    }\n\n    private resetNewFolderPagination() {\n        this._pagination.skipCount = 0;\n        this._pagination.maxItems = this.maxItems;\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    private handleError(err: any) {\n        if (err.message) {\n            try {\n                if (JSON.parse(err.message).error.statusCode === 403) {\n                    this.setLoadingState(false);\n                    this.noPermission = true;\n                }\n            } catch (error) {\n            }\n        }\n        this.error.emit(err);\n\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { Component } from '@angular/core';\n\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-columns',\n    template: ''\n})\nexport class ContentColumnListComponent {\n\n    constructor(private documentList: DocumentListComponent, private logService: LogService ) {\n        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');\n    }\n\n    /**\n     * Registers column model within the parent document list component.\n     * @param column Column definition model to register.\n     */\n    registerColumn(column: DataColumn): boolean {\n        if (this.documentList && column) {\n            const columns = this.documentList.data.getColumns();\n            columns.push(column);\n            return true;\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector no-input-rename  */\n\nimport { DataColumn } from '@alfresco/adf-core';\nimport { LogService } from '@alfresco/adf-core';\nimport { AfterContentInit, Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { ContentColumnListComponent } from './content-column-list.component';\n\n@Component({\n    selector: 'content-column',\n    template: ''\n})\nexport class ContentColumnComponent implements OnInit, AfterContentInit, DataColumn {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = false;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    constructor(private list: ContentColumnListComponent, private logService: LogService) {\n        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');\n    }\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n\n    ngAfterContentInit() {\n        this.register();\n    }\n\n    register(): boolean {\n        if (this.list) {\n            return this.list.registerColumn(this);\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionModel {\n    type: string;\n    action: string;\n    permission: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.type = obj.type || null;\n            this.action = obj.action || null;\n            this.permission = obj.permission || null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Output, EventEmitter } from '@angular/core';\nimport { Node, NodeEntry } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, ContentService, NodeDownloadDirective } from '@alfresco/adf-core';\nimport { MatDialog } from '@angular/material';\n\nimport { DocumentListService } from './document-list.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeActionsService {\n\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private contentDialogService: ContentNodeDialogService,\n                public dialogRef: MatDialog,\n                public content: ContentService,\n                private documentListService?: DocumentListService,\n                private apiService?: AlfrescoApiService,\n                private dialog?: MatDialog) {}\n\n    downloadNode(node: NodeEntry) {\n        new NodeDownloadDirective(this.apiService, this.dialog)\n            .downloadNode(node);\n    }\n\n    /**\n     * Copy content node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyContent(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Copy folder node\n     *\n     * @param contentEntry node to copy\n     * @param permission permission which is needed to apply the action\n     */\n    public copyFolder(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('copy', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * Move content node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveContent(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'content', contentEntry, permission);\n    }\n\n    /**\n     * Move folder node\n     *\n     * @param contentEntry node to move\n     * @param permission permission which is needed to apply the action\n     */\n    public moveFolder(contentEntry: Node, permission?: string): Subject<string> {\n        return this.doFileOperation('move', 'folder', contentEntry, permission);\n    }\n\n    /**\n     * General method for performing the given operation (copy|move)\n     *\n     * @param action the action to perform (copy|move)\n     * @param type type of the content (content|folder)\n     * @param contentEntry the contentEntry which has to have the action performed on\n     * @param permission permission which is needed to apply the action\n     */\n    private doFileOperation(action: string, type: string, contentEntry: Node, permission?: string): Subject<string> {\n        const observable: Subject<string> = new Subject<string>();\n\n        this.contentDialogService\n            .openCopyMoveDialog(action, contentEntry, permission)\n            .subscribe((selections: Node[]) => {\n                const selection = selections[0];\n                this.documentListService[`${action}Node`].call(this.documentListService, contentEntry.id, selection.id)\n                    .subscribe(\n                    observable.next.bind(observable, `OPERATION.SUCCESS.${type.toUpperCase()}.${action.toUpperCase()}`),\n                    observable.error.bind(observable)\n                    );\n            },\n            (error) => {\n                observable.error(error);\n                return observable;\n            });\n        return observable;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\nimport { ContentNodeDialogService } from '../../content-node-selector/content-node-dialog.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DocumentActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private contentNodeDialogService: ContentNodeDialogService,\n                private translation: TranslationService,\n                private documentListService?: DocumentListService,\n                private contentService?: ContentService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler for an action.\n     * @param key Identifier of the action\n     * @returns The handler for the action\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            const lKey = key.toLowerCase();\n            return this.handlers[lKey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler for an action.\n     * @param key Identifier of the action\n     * @param handler Handler for the action\n     * @returns False if the key was an empty/null string, true otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            const lKey = key.toLowerCase();\n            this.handlers[lKey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if actions can be executed for an item.\n     * @param nodeEntry Item to receive an action\n     * @returns True if the action can be executed on this item, false otherwise\n     */\n    canExecuteAction(nodeEntry: NodeEntry): boolean {\n        return this.documentListService && nodeEntry && nodeEntry.entry.isFile === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n        this.handlers['lock'] = this.lockNode.bind(this);\n    }\n\n    private lockNode(node: NodeEntry, target?: any, permission?: string) {\n        return this.contentNodeDialogService.openLockNodeDialog(node.entry);\n    }\n\n    private downloadNode(obj: NodeEntry, target?: any, permission?: string) {\n        this.nodeActionsService.downloadNode(obj);\n    }\n\n    private copyNode(node: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(node: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveContent(node.entry, permission);\n        this.prepareHandlers(actionObservable, 'content', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: NodeEntry, target?: any, permission?: string): Observable<any> {\n        let handlerObservable;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasAllowableOperations(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({\n                    type: 'content',\n                    action: 'delete',\n                    permission: permission\n                }));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentService, TranslationService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { ContentActionHandler } from '../models/content-action.model';\nimport { PermissionModel } from '../models/permissions.model';\nimport { DocumentListService } from './document-list.service';\nimport { NodeActionsService } from './node-actions.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class FolderActionsService {\n\n    permissionEvent: Subject<PermissionModel> = new Subject<PermissionModel>();\n    error: Subject<Error> = new Subject<Error>();\n    success: Subject<string> = new Subject<string>();\n\n    private handlers: { [id: string]: ContentActionHandler; } = {};\n\n    constructor(private nodeActionsService: NodeActionsService,\n                private documentListService: DocumentListService,\n                private contentService: ContentService,\n                private translation: TranslationService) {\n        this.setupActionHandlers();\n    }\n\n    /**\n     * Gets the handler function for an action.\n     * @param key Identifier for the action\n     * @returns The handler function\n     */\n    getHandler(key: string): ContentActionHandler {\n        if (key) {\n            const lKey = key.toLowerCase();\n            return this.handlers[lKey] || null;\n        }\n        return null;\n    }\n\n    /**\n     * Sets a new handler function for an action.\n     * @param key Identifier for the action\n     * @param handler The new handler function\n     * @returns True if the key was a valid action identifier, false otherwise\n     */\n    setHandler(key: string, handler: ContentActionHandler): boolean {\n        if (key) {\n            const lKey = key.toLowerCase();\n            this.handlers[lKey] = handler;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if an action is available for a particular item.\n     * @param nodeEntry Item to check\n     * @returns True if the action is available, false otherwise\n     */\n    canExecuteAction(nodeEntry: NodeEntry): boolean {\n        return this.documentListService && nodeEntry && nodeEntry.entry.isFolder === true;\n    }\n\n    private setupActionHandlers() {\n        this.handlers['copy'] = this.copyNode.bind(this);\n        this.handlers['move'] = this.moveNode.bind(this);\n        this.handlers['delete'] = this.deleteNode.bind(this);\n        this.handlers['download'] = this.downloadNode.bind(this);\n    }\n\n    private downloadNode(nodeEntry: NodeEntry) {\n        this.nodeActionsService.downloadNode(nodeEntry);\n    }\n\n    private copyNode(nodeEntry: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.copyFolder(nodeEntry.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'copy', target, permission);\n        return actionObservable;\n    }\n\n    private moveNode(nodeEntry: NodeEntry, target?: any, permission?: string) {\n        const actionObservable = this.nodeActionsService.moveFolder(nodeEntry.entry, permission);\n        this.prepareHandlers(actionObservable, 'folder', 'move', target, permission);\n        return actionObservable;\n    }\n\n    private prepareHandlers(actionObservable, type: string, action: string, target?: any, permission?: string): void {\n        actionObservable.subscribe(\n            (fileOperationMessage) => {\n                if (target && typeof target.reload === 'function') {\n                    target.reload();\n                }\n                this.success.next(fileOperationMessage);\n            },\n            this.error.next.bind(this.error)\n        );\n    }\n\n    private deleteNode(node: NodeEntry, target?: any, permission?: string): Observable<any> {\n        let handlerObservable: Observable<any>;\n\n        if (this.canExecuteAction(node)) {\n            if (this.contentService.hasAllowableOperations(node.entry, permission)) {\n                handlerObservable = this.documentListService.deleteNode(node.entry.id);\n                handlerObservable.subscribe(() => {\n                    if (target && typeof target.reload === 'function') {\n                        target.reload();\n                    }\n\n                    const message = this.translation.instant('CORE.DELETE_NODE.SINGULAR', { name: node.entry.name });\n                    this.success.next(message);\n                }, () => {\n                    const message = this.translation.instant('CORE.DELETE_NODE.ERROR_SINGULAR', { name: node.entry.name });\n                    this.error.next(message);\n                });\n\n                return handlerObservable;\n            } else {\n                this.permissionEvent.next(new PermissionModel({type: 'folder', action: 'delete', permission: permission}));\n                return throwError(new Error('No permission to delete'));\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component } from '@angular/core';\n\nimport { ContentActionModel } from './../../models/content-action.model';\nimport { DocumentListComponent } from './../document-list.component';\n\n@Component({\n    selector: 'content-actions',\n    template: ''\n})\nexport class ContentActionListComponent {\n\n    constructor(private documentList: DocumentListComponent) {\n    }\n\n    /**\n     * Registers action handler within the parent document list component.\n     * @param action Action model to register.\n     */\n    registerAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            this.documentList.actions.push(action);\n            return true;\n        }\n        return false;\n    }\n\n    unregisterAction(action: ContentActionModel): boolean {\n        if (this.documentList && action) {\n            const idx = this.documentList.actions.indexOf(action);\n            if (idx >= 0) {\n                this.documentList.actions.splice(idx, 1);\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, EventEmitter, Input, OnInit, Output, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\n\nimport { ContentActionHandler } from '../../models/content-action.model';\nimport { DocumentActionsService } from '../../services/document-actions.service';\nimport { FolderActionsService } from '../../services/folder-actions.service';\nimport { ContentActionModel, ContentActionTarget } from './../../models/content-action.model';\nimport { ContentActionListComponent } from './content-action-list.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'content-action',\n    template: '',\n    providers: [\n        DocumentActionsService,\n        FolderActionsService\n    ]\n})\nexport class ContentActionComponent implements OnInit, OnChanges, OnDestroy {\n\n    /** The title of the action as shown in the menu. */\n    @Input()\n    title: string = 'Action';\n\n    /** The name of the icon to display next to the menu command (can be left blank). */\n    @Input()\n    icon: string;\n\n    /** Visibility state (see examples). */\n    @Input()\n    visible: boolean | Function = true;\n\n    /** System actions. Can be \"delete\", \"download\", \"copy\" or \"move\". */\n    @Input()\n    handler: string;\n\n    /** Type of item that the action applies to. Can be \"document\" or \"folder\" */\n    @Input()\n    target: string = ContentActionTarget.All;\n\n    /** The permission type. */\n    @Input()\n    permission: string;\n\n    /** Should this action be disabled in the menu if the user doesn't have permission for it? */\n    @Input()\n    disableWithNoPermission: boolean;\n\n    /** Is the menu item disabled? */\n    @Input()\n    disabled: boolean | Function = false;\n\n    /** Emitted when the user selects the action from the menu. */\n    @Output()\n    execute = new EventEmitter();\n\n    /** Emitted when a permission error occurs */\n    @Output()\n    permissionEvent = new EventEmitter();\n\n    /** Emitted when an error occurs during the action.\n     * Applies to copy and move actions.\n     */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the action succeeds with the success string message.\n     * Applies to copy, move and delete actions.\n     */\n    @Output()\n    success = new EventEmitter();\n\n    documentActionModel: ContentActionModel;\n    folderActionModel: ContentActionModel;\n\n    private subscriptions: Subscription[] = [];\n\n    constructor(\n        private list: ContentActionListComponent,\n        private documentActions: DocumentActionsService,\n        private folderActions: FolderActionsService) {\n    }\n\n    ngOnInit() {\n        if (this.target === ContentActionTarget.All) {\n            this.folderActionModel = this.generateAction(ContentActionTarget.Folder);\n            this.documentActionModel = this.generateAction(ContentActionTarget.Document);\n        } else {\n            this.documentActionModel = this.generateAction(this.target);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.visible && !changes.visible.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.visible = changes.visible.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.visible = changes.visible.currentValue;\n            }\n        }\n\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (this.documentActionModel) {\n                this.documentActionModel.disabled = changes.disabled.currentValue;\n            }\n            if (this.folderActionModel) {\n                this.folderActionModel.disabled = changes.disabled.currentValue;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n\n        if (this.documentActionModel) {\n            this.unregister(this.documentActionModel);\n            this.documentActionModel = null;\n        }\n\n        if (this.folderActionModel) {\n            this.unregister(this.folderActionModel);\n            this.folderActionModel = null;\n        }\n    }\n\n    register(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.registerAction(model);\n        }\n        return false;\n    }\n\n    unregister(model: ContentActionModel): boolean {\n        if (this.list) {\n            return this.list.unregisterAction(model);\n        }\n        return false;\n    }\n\n    private generateAction(target: string): ContentActionModel {\n        const model = new ContentActionModel({\n            title: this.title,\n            icon: this.icon,\n            permission: this.permission,\n            disableWithNoPermission: this.disableWithNoPermission,\n            target: target,\n            disabled: this.disabled,\n            visible: this.visible\n        });\n        if (this.handler) {\n            model.handler = this.getSystemHandler(target, this.handler);\n        }\n\n        if (this.execute) {\n            model.execute = (value: any): void => {\n                this.execute.emit({ value });\n            };\n        }\n\n        this.register(model);\n        return model;\n    }\n\n    getSystemHandler(target: string, name: string): ContentActionHandler {\n        if (target) {\n            target = target.toLowerCase();\n\n            if (target === ContentActionTarget.Document) {\n                if (this.documentActions) {\n                    this.subscriptions.push(\n                        this.documentActions.permissionEvent.subscribe((permission) => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.documentActions.error.subscribe((errors) => {\n                            this.error.emit(errors);\n                        }),\n                        this.documentActions.success.subscribe((message) => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.documentActions.getHandler(name);\n                }\n                return null;\n            }\n\n            if (target === ContentActionTarget.Folder) {\n                if (this.folderActions) {\n                    this.subscriptions.push(\n                        this.folderActions.permissionEvent.subscribe((permission) => {\n                            this.permissionEvent.emit(permission);\n                        }),\n                        this.folderActions.error.subscribe((errors) => {\n                            this.error.emit(errors);\n                        }),\n                        this.folderActions.success.subscribe((message) => {\n                            this.success.emit(message);\n                        })\n                    );\n\n                    return this.folderActions.getHandler(name);\n                }\n                return null;\n            }\n        }\n        return null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnInit,\n    Input,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { NodeEntry, Node, Site } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\n@Component({\n    selector: 'adf-library-name-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ displayTooltip$ | async }}\" (click)=\"onClick()\">\n            {{ displayText$ | async }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'adf-datatable-content-cell adf-datatable-link adf-library-name-column'\n    }\n})\nexport class LibraryNameColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayTooltip$ = new BehaviorSubject<string>('');\n    displayText$ = new BehaviorSubject<string>('');\n    node: NodeEntry;\n\n    private sub: Subscription;\n\n    constructor(\n        private element: ElementRef,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe(\n            (node: Node) => {\n                const row: ShareDataRow = this.context.row;\n                if (row) {\n                    const { entry } = row.node;\n\n                    if (entry === node) {\n                        row.node = { entry };\n                        this.updateValue();\n                    }\n                }\n            }\n        );\n    }\n\n    protected updateValue() {\n        this.node = this.context.row.node;\n        const rows: Array<ShareDataRow> = this.context.data.rows || [];\n        if (this.node && this.node.entry) {\n            this.displayText$.next(\n                this.makeLibraryTitle(<any> this.node.entry, rows)\n            );\n            this.displayTooltip$.next(this.makeLibraryTooltip(this.node.entry));\n        }\n    }\n\n    onClick() {\n        this.element.nativeElement.dispatchEvent(\n            new CustomEvent('name-click', {\n                bubbles: true,\n                detail: {\n                    node: this.node\n                }\n            })\n        );\n    }\n\n    makeLibraryTooltip(library: any): string {\n        const { description, title } = library;\n\n        return description || title || '';\n    }\n\n    makeLibraryTitle(library: Site, rows: Array<ShareDataRow>): string {\n        const entries = rows.map((row: ShareDataRow) => row.node.entry);\n        const { title, id } = library;\n\n        let isDuplicate = false;\n\n        if (entries) {\n            isDuplicate = entries.some((entry: any) => {\n                return entry.id !== id && entry.title === title;\n            });\n        }\n\n        return isDuplicate ? `${title} (${id})` : `${title}`;\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    OnInit,\n    Input,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnDestroy\n} from '@angular/core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Node, SiteEntry, Site } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n    selector: 'adf-library-role-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ (displayText$ | async) | translate }}\">\n            {{ (displayText$ | async) | translate }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-library-role-column adf-datatable-content-cell' }\n})\nexport class LibraryRoleColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    private sub: Subscription;\n\n    constructor(private api: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.api.nodeUpdated.subscribe((node: Node) => {\n            const row: ShareDataRow = this.context.row;\n            if (row) {\n                const { entry } = row.node;\n\n                if (entry === node) {\n                    row.node = { entry };\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        const node: SiteEntry = this.context.row.node;\n        if (node && node.entry) {\n            const role: string = node.entry.role;\n            switch (role) {\n                case Site.RoleEnum.SiteManager:\n                    this.displayText$.next('LIBRARY.ROLE.MANAGER');\n                    break;\n                case Site.RoleEnum.SiteCollaborator:\n                    this.displayText$.next('LIBRARY.ROLE.COLLABORATOR');\n                    break;\n                case Site.RoleEnum.SiteContributor:\n                    this.displayText$.next('LIBRARY.ROLE.CONTRIBUTOR');\n                    break;\n                case Site.RoleEnum.SiteConsumer:\n                    this.displayText$.next('LIBRARY.ROLE.CONSUMER');\n                    break;\n                default:\n                    this.displayText$.next('');\n                    break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { Node, Site, SiteEntry } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n    selector: 'adf-library-status-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ (displayText$ | async) | translate }}\">\n            {{ (displayText$ | async) | translate }}\n        </span>\n    `,\n    host: { class: 'adf-library-status-column adf-datatable-content-cell' }\n})\nexport class LibraryStatusColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n\n    private sub: Subscription;\n\n    constructor(private api: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.api.nodeUpdated.subscribe((node: Node) => {\n            const row: ShareDataRow = this.context.row;\n            if (row) {\n                const { entry } = row.node;\n\n                if (entry === node) {\n                    row.node = { entry };\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        const node: SiteEntry = this.context.row.node;\n        if (node && node.entry) {\n            const visibility: string = node.entry.visibility;\n\n            switch (visibility) {\n                case Site.VisibilityEnum.PUBLIC:\n                    this.displayText$.next('LIBRARY.VISIBILITY.PUBLIC');\n                    break;\n                case Site.VisibilityEnum.PRIVATE:\n                    this.displayText$.next('LIBRARY.VISIBILITY.PRIVATE');\n                    break;\n                case Site.VisibilityEnum.MODERATED:\n                    this.displayText$.next('LIBRARY.VISIBILITY.MODERATED');\n                    break;\n                default:\n                    this.displayText$.next('UNKNOWN');\n                    break;\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n    selector: 'adf-name-column',\n    template: `\n        <span class=\"adf-datatable-cell-value\" title=\"{{ node | adfNodeNameTooltip }}\" (click)=\"onClick()\">\n            {{ displayText$ | async }}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-datatable-content-cell adf-datatable-link adf-name-column' }\n})\nexport class NameColumnComponent implements OnInit, OnDestroy {\n    @Input()\n    context: any;\n\n    displayText$ = new BehaviorSubject<string>('');\n    node: NodeEntry;\n\n    private sub: Subscription;\n\n    constructor(private element: ElementRef, private alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnInit() {\n        this.updateValue();\n\n        this.sub = this.alfrescoApiService.nodeUpdated.subscribe((node: Node) => {\n            const row: ShareDataRow = this.context.row;\n            if (row) {\n                const { entry } = row.node;\n\n                if (entry === node) {\n                    row.node = { entry };\n                    this.updateValue();\n                }\n            }\n        });\n    }\n\n    protected updateValue() {\n        this.node = this.context.row.node;\n\n        if (this.node && this.node.entry) {\n            this.displayText$.next(this.node.entry.name || this.node.entry.id);\n        }\n    }\n\n    onClick() {\n        this.element.nativeElement.dispatchEvent(\n            new CustomEvent('name-click', {\n                bubbles: true,\n                detail: {\n                    node: this.node\n                }\n            })\n        );\n    }\n\n    ngOnDestroy() {\n        if (this.sub) {\n            this.sub.unsubscribe();\n            this.sub = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  OnInit,\n  Input\n} from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { ShareDataRow } from '../../data/share-data-row.model';\n\n@Component({\n  selector: 'adf-trashcan-name-column',\n  template: `\n    <ng-container *ngIf=\"!isLibrary\">\n      <span class=\"adf-datatable-cell-value\" title=\"{{ node | adfNodeNameTooltip }}\">{{ displayText }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"isLibrary\">\n      <span class=\"adf-datatable-cell-value\" title=\"{{ displayTooltip }}\">{{ displayText }}</span>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'adf-datatable-content-cell adf-trashcan-name-column' }\n})\nexport class TrashcanNameColumnComponent implements OnInit {\n  @Input()\n  context: any;\n\n  isLibrary = false;\n  displayText: string;\n  displayTooltip: string;\n  node: NodeEntry;\n\n  ngOnInit() {\n    this.node = this.context.row.node;\n    const rows: Array<ShareDataRow> = this.context.data.rows || [];\n\n    if (this.node && this.node.entry) {\n      this.isLibrary = this.node.entry.nodeType === 'st:site';\n\n      if (this.isLibrary) {\n        const { properties } = this.node.entry;\n\n        this.displayText = this.makeLibraryTitle(this.node.entry, rows);\n        this.displayTooltip =\n          properties['cm:description'] || properties['cm:title'];\n      } else {\n        this.displayText = this.node.entry.name || this.node.entry.id;\n      }\n    }\n  }\n\n  makeLibraryTitle(library: any, rows: Array<ShareDataRow>): string {\n    const entries = rows.map((r: ShareDataRow) => r.node.entry);\n    const { id } = library;\n    const title = library.properties['cm:title'];\n\n    let isDuplicate = false;\n\n    if (entries) {\n      isDuplicate = entries.some((entry: any) => {\n        return entry.id !== id && entry.properties['cm:title'] === title;\n      });\n    }\n\n    return isDuplicate\n      ? `${library.properties['cm:title']} (${library.name})`\n      : `${library.properties['cm:title']}`;\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// note: contains only limited subset of available fields\n\nimport { NodeEntry, Node } from '@alfresco/js-api';\n\nexport class NodePaging {\n    list: NodePagingList;\n}\n\nexport class NodePagingList {\n    pagination: Pagination;\n    entries: NodeMinimalEntry[];\n}\n\nexport class NodeMinimalEntry implements NodeEntry {\n    entry: NodeMinimal;\n}\n\nexport class Pagination {\n    count: number;\n    hasMoreItems: boolean;\n    totalItems: number;\n    skipCount: number;\n    maxItems: number;\n}\n\nexport class NodeMinimal implements Node {\n    id: string;\n    parentId: string;\n    name: string;\n    nodeType: string;\n    isFolder: boolean;\n    isFile: boolean;\n    modifiedAt: Date;\n    modifiedByUser: UserInfo;\n    createdAt: Date;\n    createdByUser: UserInfo;\n    content: ContentInfo;\n    path: PathInfoEntity;\n    properties: NodeProperties = {};\n    aspectNames: string[];\n}\n\nexport class UserInfo {\n    displayName: string;\n    id: string;\n}\n\nexport class ContentInfo {\n    mimeType: string;\n    mimeTypeName: string;\n    sizeInBytes: number;\n    encoding: string;\n}\n\nexport class PathInfoEntity {\n    elements: PathElementEntity[];\n    isComplete: boolean;\n    name: string;\n}\n\nexport class PathElementEntity {\n    id: string;\n    name: string;\n}\n\nexport interface NodeProperties {\n    [key: string]: any;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum } from '@alfresco/adf-core';\n\nexport class PermissionStyleModel {\n    css: string;\n    permission: AllowableOperationsEnum;\n    isFolder: boolean = true;\n    isFile: boolean = true;\n\n    constructor(css: string, permission: AllowableOperationsEnum, isFile: boolean = true, isFolder: boolean = true) {\n        this.css = css;\n        this.permission = permission;\n        this.isFile = isFile;\n        this.isFolder = isFolder;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel, FileUploadCompleteEvent, FileUploadDeleteEvent,\n    FileUploadErrorEvent, FileUploadStatus, UploadService\n} from '@alfresco/adf-core';\nimport { ChangeDetectorRef, Component, Input, Output, EventEmitter, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Subscription, merge } from 'rxjs';\nimport { FileUploadingListComponent } from './file-uploading-list.component';\n\n@Component({\n    selector: 'adf-file-uploading-dialog',\n    templateUrl: './file-uploading-dialog.component.html',\n    styleUrls: ['./file-uploading-dialog.component.scss']\n})\nexport class FileUploadingDialogComponent implements OnInit, OnDestroy {\n    @ViewChild('uploadList')\n    uploadList: FileUploadingListComponent;\n\n    /** Dialog position. Can be 'left' or 'right'. */\n    @Input()\n    position: string = 'right';\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    filesUploadingList: FileModel[] = [];\n    isDialogActive: boolean = false;\n    totalCompleted: number = 0;\n    totalErrors: number = 0;\n    isDialogMinimized: boolean = false;\n    isConfirmation: boolean = false;\n\n    private listSubscription: Subscription;\n    private counterSubscription: Subscription;\n    private fileUploadSubscription: Subscription;\n    private errorSubscription: Subscription;\n\n    constructor(private uploadService: UploadService,\n                private changeDetector: ChangeDetectorRef) {\n    }\n\n    ngOnInit() {\n        this.listSubscription = this.uploadService\n            .queueChanged.subscribe((fileList: FileModel[]) => {\n                this.filesUploadingList = fileList;\n\n                if (this.filesUploadingList.length) {\n                    this.isDialogActive = true;\n                }\n            });\n\n        this.counterSubscription = merge(\n                this.uploadService.fileUploadComplete,\n                this.uploadService.fileUploadDeleted\n            )\n            .subscribe((event: (FileUploadDeleteEvent | FileUploadCompleteEvent)) => {\n                this.totalCompleted = event.totalComplete;\n                this.changeDetector.detectChanges();\n            });\n\n        this.errorSubscription = this.uploadService.fileUploadError\n            .subscribe((event: FileUploadErrorEvent) => {\n                this.totalErrors = event.totalError;\n                this.changeDetector.detectChanges();\n            });\n\n        this.fileUploadSubscription = this.uploadService\n            .fileUpload.subscribe(() => {\n                this.changeDetector.detectChanges();\n            });\n\n        this.uploadService.fileDeleted.subscribe((objId) => {\n            if (this.filesUploadingList) {\n                const file = this.filesUploadingList.find((item) => {\n                    return item.data.entry.id === objId;\n                });\n                if (file) {\n                    file.status = FileUploadStatus.Cancelled;\n                    this.changeDetector.detectChanges();\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle confirmation message.\n     */\n    toggleConfirmation() {\n        this.isConfirmation = !this.isConfirmation;\n\n        if (this.isDialogMinimized) {\n            this.isDialogMinimized = false;\n        }\n    }\n\n    /**\n     * Cancel uploads and hide confirmation\n     */\n    cancelAllUploads() {\n        this.toggleConfirmation();\n\n        this.uploadList.cancelAllFiles();\n    }\n\n    /**\n     * Toggle dialog minimized state.\n     */\n    toggleMinimized(): void {\n        this.isDialogMinimized = !this.isDialogMinimized;\n        this.changeDetector.detectChanges();\n    }\n\n    /**\n     * Dismiss dialog\n     */\n    close(): void {\n        this.isConfirmation = false;\n        this.totalCompleted = 0;\n        this.totalErrors = 0;\n        this.filesUploadingList = [];\n        this.isDialogActive = false;\n        this.isDialogMinimized = false;\n        this.uploadService.clearQueue();\n        this.changeDetector.detectChanges();\n    }\n\n    ngOnDestroy() {\n        this.uploadService.clearQueue();\n        this.listSubscription.unsubscribe();\n        this.counterSubscription.unsubscribe();\n        this.fileUploadSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '@alfresco/adf-core';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n    selector: 'adf-file-uploading-list-row',\n    templateUrl: './file-uploading-list-row.component.html',\n    styleUrls: ['./file-uploading-list-row.component.scss']\n})\nexport class FileUploadingListRowComponent {\n    @Input()\n    file: FileModel;\n\n    @Output()\n    cancel: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    @Output()\n    remove: EventEmitter<FileModel> = new EventEmitter<FileModel>();\n\n    FileUploadStatus = FileUploadStatus;\n\n    onCancel(file: FileModel): void {\n        this.cancel.emit(file);\n    }\n\n    onRemove(file: FileModel): void {\n        this.remove.emit(file);\n    }\n\n    showCancelledStatus(): boolean {\n        return this.file.status === FileUploadStatus.Cancelled ||\n            this.file.status === FileUploadStatus.Aborted ||\n            this.file.status === FileUploadStatus.Deleted;\n    }\n\n    get versionNumber(): string {\n        return this.file.data.entry.properties['cm:versionLabel'];\n    }\n\n    get mimeType(): string {\n        if (this.file && this.file.file && this.file.file.type) {\n            return this.file.file.type;\n        }\n\n        return 'default';\n    }\n\n    isUploadVersion(): boolean {\n        return (\n            !!this.file.data &&\n            this.file.options &&\n            this.file.options.newVersion &&\n            this.file.data.entry.properties &&\n            this.file.data.entry.properties['cm:versionLabel']\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    FileModel,\n    FileUploadStatus,\n    NodesApiService,\n    TranslationService,\n    UploadService\n} from '@alfresco/adf-core';\nimport {\n    Component,\n    ContentChild,\n    Input,\n    Output,\n    TemplateRef,\n    EventEmitter\n} from '@angular/core';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-file-uploading-list',\n    templateUrl: './file-uploading-list.component.html',\n    styleUrls: ['./file-uploading-list.component.scss']\n})\nexport class FileUploadingListComponent {\n    FileUploadStatus = FileUploadStatus;\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    files: FileModel[] = [];\n\n    /** Emitted when a file in the list has an error. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    constructor(\n        private uploadService: UploadService,\n        private nodesApi: NodesApiService,\n        private translateService: TranslationService\n    ) {}\n\n    /**\n     * Cancel file upload\n     *\n     * @param file File model to cancel upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    cancelFile(file: FileModel): void {\n        this.uploadService.cancelUpload(file);\n    }\n\n    /**\n     * Remove uploaded file\n     *\n     * @param file File model to remove upload for.\n     *\n     * @memberOf FileUploadingListComponent\n     */\n    removeFile(file: FileModel): void {\n        this.deleteNode(file).subscribe(() => {\n            if (file.status === FileUploadStatus.Error) {\n                this.notifyError(file);\n            }\n\n            this.cancelNodeVersionInstances(file);\n            this.uploadService.cancelUpload(file);\n        });\n    }\n\n    /**\n     * Call the appropriate method for each file, depending on state\n     */\n    cancelAllFiles(): void {\n        this.getUploadingFiles().forEach((file) =>\n            this.uploadService.cancelUpload(file)\n        );\n\n        const deletedFiles = this.files\n            .filter((file) => file.status === FileUploadStatus.Complete)\n            .map((file) => this.deleteNode(file));\n\n        forkJoin(...deletedFiles).subscribe((files: FileModel[]) => {\n            const errors = files.filter(\n                (file) => file.status === FileUploadStatus.Error\n            );\n\n            if (errors.length) {\n                this.notifyError(...errors);\n            }\n\n            this.uploadService.cancelUpload(...files);\n        });\n    }\n\n    /**\n     * Checks if all the files are uploaded false if there is at least one file in Progress | Starting | Pending\n     */\n    isUploadCompleted(): boolean {\n        return (\n            !this.isUploadCancelled() &&\n            Boolean(this.files.length) &&\n            !this.files.some(\n                ({ status }) =>\n                    status === FileUploadStatus.Starting ||\n                    status === FileUploadStatus.Progress ||\n                    status === FileUploadStatus.Pending\n            )\n        );\n    }\n\n    /**\n     * Check if all the files are Cancelled | Aborted | Error. false if there is at least one file in uploading states\n     */\n    isUploadCancelled(): boolean {\n        return (\n            !!this.files.length &&\n            this.files.every(\n                ({ status }) =>\n                    status === FileUploadStatus.Aborted ||\n                    status === FileUploadStatus.Cancelled ||\n                    status === FileUploadStatus.Deleted\n            )\n        );\n    }\n\n    private deleteNode(file: FileModel): Observable<FileModel> {\n        const { id } = file.data.entry;\n\n        return this.nodesApi.deleteNode(id, { permanent: true }).pipe(\n            map(() => {\n                file.status = FileUploadStatus.Deleted;\n                return file;\n            }),\n            catchError(() => {\n                file.status = FileUploadStatus.Error;\n                return of(file);\n            })\n        );\n    }\n\n    private cancelNodeVersionInstances(file) {\n        this.files\n            .filter(\n                (item) =>\n                    item.data.entry.id === file.data.entry.id &&\n                    item.options.newVersion\n            )\n            .map((item) => {\n                item.status = FileUploadStatus.Deleted;\n            });\n    }\n\n    private notifyError(...files: FileModel[]) {\n        let messageError: string = null;\n\n        if (files.length === 1) {\n            messageError = this.translateService.instant(\n                'FILE_UPLOAD.MESSAGES.REMOVE_FILE_ERROR',\n                { fileName: files[0].name }\n            );\n        } else {\n            messageError = this.translateService.instant(\n                'FILE_UPLOAD.MESSAGES.REMOVE_FILES_ERROR',\n                { total: files.length }\n            );\n        }\n\n        this.error.emit(messageError);\n    }\n\n    private getUploadingFiles() {\n        return this.files.filter((item) => {\n            if (\n                item.status === FileUploadStatus.Pending ||\n                item.status === FileUploadStatus.Progress ||\n                item.status === FileUploadStatus.Starting\n            ) {\n                return item;\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, UploadService } from '@alfresco/adf-core';\nimport { EventEmitter } from '@angular/core';\n\nexport class UploadFilesEvent {\n    private isDefaultPrevented: boolean = false;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n\n    constructor(\n        public files: Array<FileModel>,\n        private uploadService: UploadService,\n        private callback: EventEmitter<any>\n    ) {}\n\n    pauseUpload() {\n        this.preventDefault();\n    }\n\n    resumeUpload() {\n        if (this.files && this.files.length > 0) {\n            this.uploadService.addToQueue(...this.files);\n            this.uploadService.uploadFilesInTheQueue(this.callback);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileInfo } from '@alfresco/adf-core';\nimport { EventEmitter, Input, Output, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { UploadService, TranslationService } from '@alfresco/adf-core';\nimport { Subscription } from 'rxjs';\nimport { UploadFilesEvent } from '../upload-files.event';\n\nexport abstract class UploadBase implements OnInit, OnDestroy {\n\n    /** Sets a limit on the maximum size (in bytes) of a file to be uploaded.\n     * Has no effect if undefined.\n     */\n    @Input()\n    maxFilesSize: number;\n\n    /** The ID of the root. Use the nodeId for\n     * Content Services or the taskId/processId for Process Services.\n     */\n    @Input()\n    rootFolderId: string = '-root-';\n\n    /** Toggles component disabled state (if there is no node permission checking). */\n    @Input()\n    disabled: boolean = false;\n\n    /** Filter for accepted file types. */\n    @Input()\n    acceptedFilesType: string = '*';\n\n    /** Toggles versioning. */\n    @Input()\n    versioning: boolean = false;\n\n    /** majorVersion boolean field to true to indicate a major version should be created. */\n    @Input()\n    majorVersion: boolean = false;\n\n    /** When you overwrite existing content, you can use the comment field to add a version comment that appears in the version history */\n    @Input()\n    comment: string;\n\n    /** Custom node type for uploaded file */\n    @Input()\n    nodeType: string = 'cm:content';\n\n    /** Emitted when the file is uploaded successfully. */\n    @Output()\n    success = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error = new EventEmitter();\n\n    /** Emitted when the upload begins. */\n    @Output()\n    beginUpload = new EventEmitter<UploadFilesEvent>();\n\n    protected subscriptions: Subscription[] = [];\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                protected ngZone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.subscriptions.push(\n            this.uploadService.fileUploadError.subscribe((error) => {\n                this.error.emit(error);\n            })\n        );\n\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n        this.subscriptions = [];\n    }\n\n    /**\n     * Upload a list of file in the specified path\n     * @param files\n     * @param path\n     */\n    uploadFiles(files: File[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((file: File) => {\n                return this.createFileModel(file, this.rootFolderId, ((<any> file).webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''));\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    uploadFilesInfo(files: FileInfo[]): void {\n        const filteredFiles: FileModel[] = files\n            .map<FileModel>((fileInfo: FileInfo) => {\n                return this.createFileModel(fileInfo.file, this.rootFolderId, fileInfo.relativeFolder);\n            });\n\n        this.uploadQueue(filteredFiles);\n    }\n\n    private uploadQueue(files: FileModel[]) {\n        const filteredFiles = files\n            .filter(this.isFileAcceptable.bind(this))\n            .filter(this.isFileSizeAcceptable.bind(this));\n\n        this.ngZone.run(() => {\n            const event = new UploadFilesEvent(\n                [...filteredFiles],\n                this.uploadService,\n                this.success\n            );\n            this.beginUpload.emit(event);\n\n            if (!event.defaultPrevented) {\n                if (filteredFiles.length > 0) {\n                    this.uploadService.addToQueue(...filteredFiles);\n                    this.uploadService.uploadFilesInTheQueue(this.success);\n                }\n            }\n        });\n    }\n\n    /**\n     * Checks if the given file is allowed by the extension filters\n     *\n     * @param file FileModel\n     */\n    protected isFileAcceptable(file: FileModel): boolean {\n        if (this.acceptedFilesType === '*') {\n            return true;\n        }\n\n        const allowedExtensions = this.acceptedFilesType\n            .split(',')\n            .map((ext) => ext.trim().replace(/^\\./, ''));\n\n        if (allowedExtensions.indexOf(file.extension) !== -1) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Creates FileModel from File\n     *\n     * @param file\n     */\n    protected createFileModel(file: File, parentId: string, path: string, id?: string): FileModel {\n        return new FileModel(file, {\n            comment: this.comment,\n            majorVersion: this.majorVersion,\n            newVersion: this.versioning,\n            parentId: parentId,\n            path: path,\n            nodeType: this.nodeType\n        }, id);\n    }\n\n    protected isFileSizeAllowed(file: FileModel) {\n        let isFileSizeAllowed = true;\n        if (this.isMaxFileSizeDefined()) {\n            isFileSizeAllowed = this.isFileSizeCorrect(file);\n        }\n\n        return isFileSizeAllowed;\n    }\n\n    protected isMaxFileSizeDefined() {\n        return this.maxFilesSize !== undefined && this.maxFilesSize !== null;\n    }\n\n    protected isFileSizeCorrect(file: FileModel) {\n        return this.maxFilesSize >= 0 && file.size <= this.maxFilesSize;\n    }\n\n    /**\n     * Checks if the given file is an acceptable size\n     *\n     * @param file FileModel\n     */\n    private isFileSizeAcceptable(file: FileModel): boolean {\n        let acceptableSize = true;\n\n        if (!this.isFileSizeAllowed(file)) {\n            acceptableSize = false;\n\n            const message = this.translationService.instant(\n                'FILE_UPLOAD.MESSAGES.EXCEED_MAX_FILE_SIZE',\n                { fileName: file.name }\n            );\n\n            this.error.emit(message);\n        }\n\n        return acceptableSize;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentService, EXTENDIBLE_COMPONENT, FileUtils,\n    LogService, NodeAllowableOperationSubject, TranslationService, UploadService, AllowableOperationsEnum\n} from '@alfresco/adf-core';\nimport {\n    Component, EventEmitter, forwardRef, Input,\n    OnChanges, OnInit, Output, SimpleChanges, ViewEncapsulation, NgZone\n} from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { PermissionModel } from '../../document-list/models/permissions.model';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadButtonComponent extends UploadBase implements OnInit, OnChanges, NodeAllowableOperationSubject {\n\n    /** Allows/disallows upload folders (only for Chrome). */\n    @Input()\n    uploadFolders: boolean = false;\n\n    /** Allows/disallows multiple files */\n    @Input()\n    multipleFiles: boolean = false;\n\n    /** Defines the text of the upload button. */\n    @Input()\n    staticTitle: string;\n\n    /** Custom tooltip text. */\n    @Input()\n    tooltip: string = null;\n\n    /** Emitted when create permission is missing. */\n    @Output()\n    permissionEvent: EventEmitter<PermissionModel> = new EventEmitter<PermissionModel>();\n\n    private hasAllowableOperations: boolean = false;\n\n    protected permissionValue: Subject<boolean> = new Subject<boolean>();\n\n    constructor(protected uploadService: UploadService,\n                private contentService: ContentService,\n                protected translationService: TranslationService,\n                protected logService: LogService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    ngOnInit() {\n        this.permissionValue.subscribe((permission: boolean) => {\n            this.hasAllowableOperations = permission;\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const rootFolderId = changes['rootFolderId'];\n        if (rootFolderId && rootFolderId.currentValue) {\n            this.checkPermission();\n        }\n    }\n\n    isButtonDisabled(): boolean {\n        return this.disabled ? true : undefined;\n    }\n\n    onFilesAdded($event: any): void {\n        const files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n\n        if (this.hasAllowableOperations) {\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    onDirectoryAdded($event: any): void {\n        if (this.hasAllowableOperations) {\n            const files: File[] = FileUtils.toFileArray($event.currentTarget.files);\n            this.uploadFiles(files);\n        } else {\n            this.permissionEvent.emit(new PermissionModel({ type: 'content', action: 'upload', permission: 'create' }));\n        }\n        // reset the value of the input file\n        $event.target.value = '';\n    }\n\n    checkPermission() {\n        if (this.rootFolderId) {\n            const opts: any = {\n                includeSource: true,\n                include: ['allowableOperations']\n            };\n\n            this.contentService.getNode(this.rootFolderId, opts).subscribe(\n                (res) => this.permissionValue.next(this.nodeHasPermission(res.entry, AllowableOperationsEnum.CREATE)),\n                (error) => this.error.emit(error)\n            );\n        }\n    }\n\n    nodeHasPermission(node: Node, permission: AllowableOperationsEnum | string): boolean {\n        return this.contentService.hasAllowableOperations(node, permission);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AllowableOperationsEnum  } from '@alfresco/adf-core';\nimport { Component, forwardRef, Input, OnChanges, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { UploadButtonComponent } from './upload-button.component';\nimport { FileModel, EXTENDIBLE_COMPONENT } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-upload-version-button',\n    templateUrl: './upload-button.component.html',\n    styleUrls: ['./upload-button.component.scss'],\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadVersionButtonComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadVersionButtonComponent extends UploadButtonComponent implements OnChanges, OnInit {\n\n    /** (**Required**) The node to be versioned. */\n    @Input()\n    node: Node;\n\n    protected createFileModel(file: File): FileModel {\n        const fileModel = super.createFileModel(file, this.rootFolderId, ((<any> file).webkitRelativePath || '').replace(/\\/[^\\/]*$/, ''), this.node.id);\n\n        if (!this.isFileAcceptable(fileModel)) {\n            const message = this.translationService.instant('FILE_UPLOAD.VERSION.MESSAGES.INCOMPATIBLE_VERSION');\n            this.error.emit(message);\n        }\n\n        return fileModel;\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.checkPermission();\n    }\n\n    checkPermission() {\n        this.permissionValue.next(this.nodeHasPermission(this.node, AllowableOperationsEnum.UPDATE));\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    EXTENDIBLE_COMPONENT, FileInfo, FileModel, FileUtils, NodeAllowableOperationSubject,\n    NotificationService, TranslationService, UploadService, ContentService, AllowableOperationsEnum\n} from '@alfresco/adf-core';\nimport { Component, forwardRef, ViewEncapsulation, NgZone } from '@angular/core';\nimport { UploadBase } from './base-upload/upload-base';\n\n@Component({\n    selector: 'adf-upload-drag-area',\n    templateUrl: './upload-drag-area.component.html',\n    styleUrls: ['./upload-drag-area.component.scss'],\n    host: { 'class': 'adf-upload-drag-area' },\n    viewProviders: [\n        { provide: EXTENDIBLE_COMPONENT, useExisting: forwardRef(() => UploadDragAreaComponent) }\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UploadDragAreaComponent extends UploadBase implements NodeAllowableOperationSubject {\n\n    constructor(protected uploadService: UploadService,\n                protected translationService: TranslationService,\n                private notificationService: NotificationService,\n                private contentService: ContentService,\n                protected ngZone: NgZone) {\n        super(uploadService, translationService, ngZone);\n    }\n\n    /**\n     * Method called when files are dropped in the drag area.\n     *\n     * @param files - files dropped in the drag area.\n     */\n    onFilesDropped(files: File[]): void {\n        if (!this.disabled && files.length) {\n            this.uploadFiles(files);\n        }\n    }\n\n    /**\n     * Called when a folder are dropped in the drag area\n     *\n     * @param folder - name of the dropped folder\n     */\n    onFolderEntityDropped(folder: any): void {\n        if (!this.disabled && folder.isDirectory) {\n            FileUtils.flatten(folder).then((filesInfo) => {\n                this.uploadFilesInfo(filesInfo);\n            });\n        }\n    }\n\n    /**\n     * Show undo notification bar.\n     *\n     * @param latestFilesAdded - files in the upload queue enriched with status flag and xhr object.\n     */\n    showUndoNotificationBar(latestFilesAdded: FileModel[]) {\n        let messageTranslate: any, actionTranslate: any;\n        messageTranslate = this.translationService.get('FILE_UPLOAD.MESSAGES.PROGRESS');\n        actionTranslate = this.translationService.get('FILE_UPLOAD.ACTION.UNDO');\n\n        this.notificationService.openSnackMessageAction(messageTranslate.value, actionTranslate.value, 3000).onAction().subscribe(() => {\n            this.uploadService.cancelUpload(...latestFilesAdded);\n        });\n    }\n\n    /** Returns true or false considering the component options and node permissions */\n    isDroppable(): boolean {\n        return !this.disabled;\n    }\n\n    /**\n     * Handles 'upload-files' events raised by child components.\n     *\n     * @param event DOM event\n     */\n    onUploadFiles(event: CustomEvent) {\n        event.stopPropagation();\n        event.preventDefault();\n        const isAllowed: boolean = this.contentService.hasAllowableOperations(event.detail.data.obj.entry, AllowableOperationsEnum.CREATE);\n        if (isAllowed) {\n            const fileInfo: FileInfo[] = event.detail.files;\n            if (this.isTargetNodeFolder(event)) {\n                const destinationFolderName = event.detail.data.obj.entry.name;\n                fileInfo.map((file) => file.relativeFolder = destinationFolderName ? destinationFolderName.concat(file.relativeFolder) : file.relativeFolder);\n            }\n            if (fileInfo && fileInfo.length > 0) {\n                this.uploadFilesInfo(fileInfo);\n            }\n        }\n    }\n\n    private isTargetNodeFolder(event: CustomEvent): boolean {\n        return event.detail.data.obj && event.detail.data.obj.entry.isFolder;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TranslationService } from '@alfresco/adf-core';\n\n@Pipe({\n    name: 'adfFileUploadError',\n    pure: true\n})\nexport class FileUploadErrorPipe implements PipeTransform {\n\n    constructor(private translation: TranslationService) {\n    }\n\n    transform(errorCode: number): string {\n        return this.translation.instant(`FILE_UPLOAD.ERRORS.${errorCode || 'GENERIC'}`);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { FileUtils } from '@alfresco/adf-core';\nimport { Directive, ElementRef, EventEmitter, Input, NgZone, OnDestroy, OnInit, Output } from '@angular/core';\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    selector: '[adf-file-draggable]'\n})\nexport class FileDraggableDirective implements OnInit, OnDestroy {\n\n    files: File [];\n\n    /** Enables/disables drag-and-drop functionality. */\n    @Input('adf-file-draggable')\n    enabled: boolean = true;\n\n    /** Emitted when one or more files are dragged and dropped onto the draggable element. */\n    @Output()\n    filesDropped: EventEmitter<File[]> = new EventEmitter<File[]>();\n\n    /** Emitted when a directory is dragged and dropped onto the draggable element. */\n    @Output()\n    folderEntityDropped: EventEmitter<any> = new EventEmitter();\n\n    private cssClassName: string = 'adf-file-draggable__input-focus';\n    private element: HTMLElement;\n\n    constructor(el: ElementRef, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n            this.element.addEventListener('dragover', this.onDragOver.bind(this));\n            this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n            this.element.addEventListener('drop', this.onDropFiles.bind(this));\n        });\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDropFiles);\n    }\n\n    /**\n     * Method called when files is dropped in the drag and drop area.\n     * @param event DOM event.\n     */\n    onDropFiles(event: any): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n\n            // Chrome, Edge, Firefox, Opera (Files + Folders)\n            const items = event.dataTransfer.items;\n            if (items) {\n                const files: File[] = [];\n\n                for (let i = 0; i < items.length; i++) {\n                    if (items[i].webkitGetAsEntry) {\n                        const item = items[i].webkitGetAsEntry();\n\n                        if (item) {\n                            if (item.isFile) {\n                                const file = items[i].getAsFile();\n\n                                if (file) {\n                                    files.push(file);\n                                }\n                            } else if (item.isDirectory) {\n                                this.folderEntityDropped.emit(item);\n                            }\n                        }\n                    }\n                }\n                if (files.length > 0) {\n                    this.filesDropped.emit(files);\n                }\n            } else {\n                // IE, Safari, Chrome, Edge, Firefox, Opera (Files only)\n                const files = FileUtils.toFileArray(event.dataTransfer.files);\n                this.filesDropped.emit(files);\n            }\n\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag in.\n     *\n     * @param event - DOM event.\n     */\n    onDragEnter(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file drag out.\n     *\n     * @param event - DOM event.\n     */\n    onDragLeave(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.remove(this.cssClassName);\n        }\n    }\n\n    /**\n     * Change the style of the drag area when a file is over the drag area.\n     *\n     * @param event\n     */\n    onDragOver(event: Event): void {\n        if (this.enabled && !event.defaultPrevented) {\n            this.preventDefault(event);\n            this.element.classList.add(this.cssClassName);\n        }\n    }\n\n    /**\n     * Prevent default and stop propagation of the DOM event.\n     *\n     * @param $event - DOM event.\n     */\n    preventDefault(event: Event): void {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MaterialModule } from '../material.module';\nimport { FileUploadingDialogComponent } from './components/file-uploading-dialog.component';\nimport { FileUploadingListRowComponent } from './components/file-uploading-list-row.component';\nimport { FileUploadingListComponent } from './components/file-uploading-list.component';\nimport { UploadButtonComponent } from './components/upload-button.component';\nimport { UploadVersionButtonComponent } from './components/upload-version-button.component';\nimport { UploadDragAreaComponent } from './components/upload-drag-area.component';\nimport { FileUploadErrorPipe } from './pipes/file-upload-error.pipe';\n\nimport { CoreModule } from '@alfresco/adf-core';\nimport { FileDraggableDirective } from './directives/file-draggable.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent,\n        FileUploadErrorPipe\n    ],\n    exports: [\n        FileDraggableDirective,\n        UploadDragAreaComponent,\n        UploadButtonComponent,\n        UploadVersionButtonComponent,\n        FileUploadingDialogComponent,\n        FileUploadingListComponent,\n        FileUploadingListRowComponent,\n        FileUploadErrorPipe\n    ]\n})\nexport class UploadModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { UploadModule } from '../upload/upload.module';\n\nimport { ContentActionListComponent } from './components/content-action/content-action-list.component';\nimport { ContentActionComponent } from './components/content-action/content-action.component';\nimport { ContentColumnListComponent } from './components/content-column/content-column-list.component';\nimport { ContentColumnComponent } from './components/content-column/content-column.component';\nimport { DocumentListComponent } from './components/document-list.component';\n\nimport { TrashcanNameColumnComponent } from './components/trashcan-name-column/trashcan-name-column.component';\nimport { LibraryStatusColumnComponent } from './components/library-status-column/library-status-column.component';\nimport { LibraryRoleColumnComponent } from './components/library-role-column/library-role-column.component';\nimport { LibraryNameColumnComponent } from './components/library-name-column/library-name-column.component';\nimport { NameColumnComponent } from './components/name-column/name-column.component';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FlexLayoutModule,\n        MaterialModule,\n        UploadModule\n    ],\n    declarations: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent\n    ],\n    exports: [\n        DocumentListComponent,\n        ContentColumnComponent,\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent,\n        ContentColumnListComponent,\n        ContentActionComponent,\n        ContentActionListComponent\n    ],\n    entryComponents: [\n        TrashcanNameColumnComponent,\n        LibraryStatusColumnComponent,\n        LibraryRoleColumnComponent,\n        LibraryNameColumnComponent,\n        NameColumnComponent\n    ]\n})\nexport class DocumentListModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AlfrescoApiService, AppConfigService } from '@alfresco/adf-core';\nimport {\n    QueryBody,\n    RequestFacetFields,\n    RequestFacetField,\n    RequestSortDefinitionInner,\n    ResultSetPaging,\n    RequestHighlight\n} from '@alfresco/js-api';\nimport { SearchCategory } from './search-category.interface';\nimport { FilterQuery } from './filter-query.interface';\nimport { SearchRange } from './search-range.interface';\nimport { SearchConfiguration } from './search-configuration.interface';\nimport { FacetQuery } from './facet-query.interface';\nimport { SearchSortingDefinition } from './search-sorting-definition.interface';\nimport { FacetField } from './facet-field.interface';\nimport { FacetFieldBucket } from './facet-field-bucket.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchQueryBuilderService {\n\n    private _userQuery = '';\n\n    updated = new Subject<QueryBody>();\n    executed = new Subject<ResultSetPaging>();\n    error = new Subject();\n\n    categories: Array<SearchCategory> = [];\n    queryFragments: { [id: string]: string } = {};\n    filterQueries: FilterQuery[] = [];\n    paging: { maxItems?: number; skipCount?: number } = null;\n    sorting: Array<SearchSortingDefinition> = [];\n\n    protected userFacetBuckets: { [key: string]: Array<FacetFieldBucket> } = {};\n\n    get userQuery(): string {\n        return this._userQuery;\n    }\n\n    set userQuery(value: string) {\n        value = (value || '').trim();\n        this._userQuery = value ? `(${value})` : '';\n    }\n\n    config: SearchConfiguration = {\n        categories: []\n    };\n\n    // TODO: to be supported in future iterations\n    ranges: { [id: string]: SearchRange } = {};\n\n    constructor(private appConfig: AppConfigService, private alfrescoApiService: AlfrescoApiService) {\n        this.resetToDefaults();\n    }\n\n    /**\n     * Resets the query to the defaults specified in the app config.\n     */\n    resetToDefaults() {\n        const template = this.appConfig.get<SearchConfiguration>('search');\n        if (template) {\n            this.config = JSON.parse(JSON.stringify(template));\n            this.categories = (this.config.categories || []).filter((category) => category.enabled);\n            this.filterQueries = this.config.filterQueries || [];\n            this.userFacetBuckets = {};\n            if (this.config.sorting) {\n                this.sorting = this.config.sorting.defaults || [];\n            }\n        }\n    }\n\n    /**\n     * Adds a facet bucket to a field.\n     * @param field The target field\n     * @param bucket Bucket to add\n     */\n    addUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            const existing = buckets.find((facetBucket) => facetBucket.label === bucket.label);\n            if (!existing) {\n                buckets.push(bucket);\n            }\n            this.userFacetBuckets[field.field] = buckets;\n        }\n    }\n\n    /**\n     * Gets the buckets currently added to a field\n     * @param field The target fields\n     * @returns Bucket array\n     */\n    getUserFacetBuckets(field: string) {\n        return this.userFacetBuckets[field] || [];\n    }\n\n    /**\n     * Removes an existing bucket from a field.\n     * @param field The target field\n     * @param bucket Bucket to remove\n     */\n    removeUserFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (field && field.field && bucket) {\n            const buckets = this.userFacetBuckets[field.field] || [];\n            this.userFacetBuckets[field.field] = buckets\n                .filter((facetBucket) => facetBucket.label !== bucket.label);\n        }\n    }\n\n    /**\n     * Adds a filter query to the current query.\n     * @param query Query string to add\n     */\n    addFilterQuery(query: string): void {\n        if (query) {\n            const existing = this.filterQueries.find((filterQuery) => filterQuery.query === query);\n            if (!existing) {\n                this.filterQueries.push({ query: query });\n            }\n        }\n    }\n\n    /**\n     * Removes an existing filter query.\n     * @param query The query to remove\n     */\n    removeFilterQuery(query: string): void {\n        if (query) {\n            this.filterQueries = this.filterQueries\n                .filter((filterQuery) => filterQuery.query !== query);\n        }\n    }\n\n    /**\n     * Gets a facet query by label.\n     * @param label Label of the query\n     * @returns Facet query data\n     */\n    getFacetQuery(label: string): FacetQuery {\n        if (label && this.hasFacetQueries) {\n            const result = this.config.facetQueries.queries.find((query) => query.label === label);\n            if (result) {\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Gets a facet field by label.\n     * @param label Label of the facet field\n     * @returns Facet field data\n     */\n    getFacetField(label: string): FacetField {\n        if (label) {\n            const fields = this.config.facetFields.fields || [];\n            const result = fields.find((field) => field.label === label);\n            if (result) {\n                result.label = this.getSupportedLabel(result.label);\n                return { ...result };\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Builds the current query and triggers the `updated` event.\n     */\n    update(): void {\n        const query = this.buildQuery();\n        this.updated.next(query);\n    }\n\n    /**\n     * Builds and executes the current query.\n     * @returns Nothing\n     */\n    async execute() {\n        try {\n            const query = this.buildQuery();\n            if (query) {\n                const resultSetPaging: ResultSetPaging = await this.alfrescoApiService.searchApi.search(query);\n                this.executed.next(resultSetPaging);\n            }\n        } catch (error) {\n            this.error.next(error);\n\n            this.executed.next({\n                list: {\n                    pagination: {\n                        totalItems: 0\n                    },\n                    entries: []\n                }\n            });\n        }\n    }\n\n    /**\n     * Builds the current query.\n     * @returns The finished query\n     */\n    buildQuery(): QueryBody {\n        const query = this.getFinalQuery();\n\n        const include = this.config.include || [];\n        if (include.length === 0) {\n            include.push('path', 'allowableOperations');\n        }\n\n        if (query) {\n            const result: QueryBody = <QueryBody> {\n                query: {\n                    query: query,\n                    language: 'afts'\n                },\n                include: include,\n                paging: this.paging,\n                fields: this.config.fields,\n                filterQueries: this.filterQueries,\n                facetQueries: this.facetQueries,\n                facetIntervals: this.facetIntervals,\n                facetFields: this.facetFields,\n                sort: this.sort,\n                highlight: this.highlight\n            };\n\n            result['facetFormat'] = 'V2';\n            return result;\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets the primary sorting definition.\n     * @returns The primary sorting definition\n     */\n    getPrimarySorting(): SearchSortingDefinition {\n        if (this.sorting && this.sorting.length > 0) {\n            return this.sorting[0];\n        }\n        return null;\n    }\n\n    /**\n     * Gets all pre-configured sorting options that users can choose from.\n     * @returns Pre-configured sorting options\n     */\n    getSortingOptions(): SearchSortingDefinition[] {\n        if (this.config && this.config.sorting) {\n            return this.config.sorting.options || [];\n        }\n        return [];\n    }\n\n    /**\n     * Gets the query group.\n     * @param query Target query\n     * @returns Query group\n     */\n    getQueryGroup(query) {\n        return query.group || this.config.facetQueries.label || 'Facet Queries';\n    }\n\n    /**\n     * Checks if FacetQueries has been defined\n     * @returns True if defined, false otherwise\n     */\n    get hasFacetQueries(): boolean {\n        if (this.config\n            && this.config.facetQueries\n            && this.config.facetQueries.queries\n            && this.config.facetQueries.queries.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Checks if FacetIntervals has been defined\n     * @returns True if defined, false otherwise\n     */\n    get hasFacetIntervals(): boolean {\n        if (this.config\n            && this.config.facetIntervals\n            && this.config.facetIntervals.intervals\n            && this.config.facetIntervals.intervals.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    get hasFacetHighlight(): boolean {\n        return this.config && this.config.highlight ? true : false;\n    }\n\n    protected get sort(): RequestSortDefinitionInner[] {\n        return this.sorting.map((def) => {\n            return new RequestSortDefinitionInner({\n                type: def.type,\n                field: def.field,\n                ascending: def.ascending\n            });\n        });\n    }\n\n    protected get facetQueries(): FacetQuery[] {\n        if (this.hasFacetQueries) {\n            return this.config.facetQueries.queries.map((query) => {\n                query.group = this.getQueryGroup(query);\n                return <FacetQuery> { ...query };\n            });\n        }\n\n        return null;\n    }\n\n    protected get facetIntervals(): any {\n        if (this.hasFacetIntervals) {\n            const configIntervals = this.config.facetIntervals;\n\n            return {\n                intervals: configIntervals.intervals.map((interval) => <any> {\n                    label: this.getSupportedLabel(interval.label),\n                    field: interval.field,\n                    sets: interval.sets.map((set) => <any> {\n                        label: this.getSupportedLabel(set.label),\n                        start: set.start,\n                        end: set.end,\n                        startInclusive: set.startInclusive,\n                        endInclusive: set.endInclusive\n                    })\n                })\n            };\n        }\n\n        return null;\n    }\n\n    protected get highlight(): RequestHighlight {\n        return this.hasFacetHighlight ? this.config.highlight : null;\n    }\n\n    protected getFinalQuery(): string {\n        let query = '';\n\n        this.categories.forEach((facet) => {\n            const customQuery = this.queryFragments[facet.id];\n            if (customQuery) {\n                if (query.length > 0) {\n                    query += ' AND ';\n                }\n                query += `(${customQuery})`;\n            }\n        });\n\n        let result = [this.userQuery, query]\n            .filter((entry) => entry)\n            .join(' AND ');\n\n        if (this.userFacetBuckets) {\n            Object.keys(this.userFacetBuckets).forEach((key) => {\n                const subQuery = (this.userFacetBuckets[key] || [])\n                    .filter((bucket) => bucket.filterQuery)\n                    .map((bucket) => bucket.filterQuery)\n                    .join(' OR ');\n                if (subQuery) {\n                    if (result.length > 0) {\n                        result += ' AND ';\n                    }\n                    result += `(${subQuery})`;\n                }\n            });\n        }\n\n        return result;\n    }\n\n    protected get facetFields(): RequestFacetFields {\n        const facetFields = this.config.facetFields && this.config.facetFields.fields;\n\n        if (facetFields && facetFields.length > 0) {\n            return {\n                facets: facetFields.map((facet) => <RequestFacetField> {\n                    field: facet.field,\n                    mincount: facet.mincount,\n                    label: this.getSupportedLabel(facet.label),\n                    limit: facet.limit,\n                    offset: facet.offset,\n                    prefix: facet.prefix\n                })\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Encloses a label name with double quotes if it contains whitespace characters.\n     * @param configLabel Original label text\n     * @returns Label, possibly with quotes if it contains spaces\n     */\n    getSupportedLabel(configLabel: string): string {\n        const spaceInsideLabelIndex = configLabel.search(/\\s/g);\n        if (spaceInsideLabelIndex > -1) {\n            return `\"${configLabel}\"`;\n        }\n        return configLabel;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    exportAs: 'searchAutocomplete',\n    host: {\n        'class': 'adf-search'\n    }\n})\nexport class SearchComponent implements AfterContentInit, OnChanges {\n\n    @ViewChild('panel')\n    panel: ElementRef;\n\n    @ContentChild(TemplateRef)\n    template: TemplateRef<any>;\n\n    /** Function that maps an option's value to its display value in the trigger. */\n    @Input()\n    displayWith: ((value: any) => string) | null = null;\n\n    /** Maximum number of results to show in the search. */\n    @Input()\n    maxResults: number = 20;\n\n    /** Number of results to skip from the results pagination. */\n    @Input()\n    skipResults: number = 0;\n\n    /** Search term to use when executing the search. Updating this value will\n     * run a new search and update the results.\n     */\n    @Input()\n    searchTerm: string = '';\n\n    /** CSS class for display. */\n    @Input('class')\n    set classList(classList: string) {\n        if (classList && classList.length) {\n            classList.split(' ').forEach((className) => this._classList[className.trim()] = true);\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Emitted when search results have fully loaded. */\n    @Output()\n    resultLoaded: EventEmitter<NodePaging> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    showPanel: boolean = false;\n    results: NodePaging;\n\n    get isOpen(): boolean {\n        return this._isOpen && this.showPanel;\n    }\n\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n    }\n\n    _isOpen: boolean = false;\n\n    keyPressedStream: Subject<string> = new Subject();\n\n    _classList: { [key: string]: boolean } = {};\n\n    constructor(private searchService: SearchService,\n                private _elementRef: ElementRef) {\n        this.keyPressedStream.asObservable()\n            .pipe(\n                debounceTime(200)\n            )\n            .subscribe((searchedWord: string) => {\n                this.loadSearchResults(searchedWord);\n            });\n\n        searchService.dataLoaded.subscribe(\n            (nodePaging: NodePaging) => this.onSearchDataLoaded(nodePaging),\n            (error) => this.onSearchDataError(error)\n        );\n    }\n\n    ngAfterContentInit() {\n        this.setVisibility();\n    }\n\n    ngOnChanges(changes) {\n        if (changes.searchTerm && changes.searchTerm.currentValue) {\n            this.loadSearchResults(changes.searchTerm.currentValue);\n        }\n    }\n\n    resetResults() {\n        this.cleanResults();\n        this.setVisibility();\n    }\n\n    reload() {\n        this.loadSearchResults(this.searchTerm);\n    }\n\n    private cleanResults() {\n        if (this.results) {\n            this.results = {};\n        }\n    }\n\n    private loadSearchResults(searchTerm?: string) {\n        this.resetResults();\n        if (searchTerm) {\n            this.searchService.search(searchTerm, this.maxResults, this.skipResults).subscribe(\n                (result) => this.onSearchDataLoaded(result),\n                (err) => this.onSearchDataError(err)\n            );\n        } else {\n            this.cleanResults();\n        }\n    }\n\n    onSearchDataLoaded(nodePaging: NodePaging) {\n        if (nodePaging) {\n            this.results = nodePaging;\n            this.resultLoaded.emit(this.results);\n            this.isOpen = true;\n            this.setVisibility();\n        }\n    }\n\n    onSearchDataError(error) {\n        if (error && error.status !== 400) {\n            this.results = null;\n            this.error.emit(error);\n        }\n    }\n\n    hidePanel() {\n        if (this.isOpen) {\n            this._classList['adf-search-show'] = false;\n            this._classList['adf-search-hide'] = true;\n            this.isOpen = false;\n        }\n    }\n\n    setVisibility() {\n        this.showPanel = !!this.results && !!this.results.list;\n        this._classList['adf-search-show'] = this.showPanel;\n        this._classList['adf-search-hide'] = !this.showPanel;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-empty-search-result',\n    templateUrl: './empty-search-result.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class EmptySearchResultComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AuthenticationService, ThumbnailService } from '@alfresco/adf-core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output,\n         QueryList, ViewEncapsulation, ViewChild, ViewChildren, ElementRef, TemplateRef, ContentChild } from '@angular/core';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { Observable, Subject } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { MatListItem } from '@angular/material';\nimport { EmptySearchResultComponent } from './empty-search-result.component';\nimport { debounceTime, filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-search-control',\n    templateUrl: './search-control.component.html',\n    styleUrls: ['./search-control.component.scss'],\n    animations: [\n        trigger('transitionMessages', [\n            state('active', style({ transform: 'translateX(0%)', 'margin-left': '13px' })),\n            state('inactive', style({ transform: 'translateX(82%)'})),\n            state('no-animation', style({ transform: 'translateX(0%)', width: '100%' })),\n            transition('inactive => active',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n            transition('active => inactive',\n                animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-control' }\n})\nexport class SearchControlComponent implements OnInit, OnDestroy {\n\n    /** Toggles whether to use an expanding search control. If false\n     * then a regular input is used.\n     */\n    @Input()\n    expandable: boolean = true;\n\n    /** Toggles highlighting of the search term in the results. */\n    @Input()\n    highlight: boolean = false;\n\n    /** Type of the input field to render, e.g. \"search\" or \"text\" (default). */\n    @Input()\n    inputType: string = 'text';\n\n    /** Toggles auto-completion of the search input field. */\n    @Input()\n    autocomplete: boolean = false;\n\n    /** Toggles \"find-as-you-type\" suggestions for possible matches. */\n    @Input()\n    liveSearchEnabled: boolean = true;\n\n    /** Maximum number of results to show in the live search. */\n    @Input()\n    liveSearchMaxResults: number = 5;\n\n    /** Emitted when the search is submitted by pressing the ENTER key.\n     * The search term is provided as the value of the event.\n     */\n    @Output()\n    submit: EventEmitter<any> = new EventEmitter();\n\n    /** Emitted when the search term is changed. The search term is provided\n     * in the 'value' property of the returned object.  If the term is less\n     * than three characters in length then it is truncated to an empty\n     * string.\n     */\n    @Output()\n    searchChange: EventEmitter<string> = new EventEmitter();\n\n    /** Emitted when a file item from the list of \"find-as-you-type\" results is selected. */\n    @Output()\n    optionClicked: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('search')\n    searchAutocomplete: SearchComponent;\n\n    @ViewChild('searchInput')\n    searchInput: ElementRef;\n\n    @ViewChildren(MatListItem)\n    private listResultElement: QueryList<MatListItem>;\n\n    @ContentChild(EmptySearchResultComponent)\n    emptySearchTemplate: EmptySearchResultComponent;\n\n    searchTerm: string = '';\n    subscriptAnimationState: string;\n    noSearchResultTemplate: TemplateRef <any> = null;\n\n    private toggleSearch = new Subject<any>();\n    private focusSubject = new Subject<FocusEvent>();\n\n    constructor(public authService: AuthenticationService,\n                private thumbnailService: ThumbnailService) {\n\n        this.toggleSearch.asObservable().pipe(debounceTime(200)).subscribe(() => {\n            if (this.expandable) {\n                this.subscriptAnimationState = this.subscriptAnimationState === 'inactive' ? 'active' : 'inactive';\n\n                if (this.subscriptAnimationState === 'inactive') {\n                    this.searchTerm = '';\n                    this.searchAutocomplete.resetResults();\n                    if ( document.activeElement.id === this.searchInput.nativeElement.id) {\n                        this.searchInput.nativeElement.blur();\n                    }\n                }\n            }\n        });\n    }\n\n    applySearchFocus(animationDoneEvent) {\n        if (animationDoneEvent.toState === 'active') {\n            this.searchInput.nativeElement.focus();\n        }\n    }\n\n    ngOnInit() {\n        this.subscriptAnimationState = this.expandable ? 'inactive' : 'no-animation';\n        this.setupFocusEventHandlers();\n    }\n\n    isNoSearchTemplatePresent(): boolean {\n        return this.emptySearchTemplate ? true : false;\n    }\n\n    ngOnDestroy(): void {\n        if (this.focusSubject) {\n            this.focusSubject.complete();\n            this.focusSubject = null;\n        }\n\n        if (this.toggleSearch) {\n            this.toggleSearch.complete();\n            this.toggleSearch = null;\n        }\n    }\n\n    isLoggedIn(): boolean {\n        return this.authService.isEcmLoggedIn();\n    }\n\n    searchSubmit(event: any) {\n        this.submit.emit(event);\n        this.toggleSearchBar();\n    }\n\n    inputChange(event: any) {\n        this.searchChange.emit(event);\n    }\n\n    getAutoComplete(): string {\n        return this.autocomplete ? 'on' : 'off';\n    }\n\n    getMimeTypeIcon(node: NodeEntry): string {\n        const mimeType = this.getMimeType(node);\n        return this.thumbnailService.getMimeTypeIcon(mimeType);\n    }\n\n    getMimeType(node: NodeEntry): string {\n        let mimeType: string;\n\n        if (node.entry.content && node.entry.content.mimeType) {\n            mimeType = node.entry.content.mimeType;\n        }\n        if (node.entry.isFolder) {\n            mimeType = 'folder';\n        }\n        return mimeType;\n    }\n\n    isSearchBarActive() {\n        return this.subscriptAnimationState === 'active' && this.liveSearchEnabled;\n    }\n\n    toggleSearchBar() {\n        if (this.toggleSearch) {\n            this.toggleSearch.next();\n        }\n    }\n\n    elementClicked(item: any) {\n        if (item.entry) {\n            this.optionClicked.next(item);\n            this.toggleSearchBar();\n        }\n    }\n\n    onFocus($event): void {\n        this.focusSubject.next($event);\n    }\n\n    onBlur($event): void {\n        this.focusSubject.next($event);\n    }\n\n    activateToolbar() {\n        if (!this.isSearchBarActive()) {\n            this.toggleSearchBar();\n        }\n    }\n\n    selectFirstResult() {\n        if ( this.listResultElement && this.listResultElement.length > 0) {\n            const firstElement: MatListItem = <MatListItem> this.listResultElement.first;\n            firstElement._getHostElement().focus();\n        }\n    }\n\n    onRowArrowDown($event: KeyboardEvent): void {\n        const nextElement: any = this.getNextElementSibling(<Element> $event.target);\n        if (nextElement) {\n            nextElement.focus();\n        }\n    }\n\n    onRowArrowUp($event: KeyboardEvent): void {\n        const previousElement: any = this.getPreviousElementSibling(<Element> $event.target);\n        if (previousElement) {\n            previousElement.focus();\n        } else {\n            this.searchInput.nativeElement.focus();\n            this.focusSubject.next(new FocusEvent('focus'));\n        }\n    }\n\n    private setupFocusEventHandlers() {\n        const focusEvents: Observable<FocusEvent> = this.focusSubject\n            .asObservable()\n            .pipe(\n                debounceTime(50),\n                filter(($event: any) => {\n                    return this.isSearchBarActive() && ($event.type === 'blur' || $event.type === 'focusout');\n                })\n            );\n\n        focusEvents.subscribe(() => {\n            this.toggleSearchBar();\n        });\n    }\n\n    private getNextElementSibling(node: Element): Element {\n        return node.nextElementSibling;\n    }\n\n    private getPreviousElementSibling(node: Element): Element {\n        return node.previousElementSibling;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable: no-input-rename no-use-before-declare no-input-rename  */\n\nimport { ENTER, ESCAPE } from '@angular/cdk/keycodes';\nimport {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, Subject, Subscription, merge, of, fromEvent } from 'rxjs';\nimport { SearchComponent } from './search.component';\nimport { filter, switchMap, takeUntil } from 'rxjs/operators';\n\nexport const SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SearchTriggerDirective),\n    multi: true\n};\n\n/**\n * Directive selectors without adf- prefix will be deprecated on 3.0.0\n */\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: `input[searchAutocomplete], textarea[searchAutocomplete]`,\n    host: {\n        'role': 'combobox',\n        '[attr.autocomplete]': 'autocomplete',\n        'aria-autocomplete': 'list',\n        '[attr.aria-expanded]': 'panelOpen.toString()',\n        '(blur)': 'onTouched()',\n        '(input)': 'handleInput($event)',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    providers: [SEARCH_AUTOCOMPLETE_VALUE_ACCESSOR]\n})\nexport class SearchTriggerDirective implements ControlValueAccessor, OnDestroy {\n    private onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n    @Input('searchAutocomplete')\n    searchPanel: SearchComponent;\n\n    @Input()\n    autocomplete: string = 'off';\n\n    private _panelOpen: boolean = false;\n    private closingActionsSubscription: Subscription;\n    private escapeEventStream = new Subject<void>();\n\n    onChange: (value: any) => void = () => { };\n\n    onTouched = () => { };\n\n    constructor(private element: ElementRef,\n                private ngZone: NgZone,\n                private changeDetectorRef: ChangeDetectorRef,\n                @Optional() @Inject(DOCUMENT) private document: any) { }\n\n    ngOnDestroy() {\n        this.onDestroy$.next(true);\n        this.onDestroy$.complete();\n\n        if (this.escapeEventStream) {\n            this.escapeEventStream = null;\n        }\n        if ( this.closingActionsSubscription ) {\n            this.closingActionsSubscription.unsubscribe();\n        }\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen && this.searchPanel.showPanel;\n    }\n\n    openPanel(): void {\n        this.searchPanel.isOpen = this._panelOpen = true;\n        this.closingActionsSubscription = this.subscribeToClosingActions();\n    }\n\n    closePanel(): void {\n        if (this._panelOpen) {\n            this.closingActionsSubscription.unsubscribe();\n            this._panelOpen = false;\n            this.searchPanel.resetResults();\n            this.searchPanel.hidePanel();\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    get panelClosingActions(): Observable<any> {\n        return merge(\n            this.escapeEventStream,\n            this.outsideClickStream\n        );\n    }\n\n    private get outsideClickStream(): Observable<any> {\n        if (!this.document) {\n            return of(null);\n        }\n\n        return merge(\n            fromEvent(this.document, 'click'),\n            fromEvent(this.document, 'touchend')\n        ).pipe(\n            filter((event: MouseEvent | TouchEvent) => {\n                const clickTarget = event.target as HTMLElement;\n                return this._panelOpen && clickTarget !== this.element.nativeElement;\n            }),\n            takeUntil(this.onDestroy$)\n        );\n    }\n\n    writeValue(value: any): void {\n        Promise.resolve(null).then(() => this.setTriggerValue(value));\n    }\n\n    registerOnChange(fn: (value: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        if (keyCode === ESCAPE && this.panelOpen) {\n            this.escapeEventStream.next();\n            event.stopPropagation();\n        } else if (keyCode === ENTER) {\n            this.escapeEventStream.next();\n            event.preventDefault();\n        }\n\n    }\n\n    handleInput(event: KeyboardEvent): void {\n        if (document.activeElement === event.target) {\n            const inputValue: string = (event.target as HTMLInputElement).value;\n            this.onChange(inputValue);\n            if (inputValue) {\n                this.searchPanel.keyPressedStream.next(inputValue);\n                this.openPanel();\n            } else {\n                this.searchPanel.resetResults();\n                this.closePanel();\n            }\n        }\n    }\n\n    private isPanelOptionClicked(event: MouseEvent) {\n        let isPanelOption: boolean = false;\n        if ( event ) {\n            const clickTarget = event.target as HTMLElement;\n            isPanelOption = !this.isNoResultOption(event) &&\n                            !!this.searchPanel.panel &&\n                            !!this.searchPanel.panel.nativeElement.contains(clickTarget);\n        }\n        return isPanelOption;\n    }\n\n    private isNoResultOption(event: MouseEvent) {\n        return this.searchPanel.results.list ? this.searchPanel.results.list.entries.length === 0 : true;\n    }\n\n    private subscribeToClosingActions(): Subscription {\n        const firstStable = this.ngZone.onStable.asObservable();\n        const optionChanges = this.searchPanel.keyPressedStream.asObservable();\n\n        return merge(firstStable, optionChanges)\n            .pipe(\n                switchMap(() => {\n                    this.searchPanel.setVisibility();\n                    return this.panelClosingActions;\n                }),\n                takeUntil(this.onDestroy$)\n            )\n            .subscribe((event) => this.setValueAndClose(event));\n    }\n\n    private setTriggerValue(value: any): void {\n        const toDisplay = this.searchPanel && this.searchPanel.displayWith ?\n            this.searchPanel.displayWith(value) : value;\n        const inputValue = toDisplay != null ? toDisplay : '';\n        this.element.nativeElement.value = inputValue;\n    }\n\n    private setValueAndClose(event: any | null): void {\n        if (this.isPanelOptionClicked(event) && !event.defaultPrevented) {\n            this.setTriggerValue(event.target.textContent.trim());\n            this.onChange(event.target.textContent.trim());\n            this.element.nativeElement.focus();\n        }\n        this.closePanel();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_PAGE_SIZE = 5;\n\nexport class SearchFilterList<T> implements Iterable<T> {\n\n    private filteredItems: T[] = [];\n    private _filterText: string = '';\n\n    items: T[] = [];\n    pageSize: number = DEFAULT_PAGE_SIZE;\n    currentPageSize: number = DEFAULT_PAGE_SIZE;\n\n    get filterText(): string {\n        return this._filterText;\n    }\n\n    set filterText(value: string) {\n        this._filterText = value;\n        this.applyFilter();\n    }\n\n    private _filter: (item: T) => boolean = () => true;\n\n    get filter(): (item: T) => boolean {\n        return this._filter;\n    }\n\n    set filter(value: (item: T) => boolean ) {\n        this._filter = value;\n        this.applyFilter();\n    }\n\n    private applyFilter() {\n        if (this.filter) {\n            this.filteredItems = this.items.filter(this.filter);\n        } else {\n            this.filteredItems = this.items;\n        }\n        this.currentPageSize = this.pageSize;\n    }\n\n    /** Returns visible portion of the items.  */\n    get visibleItems(): T[] {\n        return this.filteredItems.slice(0, this.currentPageSize);\n    }\n\n    /** Returns entire collection length including items not displayed on the page. */\n    get length(): number {\n        return this.items.length;\n    }\n\n    /** Detects whether more items can be displayed. */\n    get canShowMoreItems(): boolean {\n        return this.filteredItems.length > this.currentPageSize;\n    }\n\n    /** Detects whether less items can be displayed. */\n    get canShowLessItems(): boolean {\n        return this.currentPageSize > this.pageSize;\n    }\n\n    /** Detects whether content fits single page. */\n    get fitsPage(): boolean {\n        return this.pageSize >= this.filteredItems.length;\n    }\n\n    constructor(items: T[] = [], pageSize?: number) {\n        this.items = items;\n        this.filteredItems = items;\n        this.pageSize = pageSize || DEFAULT_PAGE_SIZE;\n        this.currentPageSize = pageSize || DEFAULT_PAGE_SIZE;\n    }\n\n    /** Display more items. */\n    showMoreItems() {\n        if (this.canShowMoreItems) {\n            this.currentPageSize += this.pageSize;\n        }\n    }\n\n    /** Display less items. */\n    showLessItems() {\n        if (this.canShowLessItems) {\n            this.currentPageSize -= this.pageSize;\n        }\n    }\n\n    /** Reset entire collection and page settings. */\n    clear() {\n        this.currentPageSize = this.pageSize;\n        this.items = [];\n        this.filteredItems = [];\n        this.filterText = '';\n    }\n\n    addItem(item: T) {\n        if (!item) {\n            return;\n        }\n        this.items.push(item);\n        this.applyFilter();\n    }\n\n    deleteItem(item: T) {\n        const removeIndex = this.items.indexOf(item);\n        if (removeIndex > -1) {\n            this.items.splice(removeIndex, 1);\n            this.filteredItems.splice(removeIndex, 1);\n        }\n    }\n\n    [Symbol.iterator](): Iterator<T> {\n        let pointer = 0;\n        const items = this.visibleItems;\n\n        return {\n            next(): IteratorResult<T> {\n                if (pointer < items.length) {\n                    return {\n                        done: false,\n                        value: items[pointer++]\n                    };\n                } else {\n                    return {\n                        done: true,\n                        value: null\n                    };\n                }\n            }\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, OnDestroy } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchService, TranslationService } from '@alfresco/adf-core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { FacetFieldBucket } from '../../facet-field-bucket.interface';\nimport { FacetField } from '../../facet-field.interface';\nimport { SearchFilterList } from './models/search-filter-list.model';\nimport { takeWhile } from 'rxjs/operators';\nimport { ResultSetPaging, GenericBucket, GenericFacetResponse, ResultSetContext } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-search-filter',\n    templateUrl: './search-filter.component.html',\n    styleUrls: ['./search-filter.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-filter' }\n})\nexport class SearchFilterComponent implements OnInit, OnDestroy {\n\n    private DEFAULT_PAGE_SIZE = 5;\n\n    isAlive = true;\n\n    /** All facet field items to be displayed in the component. These are updated according to the response.\n     *  When a new search is performed, the already existing items are updated with the new bucket count values and\n     *  the newly received items are added to the responseFacets.\n     */\n    responseFacets: FacetField[] = null;\n\n    private facetQueriesPageSize = this.DEFAULT_PAGE_SIZE;\n    facetQueriesLabel: string = 'Facet Queries';\n    facetExpanded = {\n        'default': false\n    };\n    displayResetButton: boolean;\n    selectedBuckets: Array<{ field: FacetField, bucket: FacetFieldBucket }> = [];\n\n    constructor(public queryBuilder: SearchQueryBuilderService,\n                private searchService: SearchService,\n                private translationService: TranslationService) {\n        if (queryBuilder.config && queryBuilder.config.facetQueries) {\n            this.facetQueriesLabel = queryBuilder.config.facetQueries.label || 'Facet Queries';\n            this.facetQueriesPageSize = queryBuilder.config.facetQueries.pageSize || this.DEFAULT_PAGE_SIZE;\n            this.facetExpanded['query'] = queryBuilder.config.facetQueries.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetFields) {\n            this.facetExpanded['field'] = queryBuilder.config.facetFields.expanded;\n        }\n        if (queryBuilder.config && queryBuilder.config.facetIntervals) {\n            this.facetExpanded['interval'] = queryBuilder.config.facetIntervals.expanded;\n        }\n        this.displayResetButton = this.queryBuilder.config && !!this.queryBuilder.config.resetButton;\n\n        this.queryBuilder.updated.pipe(\n            takeWhile(() => this.isAlive)\n        ).subscribe(() => {\n            this.queryBuilder.execute();\n        });\n    }\n\n    ngOnInit() {\n        if (this.queryBuilder) {\n            this.queryBuilder.executed.pipe(\n                takeWhile(() => this.isAlive)\n            ).subscribe((resultSetPaging: ResultSetPaging) => {\n                this.onDataLoaded(resultSetPaging);\n                this.searchService.dataLoaded.next(resultSetPaging);\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.isAlive = false;\n    }\n\n    private updateSelectedBuckets() {\n        if (this.responseFacets) {\n            this.selectedBuckets = [];\n            for (const field of this.responseFacets) {\n                if (field.buckets) {\n                    this.selectedBuckets.push(\n                        ...this.queryBuilder.getUserFacetBuckets(field.field)\n                            .filter((bucket) => bucket.checked)\n                            .map((bucket) => {\n                                return { field, bucket };\n                            })\n                    );\n                }\n            }\n        } else {\n            this.selectedBuckets = [];\n        }\n    }\n\n    onToggleBucket(event: MatCheckboxChange, field: FacetField, bucket: FacetFieldBucket) {\n        if (event && bucket) {\n            if (event.checked) {\n                this.selectFacetBucket(field, bucket);\n            } else {\n                this.unselectFacetBucket(field, bucket);\n            }\n        }\n    }\n\n    selectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = true;\n            this.queryBuilder.addUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    unselectFacetBucket(field: FacetField, bucket: FacetFieldBucket) {\n        if (bucket) {\n            bucket.checked = false;\n            this.queryBuilder.removeUserFacetBucket(field, bucket);\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    canResetSelectedBuckets(field: FacetField): boolean {\n        if (field && field.buckets) {\n            return field.buckets.items.some((bucket) => bucket.checked);\n        }\n        return false;\n    }\n\n    resetSelectedBuckets(field: FacetField) {\n        if (field && field.buckets) {\n            for (const bucket of field.buckets.items) {\n                bucket.checked = false;\n                this.queryBuilder.removeUserFacetBucket(field, bucket);\n            }\n            this.updateSelectedBuckets();\n            this.queryBuilder.update();\n        }\n    }\n\n    resetAllSelectedBuckets() {\n        this.responseFacets.forEach((field) => {\n            if (field && field.buckets) {\n                for (const bucket of field.buckets.items) {\n                    bucket.checked = false;\n                    this.queryBuilder.removeUserFacetBucket(field, bucket);\n                }\n                this.updateSelectedBuckets();\n            }\n        });\n        this.queryBuilder.update();\n    }\n\n    resetAll() {\n        this.resetAllSelectedBuckets();\n        this.responseFacets = null;\n    }\n\n    shouldExpand(field: FacetField): boolean {\n        return this.facetExpanded[field.type] || this.facetExpanded['default'];\n    }\n\n    onDataLoaded(data: any) {\n        const context = data.list.context;\n\n        if (context) {\n            this.parseFacets(context);\n        } else {\n            this.responseFacets = null;\n        }\n    }\n\n    private parseFacets(context: ResultSetContext) {\n        this.parseFacetFields(context);\n        this.parseFacetIntervals(context);\n        this.parseFacetQueries(context);\n    }\n\n    private parseFacetItems(context: ResultSetContext, configFacetFields: FacetField[], itemType: string) {\n        configFacetFields.forEach((field) => {\n            const responseField = this.findFacet(context, itemType, field.label);\n            const responseBuckets = this.getResponseBuckets(responseField, field)\n                .filter(this.getFilterByMinCount(field.mincount));\n            const alreadyExistingField = this.findResponseFacet(itemType, field.label);\n\n            if (alreadyExistingField) {\n                const alreadyExistingBuckets = alreadyExistingField.buckets && alreadyExistingField.buckets.items || [];\n\n                this.updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets);\n            } else if (responseField) {\n\n                const bucketList = new SearchFilterList<FacetFieldBucket>(responseBuckets, field.pageSize);\n                bucketList.filter = this.getBucketFilterFunction(bucketList);\n\n                if (!this.responseFacets) {\n                    this.responseFacets = [];\n                }\n                this.responseFacets.push(<FacetField> {\n                    ...field,\n                    type: responseField.type || itemType,\n                    label: field.label,\n                    pageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    currentPageSize: field.pageSize | this.DEFAULT_PAGE_SIZE,\n                    buckets: bucketList\n                });\n            }\n        });\n    }\n\n    private parseFacetFields(context: ResultSetContext) {\n        const configFacetFields = this.queryBuilder.config.facetFields && this.queryBuilder.config.facetFields.fields || [];\n        this.parseFacetItems(context, configFacetFields, 'field');\n    }\n\n    private parseFacetIntervals(context: ResultSetContext) {\n        const configFacetIntervals = this.queryBuilder.config.facetIntervals && this.queryBuilder.config.facetIntervals.intervals || [];\n        this.parseFacetItems(context, configFacetIntervals, 'interval');\n    }\n\n    private parseFacetQueries(context: ResultSetContext) {\n        const configFacetQueries = this.queryBuilder.config.facetQueries && this.queryBuilder.config.facetQueries.queries || [];\n        const configGroups = configFacetQueries.reduce((acc, query) => {\n            const group = this.queryBuilder.getQueryGroup(query);\n            if (acc[group]) {\n                acc[group].push(query);\n            } else {\n                acc[group] = [query];\n            }\n            return acc;\n        }, []);\n\n        const mincount = this.queryBuilder.config.facetQueries && this.queryBuilder.config.facetQueries.mincount;\n        const mincountFilter = this.getFilterByMinCount(mincount);\n\n        Object.keys(configGroups).forEach((group) => {\n            const responseField = this.findFacet(context, 'query', group);\n            const responseBuckets = this.getResponseQueryBuckets(responseField, configGroups[group])\n                .filter(mincountFilter);\n            const alreadyExistingField = this.findResponseFacet('query', group);\n\n            if (alreadyExistingField) {\n                const alreadyExistingBuckets = alreadyExistingField.buckets && alreadyExistingField.buckets.items || [];\n\n                this.updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets);\n            } else if (responseField) {\n\n                const bucketList = new SearchFilterList<FacetFieldBucket>(responseBuckets, this.facetQueriesPageSize);\n                bucketList.filter = this.getBucketFilterFunction(bucketList);\n\n                if (!this.responseFacets) {\n                    this.responseFacets = [];\n                }\n                this.responseFacets.push(<FacetField> {\n                    field: group,\n                    type: responseField.type || 'query',\n                    label: group,\n                    pageSize: this.DEFAULT_PAGE_SIZE,\n                    currentPageSize: this.DEFAULT_PAGE_SIZE,\n                    buckets: bucketList\n                });\n            }\n        });\n\n    }\n\n    private getResponseBuckets(responseField: GenericFacetResponse, configField: FacetField): FacetFieldBucket[] {\n        return ((responseField && responseField.buckets) || []).map((respBucket) => {\n\n            respBucket['count'] = this.getCountValue(respBucket);\n            respBucket.filterQuery = respBucket.filterQuery || this.getCorrespondingFilterQuery(configField, respBucket.label);\n            return <FacetFieldBucket> {\n                ...respBucket,\n                checked: false,\n                display: respBucket.display,\n                label: respBucket.label\n            };\n        });\n    }\n\n    private getResponseQueryBuckets(responseField: GenericFacetResponse, configGroup: any): FacetFieldBucket[] {\n        return (configGroup || []).map((query) => {\n            const respBucket = ((responseField && responseField.buckets) || [])\n                .find((bucket) => bucket.label === query.label);\n\n            respBucket['count'] = this.getCountValue(respBucket);\n            return <FacetFieldBucket> {\n                ...respBucket,\n                checked: false,\n                display: respBucket.display,\n                label: respBucket.label\n            };\n        });\n    }\n\n    private getCountValue(bucket: GenericBucket): number {\n        return (!!bucket && !!bucket.metrics && bucket.metrics[0] && bucket.metrics[0].value && bucket.metrics[0].value.count)\n            || 0;\n    }\n\n    getBucketCountDisplay(bucket: FacetFieldBucket): string {\n        return bucket.count === null ? '' : `(${bucket.count})`;\n    }\n\n    private getFilterByMinCount(mincountInput: number) {\n        return (bucket) => {\n            let mincount = mincountInput;\n            if (mincount === undefined) {\n                mincount = 1;\n            }\n            return bucket.count >= mincount;\n        };\n    }\n\n    private getCorrespondingFilterQuery (configFacetItem: FacetField, bucketLabel: string): string {\n        let filterQuery = null;\n\n        if (configFacetItem.field && bucketLabel) {\n\n            if (configFacetItem.sets) {\n                const configSet = configFacetItem.sets.find((set) => bucketLabel === set.label);\n\n                if (configSet) {\n                    filterQuery = this.buildIntervalQuery(configFacetItem.field, configSet);\n                }\n\n            } else {\n                filterQuery = `${configFacetItem.field}:\"${bucketLabel}\"`;\n            }\n        }\n\n        return filterQuery;\n    }\n\n    private buildIntervalQuery(fieldName: string, interval: any): string {\n        const start = interval.start;\n        const end = interval.end;\n        const startLimit = (interval.startInclusive === undefined || interval.startInclusive === true) ? '[' : '<';\n        const endLimit = (interval.endInclusive === undefined || interval.endInclusive === true) ? ']' : '>';\n\n        return `${fieldName}:${startLimit}\"${start}\" TO \"${end}\"${endLimit}`;\n    }\n\n    private findFacet(context: ResultSetContext, itemType: string, fieldLabel: string): GenericFacetResponse {\n        return (context.facets || []).find((response) => response.type === itemType && response.label === fieldLabel) || {};\n    }\n\n    private findResponseFacet(itemType: string, fieldLabel: string): FacetField {\n        return (this.responseFacets || []).find((response) => response.type === itemType && response.label === fieldLabel);\n    }\n\n    private updateExistingBuckets(responseField, responseBuckets, alreadyExistingField, alreadyExistingBuckets) {\n        const bucketsToDelete = [];\n\n        alreadyExistingBuckets\n            .map((bucket) => {\n                const responseBucket = ((responseField && responseField.buckets) || []).find((respBucket) => respBucket.label === bucket.label);\n\n                if (!responseBucket) {\n                    bucketsToDelete.push(bucket);\n                }\n                bucket.count = this.getCountValue(responseBucket);\n                return bucket;\n            });\n\n        const hasSelection = this.selectedBuckets\n            .find((selBuckets) => alreadyExistingField.label === selBuckets.field.label && alreadyExistingField.type === selBuckets.field.type);\n\n        if (!hasSelection && bucketsToDelete.length) {\n            bucketsToDelete.forEach((bucket) => {\n                alreadyExistingField.buckets.deleteItem(bucket);\n            });\n        }\n\n        responseBuckets.forEach((respBucket) => {\n            const existingBucket = alreadyExistingBuckets.find((oldBucket) => oldBucket.label === respBucket.label);\n\n            if (!existingBucket) {\n                alreadyExistingField.buckets.addItem(respBucket);\n            }\n        });\n    }\n\n    private getBucketFilterFunction (bucketList) {\n        return (bucket: FacetFieldBucket): boolean => {\n            if (bucket && bucketList.filterText) {\n                const pattern = (bucketList.filterText || '').toLowerCase();\n                const label = (this.translationService.instant(bucket.display) || this.translationService.instant(bucket.label)).toLowerCase();\n                return this.queryBuilder.config.filterWithContains ? label.indexOf(pattern) !== -1 : label.startsWith(pattern);\n            }\n            return true;\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\n\n@Component({\n    selector: 'adf-search-text',\n    templateUrl: './search-text.component.html',\n    styleUrls: ['./search-text.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-text' }\n})\nexport class SearchTextComponent implements SearchWidget, OnInit {\n\n    /** The content of the text box. */\n    @Input()\n    value = '';\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n\n    ngOnInit() {\n        if (this.context && this.settings && this.settings.pattern) {\n            const pattern = new RegExp(this.settings.pattern, 'g');\n            const match = pattern.exec(this.context.queryFragments[this.id] || '');\n\n            if (match && match.length > 1) {\n                this.value = match[1];\n            }\n        }\n    }\n\n    reset() {\n        this.value = '';\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event) {\n        this.value = event.target.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: string) {\n        if (this.context && this.settings && this.settings.field) {\n            this.context.queryFragments[this.id] = value ? `${this.settings.field}:'${value}'` : '';\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { MatRadioChange } from '@angular/material';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchRadioOption {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'adf-search-radio',\n    templateUrl: './search-radio.component.html',\n    styleUrls: ['./search-radio.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-radio' }\n})\nexport class SearchRadioComponent implements SearchWidget, OnInit {\n\n    /** The value of the selected radio button. */\n    @Input()\n    value: string;\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    options: SearchFilterList<SearchRadioOption>;\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchRadioOption>();\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList<SearchRadioOption>(\n                    this.settings.options, this.pageSize\n                );\n            }\n        }\n\n        const initialValue = this.getSelectedValue();\n        if (initialValue !== null) {\n            this.setValue(initialValue);\n        }\n    }\n\n    private getSelectedValue(): string {\n        const options: any[] = this.settings['options'] || [];\n        if (options && options.length > 0) {\n            let selected = options.find((opt) => opt.default);\n            if (!selected) {\n                selected = options[0];\n            }\n            return selected.value;\n        }\n        return null;\n    }\n\n    private setValue(newValue: string) {\n        this.value = newValue;\n        this.context.queryFragments[this.id] = newValue;\n        this.context.update();\n    }\n\n    changeHandler(event: MatRadioChange) {\n        this.setValue(event.value);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit, Input } from '@angular/core';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { MatSliderChange } from '@angular/material';\n\n@Component({\n    selector: 'adf-search-slider',\n    templateUrl: './search-slider.component.html',\n    styleUrls: ['./search-slider.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-slider' }\n})\nexport class SearchSliderComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings: SearchWidgetSettings;\n    context: SearchQueryBuilderService;\n    step: number;\n    min: number;\n    max: number;\n    thumbLabel = false;\n\n    /** The numeric value represented by the slider. */\n    @Input()\n    value: number | null;\n\n    ngOnInit() {\n        if (this.settings) {\n            if (this.settings.hasOwnProperty('min')) {\n                this.min = this.settings['min'];\n            }\n\n            if (this.settings.hasOwnProperty('max')) {\n                this.max = this.settings['max'];\n            }\n\n            if (this.settings.hasOwnProperty('step')) {\n                this.step = this.settings['step'];\n            }\n\n            this.thumbLabel = this.settings['thumbLabel'] ? true : false;\n        }\n    }\n\n    reset() {\n        this.value = this.min || 0;\n        this.updateQuery(null);\n    }\n\n    onChangedHandler(event: MatSliderChange) {\n        this.value = event.value;\n        this.updateQuery(this.value);\n    }\n\n    private updateQuery(value: number | null) {\n        if (this.id && this.context && this.settings && this.settings.field) {\n            if (value === null) {\n                this.context.queryFragments[this.id] = '';\n            } else {\n                this.context.queryFragments[this.id] = `${this.settings.field}:[0 TO ${value}]`;\n            }\n            this.context.update();\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorStateMatcher } from '@angular/material';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\n\nexport class LiveErrorStateMatcher implements ErrorStateMatcher {\n\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        const isSubmitted = form && form.submitted;\n        return !!(control && control.invalid && (control.dirty || control.touched || (!control.pristine && isSubmitted)));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\n\n@Component({\n    selector: 'adf-search-number-range',\n    templateUrl: './search-number-range.component.html',\n    styleUrls: ['./search-number-range.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-number-range' }\n})\nexport class SearchNumberRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n\n    field: string;\n    format = '[{FROM} TO {TO}]';\n\n    validators: Validators;\n\n    ngOnInit(): void {\n\n        if (this.settings) {\n            this.field = this.settings.field;\n            this.format = this.settings.format || '[{FROM} TO {TO}]';\n        }\n\n        this.validators = Validators.compose([\n            Validators.required,\n            Validators.pattern(/^-?(0|[1-9]\\d*)?$/),\n            Validators.min(0)\n        ]);\n\n        this.from = new FormControl('', this.validators);\n        this.to = new FormControl('', this.validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        }, this.formValidator);\n    }\n\n    formValidator(formGroup: FormGroup) {\n        return parseInt(formGroup.get('from').value, 10) < parseInt(formGroup.get('to').value, 10) ? null : {'mismatch': true};\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.field) {\n            const map = new Map<string, string>();\n            map.set('FROM', model.from);\n            map.set('TO', model.to);\n\n            const value = this.formatString(this.format, map);\n\n            this.context.queryFragments[this.id] = `${this.field}:${value}`;\n            this.context.update();\n        }\n    }\n\n    private formatString(str: string, map: Map<string, string>): string {\n        let result = str;\n\n        map.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material';\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterList } from '../search-filter/models/search-filter-list.model';\n\nexport interface SearchListOption {\n    name: string;\n    value: string;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'adf-search-check-list',\n    templateUrl: './search-check-list.component.html',\n    styleUrls: ['./search-check-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-check-list' }\n})\nexport class SearchCheckListComponent implements SearchWidget, OnInit {\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    options: SearchFilterList<SearchListOption>;\n    operator: string = 'OR';\n    pageSize = 5;\n\n    constructor() {\n        this.options = new SearchFilterList<SearchListOption>();\n    }\n\n    ngOnInit(): void {\n        if (this.settings) {\n            this.operator = this.settings.operator || 'OR';\n            this.pageSize = this.settings.pageSize || 5;\n\n            if (this.settings.options && this.settings.options.length > 0) {\n                this.options = new SearchFilterList(this.settings.options, this.pageSize);\n            }\n        }\n    }\n\n    reset() {\n        this.options.items.forEach((opt) => {\n            opt.checked = false;\n        });\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    changeHandler(event: MatCheckboxChange, option: any) {\n        option.checked = event.checked;\n        this.flush();\n    }\n\n    flush() {\n        const checkedValues = this.options.items\n            .filter((option) => option.checked)\n            .map((option) => option.value);\n\n        const query = checkedValues.join(` ${this.operator} `);\n\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = query;\n            this.context.update();\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OnInit, Component, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MomentDateAdapter, MOMENT_DATE_FORMATS } from '@alfresco/adf-core';\n\nimport { SearchWidget } from '../../search-widget.interface';\nimport { SearchWidgetSettings } from '../../search-widget-settings.interface';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { LiveErrorStateMatcher } from '../../forms/live-error-state-matcher';\nimport { Moment } from 'moment';\nimport { UserPreferencesService, UserPreferenceValues } from '@alfresco/adf-core';\n\ndeclare let moment: any;\n\nconst DEFAULT_FORMAT_DATE: string = 'DD/MM/YYYY';\n\n@Component({\n    selector: 'adf-search-date-range',\n    templateUrl: './search-date-range.component.html',\n    styleUrls: ['./search-date-range.component.scss'],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}\n    ],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-date-range' }\n})\nexport class SearchDateRangeComponent implements SearchWidget, OnInit {\n\n    from: FormControl;\n    to: FormControl;\n\n    form: FormGroup;\n    matcher = new LiveErrorStateMatcher();\n\n    id: string;\n    settings?: SearchWidgetSettings;\n    context?: SearchQueryBuilderService;\n    maxDate: any;\n    datePickerDateFormat = DEFAULT_FORMAT_DATE;\n\n    constructor(private dateAdapter: DateAdapter<Moment>,\n                private userPreferencesService: UserPreferencesService) {\n    }\n\n    getFromValidationMessage(): string {\n        return this.from.hasError('invalidOnChange') || this.hasParseError(this.from) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.from.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.from.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    getToValidationMessage(): string {\n        return this.to.hasError('invalidOnChange') || this.hasParseError(this.to) ? 'SEARCH.FILTER.VALIDATION.INVALID-DATE' :\n            this.to.hasError('matDatepickerMin') ? 'SEARCH.FILTER.VALIDATION.NO-DAYS' :\n            this.to.hasError('matDatepickerMax') ? 'SEARCH.FILTER.VALIDATION.BEYOND-MAX-DATE' :\n            this.to.hasError('required') ? 'SEARCH.FILTER.VALIDATION.REQUIRED-VALUE' :\n            '';\n    }\n\n    ngOnInit() {\n        if (this.settings) {\n            this.datePickerDateFormat = this.settings.dateFormat || DEFAULT_FORMAT_DATE;\n        }\n        const theCustomDateAdapter = <MomentDateAdapter> <any> this.dateAdapter;\n        theCustomDateAdapter.overrideDisplayFormat = this.datePickerDateFormat;\n\n        this.userPreferencesService.select(UserPreferenceValues.Locale).subscribe((locale) => {\n            this.setLocale(locale);\n        });\n\n        const validators = Validators.compose([\n            Validators.required\n        ]);\n\n        this.from = new FormControl('', validators);\n        this.to = new FormControl('', validators);\n\n        this.form = new FormGroup({\n            from: this.from,\n            to: this.to\n        });\n\n        this.maxDate = this.dateAdapter.today().startOf('day');\n    }\n\n    apply(model: { from: string, to: string }, isValid: boolean) {\n        if (isValid && this.id && this.context && this.settings && this.settings.field) {\n            const start = moment(model.from).startOf('day').format();\n            const end = moment(model.to).endOf('day').format();\n\n            this.context.queryFragments[this.id] = `${this.settings.field}:['${start}' TO '${end}']`;\n            this.context.update();\n        }\n    }\n\n    reset() {\n        this.form.reset({\n            from: '',\n            to: ''\n        });\n        if (this.id && this.context) {\n            this.context.queryFragments[this.id] = '';\n            this.context.update();\n        }\n    }\n\n    onChangedHandler(event: any, formControl: FormControl) {\n        const inputValue = event.srcElement.value;\n\n        const formatDate = this.dateAdapter.parse(inputValue, this.datePickerDateFormat);\n        if (formatDate && formatDate.isValid()) {\n            formControl.setValue(formatDate);\n        } else if (formatDate) {\n            formControl.setErrors({\n                'invalidOnChange': true\n            });\n        } else {\n            formControl.setErrors({\n                'required': true\n            });\n        }\n    }\n\n    setLocale(locale) {\n        this.dateAdapter.setLocale(locale);\n        moment.locale(locale);\n    }\n\n    hasParseError(formControl) {\n        return formControl.hasError('matDatepickerParse') && formControl.getError('matDatepickerParse').text;\n    }\n\n    forcePlaceholder(event: any) {\n        event.srcElement.click();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { SearchTextComponent } from '../search-text/search-text.component';\nimport { SearchRadioComponent } from '../search-radio/search-radio.component';\nimport { SearchSliderComponent } from '../search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from '../search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from '../search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from '../search-date-range/search-date-range.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SearchFilterService {\n\n    /**\n     * Contains string-to-type mappings for registered widgets.\n     */\n    widgets: { [id: string]: Type<{}> } = {\n        'text': SearchTextComponent,\n        'radio': SearchRadioComponent,\n        'slider': SearchSliderComponent,\n        'number-range': SearchNumberRangeComponent,\n        'check-list': SearchCheckListComponent,\n        'date-range': SearchDateRangeComponent\n    };\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input } from '@angular/core';\nimport { SearchFilterComponent } from '../../components/search-filter/search-filter.component';\n\n@Component({\n    selector: 'adf-search-chip-list',\n    templateUrl: './search-chip-list.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-chip-list' }\n})\nexport class SearchChipListComponent {\n\n    /** Search filter to supply the data for the chips. */\n    @Input()\n    searchFilter: SearchFilterComponent;\n\n    /** Flag used to enable the display of a clear-all-filters button. */\n    @Input()\n    clearAll: boolean = false;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchSortingDefinition } from '../../search-sorting-definition.interface';\n\n@Component({\n    selector: 'adf-search-sorting-picker',\n    templateUrl: './search-sorting-picker.component.html',\n    styleUrls: ['./search-sorting-picker.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'adf-search-sorting-picker' }\n})\nexport class SearchSortingPickerComponent implements OnInit {\n\n    options: SearchSortingDefinition[] = [];\n    value: string;\n    ascending: boolean;\n\n    constructor(private queryBuilder: SearchQueryBuilderService) {}\n\n    ngOnInit() {\n        this.options = this.queryBuilder.getSortingOptions();\n\n        const primary = this.queryBuilder.getPrimarySorting();\n        if (primary) {\n            this.value = primary.key;\n            this.ascending = primary.ascending;\n        }\n    }\n\n    onValueChanged(key: string) {\n        this.value = key;\n        this.ascending = this.getSortingOrder();\n        this.applySorting();\n    }\n\n    onSortingChanged(ascending: boolean) {\n        this.ascending = ascending;\n        this.applySorting();\n    }\n\n    private findOptionByKey(key: string): SearchSortingDefinition {\n        if (key) {\n            return this.options.find((opt) => opt.key === key);\n        }\n        return null;\n    }\n\n    private applySorting() {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            this.queryBuilder.sorting = [{\n                ...option,\n                ascending: this.ascending\n            }];\n            this.queryBuilder.update();\n        }\n    }\n\n    private getSortingOrder(): boolean {\n        const option = this.findOptionByKey(this.value);\n        if (option) {\n            return option.ascending;\n        }\n\n        return this.queryBuilder.getPrimarySorting().ascending;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewChild, ViewContainerRef, OnInit, OnDestroy, ComponentRef, ComponentFactoryResolver } from '@angular/core';\nimport { SearchQueryBuilderService } from '../../search-query-builder.service';\nimport { SearchFilterService } from '../search-filter/search-filter.service';\n\n@Component({\n    selector: 'adf-search-widget-container',\n    template: '<div #content></div>'\n})\nexport class SearchWidgetContainerComponent implements OnInit, OnDestroy {\n\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    @Input()\n    id: string;\n\n    @Input()\n    selector: string;\n\n    @Input()\n    settings: any;\n\n    @Input()\n    config: any;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private searchFilterService: SearchFilterService,\n        private queryBuilder: SearchQueryBuilderService,\n        private componentFactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        const componentType = this.searchFilterService.widgets[this.selector];\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(componentType);\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.setupWidget(this.componentRef);\n            }\n        }\n    }\n\n    private setupWidget(ref: ComponentRef<any>) {\n        if (ref && ref.instance) {\n            ref.instance.id = this.id;\n            ref.instance.settings = { ...this.settings };\n            ref.instance.context = this.queryBuilder;\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { SearchTriggerDirective } from './components/search-trigger.directive';\n\nimport { SearchControlComponent } from './components/search-control.component';\nimport { SearchComponent } from './components/search.component';\nimport { EmptySearchResultComponent } from './components/empty-search-result.component';\nimport { SearchWidgetContainerComponent } from './components/search-widget-container/search-widget-container.component';\nimport { SearchFilterComponent } from './components/search-filter/search-filter.component';\nimport { SearchChipListComponent } from './components/search-chip-list/search-chip-list.component';\nimport { SearchTextComponent } from './components/search-text/search-text.component';\nimport { SearchRadioComponent } from './components/search-radio/search-radio.component';\nimport { SearchSliderComponent } from './components/search-slider/search-slider.component';\nimport { SearchNumberRangeComponent } from './components/search-number-range/search-number-range.component';\nimport { SearchCheckListComponent } from './components/search-check-list/search-check-list.component';\nimport { SearchDateRangeComponent } from './components/search-date-range/search-date-range.component';\nimport { SearchSortingPickerComponent } from './components/search-sorting-picker/search-sorting-picker.component';\n\nexport const ALFRESCO_SEARCH_DIRECTIVES: any[] = [\n    SearchComponent,\n    SearchControlComponent,\n    SearchTriggerDirective,\n    EmptySearchResultComponent,\n    SearchFilterComponent,\n    SearchChipListComponent\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    declarations: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    exports: [\n        ...ALFRESCO_SEARCH_DIRECTIVES,\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent,\n        SearchSortingPickerComponent\n    ],\n    entryComponents: [\n        SearchWidgetContainerComponent,\n        SearchTextComponent,\n        SearchRadioComponent,\n        SearchSliderComponent,\n        SearchNumberRangeComponent,\n        SearchCheckListComponent,\n        SearchDateRangeComponent\n    ]\n})\nexport class SearchModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { SitesService, LogService } from '@alfresco/adf-core';\nimport { SitePaging, SiteEntry } from '@alfresco/js-api';\nimport { MatSelect } from '@angular/material';\n\nexport enum Relations {\n    Members = 'members',\n    Containers = 'containers'\n}\n\n@Component({\n    selector: 'adf-sites-dropdown',\n    styleUrls: ['./sites-dropdown.component.scss'],\n    templateUrl: './sites-dropdown.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-sites-dropdown' }\n})\nexport class DropdownSitesComponent implements OnInit {\n\n    /** Hide the \"My Files\" option. */\n    @Input()\n    hideMyFiles: boolean = false;\n\n    /** A custom list of sites to be displayed by the dropdown. If no value\n     * is given, the sites of the current user are displayed by default. A\n     * list of objects only with properties 'title' and 'guid' is enough to\n     * be able to display the dropdown.\n     */\n    @Input()\n    siteList: SitePaging = null;\n\n    /** Id of the selected site */\n    @Input()\n    value: string = null;\n\n    /** Text or a translation key to act as a placeholder. Default value is the\n     * key \"DROPDOWN.PLACEHOLDER_LABEL\".\n     */\n    @Input()\n    placeholder: string = 'DROPDOWN.PLACEHOLDER_LABEL';\n\n    /** Filter for the results of the sites query. Possible values are\n     * \"members\" and \"containers\". When \"members\" is used, the site list\n     * will be restricted to the sites that the user is a member of.\n     */\n    @Input()\n    relations: string;\n\n    /** Emitted when the user selects a site. When the default option is selected,\n     * an empty model is emitted.\n     */\n    @Output()\n    change: EventEmitter<SiteEntry> = new EventEmitter();\n\n    @ViewChild('siteSelect')\n    siteSelect: MatSelect;\n\n    private loading = true;\n    private skipCount = 0;\n    private readonly MAX_ITEMS = 50;\n    private readonly ITEM_HEIGHT = 45;\n    private readonly ITEM_HEIGHT_TO_WAIT_BEFORE_LOAD_NEXT = (this.ITEM_HEIGHT * (this.MAX_ITEMS / 2));\n\n    selected: SiteEntry = null;\n\n    public MY_FILES_VALUE = '-my-';\n\n    constructor(private sitesService: SitesService,\n                private logService: LogService) {\n    }\n\n    ngOnInit() {\n        this.siteSelect.openedChange.subscribe(() => {\n            if (this.siteSelect.panelOpen) {\n                this.siteSelect.panel.nativeElement.addEventListener('scroll', (event) => this.loadAllOnScroll(event));\n            }\n        });\n\n        if (!this.siteList) {\n            this.loadSiteList();\n        }\n    }\n\n    loadAllOnScroll(event) {\n        if (this.isInfiniteScrollingEnabled() && this.isScrollInNextFetchArea(event)) {\n            this.loading = true;\n            this.loadSiteList();\n        }\n    }\n\n    isScrollInNextFetchArea(event) {\n        return event.target.scrollTop >= (event.target.scrollHeight - event.target.offsetHeight - this.ITEM_HEIGHT_TO_WAIT_BEFORE_LOAD_NEXT);\n    }\n\n    selectedSite(event: any) {\n        this.change.emit(event.value);\n    }\n\n    private loadSiteList() {\n        const extendedOptions: any = {\n            skipCount: this.skipCount,\n            maxItems: this.MAX_ITEMS\n        };\n\n        this.skipCount += this.MAX_ITEMS;\n\n        if (this.relations) {\n            extendedOptions.relations = [this.relations];\n        }\n\n        this.sitesService.getSites(extendedOptions).subscribe((sitePaging: SitePaging) => {\n\n                if (!this.siteList) {\n                    this.siteList = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;\n\n                    if (!this.hideMyFiles) {\n                        const siteEntry = new SiteEntry({\n                            entry: {\n                                id: '-my-',\n                                guid: '-my-',\n                                title: 'DROPDOWN.MY_FILES_OPTION'\n                            }\n                        });\n\n                        this.siteList.list.entries.unshift(siteEntry);\n\n                        if (!this.value) {\n                            this.value = '-my-';\n                        }\n                    }\n\n                } else {\n                    const siteList: SitePaging = this.relations === Relations.Members ? this.filteredResultsByMember(sitePaging) : sitePaging;\n\n                    this.siteList.list.entries = this.siteList.list.entries.concat(siteList.list.entries);\n                    this.siteList.list.pagination = sitePaging.list.pagination;\n                }\n\n                this.selected = this.siteList.list.entries.find((site: SiteEntry) => site.entry.id === this.value);\n\n                this.loading = false;\n            },\n            (error) => {\n                this.logService.error(error);\n            });\n    }\n\n    showLoading(): boolean {\n        return this.loading && (this.siteList && this.siteList.list.pagination && this.siteList.list.pagination.hasMoreItems);\n    }\n\n    isInfiniteScrollingEnabled(): boolean {\n        return !this.loading && (this.siteList && this.siteList.list.pagination && this.siteList.list.pagination.hasMoreItems);\n    }\n\n    private filteredResultsByMember(sites: SitePaging): SitePaging {\n        const loggedUserName = this.sitesService.getEcmCurrentLoggedUserName();\n        sites.list.entries = sites.list.entries.filter((site) => this.isCurrentUserMember(site, loggedUserName));\n        return sites;\n    }\n\n    private isCurrentUserMember(site, loggedUserName): boolean {\n        return site.entry.visibility === 'PUBLIC' ||\n            !!site.relations.members.list.entries.find((member) => {\n                return member.entry.id.toLowerCase() === loggedUserName.toLowerCase();\n            });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DropdownSitesComponent } from './sites-dropdown.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        DropdownSitesComponent\n    ],\n    declarations: [\n        DropdownSitesComponent\n    ]\n})\nexport class SitesDropdownModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { Node, PathElementEntity } from '@alfresco/js-api';\nimport { DocumentListComponent } from '../document-list';\n\n@Component({\n    selector: 'adf-breadcrumb',\n    templateUrl: './breadcrumb.component.html',\n    styleUrls: ['./breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-breadcrumb'\n    }\n})\nexport class BreadcrumbComponent implements OnInit, OnChanges {\n\n    /** Active node, builds UI based on folderNode.path.elements collection. */\n    @Input()\n    folderNode: Node = null;\n\n    /** (optional) Name of the root element of the breadcrumb. You can use\n     * this property to rename \"Company Home\" to \"Personal Files\" for\n     * example. You can use an i18n resource key for the property value.\n     */\n    @Input()\n    root: string = null;\n\n    /** (optional) The id of the root element. You can use this property\n     * to set a custom element the breadcrumb should start with.\n     */\n    @Input()\n    rootId: string = null;\n\n    /** (optional) Document List component to operate with. The list will\n     * update when the breadcrumb is clicked.\n     */\n    @Input()\n    target: DocumentListComponent;\n\n    /** Transformation to be performed on the chosen/folder node before building\n     * the breadcrumb UI. Can be useful when custom formatting is needed for the\n     * breadcrumb. You can change the path elements from the node that are used to\n     * build the breadcrumb using this function.\n     */\n    @Input()\n    transform: (node) => any;\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    /** Maximum number of nodes to display before wrapping them with a dropdown element.  */\n    @Input()\n    maxItems: number;\n\n    previousNodes: PathElementEntity[];\n    lastNodes: PathElementEntity[];\n\n    route: PathElementEntity[] = [];\n\n    get hasRoot(): boolean {\n        return !!this.root;\n    }\n\n    /** Emitted when the user clicks on a breadcrumb. */\n    @Output()\n    navigate = new EventEmitter<PathElementEntity>();\n\n    ngOnInit() {\n        this.transform = this.transform ? this.transform : null;\n\n        if (this.target) {\n            this.target.$folderNode.subscribe((folderNode: Node) => {\n                this.folderNode = folderNode;\n                this.recalculateNodes();\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.recalculateNodes();\n    }\n\n    protected recalculateNodes(): void {\n        const node: Node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n\n        this.route = this.parseRoute(node);\n\n        if (this.maxItems && this.route.length > this.maxItems) {\n            this.lastNodes = this.route.slice(this.route.length - this.maxItems);\n            this.previousNodes = this.route.slice(0, this.route.length - this.maxItems);\n            this.previousNodes.reverse();\n        } else {\n            this.lastNodes = this.route;\n            this.previousNodes = null;\n        }\n    }\n\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    hasPreviousNodes(): boolean {\n        return this.previousNodes ? true : false;\n    }\n\n    parseRoute(node: Node): PathElementEntity[] {\n        if (node && node.path) {\n            const route = <PathElementEntity[]> (node.path.elements || []).slice();\n\n            route.push(<PathElementEntity> {\n                id: node.id,\n                name: node.name,\n                node: node\n            });\n\n            const rootPos = this.getElementPosition(route, this.rootId);\n            if (rootPos > 0) {\n                route.splice(0, rootPos);\n            }\n\n            if (rootPos === -1 && this.rootId) {\n                route[0].id = this.rootId;\n            }\n\n            if (this.root) {\n                route[0].name = this.root;\n            }\n\n            return route;\n        }\n\n        return [];\n    }\n\n    private getElementPosition(route: PathElementEntity[], nodeId: string): number {\n        let position: number = -1;\n\n        if (route && route.length > 0 && nodeId) {\n            position = route.findIndex((el) => el.id === nodeId);\n        }\n\n        return position;\n    }\n\n    onRoutePathClick(route: PathElementEntity, event?: Event): void {\n        if (event) {\n            event.preventDefault();\n        }\n\n        if (route) {\n            this.navigate.emit(route);\n\n            if (this.target) {\n                this.target.navigateTo(route.id);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatSelect } from '@angular/material';\nimport { PathElementEntity, Node } from '@alfresco/js-api';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@Component({\n    selector: 'adf-dropdown-breadcrumb',\n    templateUrl: './dropdown-breadcrumb.component.html',\n    styleUrls: ['./dropdown-breadcrumb.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-dropdown-breadcrumb'\n    }\n})\nexport class DropdownBreadcrumbComponent extends BreadcrumbComponent implements OnChanges {\n\n    @ViewChild('dropdown')\n    dropdown: MatSelect;\n\n    currentNode: PathElementEntity;\n    previousNodes: PathElementEntity[];\n\n    /**\n     * Calculate the current and previous nodes from the route array\n     */\n    protected recalculateNodes(): void {\n        const node: Node = this.transform ? this.transform(this.folderNode) : this.folderNode;\n\n        this.route = this.parseRoute(node);\n        this.currentNode = this.route[this.route.length - 1];\n        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();\n    }\n\n    /**\n     * Opens the node picker menu\n     */\n    open(): void {\n        if (this.dropdown) {\n            this.dropdown.open();\n        }\n    }\n\n    /**\n     * Return if route has more than one element (means: we are not in the root directory)\n     */\n    hasPreviousNodes(): boolean {\n        return this.previousNodes.length > 0;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { DropdownBreadcrumbComponent } from './dropdown-breadcrumb.component';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ],\n    declarations: [\n        BreadcrumbComponent,\n        DropdownBreadcrumbComponent\n    ]\n})\nexport class BreadcrumbModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, ViewEncapsulation, SecurityContext } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n    selector: 'adf-confirm-dialog',\n    templateUrl: './confirm.dialog.html',\n    styleUrls: ['./confirm.dialog.scss'],\n    host: { 'class': 'adf-confirm-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ConfirmDialogComponent {\n\n    title: string;\n    message: string;\n    yesLabel: string;\n    noLabel: string;\n    thirdOptionLabel: string;\n    htmlContent: string;\n\n    constructor(@Inject(MAT_DIALOG_DATA) data, private sanitizer: DomSanitizer) {\n        data = data || {};\n        this.title = data.title || 'ADF_CONFIRM_DIALOG.CONFIRM';\n        this.message = data.message || 'ADF_CONFIRM_DIALOG.MESSAGE';\n        this.yesLabel = data.yesLabel || 'ADF_CONFIRM_DIALOG.YES_LABEL';\n        this.thirdOptionLabel = data.thirdOptionLabel;\n        this.noLabel = data.noLabel || 'ADF_CONFIRM_DIALOG.NO_LABEL';\n        this.htmlContent = data.htmlContent;\n    }\n\n    public sanitizedHtmlContent() {\n        return this.sanitizer.sanitize(SecurityContext.HTML, this.htmlContent);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiService, ContentService } from '@alfresco/adf-core';\nimport { Component, Input, OnChanges, ViewEncapsulation, EventEmitter, Output } from '@angular/core';\nimport { VersionsApi, Node, VersionEntry, VersionPaging } from '@alfresco/js-api';\nimport { MatDialog } from '@angular/material';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\n\n@Component({\n    selector: 'adf-version-list',\n    templateUrl: './version-list.component.html',\n    styleUrls: ['./version-list.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        'class': 'adf-version-list'\n    }\n})\nexport class VersionListComponent implements OnChanges {\n\n    private versionsApi: VersionsApi;\n    versions: VersionEntry[] = [];\n    isLoading = true;\n\n    /** The target node. */\n    @Input()\n    node: Node;\n\n    /** Toggles showing/hiding of comments */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Toggles showing/hiding of version actions */\n    @Input()\n    showActions = true;\n\n    /** Emitted when a version is restored */\n    @Output()\n    restored: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when a version is deleted */\n    @Output()\n    deleted: EventEmitter<Node> = new EventEmitter<Node>();\n\n    constructor(private alfrescoApi: AlfrescoApiService,\n                private contentService: ContentService,\n                private dialog: MatDialog) {\n        this.versionsApi = this.alfrescoApi.versionsApi;\n    }\n\n    ngOnChanges() {\n        this.loadVersionHistory();\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update') && this.versions.length > 1;\n    }\n\n    canDelete(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'delete') && this.versions.length > 1;\n    }\n\n    restore(versionId) {\n        if (this.canUpdate()) {\n            this.versionsApi\n                .revertVersion(this.node.id, versionId, { majorVersion: true, comment: '' })\n                .then(() =>\n                    this.alfrescoApi.nodesApi.getNodeInfo(\n                        this.node.id,\n                        { include: ['permissions', 'path', 'isFavorite', 'allowableOperations'] }\n                    )\n                )\n                .then((node) => this.onVersionRestored(node));\n        }\n    }\n\n    loadVersionHistory() {\n        this.isLoading = true;\n        this.versionsApi.listVersionHistory(this.node.id).then((versionPaging: VersionPaging) => {\n            this.versions = versionPaging.list.entries;\n            this.isLoading = false;\n        });\n    }\n\n    downloadVersion(versionId: string) {\n        if (this.allowDownload) {\n            const versionDownloadUrl = this.getVersionContentUrl(this.node.id, versionId, true);\n            this.downloadContent(versionDownloadUrl);\n        }\n    }\n\n    deleteVersion(versionId: string) {\n        if (this.canUpdate()) {\n            const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n                data: {\n                    title: 'ADF_VERSION_LIST.CONFIRM_DELETE.TITLE',\n                    message: 'ADF_VERSION_LIST.CONFIRM_DELETE.MESSAGE',\n                    yesLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.YES_LABEL',\n                    noLabel: 'ADF_VERSION_LIST.CONFIRM_DELETE.NO_LABEL'\n                },\n                minWidth: '250px'\n            });\n\n            dialogRef.afterClosed().subscribe((result) => {\n                if (result === true) {\n                    this.alfrescoApi.versionsApi\n                        .deleteVersion(this.node.id, versionId)\n                        .then(() => this.onVersionDeleted(this.node));\n                }\n            });\n        }\n    }\n\n    onVersionDeleted(node: any) {\n        this.loadVersionHistory();\n        this.deleted.emit(node);\n    }\n\n    onVersionRestored(node: any) {\n        this.loadVersionHistory();\n        this.restored.emit(node);\n    }\n\n    private getVersionContentUrl(nodeId: string, versionId: string, attachment?: boolean) {\n        const nodeDownloadUrl = this.alfrescoApi.contentApi.getContentUrl(nodeId, attachment);\n        return nodeDownloadUrl.replace('/content', '/versions/' + versionId + '/content');\n    }\n\n    downloadContent(url: string) {\n        if (url) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { VersionListComponent } from './version-list.component';\nimport { AppConfigService, ContentService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n    selector: 'adf-version-manager',\n    templateUrl: './version-manager.component.html',\n    styleUrls: ['./version-manager.component.scss'],\n    animations: [\n        trigger('uploadToggle', [\n            state('open', style({ height: '175px', opacity: 1, visibility: 'visible' })),\n            state('close', style({ height: '0%', opacity: 0, visibility: 'hidden' })),\n            transition('open => close', [\n                style({ visibility: 'hidden' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ]),\n            transition('close => open', [\n                style({ visibility: 'visible' }),\n                animate('0.4s cubic-bezier(0.25, 0.8, 0.25, 1)')\n            ])\n        ])\n    ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class VersionManagerComponent {\n\n    /** Target node to manage version history. */\n    @Input()\n    node: Node;\n\n    /** Toggles showing/hiding of comments. */\n    @Input()\n    showComments = true;\n\n    /** Enable/disable downloading a version of the current node. */\n    @Input()\n    allowDownload = true;\n\n    /** Emitted when a file is uploaded successfully. */\n    @Output()\n    uploadSuccess: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when an error occurs during upload. */\n    @Output()\n    uploadError: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @ViewChild('versionList')\n    versionListComponent: VersionListComponent;\n\n    uploadState: string = 'close';\n\n    constructor(config: AppConfigService,\n                private contentService: ContentService,\n                private alfrescoApiService: AlfrescoApiService) {\n    }\n\n    refresh(node: Node) {\n        this.alfrescoApiService.nodeUpdated.next(node);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(node);\n        this.uploadState = 'close';\n    }\n\n    onUploadSuccess(event: any) {\n        this.alfrescoApiService.nodeUpdated.next(event.value.entry);\n        this.versionListComponent.loadVersionHistory();\n        this.uploadSuccess.emit(event.value.entry);\n        this.uploadState = 'close';\n    }\n\n    onUploadError(event: any) {\n        this.uploadError.emit(event);\n    }\n\n    onUploadCancel() {\n        this.uploadState = 'close';\n    }\n\n    toggleNewVersion() {\n        this.uploadState = this.uploadState === 'open' ? 'close' : 'open';\n    }\n\n    canUpdate(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-version-upload',\n    templateUrl: './version-upload.component.html',\n    styleUrls: ['./version-upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-version-upload' }\n})\nexport class VersionUploadComponent {\n\n    semanticVersion: string = 'minor';\n    comment: string;\n    uploadVersion: boolean = false;\n\n    @Input()\n    node: Node;\n\n    @Output()\n    success = new EventEmitter();\n\n    @Output()\n    error = new EventEmitter();\n\n    @Output()\n    cancel = new EventEmitter();\n\n    constructor(private contentService: ContentService) {\n    }\n\n    canUpload(): boolean {\n        return this.contentService.hasAllowableOperations(this.node, 'update');\n    }\n\n    isMajorVersion(): boolean {\n        return this.semanticVersion === 'minor' ? false : true;\n    }\n\n    cancelUpload() {\n        this.cancel.emit();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { VersionUploadComponent } from './version-upload.component';\nimport { VersionManagerComponent } from './version-manager.component';\nimport { VersionListComponent } from './version-list.component';\nimport { UploadModule } from '../upload/upload.module';\nimport { CoreModule } from '@alfresco/adf-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        UploadModule,\n        FormsModule\n    ],\n    exports: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent,\n        FormsModule\n    ],\n    declarations: [\n        VersionUploadComponent,\n        VersionManagerComponent,\n        VersionListComponent\n    ]\n})\nexport class VersionManagerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Input, ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { DataRow } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-name-location-cell',\n    template: `\n        <div class=\"adf-name-location-cell-name adf-datatable-cell-value\">{{ name }}</div>\n        <div class=\"adf-name-location-cell-location adf-datatable-cell-value\" [title]=\"path\">{{ path }}</div>\n    `,\n    styleUrls: ['./name-location-cell.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: { class: 'adf-name-location-cell adf-datatable-content-cell' }\n})\nexport class NameLocationCellComponent implements OnInit {\n\n    name: string = '';\n    path: string = '';\n\n    @Input()\n    row: DataRow;\n\n    ngOnInit() {\n        if (this.row) {\n            this.name = this.row.getValue('name');\n\n            const fullPath = this.row.getValue('path');\n            if (fullPath) {\n                this.path = fullPath.name || '';\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SearchService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from '@alfresco/js-api';\nimport { Observable } from 'rxjs';\n\n/**\n * Internal service used by ContentNodeSelector component.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentNodeSelectorService {\n\n    constructor(private searchService: SearchService) {\n    }\n\n    /**\n     * Performs a search for content node selection\n     *\n     * @param searchTerm    The term to search for\n     * @param rootNodeId    The root is to start the search from\n     * @param skipCount     From where to start the loading\n     * @param maxItems      How many items to load\n     * @param [extraNodeIds]  List of extra node ids to search from. This last parameter is necessary when\n     * the rootNodeId is one of the supported aliases (e.g. '-my-', '-root-', '-mysites-', etc.)\n     * and search is not supported for that alias, but can be performed on its corresponding nodes.\n     */\n    public search(searchTerm: string, rootNodeId: string = null, skipCount: number = 0, maxItems: number = 25, extraNodeIds?: string[]): Observable<NodePaging> {\n\n        let extraParentFiltering = '';\n\n        if (extraNodeIds && extraNodeIds.length) {\n            extraNodeIds\n                .filter((id) => id !== rootNodeId)\n                .forEach((extraId) => {\n                    extraParentFiltering += ` OR ANCESTOR:'workspace://SpacesStore/${extraId}'`;\n                });\n        }\n\n        const parentFiltering = rootNodeId ? [{ query: `ANCESTOR:'workspace://SpacesStore/${rootNodeId}'${extraParentFiltering}` }] : [];\n\n        const defaultSearchNode: any = {\n            query: {\n                query: `${searchTerm}* OR name:${searchTerm}*`\n            },\n            include: ['path', 'allowableOperations'],\n            paging: {\n                maxItems: maxItems,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                { query: \"TYPE:'cm:folder'\" },\n                { query: 'NOT cm:creator:System' },\n                ...parentFiltering\n            ],\n            scope: {\n                locations: ['nodes']\n            }\n        };\n\n        return this.searchService.searchByQueryBody(defaultSearchNode);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport {\n    HighlightDirective,\n    UserPreferencesService,\n    PaginationModel,\n    UserPreferenceValues,\n    InfinitePaginationComponent, PaginatedComponent\n} from '@alfresco/adf-core';\nimport { FormControl } from '@angular/forms';\nimport { Node, NodePaging, Pagination, SiteEntry, SitePaging } from '@alfresco/js-api';\nimport { DocumentListComponent } from '../document-list/components/document-list.component';\nimport { RowFilter } from '../document-list/data/row-filter.model';\nimport { ImageResolver } from '../document-list/data/image-resolver.model';\nimport { ContentNodeSelectorService } from './content-node-selector.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { CustomResourcesService } from '../document-list/services/custom-resources.service';\nimport { ShareDataRow } from '../document-list';\n\nexport type ValidationFunction = (entry: Node) => boolean;\n\nconst defaultValidation = () => true;\n\n@Component({\n    selector: 'adf-content-node-selector-panel',\n    styleUrls: ['./content-node-selector-panel.component.scss'],\n    templateUrl: './content-node-selector-panel.component.html',\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-node-selector-panel' }\n})\nexport class ContentNodeSelectorPanelComponent implements OnInit {\n\n    DEFAULT_PAGINATION: Pagination = new Pagination({\n        maxItems: 25,\n        skipCount: 0,\n        totalItems: 0,\n        hasMoreItems: false\n    });\n\n    /** Node ID of the folder currently listed. */\n    @Input()\n    currentFolderId: string = null;\n\n    /** Hide the \"My Files\" option added to the site list by default.\n     * See the [Sites Dropdown component](sites-dropdown.component.md)\n     * for more information.\n     */\n    @Input()\n    dropdownHideMyFiles: boolean = false;\n\n    /** Custom site for site dropdown. This is the same as the `siteList`.\n     * property of the Sites Dropdown component (see its doc page\n     * for more information).\n     */\n    @Input()\n    dropdownSiteList: SitePaging = null;\n\n    _rowFilter: RowFilter = defaultValidation;\n\n    /** Custom *where* filter function. See the\n     * Document List component\n     * for more information.\n     */\n    @Input()\n    where: string;\n\n    /**\n     * Custom row filter function. See the\n     * [Row Filter Model](row-filter.model.md) page\n     * for more information.\n     */\n    @Input()\n    set rowFilter(rowFilter: RowFilter) {\n        this.createRowFilter(rowFilter);\n    }\n\n    get rowFilter(): RowFilter {\n        return this._rowFilter;\n    }\n\n    _excludeSiteContent: string[] = [];\n\n    /** Custom list of site content componentIds.\n     * Used to filter out the corresponding items from the displayed nodes\n     */\n    @Input()\n    set excludeSiteContent(excludeSiteContent: string[]) {\n        this._excludeSiteContent = excludeSiteContent;\n        this.createRowFilter(this._rowFilter);\n    }\n\n    get excludeSiteContent(): string[] {\n        return this._excludeSiteContent;\n    }\n\n    /**\n     * Custom image resolver function. See the\n     * [Image Resolver Model](image-resolver.model.md) page\n     * for more information.\n     */\n    @Input()\n    imageResolver: ImageResolver = null;\n\n    /** Number of items shown per page in the list. */\n    @Input()\n    pageSize: number = this.DEFAULT_PAGINATION.maxItems;\n\n    /** Function used to decide if the selected node has permission to be selected.\n     * Default value is a function that always returns true.\n     */\n    @Input()\n    isSelectionValid: ValidationFunction = defaultValidation;\n\n    /** Transformation to be performed on the chosen/folder node before building the\n     * breadcrumb UI. Can be useful when custom formatting is needed for the breadcrumb.\n     * You can change the path elements from the node that are used to build the\n     * breadcrumb using this function.\n     */\n    @Input()\n    breadcrumbTransform: (node) => any;\n\n    /** Emitted when the user has chosen an item. */\n    @Output()\n    select: EventEmitter<Node[]> = new EventEmitter<Node[]>();\n\n    @ViewChild('documentList')\n    documentList: DocumentListComponent;\n\n    @ViewChild(HighlightDirective)\n    highlighter: HighlightDirective;\n\n    nodePaging: NodePaging | null = null;\n    siteId: null | string;\n    searchTerm: string = '';\n    showingSearchResults: boolean = false;\n    loadingSearchResults: boolean = false;\n    inDialog: boolean = false;\n    _chosenNode: Node = null;\n    folderIdToShow: string | null = null;\n    breadcrumbFolderTitle: string | null = null;\n\n    pagination: PaginationModel = this.DEFAULT_PAGINATION;\n\n    @ViewChild(InfinitePaginationComponent)\n    infinitePaginationComponent: InfinitePaginationComponent;\n\n    infiniteScroll: boolean = false;\n    debounceSearch: number = 200;\n    searchInput: FormControl = new FormControl();\n\n    target: PaginatedComponent;\n\n    constructor(private contentNodeSelectorService: ContentNodeSelectorService,\n                private customResourcesService: CustomResourcesService,\n                private userPreferencesService: UserPreferencesService) {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(this.debounceSearch)\n            )\n            .subscribe((searchValue) => {\n                this.search(searchValue);\n            });\n\n        this.userPreferencesService.select(UserPreferenceValues.PaginationSize).subscribe((pagSize) => {\n            this.pageSize = pagSize;\n        });\n\n    }\n\n    set chosenNode(value: Node) {\n        this._chosenNode = value;\n        let valuesArray = null;\n        if (value) {\n            valuesArray = [value];\n        }\n        this.select.next(valuesArray);\n    }\n\n    get chosenNode() {\n        return this._chosenNode;\n    }\n\n    ngOnInit() {\n        this.target = this.documentList;\n        this.folderIdToShow = this.currentFolderId;\n\n        this.breadcrumbTransform = this.breadcrumbTransform ? this.breadcrumbTransform : null;\n        this.isSelectionValid = this.isSelectionValid ? this.isSelectionValid : defaultValidation;\n    }\n\n    private createRowFilter(filter?: RowFilter) {\n        if (!filter) {\n            filter = () => true;\n        }\n        this._rowFilter = (value: ShareDataRow, index: number, array: ShareDataRow[]) => {\n            return filter(value, index, array) &&\n                !this.isExcludedSiteContent(value);\n        };\n    }\n\n    private isExcludedSiteContent(row: ShareDataRow): boolean {\n        const entry = row.node.entry;\n        if (this._excludeSiteContent && this._excludeSiteContent.length &&\n            entry &&\n            entry.properties &&\n            entry.properties['st:componentId']) {\n            const excludedItem = this._excludeSiteContent.find(\n                (id: string) => entry.properties['st:componentId'] === id\n            );\n            return !!excludedItem;\n        }\n        return false;\n    }\n\n    /**\n     * Updates the site attribute and starts a new search\n     *\n     * @param chosenSite SiteEntry to search within\n     */\n    siteChanged(chosenSite: SiteEntry): void {\n        this.siteId = chosenSite.entry.guid;\n        this.setTitleIfCustomSite(chosenSite);\n        this.updateResults();\n\n    }\n\n    /**\n     * Updates the searchTerm attribute and starts a new search\n     *\n     * @param searchTerm string value to search against\n     */\n    search(searchTerm: string): void {\n        this.searchTerm = searchTerm;\n        this.updateResults();\n    }\n\n    /**\n     * Returns the actually selected|entered folder node or null in case of searching for the breadcrumb\n     */\n    get breadcrumbFolderNode(): Node | null {\n        let folderNode: Node;\n\n        if (this.showingSearchResults && this.chosenNode) {\n            folderNode = this.chosenNode;\n        } else {\n            folderNode = this.documentList.folderNode;\n        }\n\n        return folderNode;\n    }\n\n    /**\n     * Clear the search input and reset to last folder node in which search was performed\n     */\n    clear(): void {\n        this.clearSearch();\n        this.folderIdToShow = this.siteId || this.currentFolderId;\n    }\n\n    /**\n     * Clear the search input and search related data\n     */\n    clearSearch() {\n        this.searchTerm = '';\n        this.nodePaging = null;\n        this.pagination.maxItems = this.pageSize;\n        this.chosenNode = null;\n        this.showingSearchResults = false;\n    }\n\n    /**\n     * Update the result list depending on the criteria\n     */\n    private updateResults(): void {\n        this.target = this.searchTerm.length > 0 ? null : this.documentList;\n\n        if (this.searchTerm.length === 0) {\n            this.clear();\n        } else {\n            this.startNewSearch();\n        }\n    }\n\n    /**\n     * Load the first page of a new search result\n     */\n    private startNewSearch(): void {\n        this.nodePaging = null;\n        this.pagination.maxItems = this.pageSize;\n        if (this.target) {\n            this.infinitePaginationComponent.reset();\n        }\n        this.chosenNode = null;\n        this.folderIdToShow = null;\n        this.querySearch();\n    }\n\n    /**\n     * Perform the call to searchService with the proper parameters\n     */\n    private querySearch(): void {\n        this.loadingSearchResults = true;\n\n        if (this.customResourcesService.hasCorrespondingNodeIds(this.siteId)) {\n            this.customResourcesService.getCorrespondingNodeIds(this.siteId)\n                .subscribe((nodeIds) => {\n                        this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.pagination.skipCount, this.pagination.maxItems, nodeIds)\n                            .subscribe(this.showSearchResults.bind(this));\n                    },\n                    () => {\n                        this.showSearchResults({ list: { entries: [] } });\n                    });\n        } else {\n            this.contentNodeSelectorService.search(this.searchTerm, this.siteId, this.pagination.skipCount, this.pagination.maxItems)\n                .subscribe(this.showSearchResults.bind(this));\n        }\n    }\n\n    /**\n     * Show the results of the search\n     *\n     * @param results Search results\n     */\n    private showSearchResults(nodePaging: NodePaging): void {\n        this.showingSearchResults = true;\n        this.loadingSearchResults = false;\n\n        this.nodePaging = nodePaging;\n    }\n\n    /**\n     * Sets showingSearchResults state to be able to differentiate between search results or folder results\n     */\n    onFolderChange(): void {\n        this.showingSearchResults = false;\n        this.infiniteScroll = false;\n        this.clearSearch();\n    }\n\n    /**\n     * Attempts to set the currently loaded node\n     */\n    onFolderLoaded(): void {\n        if (!this.showingSearchResults) {\n            this.attemptNodeSelection(this.documentList.folderNode);\n        }\n    }\n\n    /**\n     * Returns whether breadcrumb has to be shown or not\n     */\n    showBreadcrumbs() {\n        return !this.showingSearchResults || this.chosenNode;\n    }\n\n    /**\n     * Loads the next batch of search results\n     *\n     * @param event Pagination object\n     */\n    getNextPageOfSearch(pagination: Pagination): void {\n        this.infiniteScroll = true;\n        this.pagination = pagination;\n\n        if (this.searchTerm.length > 0) {\n            this.querySearch();\n        }\n    }\n\n    /**\n     * Selects node as chosen if it has the right permission, clears the selection otherwise\n     *\n     * @param entry\n     */\n    private attemptNodeSelection(entry: Node): void {\n        if (entry && this.isSelectionValid(entry)) {\n            this.chosenNode = entry;\n        } else {\n            this.resetChosenNode();\n        }\n    }\n\n    /**\n     * Clears the chosen node\n     */\n    resetChosenNode(): void {\n        this.chosenNode = null;\n    }\n\n    /**\n     * Invoked when user selects a node\n     *\n     * @param event CustomEvent for node-select\n     */\n    onNodeSelect(event: any): void {\n        this.attemptNodeSelection(event.detail.node.entry);\n    }\n\n    setTitleIfCustomSite(site: SiteEntry) {\n        if (this.customResourcesService.isCustomSource(site.entry.guid)) {\n            this.breadcrumbFolderTitle = site.entry.title;\n        } else {\n            this.breadcrumbFolderTitle = null;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\n\nimport { ContentNodeSelectorPanelComponent } from './content-node-selector-panel.component';\nimport { ContentNodeSelectorComponent } from './content-node-selector.component';\nimport { SitesDropdownModule } from '../site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { DocumentListModule } from '../document-list/document-list.module';\nimport { NameLocationCellComponent } from './name-location-cell/name-location-cell.component';\n\n@NgModule({\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        DocumentListModule\n    ],\n    exports: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ],\n    entryComponents: [\n        ContentNodeSelectorPanelComponent,\n        ContentNodeSelectorComponent\n    ],\n    declarations: [\n        ContentNodeSelectorPanelComponent,\n        NameLocationCellComponent,\n        ContentNodeSelectorComponent\n    ]\n})\nexport class ContentNodeSelectorModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs';\n\nimport { Component, Inject, OnInit, Optional, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { Node } from '@alfresco/js-api';\nimport { NodesApiService, TranslationService } from '@alfresco/adf-core';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    styleUrls: ['./folder.dialog.scss'],\n    templateUrl: './folder.dialog.html'\n})\nexport class FolderDialogComponent implements OnInit {\n\n    form: FormGroup;\n\n    folder: Node = null;\n\n    /** Emitted when the edit/create folder give error for example a folder with same name already exist\n     */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the edit/create folder is successfully created/modified\n     */\n    @Output()\n    success: EventEmitter<any> = new EventEmitter<Node>();\n\n    editTitle = 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE';\n    createTitle = 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE';\n    nodeType = 'cm:folder';\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {\n        if (data) {\n            this.editTitle = data.editTitle || this.editTitle;\n            this.createTitle = data.createTitle || this.createTitle;\n            this.nodeType = data.nodeType || this.nodeType;\n        }\n    }\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        const { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get description(): string {\n        const { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<Node> {\n        const { name, properties, nodeType, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties, nodeType });\n    }\n\n    private edit(): Observable<Node> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: Node) => {\n                    this.success.emit(folder);\n                    dialog.close(folder);\n                },\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let errorMessage = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                errorMessage = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.error.emit(this.translation.instant(errorMessage));\n\n        return error;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable, Subject, from } from 'rxjs';\nimport {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  FormControl,\n  AbstractControl\n} from '@angular/forms';\nimport { MatDialogRef } from '@angular/material';\nimport { SiteBodyCreate, SiteEntry, SitePaging } from '@alfresco/js-api';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { debounceTime, mergeMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'adf-library-dialog',\n  styleUrls: ['./library.dialog.scss'],\n  templateUrl: './library.dialog.html',\n  encapsulation: ViewEncapsulation.None,\n  host: { class: 'adf-library-dialog' }\n})\nexport class LibraryDialogComponent implements OnInit, OnDestroy {\n  /** Emitted when an error occurs. */\n  @Output()\n  error: EventEmitter<any> = new EventEmitter<any>();\n\n  /** Emitted when the new library is created successfully. The\n   * event parameter is a SiteEntry object with the details of the\n   * newly-created library.\n   */\n  @Output()\n  success: EventEmitter<any> = new EventEmitter<any>();\n\n  onDestroy$: Subject<boolean> = new Subject<boolean>();\n\n  createTitle = 'LIBRARY.DIALOG.CREATE_TITLE';\n  libraryTitleExists = false;\n  form: FormGroup;\n  visibilityOption: any;\n  visibilityOptions = [\n    { value: 'PUBLIC', label: 'LIBRARY.VISIBILITY.PUBLIC', disabled: false },\n    { value: 'PRIVATE', label: 'LIBRARY.VISIBILITY.PRIVATE', disabled: false },\n    {\n      value: 'MODERATED',\n      label: 'LIBRARY.VISIBILITY.MODERATED',\n      disabled: false\n    }\n  ];\n\n  constructor(\n    private alfrescoApiService: AlfrescoApiService,\n    private formBuilder: FormBuilder,\n    private dialog: MatDialogRef<LibraryDialogComponent>\n  ) {}\n\n  ngOnInit() {\n    const validators = {\n      id: [\n        Validators.required,\n        Validators.maxLength(72),\n        this.forbidSpecialCharacters\n      ],\n      title: [\n        Validators.required,\n        this.forbidOnlySpaces,\n        Validators.minLength(2),\n        Validators.maxLength(256)\n      ],\n      description: [Validators.maxLength(512)]\n    };\n\n    this.form = this.formBuilder.group({\n      title: [null, validators.title],\n      id: [null, validators.id, this.createSiteIdValidator()],\n      description: ['', validators.description]\n    });\n\n    this.visibilityOption = this.visibilityOptions[0].value;\n\n    this.form.controls['title'].valueChanges\n      .pipe(\n        debounceTime(300),\n        mergeMap(\n            (title) => this.checkLibraryNameExists(title),\n            (title) => title\n        ),\n        takeUntil(this.onDestroy$)\n      )\n      .subscribe((title: string) => {\n        if (!this.form.controls['id'].dirty && this.canGenerateId(title)) {\n          this.form.patchValue({ id: this.sanitize(title.trim()) });\n          this.form.controls['id'].markAsTouched();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.onDestroy$.next(true);\n    this.onDestroy$.complete();\n  }\n\n  get title(): string {\n    const { title } = this.form.value;\n\n    return (title || '').trim();\n  }\n\n  get id(): string {\n    const { id } = this.form.value;\n\n    return (id || '').trim();\n  }\n\n  get description(): string {\n    const { description } = this.form.value;\n\n    return (description || '').trim();\n  }\n\n  get visibility(): string {\n    return this.visibilityOption || '';\n  }\n\n  submit() {\n    const { form, dialog } = this;\n\n    if (!form.valid) {\n      return;\n    }\n\n    this.create().subscribe(\n      (node: SiteEntry) => {\n        this.success.emit(node);\n        dialog.close(node);\n      },\n      (error) => this.handleError(error)\n    );\n  }\n\n  visibilityChangeHandler(event) {\n    this.visibilityOption = event.value;\n  }\n\n  private create(): Observable<SiteEntry> {\n    const { title, id, description, visibility } = this;\n    const siteBody = <SiteBodyCreate> {\n      id,\n      title,\n      description,\n      visibility\n    };\n\n    return from(this.alfrescoApiService.sitesApi.createSite(siteBody));\n  }\n\n  private sanitize(input: string) {\n    return input.replace(/[\\s\\s]+/g, '-').replace(/[^A-Za-z0-9-]/g, '');\n  }\n\n  private canGenerateId(title) {\n    return Boolean(title.replace(/[^A-Za-z0-9-]/g, '').length);\n  }\n\n  private handleError(error: any): any {\n    const {\n      error: { statusCode }\n    } = JSON.parse(error.message);\n\n    if (statusCode === 409) {\n      this.form.controls['id'].setErrors({\n        message: 'LIBRARY.ERRORS.CONFLICT'\n      });\n    }\n\n    return error;\n  }\n\n  private async checkLibraryNameExists(libraryTitle: string) {\n    let entries = [];\n\n    try {\n        entries = (await this.findLibraryByTitle(libraryTitle)).list.entries;\n    } catch {\n        entries = [];\n    }\n\n    if (entries.length) {\n      this.libraryTitleExists = entries[0].entry.title.toLowerCase() === libraryTitle.toLowerCase();\n    } else {\n      this.libraryTitleExists = false;\n    }\n  }\n\n  private async findLibraryByTitle(libraryTitle: string): Promise<SitePaging> {\n    return this.alfrescoApiService\n      .getInstance()\n      .core.queriesApi.findSites(libraryTitle, {\n        maxItems: 1,\n        fields: ['title']\n      });\n  }\n\n  private forbidSpecialCharacters({ value }: FormControl) {\n    if (value === null || value.length === 0) {\n      return null;\n    }\n\n    const validCharacters: RegExp = /[^A-Za-z0-9-]/;\n    const isValid: boolean = !validCharacters.test(value);\n\n    return isValid\n      ? null\n      : {\n          message: 'LIBRARY.ERRORS.ILLEGAL_CHARACTERS'\n        };\n  }\n\n  private forbidOnlySpaces({ value }: FormControl) {\n    if (value === null || value.length === 0) {\n      return null;\n    }\n\n    const isValid: boolean = !!(value || '').trim();\n\n    return isValid\n      ? null\n      : {\n          message: 'LIBRARY.ERRORS.ONLY_SPACES'\n        };\n  }\n\n  private createSiteIdValidator() {\n    let timer;\n\n    return (control: AbstractControl) => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      return new Promise((resolve) => {\n        timer = setTimeout(() => {\n          return from(\n            this.alfrescoApiService.sitesApi.getSite(control.value)\n          ).subscribe(\n            () => resolve({ message: 'LIBRARY.ERRORS.EXISTENT_SITE' }),\n            () => resolve(null)\n          );\n        }, 300);\n      });\n    };\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from '@alfresco/adf-core';\n\nimport { MaterialModule } from '../material.module';\nimport { FolderDialogComponent } from './folder.dialog';\nimport { NodeLockDialogComponent } from './node-lock.dialog';\nimport { ConfirmDialogComponent } from './confirm.dialog';\nimport { MatDatetimepickerModule } from '@mat-datetimepicker/core';\nimport { MatMomentDatetimeModule } from '@mat-datetimepicker/moment';\nimport { LibraryDialogComponent } from './library/library.dialog';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule,\n        MatMomentDatetimeModule,\n        MatDatetimepickerModule\n    ],\n    declarations: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ],\n    exports: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ],\n    entryComponents: [\n        FolderDialogComponent,\n        NodeLockDialogComponent,\n        ConfirmDialogComponent,\n        LibraryDialogComponent\n    ]\n})\nexport class DialogModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { Node } from '@alfresco/js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Parent folder where the new folder will be located after creation. */\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    /** Title of folder creation dialog. */\n    @Input()\n    title: string = null;\n\n    /** Type of node to create. */\n    @Input()\n    nodeType = 'cm:folder';\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Emitted when the folder is created successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId, title: createTitle, nodeType } = this;\n\n        return {\n            data: { parentNodeId, createTitle, nodeType },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: Node) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: Node) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Directive, ElementRef, HostListener, Input, Output, EventEmitter } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { Node } from '@alfresco/js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { ContentService } from '@alfresco/adf-core';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    /** Folder node to edit. */\n    @Input('adf-edit-folder')\n    folder: Node;\n\n    /** Emitted when an error occurs (eg, a folder with same name already exists). */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Title of folder edit dialog. */\n    @Input()\n    title: string = null;\n\n    /** Emitted when the folder has been edited successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter<Node>();\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: ContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: {\n                folder,\n                editTitle: this.title\n            },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.componentInstance.error.subscribe((error) => {\n            this.error.emit(error);\n        });\n\n        dialogInstance.componentInstance.success.subscribe((node: Node) => {\n            this.success.emit(node);\n        });\n\n        dialogInstance.afterClosed().subscribe((node: Node) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\n\nimport { FolderCreateDirective } from './folder-create.directive';\nimport { FolderEditDirective } from './folder-edit.directive';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ],\n    exports: [\n        FolderCreateDirective,\n        FolderEditDirective\n    ]\n})\nexport class FolderDirectiveModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-content-metadata-card',\n    templateUrl: './content-metadata-card.component.html',\n    styleUrls: ['./content-metadata-card.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-content-metadata-card' }\n})\nexport class ContentMetadataCardComponent implements OnChanges {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: Node;\n\n    /** (optional) This flag displays/hides empty metadata\n     * fields.\n     */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** (optional) This flag displays desired aspect when open for the first time\n     * fields.\n     */\n    @Input()\n    displayAspect: string = null;\n\n    /** (required) Name of the metadata preset, which defines aspects\n     * and their properties.\n     */\n    @Input()\n    preset: string;\n\n    /** (optional) This flag sets the metadata in read only mode\n     * preventing changes.\n     */\n    @Input()\n    readOnly = false;\n\n    /** (optional) This flag allows the component to display more\n     * than one accordion at a time.\n     */\n    @Input()\n    multi = false;\n\n    private _displayDefaultProperties: boolean = true;\n\n    /** (optional) This flag displays/hides the metadata\n     * properties.\n     */\n    @Input()\n    set displayDefaultProperties(value: boolean) {\n        this._displayDefaultProperties = value;\n        this.onDisplayDefaultPropertiesChange();\n    }\n\n    get displayDefaultProperties(): boolean {\n        return this._displayDefaultProperties;\n    }\n\n    editable: boolean = false;\n\n    expanded: boolean;\n\n    constructor(private contentService: ContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.displayAspect && changes.displayAspect.currentValue) {\n            this.expanded = true;\n        }\n    }\n\n    onDisplayDefaultPropertiesChange(): void {\n        this.expanded = !this._displayDefaultProperties;\n    }\n\n    toggleEdit(): void {\n        this.editable = !this.editable;\n    }\n\n    toggleExpanded(): void {\n        this.expanded = !this.expanded;\n    }\n\n    hasAllowableOperations() {\n        return this.contentService.hasAllowableOperations(this.node, AllowableOperationsEnum.UPDATE);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { CardViewDateItemModel, CardViewTextItemModel, FileSizePipe } from '@alfresco/adf-core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BasicPropertiesService {\n\n    constructor(private fileSizePipe: FileSizePipe) {\n    }\n\n    getProperties(node: Node) {\n\n        const sizeInBytes = node.content ? node.content.sizeInBytes : '',\n            mimeTypeName = node.content ? node.content.mimeTypeName : '',\n            author = node.properties ? node.properties['cm:author'] : '',\n            description = node.properties ? node.properties['cm:description'] : '',\n            title = node.properties ? node.properties['cm:title'] : '';\n\n        return [\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.NAME',\n                value: node.name,\n                key: 'name',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.TITLE',\n                value: title,\n                key: 'properties.cm:title',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.CREATOR',\n                value: node.createdByUser.displayName,\n                key: 'createdByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.CREATED_DATE',\n                value: node.createdAt,\n                key: 'createdAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.SIZE',\n                value: sizeInBytes,\n                key: 'content.sizeInBytes',\n                pipes: [{ pipe: this.fileSizePipe }],\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIER',\n                value: node.modifiedByUser.displayName,\n                key: 'modifiedByUser.displayName',\n                editable: false\n            }),\n            new CardViewDateItemModel({\n                label: 'CORE.METADATA.BASIC.MODIFIED_DATE',\n                value: node.modifiedAt,\n                key: 'modifiedAt',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.MIMETYPE',\n                value: mimeTypeName,\n                key: 'content.mimeTypeName',\n                editable: false\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.AUTHOR',\n                value: author,\n                key: 'properties.cm:author',\n                editable: true\n            }),\n            new CardViewTextItemModel({\n                label: 'CORE.METADATA.BASIC.DESCRIPTION',\n                value: description,\n                key: 'properties.cm:description',\n                multiline: true,\n                editable: true\n            })\n        ];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    CardViewItemProperties,\n    CardViewItem,\n    CardViewTextItemModel,\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewDatetimeItemModel,\n    CardViewIntItemModel,\n    CardViewFloatItemModel,\n    LogService,\n    MultiValuePipe,\n    AppConfigService\n} from '@alfresco/adf-core';\nimport { Property, CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\n\nconst D_TEXT = 'd:text';\nconst D_MLTEXT = 'd:mltext';\nconst D_DATE = 'd:date';\nconst D_DATETIME = 'd:datetime';\nconst D_INT = 'd:int';\nconst D_LONG = 'd:long';\nconst D_FLOAT = 'd:float';\nconst D_DOUBLE = 'd:double';\nconst D_BOOLEAN = 'd:boolean';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropertyGroupTranslatorService {\n\n    static readonly RECOGNISED_ECM_TYPES = [D_TEXT, D_MLTEXT, D_DATE, D_DATETIME, D_INT, D_LONG, D_FLOAT, D_DOUBLE, D_BOOLEAN];\n\n    valueSeparator: string;\n\n    constructor(private logService: LogService,\n                private multiValuePipe: MultiValuePipe,\n                private appConfig: AppConfigService) {\n        this.valueSeparator = this.appConfig.get<string>('content-metadata.multi-value-pipe-separator');\n    }\n\n    public translateToCardViewGroups(propertyGroups: OrganisedPropertyGroup[], propertyValues): CardViewGroup[] {\n        return propertyGroups.map((propertyGroup) => {\n            const translatedPropertyGroup: any = Object.assign({}, propertyGroup);\n            translatedPropertyGroup.properties = this.translateArray(propertyGroup.properties, propertyValues);\n            return translatedPropertyGroup;\n        });\n    }\n\n    private translateArray(properties: Property[], propertyValues: any): CardViewItem[] {\n        return properties.map((property) => {\n            return this.translate(property, propertyValues);\n        });\n    }\n\n    private translate(property: Property, propertyValues: any): CardViewItem {\n        let propertyValue;\n        if (propertyValues && propertyValues[property.name]) {\n            propertyValue = propertyValues[property.name];\n        }\n\n        this.checkECMTypeValidity(property.dataType);\n\n        const prefix = 'properties.';\n\n        const propertyDefinition: CardViewItemProperties = {\n            label: property.title || property.name,\n            value: propertyValue,\n            key: `${prefix}${property.name}`,\n            default: property.defaultValue,\n            editable: true\n        };\n        let cardViewItemProperty;\n\n        switch (property.dataType) {\n\n            case D_MLTEXT:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multiline: true\n                }));\n                break;\n\n            case D_INT:\n            case D_LONG:\n                cardViewItemProperty = new CardViewIntItemModel(propertyDefinition);\n                break;\n\n            case D_FLOAT:\n            case D_DOUBLE:\n                cardViewItemProperty = new CardViewFloatItemModel(propertyDefinition);\n                break;\n\n            case D_DATE:\n                cardViewItemProperty = new CardViewDateItemModel(propertyDefinition);\n                break;\n\n            case D_DATETIME:\n                cardViewItemProperty = new CardViewDatetimeItemModel(propertyDefinition);\n                break;\n\n            case D_BOOLEAN:\n                cardViewItemProperty = new CardViewBoolItemModel(propertyDefinition);\n                break;\n\n            case D_TEXT:\n            default:\n                cardViewItemProperty = new CardViewTextItemModel(Object.assign(propertyDefinition, {\n                    multivalued: property.multiValued,\n                    multiline: property.multiValued,\n                    pipes: [{ pipe: this.multiValuePipe, params: [this.valueSeparator]}]\n                }));\n        }\n\n        return cardViewItemProperty;\n    }\n\n    private checkECMTypeValidity(ecmPropertyType) {\n        if (PropertyGroupTranslatorService.RECOGNISED_ECM_TYPES.indexOf(ecmPropertyType) === -1) {\n            this.logService.error(`Unknown type for mapping: ${ecmPropertyType}`);\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PropertyGroup, Property, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\n\nconst emptyGroup = {\n    properties: {}\n};\n\nfunction convertObjectToArray(object: any): Property[] {\n    return Object.keys(object).map((key) => object[key]);\n}\n\nexport function getGroup(propertyGroups: PropertyGroupContainer, groupName: string): PropertyGroup | undefined {\n    return propertyGroups[groupName];\n}\n\nexport function getProperty(propertyGroups: PropertyGroupContainer, groupName: string, propertyName: string): Property | Property[] | undefined {\n    const groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;\n    let propertyDefinitions;\n\n    if (propertyName === '*') {\n        propertyDefinitions = convertObjectToArray(groupDefinition.properties);\n    } else {\n        propertyDefinitions = groupDefinition.properties[propertyName];\n    }\n\n    return propertyDefinitions;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup, PropertyGroupContainer } from '../../interfaces/content-metadata.interfaces';\nimport { getGroup, getProperty } from './property-group-reader';\n\nexport class AspectOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) { }\n\n    public isGroupAllowed(groupName: string): boolean {\n        if (this.isIncludeAllEnabled()) {\n            return true;\n        }\n        const groupNames = Object.keys(this.config);\n        return groupNames.indexOf(groupName) !== -1;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const aspects = this.config,\n            aspectNames = Object.keys(aspects);\n\n        return aspectNames\n            .reduce((groupAccumulator, aspectName) => {\n                const newGroup = this.getOrganisedPropertyGroup(propertyGroups, aspectName);\n                return groupAccumulator.concat(newGroup);\n            }, [])\n            .filter((organisedPropertyGroup) => organisedPropertyGroup.properties.length > 0);\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const groups =  Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n\n        return groups;\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        if (this.config.exclude) {\n            return propertyGroups.filter((preset) => {\n                return !this.config.exclude.includes(preset.name);\n            });\n        }\n        return propertyGroups;\n    }\n\n    public isIncludeAllEnabled() {\n        return this.config.includeAll;\n    }\n\n    private getOrganisedPropertyGroup(propertyGroups, aspectName) {\n        const group = getGroup(propertyGroups, aspectName);\n        let newGroup = [];\n\n        if (group) {\n            const aspectProperties = this.config[aspectName];\n            let properties;\n\n            if (aspectProperties === '*') {\n                properties = getProperty(propertyGroups, aspectName, aspectProperties);\n            } else {\n                properties = (<string[]> aspectProperties)\n                    .map((propertyName) => getProperty(propertyGroups, aspectName, propertyName))\n                    .filter((props) => props !== undefined);\n            }\n\n            newGroup = [{ title: group.title, properties }];\n        }\n\n        return newGroup;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentMetadataConfig, OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\n\nexport class IndifferentConfigService implements ContentMetadataConfig {\n\n    constructor(config: any) {}\n\n    public isGroupAllowed(groupName: string): boolean {\n        return true;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        return propertyGroups;\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return[];\n    }\n\n    public isIncludeAllEnabled(): boolean {\n        return true;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ContentMetadataConfig,\n    LayoutOrientedConfigItem,\n    OrganisedPropertyGroup,\n    PropertyGroupContainer\n} from '../../interfaces/content-metadata.interfaces';\nimport { getProperty } from './property-group-reader';\n\nexport class LayoutOrientedConfigService implements ContentMetadataConfig {\n\n    constructor(private config: any) { }\n\n    public isGroupAllowed(groupName: string): boolean {\n        if (this.isIncludeAllEnabled()) {\n            return true;\n        }\n        return this.getMatchingGroups(groupName).length > 0;\n    }\n\n    public reorganiseByConfig(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        const layoutBlocks = this.config.filter((itemsGroup) => itemsGroup.items);\n\n        const organisedPropertyGroup = layoutBlocks.map((layoutBlock) => {\n            const flattenedItems = this.flattenItems(layoutBlock.items),\n                properties = flattenedItems.reduce((props, explodedItem) => {\n                    const property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];\n                    return props.concat(property);\n                }, []);\n\n            return {\n                title: layoutBlock.title,\n                properties\n            };\n        });\n\n        return organisedPropertyGroup;\n    }\n\n    public appendAllPreset(propertyGroups: PropertyGroupContainer): OrganisedPropertyGroup[] {\n        return Object.keys(propertyGroups)\n            .map((groupName) => {\n                const propertyGroup = propertyGroups[groupName],\n                    properties = propertyGroup.properties;\n\n                return Object.assign({}, propertyGroup, {\n                    properties: Object.keys(properties).map((propertyName) => properties[propertyName])\n                });\n            });\n    }\n\n    public filterExcludedPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        let excludedConfig = this.config\n            .map((config) => config.exclude)\n            .find((exclude) => exclude !== undefined);\n\n        if (excludedConfig === undefined) {\n            excludedConfig = [];\n        } else if (typeof excludedConfig === 'string') {\n            excludedConfig = [excludedConfig];\n        }\n\n        return propertyGroups.filter((props) => {\n            return !excludedConfig.includes(props.name);\n        });\n    }\n\n    public isIncludeAllEnabled() {\n        const includeAllProperty = this.config\n            .map((config) => config.includeAll)\n            .find((includeAll) => includeAll !== undefined);\n\n        return includeAllProperty !== undefined ? includeAllProperty : false;\n    }\n\n    private flattenItems(items) {\n        return items.reduce((accumulator, item) => {\n            const properties = Array.isArray(item.properties) ? item.properties : [item.properties];\n            const flattenedProperties = properties.map((propertyName) => {\n                return {\n                    groupName: item.aspect || item.type,\n                    propertyName\n                };\n            });\n\n            return accumulator.concat(flattenedProperties);\n        }, []);\n    }\n\n    private getMatchingGroups(groupName: string): LayoutOrientedConfigItem[] {\n        return this.config\n            .map((layoutBlock) => layoutBlock.items)\n            .reduce((accumulator, items) => accumulator.concat(items), [])\n            .filter((item) => item.aspect === groupName || item.type === groupName);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService, LogService } from '@alfresco/adf-core';\nimport { AspectOrientedConfigService } from './aspect-oriented-config.service';\nimport { IndifferentConfigService } from './indifferent-config.service';\nimport { LayoutOrientedConfigService } from './layout-oriented-config.service';\nimport {\n    PresetConfig,\n    ContentMetadataConfig,\n    AspectOrientedConfig,\n    InDifferentConfig,\n    LayoutOrientedConfig\n} from '../../interfaces/content-metadata.interfaces';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentMetadataConfigFactory {\n\n    static readonly INDIFFERENT_PRESET = '*';\n    static readonly DEFAULT_PRESET_NAME = 'default';\n\n    constructor(private appConfigService: AppConfigService, private logService: LogService) {}\n\n    public get(presetName: string = 'default'): ContentMetadataConfig {\n        let presetConfig;\n        try {\n            presetConfig = this.appConfigService.config['content-metadata'].presets[presetName];\n        } catch {\n            if (presetName !== ContentMetadataConfigFactory.DEFAULT_PRESET_NAME) {\n                this.logService.error(`No content-metadata preset for: ${presetName}`);\n            }\n            presetConfig = ContentMetadataConfigFactory.INDIFFERENT_PRESET;\n        }\n\n        return this.createConfig(presetConfig);\n    }\n\n    private createConfig(presetConfig: PresetConfig): ContentMetadataConfig {\n        let config: ContentMetadataConfig;\n\n        if (this.isLayoutOrientedPreset(presetConfig)) {\n            config = new LayoutOrientedConfigService(<LayoutOrientedConfig> presetConfig);\n        } else if (this.isAspectOrientedPreset(presetConfig)) {\n            config = new AspectOrientedConfigService(<AspectOrientedConfig> presetConfig);\n        } else {\n            config = new IndifferentConfigService(<InDifferentConfig> presetConfig);\n        }\n\n        Object.freeze(config);\n        return config;\n    }\n\n    private isAspectOrientedPreset(presetConfig: PresetConfig): boolean {\n        return this.isObject(presetConfig);\n    }\n\n    private isLayoutOrientedPreset(presetConfig: PresetConfig): boolean {\n        return Array.isArray(presetConfig);\n    }\n\n    private isObject(x) {\n        return x != null && typeof x === 'object';\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AlfrescoApiService } from '@alfresco/adf-core';\nimport { Observable, defer, forkJoin } from 'rxjs';\nimport { PropertyGroup, PropertyGroupContainer } from '../interfaces/content-metadata.interfaces';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PropertyDescriptorsService {\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    load(groupNames: string[]): Observable<PropertyGroupContainer> {\n        const groupFetchStreams = groupNames\n            .map((groupName) => groupName.replace(':', '_'))\n            .map((groupName) => defer( () => this.alfrescoApiService.classesApi.getClass(groupName)) );\n\n        return forkJoin(groupFetchStreams).pipe(\n            map(this.convertToObject)\n        );\n    }\n\n    private convertToObject(propertyGroupsArray: PropertyGroup[]): PropertyGroupContainer {\n        return propertyGroupsArray.reduce((propertyGroups, propertyGroup) => {\n            return Object.assign({}, propertyGroups, {\n                [propertyGroup.name]: propertyGroup\n            });\n        }, {});\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { BasicPropertiesService } from './basic-properties.service';\nimport { Observable, of, iif } from 'rxjs';\nimport { PropertyGroupTranslatorService } from './property-groups-translator.service';\nimport { CardViewItem } from '@alfresco/adf-core';\nimport { CardViewGroup, OrganisedPropertyGroup } from '../interfaces/content-metadata.interfaces';\nimport { ContentMetadataConfigFactory } from './config/content-metadata-config.factory';\nimport { PropertyDescriptorsService } from './property-descriptors.service';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContentMetadataService {\n\n    constructor(private basicPropertiesService: BasicPropertiesService,\n                private contentMetadataConfigFactory: ContentMetadataConfigFactory,\n                private propertyGroupTranslatorService: PropertyGroupTranslatorService,\n                private propertyDescriptorsService: PropertyDescriptorsService) {\n    }\n\n    getBasicProperties(node: Node): Observable<CardViewItem[]> {\n        return of(this.basicPropertiesService.getProperties(node));\n    }\n\n    getGroupedProperties(node: Node, presetName: string = 'default'): Observable<CardViewGroup[]> {\n        let groupedProperties = of([]);\n\n        if (node.aspectNames) {\n            const contentMetadataConfig = this.contentMetadataConfigFactory.get(presetName),\n                groupNames = node.aspectNames\n                    .concat(node.nodeType)\n                    .filter((groupName) => contentMetadataConfig.isGroupAllowed(groupName));\n\n            if (groupNames.length > 0) {\n                groupedProperties = this.propertyDescriptorsService.load(groupNames).pipe(\n                    switchMap((groups) =>\n                        iif(\n                            () => contentMetadataConfig.isIncludeAllEnabled(),\n                            of(contentMetadataConfig.appendAllPreset(groups).concat(contentMetadataConfig.reorganiseByConfig(groups))),\n                            of(contentMetadataConfig.reorganiseByConfig(groups))\n                        )),\n                    map((groups) => contentMetadataConfig.filterExcludedPreset(groups)),\n                    map((groups) => this.filterEmptyPreset(groups)),\n                    map((groups) => this.setTitleToNameIfNotSet(groups)),\n                    map((groups) => this.propertyGroupTranslatorService.translateToCardViewGroups(groups, node.properties))\n                );\n            }\n        }\n\n        return groupedProperties;\n    }\n\n    setTitleToNameIfNotSet(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[] {\n        propertyGroups.map((propertyGroup) => {\n            propertyGroup.title = propertyGroup.title || propertyGroup.name;\n        });\n        return propertyGroups;\n    }\n\n    filterEmptyPreset(propertyGroups: OrganisedPropertyGroup[]): OrganisedPropertyGroup[]  {\n        return propertyGroups.filter((props) => props.properties.length);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { Observable, Subscription } from 'rxjs';\nimport { CardViewItem, NodesApiService, LogService, CardViewUpdateService, AlfrescoApiService } from '@alfresco/adf-core';\nimport { ContentMetadataService } from '../../services/content-metadata.service';\nimport { CardViewGroup } from '../../interfaces/content-metadata.interfaces';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'adf-content-metadata',\n    templateUrl: './content-metadata.component.html',\n    styleUrls: ['./content-metadata.component.scss'],\n    host: { 'class': 'adf-content-metadata' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ContentMetadataComponent implements OnChanges, OnInit, OnDestroy {\n    /** (required) The node entity to fetch metadata about */\n    @Input()\n    node: Node;\n\n    /** Toggles whether the edit button should be shown */\n    @Input()\n    editable: boolean = false;\n\n    /** Toggles whether to display empty values in the card view */\n    @Input()\n    displayEmpty: boolean = false;\n\n    /** Toggles between expanded (ie, full information) and collapsed\n     * (ie, reduced information) in the display\n     */\n    @Input()\n    expanded: boolean = false;\n\n    /** The multi parameter of the underlying material expansion panel, set to true to allow multi accordion to be expanded at the same time */\n    @Input()\n    multi = false;\n\n    /** Name of the metadata preset, which defines aspects and their properties */\n    @Input()\n    preset: string;\n\n    /** Toggles whether the metadata properties should be shown */\n    @Input()\n    displayDefaultProperties: boolean = true;\n\n    /** (Optional) shows the given aspect in the expanded  card */\n    @Input()\n    displayAspect: string = null;\n\n    basicProperties$: Observable<CardViewItem[]>;\n    groupedProperties$: Observable<CardViewGroup[]>;\n    disposableNodeUpdate: Subscription;\n\n    constructor(\n        private contentMetadataService: ContentMetadataService,\n        private cardViewUpdateService: CardViewUpdateService,\n        private nodesApiService: NodesApiService,\n        private logService: LogService,\n        private alfrescoApiService: AlfrescoApiService\n    ) {}\n\n    ngOnInit() {\n        this.disposableNodeUpdate =  this.cardViewUpdateService.itemUpdated$\n            .pipe(\n                switchMap(this.saveNode.bind(this))\n            )\n            .subscribe(\n                (updatedNode) => {\n                    Object.assign(this.node, updatedNode);\n                    this.alfrescoApiService.nodeUpdated.next(this.node);\n                },\n                (error) => this.logService.error(error)\n            );\n\n        this.loadProperties(this.node);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node && !changes.node.firstChange) {\n            this.loadProperties(changes.node.currentValue);\n        }\n    }\n\n    private loadProperties(node: Node) {\n        if (node) {\n            this.basicProperties$ = this.contentMetadataService.getBasicProperties(node);\n            this.groupedProperties$ = this.contentMetadataService.getGroupedProperties(node, this.preset);\n        }\n    }\n\n    private saveNode({ changed: nodeBody }): Observable<Node> {\n        return this.nodesApiService.updateNode(this.node.id, nodeBody);\n    }\n\n    showGroup(group: CardViewGroup) {\n        const properties = group.properties.filter((property) => {\n            return !!property.displayValue;\n        });\n\n        return properties.length;\n    }\n\n    ngOnDestroy() {\n        this.disposableNodeUpdate.unsubscribe();\n    }\n\n    public canExpandTheCard(group: CardViewGroup): boolean {\n        return group.title === this.displayAspect;\n    }\n\n    public canExpandProperties(): boolean {\n        return !this.expanded || this.displayAspect === 'Properties';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { MaterialModule } from '../material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { ContentMetadataComponent } from './components/content-metadata/content-metadata.component';\nimport { ContentMetadataCardComponent } from './components/content-metadata-card/content-metadata-card.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        FlexLayoutModule,\n        CoreModule.forChild()\n    ],\n    exports: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ],\n    declarations: [\n        ContentMetadataComponent,\n        ContentMetadataCardComponent\n    ]\n})\nexport class ContentMetadataModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PermissionElement } from '@alfresco/js-api';\n\nexport class PermissionDisplayModel implements PermissionElement {\n\n    authorityId?: string;\n    name?: string;\n    accessStatus?: PermissionElement.AccessStatusEnum;\n    isInherited: boolean = false;\n    icon: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.authorityId = obj.authorityId;\n            this.name = obj.name;\n            this.accessStatus = obj.accessStatus;\n            this.isInherited = obj.isInherited !== null && obj.isInherited !== undefined ? obj.isInherited : false;\n            this.icon = obj.icon ? obj.icon : 'vpn_key';\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, of, from, throwError } from 'rxjs';\nimport { AlfrescoApiService, SearchService, NodesApiService, TranslationService } from '@alfresco/adf-core';\nimport { QueryBody, Node, NodeEntry, PathElement, GroupMemberEntry, GroupMemberPaging, PermissionElement } from '@alfresco/js-api';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodePermissionService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private searchApiService: SearchService,\n                private nodeService: NodesApiService,\n                private translation: TranslationService) {\n    }\n\n    /**\n     * Gets a list of roles for the current node.\n     * @param node The target node\n     * @returns Array of strings representing the roles\n     */\n    getNodeRoles(node: Node): Observable<string[]> {\n        const retrieveSiteQueryBody: QueryBody = this.buildRetrieveSiteQueryBody(node.path.elements);\n        return this.searchApiService.searchByQueryBody(retrieveSiteQueryBody)\n            .pipe(\n                switchMap((siteNodeList: any) => {\n                    if ( siteNodeList.list.entries.length > 0 ) {\n                        const siteName = siteNodeList.list.entries[0].entry.name;\n                        return this.getGroupMembersBySiteName(siteName);\n                    } else {\n                        return of(node.permissions.settable);\n                    }\n                })\n            );\n    }\n\n    /**\n     * Updates the permission role for a node.\n     * @param node Target node\n     * @param updatedPermissionRole Permission role to update or add\n     * @returns Node with updated permission\n     */\n    updatePermissionRole(node: Node, updatedPermissionRole: PermissionElement): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: []} };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(updatedPermissionRole.authorityId);\n        permissionBody.permissions.locallySet = permissionBody.permissions.locallySet.concat(node.permissions.locallySet);\n        if (index !== -1) {\n            permissionBody.permissions.locallySet[index] = updatedPermissionRole;\n        } else {\n            permissionBody.permissions.locallySet.push(updatedPermissionRole);\n        }\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    /**\n     * Update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param permissionList New permission settings\n     * @returns Node with updated permissions\n     */\n    updateNodePermissions(nodeId: string, permissionList: NodeEntry[]): Observable<Node> {\n       return this.nodeService.getNode(nodeId).pipe(\n           switchMap((node) => {\n                return this.getNodeRoles(node).pipe(\n                    switchMap((nodeRoles) => of({node, nodeRoles}) )\n                );\n            }),\n            switchMap(({node, nodeRoles}) => this.updateLocallySetPermissions(node, permissionList, nodeRoles))\n        );\n    }\n\n    /**\n     * Updates the locally set permissions for a node.\n     * @param node ID of the target node\n     * @param nodes Permission settings\n     * @param nodeRole Permission role\n     * @returns Node with updated permissions\n     */\n    updateLocallySetPermissions(node: Node, nodes: NodeEntry[], nodeRole: string[]): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: []} };\n        const permissionList = this.transformNodeToPermissionElement(nodes, nodeRole[0]);\n        const duplicatedPermissions = this.getDuplicatedPermissions(node.permissions.locallySet, permissionList);\n        if (duplicatedPermissions.length > 0) {\n            const list = duplicatedPermissions.map((permission) => 'authority -> ' + permission.authorityId + ' / role -> ' + permission.name).join(', ');\n            const duplicatePermissionMessage: string = this.translation.instant('PERMISSION_MANAGER.ERROR.DUPLICATE-PERMISSION',  {list});\n            return throwError(duplicatePermissionMessage);\n        }\n        permissionBody.permissions.locallySet = node.permissions.locallySet ? node.permissions.locallySet.concat(permissionList) : permissionList;\n        return this.nodeService.updateNode(node.id, permissionBody);\n    }\n\n    private getDuplicatedPermissions(nodeLocallySet: PermissionElement[], permissionListAdded: PermissionElement[]): PermissionElement[] {\n        const duplicatePermissions: PermissionElement[] = [];\n        if (nodeLocallySet) {\n            permissionListAdded.forEach((permission: PermissionElement) => {\n                const duplicate = nodeLocallySet.find((localPermission) => this.isEqualPermission(localPermission, permission));\n                if (duplicate) {\n                    duplicatePermissions.push(duplicate);\n                }\n            });\n        }\n        return duplicatePermissions;\n    }\n\n    private isEqualPermission(oldPermission: PermissionElement, newPermission: PermissionElement): boolean {\n        return oldPermission.accessStatus === newPermission.accessStatus &&\n               oldPermission.authorityId === newPermission.authorityId &&\n               oldPermission.name === newPermission.name;\n    }\n\n    private transformNodeToPermissionElement(nodes: NodeEntry[], nodeRole: any): PermissionElement[] {\n        return nodes.map((node) => {\n            const newPermissionElement: PermissionElement = <PermissionElement> {\n                'authorityId': node.entry.properties['cm:authorityName'] ?\n                    node.entry.properties['cm:authorityName'] :\n                    node.entry.properties['cm:userName'],\n                'name': nodeRole,\n                'accessStatus': 'ALLOWED'\n            };\n            return newPermissionElement;\n        });\n    }\n\n    /**\n     * Removes a permission setting from a node.\n     * @param node ID of the target node\n     * @param permissionToRemove Permission setting to remove\n     * @returns Node with modified permissions\n     */\n    removePermission(node: Node, permissionToRemove: PermissionElement): Observable<Node> {\n        const permissionBody = { permissions: { locallySet: [] } };\n        const index = node.permissions.locallySet.map((permission) => permission.authorityId).indexOf(permissionToRemove.authorityId);\n        if (index !== -1) {\n            node.permissions.locallySet.splice(index, 1);\n            permissionBody.permissions.locallySet = node.permissions.locallySet;\n            return this.nodeService.updateNode(node.id, permissionBody);\n        }\n    }\n\n    private getGroupMembersBySiteName(siteName: string): Observable<string[]> {\n        const groupName = 'GROUP_site_' + siteName;\n        return this.getGroupMemberByGroupName(groupName)\n            .pipe(\n                map((groupMemberPaging: GroupMemberPaging) => {\n                    const displayResult: string[] = [];\n                    groupMemberPaging.list.entries.forEach((member: GroupMemberEntry) => {\n                        displayResult.push(this.formattedRoleName(member.entry.displayName, 'site_' + siteName));\n                    });\n                    return displayResult;\n                })\n            );\n    }\n\n    /**\n     * Gets all members related to a group name.\n     * @param groupName Name of group to look for members\n     * @param opts Extra options supported by JS-API\n     * @returns List of members\n     */\n    getGroupMemberByGroupName(groupName: string, opts?: any): Observable<GroupMemberPaging> {\n        return from(this.apiService.groupsApi.getGroupMembers(groupName, opts));\n    }\n\n    private formattedRoleName(displayName, siteName): string {\n        return displayName.replace(siteName + '_', '');\n    }\n\n    private buildRetrieveSiteQueryBody(nodePath: PathElement[]): QueryBody {\n        const pathNames = nodePath.map((node: PathElement) => 'name: \"' + node.name + '\"');\n        const buildedPathNames = pathNames.join(' OR ');\n        return {\n            'query': {\n                'query': buildedPathNames\n            },\n            'paging': {\n                'maxItems': 100,\n                'skipCount': 0\n            },\n            'include': ['aspectNames', 'properties'],\n            'filterQueries': [\n                {\n                    'query':\n                        \"TYPE:'st:site'\"\n                }\n            ]\n        };\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Input, OnInit, EventEmitter, Output } from '@angular/core';\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Node, PermissionElement } from '@alfresco/js-api';\nimport { PermissionDisplayModel } from '../../models/permission.model';\nimport { NodePermissionService } from '../../services/node-permission.service';\n\n@Component({\n    selector: 'adf-permission-list',\n    templateUrl: './permission-list.component.html',\n    styleUrls: ['./permission-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PermissionListComponent implements OnInit {\n\n    /** ID of the node whose permissions you want to show. */\n    @Input()\n    nodeId: string = '';\n\n    /** Emitted when the permission is updated. */\n    @Output()\n    update: EventEmitter<PermissionElement> = new EventEmitter();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    permissionList: PermissionDisplayModel[];\n    settableRoles: any[];\n    actualNode: Node;\n\n    constructor(private nodeService: NodesApiService,\n                private nodePermissionService: NodePermissionService) {\n\n    }\n\n    ngOnInit() {\n        this.fetchNodePermissions();\n    }\n\n    reload() {\n        this.fetchNodePermissions();\n    }\n\n    private fetchNodePermissions() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: Node) => {\n            this.actualNode = node;\n            this.permissionList = this.getPermissionList(node);\n            this.nodePermissionService.getNodeRoles(node).subscribe((settableList: string[]) => {\n                this.settableRoles = settableList;\n            });\n        });\n    }\n\n    private getPermissionList(node: Node): PermissionDisplayModel[] {\n        const allPermissions: PermissionDisplayModel[] = [];\n        if (node.permissions.locallySet) {\n            node.permissions.locallySet.map((permissionElement: PermissionElement) => {\n                const permission = new PermissionDisplayModel(permissionElement);\n                allPermissions.push(permission);\n            });\n        }\n        if (node.permissions.inherited) {\n            node.permissions.inherited.map((permissionElement: PermissionElement) => {\n                const permissionInherited = new PermissionDisplayModel(permissionElement);\n                permissionInherited.isInherited = true;\n                allPermissions.push(permissionInherited);\n            });\n        }\n        return allPermissions;\n    }\n\n    saveNewRole(event: any, permissionRow: PermissionDisplayModel) {\n        const updatedPermissionRole: PermissionElement = this.buildUpdatedPermission(event.value, permissionRow);\n        this.nodePermissionService.updatePermissionRole(this.actualNode, updatedPermissionRole)\n            .subscribe((node: Node) => {\n                this.update.emit(updatedPermissionRole);\n            });\n    }\n\n    private buildUpdatedPermission(newRole: string, permissionRow: PermissionDisplayModel): PermissionElement {\n        const permissionRole: PermissionElement = {};\n        permissionRole.accessStatus = permissionRow.accessStatus;\n        permissionRole.name = newRole;\n        permissionRole.authorityId = permissionRow.authorityId;\n        return permissionRole;\n    }\n\n    removePermission(permissionRow: PermissionDisplayModel) {\n        this.nodePermissionService.removePermission(this.actualNode, permissionRow).subscribe((node) => {\n            this.update.emit(node);\n        }, (error) => this.error.emit(error));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-no-permission-template',\n    template: '<ng-content></ng-content>'\n})\nexport class NoPermissionTemplateComponent {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* tslint:disable:no-input-rename  */\nimport { Directive, Input, Output, EventEmitter } from '@angular/core';\nimport { NodesApiService, ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { Node } from '@alfresco/js-api';\n\n@Directive({\n    selector: 'button[adf-inherit-permission], mat-button-toggle[adf-inherit-permission]',\n    host: {\n        'role': 'button',\n        '(click)': 'onInheritPermissionClicked()'\n    }\n})\nexport class InheritPermissionDirective {\n\n    /** ID of the node to add/remove inherited permissions. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated. */\n    @Output()\n    updated: EventEmitter<Node> = new EventEmitter<Node>();\n\n    /** Emitted when an error occurs. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter<any>();\n\n    constructor(private nodeService: NodesApiService,\n                private contentService: ContentService) {\n    }\n\n    onInheritPermissionClicked() {\n        this.nodeService.getNode(this.nodeId).subscribe((node: Node) => {\n            if (this.contentService.hasAllowableOperations(node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n                const nodeBody = { permissions: { isInheritanceEnabled: !node.permissions.isInheritanceEnabled } };\n                this.nodeService.updateNode(this.nodeId, nodeBody, { include: ['permissions'] }).subscribe((nodeUpdated: Node) => {\n                    this.updated.emit(nodeUpdated);\n                }, (error) => this.error.emit(error));\n            } else {\n                this.error.emit('PERMISSION_MANAGER.ERROR.NOT-ALLOWED');\n            }\n        });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { NodeEntry } from '@alfresco/js-api';\nimport { AddPermissionDialogData } from './add-permission-dialog-data.interface';\nimport { AddPermissionComponent } from '../add-permission/add-permission.component';\n\n@Component({\n    selector: 'adf-add-permission-dialog',\n    templateUrl: './add-permission-dialog.component.html',\n    styleUrls: ['./add-permission-dialog.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionDialogComponent {\n\n    @ViewChild('addPermission')\n    addPermissionComponent: AddPermissionComponent;\n\n    currentSelection: NodeEntry[] = [];\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: AddPermissionDialogData) {\n    }\n\n    onSelect(items: NodeEntry[]) {\n        this.currentSelection = items;\n    }\n\n    onAddClicked() {\n        this.data.confirm.next(this.currentSelection);\n        this.data.confirm.complete();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MatDialog } from '@angular/material';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable, throwError } from 'rxjs';\nimport { AddPermissionDialogComponent } from '../components/add-permission/add-permission-dialog.component';\nimport { AddPermissionDialogData } from '../components/add-permission/add-permission-dialog-data.interface';\nimport { NodeEntry, Node } from '@alfresco/js-api';\nimport { NodePermissionService } from './node-permission.service';\nimport { ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodePermissionDialogService {\n\n    constructor(private dialog: MatDialog,\n                private nodePermissionService: NodePermissionService,\n                private contentService: ContentService) {\n    }\n\n    /**\n     * Opens a dialog to add permissions to a node.\n     * @param node ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    openAddPermissionDialog(node: Node, title?: string): Observable<NodeEntry[]> {\n        if (this.contentService.hasAllowableOperations(node, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            const confirm = new Subject<NodeEntry[]>();\n\n            confirm.subscribe({\n                complete: this.close.bind(this)\n            });\n\n            const data: AddPermissionDialogData = {\n                nodeId: node.id,\n                title: title,\n                confirm: confirm\n            };\n\n            this.openDialog(data, 'adf-add-permission-dialog', '630px');\n            return confirm;\n        } else {\n            const errors = new Error(JSON.stringify({ error: { statusCode: 403 } }));\n            errors.message = 'PERMISSION_MANAGER.ERROR.NOT-ALLOWED';\n            return throwError(errors);\n        }\n    }\n\n    private openDialog(data: any, currentPanelClass: string, chosenWidth: string) {\n        this.dialog.open(AddPermissionDialogComponent, { data, panelClass: currentPanelClass, width: chosenWidth });\n    }\n\n    /**\n     * Closes the currently-open dialog.\n     */\n    close() {\n        this.dialog.closeAll();\n    }\n\n    /**\n     * Opens a dialog to update permissions for a node.\n     * @param nodeId ID of the target node\n     * @param title Dialog title\n     * @returns Node with updated permissions\n     */\n    updateNodePermissionByDialog(nodeId?: string, title?: string): Observable<Node> {\n        return this.contentService.getNode(nodeId, { include: ['allowableOperations'] })\n            .pipe(\n                switchMap((node) => {\n                    return this.openAddPermissionDialog(node.entry, title)\n                        .pipe(\n                            switchMap((selection) => {\n                                return this.nodePermissionService.updateNodePermissions(nodeId, selection);\n                            })\n                        );\n                })\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryBody } from '@alfresco/js-api';\nimport { SearchConfigurationInterface } from '@alfresco/adf-core';\n\nexport class SearchPermissionConfigurationService implements SearchConfigurationInterface {\n\n    constructor() {\n    }\n\n    public generateQueryBody(searchTerm: string, maxResults: number, skipCount: number): QueryBody {\n        const defaultQueryBody: QueryBody = {\n            query: {\n                query: searchTerm ? `authorityName:*${searchTerm}* OR userName:*${searchTerm}*` : searchTerm\n            },\n            include: ['properties', 'aspectNames'],\n            paging: {\n                maxItems: maxResults,\n                skipCount: skipCount\n            },\n            filterQueries: [\n                /*tslint:disable-next-line */\n                { query: \"TYPE:'cm:authority'\" }]\n        };\n\n        return defaultQueryBody;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { SearchPermissionConfigurationService } from './search-config-permission.service';\nimport { SearchService, SearchConfigurationService } from '@alfresco/adf-core';\nimport { SearchComponent } from '../../../search/components/search.component';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-add-permission-panel',\n    templateUrl: './add-permission-panel.component.html',\n    styleUrls: ['./add-permission-panel.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        { provide: SearchConfigurationService, useClass: SearchPermissionConfigurationService },\n        SearchService\n    ]\n})\nexport class AddPermissionPanelComponent {\n\n    @ViewChild('search')\n    search: SearchComponent;\n\n    /** Emitted when a permission list item is selected. */\n    @Output()\n    select: EventEmitter<any> = new EventEmitter();\n\n    searchInput: FormControl = new FormControl();\n    searchedWord = '';\n    debounceSearch: number = 200;\n\n    selectedItems: NodeEntry[] = [];\n\n    EVERYONE: NodeEntry = new NodeEntry({ entry: { properties: {'cm:authorityName': 'GROUP_EVERYONE'}}});\n\n    constructor() {\n        this.searchInput.valueChanges\n        .pipe(\n            debounceTime(this.debounceSearch)\n        )\n        .subscribe((searchValue) => {\n            this.searchedWord = searchValue;\n            if (!searchValue) {\n                this.search.resetResults();\n            }\n        });\n    }\n\n    elementClicked(item: NodeEntry) {\n        if (this.isAlreadySelected(item)) {\n            this.selectedItems.splice(this.selectedItems.indexOf(item), 1);\n        } else {\n            this.selectedItems.push(item);\n        }\n        this.select.emit(this.selectedItems);\n    }\n\n    private isAlreadySelected(item: NodeEntry): boolean {\n        return this.selectedItems.indexOf(item) >= 0;\n    }\n\n    clearSearch() {\n        this.searchedWord = '';\n        this.selectedItems.splice(0, this.selectedItems.length);\n        this.search.resetResults();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation, EventEmitter, Input, Output } from '@angular/core';\nimport { NodeEntry, Node } from '@alfresco/js-api';\nimport { NodePermissionService } from '../../services/node-permission.service';\nimport { NodesApiService, ContentService, AllowableOperationsEnum } from '@alfresco/adf-core';\n\n@Component({\n    selector: 'adf-add-permission',\n    templateUrl: './add-permission.component.html',\n    styleUrls: ['./add-permission.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AddPermissionComponent {\n\n    /** ID of the target node. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when the node is updated successfully. */\n    @Output()\n    success: EventEmitter<Node> = new EventEmitter();\n\n    /** Emitted when an error occurs during the update. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    selectedItems: NodeEntry[] = [];\n    currentNode: Node;\n    currentNodeRoles: string[];\n\n    constructor(private nodePermissionService: NodePermissionService,\n                private nodeApiService: NodesApiService,\n                private contentService: ContentService) {\n        this.nodeApiService.getNode(this.nodeId).subscribe((node) => this.currentNode = node);\n    }\n\n    onSelect(selection: NodeEntry[]) {\n        this.selectedItems = selection;\n    }\n\n    isAddEnabled(): boolean {\n        return this.contentService.hasAllowableOperations(this.currentNode, AllowableOperationsEnum.UPDATEPERMISSIONS) &&\n                this.selectedItems.length !== 0;\n    }\n\n    applySelection() {\n        if (this.contentService.hasAllowableOperations(this.currentNode, AllowableOperationsEnum.UPDATEPERMISSIONS)) {\n            this.nodePermissionService.updateNodePermissions(this.nodeId, this.selectedItems)\n                .subscribe(\n                    (node) => {\n                        this.success.emit(node);\n                    },\n                    (error) => {\n                        this.error.emit(error);\n                    });\n        }\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { PermissionListComponent } from './components/permission-list/permission-list.component';\nimport { AddPermissionComponent } from './components/add-permission/add-permission.component';\nimport { AddPermissionDialogComponent } from './components/add-permission/add-permission-dialog.component';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { InheritPermissionDirective } from './components/inherited-button.directive';\nimport { NoPermissionTemplateComponent } from './components/permission-list/no-permission.component';\nimport { AddPermissionPanelComponent } from './components/add-permission/add-permission-panel.component';\nimport { SearchModule } from '../search/search.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        SearchModule\n    ],\n    declarations: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    entryComponents: [\n        AddPermissionPanelComponent,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ],\n    exports: [\n        PermissionListComponent,\n        NoPermissionTemplateComponent,\n        AddPermissionPanelComponent,\n        InheritPermissionDirective,\n        AddPermissionComponent,\n        AddPermissionDialogComponent\n    ]\n})\nexport class PermissionManagerModule {}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Inject,\n    OnInit,\n    ViewEncapsulation,\n    ViewChild,\n    ElementRef,\n    OnDestroy\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef,  MatDialog } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { tap, skip } from 'rxjs/operators';\nimport {\n    SharedLinksApiService,\n    NodesApiService,\n    ContentService,\n    RenditionsService\n} from '@alfresco/adf-core';\nimport { SharedLinkEntry, Node } from '@alfresco/js-api';\nimport { ConfirmDialogComponent } from '../dialogs/confirm.dialog';\nimport moment from 'moment-es6';\n\n@Component({\n    selector: 'adf-share-dialog',\n    templateUrl: './content-node-share.dialog.html',\n    styleUrls: ['./content-node-share.dialog.scss'],\n    host: { 'class': 'adf-share-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class ShareDialogComponent implements OnInit, OnDestroy {\n    private subscriptions: Subscription[] = [];\n\n    minDate = moment().add(1, 'd');\n    sharedId: string;\n    fileName: string;\n    baseShareUrl: string;\n    isFileShared: boolean = false;\n    isDisabled: boolean = false;\n    form: FormGroup = new FormGroup({\n        'sharedUrl': new FormControl(''),\n        'time': new FormControl({value: '', disabled: false})\n    });\n\n    @ViewChild('sharedLinkInput') sharedLinkInput: ElementRef;\n\n    constructor(\n        private sharedLinksApiService: SharedLinksApiService,\n        private dialogRef: MatDialogRef<ShareDialogComponent>,\n        private dialog: MatDialog,\n        private nodesApiService: NodesApiService,\n        private contentService: ContentService,\n        private renditionService: RenditionsService,\n        @Inject(MAT_DIALOG_DATA) public data: any) {\n    }\n\n    ngOnInit() {\n\n        if (!this.canUpdate) {\n            this.form.controls['time'].disable();\n        }\n\n        this.subscriptions.push(\n            this.form.valueChanges\n                .pipe(\n                    skip(1),\n                    tap((updates) => {\n                        this.updateNode(updates);\n                    })\n                )\n                .subscribe((updates) => this.updateEntryExpiryDate(updates))\n        );\n\n        if (this.data.node && this.data.node.entry) {\n            this.fileName = this.data.node.entry.name;\n            this.baseShareUrl = this.data.baseShareUrl;\n            const properties = this.data.node.entry.properties;\n\n            if (properties && !properties['qshare:sharedId']) {\n\n                this.createSharedLinks(this.data.node.entry.id);\n\n            } else {\n                this.sharedId = properties['qshare:sharedId'];\n                this.isFileShared = true;\n\n                this.updateForm();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe);\n    }\n\n    removeShare() {\n        this.deleteSharedLink(this.sharedId);\n    }\n\n    onSlideShareChange(event: any) {\n        if (event.checked) {\n            this.createSharedLinks(this.data.node.entry.id);\n        } else {\n            this.openConfirmationDialog();\n        }\n    }\n\n    get canUpdate() {\n        return this.contentService.hasAllowableOperations(this.data.node.entry, 'update');\n    }\n\n    private openConfirmationDialog() {\n        this.isFileShared = false;\n\n        this.dialog\n            .open(ConfirmDialogComponent, {\n                data: {\n                    title: 'SHARE.CONFIRMATION.DIALOG-TITLE',\n                    message: 'SHARE.CONFIRMATION.MESSAGE',\n                    yesLabel: 'SHARE.CONFIRMATION.REMOVE',\n                    noLabel: 'SHARE.CONFIRMATION.CANCEL'\n                },\n                minWidth: '250px',\n                closeOnNavigation: true\n            })\n            .beforeClose().subscribe((deleteSharedLink) => {\n                if (deleteSharedLink) {\n                    this.deleteSharedLink(this.sharedId);\n                } else {\n                    this.isFileShared = true;\n                }\n            });\n    }\n\n    private createSharedLinks(nodeId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.createSharedLinks(nodeId)\n            .subscribe((sharedLink: SharedLinkEntry) => {\n\n                if (sharedLink.entry) {\n                    this.sharedId = sharedLink.entry.id;\n                    this.data.node.entry.properties['qshare:sharedId'] = this.sharedId;\n                    this.isDisabled = false;\n                    this.isFileShared = true;\n                    this.renditionService.generateRenditionForNode(this.data.node.entry.id).subscribe(() => {});\n\n                    this.updateForm();\n                }\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private deleteSharedLink(sharedId: string) {\n        this.isDisabled = true;\n\n        this.sharedLinksApiService.deleteSharedLink(sharedId).subscribe(() => {\n                this.data.node.entry.properties['qshare:sharedId'] = null;\n                this.data.node.entry.properties['qshare:expiryDate'] = null;\n                this.dialogRef.close(false);\n            },\n            () => {\n                this.isDisabled = false;\n                this.isFileShared = false;\n            });\n    }\n\n    private updateForm() {\n        const { entry } = this.data.node;\n        const expiryDate = entry.properties['qshare:expiryDate'];\n\n        this.form.setValue({\n            'sharedUrl': `${this.baseShareUrl}${this.sharedId}`,\n            'time': expiryDate ? expiryDate : null\n        });\n    }\n\n    private updateNode(updates): Observable<Node> {\n        return this.nodesApiService.updateNode(\n            this.data.node.entry.id,\n            {\n                properties: {\n                    'qshare:expiryDate': updates.time ? updates.time.utc().format() : null\n                }\n            }\n        );\n    }\n\n    private updateEntryExpiryDate(updates) {\n        const { properties } = this.data.node.entry;\n\n        properties['qshare:expiryDate'] = updates.time\n            ? updates.time.local()\n            : null;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, Input, HostListener, OnChanges, NgZone } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { NodeEntry } from '@alfresco/js-api';\n\nimport { ShareDialogComponent } from './content-node-share.dialog';\n\n@Directive({\n    selector: '[adf-share]',\n    exportAs: 'adfShare'\n})\nexport class NodeSharedDirective implements OnChanges {\n\n    isFile: boolean = false;\n    isShared: boolean = false;\n\n    /** Node to share. */\n    // tslint:disable-next-line:no-input-rename\n    @Input('adf-share')\n    node: NodeEntry;\n\n    /** Prefix to add to the generated link. */\n    @Input()\n    baseShareUrl: string;\n\n    @HostListener('click')\n    onClick() {\n        if (this.node) {\n            this.shareNode(this.node);\n        }\n    }\n\n    constructor(private dialog: MatDialog, private zone: NgZone) {}\n\n    shareNode(nodeEntry: NodeEntry) {\n        if (nodeEntry && nodeEntry.entry && nodeEntry.entry.isFile) {\n            this.dialog.open(ShareDialogComponent, {\n                width: '600px',\n                panelClass: 'adf-share-link-dialog',\n                data: {\n                    node: nodeEntry,\n                    baseShareUrl: this.baseShareUrl\n                }\n            });\n        }\n    }\n\n    ngOnChanges() {\n        this.zone.onStable.subscribe(() => {\n            if (this.node && this.node.entry) {\n                this.isFile = this.node.entry.isFile;\n                this.isShared = this.node.entry.properties['qshare:sharedId'];\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from '../material.module';\nimport { ShareDialogComponent } from './content-node-share.dialog';\nimport { NodeSharedDirective } from './content-node-share.directive';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    exports: [\n        ShareDialogComponent,\n        NodeSharedDirective\n    ],\n    entryComponents: [\n        ShareDialogComponent\n    ]\n})\nexport class ContentNodeShareModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentNodeShareModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodeEntry } from '@alfresco/js-api';\n\nexport class TreeBaseNode {\n\n    name: string;\n    nodeId: string;\n    level: number;\n    expandable = true;\n    node: NodeEntry;\n\n    constructor(nodeEntry: NodeEntry, level?: number, expandable?: boolean) {\n        this.name = nodeEntry.entry.name;\n        this.nodeId = nodeEntry.entry.id;\n        this.level = level ? level : 0;\n        this.expandable = expandable ? expandable : true;\n        this.node = nodeEntry ? new NodeEntry(nodeEntry) : undefined;\n\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NodesApiService } from '@alfresco/adf-core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { NodePaging, NodeEntry } from '@alfresco/js-api';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TreeViewService {\n\n    constructor(private nodeApi: NodesApiService) {\n    }\n\n    getTreeNodes(nodeId): Observable<TreeBaseNode[]> {\n        return this.nodeApi.getNodeChildren(nodeId)\n            .pipe(\n                map((nodePage: NodePaging) => {\n                    return nodePage.list.entries.filter((node) => node.entry.isFolder ? node : null);\n                }),\n                map((nodes: NodeEntry[]) => nodes.map((node) => new TreeBaseNode(node)))\n            );\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { TreeViewService } from '../services/tree-view.service';\n\n@Injectable()\nexport class TreeViewDataSource {\n\n    treeNodes: TreeBaseNode[];\n    dataChange = new BehaviorSubject<TreeBaseNode[]>([]);\n    childrenSubscription = null;\n    changeSubscription = null;\n\n    get data(): TreeBaseNode[] {\n        return this.treeNodes;\n    }\n\n    set data(value: TreeBaseNode[]) {\n        this.treeControl.dataNodes = value;\n        this.dataChange.next(value);\n    }\n\n    constructor(private treeControl: FlatTreeControl<TreeBaseNode>,\n                private treeViewService: TreeViewService) {\n        this.dataChange.subscribe((treeNodes) => this.treeNodes = treeNodes);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<TreeBaseNode[]> {\n        this.changeSubscription = this.treeControl.expansionModel.onChange.subscribe((change) => {\n            if ((change as SelectionChange<TreeBaseNode>).added &&\n                (change as SelectionChange<TreeBaseNode>).added.length > 0) {\n                this.expandTreeNodes(change as SelectionChange<TreeBaseNode>);\n            } else if ((change as SelectionChange<TreeBaseNode>).removed) {\n                this.reduceTreeNodes(change as SelectionChange<TreeBaseNode>);\n            }\n        });\n        return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        if (this.childrenSubscription) {\n            this.childrenSubscription.unsubscribe();\n        }\n        if (this.changeSubscription) {\n            this.changeSubscription.unsubscribe();\n        }\n    }\n\n    private expandTreeNodes(change: SelectionChange<TreeBaseNode>) {\n        change.added.forEach((node) => this.expandNode(node));\n    }\n\n    private reduceTreeNodes(change: SelectionChange<TreeBaseNode>) {\n        change.removed.slice().reverse().forEach((node) => this.toggleNode(node));\n    }\n\n    private expandNode(node: TreeBaseNode) {\n        this.childrenSubscription = this.treeViewService.getTreeNodes(node.nodeId)\n            .subscribe((children) => {\n                const index = this.data.indexOf(node);\n                if (!children || index < 0) {\n                    node.expandable = false;\n                    return;\n                }\n                const nodes = children.map((actualNode) => {\n                    actualNode.level = node.level + 1;\n                    return actualNode;\n                });\n                this.data.splice(index + 1, 0, ...nodes);\n                this.dataChange.next(this.data);\n            });\n    }\n\n    toggleNode(node: TreeBaseNode) {\n        const index = this.data.indexOf(node);\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n            && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n        this.dataChange.next(this.data);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { TreeBaseNode } from '../models/tree-view.model';\nimport { TreeViewDataSource } from '../data/tree-view-datasource';\nimport { TreeViewService } from '../services/tree-view.service';\nimport { NodeEntry } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-tree-view-list',\n    templateUrl: 'tree-view.component.html',\n    styleUrls: ['tree-view.component.scss']\n})\n\nexport class TreeViewComponent implements OnChanges {\n\n    /** Identifier of the node to display. */\n    @Input()\n    nodeId: string;\n\n    /** Emitted when a node in the tree view is clicked. */\n    @Output()\n    nodeClicked: EventEmitter<NodeEntry> = new EventEmitter();\n\n    /** Emitted when an invalid node id is given. */\n    @Output()\n    error: EventEmitter<any> = new EventEmitter();\n\n    treeControl: FlatTreeControl<TreeBaseNode>;\n    dataSource: TreeViewDataSource;\n\n    constructor(private treeViewService: TreeViewService) {\n        this.treeControl = new FlatTreeControl<TreeBaseNode>(this.getLevel, this.isExpandable);\n        this.dataSource = new TreeViewDataSource(this.treeControl, this.treeViewService);\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes['nodeId'] && changes['nodeId'].currentValue &&\n            changes['nodeId'].currentValue !== changes['nodeId'].previousValue) {\n            this.loadTreeNode();\n        } else {\n            this.dataSource.data = [];\n        }\n    }\n\n    onNodeClicked(node: NodeEntry) {\n        this.nodeClicked.emit(node);\n    }\n\n    getLevel = (node: TreeBaseNode) => node.level;\n\n    isExpandable = (node: TreeBaseNode) => node.expandable;\n\n    hasChild = (level: number, nodeData: TreeBaseNode) => nodeData.expandable;\n\n    private loadTreeNode() {\n        this.treeViewService.getTreeNodes(this.nodeId)\n            .subscribe(\n                (treeNode: TreeBaseNode[]) => {\n                    this.dataSource.data = treeNode;\n                },\n                (error) => this.error.emit(error)\n            );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MaterialModule } from '../material.module';\nimport { TreeViewComponent } from './components/tree-view.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        TreeViewComponent\n    ],\n    exports: [\n        TreeViewComponent\n    ]\n})\nexport class TreeViewModule {\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule, TRANSLATION_PROVIDER } from '@alfresco/adf-core';\n\nimport { MaterialModule } from './material.module';\n\nimport { SocialModule } from './social/social.module';\nimport { TagModule } from './tag/tag.module';\nimport { WebScriptModule } from './webscript/webscript.module';\nimport { DocumentListModule } from './document-list/document-list.module';\nimport { UploadModule } from './upload/upload.module';\nimport { SearchModule } from './search/search.module';\nimport { SitesDropdownModule } from './site-dropdown/sites-dropdown.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { VersionManagerModule } from './version-manager/version-manager.module';\nimport { ContentNodeSelectorModule } from './content-node-selector/content-node-selector.module';\nimport { ContentNodeShareModule } from './content-node-share/content-node-share.module';\nimport { ContentDirectiveModule } from './directives/content-directive.module';\nimport { DialogModule } from './dialogs/dialog.module';\nimport { FolderDirectiveModule } from './folder-directive/folder-directive.module';\nimport { ContentMetadataModule } from './content-metadata/content-metadata.module';\nimport { PermissionManagerModule } from './permission-manager/permission-manager.module';\nimport { TreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ]\n})\nexport class ContentModuleLazy {}\n\n@NgModule({\n    imports: [\n        CoreModule.forChild(),\n        SocialModule,\n        TagModule,\n        CommonModule,\n        WebScriptModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DialogModule,\n        SearchModule,\n        DocumentListModule,\n        UploadModule,\n        MaterialModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ],\n    providers: [\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'adf-content-services',\n                source: 'assets/adf-content-services'\n            }\n        }\n    ],\n    exports: [\n        SocialModule,\n        TagModule,\n        WebScriptModule,\n        DocumentListModule,\n        UploadModule,\n        SearchModule,\n        SitesDropdownModule,\n        BreadcrumbModule,\n        ContentNodeSelectorModule,\n        ContentNodeShareModule,\n        ContentMetadataModule,\n        DialogModule,\n        FolderDirectiveModule,\n        ContentDirectiveModule,\n        PermissionManagerModule,\n        VersionManagerModule,\n        TreeViewModule\n    ]\n})\nexport class ContentModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ContentModule,\n            providers: [\n                {\n                    provide: TRANSLATION_PROVIDER,\n                    multi: true,\n                    useValue: {\n                        name: 'adf-content-services',\n                        source: 'assets/adf-content-services'\n                    }\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ContentModuleLazy\n        };\n    }\n}\n"]}