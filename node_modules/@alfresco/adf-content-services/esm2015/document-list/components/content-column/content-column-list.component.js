/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector  */
import { LogService } from '@alfresco/adf-core';
import { Component } from '@angular/core';
import { DocumentListComponent } from './../document-list.component';
export class ContentColumnListComponent {
    /**
     * @param {?} documentList
     * @param {?} logService
     */
    constructor(documentList, logService) {
        this.documentList = documentList;
        this.logService = logService;
        this.logService.log('ContentColumnListComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnListComponent instead.');
    }
    /**
     * Registers column model within the parent document list component.
     * @param {?} column Column definition model to register.
     * @return {?}
     */
    registerColumn(column) {
        if (this.documentList && column) {
            /** @type {?} */
            const columns = this.documentList.data.getColumns();
            columns.push(column);
            return true;
        }
        return false;
    }
}
ContentColumnListComponent.decorators = [
    { type: Component, args: [{
                selector: 'content-columns',
                template: ''
            }] }
];
/** @nocollapse */
ContentColumnListComponent.ctorParameters = () => [
    { type: DocumentListComponent },
    { type: LogService }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    ContentColumnListComponent.prototype.documentList;
    /**
     * @type {?}
     * @private
     */
    ContentColumnListComponent.prototype.logService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1jb2x1bW4tbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJkb2N1bWVudC1saXN0L2NvbXBvbmVudHMvY29udGVudC1jb2x1bW4vY29udGVudC1jb2x1bW4tbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0JBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBTXJFLE1BQU0sT0FBTywwQkFBMEI7Ozs7O0lBRW5DLFlBQW9CLFlBQW1DLEVBQVUsVUFBc0I7UUFBbkUsaUJBQVksR0FBWixZQUFZLENBQXVCO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUNuRixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQywwSUFBMEksQ0FBQyxDQUFDO0lBQ3BLLENBQUM7Ozs7OztJQU1ELGNBQWMsQ0FBQyxNQUFrQjtRQUM3QixJQUFJLElBQUksQ0FBQyxZQUFZLElBQUksTUFBTSxFQUFFOztrQkFDdkIsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNuRCxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JCLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDOzs7WUFyQkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLFFBQVEsRUFBRSxFQUFFO2FBQ2Y7Ozs7WUFMUSxxQkFBcUI7WUFIckIsVUFBVTs7Ozs7OztJQVdILGtEQUEyQzs7Ozs7SUFBRSxnREFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4gLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yICAqL1xuXG5pbXBvcnQgeyBEYXRhQ29sdW1uIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IExvZ1NlcnZpY2UgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IERvY3VtZW50TGlzdENvbXBvbmVudCB9IGZyb20gJy4vLi4vZG9jdW1lbnQtbGlzdC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2NvbnRlbnQtY29sdW1ucycsXG4gICAgdGVtcGxhdGU6ICcnXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnRDb2x1bW5MaXN0Q29tcG9uZW50IHtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZG9jdW1lbnRMaXN0OiBEb2N1bWVudExpc3RDb21wb25lbnQsIHByaXZhdGUgbG9nU2VydmljZTogTG9nU2VydmljZSApIHtcbiAgICAgICAgdGhpcy5sb2dTZXJ2aWNlLmxvZygnQ29udGVudENvbHVtbkxpc3RDb21wb25lbnQgaXMgZGVwcmVjYXRlZCBzdGFydGluZyB3aXRoIDEuNy4wIGFuZCBtYXkgYmUgcmVtb3ZlZCBpbiBmdXR1cmUgdmVyc2lvbnMuIFVzZSBEYXRhQ29sdW1uTGlzdENvbXBvbmVudCBpbnN0ZWFkLicpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlZ2lzdGVycyBjb2x1bW4gbW9kZWwgd2l0aGluIHRoZSBwYXJlbnQgZG9jdW1lbnQgbGlzdCBjb21wb25lbnQuXG4gICAgICogQHBhcmFtIGNvbHVtbiBDb2x1bW4gZGVmaW5pdGlvbiBtb2RlbCB0byByZWdpc3Rlci5cbiAgICAgKi9cbiAgICByZWdpc3RlckNvbHVtbihjb2x1bW46IERhdGFDb2x1bW4pOiBib29sZWFuIHtcbiAgICAgICAgaWYgKHRoaXMuZG9jdW1lbnRMaXN0ICYmIGNvbHVtbikge1xuICAgICAgICAgICAgY29uc3QgY29sdW1ucyA9IHRoaXMuZG9jdW1lbnRMaXN0LmRhdGEuZ2V0Q29sdW1ucygpO1xuICAgICAgICAgICAgY29sdW1ucy5wdXNoKGNvbHVtbik7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuIl19