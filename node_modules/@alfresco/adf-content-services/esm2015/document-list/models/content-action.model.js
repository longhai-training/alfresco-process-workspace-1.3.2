/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class ContentActionModel {
    /**
     * @param {?=} obj
     */
    constructor(obj) {
        this.disableWithNoPermission = false;
        this.disabled = false;
        this.visible = true;
        if (obj) {
            this.icon = obj.icon;
            this.title = obj.title;
            this.handler = obj.handler;
            this.execute = obj.execute;
            this.target = obj.target;
            this.permission = obj.permission;
            this.disableWithNoPermission = obj.disableWithNoPermission;
            if (obj.hasOwnProperty('disabled')) {
                this.disabled = obj.disabled;
            }
            if (obj.hasOwnProperty('visible')) {
                this.visible = obj.visible;
            }
        }
    }
}
if (false) {
    /** @type {?} */
    ContentActionModel.prototype.icon;
    /** @type {?} */
    ContentActionModel.prototype.title;
    /** @type {?} */
    ContentActionModel.prototype.handler;
    /** @type {?} */
    ContentActionModel.prototype.execute;
    /** @type {?} */
    ContentActionModel.prototype.target;
    /** @type {?} */
    ContentActionModel.prototype.permission;
    /** @type {?} */
    ContentActionModel.prototype.disableWithNoPermission;
    /** @type {?} */
    ContentActionModel.prototype.disabled;
    /** @type {?} */
    ContentActionModel.prototype.visible;
}
/** @enum {string} */
const ContentActionTarget = {
    Document: 'document',
    Folder: 'folder',
    All: 'all',
};
export { ContentActionTarget };
export class DocumentActionModel extends ContentActionModel {
    /**
     * @param {?=} json
     */
    constructor(json) {
        super(json);
        this.target = 'document';
    }
}
export class FolderActionModel extends ContentActionModel {
    /**
     * @param {?=} json
     */
    constructor(json) {
        super(json);
        this.target = 'folder';
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1hY3Rpb24ubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJkb2N1bWVudC1saXN0L21vZGVscy9jb250ZW50LWFjdGlvbi5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxNQUFNLE9BQU8sa0JBQWtCOzs7O0lBVzNCLFlBQVksR0FBUztRQUpyQiw0QkFBdUIsR0FBWSxLQUFLLENBQUM7UUFDekMsYUFBUSxHQUF1QixLQUFLLENBQUM7UUFDckMsWUFBTyxHQUF1QixJQUFJLENBQUM7UUFHL0IsSUFBSSxHQUFHLEVBQUU7WUFDTCxJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQztZQUMzQixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7WUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQztZQUNqQyxJQUFJLENBQUMsdUJBQXVCLEdBQUcsR0FBRyxDQUFDLHVCQUF1QixDQUFDO1lBRTNELElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUMsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFDO2FBQ2hDO1lBRUQsSUFBSSxHQUFHLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUMvQixJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUM7YUFDOUI7U0FDSjtJQUNMLENBQUM7Q0FDSjs7O0lBN0JHLGtDQUFhOztJQUNiLG1DQUFjOztJQUNkLHFDQUE4Qjs7SUFDOUIscUNBQWtCOztJQUNsQixvQ0FBZTs7SUFDZix3Q0FBbUI7O0lBQ25CLHFEQUF5Qzs7SUFDekMsc0NBQXFDOztJQUNyQyxxQ0FBbUM7Ozs7SUF3Qm5DLFVBQVcsVUFBVTtJQUNyQixRQUFTLFFBQVE7SUFDakIsS0FBTSxLQUFLOzs7QUFLZixNQUFNLE9BQU8sbUJBQW9CLFNBQVEsa0JBQWtCOzs7O0lBQ3ZELFlBQVksSUFBVTtRQUNsQixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsTUFBTSxHQUFHLFVBQVUsQ0FBQztJQUM3QixDQUFDO0NBQ0o7QUFFRCxNQUFNLE9BQU8saUJBQWtCLFNBQVMsa0JBQWtCOzs7O0lBQ3RELFlBQVksSUFBVTtRQUNsQixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDWixJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQztJQUMzQixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5leHBvcnQgY2xhc3MgQ29udGVudEFjdGlvbk1vZGVsIHtcbiAgICBpY29uOiBzdHJpbmc7XG4gICAgdGl0bGU6IHN0cmluZztcbiAgICBoYW5kbGVyOiBDb250ZW50QWN0aW9uSGFuZGxlcjtcbiAgICBleGVjdXRlOiBGdW5jdGlvbjtcbiAgICB0YXJnZXQ6IHN0cmluZztcbiAgICBwZXJtaXNzaW9uOiBzdHJpbmc7XG4gICAgZGlzYWJsZVdpdGhOb1Blcm1pc3Npb246IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBkaXNhYmxlZDogYm9vbGVhbiB8IEZ1bmN0aW9uID0gZmFsc2U7XG4gICAgdmlzaWJsZTogYm9vbGVhbiB8IEZ1bmN0aW9uID0gdHJ1ZTtcblxuICAgIGNvbnN0cnVjdG9yKG9iaj86IGFueSkge1xuICAgICAgICBpZiAob2JqKSB7XG4gICAgICAgICAgICB0aGlzLmljb24gPSBvYmouaWNvbjtcbiAgICAgICAgICAgIHRoaXMudGl0bGUgPSBvYmoudGl0bGU7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZXIgPSBvYmouaGFuZGxlcjtcbiAgICAgICAgICAgIHRoaXMuZXhlY3V0ZSA9IG9iai5leGVjdXRlO1xuICAgICAgICAgICAgdGhpcy50YXJnZXQgPSBvYmoudGFyZ2V0O1xuICAgICAgICAgICAgdGhpcy5wZXJtaXNzaW9uID0gb2JqLnBlcm1pc3Npb247XG4gICAgICAgICAgICB0aGlzLmRpc2FibGVXaXRoTm9QZXJtaXNzaW9uID0gb2JqLmRpc2FibGVXaXRoTm9QZXJtaXNzaW9uO1xuXG4gICAgICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KCdkaXNhYmxlZCcpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlZCA9IG9iai5kaXNhYmxlZDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eSgndmlzaWJsZScpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52aXNpYmxlID0gb2JqLnZpc2libGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCBlbnVtIENvbnRlbnRBY3Rpb25UYXJnZXQge1xuICAgIERvY3VtZW50ID0gJ2RvY3VtZW50JyxcbiAgICBGb2xkZXIgPSAnZm9sZGVyJyxcbiAgICBBbGwgPSAnYWxsJ1xufVxuXG5leHBvcnQgdHlwZSBDb250ZW50QWN0aW9uSGFuZGxlciA9IChvYmo6IGFueSwgdGFyZ2V0PzogYW55LCBwZXJtaXNzaW9uPzogc3RyaW5nKSA9PiBhbnk7XG5cbmV4cG9ydCBjbGFzcyBEb2N1bWVudEFjdGlvbk1vZGVsIGV4dGVuZHMgQ29udGVudEFjdGlvbk1vZGVsIHtcbiAgICBjb25zdHJ1Y3Rvcihqc29uPzogYW55KSAge1xuICAgICAgICBzdXBlcihqc29uKTtcbiAgICAgICAgdGhpcy50YXJnZXQgPSAnZG9jdW1lbnQnO1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEZvbGRlckFjdGlvbk1vZGVsIGV4dGVuZHMgIENvbnRlbnRBY3Rpb25Nb2RlbCB7XG4gICAgY29uc3RydWN0b3IoanNvbj86IGFueSkgIHtcbiAgICAgICAgc3VwZXIoanNvbik7XG4gICAgICAgIHRoaXMudGFyZ2V0ID0gJ2ZvbGRlcic7XG4gICAgfVxufVxuIl19