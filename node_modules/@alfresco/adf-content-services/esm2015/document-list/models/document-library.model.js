/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// note: contains only limited subset of available fields
export class NodePaging {
}
if (false) {
    /** @type {?} */
    NodePaging.prototype.list;
}
export class NodePagingList {
}
if (false) {
    /** @type {?} */
    NodePagingList.prototype.pagination;
    /** @type {?} */
    NodePagingList.prototype.entries;
}
export class NodeMinimalEntry {
}
if (false) {
    /** @type {?} */
    NodeMinimalEntry.prototype.entry;
}
export class Pagination {
}
if (false) {
    /** @type {?} */
    Pagination.prototype.count;
    /** @type {?} */
    Pagination.prototype.hasMoreItems;
    /** @type {?} */
    Pagination.prototype.totalItems;
    /** @type {?} */
    Pagination.prototype.skipCount;
    /** @type {?} */
    Pagination.prototype.maxItems;
}
export class NodeMinimal {
    constructor() {
        this.properties = {};
    }
}
if (false) {
    /** @type {?} */
    NodeMinimal.prototype.id;
    /** @type {?} */
    NodeMinimal.prototype.parentId;
    /** @type {?} */
    NodeMinimal.prototype.name;
    /** @type {?} */
    NodeMinimal.prototype.nodeType;
    /** @type {?} */
    NodeMinimal.prototype.isFolder;
    /** @type {?} */
    NodeMinimal.prototype.isFile;
    /** @type {?} */
    NodeMinimal.prototype.modifiedAt;
    /** @type {?} */
    NodeMinimal.prototype.modifiedByUser;
    /** @type {?} */
    NodeMinimal.prototype.createdAt;
    /** @type {?} */
    NodeMinimal.prototype.createdByUser;
    /** @type {?} */
    NodeMinimal.prototype.content;
    /** @type {?} */
    NodeMinimal.prototype.path;
    /** @type {?} */
    NodeMinimal.prototype.properties;
    /** @type {?} */
    NodeMinimal.prototype.aspectNames;
}
export class UserInfo {
}
if (false) {
    /** @type {?} */
    UserInfo.prototype.displayName;
    /** @type {?} */
    UserInfo.prototype.id;
}
export class ContentInfo {
}
if (false) {
    /** @type {?} */
    ContentInfo.prototype.mimeType;
    /** @type {?} */
    ContentInfo.prototype.mimeTypeName;
    /** @type {?} */
    ContentInfo.prototype.sizeInBytes;
    /** @type {?} */
    ContentInfo.prototype.encoding;
}
export class PathInfoEntity {
}
if (false) {
    /** @type {?} */
    PathInfoEntity.prototype.elements;
    /** @type {?} */
    PathInfoEntity.prototype.isComplete;
    /** @type {?} */
    PathInfoEntity.prototype.name;
}
export class PathElementEntity {
}
if (false) {
    /** @type {?} */
    PathElementEntity.prototype.id;
    /** @type {?} */
    PathElementEntity.prototype.name;
}
/**
 * @record
 */
export function NodeProperties() { }
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtbGlicmFyeS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImRvY3VtZW50LWxpc3QvbW9kZWxzL2RvY3VtZW50LWxpYnJhcnkubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBcUJBLE1BQU0sT0FBTyxVQUFVO0NBRXRCOzs7SUFERywwQkFBcUI7O0FBR3pCLE1BQU0sT0FBTyxjQUFjO0NBRzFCOzs7SUFGRyxvQ0FBdUI7O0lBQ3ZCLGlDQUE0Qjs7QUFHaEMsTUFBTSxPQUFPLGdCQUFnQjtDQUU1Qjs7O0lBREcsaUNBQW1COztBQUd2QixNQUFNLE9BQU8sVUFBVTtDQU10Qjs7O0lBTEcsMkJBQWM7O0lBQ2Qsa0NBQXNCOztJQUN0QixnQ0FBbUI7O0lBQ25CLCtCQUFrQjs7SUFDbEIsOEJBQWlCOztBQUdyQixNQUFNLE9BQU8sV0FBVztJQUF4QjtRQWFJLGVBQVUsR0FBbUIsRUFBRSxDQUFDO0lBRXBDLENBQUM7Q0FBQTs7O0lBZEcseUJBQVc7O0lBQ1gsK0JBQWlCOztJQUNqQiwyQkFBYTs7SUFDYiwrQkFBaUI7O0lBQ2pCLCtCQUFrQjs7SUFDbEIsNkJBQWdCOztJQUNoQixpQ0FBaUI7O0lBQ2pCLHFDQUF5Qjs7SUFDekIsZ0NBQWdCOztJQUNoQixvQ0FBd0I7O0lBQ3hCLDhCQUFxQjs7SUFDckIsMkJBQXFCOztJQUNyQixpQ0FBZ0M7O0lBQ2hDLGtDQUFzQjs7QUFHMUIsTUFBTSxPQUFPLFFBQVE7Q0FHcEI7OztJQUZHLCtCQUFvQjs7SUFDcEIsc0JBQVc7O0FBR2YsTUFBTSxPQUFPLFdBQVc7Q0FLdkI7OztJQUpHLCtCQUFpQjs7SUFDakIsbUNBQXFCOztJQUNyQixrQ0FBb0I7O0lBQ3BCLCtCQUFpQjs7QUFHckIsTUFBTSxPQUFPLGNBQWM7Q0FJMUI7OztJQUhHLGtDQUE4Qjs7SUFDOUIsb0NBQW9COztJQUNwQiw4QkFBYTs7QUFHakIsTUFBTSxPQUFPLGlCQUFpQjtDQUc3Qjs7O0lBRkcsK0JBQVc7O0lBQ1gsaUNBQWE7Ozs7O0FBR2pCLG9DQUVDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLy8gbm90ZTogY29udGFpbnMgb25seSBsaW1pdGVkIHN1YnNldCBvZiBhdmFpbGFibGUgZmllbGRzXG5cbmltcG9ydCB7IE5vZGVFbnRyeSwgTm9kZSB9IGZyb20gJ0BhbGZyZXNjby9qcy1hcGknO1xuXG5leHBvcnQgY2xhc3MgTm9kZVBhZ2luZyB7XG4gICAgbGlzdDogTm9kZVBhZ2luZ0xpc3Q7XG59XG5cbmV4cG9ydCBjbGFzcyBOb2RlUGFnaW5nTGlzdCB7XG4gICAgcGFnaW5hdGlvbjogUGFnaW5hdGlvbjtcbiAgICBlbnRyaWVzOiBOb2RlTWluaW1hbEVudHJ5W107XG59XG5cbmV4cG9ydCBjbGFzcyBOb2RlTWluaW1hbEVudHJ5IGltcGxlbWVudHMgTm9kZUVudHJ5IHtcbiAgICBlbnRyeTogTm9kZU1pbmltYWw7XG59XG5cbmV4cG9ydCBjbGFzcyBQYWdpbmF0aW9uIHtcbiAgICBjb3VudDogbnVtYmVyO1xuICAgIGhhc01vcmVJdGVtczogYm9vbGVhbjtcbiAgICB0b3RhbEl0ZW1zOiBudW1iZXI7XG4gICAgc2tpcENvdW50OiBudW1iZXI7XG4gICAgbWF4SXRlbXM6IG51bWJlcjtcbn1cblxuZXhwb3J0IGNsYXNzIE5vZGVNaW5pbWFsIGltcGxlbWVudHMgTm9kZSB7XG4gICAgaWQ6IHN0cmluZztcbiAgICBwYXJlbnRJZDogc3RyaW5nO1xuICAgIG5hbWU6IHN0cmluZztcbiAgICBub2RlVHlwZTogc3RyaW5nO1xuICAgIGlzRm9sZGVyOiBib29sZWFuO1xuICAgIGlzRmlsZTogYm9vbGVhbjtcbiAgICBtb2RpZmllZEF0OiBEYXRlO1xuICAgIG1vZGlmaWVkQnlVc2VyOiBVc2VySW5mbztcbiAgICBjcmVhdGVkQXQ6IERhdGU7XG4gICAgY3JlYXRlZEJ5VXNlcjogVXNlckluZm87XG4gICAgY29udGVudDogQ29udGVudEluZm87XG4gICAgcGF0aDogUGF0aEluZm9FbnRpdHk7XG4gICAgcHJvcGVydGllczogTm9kZVByb3BlcnRpZXMgPSB7fTtcbiAgICBhc3BlY3ROYW1lczogc3RyaW5nW107XG59XG5cbmV4cG9ydCBjbGFzcyBVc2VySW5mbyB7XG4gICAgZGlzcGxheU5hbWU6IHN0cmluZztcbiAgICBpZDogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgQ29udGVudEluZm8ge1xuICAgIG1pbWVUeXBlOiBzdHJpbmc7XG4gICAgbWltZVR5cGVOYW1lOiBzdHJpbmc7XG4gICAgc2l6ZUluQnl0ZXM6IG51bWJlcjtcbiAgICBlbmNvZGluZzogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgUGF0aEluZm9FbnRpdHkge1xuICAgIGVsZW1lbnRzOiBQYXRoRWxlbWVudEVudGl0eVtdO1xuICAgIGlzQ29tcGxldGU6IGJvb2xlYW47XG4gICAgbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgUGF0aEVsZW1lbnRFbnRpdHkge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE5vZGVQcm9wZXJ0aWVzIHtcbiAgICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG4iXX0=