/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @type {?} */
const I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';
/**
 * @param {?} __0
 * @return {?}
 */
export function forbidSpecialCharacters({ value }) {
    /** @type {?} */
    const specialCharacters = /([\*\"\<\>\\\/\?\:\|])/;
    /** @type {?} */
    const isValid = !specialCharacters.test(value);
    return (isValid) ? null : {
        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`
    };
}
/**
 * @param {?} __0
 * @return {?}
 */
export function forbidEndingDot({ value }) {
    /** @type {?} */
    const isValid = ((value || '').trim().split('').pop() !== '.');
    return isValid ? null : {
        message: `${I18N_ERRORS_PATH}.ENDING_DOT`
    };
}
/**
 * @param {?} __0
 * @return {?}
 */
export function forbidOnlySpaces({ value }) {
    /** @type {?} */
    const isValid = !!((value || '')).trim();
    return isValid ? null : {
        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9sZGVyLW5hbWUudmFsaWRhdG9ycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImRpYWxvZ3MvZm9sZGVyLW5hbWUudmFsaWRhdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFtQk0sZ0JBQWdCLEdBQUcsdUNBQXVDOzs7OztBQUVoRSxNQUFNLFVBQVUsdUJBQXVCLENBQUMsRUFBRSxLQUFLLEVBQWU7O1VBQ3BELGlCQUFpQixHQUFXLHdCQUF3Qjs7VUFDcEQsT0FBTyxHQUFZLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUV2RCxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDdEIsT0FBTyxFQUFFLEdBQUcsZ0JBQWdCLHFCQUFxQjtLQUNwRCxDQUFDO0FBQ04sQ0FBQzs7Ozs7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLEVBQUUsS0FBSyxFQUFlOztVQUM1QyxPQUFPLEdBQVksQ0FBQyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssR0FBRyxDQUFDO0lBRXZFLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxHQUFHLGdCQUFnQixhQUFhO0tBQzVDLENBQUM7QUFDTixDQUFDOzs7OztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FBQyxFQUFFLEtBQUssRUFBZTs7VUFDN0MsT0FBTyxHQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFO0lBRWpELE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxHQUFHLGdCQUFnQixjQUFjO0tBQzdDLENBQUM7QUFDTixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmNvbnN0IEkxOE5fRVJST1JTX1BBVEggPSAnQ09SRS5GT0xERVJfRElBTE9HLkZPTERFUl9OQU1FLkVSUk9SUyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JiaWRTcGVjaWFsQ2hhcmFjdGVycyh7IHZhbHVlIH06IEZvcm1Db250cm9sKSB7XG4gICAgY29uc3Qgc3BlY2lhbENoYXJhY3RlcnM6IFJlZ0V4cCA9IC8oW1xcKlxcXCJcXDxcXD5cXFxcXFwvXFw/XFw6XFx8XSkvO1xuICAgIGNvbnN0IGlzVmFsaWQ6IGJvb2xlYW4gPSAhc3BlY2lhbENoYXJhY3RlcnMudGVzdCh2YWx1ZSk7XG5cbiAgICByZXR1cm4gKGlzVmFsaWQpID8gbnVsbCA6IHtcbiAgICAgICAgbWVzc2FnZTogYCR7STE4Tl9FUlJPUlNfUEFUSH0uU1BFQ0lBTF9DSEFSQUNURVJTYFxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JiaWRFbmRpbmdEb3QoeyB2YWx1ZSB9OiBGb3JtQ29udHJvbCkge1xuICAgIGNvbnN0IGlzVmFsaWQ6IGJvb2xlYW4gPSAoKHZhbHVlIHx8ICcnKS50cmltKCkuc3BsaXQoJycpLnBvcCgpICE9PSAnLicpO1xuXG4gICAgcmV0dXJuIGlzVmFsaWQgPyBudWxsIDoge1xuICAgICAgICBtZXNzYWdlOiBgJHtJMThOX0VSUk9SU19QQVRIfS5FTkRJTkdfRE9UYFxuICAgIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3JiaWRPbmx5U3BhY2VzKHsgdmFsdWUgfTogRm9ybUNvbnRyb2wpIHtcbiAgICBjb25zdCBpc1ZhbGlkOiBib29sZWFuID0gISEoKHZhbHVlIHx8ICcnKSkudHJpbSgpO1xuXG4gICAgcmV0dXJuIGlzVmFsaWQgPyBudWxsIDoge1xuICAgICAgICBtZXNzYWdlOiBgJHtJMThOX0VSUk9SU19QQVRIfS5PTkxZX1NQQUNFU2BcbiAgICB9O1xufVxuIl19