/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, Inject, ViewEncapsulation } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material';
var ContentNodeSelectorComponent = /** @class */ (function () {
    function ContentNodeSelectorComponent(data) {
        this.data = data;
        this.buttonActionName = data.actionName ? "NODE_SELECTOR." + data.actionName.toUpperCase() : 'NODE_SELECTOR.CHOOSE';
    }
    /**
     * @return {?}
     */
    ContentNodeSelectorComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.data.select.complete();
    };
    /**
     * @param {?} nodeList
     * @return {?}
     */
    ContentNodeSelectorComponent.prototype.onSelect = /**
     * @param {?} nodeList
     * @return {?}
     */
    function (nodeList) {
        this.chosenNode = nodeList;
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorComponent.prototype.onClick = /**
     * @return {?}
     */
    function () {
        this.data.select.next(this.chosenNode);
        this.data.select.complete();
    };
    ContentNodeSelectorComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-content-node-selector',
                    template: "<header\n    mat-dialog-title\n    data-automation-id=\"content-node-selector-title\">{{data?.title}}\n</header>\n\n<mat-dialog-content>\n    <adf-content-node-selector-panel\n        [currentFolderId]=\"data?.currentFolderId\"\n        [dropdownHideMyFiles]=\"data?.dropdownHideMyFiles\"\n        [dropdownSiteList]=\"data?.dropdownSiteList\"\n        [rowFilter]=\"data?.rowFilter\"\n        [imageResolver]=\"data?.imageResolver\"\n        [isSelectionValid]=\"data?.isSelectionValid\"\n        [breadcrumbTransform]=\"data?.breadcrumbTransform\"\n        [excludeSiteContent]=\"data?.excludeSiteContent\"\n        [where]=\"data?.where\"\n        (select)=\"onSelect($event)\">\n    </adf-content-node-selector-panel>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button\n        mat-button\n        (click)=\"close()\"\n        data-automation-id=\"content-node-selector-actions-cancel\">{{ 'NODE_SELECTOR.CANCEL' | translate }}\n    </button>\n\n    <button mat-button\n        [disabled]=\"!chosenNode\"\n        class=\"adf-choose-action\"\n        (click)=\"onClick()\"\n        data-automation-id=\"content-node-selector-actions-choose\">{{ buttonActionName | translate }}\n    </button>\n</mat-dialog-actions>\n",
                    encapsulation: ViewEncapsulation.None,
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ContentNodeSelectorComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [MAT_DIALOG_DATA,] }] }
    ]; };
    return ContentNodeSelectorComponent;
}());
export { ContentNodeSelectorComponent };
if (false) {
    /** @type {?} */
    ContentNodeSelectorComponent.prototype.buttonActionName;
    /** @type {?} */
    ContentNodeSelectorComponent.prototype.chosenNode;
    /** @type {?} */
    ContentNodeSelectorComponent.prototype.data;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1ub2RlLXNlbGVjdG9yLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtY29udGVudC1zZXJ2aWNlcy8iLCJzb3VyY2VzIjpbImNvbnRlbnQtbm9kZS1zZWxlY3Rvci9jb250ZW50LW5vZGUtc2VsZWN0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUlwRDtJQVdJLHNDQUE0QyxJQUFzQztRQUF0QyxTQUFJLEdBQUosSUFBSSxDQUFrQztRQUM5RSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsbUJBQWlCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFJLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDO0lBQ3hILENBQUM7Ozs7SUFFRCw0Q0FBSzs7O0lBQUw7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNoQyxDQUFDOzs7OztJQUVELCtDQUFROzs7O0lBQVIsVUFBUyxRQUFnQjtRQUNyQixJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztJQUMvQixDQUFDOzs7O0lBRUQsOENBQU87OztJQUFQO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNoQyxDQUFDOztnQkExQkosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLHV1Q0FBcUQ7b0JBRXJELGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJOztpQkFDeEM7Ozs7Z0RBTWdCLE1BQU0sU0FBQyxlQUFlOztJQWdCdkMsbUNBQUM7Q0FBQSxBQTNCRCxJQTJCQztTQXJCWSw0QkFBNEI7OztJQUVyQyx3REFBeUI7O0lBQ3pCLGtEQUFtQjs7SUFFUCw0Q0FBc0UiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1BVF9ESUFMT0dfREFUQSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsJztcbmltcG9ydCB7IE5vZGUgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcbmltcG9ydCB7IENvbnRlbnROb2RlU2VsZWN0b3JDb21wb25lbnREYXRhIH0gZnJvbSAnLi9jb250ZW50LW5vZGUtc2VsZWN0b3IuY29tcG9uZW50LWRhdGEuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtY29udGVudC1ub2RlLXNlbGVjdG9yJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vY29udGVudC1ub2RlLXNlbGVjdG9yLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdHlsZVVybHM6IFsnLi9jb250ZW50LW5vZGUtc2VsZWN0b3IuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIENvbnRlbnROb2RlU2VsZWN0b3JDb21wb25lbnQge1xuXG4gICAgYnV0dG9uQWN0aW9uTmFtZTogc3RyaW5nO1xuICAgIGNob3Nlbk5vZGU6IE5vZGVbXTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoTUFUX0RJQUxPR19EQVRBKSBwdWJsaWMgZGF0YTogQ29udGVudE5vZGVTZWxlY3RvckNvbXBvbmVudERhdGEpIHtcbiAgICAgICAgdGhpcy5idXR0b25BY3Rpb25OYW1lID0gZGF0YS5hY3Rpb25OYW1lID8gYE5PREVfU0VMRUNUT1IuJHtkYXRhLmFjdGlvbk5hbWUudG9VcHBlckNhc2UoKX1gIDogJ05PREVfU0VMRUNUT1IuQ0hPT1NFJztcbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdC5jb21wbGV0ZSgpO1xuICAgIH1cblxuICAgIG9uU2VsZWN0KG5vZGVMaXN0OiBOb2RlW10pIHtcbiAgICAgICAgdGhpcy5jaG9zZW5Ob2RlID0gbm9kZUxpc3Q7XG4gICAgfVxuXG4gICAgb25DbGljaygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5kYXRhLnNlbGVjdC5uZXh0KHRoaXMuY2hvc2VuTm9kZSk7XG4gICAgICAgIHRoaXMuZGF0YS5zZWxlY3QuY29tcGxldGUoKTtcbiAgICB9XG59XG4iXX0=