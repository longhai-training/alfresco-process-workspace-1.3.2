/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewChild, ViewEncapsulation } from '@angular/core';
import { MatSelect } from '@angular/material';
import { BreadcrumbComponent } from './breadcrumb.component';
var DropdownBreadcrumbComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DropdownBreadcrumbComponent, _super);
    function DropdownBreadcrumbComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Calculate the current and previous nodes from the route array
     */
    /**
     * Calculate the current and previous nodes from the route array
     * @protected
     * @return {?}
     */
    DropdownBreadcrumbComponent.prototype.recalculateNodes = /**
     * Calculate the current and previous nodes from the route array
     * @protected
     * @return {?}
     */
    function () {
        /** @type {?} */
        var node = this.transform ? this.transform(this.folderNode) : this.folderNode;
        this.route = this.parseRoute(node);
        this.currentNode = this.route[this.route.length - 1];
        this.previousNodes = this.route.slice(0, this.route.length - 1).reverse();
    };
    /**
     * Opens the node picker menu
     */
    /**
     * Opens the node picker menu
     * @return {?}
     */
    DropdownBreadcrumbComponent.prototype.open = /**
     * Opens the node picker menu
     * @return {?}
     */
    function () {
        if (this.dropdown) {
            this.dropdown.open();
        }
    };
    /**
     * Return if route has more than one element (means: we are not in the root directory)
     */
    /**
     * Return if route has more than one element (means: we are not in the root directory)
     * @return {?}
     */
    DropdownBreadcrumbComponent.prototype.hasPreviousNodes = /**
     * Return if route has more than one element (means: we are not in the root directory)
     * @return {?}
     */
    function () {
        return this.previousNodes.length > 0;
    };
    DropdownBreadcrumbComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-dropdown-breadcrumb',
                    template: "<ng-container *ngIf=\"route.length > 0\" class=\"adf-dropdown-breadcrumb-container\">\n\n    <button\n        tabindex=\"0\"\n        class=\"adf-dropdown-breadcrumb-trigger\"\n        (click)=\"open()\"\n        data-automation-id=\"dropdown-breadcrumb-trigger\">\n        <mat-icon [class.adf-isRoot]=\"!hasPreviousNodes()\">folder</mat-icon>\n    </button>\n\n    <mat-icon class=\"adf-dropdown-breadcrumb-item-chevron\">chevron_right</mat-icon>\n\n    <div class=\"adf-dropdown-breadcrumb-path\">\n        <mat-select\n            #dropdown\n            *ngIf=\"hasPreviousNodes()\"\n            tabindex=\"0\"\n            data-automation-id=\"dropdown-breadcrumb-path\">\n\n            <mat-option\n                *ngFor=\"let node of previousNodes;\"\n                (click)=\"onRoutePathClick(node, $event)\"\n                class=\"adf-dropdown-breadcrumb-path-option\"\n                tabindex=\"0\"\n                data-automation-class=\"dropdown-breadcrumb-path-option\">\n                {{ node.name | translate }}\n            </mat-option>\n        </mat-select>\n    </div>\n\n    <span\n        class=\"adf-current-folder\"\n        [class.adf-isRoot]=\"!hasPreviousNodes()\"\n        data-automation-id=\"current-folder\">{{ currentNode.name }}\n    </span>\n</ng-container>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: {
                        'class': 'adf-dropdown-breadcrumb'
                    },
                    styles: [""]
                }] }
    ];
    DropdownBreadcrumbComponent.propDecorators = {
        dropdown: [{ type: ViewChild, args: ['dropdown',] }]
    };
    return DropdownBreadcrumbComponent;
}(BreadcrumbComponent));
export { DropdownBreadcrumbComponent };
if (false) {
    /** @type {?} */
    DropdownBreadcrumbComponent.prototype.dropdown;
    /** @type {?} */
    DropdownBreadcrumbComponent.prototype.currentNode;
    /** @type {?} */
    DropdownBreadcrumbComponent.prototype.previousNodes;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24tYnJlYWRjcnVtYi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJicmVhZGNydW1iL2Ryb3Bkb3duLWJyZWFkY3J1bWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsU0FBUyxFQUFhLFNBQVMsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFOUMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFN0Q7SUFTaUQsdURBQW1CO0lBVHBFOztJQTJDQSxDQUFDO0lBMUJHOztPQUVHOzs7Ozs7SUFDTyxzREFBZ0I7Ozs7O0lBQTFCOztZQUNVLElBQUksR0FBUyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVU7UUFFckYsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNyRCxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUM5RSxDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0gsMENBQUk7Ozs7SUFBSjtRQUNJLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7U0FDeEI7SUFDTCxDQUFDO0lBRUQ7O09BRUc7Ozs7O0lBQ0gsc0RBQWdCOzs7O0lBQWhCO1FBQ0ksT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDekMsQ0FBQzs7Z0JBMUNKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQyxpeUNBQW1EO29CQUVuRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsSUFBSSxFQUFFO3dCQUNGLE9BQU8sRUFBRSx5QkFBeUI7cUJBQ3JDOztpQkFDSjs7OzJCQUdJLFNBQVMsU0FBQyxVQUFVOztJQWdDekIsa0NBQUM7Q0FBQSxBQTNDRCxDQVNpRCxtQkFBbUIsR0FrQ25FO1NBbENZLDJCQUEyQjs7O0lBRXBDLCtDQUNvQjs7SUFFcEIsa0RBQStCOztJQUMvQixvREFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb21wb25lbnQsIE9uQ2hhbmdlcywgVmlld0NoaWxkLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWF0U2VsZWN0IH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuaW1wb3J0IHsgUGF0aEVsZW1lbnRFbnRpdHksIE5vZGUgfSBmcm9tICdAYWxmcmVzY28vanMtYXBpJztcbmltcG9ydCB7IEJyZWFkY3J1bWJDb21wb25lbnQgfSBmcm9tICcuL2JyZWFkY3J1bWIuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZHJvcGRvd24tYnJlYWRjcnVtYicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2Ryb3Bkb3duLWJyZWFkY3J1bWIuY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2Ryb3Bkb3duLWJyZWFkY3J1bWIuY29tcG9uZW50LnNjc3MnXSxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ2NsYXNzJzogJ2FkZi1kcm9wZG93bi1icmVhZGNydW1iJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgRHJvcGRvd25CcmVhZGNydW1iQ29tcG9uZW50IGV4dGVuZHMgQnJlYWRjcnVtYkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG5cbiAgICBAVmlld0NoaWxkKCdkcm9wZG93bicpXG4gICAgZHJvcGRvd246IE1hdFNlbGVjdDtcblxuICAgIGN1cnJlbnROb2RlOiBQYXRoRWxlbWVudEVudGl0eTtcbiAgICBwcmV2aW91c05vZGVzOiBQYXRoRWxlbWVudEVudGl0eVtdO1xuXG4gICAgLyoqXG4gICAgICogQ2FsY3VsYXRlIHRoZSBjdXJyZW50IGFuZCBwcmV2aW91cyBub2RlcyBmcm9tIHRoZSByb3V0ZSBhcnJheVxuICAgICAqL1xuICAgIHByb3RlY3RlZCByZWNhbGN1bGF0ZU5vZGVzKCk6IHZvaWQge1xuICAgICAgICBjb25zdCBub2RlOiBOb2RlID0gdGhpcy50cmFuc2Zvcm0gPyB0aGlzLnRyYW5zZm9ybSh0aGlzLmZvbGRlck5vZGUpIDogdGhpcy5mb2xkZXJOb2RlO1xuXG4gICAgICAgIHRoaXMucm91dGUgPSB0aGlzLnBhcnNlUm91dGUobm9kZSk7XG4gICAgICAgIHRoaXMuY3VycmVudE5vZGUgPSB0aGlzLnJvdXRlW3RoaXMucm91dGUubGVuZ3RoIC0gMV07XG4gICAgICAgIHRoaXMucHJldmlvdXNOb2RlcyA9IHRoaXMucm91dGUuc2xpY2UoMCwgdGhpcy5yb3V0ZS5sZW5ndGggLSAxKS5yZXZlcnNlKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogT3BlbnMgdGhlIG5vZGUgcGlja2VyIG1lbnVcbiAgICAgKi9cbiAgICBvcGVuKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5kcm9wZG93bikge1xuICAgICAgICAgICAgdGhpcy5kcm9wZG93bi5vcGVuKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm4gaWYgcm91dGUgaGFzIG1vcmUgdGhhbiBvbmUgZWxlbWVudCAobWVhbnM6IHdlIGFyZSBub3QgaW4gdGhlIHJvb3QgZGlyZWN0b3J5KVxuICAgICAqL1xuICAgIGhhc1ByZXZpb3VzTm9kZXMoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnByZXZpb3VzTm9kZXMubGVuZ3RoID4gMDtcbiAgICB9XG59XG4iXX0=