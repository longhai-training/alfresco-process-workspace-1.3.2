/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** @type {?} */
var emptyGroup = {
    properties: {}
};
/**
 * @param {?} object
 * @return {?}
 */
function convertObjectToArray(object) {
    return Object.keys(object).map((/**
     * @param {?} key
     * @return {?}
     */
    function (key) { return object[key]; }));
}
/**
 * @param {?} propertyGroups
 * @param {?} groupName
 * @return {?}
 */
export function getGroup(propertyGroups, groupName) {
    return propertyGroups[groupName];
}
/**
 * @param {?} propertyGroups
 * @param {?} groupName
 * @param {?} propertyName
 * @return {?}
 */
export function getProperty(propertyGroups, groupName, propertyName) {
    /** @type {?} */
    var groupDefinition = getGroup(propertyGroups, groupName) || emptyGroup;
    /** @type {?} */
    var propertyDefinitions;
    if (propertyName === '*') {
        propertyDefinitions = convertObjectToArray(groupDefinition.properties);
    }
    else {
        propertyDefinitions = groupDefinition.properties[propertyName];
    }
    return propertyDefinitions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcGVydHktZ3JvdXAtcmVhZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb250ZW50LXNlcnZpY2VzLyIsInNvdXJjZXMiOlsiY29udGVudC1tZXRhZGF0YS9zZXJ2aWNlcy9jb25maWcvcHJvcGVydHktZ3JvdXAtcmVhZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW1CTSxVQUFVLEdBQUc7SUFDZixVQUFVLEVBQUUsRUFBRTtDQUNqQjs7Ozs7QUFFRCxTQUFTLG9CQUFvQixDQUFDLE1BQVc7SUFDckMsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUc7Ozs7SUFBQyxVQUFDLEdBQUcsSUFBSyxPQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBWCxDQUFXLEVBQUMsQ0FBQztBQUN6RCxDQUFDOzs7Ozs7QUFFRCxNQUFNLFVBQVUsUUFBUSxDQUFDLGNBQXNDLEVBQUUsU0FBaUI7SUFDOUUsT0FBTyxjQUFjLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDckMsQ0FBQzs7Ozs7OztBQUVELE1BQU0sVUFBVSxXQUFXLENBQUMsY0FBc0MsRUFBRSxTQUFpQixFQUFFLFlBQW9COztRQUNqRyxlQUFlLEdBQUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxTQUFTLENBQUMsSUFBSSxVQUFVOztRQUNyRSxtQkFBbUI7SUFFdkIsSUFBSSxZQUFZLEtBQUssR0FBRyxFQUFFO1FBQ3RCLG1CQUFtQixHQUFHLG9CQUFvQixDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUMxRTtTQUFNO1FBQ0gsbUJBQW1CLEdBQUcsZUFBZSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztLQUNsRTtJQUVELE9BQU8sbUJBQW1CLENBQUM7QUFDL0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFByb3BlcnR5R3JvdXAsIFByb3BlcnR5LCBQcm9wZXJ0eUdyb3VwQ29udGFpbmVyIH0gZnJvbSAnLi4vLi4vaW50ZXJmYWNlcy9jb250ZW50LW1ldGFkYXRhLmludGVyZmFjZXMnO1xuXG5jb25zdCBlbXB0eUdyb3VwID0ge1xuICAgIHByb3BlcnRpZXM6IHt9XG59O1xuXG5mdW5jdGlvbiBjb252ZXJ0T2JqZWN0VG9BcnJheShvYmplY3Q6IGFueSk6IFByb3BlcnR5W10ge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmplY3QpLm1hcCgoa2V5KSA9PiBvYmplY3Rba2V5XSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRHcm91cChwcm9wZXJ0eUdyb3VwczogUHJvcGVydHlHcm91cENvbnRhaW5lciwgZ3JvdXBOYW1lOiBzdHJpbmcpOiBQcm9wZXJ0eUdyb3VwIHwgdW5kZWZpbmVkIHtcbiAgICByZXR1cm4gcHJvcGVydHlHcm91cHNbZ3JvdXBOYW1lXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3BlcnR5KHByb3BlcnR5R3JvdXBzOiBQcm9wZXJ0eUdyb3VwQ29udGFpbmVyLCBncm91cE5hbWU6IHN0cmluZywgcHJvcGVydHlOYW1lOiBzdHJpbmcpOiBQcm9wZXJ0eSB8IFByb3BlcnR5W10gfCB1bmRlZmluZWQge1xuICAgIGNvbnN0IGdyb3VwRGVmaW5pdGlvbiA9IGdldEdyb3VwKHByb3BlcnR5R3JvdXBzLCBncm91cE5hbWUpIHx8IGVtcHR5R3JvdXA7XG4gICAgbGV0IHByb3BlcnR5RGVmaW5pdGlvbnM7XG5cbiAgICBpZiAocHJvcGVydHlOYW1lID09PSAnKicpIHtcbiAgICAgICAgcHJvcGVydHlEZWZpbml0aW9ucyA9IGNvbnZlcnRPYmplY3RUb0FycmF5KGdyb3VwRGVmaW5pdGlvbi5wcm9wZXJ0aWVzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBwcm9wZXJ0eURlZmluaXRpb25zID0gZ3JvdXBEZWZpbml0aW9uLnByb3BlcnRpZXNbcHJvcGVydHlOYW1lXTtcbiAgICB9XG5cbiAgICByZXR1cm4gcHJvcGVydHlEZWZpbml0aW9ucztcbn1cbiJdfQ==