/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var IndifferentConfigService = /** @class */ (function () {
    function IndifferentConfigService(config) {
    }
    /**
     * @param {?} groupName
     * @return {?}
     */
    IndifferentConfigService.prototype.isGroupAllowed = /**
     * @param {?} groupName
     * @return {?}
     */
    function (groupName) {
        return true;
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    IndifferentConfigService.prototype.reorganiseByConfig = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        return Object.keys(propertyGroups)
            .map((/**
         * @param {?} groupName
         * @return {?}
         */
        function (groupName) {
            /** @type {?} */
            var propertyGroup = propertyGroups[groupName];
            /** @type {?} */
            var properties = propertyGroup.properties;
            return Object.assign({}, propertyGroup, {
                properties: Object.keys(properties).map((/**
                 * @param {?} propertyName
                 * @return {?}
                 */
                function (propertyName) { return properties[propertyName]; }))
            });
        }));
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    IndifferentConfigService.prototype.filterExcludedPreset = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        return propertyGroups;
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    IndifferentConfigService.prototype.appendAllPreset = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        return [];
    };
    /**
     * @return {?}
     */
    IndifferentConfigService.prototype.isIncludeAllEnabled = /**
     * @return {?}
     */
    function () {
        return true;
    };
    return IndifferentConfigService;
}());
export { IndifferentConfigService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kaWZmZXJlbnQtY29uZmlnLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJjb250ZW50LW1ldGFkYXRhL3NlcnZpY2VzL2NvbmZpZy9pbmRpZmZlcmVudC1jb25maWcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCQTtJQUVJLGtDQUFZLE1BQVc7SUFBRyxDQUFDOzs7OztJQUVwQixpREFBYzs7OztJQUFyQixVQUFzQixTQUFpQjtRQUNuQyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDOzs7OztJQUVNLHFEQUFrQjs7OztJQUF6QixVQUEwQixjQUFzQztRQUM1RCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO2FBQzdCLEdBQUc7Ozs7UUFBQyxVQUFDLFNBQVM7O2dCQUNMLGFBQWEsR0FBRyxjQUFjLENBQUMsU0FBUyxDQUFDOztnQkFDM0MsVUFBVSxHQUFHLGFBQWEsQ0FBQyxVQUFVO1lBRXpDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsYUFBYSxFQUFFO2dCQUNwQyxVQUFVLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxHQUFHOzs7O2dCQUFDLFVBQUMsWUFBWSxJQUFLLE9BQUEsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUF4QixDQUF3QixFQUFDO2FBQ3RGLENBQUMsQ0FBQztRQUNQLENBQUMsRUFBQyxDQUFDO0lBQ1gsQ0FBQzs7Ozs7SUFFTSx1REFBb0I7Ozs7SUFBM0IsVUFBNEIsY0FBd0M7UUFDaEUsT0FBTyxjQUFjLENBQUM7SUFDMUIsQ0FBQzs7Ozs7SUFFTSxrREFBZTs7OztJQUF0QixVQUF1QixjQUFzQztRQUN6RCxPQUFNLEVBQUUsQ0FBQztJQUNiLENBQUM7Ozs7SUFFTSxzREFBbUI7OztJQUExQjtRQUNJLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFDTCwrQkFBQztBQUFELENBQUMsQUEvQkQsSUErQkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBDb250ZW50TWV0YWRhdGFDb25maWcsIE9yZ2FuaXNlZFByb3BlcnR5R3JvdXAsXG4gICAgUHJvcGVydHlHcm91cENvbnRhaW5lclxufSBmcm9tICcuLi8uLi9pbnRlcmZhY2VzL2NvbnRlbnQtbWV0YWRhdGEuaW50ZXJmYWNlcyc7XG5cbmV4cG9ydCBjbGFzcyBJbmRpZmZlcmVudENvbmZpZ1NlcnZpY2UgaW1wbGVtZW50cyBDb250ZW50TWV0YWRhdGFDb25maWcge1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBhbnkpIHt9XG5cbiAgICBwdWJsaWMgaXNHcm91cEFsbG93ZWQoZ3JvdXBOYW1lOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIHJlb3JnYW5pc2VCeUNvbmZpZyhwcm9wZXJ0eUdyb3VwczogUHJvcGVydHlHcm91cENvbnRhaW5lcik6IE9yZ2FuaXNlZFByb3BlcnR5R3JvdXBbXSB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhwcm9wZXJ0eUdyb3VwcylcbiAgICAgICAgICAgIC5tYXAoKGdyb3VwTmFtZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5R3JvdXAgPSBwcm9wZXJ0eUdyb3Vwc1tncm91cE5hbWVdLFxuICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzID0gcHJvcGVydHlHcm91cC5wcm9wZXJ0aWVzO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHByb3BlcnR5R3JvdXAsIHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczogT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChwcm9wZXJ0eU5hbWUpID0+IHByb3BlcnRpZXNbcHJvcGVydHlOYW1lXSlcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBmaWx0ZXJFeGNsdWRlZFByZXNldChwcm9wZXJ0eUdyb3VwczogT3JnYW5pc2VkUHJvcGVydHlHcm91cFtdKTogT3JnYW5pc2VkUHJvcGVydHlHcm91cFtdIHtcbiAgICAgICAgcmV0dXJuIHByb3BlcnR5R3JvdXBzO1xuICAgIH1cblxuICAgIHB1YmxpYyBhcHBlbmRBbGxQcmVzZXQocHJvcGVydHlHcm91cHM6IFByb3BlcnR5R3JvdXBDb250YWluZXIpOiBPcmdhbmlzZWRQcm9wZXJ0eUdyb3VwW10ge1xuICAgICAgICByZXR1cm5bXTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaXNJbmNsdWRlQWxsRW5hYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxufVxuIl19