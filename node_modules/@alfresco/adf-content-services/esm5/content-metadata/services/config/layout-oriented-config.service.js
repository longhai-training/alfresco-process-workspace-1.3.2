/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { getProperty } from './property-group-reader';
var LayoutOrientedConfigService = /** @class */ (function () {
    function LayoutOrientedConfigService(config) {
        this.config = config;
    }
    /**
     * @param {?} groupName
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.isGroupAllowed = /**
     * @param {?} groupName
     * @return {?}
     */
    function (groupName) {
        if (this.isIncludeAllEnabled()) {
            return true;
        }
        return this.getMatchingGroups(groupName).length > 0;
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.reorganiseByConfig = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        var _this = this;
        /** @type {?} */
        var layoutBlocks = this.config.filter((/**
         * @param {?} itemsGroup
         * @return {?}
         */
        function (itemsGroup) { return itemsGroup.items; }));
        /** @type {?} */
        var organisedPropertyGroup = layoutBlocks.map((/**
         * @param {?} layoutBlock
         * @return {?}
         */
        function (layoutBlock) {
            /** @type {?} */
            var flattenedItems = _this.flattenItems(layoutBlock.items);
            /** @type {?} */
            var properties = flattenedItems.reduce((/**
             * @param {?} props
             * @param {?} explodedItem
             * @return {?}
             */
            function (props, explodedItem) {
                /** @type {?} */
                var property = getProperty(propertyGroups, explodedItem.groupName, explodedItem.propertyName) || [];
                return props.concat(property);
            }), []);
            return {
                title: layoutBlock.title,
                properties: properties
            };
        }));
        return organisedPropertyGroup;
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.appendAllPreset = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        return Object.keys(propertyGroups)
            .map((/**
         * @param {?} groupName
         * @return {?}
         */
        function (groupName) {
            /** @type {?} */
            var propertyGroup = propertyGroups[groupName];
            /** @type {?} */
            var properties = propertyGroup.properties;
            return Object.assign({}, propertyGroup, {
                properties: Object.keys(properties).map((/**
                 * @param {?} propertyName
                 * @return {?}
                 */
                function (propertyName) { return properties[propertyName]; }))
            });
        }));
    };
    /**
     * @param {?} propertyGroups
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.filterExcludedPreset = /**
     * @param {?} propertyGroups
     * @return {?}
     */
    function (propertyGroups) {
        /** @type {?} */
        var excludedConfig = this.config
            .map((/**
         * @param {?} config
         * @return {?}
         */
        function (config) { return config.exclude; }))
            .find((/**
         * @param {?} exclude
         * @return {?}
         */
        function (exclude) { return exclude !== undefined; }));
        if (excludedConfig === undefined) {
            excludedConfig = [];
        }
        else if (typeof excludedConfig === 'string') {
            excludedConfig = [excludedConfig];
        }
        return propertyGroups.filter((/**
         * @param {?} props
         * @return {?}
         */
        function (props) {
            return !excludedConfig.includes(props.name);
        }));
    };
    /**
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.isIncludeAllEnabled = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var includeAllProperty = this.config
            .map((/**
         * @param {?} config
         * @return {?}
         */
        function (config) { return config.includeAll; }))
            .find((/**
         * @param {?} includeAll
         * @return {?}
         */
        function (includeAll) { return includeAll !== undefined; }));
        return includeAllProperty !== undefined ? includeAllProperty : false;
    };
    /**
     * @private
     * @param {?} items
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.flattenItems = /**
     * @private
     * @param {?} items
     * @return {?}
     */
    function (items) {
        return items.reduce((/**
         * @param {?} accumulator
         * @param {?} item
         * @return {?}
         */
        function (accumulator, item) {
            /** @type {?} */
            var properties = Array.isArray(item.properties) ? item.properties : [item.properties];
            /** @type {?} */
            var flattenedProperties = properties.map((/**
             * @param {?} propertyName
             * @return {?}
             */
            function (propertyName) {
                return {
                    groupName: item.aspect || item.type,
                    propertyName: propertyName
                };
            }));
            return accumulator.concat(flattenedProperties);
        }), []);
    };
    /**
     * @private
     * @param {?} groupName
     * @return {?}
     */
    LayoutOrientedConfigService.prototype.getMatchingGroups = /**
     * @private
     * @param {?} groupName
     * @return {?}
     */
    function (groupName) {
        return this.config
            .map((/**
         * @param {?} layoutBlock
         * @return {?}
         */
        function (layoutBlock) { return layoutBlock.items; }))
            .reduce((/**
         * @param {?} accumulator
         * @param {?} items
         * @return {?}
         */
        function (accumulator, items) { return accumulator.concat(items); }), [])
            .filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) { return item.aspect === groupName || item.type === groupName; }));
    };
    return LayoutOrientedConfigService;
}());
export { LayoutOrientedConfigService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LayoutOrientedConfigService.prototype.config;
}
//# sourceMappingURL=data:application/json;base64,