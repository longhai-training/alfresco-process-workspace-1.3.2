/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* tslint:disable:component-selector no-input-rename  */
import { LogService } from '@alfresco/adf-core';
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import { ContentColumnListComponent } from './content-column-list.component';
var ContentColumnComponent = /** @class */ (function () {
    function ContentColumnComponent(list, logService) {
        this.list = list;
        this.logService = logService;
        this.type = 'text';
        this.sortable = false;
        this.title = '';
        this.logService.log('ContentColumnComponent is deprecated starting with 1.7.0 and may be removed in future versions. Use DataColumnComponent instead.');
    }
    /**
     * @return {?}
     */
    ContentColumnComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.srTitle && this.key === '$thumbnail') {
            this.srTitle = 'Thumbnail';
        }
    };
    /**
     * @return {?}
     */
    ContentColumnComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.register();
    };
    /**
     * @return {?}
     */
    ContentColumnComponent.prototype.register = /**
     * @return {?}
     */
    function () {
        if (this.list) {
            return this.list.registerColumn(this);
        }
        return false;
    };
    ContentColumnComponent.decorators = [
        { type: Component, args: [{
                    selector: 'content-column',
                    template: ''
                }] }
    ];
    /** @nocollapse */
    ContentColumnComponent.ctorParameters = function () { return [
        { type: ContentColumnListComponent },
        { type: LogService }
    ]; };
    ContentColumnComponent.propDecorators = {
        key: [{ type: Input }],
        type: [{ type: Input }],
        format: [{ type: Input }],
        sortable: [{ type: Input }],
        title: [{ type: Input }],
        template: [{ type: ContentChild, args: [TemplateRef,] }],
        srTitle: [{ type: Input, args: ['sr-title',] }],
        cssClass: [{ type: Input, args: ['class',] }]
    };
    return ContentColumnComponent;
}());
export { ContentColumnComponent };
if (false) {
    /** @type {?} */
    ContentColumnComponent.prototype.key;
    /** @type {?} */
    ContentColumnComponent.prototype.type;
    /** @type {?} */
    ContentColumnComponent.prototype.format;
    /** @type {?} */
    ContentColumnComponent.prototype.sortable;
    /** @type {?} */
    ContentColumnComponent.prototype.title;
    /** @type {?} */
    ContentColumnComponent.prototype.template;
    /**
     * Title to be used for screen readers.
     * @type {?}
     */
    ContentColumnComponent.prototype.srTitle;
    /** @type {?} */
    ContentColumnComponent.prototype.cssClass;
    /**
     * @type {?}
     * @private
     */
    ContentColumnComponent.prototype.list;
    /**
     * @type {?}
     * @private
     */
    ContentColumnComponent.prototype.logService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGVudC1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb250ZW50LXNlcnZpY2VzLyIsInNvdXJjZXMiOlsiZG9jdW1lbnQtbGlzdC9jb21wb25lbnRzL2NvbnRlbnQtY29sdW1uL2NvbnRlbnQtY29sdW1uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQkEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2hELE9BQU8sRUFBb0IsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXRHLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBRTdFO0lBaUNJLGdDQUFvQixJQUFnQyxFQUFVLFVBQXNCO1FBQWhFLFNBQUksR0FBSixJQUFJLENBQTRCO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQXZCcEYsU0FBSSxHQUFXLE1BQU0sQ0FBQztRQU10QixhQUFRLEdBQVksS0FBSyxDQUFDO1FBRzFCLFVBQUssR0FBVyxFQUFFLENBQUM7UUFlZixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxrSUFBa0ksQ0FBQyxDQUFDO0lBQzVKLENBQUM7Ozs7SUFFRCx5Q0FBUTs7O0lBQVI7UUFDSSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxLQUFLLFlBQVksRUFBRTtZQUM1QyxJQUFJLENBQUMsT0FBTyxHQUFHLFdBQVcsQ0FBQztTQUM5QjtJQUNMLENBQUM7Ozs7SUFFRCxtREFBa0I7OztJQUFsQjtRQUNJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNwQixDQUFDOzs7O0lBRUQseUNBQVE7OztJQUFSO1FBQ0ksSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1gsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUN6QztRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7O2dCQXBESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsUUFBUSxFQUFFLEVBQUU7aUJBQ2Y7Ozs7Z0JBTFEsMEJBQTBCO2dCQUgxQixVQUFVOzs7c0JBV2QsS0FBSzt1QkFHTCxLQUFLO3lCQUdMLEtBQUs7MkJBR0wsS0FBSzt3QkFHTCxLQUFLOzJCQUdMLFlBQVksU0FBQyxXQUFXOzBCQU14QixLQUFLLFNBQUMsVUFBVTsyQkFHaEIsS0FBSyxTQUFDLE9BQU87O0lBdUJsQiw2QkFBQztDQUFBLEFBckRELElBcURDO1NBakRZLHNCQUFzQjs7O0lBRS9CLHFDQUNZOztJQUVaLHNDQUNzQjs7SUFFdEIsd0NBQ2U7O0lBRWYsMENBQzBCOztJQUUxQix1Q0FDbUI7O0lBRW5CLDBDQUNjOzs7OztJQUtkLHlDQUNnQjs7SUFFaEIsMENBQ2lCOzs7OztJQUVMLHNDQUF3Qzs7Ozs7SUFBRSw0Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4gLyogdHNsaW50OmRpc2FibGU6Y29tcG9uZW50LXNlbGVjdG9yIG5vLWlucHV0LXJlbmFtZSAgKi9cblxuaW1wb3J0IHsgRGF0YUNvbHVtbiB9IGZyb20gJ0BhbGZyZXNjby9hZGYtY29yZSc7XG5pbXBvcnQgeyBMb2dTZXJ2aWNlIH0gZnJvbSAnQGFsZnJlc2NvL2FkZi1jb3JlJztcbmltcG9ydCB7IEFmdGVyQ29udGVudEluaXQsIENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgT25Jbml0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb250ZW50Q29sdW1uTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29udGVudC1jb2x1bW4tbGlzdC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2NvbnRlbnQtY29sdW1uJyxcbiAgICB0ZW1wbGF0ZTogJydcbn0pXG5leHBvcnQgY2xhc3MgQ29udGVudENvbHVtbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCwgRGF0YUNvbHVtbiB7XG5cbiAgICBASW5wdXQoKVxuICAgIGtleTogc3RyaW5nO1xuXG4gICAgQElucHV0KClcbiAgICB0eXBlOiBzdHJpbmcgPSAndGV4dCc7XG5cbiAgICBASW5wdXQoKVxuICAgIGZvcm1hdDogc3RyaW5nO1xuXG4gICAgQElucHV0KClcbiAgICBzb3J0YWJsZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgQElucHV0KClcbiAgICB0aXRsZTogc3RyaW5nID0gJyc7XG5cbiAgICBAQ29udGVudENoaWxkKFRlbXBsYXRlUmVmKVxuICAgIHRlbXBsYXRlOiBhbnk7XG5cbiAgICAvKipcbiAgICAgKiBUaXRsZSB0byBiZSB1c2VkIGZvciBzY3JlZW4gcmVhZGVycy5cbiAgICAgKi9cbiAgICBASW5wdXQoJ3NyLXRpdGxlJylcbiAgICBzclRpdGxlOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoJ2NsYXNzJylcbiAgICBjc3NDbGFzczogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBsaXN0OiBDb250ZW50Q29sdW1uTGlzdENvbXBvbmVudCwgcHJpdmF0ZSBsb2dTZXJ2aWNlOiBMb2dTZXJ2aWNlKSB7XG4gICAgICAgIHRoaXMubG9nU2VydmljZS5sb2coJ0NvbnRlbnRDb2x1bW5Db21wb25lbnQgaXMgZGVwcmVjYXRlZCBzdGFydGluZyB3aXRoIDEuNy4wIGFuZCBtYXkgYmUgcmVtb3ZlZCBpbiBmdXR1cmUgdmVyc2lvbnMuIFVzZSBEYXRhQ29sdW1uQ29tcG9uZW50IGluc3RlYWQuJyk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIGlmICghdGhpcy5zclRpdGxlICYmIHRoaXMua2V5ID09PSAnJHRodW1ibmFpbCcpIHtcbiAgICAgICAgICAgIHRoaXMuc3JUaXRsZSA9ICdUaHVtYm5haWwnO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgICAgICB0aGlzLnJlZ2lzdGVyKCk7XG4gICAgfVxuXG4gICAgcmVnaXN0ZXIoKTogYm9vbGVhbiB7XG4gICAgICAgIGlmICh0aGlzLmxpc3QpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmxpc3QucmVnaXN0ZXJDb2x1bW4odGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbiJdfQ==