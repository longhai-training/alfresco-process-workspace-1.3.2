/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FileModel, FileUploadStatus } from '@alfresco/adf-core';
import { Component, EventEmitter, Input, Output } from '@angular/core';
var FileUploadingListRowComponent = /** @class */ (function () {
    function FileUploadingListRowComponent() {
        this.cancel = new EventEmitter();
        this.remove = new EventEmitter();
        this.FileUploadStatus = FileUploadStatus;
    }
    /**
     * @param {?} file
     * @return {?}
     */
    FileUploadingListRowComponent.prototype.onCancel = /**
     * @param {?} file
     * @return {?}
     */
    function (file) {
        this.cancel.emit(file);
    };
    /**
     * @param {?} file
     * @return {?}
     */
    FileUploadingListRowComponent.prototype.onRemove = /**
     * @param {?} file
     * @return {?}
     */
    function (file) {
        this.remove.emit(file);
    };
    /**
     * @return {?}
     */
    FileUploadingListRowComponent.prototype.showCancelledStatus = /**
     * @return {?}
     */
    function () {
        return this.file.status === FileUploadStatus.Cancelled ||
            this.file.status === FileUploadStatus.Aborted ||
            this.file.status === FileUploadStatus.Deleted;
    };
    Object.defineProperty(FileUploadingListRowComponent.prototype, "versionNumber", {
        get: /**
         * @return {?}
         */
        function () {
            return this.file.data.entry.properties['cm:versionLabel'];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FileUploadingListRowComponent.prototype, "mimeType", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.file && this.file.file && this.file.file.type) {
                return this.file.file.type;
            }
            return 'default';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FileUploadingListRowComponent.prototype.isUploadVersion = /**
     * @return {?}
     */
    function () {
        return (!!this.file.data &&
            this.file.options &&
            this.file.options.newVersion &&
            this.file.data.entry.properties &&
            this.file.data.entry.properties['cm:versionLabel']);
    };
    FileUploadingListRowComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-file-uploading-list-row',
                    template: "<div class=\"adf-file-uploading-row\">\n    <mat-icon *ngIf=\"mimeType === 'default'\" mat-list-icon class=\"adf-file-uploading-row__type\">\n        insert_drive_file\n    </mat-icon>\n\n    <adf-icon *ngIf=\"mimeType !== 'default'\" value=\"adf:{{ mimeType }}\"></adf-icon>\n\n    <span\n        class=\"adf-file-uploading-row__name\"\n        title=\"{{ file.name }}\">\n        {{ file.name }}\n    </span>\n\n    <span *ngIf=\"isUploadVersion()\" class=\"adf-file-uploading-row__version\">\n        <mat-chip color=\"primary\" [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.VERSION' | translate\" [title]=\"'version' + versionNumber\" disabled>{{\n            versionNumber\n        }}</mat-chip>\n    </span>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Progress || file.status === FileUploadStatus.Starting\"\n        (click)=\"onCancel(file)\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.CANCEL_FILE' | translate }}\">\n        <span class=\"adf-file-uploading-row__status\">\n            {{ file.progress.loaded | adfFileSize }} / {{ file.progress.total | adfFileSize }}\n        </span>\n\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--cancel\">\n            clear\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Complete && !isUploadVersion()\"\n        (click)=\"onRemove(file)\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\"\n        title=\"{{ 'ADF_FILE_UPLOAD.BUTTON.REMOVE_FILE' | translate }}\">\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Complete && isUploadVersion()\"\n        class=\"adf-file-uploading-row__file-version\">\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status--done\">\n            check_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Pending\"\n        (click)=\"onCancel(file)\"\n        class=\"adf-file-uploading-row__group adf-file-uploading-row__group--toggle\">\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__status adf-file-uploading-row__status--pending\">\n            schedule\n        </mat-icon>\n\n        <mat-icon\n            mat-list-icon\n            class=\"adf-file-uploading-row__action adf-file-uploading-row__action--remove\">\n            remove_circle\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"file.status === FileUploadStatus.Error\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--error\">\n        <mat-icon mat-list-icon\n            [attr.aria-label]=\"'ADF_FILE_UPLOAD.ARIA-LABEL.ERROR' | translate\"\n            [matTooltip]=\"file.errorCode | adfFileUploadError\">\n            report_problem\n        </mat-icon>\n    </div>\n\n    <div\n        *ngIf=\"showCancelledStatus()\"\n        class=\"adf-file-uploading-row__block adf-file-uploading-row__status--cancelled\">\n        {{ 'ADF_FILE_UPLOAD.STATUS.FILE_CANCELED_STATUS' | translate }}\n    </div>\n</div>\n",
                    styles: [""]
                }] }
    ];
    FileUploadingListRowComponent.propDecorators = {
        file: [{ type: Input }],
        cancel: [{ type: Output }],
        remove: [{ type: Output }]
    };
    return FileUploadingListRowComponent;
}());
export { FileUploadingListRowComponent };
if (false) {
    /** @type {?} */
    FileUploadingListRowComponent.prototype.file;
    /** @type {?} */
    FileUploadingListRowComponent.prototype.cancel;
    /** @type {?} */
    FileUploadingListRowComponent.prototype.remove;
    /** @type {?} */
    FileUploadingListRowComponent.prototype.FileUploadStatus;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb250ZW50LXNlcnZpY2VzLyIsInNvdXJjZXMiOlsidXBsb2FkL2NvbXBvbmVudHMvZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFO0lBQUE7UUFVSSxXQUFNLEdBQTRCLElBQUksWUFBWSxFQUFhLENBQUM7UUFHaEUsV0FBTSxHQUE0QixJQUFJLFlBQVksRUFBYSxDQUFDO1FBRWhFLHFCQUFnQixHQUFHLGdCQUFnQixDQUFDO0lBcUN4QyxDQUFDOzs7OztJQW5DRyxnREFBUTs7OztJQUFSLFVBQVMsSUFBZTtRQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7OztJQUVELGdEQUFROzs7O0lBQVIsVUFBUyxJQUFlO1FBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7Ozs7SUFFRCwyREFBbUI7OztJQUFuQjtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEtBQUssZ0JBQWdCLENBQUMsU0FBUztZQUNsRCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxnQkFBZ0IsQ0FBQyxPQUFPO1lBQzdDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxLQUFLLGdCQUFnQixDQUFDLE9BQU8sQ0FBQztJQUN0RCxDQUFDO0lBRUQsc0JBQUksd0RBQWE7Ozs7UUFBakI7WUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUM5RCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLG1EQUFROzs7O1FBQVo7WUFDSSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNwRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQzthQUM5QjtZQUVELE9BQU8sU0FBUyxDQUFDO1FBQ3JCLENBQUM7OztPQUFBOzs7O0lBRUQsdURBQWU7OztJQUFmO1FBQ0ksT0FBTyxDQUNILENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUk7WUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVU7WUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVU7WUFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUNyRCxDQUFDO0lBQ04sQ0FBQzs7Z0JBbkRKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsNkJBQTZCO29CQUN2QywyaUhBQXVEOztpQkFFMUQ7Ozt1QkFFSSxLQUFLO3lCQUdMLE1BQU07eUJBR04sTUFBTTs7SUF3Q1gsb0NBQUM7Q0FBQSxBQXBERCxJQW9EQztTQS9DWSw2QkFBNkI7OztJQUN0Qyw2Q0FDZ0I7O0lBRWhCLCtDQUNnRTs7SUFFaEUsK0NBQ2dFOztJQUVoRSx5REFBb0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBGaWxlTW9kZWwsIEZpbGVVcGxvYWRTdGF0dXMgfSBmcm9tICdAYWxmcmVzY28vYWRmLWNvcmUnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdhZGYtZmlsZS11cGxvYWRpbmctbGlzdC1yb3cnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9maWxlLXVwbG9hZGluZy1saXN0LXJvdy5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vZmlsZS11cGxvYWRpbmctbGlzdC1yb3cuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBGaWxlVXBsb2FkaW5nTGlzdFJvd0NvbXBvbmVudCB7XG4gICAgQElucHV0KClcbiAgICBmaWxlOiBGaWxlTW9kZWw7XG5cbiAgICBAT3V0cHV0KClcbiAgICBjYW5jZWw6IEV2ZW50RW1pdHRlcjxGaWxlTW9kZWw+ID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlTW9kZWw+KCk7XG5cbiAgICBAT3V0cHV0KClcbiAgICByZW1vdmU6IEV2ZW50RW1pdHRlcjxGaWxlTW9kZWw+ID0gbmV3IEV2ZW50RW1pdHRlcjxGaWxlTW9kZWw+KCk7XG5cbiAgICBGaWxlVXBsb2FkU3RhdHVzID0gRmlsZVVwbG9hZFN0YXR1cztcblxuICAgIG9uQ2FuY2VsKGZpbGU6IEZpbGVNb2RlbCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNhbmNlbC5lbWl0KGZpbGUpO1xuICAgIH1cblxuICAgIG9uUmVtb3ZlKGZpbGU6IEZpbGVNb2RlbCk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlbW92ZS5lbWl0KGZpbGUpO1xuICAgIH1cblxuICAgIHNob3dDYW5jZWxsZWRTdGF0dXMoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpbGUuc3RhdHVzID09PSBGaWxlVXBsb2FkU3RhdHVzLkNhbmNlbGxlZCB8fFxuICAgICAgICAgICAgdGhpcy5maWxlLnN0YXR1cyA9PT0gRmlsZVVwbG9hZFN0YXR1cy5BYm9ydGVkIHx8XG4gICAgICAgICAgICB0aGlzLmZpbGUuc3RhdHVzID09PSBGaWxlVXBsb2FkU3RhdHVzLkRlbGV0ZWQ7XG4gICAgfVxuXG4gICAgZ2V0IHZlcnNpb25OdW1iZXIoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsZS5kYXRhLmVudHJ5LnByb3BlcnRpZXNbJ2NtOnZlcnNpb25MYWJlbCddO1xuICAgIH1cblxuICAgIGdldCBtaW1lVHlwZSgpOiBzdHJpbmcge1xuICAgICAgICBpZiAodGhpcy5maWxlICYmIHRoaXMuZmlsZS5maWxlICYmIHRoaXMuZmlsZS5maWxlLnR5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbGUuZmlsZS50eXBlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICdkZWZhdWx0JztcbiAgICB9XG5cbiAgICBpc1VwbG9hZFZlcnNpb24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAhIXRoaXMuZmlsZS5kYXRhICYmXG4gICAgICAgICAgICB0aGlzLmZpbGUub3B0aW9ucyAmJlxuICAgICAgICAgICAgdGhpcy5maWxlLm9wdGlvbnMubmV3VmVyc2lvbiAmJlxuICAgICAgICAgICAgdGhpcy5maWxlLmRhdGEuZW50cnkucHJvcGVydGllcyAmJlxuICAgICAgICAgICAgdGhpcy5maWxlLmRhdGEuZW50cnkucHJvcGVydGllc1snY206dmVyc2lvbkxhYmVsJ11cbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=