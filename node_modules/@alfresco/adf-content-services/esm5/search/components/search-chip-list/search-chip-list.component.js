/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation, Input } from '@angular/core';
import { SearchFilterComponent } from '../../components/search-filter/search-filter.component';
var SearchChipListComponent = /** @class */ (function () {
    function SearchChipListComponent() {
        /**
         * Flag used to enable the display of a clear-all-filters button.
         */
        this.clearAll = false;
    }
    SearchChipListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-search-chip-list',
                    template: "<mat-chip-list>\n    <ng-container *ngIf=\"searchFilter && searchFilter.selectedBuckets.length\">\n        <mat-chip *ngIf=\"clearAll && searchFilter.selectedBuckets.length > 1\"\n                  color=\"primary\"\n                  selected\n                  matTooltip=\"{{ 'SEARCH.FILTER.BUTTONS.CLEAR-ALL.TOOLTIP' | translate }}\"\n                  matTooltipPosition=\"right\"\n                  (click)=\"searchFilter.resetAllSelectedBuckets()\">\n            {{ 'SEARCH.FILTER.BUTTONS.CLEAR-ALL.LABEL' | translate }}\n        </mat-chip>\n\n        <mat-chip\n            *ngFor=\"let selection of searchFilter.selectedBuckets\"\n            [removable]=\"true\"\n            (removed)=\"searchFilter.unselectFacetBucket(selection.field, selection.bucket)\">\n            {{ (selection.bucket.display || selection.bucket.label) | translate }}\n            <mat-icon matChipRemove>cancel</mat-icon>\n        </mat-chip>\n    </ng-container>\n</mat-chip-list>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-search-chip-list' }
                }] }
    ];
    SearchChipListComponent.propDecorators = {
        searchFilter: [{ type: Input }],
        clearAll: [{ type: Input }]
    };
    return SearchChipListComponent;
}());
export { SearchChipListComponent };
if (false) {
    /**
     * Search filter to supply the data for the chips.
     * @type {?}
     */
    SearchChipListComponent.prototype.searchFilter;
    /**
     * Flag used to enable the display of a clear-all-filters button.
     * @type {?}
     */
    SearchChipListComponent.prototype.clearAll;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWNoaXAtbGlzdC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJzZWFyY2gvY29tcG9uZW50cy9zZWFyY2gtY2hpcC1saXN0L3NlYXJjaC1jaGlwLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBRS9GO0lBQUE7Ozs7UUFjSSxhQUFRLEdBQVksS0FBSyxDQUFDO0lBQzlCLENBQUM7O2dCQWZBLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxzOUJBQWdEO29CQUNoRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLHNCQUFzQixFQUFFO2lCQUMxQzs7OytCQUlJLEtBQUs7MkJBSUwsS0FBSzs7SUFFViw4QkFBQztDQUFBLEFBZkQsSUFlQztTQVRZLHVCQUF1Qjs7Ozs7O0lBR2hDLCtDQUNvQzs7Ozs7SUFHcEMsMkNBQzBCIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNlYXJjaEZpbHRlckNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvc2VhcmNoLWZpbHRlci9zZWFyY2gtZmlsdGVyLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYWRmLXNlYXJjaC1jaGlwLWxpc3QnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zZWFyY2gtY2hpcC1saXN0LmNvbXBvbmVudC5odG1sJyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHsgY2xhc3M6ICdhZGYtc2VhcmNoLWNoaXAtbGlzdCcgfVxufSlcbmV4cG9ydCBjbGFzcyBTZWFyY2hDaGlwTGlzdENvbXBvbmVudCB7XG5cbiAgICAvKiogU2VhcmNoIGZpbHRlciB0byBzdXBwbHkgdGhlIGRhdGEgZm9yIHRoZSBjaGlwcy4gKi9cbiAgICBASW5wdXQoKVxuICAgIHNlYXJjaEZpbHRlcjogU2VhcmNoRmlsdGVyQ29tcG9uZW50O1xuXG4gICAgLyoqIEZsYWcgdXNlZCB0byBlbmFibGUgdGhlIGRpc3BsYXkgb2YgYSBjbGVhci1hbGwtZmlsdGVycyBidXR0b24uICovXG4gICAgQElucHV0KClcbiAgICBjbGVhckFsbDogYm9vbGVhbiA9IGZhbHNlO1xufVxuIl19