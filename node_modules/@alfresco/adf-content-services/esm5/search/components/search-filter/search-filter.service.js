/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Injectable } from '@angular/core';
import { SearchTextComponent } from '../search-text/search-text.component';
import { SearchRadioComponent } from '../search-radio/search-radio.component';
import { SearchSliderComponent } from '../search-slider/search-slider.component';
import { SearchNumberRangeComponent } from '../search-number-range/search-number-range.component';
import { SearchCheckListComponent } from '../search-check-list/search-check-list.component';
import { SearchDateRangeComponent } from '../search-date-range/search-date-range.component';
import * as i0 from "@angular/core";
var SearchFilterService = /** @class */ (function () {
    function SearchFilterService() {
        /**
         * Contains string-to-type mappings for registered widgets.
         */
        this.widgets = {
            'text': SearchTextComponent,
            'radio': SearchRadioComponent,
            'slider': SearchSliderComponent,
            'number-range': SearchNumberRangeComponent,
            'check-list': SearchCheckListComponent,
            'date-range': SearchDateRangeComponent
        };
    }
    SearchFilterService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ SearchFilterService.ngInjectableDef = i0.defineInjectable({ factory: function SearchFilterService_Factory() { return new SearchFilterService(); }, token: SearchFilterService, providedIn: "root" });
    return SearchFilterService;
}());
export { SearchFilterService };
if (false) {
    /**
     * Contains string-to-type mappings for registered widgets.
     * @type {?}
     */
    SearchFilterService.prototype.widgets;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLWZpbHRlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi1jb250ZW50LXNlcnZpY2VzLyIsInNvdXJjZXMiOlsic2VhcmNoL2NvbXBvbmVudHMvc2VhcmNoLWZpbHRlci9zZWFyY2gtZmlsdGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLFVBQVUsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUM5RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNqRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxzREFBc0QsQ0FBQztBQUNsRyxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUM1RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQzs7QUFFNUY7SUFBQTs7OztRQVFJLFlBQU8sR0FBK0I7WUFDbEMsTUFBTSxFQUFFLG1CQUFtQjtZQUMzQixPQUFPLEVBQUUsb0JBQW9CO1lBQzdCLFFBQVEsRUFBRSxxQkFBcUI7WUFDL0IsY0FBYyxFQUFFLDBCQUEwQjtZQUMxQyxZQUFZLEVBQUUsd0JBQXdCO1lBQ3RDLFlBQVksRUFBRSx3QkFBd0I7U0FDekMsQ0FBQztLQUVMOztnQkFqQkEsVUFBVSxTQUFDO29CQUNSLFVBQVUsRUFBRSxNQUFNO2lCQUNyQjs7OzhCQTNCRDtDQTBDQyxBQWpCRCxJQWlCQztTQWRZLG1CQUFtQjs7Ozs7O0lBSzVCLHNDQU9FIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2VhcmNoVGV4dENvbXBvbmVudCB9IGZyb20gJy4uL3NlYXJjaC10ZXh0L3NlYXJjaC10ZXh0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZWFyY2hSYWRpb0NvbXBvbmVudCB9IGZyb20gJy4uL3NlYXJjaC1yYWRpby9zZWFyY2gtcmFkaW8uY29tcG9uZW50JztcbmltcG9ydCB7IFNlYXJjaFNsaWRlckNvbXBvbmVudCB9IGZyb20gJy4uL3NlYXJjaC1zbGlkZXIvc2VhcmNoLXNsaWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VhcmNoTnVtYmVyUmFuZ2VDb21wb25lbnQgfSBmcm9tICcuLi9zZWFyY2gtbnVtYmVyLXJhbmdlL3NlYXJjaC1udW1iZXItcmFuZ2UuY29tcG9uZW50JztcbmltcG9ydCB7IFNlYXJjaENoZWNrTGlzdENvbXBvbmVudCB9IGZyb20gJy4uL3NlYXJjaC1jaGVjay1saXN0L3NlYXJjaC1jaGVjay1saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZWFyY2hEYXRlUmFuZ2VDb21wb25lbnQgfSBmcm9tICcuLi9zZWFyY2gtZGF0ZS1yYW5nZS9zZWFyY2gtZGF0ZS1yYW5nZS5jb21wb25lbnQnO1xuXG5ASW5qZWN0YWJsZSh7XG4gICAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIFNlYXJjaEZpbHRlclNlcnZpY2Uge1xuXG4gICAgLyoqXG4gICAgICogQ29udGFpbnMgc3RyaW5nLXRvLXR5cGUgbWFwcGluZ3MgZm9yIHJlZ2lzdGVyZWQgd2lkZ2V0cy5cbiAgICAgKi9cbiAgICB3aWRnZXRzOiB7IFtpZDogc3RyaW5nXTogVHlwZTx7fT4gfSA9IHtcbiAgICAgICAgJ3RleHQnOiBTZWFyY2hUZXh0Q29tcG9uZW50LFxuICAgICAgICAncmFkaW8nOiBTZWFyY2hSYWRpb0NvbXBvbmVudCxcbiAgICAgICAgJ3NsaWRlcic6IFNlYXJjaFNsaWRlckNvbXBvbmVudCxcbiAgICAgICAgJ251bWJlci1yYW5nZSc6IFNlYXJjaE51bWJlclJhbmdlQ29tcG9uZW50LFxuICAgICAgICAnY2hlY2stbGlzdCc6IFNlYXJjaENoZWNrTGlzdENvbXBvbmVudCxcbiAgICAgICAgJ2RhdGUtcmFuZ2UnOiBTZWFyY2hEYXRlUmFuZ2VDb21wb25lbnRcbiAgICB9O1xuXG59XG4iXX0=