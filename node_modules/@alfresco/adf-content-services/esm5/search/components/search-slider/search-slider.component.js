/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Component, ViewEncapsulation, Input } from '@angular/core';
var SearchSliderComponent = /** @class */ (function () {
    function SearchSliderComponent() {
        this.thumbLabel = false;
    }
    /**
     * @return {?}
     */
    SearchSliderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.settings) {
            if (this.settings.hasOwnProperty('min')) {
                this.min = this.settings['min'];
            }
            if (this.settings.hasOwnProperty('max')) {
                this.max = this.settings['max'];
            }
            if (this.settings.hasOwnProperty('step')) {
                this.step = this.settings['step'];
            }
            this.thumbLabel = this.settings['thumbLabel'] ? true : false;
        }
    };
    /**
     * @return {?}
     */
    SearchSliderComponent.prototype.reset = /**
     * @return {?}
     */
    function () {
        this.value = this.min || 0;
        this.updateQuery(null);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SearchSliderComponent.prototype.onChangedHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.value = event.value;
        this.updateQuery(this.value);
    };
    /**
     * @private
     * @param {?} value
     * @return {?}
     */
    SearchSliderComponent.prototype.updateQuery = /**
     * @private
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.id && this.context && this.settings && this.settings.field) {
            if (value === null) {
                this.context.queryFragments[this.id] = '';
            }
            else {
                this.context.queryFragments[this.id] = this.settings.field + ":[0 TO " + value + "]";
            }
            this.context.update();
        }
    };
    SearchSliderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'adf-search-slider',
                    template: "<mat-slider\n    [(value)]=\"value\"\n    [min]=\"min\"\n    [max]=\"max\"\n    [step]=\"step\"\n    [thumbLabel]=\"thumbLabel\"\n    (change)=\"onChangedHandler($event)\"\n    data-automation-id=\"slider-range\">\n</mat-slider>\n\n<div class=\"facet-buttons\">\n    <button mat-button color=\"primary\" (click)=\"reset()\" data-automation-id=\"slider-btn-clear\">\n        {{ 'SEARCH.FILTER.ACTIONS.CLEAR' | translate }}\n    </button>\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    host: { class: 'adf-search-slider' },
                    styles: [".adf-search-slider .mat-slider{width:100%}"]
                }] }
    ];
    SearchSliderComponent.propDecorators = {
        value: [{ type: Input }]
    };
    return SearchSliderComponent;
}());
export { SearchSliderComponent };
if (false) {
    /** @type {?} */
    SearchSliderComponent.prototype.id;
    /** @type {?} */
    SearchSliderComponent.prototype.settings;
    /** @type {?} */
    SearchSliderComponent.prototype.context;
    /** @type {?} */
    SearchSliderComponent.prototype.step;
    /** @type {?} */
    SearchSliderComponent.prototype.min;
    /** @type {?} */
    SearchSliderComponent.prototype.max;
    /** @type {?} */
    SearchSliderComponent.prototype.thumbLabel;
    /**
     * The numeric value represented by the slider.
     * @type {?}
     */
    SearchSliderComponent.prototype.value;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXNsaWRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLWNvbnRlbnQtc2VydmljZXMvIiwic291cmNlcyI6WyJzZWFyY2gvY29tcG9uZW50cy9zZWFyY2gtc2xpZGVyL3NlYXJjaC1zbGlkZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQVUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTTVFO0lBQUE7UUFlSSxlQUFVLEdBQUcsS0FBSyxDQUFDO0lBNkN2QixDQUFDOzs7O0lBdkNHLHdDQUFROzs7SUFBUjtRQUNJLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNuQztZQUVELElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNuQztZQUVELElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLEVBQUU7Z0JBQ3RDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUNyQztZQUVELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDaEU7SUFDTCxDQUFDOzs7O0lBRUQscUNBQUs7OztJQUFMO1FBQ0ksSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzNCLENBQUM7Ozs7O0lBRUQsZ0RBQWdCOzs7O0lBQWhCLFVBQWlCLEtBQXNCO1FBQ25DLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDOzs7Ozs7SUFFTywyQ0FBVzs7Ozs7SUFBbkIsVUFBb0IsS0FBb0I7UUFDcEMsSUFBSSxJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRTtZQUNqRSxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7Z0JBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDN0M7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxlQUFVLEtBQUssTUFBRyxDQUFDO2FBQ25GO1lBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztTQUN6QjtJQUNMLENBQUM7O2dCQTFESixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsMGNBQTZDO29CQUU3QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtvQkFDckMsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFOztpQkFDdkM7Ozt3QkFZSSxLQUFLOztJQTBDViw0QkFBQztDQUFBLEFBNURELElBNERDO1NBckRZLHFCQUFxQjs7O0lBRTlCLG1DQUFXOztJQUNYLHlDQUErQjs7SUFDL0Isd0NBQW1DOztJQUNuQyxxQ0FBYTs7SUFDYixvQ0FBWTs7SUFDWixvQ0FBWTs7SUFDWiwyQ0FBbUI7Ozs7O0lBR25CLHNDQUNxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIE9uSW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNlYXJjaFdpZGdldCB9IGZyb20gJy4uLy4uL3NlYXJjaC13aWRnZXQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFNlYXJjaFdpZGdldFNldHRpbmdzIH0gZnJvbSAnLi4vLi4vc2VhcmNoLXdpZGdldC1zZXR0aW5ncy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgU2VhcmNoUXVlcnlCdWlsZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL3NlYXJjaC1xdWVyeS1idWlsZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgTWF0U2xpZGVyQ2hhbmdlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2FkZi1zZWFyY2gtc2xpZGVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vc2VhcmNoLXNsaWRlci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vc2VhcmNoLXNsaWRlci5jb21wb25lbnQuc2NzcyddLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgaG9zdDogeyBjbGFzczogJ2FkZi1zZWFyY2gtc2xpZGVyJyB9XG59KVxuZXhwb3J0IGNsYXNzIFNlYXJjaFNsaWRlckNvbXBvbmVudCBpbXBsZW1lbnRzIFNlYXJjaFdpZGdldCwgT25Jbml0IHtcblxuICAgIGlkOiBzdHJpbmc7XG4gICAgc2V0dGluZ3M6IFNlYXJjaFdpZGdldFNldHRpbmdzO1xuICAgIGNvbnRleHQ6IFNlYXJjaFF1ZXJ5QnVpbGRlclNlcnZpY2U7XG4gICAgc3RlcDogbnVtYmVyO1xuICAgIG1pbjogbnVtYmVyO1xuICAgIG1heDogbnVtYmVyO1xuICAgIHRodW1iTGFiZWwgPSBmYWxzZTtcblxuICAgIC8qKiBUaGUgbnVtZXJpYyB2YWx1ZSByZXByZXNlbnRlZCBieSB0aGUgc2xpZGVyLiAqL1xuICAgIEBJbnB1dCgpXG4gICAgdmFsdWU6IG51bWJlciB8IG51bGw7XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmhhc093blByb3BlcnR5KCdtaW4nKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubWluID0gdGhpcy5zZXR0aW5nc1snbWluJ107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmhhc093blByb3BlcnR5KCdtYXgnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMubWF4ID0gdGhpcy5zZXR0aW5nc1snbWF4J107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnNldHRpbmdzLmhhc093blByb3BlcnR5KCdzdGVwJykpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0ZXAgPSB0aGlzLnNldHRpbmdzWydzdGVwJ107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMudGh1bWJMYWJlbCA9IHRoaXMuc2V0dGluZ3NbJ3RodW1iTGFiZWwnXSA/IHRydWUgOiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlc2V0KCkge1xuICAgICAgICB0aGlzLnZhbHVlID0gdGhpcy5taW4gfHwgMDtcbiAgICAgICAgdGhpcy51cGRhdGVRdWVyeShudWxsKTtcbiAgICB9XG5cbiAgICBvbkNoYW5nZWRIYW5kbGVyKGV2ZW50OiBNYXRTbGlkZXJDaGFuZ2UpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IGV2ZW50LnZhbHVlO1xuICAgICAgICB0aGlzLnVwZGF0ZVF1ZXJ5KHRoaXMudmFsdWUpO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlUXVlcnkodmFsdWU6IG51bWJlciB8IG51bGwpIHtcbiAgICAgICAgaWYgKHRoaXMuaWQgJiYgdGhpcy5jb250ZXh0ICYmIHRoaXMuc2V0dGluZ3MgJiYgdGhpcy5zZXR0aW5ncy5maWVsZCkge1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0LnF1ZXJ5RnJhZ21lbnRzW3RoaXMuaWRdID0gJyc7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dC5xdWVyeUZyYWdtZW50c1t0aGlzLmlkXSA9IGAke3RoaXMuc2V0dGluZ3MuZmllbGR9OlswIFRPICR7dmFsdWV9XWA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNvbnRleHQudXBkYXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbn1cbiJdfQ==