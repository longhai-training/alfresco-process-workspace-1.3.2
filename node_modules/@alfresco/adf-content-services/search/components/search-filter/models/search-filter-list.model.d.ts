/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare class SearchFilterList<T> implements Iterable<T> {
    private filteredItems;
    private _filterText;
    items: T[];
    pageSize: number;
    currentPageSize: number;
    filterText: string;
    private _filter;
    filter: (item: T) => boolean;
    private applyFilter;
    /** Returns visible portion of the items.  */
    readonly visibleItems: T[];
    /** Returns entire collection length including items not displayed on the page. */
    readonly length: number;
    /** Detects whether more items can be displayed. */
    readonly canShowMoreItems: boolean;
    /** Detects whether less items can be displayed. */
    readonly canShowLessItems: boolean;
    /** Detects whether content fits single page. */
    readonly fitsPage: boolean;
    constructor(items?: T[], pageSize?: number);
    /** Display more items. */
    showMoreItems(): void;
    /** Display less items. */
    showLessItems(): void;
    /** Reset entire collection and page settings. */
    clear(): void;
    addItem(item: T): void;
    deleteItem(item: T): void;
    [Symbol.iterator](): Iterator<T>;
}
