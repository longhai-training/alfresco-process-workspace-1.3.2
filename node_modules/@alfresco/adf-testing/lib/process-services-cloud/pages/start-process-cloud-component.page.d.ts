/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare class StartProcessCloudPage {
    defaultProcessName: import("protractor/built/element").ElementFinder;
    processNameInput: import("protractor/built/element").ElementFinder;
    selectProcessDropdownArrow: import("protractor/built/element").ElementFinder;
    cancelProcessButton: import("protractor/built/element").ElementFinder;
    formStartProcessButton: import("protractor/built/element").ElementFinder;
    startProcessButton: import("protractor/built/element").ElementFinder;
    noProcess: import("protractor/built/element").ElementFinder;
    processDefinition: import("protractor/built/element").ElementFinder;
    processDefinitionOptionsPanel: import("protractor/built/element").ElementFinder;
    checkNoProcessMessage(): void;
    pressDownArrowAndEnter(): import("selenium-webdriver").promise.Promise<void>;
    checkNoProcessDefinitionOptionIsDisplayed(): void;
    enterProcessName(name: any): void;
    clearProcessName(): void;
    selectFromProcessDropdown(name: any): this;
    clickProcessDropdownArrow(): void;
    checkOptionIsDisplayed(name: any): this;
    selectOption(name: any): this;
    clickCancelProcessButton(): void;
    checkStartProcessButtonIsEnabled(): void;
    checkStartProcessButtonIsDisabled(): void;
    clickStartProcessButton(): import("selenium-webdriver").promise.Promise<void>;
    checkValidationErrorIsDisplayed(error: any, elementRef?: string): this;
    blur(locator: any): this;
    clearField(locator: any): void;
}
