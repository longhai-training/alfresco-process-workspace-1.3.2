/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DataTableComponentPage } from '../../core/pages/data-table-component.page';
export declare class TaskListCloudComponentPage {
    taskList: import("protractor/built/element").ElementFinder;
    noTasksFound: import("protractor/built/element").ElementFinder;
    dataTable: DataTableComponentPage;
    getDataTable(): DataTableComponentPage;
    clickCheckbox(taskName: any): void;
    checkRowIsNotChecked(taskName: any): void;
    checkRowIsChecked(taskName: any): void;
    getRowsWithSameName(taskName: any): Promise<string>;
    getRowsWithSameId(taskId: any): Promise<string>;
    checkRowIsSelected(taskName: any): DataTableComponentPage;
    checkRowIsNotSelected(taskName: any): DataTableComponentPage;
    selectRowWithKeyboard(taskName: any): void;
    selectRow(taskName: any): DataTableComponentPage;
    getRow(taskName: any): import("protractor/built/element").ElementFinder;
    checkContentIsDisplayedById(taskId: any): DataTableComponentPage;
    checkContentIsDisplayedByProcessInstanceId(taskName: any): DataTableComponentPage;
    checkContentIsDisplayedByName(taskName: any): DataTableComponentPage;
    checkContentIsNotDisplayedByName(taskName: any): DataTableComponentPage;
    checkTaskListIsLoaded(): this;
    getNoTasksFoundMessage(): import("selenium-webdriver").promise.Promise<string>;
    getAllRowsNameColumn(): Promise<any>;
    getAllRowsByIdColumn(): Promise<any>;
    getAllRowsByProcessDefIdColumn(): Promise<any>;
    getAllRowsByProcessInstanceIdColumn(): Promise<any>;
    getAllRowsByAssigneeColumn(): Promise<any>;
    getAllRowsByParentTaskIdColumn(): Promise<any>;
    getAllRowsByPriorityColumn(): Promise<any>;
    getAllRowsByStandAloneColumn(): Promise<any>;
    getAllRowsByOwnerColumn(): Promise<any>;
    getIdCellValue(rowName: any): import("selenium-webdriver").promise.Promise<string>;
}
