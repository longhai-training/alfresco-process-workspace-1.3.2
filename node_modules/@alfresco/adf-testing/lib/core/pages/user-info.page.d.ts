/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare class UserInfoPage {
    dialog: import("protractor/built/element").ElementFinder;
    userImage: import("protractor/built/element").ElementFinder;
    userInfoEcmHeaderTitle: import("protractor/built/element").ElementFinder;
    userInfoEcmTitle: import("protractor/built/element").ElementFinder;
    ecmEmail: import("protractor/built/element").ElementFinder;
    ecmJobTitle: import("protractor/built/element").ElementFinder;
    userInfoProcessHeaderTitle: import("protractor/built/element").ElementFinder;
    userInfoProcessTitle: import("protractor/built/element").ElementFinder;
    processEmail: import("protractor/built/element").ElementFinder;
    processTenant: import("protractor/built/element").ElementFinder;
    apsImage: import("protractor/built/element").ElementFinder;
    acsImage: import("protractor/built/element").ElementFinder;
    initialImage: import("protractor/built/element").ElementFinder;
    userInfoSsoHeaderTitle: import("protractor/built/element").ElementFinder;
    userInfoSsoTitle: import("protractor/built/element").ElementFinder;
    ssoEmail: import("protractor/built/element").ElementFinder;
    userProfileButton: import("protractor/built/element").ElementFinder;
    dialogIsDisplayed(): this;
    dialogIsNotDisplayed(): this;
    clickUserProfile(): void;
    clickOnContentServicesTab(): this;
    checkProcessServicesTabIsSelected(): this;
    clickOnProcessServicesTab(): this;
    userImageIsDisplayed(): this;
    getContentHeaderTitle(): import("selenium-webdriver").promise.Promise<string>;
    getContentTitle(): import("selenium-webdriver").promise.Promise<string>;
    getContentEmail(): import("selenium-webdriver").promise.Promise<string>;
    getContentJobTitle(): import("selenium-webdriver").promise.Promise<string>;
    getProcessHeaderTitle(): import("selenium-webdriver").promise.Promise<string>;
    getProcessTitle(): import("selenium-webdriver").promise.Promise<string>;
    getProcessEmail(): import("selenium-webdriver").promise.Promise<string>;
    getProcessTenant(): import("selenium-webdriver").promise.Promise<string>;
    getSsoHeaderTitle(): import("selenium-webdriver").promise.Promise<string>;
    getSsoTitle(): import("selenium-webdriver").promise.Promise<string>;
    getSsoEmail(): import("selenium-webdriver").promise.Promise<string>;
    closeUserProfile(): void;
    checkACSProfileImage(): void;
    checkAPSProfileImage(): void;
    checkInitialImage(): void;
    initialImageNotDisplayed(): void;
    ACSProfileImageNotDisplayed(): void;
    APSProfileImageNotDisplayed(): void;
}
