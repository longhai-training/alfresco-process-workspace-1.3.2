/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare class SettingsPage {
    settingsURL: string;
    providerDropdown: import("protractor/built/element").ElementFinder;
    ecmAndBpm: {
        option: import("protractor/built/element").ElementFinder;
        text: string;
    };
    bpm: {
        option: import("protractor/built/element").ElementFinder;
        text: string;
    };
    ecm: {
        option: import("protractor/built/element").ElementFinder;
        text: string;
    };
    oauth: {
        option: import("protractor/built/element").ElementFinder;
        text: string;
    };
    selectedOption: import("protractor/built/element").ElementFinder;
    ecmText: import("protractor/built/element").ElementFinder;
    bpmText: import("protractor/built/element").ElementFinder;
    clientIdText: import("protractor/built/element").ElementFinder;
    authHostText: import("protractor/built/element").ElementFinder;
    logoutUrlText: import("protractor/built/element").ElementFinder;
    basicAuthRadioButton: import("protractor/built/element").ElementFinder;
    identityHostText: import("protractor/built/element").ElementFinder;
    ssoRadioButton: import("protractor/built/element").ElementFinder;
    silentLoginToggleLabel: import("protractor/built/element").ElementFinder;
    silentLoginToggleElement: import("protractor/built/element").ElementFinder;
    implicitFlowLabel: import("protractor/built/element").ElementFinder;
    implicitFlowElement: import("protractor/built/element").ElementFinder;
    applyButton: import("protractor/built/element").ElementFinder;
    backButton: import("protractor/built/element").ElementFinder;
    validationMessage: import("protractor/built/element").ElementFinder;
    goToSettingsPage(): this;
    setProvider(option: any, selected: any): Promise<void>;
    getSelectedOptionText(): import("selenium-webdriver").promise.Promise<string>;
    getBpmHostUrl(): import("selenium-webdriver").promise.Promise<string>;
    getEcmHostUrl(): import("selenium-webdriver").promise.Promise<string>;
    getBpmOption(): import("protractor/built/element").ElementFinder;
    getEcmOption(): import("protractor/built/element").ElementFinder;
    getEcmAndBpmOption(): import("protractor/built/element").ElementFinder;
    setProviderEcmBpm(): this;
    setProviderBpm(): this;
    setProviderEcm(): this;
    setProviderOauth(): this;
    clickBackButton(): Promise<void>;
    clickSsoRadioButton(): Promise<void>;
    setProviderEcmSso(contentServiceURL: any, authHost: any, identityHost: any, silentLogin?: boolean, implicitFlow?: boolean, clientId?: string, logoutUr?: string): Promise<void>;
    setProviderBpmSso(processServiceURL: any, authHost: any, identityHost: any, silentLogin?: boolean, implicitFlow?: boolean): Promise<void>;
    setLogoutUrl(logoutUrl: any): Promise<void>;
    setProcessServicesURL(processServiceURL: any): Promise<void>;
    setClientId(clientId?: string): Promise<void>;
    setContentServicesURL(contentServiceURL: any): Promise<void>;
    clearContentServicesURL(): void;
    clearProcessServicesURL(): void;
    setAuthHost(authHostURL: any): Promise<void>;
    setIdentityHost(identityHost: any): Promise<void>;
    clickApply(): Promise<void>;
    setSilentLogin(enableToggle: any): Promise<void>;
    setImplicitFlow(enableToggle: any): Promise<void>;
    checkApplyButtonIsDisabled(): this;
    checkProviderDropdownIsDisplayed(): void;
    checkValidationMessageIsDisplayed(): void;
    checkProviderOptions(): void;
    getBasicAuthRadioButton(): import("protractor/built/element").ElementFinder;
    getSsoRadioButton(): import("protractor/built/element").ElementFinder;
    getBackButton(): import("protractor/built/element").ElementFinder;
    getApplyButton(): import("protractor/built/element").ElementFinder;
    checkBasicAuthRadioIsSelected(): void;
    checkSsoRadioIsNotSelected(): void;
}
