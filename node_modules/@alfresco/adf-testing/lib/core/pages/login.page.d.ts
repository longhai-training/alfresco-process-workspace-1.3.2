/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { FormControllersPage } from './form-controller.page';
export declare class LoginPage {
    loginURL: string;
    formControllersPage: FormControllersPage;
    txtUsername: import("protractor/built/element").ElementFinder;
    txtPassword: import("protractor/built/element").ElementFinder;
    logoImg: import("protractor/built/element").ElementFinder;
    successRouteTxt: import("protractor/built/element").ElementFinder;
    logoTxt: import("protractor/built/element").ElementFinder;
    usernameTooltip: import("protractor/built/element").ElementFinder;
    passwordTooltip: import("protractor/built/element").ElementFinder;
    loginTooltip: import("protractor/built/element").ElementFinder;
    usernameInactive: import("protractor/built/element").ElementFinder;
    passwordInactive: import("protractor/built/element").ElementFinder;
    adfLogo: import("protractor/built/element").ElementFinder;
    usernameHighlighted: import("protractor/built/element").ElementFinder;
    passwordHighlighted: import("protractor/built/element").ElementFinder;
    signInButton: import("protractor/built/element").ElementFinder;
    showPasswordElement: import("protractor/built/element").ElementFinder;
    hidePasswordElement: import("protractor/built/element").ElementFinder;
    rememberMe: import("protractor/built/element").ElementFinder;
    needHelp: import("protractor/built/element").ElementFinder;
    register: import("protractor/built/element").ElementFinder;
    footerSwitch: import("protractor/built/element").ElementFinder;
    rememberMeSwitch: import("protractor/built/element").ElementFinder;
    successRouteSwitch: import("protractor/built/element").ElementFinder;
    logoSwitch: import("protractor/built/element").ElementFinder;
    header: import("protractor/built/element").ElementFinder;
    settingsIcon: import("protractor/built/element").ElementFinder;
    goToLoginPage(): this;
    waitForElements(): this;
    enterUsername(username: any): import("selenium-webdriver").promise.Promise<void>;
    enterPassword(password: any): import("selenium-webdriver").promise.Promise<void>;
    clearUsername(): this;
    clearPassword(): void;
    getUsernameTooltip(): import("selenium-webdriver").promise.Promise<string>;
    getPasswordTooltip(): import("selenium-webdriver").promise.Promise<string>;
    getLoginError(): import("selenium-webdriver").promise.Promise<string>;
    checkLoginImgURL(): import("selenium-webdriver").promise.Promise<string>;
    checkUsernameInactive(): void;
    checkPasswordInactive(): void;
    checkUsernameHighlighted(): void;
    checkPasswordHighlighted(): void;
    checkUsernameTooltipIsNotVisible(): void;
    checkPasswordTooltipIsNotVisible(): void;
    getSignInButtonIsEnabled(): import("selenium-webdriver").promise.Promise<boolean>;
    loginToProcessServicesUsingUserModel(userModel: any): Promise<void>;
    loginToContentServicesUsingUserModel(userModel: any): Promise<void>;
    loginToContentServices(username: any, password: any): Promise<void>;
    clickSignInButton(): void;
    clickSettingsIcon(): void;
    showPassword(): void;
    hidePassword(): void;
    getShownPassword(): import("selenium-webdriver").promise.Promise<string>;
    checkPasswordIsHidden(): void;
    checkRememberIsDisplayed(): void;
    checkRememberIsNotDisplayed(): void;
    checkNeedHelpIsDisplayed(): void;
    checkNeedHelpIsNotDisplayed(): void;
    checkRegisterDisplayed(): void;
    checkRegisterIsNotDisplayed(): void;
    enableFooter(): void;
    disableFooter(): void;
    disableRememberMe(): void;
    enableSuccessRouteSwitch(): void;
    enableLogoSwitch(): void;
    enterSuccessRoute(route: any): import("selenium-webdriver").promise.Promise<void>;
    enterLogo(logo: any): import("selenium-webdriver").promise.Promise<void>;
    login(username: any, password: any): import("selenium-webdriver").promise.Promise<boolean>;
}
