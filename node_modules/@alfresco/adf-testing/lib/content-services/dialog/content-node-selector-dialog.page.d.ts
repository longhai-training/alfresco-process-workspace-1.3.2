/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { DocumentListPage } from '../pages/document-list.page';
export declare class ContentNodeSelectorDialogPage {
    dialog: import("protractor/built/element").ElementFinder;
    header: import("protractor/built/element").ElementFinder;
    searchInputElement: import("protractor/built/element").ElementFinder;
    searchLabel: import("protractor/built/element").ElementFinder;
    siteListDropdown: import("protractor/built/element").ElementFinder;
    cancelButton: import("protractor/built/element").ElementFinder;
    moveCopyButton: import("protractor/built/element").ElementFinder;
    contentList: DocumentListPage;
    checkDialogIsDisplayed(): this;
    checkDialogIsNotDisplayed(): this;
    getDialogHeaderText(): import("selenium-webdriver").promise.Promise<string>;
    checkSearchInputIsDisplayed(): this;
    getSearchLabel(): import("selenium-webdriver").promise.Promise<string>;
    checkSelectedSiteIsDisplayed(siteName: any): void;
    checkCancelButtonIsDisplayed(): void;
    clickCancelButton(): import("selenium-webdriver").promise.Promise<void>;
    checkMoveCopyButtonIsDisplayed(): void;
    getMoveCopyButtonText(): import("selenium-webdriver").promise.Promise<string>;
    clickMoveCopyButton(): import("selenium-webdriver").promise.Promise<void>;
    numberOfResultsDisplayed(): import("selenium-webdriver").promise.Promise<number>;
    typeIntoNodeSelectorSearchField(text: any): void;
    clickContentNodeSelectorResult(name: any): void;
    contentListPage(): DocumentListPage;
}
