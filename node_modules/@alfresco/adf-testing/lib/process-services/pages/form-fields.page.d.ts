/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare class FormFieldsPage {
    formContent: import("protractor/built/element").ElementFinder;
    refreshButton: import("protractor/built/element").ElementFinder;
    saveButton: import("protractor/built/element").ElementFinder;
    valueLocator: import("selenium-webdriver").By;
    labelLocator: import("selenium-webdriver").By;
    noFormMessage: import("protractor/built/element").ElementFinder;
    completedTaskNoFormMessage: import("protractor/built/element").ElementFinder;
    attachFormButton: import("protractor/built/element").ElementFinder;
    selectFormDropDownArrow: import("protractor/built/element").ElementFinder;
    selectFormContent: import("protractor/built/element").ElementFinder;
    completeButton: import("protractor/built/element").ElementFinder;
    errorMessage: import("selenium-webdriver").By;
    setFieldValue(locator: any, field: any, value: any): this;
    checkWidgetIsVisible(fieldId: any): void;
    checkWidgetIsHidden(fieldId: any): void;
    getWidget(fieldId: any): import("protractor/built/element").ElementFinder;
    getFieldValue(fieldId: any, valueLocatorParam: any): import("selenium-webdriver").promise.Promise<string>;
    getFieldLabel(fieldId: any, labelLocatorParam: any): import("selenium-webdriver").promise.Promise<string>;
    getFieldErrorMessage(fieldId: any): import("selenium-webdriver").promise.Promise<string>;
    getFieldText(fieldId: any, labelLocatorParam: any): import("selenium-webdriver").promise.Promise<string>;
    getFieldPlaceHolder(fieldId: any, locator?: string): import("selenium-webdriver").promise.Promise<string>;
    checkFieldValue(locator: any, field: any, val: any): this;
    refreshForm(): this;
    saveForm(): this;
    noFormIsDisplayed(): this;
    checkFormIsDisplayed(): this;
    getNoFormMessage(): import("selenium-webdriver").promise.Promise<string>;
    getCompletedTaskNoFormMessage(): import("selenium-webdriver").promise.Promise<string>;
    clickOnAttachFormButton(): this;
    selectForm(formName: any): this;
    selectFormFromDropDown(formName: any): void;
    checkWidgetIsReadOnlyMode(fieldId: any): import("protractor/built/element").ElementFinder;
    completeForm(): import("selenium-webdriver").promise.Promise<void>;
    setValueInInputById(fieldId: any, value: any): this;
    isCompleteFormButtonDisabled(): import("selenium-webdriver").promise.Promise<string>;
}
