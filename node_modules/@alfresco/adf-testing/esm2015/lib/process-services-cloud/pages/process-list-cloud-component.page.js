/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BrowserVisibility } from '../../core/utils/browser-visibility';
import { DataTableComponentPage } from '../../core/pages/data-table-component.page';
import { element, by } from 'protractor';
export class ProcessListCloudComponentPage {
    constructor() {
        this.columns = {
            id: 'Id',
            name: 'Name'
        };
        this.processList = element(by.css('adf-cloud-process-list'));
        this.noProcessFound = element.all(by.css("div[class='adf-empty-content__title']")).first();
        this.dataTable = new DataTableComponentPage(this.processList);
    }
    /**
     * @return {?}
     */
    getDataTable() {
        return this.dataTable;
    }
    /**
     * @param {?} processName
     * @return {?}
     */
    selectRow(processName) {
        return this.dataTable.selectRow(this.columns.name, processName);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    selectRowById(processId) {
        return this.dataTable.selectRow(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkRowIsSelectedById(processId) {
        return this.dataTable.checkRowIsSelected(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkRowIsNotSelectedById(processId) {
        return this.dataTable.checkRowIsNotSelected(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkRowIsCheckedById(processId) {
        return this.dataTable.checkRowIsChecked(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkRowIsNotCheckedById(processId) {
        return this.dataTable.checkRowIsNotChecked(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkCheckboxById(processId) {
        return this.dataTable.clickCheckbox(this.columns.id, processId);
    }
    /**
     * @param {?} processName
     * @return {?}
     */
    checkContentIsDisplayedByName(processName) {
        return this.dataTable.checkContentIsDisplayed(this.columns.name, processName);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkContentIsDisplayedById(processId) {
        return this.dataTable.checkContentIsDisplayed(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    checkContentIsNotDisplayedById(processId) {
        return this.dataTable.checkContentIsNotDisplayed(this.columns.id, processId);
    }
    /**
     * @param {?} processId
     * @return {?}
     */
    selectRowWithKeyboard(processId) {
        return this.dataTable.selectRowWithKeyboard(this.columns.id, processId);
    }
    /**
     * @return {?}
     */
    getAllRowsNameColumn() {
        return this.dataTable.getAllRowsColumnValues(this.columns.name);
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    checkProcessListIsLoaded() {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).processList);
        return (/** @type {?} */ (this));
    }
    /**
     * @return {?}
     */
    getNoProcessFoundMessage() {
        BrowserVisibility.waitUntilElementIsVisible(this.noProcessFound);
        return this.noProcessFound.getText();
    }
    /**
     * @param {?} column
     * @return {?}
     */
    getAllRowsByColumn(column) {
        return this.dataTable.getAllRowsColumnValues(column);
    }
}
if (false) {
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.columns;
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.processList;
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.noProcessFound;
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.dataTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1saXN0LWNsb3VkLWNvbXBvbmVudC5wYWdlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi10ZXN0aW5nLyIsInNvdXJjZXMiOlsibGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvcGFnZXMvcHJvY2Vzcy1saXN0LWNsb3VkLWNvbXBvbmVudC5wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXpDLE1BQU0sT0FBTyw2QkFBNkI7SUFBMUM7UUFFSSxZQUFPLEdBQUc7WUFDTixFQUFFLEVBQUUsSUFBSTtZQUNSLElBQUksRUFBRSxNQUFNO1NBQ2YsQ0FBQztRQUVGLGdCQUFXLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO1FBQ3hELG1CQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLHVDQUF1QyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUV0RixjQUFTLEdBQUcsSUFBSSxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFvRTdELENBQUM7Ozs7SUFsRUcsWUFBWTtRQUNSLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDOzs7OztJQUVELFNBQVMsQ0FBQyxXQUFXO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7Ozs7SUFFRCxhQUFhLENBQUMsU0FBUztRQUNuQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Ozs7O0lBRUQsc0JBQXNCLENBQUMsU0FBUztRQUM1QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDekUsQ0FBQzs7Ozs7SUFFRCx5QkFBeUIsQ0FBQyxTQUFTO1FBQy9CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1RSxDQUFDOzs7OztJQUVELHFCQUFxQixDQUFDLFNBQVM7UUFDM0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7Ozs7O0lBRUQsd0JBQXdCLENBQUMsU0FBUztRQUM5QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDM0UsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxTQUFTO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7Ozs7SUFFRCw2QkFBNkIsQ0FBQyxXQUFXO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsRixDQUFDOzs7OztJQUVELDJCQUEyQixDQUFDLFNBQVM7UUFDakMsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzlFLENBQUM7Ozs7O0lBRUQsOEJBQThCLENBQUMsU0FBUztRQUNwQyxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDakYsQ0FBQzs7Ozs7SUFFRCxxQkFBcUIsQ0FBQyxTQUFTO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1RSxDQUFDOzs7O0lBRUQsb0JBQW9CO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BFLENBQUM7Ozs7OztJQUVELHdCQUF3QjtRQUNwQixpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM5RCxPQUFPLG1CQUFBLElBQUksRUFBQSxDQUFDO0lBQ2hCLENBQUM7Ozs7SUFFRCx3QkFBd0I7UUFDcEIsaUJBQWlCLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2pFLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN6QyxDQUFDOzs7OztJQUVELGtCQUFrQixDQUFDLE1BQU07UUFDckIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLHNCQUFzQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3pELENBQUM7Q0FFSjs7O0lBNUVHLGdEQUdFOztJQUVGLG9EQUF3RDs7SUFDeEQsdURBQXNGOztJQUV0RixrREFBeUQiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBCcm93c2VyVmlzaWJpbGl0eSB9IGZyb20gJy4uLy4uL2NvcmUvdXRpbHMvYnJvd3Nlci12aXNpYmlsaXR5JztcbmltcG9ydCB7IERhdGFUYWJsZUNvbXBvbmVudFBhZ2UgfSBmcm9tICcuLi8uLi9jb3JlL3BhZ2VzL2RhdGEtdGFibGUtY29tcG9uZW50LnBhZ2UnO1xuaW1wb3J0IHsgZWxlbWVudCwgYnkgfSBmcm9tICdwcm90cmFjdG9yJztcblxuZXhwb3J0IGNsYXNzIFByb2Nlc3NMaXN0Q2xvdWRDb21wb25lbnRQYWdlIHtcblxuICAgIGNvbHVtbnMgPSB7XG4gICAgICAgIGlkOiAnSWQnLFxuICAgICAgICBuYW1lOiAnTmFtZSdcbiAgICB9O1xuXG4gICAgcHJvY2Vzc0xpc3QgPSBlbGVtZW50KGJ5LmNzcygnYWRmLWNsb3VkLXByb2Nlc3MtbGlzdCcpKTtcbiAgICBub1Byb2Nlc3NGb3VuZCA9IGVsZW1lbnQuYWxsKGJ5LmNzcyhcImRpdltjbGFzcz0nYWRmLWVtcHR5LWNvbnRlbnRfX3RpdGxlJ11cIikpLmZpcnN0KCk7XG5cbiAgICBkYXRhVGFibGUgPSBuZXcgRGF0YVRhYmxlQ29tcG9uZW50UGFnZSh0aGlzLnByb2Nlc3NMaXN0KTtcblxuICAgIGdldERhdGFUYWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlO1xuICAgIH1cblxuICAgIHNlbGVjdFJvdyhwcm9jZXNzTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUuc2VsZWN0Um93KHRoaXMuY29sdW1ucy5uYW1lLCBwcm9jZXNzTmFtZSk7XG4gICAgfVxuXG4gICAgc2VsZWN0Um93QnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLnNlbGVjdFJvdyh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgY2hlY2tSb3dJc1NlbGVjdGVkQnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmNoZWNrUm93SXNTZWxlY3RlZCh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgY2hlY2tSb3dJc05vdFNlbGVjdGVkQnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmNoZWNrUm93SXNOb3RTZWxlY3RlZCh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgY2hlY2tSb3dJc0NoZWNrZWRCeUlkKHByb2Nlc3NJZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUuY2hlY2tSb3dJc0NoZWNrZWQodGhpcy5jb2x1bW5zLmlkLCBwcm9jZXNzSWQpO1xuICAgIH1cblxuICAgIGNoZWNrUm93SXNOb3RDaGVja2VkQnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmNoZWNrUm93SXNOb3RDaGVja2VkKHRoaXMuY29sdW1ucy5pZCwgcHJvY2Vzc0lkKTtcbiAgICB9XG5cbiAgICBjaGVja0NoZWNrYm94QnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmNsaWNrQ2hlY2tib3godGhpcy5jb2x1bW5zLmlkLCBwcm9jZXNzSWQpO1xuICAgIH1cblxuICAgIGNoZWNrQ29udGVudElzRGlzcGxheWVkQnlOYW1lKHByb2Nlc3NOYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jaGVja0NvbnRlbnRJc0Rpc3BsYXllZCh0aGlzLmNvbHVtbnMubmFtZSwgcHJvY2Vzc05hbWUpO1xuICAgIH1cblxuICAgIGNoZWNrQ29udGVudElzRGlzcGxheWVkQnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmNoZWNrQ29udGVudElzRGlzcGxheWVkKHRoaXMuY29sdW1ucy5pZCwgcHJvY2Vzc0lkKTtcbiAgICB9XG5cbiAgICBjaGVja0NvbnRlbnRJc05vdERpc3BsYXllZEJ5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jaGVja0NvbnRlbnRJc05vdERpc3BsYXllZCh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgc2VsZWN0Um93V2l0aEtleWJvYXJkKHByb2Nlc3NJZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUuc2VsZWN0Um93V2l0aEtleWJvYXJkKHRoaXMuY29sdW1ucy5pZCwgcHJvY2Vzc0lkKTtcbiAgICB9XG5cbiAgICBnZXRBbGxSb3dzTmFtZUNvbHVtbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmdldEFsbFJvd3NDb2x1bW5WYWx1ZXModGhpcy5jb2x1bW5zLm5hbWUpO1xuICAgIH1cblxuICAgIGNoZWNrUHJvY2Vzc0xpc3RJc0xvYWRlZCgpIHtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzVmlzaWJsZSh0aGlzLnByb2Nlc3NMaXN0KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgZ2V0Tm9Qcm9jZXNzRm91bmRNZXNzYWdlKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMubm9Qcm9jZXNzRm91bmQpO1xuICAgICAgICByZXR1cm4gdGhpcy5ub1Byb2Nlc3NGb3VuZC5nZXRUZXh0KCk7XG4gICAgfVxuXG4gICAgZ2V0QWxsUm93c0J5Q29sdW1uKGNvbHVtbikge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUuZ2V0QWxsUm93c0NvbHVtblZhbHVlcyhjb2x1bW4pO1xuICAgIH1cblxufVxuIl19