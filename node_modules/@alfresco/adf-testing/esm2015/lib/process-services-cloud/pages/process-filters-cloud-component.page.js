/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { by } from 'protractor';
import { BrowserVisibility } from '../../core/utils/browser-visibility';
export class ProcessFiltersCloudComponentPage {
    /**
     * @param {?} filter
     */
    constructor(filter) {
        this.filterIcon = by.xpath("ancestor::div[@class='mat-list-item-content']/mat-icon");
        this.filter = filter;
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    checkProcessFilterIsDisplayed() {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).filter);
        return (/** @type {?} */ (this));
    }
    /**
     * @return {?}
     */
    getProcessFilterIcon() {
        BrowserVisibility.waitUntilElementIsVisible(this.filter);
        /** @type {?} */
        const icon = this.filter.element(this.filterIcon);
        BrowserVisibility.waitUntilElementIsVisible(icon);
        return icon.getText();
    }
    /**
     * @return {?}
     */
    checkProcessFilterHasNoIcon() {
        BrowserVisibility.waitUntilElementIsVisible(this.filter);
        BrowserVisibility.waitUntilElementIsNotOnPage(this.filter.element(this.filterIcon));
    }
    /**
     * @return {?}
     */
    clickProcessFilter() {
        BrowserVisibility.waitUntilElementIsVisible(this.filter);
        BrowserVisibility.waitUntilElementIsClickable(this.filter);
        return this.filter.click();
    }
    /**
     * @return {?}
     */
    checkProcessFilterNotDisplayed() {
        BrowserVisibility.waitUntilElementIsNotVisible(this.filter);
        return this.filter;
    }
}
if (false) {
    /** @type {?} */
    ProcessFiltersCloudComponentPage.prototype.filter;
    /** @type {?} */
    ProcessFiltersCloudComponentPage.prototype.filterIcon;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1maWx0ZXJzLWNsb3VkLWNvbXBvbmVudC5wYWdlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi10ZXN0aW5nLyIsInNvdXJjZXMiOlsibGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvcGFnZXMvcHJvY2Vzcy1maWx0ZXJzLWNsb3VkLWNvbXBvbmVudC5wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDaEMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFFeEUsTUFBTSxPQUFPLGdDQUFnQzs7OztJQUt6QyxZQUFZLE1BQU07UUFGbEIsZUFBVSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsd0RBQXdELENBQUMsQ0FBQztRQUc1RSxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN6QixDQUFDOzs7Ozs7SUFFRCw2QkFBNkI7UUFDekIsaUJBQWlCLENBQUMseUJBQXlCLENBQUMsbUJBQUEsSUFBSSxFQUFBLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekQsT0FBTyxtQkFBQSxJQUFJLEVBQUEsQ0FBQztJQUNoQixDQUFDOzs7O0lBRUQsb0JBQW9CO1FBQ2hCLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzs7Y0FDbkQsSUFBSSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDakQsaUJBQWlCLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEQsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDMUIsQ0FBQzs7OztJQUVELDJCQUEyQjtRQUN2QixpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekQsaUJBQWlCLENBQUMsMkJBQTJCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFDeEYsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNkLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN6RCxpQkFBaUIsQ0FBQywyQkFBMkIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQy9CLENBQUM7Ozs7SUFFRCw4QkFBOEI7UUFDMUIsaUJBQWlCLENBQUMsNEJBQTRCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUN2QixDQUFDO0NBRUo7OztJQW5DRyxrREFBTzs7SUFDUCxzREFBZ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBieSB9IGZyb20gJ3Byb3RyYWN0b3InO1xuaW1wb3J0IHsgQnJvd3NlclZpc2liaWxpdHkgfSBmcm9tICcuLi8uLi9jb3JlL3V0aWxzL2Jyb3dzZXItdmlzaWJpbGl0eSc7XG5cbmV4cG9ydCBjbGFzcyBQcm9jZXNzRmlsdGVyc0Nsb3VkQ29tcG9uZW50UGFnZSB7XG5cbiAgICBmaWx0ZXI7XG4gICAgZmlsdGVySWNvbiA9IGJ5LnhwYXRoKFwiYW5jZXN0b3I6OmRpdltAY2xhc3M9J21hdC1saXN0LWl0ZW0tY29udGVudCddL21hdC1pY29uXCIpO1xuXG4gICAgY29uc3RydWN0b3IoZmlsdGVyKSB7XG4gICAgICAgIHRoaXMuZmlsdGVyID0gZmlsdGVyO1xuICAgIH1cblxuICAgIGNoZWNrUHJvY2Vzc0ZpbHRlcklzRGlzcGxheWVkKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMuZmlsdGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgZ2V0UHJvY2Vzc0ZpbHRlckljb24oKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5maWx0ZXIpO1xuICAgICAgICBjb25zdCBpY29uID0gdGhpcy5maWx0ZXIuZWxlbWVudCh0aGlzLmZpbHRlckljb24pO1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKGljb24pO1xuICAgICAgICByZXR1cm4gaWNvbi5nZXRUZXh0KCk7XG4gICAgfVxuXG4gICAgY2hlY2tQcm9jZXNzRmlsdGVySGFzTm9JY29uKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMuZmlsdGVyKTtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzTm90T25QYWdlKHRoaXMuZmlsdGVyLmVsZW1lbnQodGhpcy5maWx0ZXJJY29uKSk7XG4gICAgfVxuXG4gICAgY2xpY2tQcm9jZXNzRmlsdGVyKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMuZmlsdGVyKTtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzQ2xpY2thYmxlKHRoaXMuZmlsdGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyLmNsaWNrKCk7XG4gICAgfVxuXG4gICAgY2hlY2tQcm9jZXNzRmlsdGVyTm90RGlzcGxheWVkKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNOb3RWaXNpYmxlKHRoaXMuZmlsdGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyO1xuICAgIH1cblxufVxuIl19