/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export class ProcessDefinitionsService {
    /**
     * @param {?} api
     */
    constructor(api) {
        this.api = api;
    }
    /**
     * @param {?} appName
     * @return {?}
     */
    getProcessDefinitions(appName) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            /** @type {?} */
            const path = '/' + appName + '/rb/v1/process-definitions';
            /** @type {?} */
            const method = 'GET';
            /** @type {?} */
            const queryParams = {};
            try {
                /** @type {?} */
                const data = yield this.api.performBpmOperation(path, method, queryParams, {});
                return data;
            }
            catch (error) {
                if (error.status === 404) {
                    // tslint:disable-next-line:no-console
                    console.log(`${appName} not present`);
                }
                else if (error.status === 403) {
                    // tslint:disable-next-line:no-console
                    console.log(`Access to the requested resource has been denied ${appName}`);
                }
            }
        });
    }
}
if (false) {
    /** @type {?} */
    ProcessDefinitionsService.prototype.api;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1kZWZpbml0aW9ucy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi10ZXN0aW5nLyIsInNvdXJjZXMiOlsibGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvYWN0aW9ucy9wcm9jZXNzLWRlZmluaXRpb25zLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJBLE1BQU0sT0FBTyx5QkFBeUI7Ozs7SUFJbEMsWUFBWSxHQUFlO1FBQ3ZCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO0lBQ25CLENBQUM7Ozs7O0lBRUsscUJBQXFCLENBQUMsT0FBTzs7O2tCQUN6QixJQUFJLEdBQUcsR0FBRyxHQUFHLE9BQU8sR0FBRyw0QkFBNEI7O2tCQUNuRCxNQUFNLEdBQUcsS0FBSzs7a0JBRWQsV0FBVyxHQUFHLEVBQUU7WUFFdEIsSUFBSTs7c0JBQ00sSUFBSSxHQUFHLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxFQUFFLENBQUM7Z0JBQzlFLE9BQU8sSUFBSSxDQUFDO2FBQ2Y7WUFBQyxPQUFPLEtBQUssRUFBRTtnQkFDWixJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFO29CQUN0QixzQ0FBc0M7b0JBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLGNBQWMsQ0FBQyxDQUFDO2lCQUN6QztxQkFBTSxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFO29CQUM3QixzQ0FBc0M7b0JBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0RBQW9ELE9BQU8sRUFBRSxDQUFDLENBQUM7aUJBQzlFO2FBQ0o7UUFDTCxDQUFDO0tBQUE7Q0FDSjs7O0lBekJHLHdDQUFnQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEFwaVNlcnZpY2UgfSBmcm9tICcuLi8uLi9jb3JlL2FjdGlvbnMvYXBpLnNlcnZpY2UnO1xuXG5leHBvcnQgY2xhc3MgUHJvY2Vzc0RlZmluaXRpb25zU2VydmljZSB7XG5cbiAgICBhcGk6IEFwaVNlcnZpY2U7XG5cbiAgICBjb25zdHJ1Y3RvcihhcGk6IEFwaVNlcnZpY2UpIHtcbiAgICAgICAgdGhpcy5hcGkgPSBhcGk7XG4gICAgfVxuXG4gICAgYXN5bmMgZ2V0UHJvY2Vzc0RlZmluaXRpb25zKGFwcE5hbWUpIHtcbiAgICAgICAgY29uc3QgcGF0aCA9ICcvJyArIGFwcE5hbWUgKyAnL3JiL3YxL3Byb2Nlc3MtZGVmaW5pdGlvbnMnO1xuICAgICAgICBjb25zdCBtZXRob2QgPSAnR0VUJztcblxuICAgICAgICBjb25zdCBxdWVyeVBhcmFtcyA9IHt9O1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5hcGkucGVyZm9ybUJwbU9wZXJhdGlvbihwYXRoLCBtZXRob2QsIHF1ZXJ5UGFyYW1zLCB7fSk7XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGlmIChlcnJvci5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICAgICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1jb25zb2xlXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYCR7YXBwTmFtZX0gbm90IHByZXNlbnRgKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZXJyb3Iuc3RhdHVzID09PSA0MDMpIHtcbiAgICAgICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tY29uc29sZVxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGBBY2Nlc3MgdG8gdGhlIHJlcXVlc3RlZCByZXNvdXJjZSBoYXMgYmVlbiBkZW5pZWQgJHthcHBOYW1lfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl19