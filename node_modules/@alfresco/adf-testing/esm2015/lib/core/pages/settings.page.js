/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { browser, by, element, protractor } from 'protractor';
import { BrowserVisibility } from '../utils/browser-visibility';
export class SettingsPage {
    constructor() {
        this.settingsURL = browser.baseUrl + '/settings';
        this.providerDropdown = element(by.css('mat-select[id="adf-provider-selector"] div[class="mat-select-arrow-wrapper"]'));
        this.ecmAndBpm = {
            option: element(by.xpath('//SPAN[@class="mat-option-text"][contains(text(),"ALL")]')),
            text: 'ALL'
        };
        this.bpm = {
            option: element(by.xpath('//SPAN[@class="mat-option-text"][contains(text(),"BPM") and not (contains(text(),"and"))]')),
            text: 'BPM'
        };
        this.ecm = {
            option: element(by.xpath('//SPAN[@class="mat-option-text"][contains(text(),"ECM") and not (contains(text(),"and"))]')),
            text: 'ECM'
        };
        this.oauth = {
            option: element(by.xpath('//SPAN[@class="mat-option-text"][contains(text(),"OAUTH")]')),
            text: 'OAUTH'
        };
        this.selectedOption = element(by.css('span[class*="mat-select-value-text"]'));
        this.ecmText = element(by.css('input[data-automation-id*="ecmHost"]'));
        this.bpmText = element(by.css('input[data-automation-id*="bpmHost"]'));
        this.clientIdText = element(by.css('input[id="clientId"]'));
        this.authHostText = element(by.css('input[id="oauthHost"]'));
        this.logoutUrlText = element(by.css('input[id="logout-url"]'));
        this.basicAuthRadioButton = element(by.cssContainingText('mat-radio-button[id*="mat-radio"]', 'Basic Authentication'));
        this.identityHostText = element(by.css('input[id="identityHost"]'));
        this.ssoRadioButton = element(by.cssContainingText('[id*="mat-radio"]', 'SSO'));
        this.silentLoginToggleLabel = element(by.css('mat-slide-toggle[name="silentLogin"] label'));
        this.silentLoginToggleElement = element(by.css('mat-slide-toggle[name="silentLogin"]'));
        this.implicitFlowLabel = element(by.css('mat-slide-toggle[name="implicitFlow"] label'));
        this.implicitFlowElement = element(by.css('mat-slide-toggle[name="implicitFlow"]'));
        this.applyButton = element(by.css('button[data-automation-id*="host-button"]'));
        this.backButton = element(by.cssContainingText('button span[class="mat-button-wrapper"]', 'Back'));
        this.validationMessage = element(by.cssContainingText('mat-error', 'This field is required'));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    goToSettingsPage() {
        browser.waitForAngularEnabled(true);
        browser.driver.get((/** @type {?} */ (this)).settingsURL);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).providerDropdown);
        return (/** @type {?} */ (this));
    }
    /**
     * @param {?} option
     * @param {?} selected
     * @return {?}
     */
    setProvider(option, selected) {
        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);
        this.providerDropdown.click();
        BrowserVisibility.waitUntilElementIsVisible(option);
        option.click();
        return expect(this.selectedOption.getText()).toEqual(selected);
    }
    /**
     * @return {?}
     */
    getSelectedOptionText() {
        return this.selectedOption.getText();
    }
    /**
     * @return {?}
     */
    getBpmHostUrl() {
        return this.bpmText.getAttribute('value');
    }
    /**
     * @return {?}
     */
    getEcmHostUrl() {
        return this.ecmText.getAttribute('value');
    }
    /**
     * @return {?}
     */
    getBpmOption() {
        return this.bpm.option;
    }
    /**
     * @return {?}
     */
    getEcmOption() {
        return this.ecm.option;
    }
    /**
     * @return {?}
     */
    getEcmAndBpmOption() {
        return this.ecmAndBpm.option;
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    setProviderEcmBpm() {
        (/** @type {?} */ (this)).goToSettingsPage();
        (/** @type {?} */ (this)).setProvider((/** @type {?} */ (this)).ecmAndBpm.option, (/** @type {?} */ (this)).ecmAndBpm.text);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).bpmText);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).ecmText);
        (/** @type {?} */ (this)).clickApply();
        return (/** @type {?} */ (this));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    setProviderBpm() {
        (/** @type {?} */ (this)).goToSettingsPage();
        (/** @type {?} */ (this)).setProvider((/** @type {?} */ (this)).bpm.option, (/** @type {?} */ (this)).bpm.text);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).bpmText);
        (/** @type {?} */ (this)).clickApply();
        return (/** @type {?} */ (this));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    setProviderEcm() {
        (/** @type {?} */ (this)).goToSettingsPage();
        (/** @type {?} */ (this)).setProvider((/** @type {?} */ (this)).ecm.option, (/** @type {?} */ (this)).ecm.text);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).ecmText);
        expect((/** @type {?} */ (this)).bpmText.isPresent()).toBeFalsy();
        (/** @type {?} */ (this)).clickApply();
        return (/** @type {?} */ (this));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    setProviderOauth() {
        (/** @type {?} */ (this)).goToSettingsPage();
        (/** @type {?} */ (this)).setProvider((/** @type {?} */ (this)).oauth.option, (/** @type {?} */ (this)).oauth.text);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).bpmText);
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).ecmText);
        expect((/** @type {?} */ (this)).authHostText.isPresent()).toBeTruthy();
        (/** @type {?} */ (this)).clickApply();
        return (/** @type {?} */ (this));
    }
    /**
     * @return {?}
     */
    clickBackButton() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.backButton);
            yield this.backButton.click();
        });
    }
    /**
     * @return {?}
     */
    clickSsoRadioButton() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.ssoRadioButton);
            yield this.ssoRadioButton.click();
        });
    }
    /**
     * @param {?} contentServiceURL
     * @param {?} authHost
     * @param {?} identityHost
     * @param {?=} silentLogin
     * @param {?=} implicitFlow
     * @param {?=} clientId
     * @param {?=} logoutUr
     * @return {?}
     */
    setProviderEcmSso(contentServiceURL, authHost, identityHost, silentLogin = true, implicitFlow = true, clientId, logoutUr = '/logout') {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.goToSettingsPage();
            this.setProvider(this.ecm.option, this.ecm.text);
            BrowserVisibility.waitUntilElementIsNotOnPage(this.bpmText);
            BrowserVisibility.waitUntilElementIsVisible(this.ecmText);
            yield this.clickSsoRadioButton();
            yield this.setClientId(clientId);
            yield this.setContentServicesURL(contentServiceURL);
            yield this.setAuthHost(authHost);
            yield this.setIdentityHost(identityHost);
            yield this.setSilentLogin(silentLogin);
            yield this.setImplicitFlow(implicitFlow);
            yield this.setLogoutUrl(logoutUr);
            yield this.clickApply();
        });
    }
    /**
     * @param {?} processServiceURL
     * @param {?} authHost
     * @param {?} identityHost
     * @param {?=} silentLogin
     * @param {?=} implicitFlow
     * @return {?}
     */
    setProviderBpmSso(processServiceURL, authHost, identityHost, silentLogin = true, implicitFlow = true) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.goToSettingsPage();
            this.setProvider(this.bpm.option, this.bpm.text);
            BrowserVisibility.waitUntilElementIsVisible(this.bpmText);
            BrowserVisibility.waitUntilElementIsNotOnPage(this.ecmText);
            yield this.clickSsoRadioButton();
            yield this.setClientId();
            yield this.setProcessServicesURL(processServiceURL);
            yield this.setAuthHost(authHost);
            yield this.setIdentityHost(identityHost);
            yield this.setSilentLogin(silentLogin);
            yield this.setImplicitFlow(implicitFlow);
            yield this.clickApply();
        });
    }
    /**
     * @param {?} logoutUrl
     * @return {?}
     */
    setLogoutUrl(logoutUrl) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsPresent(this.logoutUrlText);
            this.logoutUrlText.clear();
            this.logoutUrlText.sendKeys(logoutUrl);
        });
    }
    /**
     * @param {?} processServiceURL
     * @return {?}
     */
    setProcessServicesURL(processServiceURL) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.bpmText);
            this.bpmText.clear();
            this.bpmText.sendKeys(processServiceURL);
        });
    }
    /**
     * @param {?=} clientId
     * @return {?}
     */
    setClientId(clientId = browser.params.config.oauth2.clientId) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.clientIdText);
            this.clientIdText.clear();
            this.clientIdText.sendKeys(clientId);
        });
    }
    /**
     * @param {?} contentServiceURL
     * @return {?}
     */
    setContentServicesURL(contentServiceURL) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsClickable(this.ecmText);
            this.ecmText.clear();
            this.ecmText.sendKeys(contentServiceURL);
        });
    }
    /**
     * @return {?}
     */
    clearContentServicesURL() {
        BrowserVisibility.waitUntilElementIsVisible(this.ecmText);
        this.ecmText.clear();
        this.ecmText.sendKeys('a');
        this.ecmText.sendKeys(protractor.Key.BACK_SPACE);
    }
    /**
     * @return {?}
     */
    clearProcessServicesURL() {
        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);
        this.bpmText.clear();
        this.bpmText.sendKeys('a');
        this.bpmText.sendKeys(protractor.Key.BACK_SPACE);
    }
    /**
     * @param {?} authHostURL
     * @return {?}
     */
    setAuthHost(authHostURL) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.authHostText);
            yield this.authHostText.clear();
            yield this.authHostText.sendKeys(authHostURL);
        });
    }
    /**
     * @param {?} identityHost
     * @return {?}
     */
    setIdentityHost(identityHost) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.identityHostText);
            yield this.identityHostText.clear();
            yield this.identityHostText.sendKeys(identityHost);
        });
    }
    /**
     * @return {?}
     */
    clickApply() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            BrowserVisibility.waitUntilElementIsVisible(this.applyButton);
            yield this.applyButton.click();
        });
    }
    /**
     * @param {?} enableToggle
     * @return {?}
     */
    setSilentLogin(enableToggle) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield BrowserVisibility.waitUntilElementIsVisible(this.silentLoginToggleElement);
            /** @type {?} */
            const isChecked = (yield this.silentLoginToggleElement.getAttribute('class')).includes('mat-checked');
            if (isChecked && !enableToggle || !isChecked && enableToggle) {
                return this.silentLoginToggleLabel.click();
            }
            return Promise.resolve();
        });
    }
    /**
     * @param {?} enableToggle
     * @return {?}
     */
    setImplicitFlow(enableToggle) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield BrowserVisibility.waitUntilElementIsVisible(this.implicitFlowElement);
            /** @type {?} */
            const isChecked = (yield this.implicitFlowElement.getAttribute('class')).includes('mat-checked');
            if (isChecked && !enableToggle || !isChecked && enableToggle) {
                return this.implicitFlowLabel.click();
            }
            return Promise.resolve();
        });
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    checkApplyButtonIsDisabled() {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).applyButton.getAttribute('disabled'));
        return (/** @type {?} */ (this));
    }
    /**
     * @return {?}
     */
    checkProviderDropdownIsDisplayed() {
        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);
    }
    /**
     * @return {?}
     */
    checkValidationMessageIsDisplayed() {
        BrowserVisibility.waitUntilElementIsVisible(this.validationMessage);
    }
    /**
     * @return {?}
     */
    checkProviderOptions() {
        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);
        this.providerDropdown.click();
        BrowserVisibility.waitUntilElementIsVisible(this.ecmAndBpm.option);
        BrowserVisibility.waitUntilElementIsVisible(this.ecm.option);
        BrowserVisibility.waitUntilElementIsVisible(this.bpm.option);
    }
    /**
     * @return {?}
     */
    getBasicAuthRadioButton() {
        BrowserVisibility.waitUntilElementIsVisible(this.basicAuthRadioButton);
        return this.basicAuthRadioButton;
    }
    /**
     * @return {?}
     */
    getSsoRadioButton() {
        BrowserVisibility.waitUntilElementIsVisible(this.ssoRadioButton);
        return this.ssoRadioButton;
    }
    /**
     * @return {?}
     */
    getBackButton() {
        BrowserVisibility.waitUntilElementIsVisible(this.backButton);
        return this.backButton;
    }
    /**
     * @return {?}
     */
    getApplyButton() {
        BrowserVisibility.waitUntilElementIsVisible(this.applyButton);
        return this.applyButton;
    }
    /**
     * @return {?}
     */
    checkBasicAuthRadioIsSelected() {
        expect(this.getBasicAuthRadioButton().getAttribute('class')).toContain('mat-radio-checked');
    }
    /**
     * @return {?}
     */
    checkSsoRadioIsNotSelected() {
        expect(this.getSsoRadioButton().getAttribute('class')).not.toContain('mat-radio-checked');
    }
}
if (false) {
    /** @type {?} */
    SettingsPage.prototype.settingsURL;
    /** @type {?} */
    SettingsPage.prototype.providerDropdown;
    /** @type {?} */
    SettingsPage.prototype.ecmAndBpm;
    /** @type {?} */
    SettingsPage.prototype.bpm;
    /** @type {?} */
    SettingsPage.prototype.ecm;
    /** @type {?} */
    SettingsPage.prototype.oauth;
    /** @type {?} */
    SettingsPage.prototype.selectedOption;
    /** @type {?} */
    SettingsPage.prototype.ecmText;
    /** @type {?} */
    SettingsPage.prototype.bpmText;
    /** @type {?} */
    SettingsPage.prototype.clientIdText;
    /** @type {?} */
    SettingsPage.prototype.authHostText;
    /** @type {?} */
    SettingsPage.prototype.logoutUrlText;
    /** @type {?} */
    SettingsPage.prototype.basicAuthRadioButton;
    /** @type {?} */
    SettingsPage.prototype.identityHostText;
    /** @type {?} */
    SettingsPage.prototype.ssoRadioButton;
    /** @type {?} */
    SettingsPage.prototype.silentLoginToggleLabel;
    /** @type {?} */
    SettingsPage.prototype.silentLoginToggleElement;
    /** @type {?} */
    SettingsPage.prototype.implicitFlowLabel;
    /** @type {?} */
    SettingsPage.prototype.implicitFlowElement;
    /** @type {?} */
    SettingsPage.prototype.applyButton;
    /** @type {?} */
    SettingsPage.prototype.backButton;
    /** @type {?} */
    SettingsPage.prototype.validationMessage;
}
//# sourceMappingURL=data:application/json;base64,