/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { element, by, protractor } from 'protractor';
import { BrowserVisibility } from '../utils/browser-visibility';
export class HeaderPage {
    constructor() {
        this.checkBox = element(by.cssContainingText('.mat-checkbox-label', 'Show menu button'));
        this.headerColor = element(by.css('option[value="primary"]'));
        this.titleInput = element(by.css('input[name="title"]'));
        this.iconInput = element(by.css('input[placeholder="URL path"]'));
        this.hexColorInput = element(by.css('input[placeholder="hex color code"]'));
        this.logoHyperlinkInput = element(by.css('input[placeholder="Redirect URL"]'));
        this.logoTooltipInput = element(by.css('input[placeholder="Tooltip text"]'));
        this.positionStart = element.all(by.css('mat-radio-button[value="start"]')).first();
        this.positionEnd = element.all(by.css('mat-radio-button[value="end"]')).first();
        this.sideBarPositionRight = element(by.css('mat-sidenav.mat-drawer.mat-sidenav.mat-drawer-end'));
        this.sideBarPositionLeft = element(by.css('mat-sidenav.mat-drawer.mat-sidenav'));
    }
    /**
     * @return {?}
     */
    checkShowMenuCheckBoxIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.checkBox);
    }
    /**
     * @return {?}
     */
    checkChooseHeaderColourIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.headerColor);
    }
    /**
     * @return {?}
     */
    checkChangeTitleIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.titleInput);
    }
    /**
     * @return {?}
     */
    checkChangeUrlPathIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.iconInput);
    }
    /**
     * @return {?}
     */
    clickShowMenuButton() {
        /** @type {?} */
        const checkBox = element.all(by.css('mat-checkbox'));
        BrowserVisibility.waitUntilElementIsVisible(checkBox);
        return checkBox.get(0).click();
    }
    /**
     * @param {?} color
     * @return {?}
     */
    changeHeaderColor(color) {
        /** @type {?} */
        const headerColor = element(by.css('option[value="' + color + '"]'));
        return headerColor.click();
    }
    /**
     * @param {?} name
     * @return {?}
     */
    checkAppTitle(name) {
        /** @type {?} */
        const title = element(by.cssContainingText('.adf-app-title', name));
        return BrowserVisibility.waitUntilElementIsVisible(title);
    }
    /**
     * @param {?} title
     * @return {?}
     */
    addTitle(title) {
        BrowserVisibility.waitUntilElementIsVisible(this.titleInput);
        this.titleInput.click();
        this.titleInput.sendKeys(title);
        this.titleInput.sendKeys(protractor.Key.ENTER);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    checkIconIsDisplayed(url) {
        /** @type {?} */
        const icon = element(by.css('img[src="' + url + '"]'));
        BrowserVisibility.waitUntilElementIsVisible(icon);
    }
    /**
     * @param {?} url
     * @return {?}
     */
    addIcon(url) {
        BrowserVisibility.waitUntilElementIsVisible(this.iconInput);
        this.iconInput.click();
        this.iconInput.sendKeys(url);
        this.iconInput.sendKeys(protractor.Key.ENTER);
    }
    /**
     * @return {?}
     */
    checkHexColorInputIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.hexColorInput);
    }
    /**
     * @return {?}
     */
    checkLogoHyperlinkInputIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.logoHyperlinkInput);
    }
    /**
     * @return {?}
     */
    checkLogoTooltipInputIsDisplayed() {
        return BrowserVisibility.waitUntilElementIsVisible(this.logoTooltipInput);
    }
    /**
     * @param {?} hexCode
     * @return {?}
     */
    addHexCodeColor(hexCode) {
        BrowserVisibility.waitUntilElementIsVisible(this.hexColorInput);
        this.hexColorInput.click();
        this.hexColorInput.sendKeys(hexCode);
        return this.hexColorInput.sendKeys(protractor.Key.ENTER);
    }
    /**
     * @param {?} hyperlink
     * @return {?}
     */
    addLogoHyperlink(hyperlink) {
        BrowserVisibility.waitUntilElementIsVisible(this.logoHyperlinkInput);
        BrowserVisibility.waitUntilElementIsClickable(this.logoHyperlinkInput);
        this.logoHyperlinkInput.click();
        this.logoHyperlinkInput.sendKeys(hyperlink);
        return this.logoHyperlinkInput.sendKeys(protractor.Key.ENTER);
    }
    /**
     * @param {?} tooltip
     * @return {?}
     */
    addLogoTooltip(tooltip) {
        BrowserVisibility.waitUntilElementIsVisible(this.logoTooltipInput);
        this.logoTooltipInput.click();
        this.logoTooltipInput.sendKeys(tooltip);
        return this.logoTooltipInput.sendKeys(protractor.Key.ENTER);
    }
    /**
     * @return {?}
     */
    sideBarPositionStart() {
        BrowserVisibility.waitUntilElementIsVisible(this.positionStart);
        return this.positionStart.click();
    }
    /**
     * @return {?}
     */
    sideBarPositionEnd() {
        BrowserVisibility.waitUntilElementIsVisible(this.positionEnd);
        return this.positionEnd.click();
    }
    /**
     * @return {?}
     */
    checkSidebarPositionStart() {
        return BrowserVisibility.waitUntilElementIsVisible(this.sideBarPositionLeft);
    }
    /**
     * @return {?}
     */
    checkSidebarPositionEnd() {
        return BrowserVisibility.waitUntilElementIsVisible(this.sideBarPositionRight);
    }
}
if (false) {
    /** @type {?} */
    HeaderPage.prototype.checkBox;
    /** @type {?} */
    HeaderPage.prototype.headerColor;
    /** @type {?} */
    HeaderPage.prototype.titleInput;
    /** @type {?} */
    HeaderPage.prototype.iconInput;
    /** @type {?} */
    HeaderPage.prototype.hexColorInput;
    /** @type {?} */
    HeaderPage.prototype.logoHyperlinkInput;
    /** @type {?} */
    HeaderPage.prototype.logoTooltipInput;
    /** @type {?} */
    HeaderPage.prototype.positionStart;
    /** @type {?} */
    HeaderPage.prototype.positionEnd;
    /** @type {?} */
    HeaderPage.prototype.sideBarPositionRight;
    /** @type {?} */
    HeaderPage.prototype.sideBarPositionLeft;
}
//# sourceMappingURL=data:application/json;base64,