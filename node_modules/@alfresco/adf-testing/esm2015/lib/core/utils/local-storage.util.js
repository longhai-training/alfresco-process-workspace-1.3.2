/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { browser } from 'protractor';
export class LocalStorageUtil {
    /**
     * @param {?} field
     * @param {?} value
     * @return {?}
     */
    static setConfigField(field, value) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield browser.executeScript('window.adf.setConfigField(`' + field + '`, `' + value + '`);');
        });
    }
    /**
     * @param {?} field
     * @param {?} value
     * @return {?}
     */
    static setStorageItem(field, value) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield browser.executeScript('window.adf.setStorageItem(`' + field + '`, `' + value + '`);');
        });
    }
    /**
     * @return {?}
     */
    static clearStorage() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield browser.executeScript('window.adf.clearStorage();');
        });
    }
    /**
     * @return {?}
     */
    static apiReset() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield browser.executeScript(`window.adf.apiReset();`);
        });
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWwtc3RvcmFnZS51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi10ZXN0aW5nLyIsInNvdXJjZXMiOlsibGliL2NvcmUvdXRpbHMvbG9jYWwtc3RvcmFnZS51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXJDLE1BQU0sT0FBTyxnQkFBZ0I7Ozs7OztJQUUxQixNQUFNLENBQU8sY0FBYyxDQUFDLEtBQWEsRUFBRSxLQUFhOztZQUNuRCxNQUFNLE9BQU8sQ0FBQyxhQUFhLENBQ3ZCLDZCQUE2QixHQUFHLEtBQUssR0FBRyxNQUFNLEdBQUcsS0FBSyxHQUFHLEtBQUssQ0FDakUsQ0FBQztRQUNOLENBQUM7S0FBQTs7Ozs7O0lBRUQsTUFBTSxDQUFPLGNBQWMsQ0FBQyxLQUFhLEVBQUUsS0FBYTs7WUFDcEQsTUFBTSxPQUFPLENBQUMsYUFBYSxDQUN2Qiw2QkFBNkIsR0FBRyxLQUFLLEdBQUcsTUFBTSxHQUFHLEtBQUssR0FBRyxLQUFLLENBQ2pFLENBQUM7UUFDTixDQUFDO0tBQUE7Ozs7SUFFRCxNQUFNLENBQU8sWUFBWTs7WUFDckIsTUFBTSxPQUFPLENBQUMsYUFBYSxDQUN2Qiw0QkFBNEIsQ0FDL0IsQ0FBQztRQUNOLENBQUM7S0FBQTs7OztJQUVELE1BQU0sQ0FBTyxRQUFROztZQUNqQixNQUFNLE9BQU8sQ0FBQyxhQUFhLENBQ3ZCLHdCQUF3QixDQUMzQixDQUFDO1FBQ04sQ0FBQztLQUFBO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBicm93c2VyIH0gZnJvbSAncHJvdHJhY3Rvcic7XG5cbmV4cG9ydCBjbGFzcyBMb2NhbFN0b3JhZ2VVdGlsIHtcblxuICAgc3RhdGljIGFzeW5jIHNldENvbmZpZ0ZpZWxkKGZpZWxkOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgYXdhaXQgYnJvd3Nlci5leGVjdXRlU2NyaXB0KFxuICAgICAgICAgICAgJ3dpbmRvdy5hZGYuc2V0Q29uZmlnRmllbGQoYCcgKyBmaWVsZCArICdgLCBgJyArIHZhbHVlICsgJ2ApOydcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgYXN5bmMgc2V0U3RvcmFnZUl0ZW0oZmllbGQ6IHN0cmluZywgdmFsdWU6IHN0cmluZykge1xuICAgICAgICBhd2FpdCBicm93c2VyLmV4ZWN1dGVTY3JpcHQoXG4gICAgICAgICAgICAnd2luZG93LmFkZi5zZXRTdG9yYWdlSXRlbShgJyArIGZpZWxkICsgJ2AsIGAnICsgdmFsdWUgKyAnYCk7J1xuICAgICAgICApO1xuICAgIH1cblxuICAgIHN0YXRpYyBhc3luYyBjbGVhclN0b3JhZ2UoKSB7XG4gICAgICAgIGF3YWl0IGJyb3dzZXIuZXhlY3V0ZVNjcmlwdChcbiAgICAgICAgICAgICd3aW5kb3cuYWRmLmNsZWFyU3RvcmFnZSgpOydcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgYXN5bmMgYXBpUmVzZXQoKSB7XG4gICAgICAgIGF3YWl0IGJyb3dzZXIuZXhlY3V0ZVNjcmlwdChcbiAgICAgICAgICAgIGB3aW5kb3cuYWRmLmFwaVJlc2V0KCk7YFxuICAgICAgICApO1xuICAgIH1cbn1cbiJdfQ==