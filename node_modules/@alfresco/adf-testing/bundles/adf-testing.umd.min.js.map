{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-testing/lib/core/utils/string.util.ts","ng://@alfresco/adf-testing/lib/core/models/user.model.ts","ng://@alfresco/adf-testing/lib/core/actions/identity/identity.service.ts","ng://@alfresco/adf-testing/lib/core/actions/identity/group-identity.service.ts","ng://@alfresco/adf-testing/lib/core/actions/identity/roles.service.ts","ng://@alfresco/adf-testing/lib/core/actions/identity/tasks.service.ts","ng://@alfresco/adf-testing/lib/core/actions/identity/query.service.ts","ng://@alfresco/adf-testing/lib/core/actions/api.service.ts","ng://@alfresco/adf-testing/lib/core/utils/browser-visibility.ts","ng://@alfresco/adf-testing/lib/core/pages/header.page.ts","ng://@alfresco/adf-testing/lib/material/pages/tabs.page.ts","ng://@alfresco/adf-testing/lib/core/pages/user-info.page.ts","ng://@alfresco/adf-testing/lib/core/pages/form-controller.page.ts","ng://@alfresco/adf-testing/lib/core/utils/local-storage.util.ts","ng://@alfresco/adf-testing/lib/core/pages/login.page.ts","ng://@alfresco/adf-testing/lib/core/pages/settings.page.ts","ng://@alfresco/adf-testing/lib/core/pages/login-sso.page.ts","ng://@alfresco/adf-testing/lib/core/pages/data-table-component.page.ts","ng://@alfresco/adf-testing/lib/core/pages/pagination.page.ts","ng://@alfresco/adf-testing/lib/core/pages/error.page.ts","ng://@alfresco/adf-testing/lib/content-services/pages/document-list.page.ts","ng://@alfresco/adf-testing/lib/content-services/actions/example.action.ts","ng://@alfresco/adf-testing/lib/content-services/dialog/content-node-selector-dialog.page.ts","ng://@alfresco/adf-testing/lib/process-services/pages/form-fields.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/start-tasks-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/task-header-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/process-header-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/dialog/edit-process-filter-dialog.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/edit-process-filter-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/dialog/edit-task-filter-dialog.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/edit-task-filter-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/group-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/people-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/process-filters-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/process-list-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/task-filters-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/task-list-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/start-process-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/pages/task-form-cloud-component.page.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/actions/testing-alfresco-api.service.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/actions/testing-app-config.service.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/actions/process-definitions.service.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/actions/process-instances.service.ts","ng://@alfresco/adf-testing/lib/process-services-cloud/app/app-list-cloud.page.ts","ng://@alfresco/adf-testing/lib/testing.module.ts","ng://@alfresco/adf-testing/lib/testing.service.ts","ng://@alfresco/adf-testing/lib/core/utils/protractor.util.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","StringUtil","generatePasswordString","text","possibleUpperCase","possibleLowerCase","lowerCaseLimit","Math","floor","charAt","random","generateRandomString","possible","generateRandomEmail","domain","email","toLowerCase","generateRandomStringDigits","generateRandomStringNonLatin","UserModel","details","firstName","lastName","password","username","defineProperty","IdentityService","api","createIdentityUser","user","createUser","_a","getUserInfoByUsername","userIdentity","resetPassword","id","idIdentityService","createIdentityUserAndSyncECMBPM","config","provider","apiService","core","peopleApi","addPerson","activiti","adminUsersApi","createNewUser","type","tenantId","company","deleteIdentityUser","userId","deleteUser","queryParams","postBody","enabled","performIdentityOperation","path","temporary","assignRole","roleId","roleName","name","deleteClientRole","clientId","composite","clientRole","containerId","GroupIdentityService","createIdentityGroup","groupName","createGroup","getGroupInfoByGroupName","deleteIdentityGroup","groupId","deleteGroup","search","addClientRole","getClientIdByApplicationName","applicationName","RolesService","getRoleIdByRoleName","key","data","getClientRoleIdByRoleName","clientRoleName","clientRoleId","TasksService","createStandaloneTask","taskName","appName","options","payloadType","performBpmOperation","completeTask","taskId","claimTask","deleteTask","createAndCompleteTask","task","entry","getTask","getTaskId","list","entries","createStandaloneSubtask","parentTaskId","QueryService","getProcessInstanceTasks","processInstanceId","getProcessInstanceSubProcesses","ApiService","host","hostSso","hostBpm","hostEcm","authType","oauth2","scope","secret","implicitFlow","silentLogin","redirectUri","redirectUriLogout","AlfrescoApi","login","method","uri","pathParams","formParams","contentTypes","accepts","headerParams","Authorization","oauth2Auth","token","processClient","callCustomApi","catch","error","replace","until","protractor","ExpectedConditions","DEFAULT_TIMEOUT","global","main","timeout","BrowserVisibility","waitUntilElementIsVisible","elementToCheck","waitTimeout","isDisplayed","browser","wait","waitForAngularEnabled","locator","waitUntilElementIsClickable","waitUntilElementIsStale","stalenessOf","waitUntilElementIsNotVisible","isPresent","present","waitUntilElementHasValue","elementValue","textToBePresentInElementValue","waitUntilElementIsOnPage","visibilityOf","waitUntilElementIsNotOnPage","not","waitUntilElementIsPresent","presenceOf","waitUntilElementIsNotPresent","HeaderPage","checkBox","element","by","cssContainingText","headerColor","css","titleInput","iconInput","hexColorInput","logoHyperlinkInput","logoTooltipInput","positionStart","all","first","positionEnd","sideBarPositionRight","sideBarPositionLeft","checkShowMenuCheckBoxIsDisplayed","checkChooseHeaderColourIsDisplayed","checkChangeTitleIsDisplayed","checkChangeUrlPathIsDisplayed","clickShowMenuButton","get","click","changeHeaderColor","color","checkAppTitle","title","addTitle","sendKeys","Key","ENTER","checkIconIsDisplayed","url","icon","addIcon","checkHexColorInputIsDisplayed","checkLogoHyperlinkInputIsDisplayed","checkLogoTooltipInputIsDisplayed","addHexCodeColor","hexCode","addLogoHyperlink","hyperlink","addLogoTooltip","tooltip","sideBarPositionStart","sideBarPositionEnd","checkSidebarPositionStart","checkSidebarPositionEnd","TabsPage","clickTabByTitle","tabTitle","tab","checkTabIsSelectedByTitle","getAttribute","expect","toBe","UserInfoPage","dialog","userImage","userInfoEcmHeaderTitle","userInfoEcmTitle","ecmEmail","ecmJobTitle","userInfoProcessHeaderTitle","userInfoProcessTitle","processEmail","processTenant","apsImage","acsImage","initialImage","userInfoSsoHeaderTitle","userInfoSsoTitle","ssoEmail","userProfileButton","dialogIsDisplayed","dialogIsNotDisplayed","clickUserProfile","clickOnContentServicesTab","checkProcessServicesTabIsSelected","clickOnProcessServicesTab","userImageIsDisplayed","getContentHeaderTitle","getText","getContentTitle","getContentEmail","getContentJobTitle","getProcessHeaderTitle","getProcessTitle","getProcessEmail","getProcessTenant","getSsoHeaderTitle","getSsoTitle","getSsoEmail","closeUserProfile","actions","ESCAPE","perform","checkACSProfileImage","checkAPSProfileImage","checkInitialImage","initialImageNotDisplayed","ACSProfileImageNotDisplayed","APSProfileImageNotDisplayed","FormControllersPage","enableToggle","toggle","check","indexOf","disableToggle","LocalStorageUtil","setConfigField","field","executeScript","setStorageItem","clearStorage","apiReset","LoginPage","loginURL","baseUrl","formControllersPage","txtUsername","txtPassword","logoImg","successRouteTxt","logoTxt","usernameTooltip","passwordTooltip","loginTooltip","usernameInactive","passwordInactive","adfLogo","usernameHighlighted","passwordHighlighted","signInButton","showPasswordElement","hidePasswordElement","rememberMe","needHelp","register","footerSwitch","rememberMeSwitch","successRouteSwitch","logoSwitch","header","settingsIcon","goToLoginPage","driver","waitForElements","enterUsername","clear","enterPassword","clearUsername","_this","BACK_SPACE","clearPassword","getUsernameTooltip","getPasswordTooltip","getLoginError","checkLoginImgURL","checkUsernameInactive","checkPasswordInactive","checkUsernameHighlighted","checkPasswordHighlighted","checkUsernameTooltipIsNotVisible","checkPasswordTooltipIsNotVisible","getSignInButtonIsEnabled","isEnabled","loginToProcessServicesUsingUserModel","userModel","loginToContentServicesUsingUserModel","getId","getPassword","loginToContentServices","clickSignInButton","clickSettingsIcon","showPassword","hidePassword","getShownPassword","checkPasswordIsHidden","checkRememberIsDisplayed","checkRememberIsNotDisplayed","checkNeedHelpIsDisplayed","checkNeedHelpIsNotDisplayed","checkRegisterDisplayed","checkRegisterIsNotDisplayed","enableFooter","disableFooter","disableRememberMe","enableSuccessRouteSwitch","enableLogoSwitch","enterSuccessRoute","route","enterLogo","logo","SettingsPage","settingsURL","providerDropdown","ecmAndBpm","option","xpath","bpm","ecm","oauth","selectedOption","ecmText","bpmText","clientIdText","authHostText","logoutUrlText","basicAuthRadioButton","identityHostText","ssoRadioButton","silentLoginToggleLabel","silentLoginToggleElement","implicitFlowLabel","implicitFlowElement","applyButton","backButton","validationMessage","goToSettingsPage","setProvider","selected","toEqual","getSelectedOptionText","getBpmHostUrl","getEcmHostUrl","getBpmOption","getEcmOption","getEcmAndBpmOption","setProviderEcmBpm","clickApply","setProviderBpm","setProviderEcm","toBeFalsy","setProviderOauth","toBeTruthy","clickBackButton","clickSsoRadioButton","setProviderEcmSso","contentServiceURL","authHost","identityHost","logoutUr","setClientId","setContentServicesURL","setAuthHost","setIdentityHost","setSilentLogin","setImplicitFlow","setLogoutUrl","setProviderBpmSso","processServiceURL","setProcessServicesURL","logoutUrl","params","clearContentServicesURL","clearProcessServicesURL","authHostURL","isChecked","includes","checkApplyButtonIsDisabled","checkProviderDropdownIsDisplayed","checkValidationMessageIsDisplayed","checkProviderOptions","getBasicAuthRadioButton","getSsoRadioButton","getBackButton","getApplyButton","checkBasicAuthRadioIsSelected","toContain","checkSsoRadioIsNotSelected","LoginSSOPage","ssoButton","usernameField","passwordField","loginButton","loginError","loginSSOIdentityService","ignoreSynchronization","clickLoginButton","clickOnSSOButton","checkLoginErrorIsDisplayed","getLoginErrorMessage","DataTableComponentPage","rootElement","rows","contents","tableBody","spinner","allColumns","selectedRowNumber","allSelectedRows","selectAll","copyColumnTooltip","checkAllRowsButtonIsDisplayed","checkAllRows","uncheckAllRows","clickCheckbox","columnName","columnValue","checkbox","getRowCheckbox","checkRowIsNotChecked","checkRowIsChecked","rowCheckbox","getRow","checkNoRowIsSelected","getNumberOfSelectedRows","count","selectRowWithKeyboard","row","COMMAND","selectRow","checkRowIsSelected","selectedRow","getCellElementByValue","checkRowIsNotSelected","getColumnValueForRow","identifyingColumn","identifyingValue","rowColumn","checkListIsSorted","sortOrder","deferred","promise","defer","column","initialList","each","currentElement","sortedList","sort","reverse","fulfill","toString","rightClickOnRow","Button","RIGHT","getTooltip","getFileHyperlink","filename","numberOfRows","getAllRowsColumnValues","columnLocator","filter","el","getRowsWithSameColumnValues","doubleClickRow","waitForTableBody","getFirstElementDetail","detail","geCellElementDetail","sortByColumn","checkContentIsDisplayed","checkContentIsNotDisplayed","contentInPosition","position","checkSpinnerIsDisplayed","checkSpinnerIsNotDisplayed","tableIsLoaded","checkColumnIsDisplayed","getNumberOfColumns","getNumberOfRows","getCellByRowNumberAndColumnName","rowNumber","getCellByRowContentAndColumn","rowContent","selectRowByContent","content","getCellByContent","checkRowByContentIsSelected","folderName","cell","clickRowByContent","resultElement","getCopyContentTooltip","copyContentTooltipIsNotDisplayed","mouseOverColumn","mouseOverElement","elem","mouseMove","clickColumn","clickElement","PaginationPage","itemsPerPageDropdown","pageSelectorDropDown","pageSelectorArrow","itemsPerPage","currentPage","totalPages","paginationRange","nextPageButton","nextButtonDisabled","previousButtonDisabled","pageDropDown","pageDropDownOptions","paginationSection","paginationSectionEmpty","totalFiles","selectItemsPerPage","numberOfItem","checkPageSelectorIsNotDisplayed","checkPageSelectorIsDisplayed","checkPaginationIsNotDisplayed","getCurrentItemsPerPage","getCurrentPage","getTotalPages","getPaginationRange","clickOnNextPage","clickOnPageDropdown","clickOnPageDropdownOption","numberOfItemPerPage","getPageDropdownOptions","currentOption","checkNextPageButtonIsDisabled","checkPreviousPageButtonIsDisabled","checkNextPageButtonIsEnabled","checkPreviousPageButtonIsEnabled","getTotalNumberOfFiles","totalNumber","split","ErrorPage","errorPageCode","errorPageTitle","errorPageDescription","secondButton","clickSecondButton","checkErrorCode","getErrorCode","getErrorTitle","getErrorDescription","DocumentListPage","actionMenu","optionButton","dataTable","checkLockedIcon","lockIcon","checkUnlockedIcon","nodeName","clickOnActionMenu","sleep","checkActionMenuIsNotDisplayed","dataTablePage","ExampleAction","ContentNodeSelectorDialogPage","searchInputElement","searchLabel","siteListDropdown","cancelButton","moveCopyButton","contentList","checkDialogIsDisplayed","checkDialogIsNotDisplayed","getDialogHeaderText","checkSearchInputIsDisplayed","getSearchLabel","checkSelectedSiteIsDisplayed","siteName","checkCancelButtonIsDisplayed","clickCancelButton","checkMoveCopyButtonIsDisplayed","getMoveCopyButtonText","clickMoveCopyButton","numberOfResultsDisplayed","typeIntoNodeSelectorSearchField","clickContentNodeSelectorResult","contentListPage","FormFieldsPage","formContent","refreshButton","saveButton","valueLocator","labelLocator","noFormMessage","completedTaskNoFormMessage","attachFormButton","selectFormDropDownArrow","selectFormContent","completeButton","errorMessage","setFieldValue","fieldElement","checkWidgetIsVisible","fieldId","checkWidgetIsHidden","hiddenElement","getWidget","widget","getFieldValue","valueLocatorParam","getFieldLabel","labelLocatorParam","getFieldErrorMessage","getFieldText","getFieldPlaceHolder","placeHolderLocator","checkFieldValue","val","refreshForm","saveForm","noFormIsDisplayed","checkFormIsDisplayed","getNoFormMessage","getCompletedTaskNoFormMessage","clickOnAttachFormButton","selectForm","formName","selectFormFromDropDown","formNameElement","checkWidgetIsReadOnlyMode","widgetReadOnly","completeForm","setValueInInputById","input","isCompleteFormButtonDisabled","StartTasksCloudPage","dueDate","description","priority","startButton","startButtonEnabled","form","addName","userName","addDescription","userDescription","addPriority","userPriority","addDueDate","date","clearField","clickStartButton","checkStartButtonIsEnabled","checkStartButtonIsDisabled","blur","TAB","checkValidationErrorIsDisplayed","elementRef","errorElement","validateAssignee","validateDate","TaskHeaderCloudPage","assigneeField","statusField","priorityField","dueDateField","categoryField","createdField","parentNameField","parentTaskIdField","endDateField","idField","descriptionField","taskPropertyList","getAssignee","getStatus","getPriority","getCategory","getParentName","getParentTaskId","getEndDate","getCreated","getDescription","getDueDate","ProcessHeaderCloudPage","nameField","initiatorField","startDateField","lastModifiedField","parentIdField","businessKeyField","getName","getInitiator","getStartDate","getLastModified","getParentId","getBusinessKey","EditProcessFilterDialogPage","componentElement","filterNameInput","saveButtonLocator","cancelButtonLocator","clickOnSaveButton","checkSaveButtonIsEnabled","clickOnCancelButton","checkCancelButtonIsEnabled","getFilterName","setFilterName","filterName","clearFilterName","getTitle","EditProcessFilterCloudComponentPage","customiseFilter","saveAsButton","deleteButton","editProcessFilterDialogPage","editProcessFilterDialog","clickCustomiseFilterHeader","checkCustomiseFilterHeaderIsExpanded","expansionPanelExtended","setStatusFilterDropDown","clickOnDropDownArrow","statusElement","getStateFilterDropDownValue","setSortFilterDropDown","sortElement","getSortFilterDropDownValue","sortLocator","setOrderFilterDropDown","orderElement","getOrderFilterDropDownValue","dropDownArrow","setAppNameDropDown","appNameElement","checkAppNamesAreUnique","appTextList","eachApp","getNumberOfAppNameOptions","setProcessInstanceId","setProperty","getProcessInstanceId","getProperty","property","checkSaveButtonIsDisplayed","checkSaveAsButtonIsDisplayed","checkDeleteButtonIsDisplayed","checkSaveAsButtonIsEnabled","checkDeleteButtonIsEnabled","clickSaveAsButton","disabledButton","clickDeleteButton","clickSaveButton","EditTaskFilterDialogPage","EditTaskFilterCloudComponentPage","assignee","processDefinitionId","lastModifiedFrom","lastModifiedTo","owner","editTaskFilterDialogPage","editTaskFilterDialog","getStatusFilterDropDownValue","elementSort","setAssignee","setPriority","setParentTaskId","setOwner","getOwner","setLastModifiedFrom","getLastModifiedFrom","setLastModifiedTo","getLastModifiedTo","clearAssignee","getAppNameDropDownValue","setId","setTaskName","getTaskName","setProcessDefinitionId","getProcessDefinitionId","GroupCloudComponentPage","groupCloudSearch","searchGroups","searchGroupsToExisting","getGroupsFieldContent","selectGroupFromList","groupRow","checkGroupIsDisplayed","checkGroupIsNotDisplayed","checkSelectedGroup","group","PeopleCloudComponentPage","peopleCloudSearch","searchAssigneeAndSelect","selectAssigneeFromList","searchAssignee","searchAssigneeToExisting","assigneeRow","checkUserIsDisplayed","checkUserIsNotDisplayed","checkSelectedPeople","person","getAssigneeFieldContent","ProcessFiltersCloudComponentPage","filterIcon","checkProcessFilterIsDisplayed","getProcessFilterIcon","checkProcessFilterHasNoIcon","clickProcessFilter","checkProcessFilterNotDisplayed","ProcessListCloudComponentPage","columns","processList","noProcessFound","getDataTable","processName","selectRowById","processId","checkRowIsSelectedById","checkRowIsNotSelectedById","checkRowIsCheckedById","checkRowIsNotCheckedById","checkCheckboxById","checkContentIsDisplayedByName","checkContentIsDisplayedById","checkContentIsNotDisplayedById","getAllRowsNameColumn","checkProcessListIsLoaded","getNoProcessFoundMessage","getAllRowsByColumn","TaskFiltersCloudComponentPage","taskIcon","checkTaskFilterIsDisplayed","getTaskFilterIcon","checkTaskFilterHasNoIcon","clickTaskFilter","checkTaskFilterNotDisplayed","TaskListCloudComponentPage","taskList","noTasksFound","getRowsWithSameName","getRowsWithSameId","checkContentIsDisplayedByProcessInstanceId","checkContentIsNotDisplayedByName","checkTaskListIsLoaded","getNoTasksFoundMessage","getAllRowsByIdColumn","getAllRowsByProcessDefIdColumn","getAllRowsByProcessInstanceIdColumn","getAllRowsByAssigneeColumn","getAllRowsByParentTaskIdColumn","getAllRowsByPriorityColumn","getAllRowsByStandAloneColumn","getAllRowsByOwnerColumn","getIdCellValue","rowName","StartProcessCloudPage","defaultProcessName","processNameInput","selectProcessDropdownArrow","cancelProcessButton","formStartProcessButton","startProcessButton","noProcess","processDefinition","processDefinitionOptionsPanel","checkNoProcessMessage","pressDownArrowAndEnter","ARROW_DOWN","checkNoProcessDefinitionOptionIsDisplayed","enterProcessName","clearProcessName","selectFromProcessDropdown","clickProcessDropdownArrow","selectOption","checkOptionIsDisplayed","selectProcessDropdown","clickCancelProcessButton","checkStartProcessButtonIsEnabled","checkStartProcessButtonIsDisabled","clickStartProcessButton","TaskFormCloudComponent","checkCompleteButtonIsDisplayed","checkCompleteButtonIsNotDisplayed","clickCompleteButton","TestingAlfrescoApiService","appConfig","_super","AppConfigValues","OAUTHCONFIG","AlfrescoApiConfig","PROVIDERS","ECMHOST","BPMHOST","AUTHTYPE","contextRootBpm","CONTEXTROOTBPM","contextRoot","CONTEXTROOTECM","disableCsrf","DISABLECSRF","withCredentials","AUTH_WITH_CREDENTIALS","tslib_1.__extends","getInstance","alfrescoApi","configureJsApi","AlfrescoApiCompatibility","AlfrescoApiService","TestingAppConfigService","getLocationHostname","getLocationPort","prefix","getLocationProtocol","AppConfigService","ProcessDefinitionsService","getProcessDefinitions","status","console","log","error_1","ProcessInstancesService","createProcessInstance","processDefKey","processDefinitionKey","suspendProcessInstance","deleteProcessInstance","completeProcessInstance","AppListCloudPage","apsAppsContainer","checkApsContainer","goToApp","app","checkAppIsNotDisplayed","checkAppIsDisplayed","TestingModule","NgModule","args","declarations","imports","exports","TestingService","Injectable","providedIn","byCss","literals","placeholders","_i","selector"],"mappings":"6dAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAAgBO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAGhC,SAyBgBI,EAAUC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,SAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,EAAE,SAAUG,GAAWA,EAAQQ,EAAOL,SAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUL,MAAME,EAASC,GAAc,KAAKS,UAItE,SAAgBM,EAAYhB,EAASiB,GACjC,IAAsGC,EAAGC,EAAG5B,EAAG6B,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPhC,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOiC,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEV,KAAMgB,EAAK,GAAIC,QAASD,EAAK,GAAIE,SAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAO7C,OAAUmC,EACvJ,SAASM,EAAKhC,GAAK,OAAO,SAAUqC,GAAK,OACzC,SAAStB,EAAKuB,GACV,GAAId,EAAG,MAAM,IAAIe,UAAU,mCAC3B,KAAOZ,GAAG,IACN,GAAIH,EAAI,EAAGC,IAAM5B,EAAY,EAARyC,EAAG,GAASb,EAAU,UAAIa,EAAG,GAAKb,EAAS,YAAO5B,EAAI4B,EAAU,YAAM5B,EAAEM,KAAKsB,GAAI,GAAKA,EAAET,SAAWnB,EAAIA,EAAEM,KAAKsB,EAAGa,EAAG,KAAKlB,KAAM,OAAOvB,EAE3J,OADI4B,EAAI,EAAG5B,IAAGyC,EAAK,CAAS,EAARA,EAAG,GAAQzC,EAAEiB,QACzBwB,EAAG,IACP,KAAK,EAAG,KAAK,EAAGzC,EAAIyC,EAAI,MACxB,KAAK,EAAc,OAAXX,EAAEC,QAAgB,CAAEd,MAAOwB,EAAG,GAAIlB,MAAM,GAChD,KAAK,EAAGO,EAAEC,QAASH,EAAIa,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKX,EAAEI,IAAIS,MAAOb,EAAEG,KAAKU,MAAO,SACxC,QACI,KAAkB3C,EAAe,GAA3BA,EAAI8B,EAAEG,MAAY5B,QAAcL,EAAEA,EAAEK,OAAS,MAAkB,IAAVoC,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEX,EAAI,EAAG,SACjG,GAAc,IAAVW,EAAG,MAAczC,GAAMyC,EAAG,GAAKzC,EAAE,IAAMyC,EAAG,GAAKzC,EAAE,IAAM,CAAE8B,EAAEC,MAAQU,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYX,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAIA,EAAIyC,EAAI,MAC7D,GAAIzC,GAAK8B,EAAEC,MAAQ/B,EAAE,GAAI,CAAE8B,EAAEC,MAAQ/B,EAAE,GAAI8B,EAAEI,IAAIU,KAAKH,GAAK,MACvDzC,EAAE,IAAI8B,EAAEI,IAAIS,MAChBb,EAAEG,KAAKU,MAAO,SAEtBF,EAAKf,EAAKpB,KAAKG,EAASqB,GAC1B,MAAOV,GAAKqB,EAAK,CAAC,EAAGrB,GAAIQ,EAAI,UAAeD,EAAI3B,EAAI,EACtD,GAAY,EAARyC,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAExB,MAAOwB,EAAG,GAAKA,EAAG,QAAK,EAAQlB,MAAM,GArB9BL,CAAK,CAACf,EAAGqC;;;;;;;;;;;;;;;;OC5D7D,IAAAK,EAAA,WAAA,SAAAA,KAwFA,OAtFWA,EAAAC,uBAAP,SAA8BzC,QAAA,IAAAA,IAAAA,EAAA,GAM1B,QALI0C,EAAO,GACLC,EAAoB,6BACpBC,EAAoB,6BACpBC,EAAiBC,KAAKC,MAAM/C,EAAS,GAElCH,EAAI,EAAGA,EAAIgD,EAAgBhD,IAChC6C,GAAQE,EAAkBI,OAAOF,KAAKC,MAAMD,KAAKG,SAAWL,EAAkB5C,SAGlF,IAASH,EAAI,EAAGA,EAAIG,EAAS6C,EAAgBhD,IACzC6C,GAAQC,EAAkBK,OAAOF,KAAKC,MAAMD,KAAKG,SAAWN,EAAkB3C,SAGlF,OAAO0C,GASJF,EAAAU,qBAAP,SAA4BlD,QAAA,IAAAA,IAAAA,EAAA,GAIxB,QAHI0C,EAAO,GACLS,EAAW,iEAERtD,EAAI,EAAGA,EAAIG,EAAQH,IACxB6C,GAAQS,EAASH,OAAOF,KAAKC,MAAMD,KAAKG,SAAWE,EAASnD,SAGhE,OAAO0C,GAUJF,EAAAY,oBAAP,SAA2BC,EAAgBrD,QAAA,IAAAA,IAAAA,EAAA,GAIvC,QAHIsD,EAAQ,GACNH,EAAW,iEAERtD,EAAI,EAAGA,EAAIG,EAAQH,IACxByD,GAASH,EAASH,OAAOF,KAAKC,MAAMD,KAAKG,SAAWE,EAASnD,SAIjE,OADAsD,GAASD,GACIE,eASVf,EAAAgB,2BAAP,SAAkCxD,QAAA,IAAAA,IAAAA,EAAA,GAI9B,QAHI0C,EAAO,GACLS,EAAW,aAERtD,EAAI,EAAGA,EAAIG,EAAQH,IACxB6C,GAAQS,EAASH,OAAOF,KAAKC,MAAMD,KAAKG,SAAWE,EAASnD,SAGhE,OAAO0C,GASJF,EAAAiB,6BAAP,SAAoCzD,QAAA,IAAAA,IAAAA,EAAA,GAIhC,QAHI0C,EAAO,GAGF7C,EAAI,EAAGA,EAAIG,EAAQH,IACxB6C,GAHa,SAGIM,OAAOF,KAAKC,MAAMD,KAAKG,SAH3B,SAG+CjD,SAGhE,OAAO0C,GAEfF,EAxFA,gBCWI,SAAAkB,EAAYC,GAPZtE,KAAAuE,UAAoBpB,EAAWU,uBAC/B7D,KAAAwE,SAAmBrB,EAAWU,uBAAyB,WACvD7D,KAAAyE,SAAmBtB,EAAWU,uBAC9B7D,KAAAiE,MAAgBd,EAAWY,oBAAoB,iBAC/C/D,KAAA0E,SAAmBvB,EAAWU,uBAAuBK,cAIjD1E,OAAOa,OAAOL,KAAMsE,GAO5B,OAJI9E,OAAAmF,eAAIN,EAAAnE,UAAA,KAAE,KAAN,WACI,OAAOF,KAAKiE,uCAGpBI,kBCXI,SAAAO,EAAYC,GACR7E,KAAK6E,IAAMA,EA4GnB,OAzGUD,EAAA1E,UAAA4E,mBAAN,SAAyBC,eAAA,IAAAA,IAAAA,EAAA,IAAsBV,0FAC3C,MAAA,CAAA,EAAMrE,KAAKgF,WAAWD,WAED,OAFrBE,EAAA3C,OAEqB,CAAA,EAAMtC,KAAKkF,sBAAsBH,EAAKL,kBAC3D,OADMS,EAAeF,EAAA3C,OACrB,CAAA,EAAMtC,KAAKoF,cAAcD,EAAaE,GAAIN,EAAKN,kBAE/C,OAFAQ,EAAA3C,OACAyC,EAAKO,kBAAoBH,EAAaE,GACtC,CAAA,EAAON,SAGLH,EAAA1E,UAAAqF,gCAAN,SAAsCR,uGACD,QAA7B/E,KAAK6E,IAAIW,OAAOC,UAAmD,QAA7BzF,KAAK6E,IAAIW,OAAOC,SAAtD,CAAA,EAAA,IACMT,EAAU,CACZT,UAAWQ,EAAKR,UAChBC,SAAUO,EAAKP,SACfC,SAAUM,EAAKN,SACfR,MAAOc,EAAKd,MACZoB,GAAIN,EAAKd,OAEb,CAAA,EAAMjE,KAAK6E,IAAIa,WAAWC,KAAKC,UAAUC,UAAUb,YAAnDC,EAAA3C,8BAG6B,QAA7BtC,KAAK6E,IAAIW,OAAOC,UAAmD,QAA7BzF,KAAK6E,IAAIW,OAAOC,SAAtD,CAAA,EAAA,GACA,CAAA,EAAMzF,KAAK6E,IAAIa,WAAWI,SAASC,cAAcC,cAAc,CAC3D/B,MAAOc,EAAKd,MACZM,UAAWQ,EAAKR,UAChBC,SAAUO,EAAKP,SACfC,SAAUM,EAAKN,SACfwB,KAAM,aACNC,SAAU,EACVC,QAAS,eAPblB,EAAA3C,wBAWJ,MAAA,CAAA,EAAMtC,KAAK8E,mBAAmBC,kBAA9BE,EAAA3C,iBAGEsC,EAAA1E,UAAAkG,mBAAN,SAAyBC,2FACrB,MAAA,CAAA,EAAMrG,KAAKsG,WAAWD,kBAAtBpB,EAAA3C,iBAGEsC,EAAA1E,UAAA8E,WAAN,SAAiBD,mGAUA,MATA,SACE,OACTwB,EAAc,GAAIC,EAAW,CAC/B9B,SAAYK,EAAKL,SACjBH,UAAaQ,EAAKR,UAClBC,SAAYO,EAAKP,SACjBiC,SAAW,EACXxC,MAASc,EAAKd,OAEL,CAAA,EAAMjE,KAAK6E,IAAI6B,yBATf,SACE,OAQoDH,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIXsC,EAAA1E,UAAAoG,WAAN,SAAiBD,qGAIA,OAHPM,EAAO,UAAUN,EACR,SACTE,EAAc,GAAIC,EAAW,GACtB,CAAA,EAAMxG,KAAK6E,IAAI6B,yBAAyBC,EAFtC,SAEoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIXsC,EAAA1E,UAAAgF,sBAAN,SAA4BR,mGAKX,MAJA,SACE,MACT6B,EAAc,CAAE7B,SAAYA,GAAY8B,EAAW,GAE5C,CAAA,EAAMxG,KAAK6E,IAAI6B,yBAJf,SACE,MAGoDH,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,OACD,UAGVsC,EAAA1E,UAAAkF,cAAN,SAAoBC,EAAIZ,qGAMP,OALPkC,EAAO,UAAUtB,EAAE,kBACV,MAEXmB,EAAW,CAAEP,KAAQ,WAAY1E,MAASkD,EAAUmC,YADlDL,EAAc,KAGP,CAAA,EAAMvG,KAAK6E,IAAI6B,yBAAyBC,EAJtC,MAIoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIXsC,EAAA1E,UAAA2G,WAAN,SAAiBR,EAAQS,EAAQC,qGAMhB,OALPJ,EAAO,UAAUN,EAAM,uBACd,OACTE,EAAc,GAChBC,EAAW,CAAC,CAAEnB,GAAMyB,EAAQE,KAAQD,IAE3B,CAAA,EAAM/G,KAAK6E,IAAI6B,yBAAyBC,EAJtC,OAIoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIXsC,EAAA1E,UAAA+G,iBAAN,SAAuBZ,EAAgBa,EAAkBJ,EAAgBC,qGAUxD,OATPJ,EAAO,UAAUN,EAAM,0BAA0Ba,EACxC,SACXV,EAAW,CAAC,CACRnB,GAAMyB,EACNE,KAAQD,EACRI,YAJiBZ,EAAc,IAK/Ba,YAAc,EACdC,YAAeH,IAEV,CAAA,EAAMlH,KAAK6E,IAAI6B,yBAAyBC,EARtC,SAQoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIrBsC,kBC9GI,SAAA0C,EAAYzC,GACR7E,KAAK6E,IAAMA,EAqFnB,OAlFUyC,EAAApH,UAAAqH,oBAAN,SAA0BC,eAAA,IAAAA,IAAAA,EAAYrE,EAAWU,qBAAqB,qFAClE,MAAA,CAAA,EAAM7D,KAAKyH,YAAYD,WACT,OADdvC,EAAA3C,OACc,CAAA,EAAMtC,KAAK0H,wBAAwBF,WACjD,MAAA,CAAA,EADcvC,EAAA3C,cAIZgF,EAAApH,UAAAyH,oBAAN,SAA0BC,2FACtB,MAAA,CAAA,EAAM5H,KAAK6H,YAAYD,kBAAvB3C,EAAA3C,iBAGEgF,EAAApH,UAAAuH,YAAN,SAAkBD,mGAMD,MALA,UACE,OACTjB,EAAc,GAAIC,EAAW,CAC/BQ,KAAQQ,EAAY,aAEX,CAAA,EAAMxH,KAAK6E,IAAI6B,yBALf,UACE,OAIoDH,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIXgF,EAAApH,UAAA2H,YAAN,SAAkBD,qGAKD,OAJPjB,EAAO,WAAWiB,EACT,SACTrB,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAI6B,yBAAyBC,EAHtC,SAGoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAIXgF,EAAApH,UAAAwH,wBAAN,SAA8BF,mGAKb,MAJA,UACE,MACTjB,EAAc,CAAEuB,OAAWN,GAAahB,EAAW,GAE5C,CAAA,EAAMxG,KAAK6E,IAAI6B,yBAJf,UACE,MAGoDH,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,OACD,UAGVgF,EAAApH,UAAA2G,WAAN,SAAiBe,EAASd,EAAQC,qGAMjB,OALPJ,EAAO,WAAWiB,EAAO,uBAChB,OACTrB,EAAc,GAChBC,EAAW,CAAC,CAACnB,GAAMyB,EAAQE,KAAQD,IAE1B,CAAA,EAAM/G,KAAK6E,IAAI6B,yBAAyBC,EAJtC,OAIoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cAWXgF,EAAApH,UAAA6H,cAAN,SAAoBH,EAAiBV,EAAkBJ,EAAgBC,qGAUtD,OATPJ,EAAO,WAAWiB,EAAO,0BAA0BV,EAC1C,OACXV,EAAW,CAAC,CACRnB,GAAMyB,EACNE,KAAQD,EACRI,YAJeZ,EAAc,IAK7Ba,YAAc,EACdC,YAAeH,IAEV,CAAA,EAAMlH,KAAK6E,IAAI6B,yBAAyBC,EARtC,OAQoDJ,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,cASXgF,EAAApH,UAAA8H,6BAAN,SAAmCC,mGAIlB,MAHA,WACE,MAAO1B,EAAc,CAACW,SAAUe,GAAkBzB,EAAW,GAE/D,CAAA,EAAMxG,KAAK6E,IAAI6B,yBAHf,WACE,MAEoDH,EAAaC,WAChF,MAAA,CAAA,EADavB,EAAA3C,OACD,GAAG+C,UAGvBiC,KC3FAY,EAAA,WAII,SAAAA,EAAYrD,GACR7E,KAAK6E,IAAMA,EAiCnB,OA9BUqD,EAAAhI,UAAAiI,oBAAN,SAA0BpB,yGAMT,MALA,SACE,MAETR,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAI6B,yBALf,SACE,MAIoDH,EAAaC,WAChF,IAAW4B,KADLC,EAAOpD,EAAA3C,OAEL+F,EAAKD,GAAKpB,OAASD,IACnBD,EAASuB,EAAKD,GAAK/C,IAG3B,MAAA,CAAA,EAAOyB,SAGLoB,EAAAhI,UAAAoI,0BAAN,SAAgCV,EAASV,EAAUqB,2GAMlC,OALP5B,EAAO,WAAWiB,EAAO,0BAA0BV,EAAQ,aAClD,MAETX,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAI6B,yBAAyBC,EAJtC,MAIoDJ,EAAaC,WAChF,IAAW4B,KADLC,EAAOpD,EAAA3C,OAEL+F,EAAKD,GAAKpB,OAASuB,IACnBC,EAAeH,EAAKD,GAAK/C,IAGjC,MAAA,CAAA,EAAOmD,SAGfN,EAtCA,GCAAO,EAAA,WAII,SAAAA,EAAY5D,GACR7E,KAAK6E,IAAMA,EAoFnB,OAjFU4D,EAAAvI,UAAAwI,qBAAN,SAA2BC,EAAUC,EAASC,qGAU7B,OATPlC,EAAO,IAAMiC,EAAU,eACd,OAETrC,EAAc,GAAIC,EAAQpG,EAAA,CAC5B4G,KAAQ2B,EACRG,YAAe,qBACZD,GAGM,CAAA,EAAM7I,KAAK6E,IAAIkE,oBAAoBpC,EARjC,OAQ+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIXmG,EAAAvI,UAAA8I,aAAN,SAAmBC,EAAQL,qGAMV,OALPjC,EAAO,IAAMiC,EAAU,gBAAkBK,EAAS,YACzC,OAET1C,EAAc,GAAIC,EAAW,CAACsC,YAAe,uBAEtC,CAAA,EAAM9I,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,OAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIXmG,EAAAvI,UAAAgJ,UAAN,SAAgBD,EAAQL,qGAMP,OALPjC,EAAO,IAAMiC,EAAU,gBAAkBK,EAAS,SACzC,OAET1C,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,OAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIXmG,EAAAvI,UAAAiJ,WAAN,SAAiBF,EAAQL,qGAMR,OALPjC,EAAO,IAAMiC,EAAU,gBAAkBK,EAChC,SAET1C,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,SAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIXmG,EAAAvI,UAAAkJ,sBAAN,SAA6BT,EAAUC,iGACtB,MAAA,CAAA,EAAM5I,KAAK0I,qBAAqBC,EAAUC,WACvD,OADMS,EAAOpE,EAAA3C,OACb,CAAA,EAAMtC,KAAKkJ,UAAUG,EAAKC,MAAMjE,GAAIuD,WACpC,OADA3D,EAAA3C,OACA,CAAA,EAAMtC,KAAKgJ,aAAaK,EAAKC,MAAMjE,GAAIuD,WACvC,OADA3D,EAAA3C,OACA,CAAA,EAAO+G,SAGLZ,EAAAvI,UAAAqJ,QAAN,SAAcN,EAAQL,qGAML,OALPjC,EAAO,IAAMiC,EAAU,mBAAqBK,EACnC,MAET1C,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,MAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIXmG,EAAAvI,UAAAsJ,UAAN,SAAgBb,EAAUC,qGAMT,OALPjC,EAAO,IAAMiC,EAAU,kBACd,MAETrC,EAAc,CAACS,KAAM2B,GAAWnC,EAAW,GAEpC,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,MAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,OACDmH,KAAKC,QAAQ,GAAGJ,MAAMjE,UAGhCoD,EAAAvI,UAAAyJ,wBAAN,SAA8BC,EAAchB,EAAS5B,qGAMpC,OALPL,EAAO,IAAMiC,EAAU,eACd,OAETrC,EAAc,GAAIC,EAAW,CAACQ,KAAQA,EAAM4C,aAAgBA,EAAcd,YAAe,qBAElF,CAAA,EAAM9I,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,OAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIrBmG,EAzFA,GCAAoB,EAAA,WAII,SAAAA,EAAYhF,GACR7E,KAAK6E,IAAMA,EAuBnB,OApBUgF,EAAA3J,UAAA4J,wBAAN,SAA8BC,EAAmBnB,qGAMhC,OALPjC,EAAO,IAAMiC,EAAU,+BAAiCmB,EAAoB,SACnE,MAETxD,EAAc,GAAIC,EAAW,GAEtB,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,MAI+CJ,EAAaC,WAC3E,MAAA,CAAA,EADavB,EAAA3C,cAIXuH,EAAA3J,UAAA8J,+BAAN,SAAqCD,EAAmBnB,mGAMvC,OALPjC,EAAO,IAAMiC,EAAU,+BAAiCmB,EAAoB,gBACnE,MAETxD,EAAc,GAEP,CAAA,EAAMvG,KAAK6E,IAAIkE,oBAAoBpC,EAJjC,MAI+CJ,EAAa,YAC3E,MAAA,CAAA,EADatB,EAAA3C,cAIrBuH,EA5BA,gBCOI,SAAAI,EAAY/C,EAAkBgD,EAAcC,EAAiB1E,GACzDzF,KAAKwF,OAAS,CACVC,SAAUA,EACV2E,QAASF,EACTG,QAASH,EACTI,SAAU,QACVC,OAAQ,CACJL,KAAMC,EACNjD,SAAUA,EACVsD,MAAO,SACPC,OAAQ,GACRC,cAAc,EACdC,aAAa,EACbC,YAAa,IACbC,kBAAmB,YAK3B7K,KAAK0F,WAAa,IAAIoF,EAAAA,yBAAY9K,KAAKwF,QAyC/C,OAtCUyE,EAAA/J,UAAA6K,MAAN,SAAYrG,EAAkBD,2FAC1B,MAAA,CAAA,EAAMzE,KAAK0F,WAAWqF,MAAMrG,EAAUD,kBAAtCQ,EAAA3C,iBAGE2H,EAAA/J,UAAA6I,oBAAN,SAA0BpC,EAAcqE,EAAgBzE,EAAkBC,oFAUtE,OATMyE,EAAMjL,KAAKwF,OAAO4E,QAAUzD,EAC5BuE,EAAa,GAAIC,EAAa,GAC9BC,EAAe,CAAC,oBAChBC,EAAU,CAAC,oBAEXC,EAAe,CACjBC,cAAiB,UAAYvL,KAAK0F,WAAW8F,WAAWC,OAG5D,CAAA,EAAOzL,KAAK0F,WAAWgG,cAAcC,cAAcV,EAAKD,EAAQE,EAAY3E,EAAa+E,EAAcH,EAAY3E,EAC/G4E,EAAcC,EAAS7L,QACtBoM,SAAK,SAAEC,GACJ,MAAA,UAIN5B,EAAA/J,UAAAwG,yBAAN,SAA+BC,EAAcqE,EAAgBzE,EAAkBC,oFAU3E,OATMyE,EAAMjL,KAAKwF,OAAO+E,OAAOL,KAAK4B,QAAQ,UAAW,iBAAmBnF,EACpEuE,EAAa,GAAIC,EAAa,GAC9BC,EAAe,CAAC,oBAChBC,EAAU,CAAC,oBAEXC,EAAe,CACjBC,cAAiB,UAAYvL,KAAK0F,WAAW8F,WAAWC,OAG5D,CAAA,EAAOzL,KAAK0F,WAAWgG,cAAcC,cAAcV,EAAKD,EAAQE,EAAY3E,EAAa+E,EAAcH,EAAY3E,EAC/G4E,EAAcC,EAAS7L,QACtBoM,SAAK,SAAEC,GACJ,MAAA,UAIhB5B,KCnEM8B,EAAQC,EAAAA,WAAWC,mBACnBC,EAAkBC,OAAmB,WAAIA,OAAmB,WAAEC,KAAKC,QAAU,IAEnFC,EAAA,WAAA,SAAAA,KAgGA,OA3FWA,EAAAC,0BAAP,SAAiCC,EAAgBC,QAAA,IAAAA,IAAAA,EAAAP,OACzCQ,GAAc,EAClB,OAAOC,EAAAA,QAAQC,KAAI,WAWf,OAVAD,EAAAA,QAAQE,wBAERL,EAAeE,cAAc5K,KAAI,WAEzB4K,GAAc,GACjB,WAEGA,GAAc,IAGfA,GACRD,EAAa,0BAA4BD,EAAeM,YAMxDR,EAAAS,4BAAP,SAAmCP,EAAgBC,QAAA,IAAAA,IAAAA,EAAAP,OAC3CQ,GAAc,EAClB,OAAOC,EAAAA,QAAQC,KAAI,WAWf,OAVAD,EAAAA,QAAQE,wBAERL,EAAeE,cAAc5K,KAAI,WAEzB4K,GAAc,GACjB,WAEGA,GAAc,IAGfA,GACRD,EAAa,0BAA4BD,EAAeM,YAMxDR,EAAAU,wBAAP,SAA+BR,EAAgBC,GAC3C,YAD2C,IAAAA,IAAAA,EAAAP,GACpCS,EAAAA,QAAQC,KAAKb,EAAMkB,YAAYT,GAAiBC,EAAa,2BAA6BD,EAAeM,YAM7GR,EAAAY,6BAAP,SAAoCV,EAAgBC,QAAA,IAAAA,IAAAA,EAAAP,OAC5CiB,GAAY,EAChB,OAAOR,EAAAA,QAAQC,KAAI,WAQf,OAPAD,EAAAA,QAAQE,wBAERL,EAAeW,YAAYrL,KAAI,SAC1BsL,GACGD,GAAaC,IAGdD,GACRV,EAAa,uCAAyCD,EAAeM,YAMrER,EAAAe,yBAAP,SAAgCb,EAAgBc,EAAcb,QAAA,IAAAA,IAAAA,EAAAP,GAC1DS,EAAAA,QAAQE,wBAERF,EAAAA,QAAQC,KAAKb,EAAMwB,8BAA8Bf,EAAgBc,GAAeb,EAAa,gCAAmCD,EAAeM,YAG5IR,EAAAkB,yBAAP,SAAgChB,EAAgBC,GAC5C,YAD4C,IAAAA,IAAAA,EAAAP,GACrCS,EAAAA,QAAQC,KAAKD,EAAAA,QAAQC,KAAKb,EAAM0B,aAAajB,IAAkBC,IAMnEH,EAAAoB,4BAAP,SAAmClB,EAAgBC,GAC/C,YAD+C,IAAAA,IAAAA,EAAAP,GACxCS,EAAAA,QAAQC,KAAKb,EAAM4B,IAAI5B,EAAM0B,aAAajB,IAAkBC,EAAa,8BAAgCD,EAAeM,YAG5HR,EAAAsB,0BAAP,SAAiCpB,EAAgBC,GAG7C,YAH6C,IAAAA,IAAAA,EAAAP,GAC7CS,EAAAA,QAAQE,wBAEDF,EAAAA,QAAQC,KAAKb,EAAM8B,WAAWrB,GAAiBC,EAAa,0BAA4BD,EAAeM,YAG3GR,EAAAwB,6BAAP,SAAoCtB,EAAgBC,GAChD,YADgD,IAAAA,IAAAA,EAAAP,GACzCS,EAAAA,QAAQC,KAAKb,EAAM4B,IAAI5B,EAAM8B,WAAWrB,IAAkBC,EAAa,8BAAgCD,EAAeM,YAGrIR,EAhGA,gBCFA,SAAAyB,IAEI/N,KAAAgO,SAAWC,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,sBAAuB,qBAC/DnO,KAAAoO,YAAcH,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4BAC7BrO,KAAAsO,WAAaL,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wBAC5BrO,KAAAuO,UAAYN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,kCAC3BrO,KAAAwO,cAAgBP,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wCAC/BrO,KAAAyO,mBAAqBR,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sCACpCrO,KAAA0O,iBAAmBT,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sCAClCrO,KAAA2O,cAAgBV,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,oCAAoCQ,QACvE7O,KAAA8O,YAAcb,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,kCAAkCQ,QACnE7O,KAAA+O,qBAAuBd,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sDACtCrO,KAAAgP,oBAAsBf,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,uCAyGzC,OAvGIN,EAAA7N,UAAA+O,iCAAA,WACI,OAAO3C,EAAkBC,0BAA0BvM,KAAKgO,WAG5DD,EAAA7N,UAAAgP,mCAAA,WACI,OAAO5C,EAAkBC,0BAA0BvM,KAAKoO,cAG5DL,EAAA7N,UAAAiP,4BAAA,WACI,OAAO7C,EAAkBC,0BAA0BvM,KAAKsO,aAG5DP,EAAA7N,UAAAkP,8BAAA,WACI,OAAO9C,EAAkBC,0BAA0BvM,KAAKuO,YAG5DR,EAAA7N,UAAAmP,oBAAA,eACUrB,EAAWC,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,iBAEpC,OADA/B,EAAkBC,0BAA0ByB,GACrCA,EAASsB,IAAI,GAAGC,SAG3BxB,EAAA7N,UAAAsP,kBAAA,SAAkBC,GAEd,OADoBxB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iBAAmBoB,EAAQ,OAC3CF,SAGvBxB,EAAA7N,UAAAwP,cAAA,SAAc1I,OACJ2I,EAAQ1B,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,iBAAkBnH,IAC7D,OAAOsF,EAAkBC,0BAA0BoD,IAGvD5B,EAAA7N,UAAA0P,SAAA,SAASD,GACLrD,EAAkBC,0BAA0BvM,KAAKsO,YACjDtO,KAAKsO,WAAWiB,QAChBvP,KAAKsO,WAAWuB,SAASF,GACzB3P,KAAKsO,WAAWuB,SAAS7D,EAAAA,WAAW8D,IAAIC,QAG5ChC,EAAA7N,UAAA8P,qBAAA,SAAqBC,OACXC,EAAOjC,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,YAAc4B,EAAM,OAChD3D,EAAkBC,0BAA0B2D,IAGhDnC,EAAA7N,UAAAiQ,QAAA,SAAQF,GACJ3D,EAAkBC,0BAA0BvM,KAAKuO,WACjDvO,KAAKuO,UAAUgB,QACfvP,KAAKuO,UAAUsB,SAASI,GACxBjQ,KAAKuO,UAAUsB,SAAS7D,EAAAA,WAAW8D,IAAIC,QAG3ChC,EAAA7N,UAAAkQ,8BAAA,WACI,OAAO9D,EAAkBC,0BAA0BvM,KAAKwO,gBAG5DT,EAAA7N,UAAAmQ,mCAAA,WACI,OAAO/D,EAAkBC,0BAA0BvM,KAAKyO,qBAG5DV,EAAA7N,UAAAoQ,iCAAA,WACI,OAAOhE,EAAkBC,0BAA0BvM,KAAK0O,mBAG5DX,EAAA7N,UAAAqQ,gBAAA,SAAgBC,GAIZ,OAHAlE,EAAkBC,0BAA0BvM,KAAKwO,eACjDxO,KAAKwO,cAAce,QACnBvP,KAAKwO,cAAcqB,SAASW,GACrBxQ,KAAKwO,cAAcqB,SAAS7D,EAAAA,WAAW8D,IAAIC,QAGtDhC,EAAA7N,UAAAuQ,iBAAA,SAAiBC,GAKb,OAJApE,EAAkBC,0BAA0BvM,KAAKyO,oBACjDnC,EAAkBS,4BAA4B/M,KAAKyO,oBACnDzO,KAAKyO,mBAAmBc,QACxBvP,KAAKyO,mBAAmBoB,SAASa,GAC1B1Q,KAAKyO,mBAAmBoB,SAAS7D,EAAAA,WAAW8D,IAAIC,QAG3DhC,EAAA7N,UAAAyQ,eAAA,SAAeC,GAIX,OAHAtE,EAAkBC,0BAA0BvM,KAAK0O,kBACjD1O,KAAK0O,iBAAiBa,QACtBvP,KAAK0O,iBAAiBmB,SAASe,GACxB5Q,KAAK0O,iBAAiBmB,SAAS7D,EAAAA,WAAW8D,IAAIC,QAGzDhC,EAAA7N,UAAA2Q,qBAAA,WAEI,OADAvE,EAAkBC,0BAA0BvM,KAAK2O,eAC1C3O,KAAK2O,cAAcY,SAG9BxB,EAAA7N,UAAA4Q,mBAAA,WAEI,OADAxE,EAAkBC,0BAA0BvM,KAAK8O,aAC1C9O,KAAK8O,YAAYS,SAG5BxB,EAAA7N,UAAA6Q,0BAAA,WACI,OAAOzE,EAAkBC,0BAA0BvM,KAAKgP,sBAG5DjB,EAAA7N,UAAA8Q,wBAAA,WACI,OAAO1E,EAAkBC,0BAA0BvM,KAAK+O,uBAGhEhB,kBCrHA,SAAAkD,KAcA,OAZIA,EAAA/Q,UAAAgR,gBAAA,SAAgBC,OACNC,EAAMnD,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,2BAA4BgD,IACrE7E,EAAkBC,0BAA0B6E,GAC5CA,EAAI7B,SAGR0B,EAAA/Q,UAAAmR,0BAAA,SAA0BF,GACVlD,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,2BAA4BgD,IACjEG,aAAa,iBAAiBxP,KAAI,SAAEF,GACpC2P,OAAO3P,GAAQ4P,KAAK,WAGhCP,kBCbA,SAAAQ,IAEIzR,KAAA0R,OAASzD,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,yCAAyCQ,QACrE7O,KAAA2R,UAAY1D,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iCAC3BrO,KAAA4R,uBAAyB3D,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2BACxCrO,KAAA6R,iBAAmB5D,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAClCrO,KAAA8R,SAAW7D,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yBAC1BrO,KAAA+R,YAAc9D,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,6BAC7BrO,KAAAgS,2BAA6B/D,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2BAC5CrO,KAAAiS,qBAAuBhE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CACtCrO,KAAAkS,aAAejE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yBAC9BrO,KAAAmS,cAAgBlE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iCAC/BrO,KAAAoS,SAAWnE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oCAC1BrO,KAAAqS,SAAWpE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oCAC1BrO,KAAAsS,aAAerE,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,kCAAkCQ,QACpE7O,KAAAuS,uBAAyBvS,KAAK0R,OAAOzD,QAAQC,EAAAA,GAAGG,IAAI,gCACpDrO,KAAAwS,iBAAmBvE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gCAClCrO,KAAAyS,SAAWxE,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,mBACzBrF,KAAA0S,kBAAoBzE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,kDA6HvC,OA3HIoD,EAAAvR,UAAAyS,kBAAA,WAEI,OADArG,EAAkBC,0BAA0B,KAAKmF,QACjD,MAGJD,EAAAvR,UAAA0S,qBAAA,WAEI,OADAtG,EAAkBoB,4BAA4B,KAAKgE,QACnD,MAGJD,EAAAvR,UAAA2S,iBAAA,WACIvG,EAAkBC,0BAA0BvM,KAAK0S,mBACjD1S,KAAK0S,kBAAkBnD,SAG3BkC,EAAAvR,UAAA4S,0BAAA,WAGI,OAFiB,IAAI7B,GACZC,gBAAgB,oBACzB,MAGJO,EAAAvR,UAAA6S,kCAAA,WAGI,OAFiB,IAAI9B,GACZI,0BAA0B,oBACnC,MAGJI,EAAAvR,UAAA8S,0BAAA,WAGI,OAFiB,IAAI/B,GACZC,gBAAgB,oBACzB,MAGJO,EAAAvR,UAAA+S,qBAAA,WAEI,OADA3G,EAAkBC,0BAA0B,KAAKoF,WACjD,MAGJF,EAAAvR,UAAAgT,sBAAA,WAGI,OAFA5G,EAAkBC,0BAA0BvM,KAAK0R,QACjDpF,EAAkBC,0BAA0BvM,KAAK4R,wBAC1C5R,KAAK4R,uBAAuBuB,WAGvC1B,EAAAvR,UAAAkT,gBAAA,WAEI,OADA9G,EAAkBC,0BAA0BvM,KAAK6R,kBAC1C7R,KAAK6R,iBAAiBsB,WAGjC1B,EAAAvR,UAAAmT,gBAAA,WAEI,OADA/G,EAAkBC,0BAA0BvM,KAAK8R,UAC1C9R,KAAK8R,SAASqB,WAGzB1B,EAAAvR,UAAAoT,mBAAA,WAEI,OADAhH,EAAkBC,0BAA0BvM,KAAK+R,aAC1C/R,KAAK+R,YAAYoB,WAG5B1B,EAAAvR,UAAAqT,sBAAA,WAEI,OADAjH,EAAkBC,0BAA0BvM,KAAKgS,4BAC1ChS,KAAKgS,2BAA2BmB,WAG3C1B,EAAAvR,UAAAsT,gBAAA,WAEI,OADAlH,EAAkBC,0BAA0BvM,KAAKiS,sBAC1CjS,KAAKiS,qBAAqBkB,WAGrC1B,EAAAvR,UAAAuT,gBAAA,WAEI,OADAnH,EAAkBC,0BAA0BvM,KAAKkS,cAC1ClS,KAAKkS,aAAaiB,WAG7B1B,EAAAvR,UAAAwT,iBAAA,WAEI,OADApH,EAAkBC,0BAA0BvM,KAAKmS,eAC1CnS,KAAKmS,cAAcgB,WAG9B1B,EAAAvR,UAAAyT,kBAAA,WAEI,OADArH,EAAkBC,0BAA0BvM,KAAKuS,wBAC1CvS,KAAKuS,uBAAuBY,WAGvC1B,EAAAvR,UAAA0T,YAAA,WAEI,OADAtH,EAAkBC,0BAA0BvM,KAAKwS,kBAC1CxS,KAAKwS,iBAAiBW,WAGjC1B,EAAAvR,UAAA2T,YAAA,WAEI,OADAvH,EAAkBC,0BAA0BvM,KAAKyS,UAC1CzS,KAAKyS,SAASU,WAGzB1B,EAAAvR,UAAA4T,iBAAA,WACIxH,EAAkBC,0BAA0BvM,KAAK0R,QACjD/E,EAAAA,QAAQoH,UAAUlE,SAAS7D,EAAAA,WAAW8D,IAAIkE,QAAQC,WAGtDxC,EAAAvR,UAAAgU,qBAAA,WACI5H,EAAkBC,0BAA0BvM,KAAKqS,WAGrDZ,EAAAvR,UAAAiU,qBAAA,WACI7H,EAAkBC,0BAA0BvM,KAAKoS,WAGrDX,EAAAvR,UAAAkU,kBAAA,WACI9H,EAAkBC,0BAA0BvM,KAAKsS,eAGrDb,EAAAvR,UAAAmU,yBAAA,WACI/H,EAAkBoB,4BAA4B1N,KAAKsS,eAGvDb,EAAAvR,UAAAoU,4BAAA,WACIhI,EAAkBoB,4BAA4B1N,KAAKqS,WAGvDZ,EAAAvR,UAAAqU,4BAAA,WACIjI,EAAkBoB,4BAA4B1N,KAAKoS,WAG3DX,kBChJA,SAAA+C,KAqBA,OAnBIA,EAAAtU,UAAAuU,aAAA,SAAaC,GACTpI,EAAkBC,0BAA0BmI,GAC5CA,EAAOpD,aAAa,SAASxP,KAAI,SAAE6S,GAC3BA,EAAMC,QAAQ,eAAiB,IAC/BtI,EAAkBS,4BAA4B2H,EAAO9F,IAAIV,EAAAA,GAAGG,IAAI,QAAQQ,SACxE6F,EAAO9F,IAAIV,EAAAA,GAAGG,IAAI,QAAQQ,QAAQU,YAK9CiF,EAAAtU,UAAA2U,cAAA,SAAcH,GACVpI,EAAkBC,0BAA0BmI,GAC5CA,EAAOpD,aAAa,SAASxP,KAAI,SAAE6S,GACK,GAAhCA,EAAMC,QAAQ,iBACdtI,EAAkBS,4BAA4B2H,EAAO9F,IAAIV,EAAAA,GAAGG,IAAI,QAAQQ,SACxE6F,EAAO9F,IAAIV,EAAAA,GAAGG,IAAI,QAAQQ,QAAQU,YAIlDiF,kBCtBA,SAAAM,KAyBA,OAvBgBA,EAAAC,eAAb,SAA4BC,EAAezT,2FACtC,MAAA,CAAA,EAAMoL,EAAAA,QAAQsI,cACV,8BAAgCD,EAAQ,OAASzT,EAAQ,sBAD7D0D,EAAA3C,iBAKSwS,EAAAI,eAAb,SAA4BF,EAAezT,2FACvC,MAAA,CAAA,EAAMoL,EAAAA,QAAQsI,cACV,8BAAgCD,EAAQ,OAASzT,EAAQ,sBAD7D0D,EAAA3C,iBAKSwS,EAAAK,aAAb,mGACI,MAAA,CAAA,EAAMxI,EAAAA,QAAQsI,cACV,6CADJhQ,EAAA3C,iBAKSwS,EAAAM,SAAb,mGACI,MAAA,CAAA,EAAMzI,EAAAA,QAAQsI,cACV,yCADJhQ,EAAA3C,iBAIRwS,kBCtBA,SAAAO,IAEIrV,KAAAsV,SAAW3I,EAAAA,QAAQ4I,QAAU,SAE7BvV,KAAAwV,oBAAsB,IAAIhB,EAC1BxU,KAAAyV,YAAcxH,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yBAC7BrO,KAAA0V,YAAczH,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yBAC7BrO,KAAA2V,QAAU1H,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iCACzBrO,KAAA4V,gBAAkB3H,EAAAA,QACdC,EAAAA,GAAGG,IAAI,kDAEXrO,KAAA6V,QAAU5H,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,6CACzBrO,KAAA8V,gBAAkB7H,EAAAA,QACdC,EAAAA,GAAGG,IAAI,8CAEXrO,KAAA+V,gBAAkB9H,EAAAA,QACdC,EAAAA,GAAGG,IAAI,iDAEXrO,KAAAgW,aAAe/H,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0CAC9BrO,KAAAiW,iBAAmBhI,EAAAA,QACfC,EAAAA,GAAGG,IAAI,+CAEXrO,KAAAkW,iBAAmBjI,EAAAA,QACfC,EAAAA,GAAGG,IAAI,+CAEXrO,KAAAmW,QAAUlI,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+CACzBrO,KAAAoW,oBAAsBnI,EAAAA,QAClBC,EAAAA,GAAGG,IAAI,8CAEXrO,KAAAqW,oBAAsBpI,EAAAA,QAClBC,EAAAA,GAAGG,IAAI,8CAEXrO,KAAAsW,aAAerI,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,iBAC7BrF,KAAAuW,oBAAsBtI,EAAAA,QAClBC,EAAAA,GAAGG,IAAI,iDAEXrO,KAAAwW,oBAAsBvI,EAAAA,QAClBC,EAAAA,GAAGG,IAAI,iDAEXrO,KAAAyW,WAAaxI,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0CAC5BrO,KAAA0W,SAAWzI,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oCAC1BrO,KAAA2W,SAAW1I,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,qCAC1BrO,KAAA4W,aAAe3I,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,YAC7BrF,KAAA6W,iBAAmB5I,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,+BACjCrF,KAAA8W,mBAAqB7I,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,iCACnCrF,KAAA+W,WAAa9I,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,oBAC3BrF,KAAAgX,OAAS/I,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,eACvBrF,KAAAiX,aAAehJ,EAAAA,QACXC,EAAAA,GAAGC,kBACC,4CACA,aA2NZ,OAvNIkH,EAAAnV,UAAAgX,cAAA,WAII,OAHAvK,EAAAA,QAAQE,uBAAsB,GAC9BF,EAAAA,QAAQwK,OAAO7H,IAAI,KAAKgG,UACxB,KAAK8B,kBACL,MAGJ/B,EAAAnV,UAAAkX,gBAAA,WAGI,OAFA9K,EAAkBC,0BAA0B,KAAKkJ,aACjDnJ,EAAkBC,0BAA0B,KAAKmJ,aACjD,MAGJL,EAAAnV,UAAAmX,cAAA,SAAc3S,GAIV,OAHA4H,EAAkBC,0BAA0BvM,KAAKyV,aACjDzV,KAAKyV,YAAY5F,SAAS,IAC1B7P,KAAKyV,YAAY6B,QACVtX,KAAKyV,YAAY5F,SAASnL,IAGrC2Q,EAAAnV,UAAAqX,cAAA,SAAc9S,GAGV,OAFA6H,EAAkBC,0BAA0BvM,KAAK0V,aACjD1V,KAAK0V,YAAY4B,QACVtX,KAAK0V,YAAY7F,SAASpL,IAGrC4Q,EAAAnV,UAAAsX,cAAA,WAAA,IAAAC,EAAAzX,KAQI,OAPAsM,EAAkBC,0BAA0B,KAAKkJ,aACjD,KAAKA,YAAYlG,QACjB,KAAKkG,YAAYnE,aAAa,SAASxP,KAAI,SAAEP,GACzC,IAAK,IAAIf,EAAIe,EAAMZ,OAAa,GAALH,EAAQA,IAC/B,EAAKiV,YAAY5F,SAAS7D,EAAAA,WAAW8D,IAAI4H,cAGjD,MAGJrC,EAAAnV,UAAAyX,cAAA,WAAA,IAAAF,EAAAzX,KACIsM,EAAkBC,0BAA0BvM,KAAK0V,aACjD1V,KAAK0V,YAAYpE,aAAa,SAASxP,KAAI,SAAEP,GACzC,IAAK,IAAIf,EAAIe,EAAMZ,OAAa,GAALH,EAAQA,IAC/BiX,EAAK/B,YAAY7F,SAAS7D,EAAAA,WAAW8D,IAAI4H,eAKrDrC,EAAAnV,UAAA0X,mBAAA,WAEI,OADAtL,EAAkBC,0BAA0BvM,KAAK8V,iBAC1C9V,KAAK8V,gBAAgB3C,WAGhCkC,EAAAnV,UAAA2X,mBAAA,WAEI,OADAvL,EAAkBC,0BAA0BvM,KAAK+V,iBAC1C/V,KAAK+V,gBAAgB5C,WAGhCkC,EAAAnV,UAAA4X,cAAA,WAEI,OADAxL,EAAkBC,0BAA0BvM,KAAKgW,cAC1ChW,KAAKgW,aAAa7C,WAG7BkC,EAAAnV,UAAA6X,iBAAA,WAEI,OADAzL,EAAkBC,0BAA0BvM,KAAK2V,SAC1C3V,KAAK2V,QAAQrE,aAAa,QAGrC+D,EAAAnV,UAAA8X,sBAAA,WACI1L,EAAkBC,0BAA0BvM,KAAKiW,mBAGrDZ,EAAAnV,UAAA+X,sBAAA,WACI3L,EAAkBC,0BAA0BvM,KAAKkW,mBAGrDb,EAAAnV,UAAAgY,yBAAA,WACIlY,KAAKmW,QAAQ5G,QACbjD,EAAkBC,0BAA0BvM,KAAKoW,sBAGrDf,EAAAnV,UAAAiY,yBAAA,WACInY,KAAKmW,QAAQ5G,QACbjD,EAAkBC,0BAA0BvM,KAAKqW,sBAGrDhB,EAAAnV,UAAAkY,iCAAA,WACI9L,EAAkBY,6BAA6BlN,KAAK8V,kBAGxDT,EAAAnV,UAAAmY,iCAAA,WACI/L,EAAkBY,6BAA6BlN,KAAK+V,kBAGxDV,EAAAnV,UAAAoY,yBAAA,WAEI,OADAhM,EAAkBC,0BAA0BvM,KAAKsW,cAC1CtW,KAAKsW,aAAaiC,aAGvBlD,EAAAnV,UAAAsY,qCAAN,SAA2CC,2FAEvC,OADAzY,KAAKkX,gBACL,CAAA,EAAMpC,EAAiBK,uBACvB,OADAlQ,EAAA3C,OACA,CAAA,EAAMwS,EAAiBI,eAAe,YAAa,eACnD,OADAjQ,EAAA3C,OACA,CAAA,EAAMwS,EAAiBM,0BAAvBnQ,EAAA3C,OACAtC,KAAK+K,MAAM0N,EAAUxU,MAAOwU,EAAUhU,oBAGpC4Q,EAAAnV,UAAAwY,qCAAN,SAA2CD,2FAEvC,OADAzY,KAAKkX,gBACL,CAAA,EAAMpC,EAAiBK,uBACvB,OADAlQ,EAAA3C,OACA,CAAA,EAAMwS,EAAiBI,eAAe,YAAa,eACnD,OADAjQ,EAAA3C,OACA,CAAA,EAAMwS,EAAiBM,0BAAvBnQ,EAAA3C,OACAtC,KAAK+K,MAAM0N,EAAUE,QAASF,EAAUG,yBAGtCvD,EAAAnV,UAAA2Y,uBAAN,SAA6BnU,EAAUD,2FAEnC,OADAzE,KAAKkX,gBACL,CAAA,EAAMpC,EAAiBK,uBACvB,OADAlQ,EAAA3C,OACA,CAAA,EAAMwS,EAAiBI,eAAe,YAAa,eACnD,OADAjQ,EAAA3C,OACA,CAAA,EAAMwS,EAAiBM,0BAAvBnQ,EAAA3C,OACAtC,KAAKoX,kBACLpX,KAAK+K,MAAMrG,EAAUD,aAGzB4Q,EAAAnV,UAAA4Y,kBAAA,WACIxM,EAAkBC,0BAA0BvM,KAAKsW,cACjDtW,KAAKsW,aAAa/G,SAGtB8F,EAAAnV,UAAA6Y,kBAAA,WACIzM,EAAkBC,0BAA0BvM,KAAKiX,cACjDjX,KAAKiX,aAAa1H,SAGtB8F,EAAAnV,UAAA8Y,aAAA,WACI1M,EAAkBC,0BAA0BvM,KAAKuW,qBACjDvW,KAAKuW,oBAAoBhH,SAG7B8F,EAAAnV,UAAA+Y,aAAA,WACI3M,EAAkBC,0BAA0BvM,KAAKwW,qBACjDxW,KAAKwW,oBAAoBjH,SAG7B8F,EAAAnV,UAAAgZ,iBAAA,WACI,OAAOlZ,KAAK0V,YAAYpE,aAAa,UAGzC+D,EAAAnV,UAAAiZ,sBAAA,WACI7M,EAAkBC,0BAA0BvM,KAAK0V,cAGrDL,EAAAnV,UAAAkZ,yBAAA,WACI9M,EAAkBC,0BAA0BvM,KAAKyW,aAGrDpB,EAAAnV,UAAAmZ,4BAAA,WACI/M,EAAkBY,6BAA6BlN,KAAKyW,aAGxDpB,EAAAnV,UAAAoZ,yBAAA,WACIhN,EAAkBC,0BAA0BvM,KAAK0W,WAGrDrB,EAAAnV,UAAAqZ,4BAAA,WACIjN,EAAkBY,6BAA6BlN,KAAK0W,WAGxDrB,EAAAnV,UAAAsZ,uBAAA,WACIlN,EAAkBC,0BAA0BvM,KAAK2W,WAGrDtB,EAAAnV,UAAAuZ,4BAAA,WACInN,EAAkBY,6BAA6BlN,KAAK2W,WAGxDtB,EAAAnV,UAAAwZ,aAAA,WACI1Z,KAAKwV,oBAAoBf,aAAazU,KAAK4W,eAG/CvB,EAAAnV,UAAAyZ,cAAA,WACI3Z,KAAKwV,oBAAoBX,cAAc7U,KAAK4W,eAGhDvB,EAAAnV,UAAA0Z,kBAAA,WACI5Z,KAAKwV,oBAAoBX,cAAc7U,KAAK6W,mBAGhDxB,EAAAnV,UAAA2Z,yBAAA,WACI7Z,KAAKwV,oBAAoBf,aAAazU,KAAK8W,qBAG/CzB,EAAAnV,UAAA4Z,iBAAA,WACI9Z,KAAKwV,oBAAoBf,aAAazU,KAAK+W,aAG/C1B,EAAAnV,UAAA6Z,kBAAA,SAAkBC,GAId,OAHA1N,EAAkBC,0BAA0BvM,KAAK4V,iBACjD5V,KAAK4V,gBAAgB/F,SAAS,IAC9B7P,KAAK4V,gBAAgB0B,QACdtX,KAAK4V,gBAAgB/F,SAASmK,IAGzC3E,EAAAnV,UAAA+Z,UAAA,SAAUC,GAIN,OAHA5N,EAAkBC,0BAA0BvM,KAAK6V,SACjD7V,KAAK6V,QAAQhG,SAAS,IACtB7P,KAAK6V,QAAQyB,QACNtX,KAAK6V,QAAQhG,SAASqK,IAGjC7E,EAAAnV,UAAA6K,MAAA,SAAMrG,EAAUD,GAKZ,OAJAzE,KAAKoX,kBACLpX,KAAKqX,cAAc3S,GACnB1E,KAAKuX,cAAc9S,GACnBzE,KAAK8Y,oBACExM,EAAkBC,0BAA0BvM,KAAKgX,SAEhE3B,kBC/QA,SAAA8E,IAEIna,KAAAoa,YAAczN,EAAAA,QAAQ4I,QAAU,YAChCvV,KAAAqa,iBAAmBpM,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iFAClCrO,KAAAsa,UAAY,CACRC,OAAQtM,EAAAA,QAAQC,EAAAA,GAAGsM,MAAM,6DACzBnX,KAAM,OAEVrD,KAAAya,IAAM,CACFF,OAAQtM,EAAAA,QAAQC,EAAAA,GAAGsM,MAAM,8FACzBnX,KAAM,OAEVrD,KAAA0a,IAAM,CACFH,OAAQtM,EAAAA,QAAQC,EAAAA,GAAGsM,MAAM,8FACzBnX,KAAM,OAEVrD,KAAA2a,MAAQ,CACJJ,OAAQtM,EAAAA,QAAQC,EAAAA,GAAGsM,MAAM,+DACzBnX,KAAM,SAEVrD,KAAA4a,eAAiB3M,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yCAChCrO,KAAA6a,QAAU5M,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yCACzBrO,KAAA8a,QAAU7M,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yCACzBrO,KAAA+a,aAAe9M,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yBAC9BrO,KAAAgb,aAAe/M,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0BAC9BrO,KAAAib,cAAgBhN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2BAC/BrO,KAAAkb,qBAAuBjN,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,oCAAqC,yBACzFnO,KAAAmb,iBAAmBlN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,6BAClCrO,KAAAob,eAAiBnN,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,oBAAqB,QACnEnO,KAAAqb,uBAAyBpN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+CACxCrO,KAAAsb,yBAA2BrN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yCAC1CrO,KAAAub,kBAAoBtN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gDACnCrO,KAAAwb,oBAAsBvN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0CACrCrO,KAAAyb,YAAcxN,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC7BrO,KAAA0b,WAAazN,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,0CAA2C,SACrFnO,KAAA2b,kBAAoB1N,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,YAAa,2BAqPlE,OAnPIgM,EAAAja,UAAA0b,iBAAA,WAII,OAHAjP,EAAAA,QAAQE,uBAAsB,GAC9BF,EAAAA,QAAQwK,OAAO7H,IAAI,KAAK8K,aACxB9N,EAAkBC,0BAA0B,KAAK8N,kBACjD,MAGJF,EAAAja,UAAA2b,YAAA,SAAYtB,EAAQuB,GAKhB,OAJAxP,EAAkBC,0BAA0BvM,KAAKqa,kBACjDra,KAAKqa,iBAAiB9K,QACtBjD,EAAkBC,0BAA0BgO,GAC5CA,EAAOhL,QACAgC,OAAOvR,KAAK4a,eAAezH,WAAW4I,QAAQD,IAGzD3B,EAAAja,UAAA8b,sBAAA,WACI,OAAOhc,KAAK4a,eAAezH,WAG/BgH,EAAAja,UAAA+b,cAAA,WACI,OAAOjc,KAAK8a,QAAQxJ,aAAa,UAGrC6I,EAAAja,UAAAgc,cAAA,WACI,OAAOlc,KAAK6a,QAAQvJ,aAAa,UAGrC6I,EAAAja,UAAAic,aAAA,WACI,OAAOnc,KAAKya,IAAIF,QAGpBJ,EAAAja,UAAAkc,aAAA,WACI,OAAOpc,KAAK0a,IAAIH,QAGpBJ,EAAAja,UAAAmc,mBAAA,WACI,OAAOrc,KAAKsa,UAAUC,QAG1BJ,EAAAja,UAAAoc,kBAAA,WAMI,OALA,KAAKV,mBACL,KAAKC,YAAY,KAAKvB,UAAUC,OAAQ,KAAKD,UAAUjX,MACvDiJ,EAAkBC,0BAA0B,KAAKuO,SACjDxO,EAAkBC,0BAA0B,KAAKsO,SACjD,KAAK0B,aACL,MAGJpC,EAAAja,UAAAsc,eAAA,WAKI,OAJA,KAAKZ,mBACL,KAAKC,YAAY,KAAKpB,IAAIF,OAAQ,KAAKE,IAAIpX,MAC3CiJ,EAAkBC,0BAA0B,KAAKuO,SACjD,KAAKyB,aACL,MAGJpC,EAAAja,UAAAuc,eAAA,WAMI,OALA,KAAKb,mBACL,KAAKC,YAAY,KAAKnB,IAAIH,OAAQ,KAAKG,IAAIrX,MAC3CiJ,EAAkBC,0BAA0B,KAAKsO,SACjDtJ,OAAO,KAAKuJ,QAAQ3N,aAAauP,YACjC,KAAKH,aACL,MAGJpC,EAAAja,UAAAyc,iBAAA,WAOI,OANA,KAAKf,mBACL,KAAKC,YAAY,KAAKlB,MAAMJ,OAAQ,KAAKI,MAAMtX,MAC/CiJ,EAAkBC,0BAA0B,KAAKuO,SACjDxO,EAAkBC,0BAA0B,KAAKsO,SACjDtJ,OAAO,KAAKyJ,aAAa7N,aAAayP,aACtC,KAAKL,aACL,MAGEpC,EAAAja,UAAA2c,gBAAN,mGAEI,OADAvQ,EAAkBC,0BAA0BvM,KAAK0b,YACjD,CAAA,EAAM1b,KAAK0b,WAAWnM,uBAAtBtK,EAAA3C,iBAGE6X,EAAAja,UAAA4c,oBAAN,mGAEI,OADAxQ,EAAkBC,0BAA0BvM,KAAKob,gBACjD,CAAA,EAAMpb,KAAKob,eAAe7L,uBAA1BtK,EAAA3C,iBAGE6X,EAAAja,UAAA6c,kBAAN,SAAwBC,EAAmBC,EAAUC,EAAcvS,EAAoBD,EAAqBxD,EAAmBiW,eAA5D,IAAAxS,IAAAA,GAAA,QAAoB,IAAAD,IAAAA,GAAA,QAAwC,IAAAyS,IAAAA,EAAA,4FAK3H,OAJAnd,KAAK4b,mBACL5b,KAAK6b,YAAY7b,KAAK0a,IAAIH,OAAQva,KAAK0a,IAAIrX,MAC3CiJ,EAAkBoB,4BAA4B1N,KAAK8a,SACnDxO,EAAkBC,0BAA0BvM,KAAK6a,SACjD,CAAA,EAAM7a,KAAK8c,8BACX,OADA7X,EAAA3C,OACA,CAAA,EAAMtC,KAAKod,YAAYlW,WACvB,OADAjC,EAAA3C,OACA,CAAA,EAAMtC,KAAKqd,sBAAsBL,WACjC,OADA/X,EAAA3C,OACA,CAAA,EAAMtC,KAAKsd,YAAYL,WACvB,OADAhY,EAAA3C,OACA,CAAA,EAAMtC,KAAKud,gBAAgBL,WAC3B,OADAjY,EAAA3C,OACA,CAAA,EAAMtC,KAAKwd,eAAe7S,WAC1B,OADA1F,EAAA3C,OACA,CAAA,EAAMtC,KAAKyd,gBAAgB/S,WAC3B,OADAzF,EAAA3C,OACA,CAAA,EAAMtC,KAAK0d,aAAaP,WACxB,OADAlY,EAAA3C,OACA,CAAA,EAAMtC,KAAKuc,4BAAXtX,EAAA3C,iBAGE6X,EAAAja,UAAAyd,kBAAN,SAAwBC,EAAmBX,EAAUC,EAAcvS,EAAoBD,eAApB,IAAAC,IAAAA,GAAA,QAAoB,IAAAD,IAAAA,GAAA,oFAKnF,OAJA1K,KAAK4b,mBACL5b,KAAK6b,YAAY7b,KAAKya,IAAIF,OAAQva,KAAKya,IAAIpX,MAC3CiJ,EAAkBC,0BAA0BvM,KAAK8a,SACjDxO,EAAkBoB,4BAA4B1N,KAAK6a,SACnD,CAAA,EAAM7a,KAAK8c,8BACX,OADA7X,EAAA3C,OACA,CAAA,EAAMtC,KAAKod,sBACX,OADAnY,EAAA3C,OACA,CAAA,EAAMtC,KAAK6d,sBAAsBD,WACjC,OADA3Y,EAAA3C,OACA,CAAA,EAAMtC,KAAKsd,YAAYL,WACvB,OADAhY,EAAA3C,OACA,CAAA,EAAMtC,KAAKud,gBAAgBL,WAC3B,OADAjY,EAAA3C,OACA,CAAA,EAAMtC,KAAKwd,eAAe7S,WAC1B,OADA1F,EAAA3C,OACA,CAAA,EAAMtC,KAAKyd,gBAAgB/S,WAC3B,OADAzF,EAAA3C,OACA,CAAA,EAAMtC,KAAKuc,4BAAXtX,EAAA3C,iBAGE6X,EAAAja,UAAAwd,aAAN,SAAmBI,2EACfxR,EAAkBsB,0BAA0B5N,KAAKib,eACjDjb,KAAKib,cAAc3D,QACnBtX,KAAKib,cAAcpL,SAASiO,YAG1B3D,EAAAja,UAAA2d,sBAAN,SAA4BD,2EACxBtR,EAAkBC,0BAA0BvM,KAAK8a,SACjD9a,KAAK8a,QAAQxD,QACbtX,KAAK8a,QAAQjL,SAAS+N,YAGpBzD,EAAAja,UAAAkd,YAAN,SAAkBlW,eAAA,IAAAA,IAAAA,EAAmByF,EAAAA,QAAQoR,OAAOvY,OAAO+E,OAAOrD,2EAC9DoF,EAAkBC,0BAA0BvM,KAAK+a,cACjD/a,KAAK+a,aAAazD,QAClBtX,KAAK+a,aAAalL,SAAS3I,YAGzBiT,EAAAja,UAAAmd,sBAAN,SAA4BL,2EACxB1Q,EAAkBS,4BAA4B/M,KAAK6a,SACnD7a,KAAK6a,QAAQvD,QACbtX,KAAK6a,QAAQhL,SAASmN,YAG1B7C,EAAAja,UAAA8d,wBAAA,WACI1R,EAAkBC,0BAA0BvM,KAAK6a,SACjD7a,KAAK6a,QAAQvD,QACbtX,KAAK6a,QAAQhL,SAAS,KACtB7P,KAAK6a,QAAQhL,SAAS7D,EAAAA,WAAW8D,IAAI4H,aAGzCyC,EAAAja,UAAA+d,wBAAA,WACI3R,EAAkBC,0BAA0BvM,KAAK8a,SACjD9a,KAAK8a,QAAQxD,QACbtX,KAAK8a,QAAQjL,SAAS,KACtB7P,KAAK8a,QAAQjL,SAAS7D,EAAAA,WAAW8D,IAAI4H,aAGnCyC,EAAAja,UAAAod,YAAN,SAAkBY,2FAEd,OADA5R,EAAkBC,0BAA0BvM,KAAKgb,cACjD,CAAA,EAAMhb,KAAKgb,aAAa1D,gBACxB,OADArS,EAAA3C,OACA,CAAA,EAAMtC,KAAKgb,aAAanL,SAASqO,kBAAjCjZ,EAAA3C,iBAGE6X,EAAAja,UAAAqd,gBAAN,SAAsBL,2FAElB,OADA5Q,EAAkBC,0BAA0BvM,KAAKmb,kBACjD,CAAA,EAAMnb,KAAKmb,iBAAiB7D,gBAC5B,OADArS,EAAA3C,OACA,CAAA,EAAMtC,KAAKmb,iBAAiBtL,SAASqN,kBAArCjY,EAAA3C,iBAGE6X,EAAAja,UAAAqc,WAAN,mGAEI,OADAjQ,EAAkBC,0BAA0BvM,KAAKyb,aACjD,CAAA,EAAMzb,KAAKyb,YAAYlM,uBAAvBtK,EAAA3C,iBAGE6X,EAAAja,UAAAsd,eAAN,SAAqB/I,iGACjB,MAAA,CAAA,EAAMnI,EAAkBC,0BAA0BvM,KAAKsb,kCAEpC,OAFnBrW,EAAA3C,OAEmB,CAAA,EAAMtC,KAAKsb,yBAAyBhK,aAAa,iBAEpE,OAFM6M,EAAalZ,EAAA3C,OAA2D8b,SAAS,kBAErE3J,IAAiB0J,GAAa1J,EAC5C,CAAA,EAAOzU,KAAKqb,uBAAuB9L,SAGvC,CAAA,EAAOpO,QAAQC,iBAGb+Y,EAAAja,UAAAud,gBAAN,SAAsBhJ,iGAClB,MAAA,CAAA,EAAMnI,EAAkBC,0BAA0BvM,KAAKwb,6BAEpC,OAFnBvW,EAAA3C,OAEmB,CAAA,EAAMtC,KAAKwb,oBAAoBlK,aAAa,iBAE/D,OAFM6M,EAAalZ,EAAA3C,OAAsD8b,SAAS,kBAEhE3J,IAAiB0J,GAAa1J,EAC5C,CAAA,EAAOzU,KAAKub,kBAAkBhM,SAGlC,CAAA,EAAOpO,QAAQC,iBAGnB+Y,EAAAja,UAAAme,2BAAA,WAEI,OADA/R,EAAkBC,0BAA0B,KAAKkP,YAAYnK,aAAa,aAC1E,MAGJ6I,EAAAja,UAAAoe,iCAAA,WACIhS,EAAkBC,0BAA0BvM,KAAKqa,mBAGrDF,EAAAja,UAAAqe,kCAAA,WACIjS,EAAkBC,0BAA0BvM,KAAK2b,oBAGrDxB,EAAAja,UAAAse,qBAAA,WACIlS,EAAkBC,0BAA0BvM,KAAKqa,kBACjDra,KAAKqa,iBAAiB9K,QACtBjD,EAAkBC,0BAA0BvM,KAAKsa,UAAUC,QAC3DjO,EAAkBC,0BAA0BvM,KAAK0a,IAAIH,QACrDjO,EAAkBC,0BAA0BvM,KAAKya,IAAIF,SAGzDJ,EAAAja,UAAAue,wBAAA,WAEI,OADAnS,EAAkBC,0BAA0BvM,KAAKkb,sBAC1Clb,KAAKkb,sBAGhBf,EAAAja,UAAAwe,kBAAA,WAEI,OADApS,EAAkBC,0BAA0BvM,KAAKob,gBAC1Cpb,KAAKob,gBAGhBjB,EAAAja,UAAAye,cAAA,WAEI,OADArS,EAAkBC,0BAA0BvM,KAAK0b,YAC1C1b,KAAK0b,YAGhBvB,EAAAja,UAAA0e,eAAA,WAEI,OADAtS,EAAkBC,0BAA0BvM,KAAKyb,aAC1Czb,KAAKyb,aAGhBtB,EAAAja,UAAA2e,8BAAA,WACItN,OAAOvR,KAAKye,0BAA0BnN,aAAa,UAAUwN,UAAU,sBAG3E3E,EAAAja,UAAA6e,2BAAA,WACIxN,OAAOvR,KAAK0e,oBAAoBpN,aAAa,UAAU3D,IAAImR,UAAU,sBAE7E3E,kBCxRA,SAAA6E,IAEIhf,KAAAif,UAAYhR,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4CAC3BrO,KAAAkf,cAAgBjR,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,aAC9BrF,KAAAmf,cAAgBlR,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,aAC9BrF,KAAAof,YAAcnR,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0BAC7BrO,KAAAgX,OAAS/I,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,eACvBrF,KAAAqf,WAAapR,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0CA2ChC,OAzCI2Q,EAAA9e,UAAAof,wBAAA,SAAwB5a,EAAUD,GAO9B,OANAkI,EAAAA,QAAQ4S,uBAAwB,EAChCjT,EAAkBC,0BAA0BvM,KAAKkf,eACjDlf,KAAKqX,cAAc3S,GACnB1E,KAAKuX,cAAc9S,GACnBzE,KAAKwf,mBACL7S,EAAAA,QAAQoH,UAAUlE,SAAS7D,EAAAA,WAAW8D,IAAIC,OAAOkE,UAC1C3H,EAAkBC,0BAA0BvM,KAAKgX,SAG5DgI,EAAA9e,UAAAuf,iBAAA,WACInT,EAAkBC,0BAA0BvM,KAAKif,WACjDjf,KAAKif,UAAU1P,SAGnByP,EAAA9e,UAAAmX,cAAA,SAAc3S,GACV4H,EAAkBC,0BAA0BvM,KAAKkf,eACjDlf,KAAKkf,cAAc5H,QACnBtX,KAAKkf,cAAcrP,SAASnL,IAGhCsa,EAAA9e,UAAAqX,cAAA,SAAc9S,GACV6H,EAAkBC,0BAA0BvM,KAAKmf,eACjDnf,KAAKmf,cAAc7H,QACnBtX,KAAKmf,cAActP,SAASpL,IAGhCua,EAAA9e,UAAAsf,iBAAA,WAEI,OADAlT,EAAkBC,0BAA0BvM,KAAKof,aAC1Cpf,KAAKof,YAAY7P,SAG5ByP,EAAA9e,UAAAwf,2BAAA,WACIpT,EAAkBC,0BAA0BvM,KAAKqf,aAGrDL,EAAA9e,UAAAyf,qBAAA,WAEI,OADArT,EAAkBC,0BAA0BvM,KAAKqf,YAC1Crf,KAAKqf,WAAWlM,WAG/B6L,kBCnCI,SAAAY,EAAYC,QAAA,IAAAA,IAAAA,EAA6B5R,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,kBAAkBQ,SAP9E7O,KAAA8f,KAAO5R,EAAAA,GAAGG,IAAI,kFAQVrO,KAAK6f,YAAcA,EACnB7f,KAAKyJ,KAAOzJ,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,qEACxCrO,KAAK+f,SAAW/f,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,yCAC5CrO,KAAKggB,UAAYhgB,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,oCAAoCQ,QACjF7O,KAAKigB,QAAUjgB,KAAK6f,YAAY5R,QAAQC,EAAAA,GAAGG,IAAI,yBAC/CrO,KAAKkgB,WAAalgB,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,8CAC9CrO,KAAKmgB,kBAAoBngB,KAAK6f,YAAY5R,QAAQC,EAAAA,GAAGG,IAAI,+DACzDrO,KAAKogB,gBAAkBpgB,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,8BACnDrO,KAAKqgB,UAAYrgB,KAAK6f,YAAY5R,QAAQC,EAAAA,GAAGG,IAAI,oDACjDrO,KAAKsgB,kBAAoBtgB,KAAK6f,YAAY5R,QAAQC,EAAAA,GAAGG,IAAI,kCAyTjE,OAtTIuR,EAAA1f,UAAAqgB,8BAAA,WAEI,OADAjU,EAAkBC,0BAA0B,KAAK8T,WACjD,MAGJT,EAAA1f,UAAAsgB,aAAA,WAAA,IAAA/I,EAAAzX,KAMI,OALAsM,EAAkBC,0BAA0B,KAAK8T,WACjD/T,EAAkBS,4BAA4B,KAAKsT,WAAWve,KAAI,WAC9D,EAAKue,UAAU9Q,QACfjD,EAAkBC,0BAA0B,EAAK8T,UAAUpS,QAAQC,EAAAA,GAAGG,IAAI,kCAE9E,MAGJuR,EAAA1f,UAAAugB,eAAA,WAAA,IAAAhJ,EAAAzX,KAMI,OALAsM,EAAkBC,0BAA0B,KAAK8T,WACjD/T,EAAkBS,4BAA4B,KAAKsT,WAAWve,KAAI,WAC9D,EAAKue,UAAU9Q,QACfjD,EAAkBoB,4BAA4B,EAAK2S,UAAUpS,QAAQC,EAAAA,GAAGG,IAAI,kCAEhF,MAGJuR,EAAA1f,UAAAwgB,cAAA,SAAcC,EAAYC,OAChBC,EAAW7gB,KAAK8gB,eAAeH,EAAYC,GACjDtU,EAAkBS,4BAA4B8T,GAC9CA,EAAStR,SAGbqQ,EAAA1f,UAAA6gB,qBAAA,SAAqBJ,EAAYC,GAC7BtU,EAAkBoB,4BAA4B1N,KAAK8gB,eAAeH,EAAYC,GAAa3S,QAAQC,EAAAA,GAAGG,IAAI,iCAG9GuR,EAAA1f,UAAA8gB,kBAAA,SAAkBL,EAAYC,OACpBK,EAAcjhB,KAAK8gB,eAAeH,EAAYC,GACpDtU,EAAkBC,0BAA0B0U,EAAYhT,QAAQC,EAAAA,GAAGG,IAAI,iCAG3EuR,EAAA1f,UAAA4gB,eAAA,SAAeH,EAAYC,GACvB,OAAO5gB,KAAKkhB,OAAOP,EAAYC,GAC1B3S,QAAQC,EAAAA,GAAGG,IAAI,kBAGxBuR,EAAA1f,UAAAihB,qBAAA,WACI7U,EAAkBoB,4BAA4B1N,KAAKmgB,oBAGvDP,EAAA1f,UAAAkhB,wBAAA,WACI,OAAOphB,KAAKogB,gBAAgBiB,SAGhCzB,EAAA1f,UAAAohB,sBAAA,SAAsBX,EAAYC,OACxBW,EAAMvhB,KAAKkhB,OAAOP,EAAYC,GACpCjU,EAAAA,QAAQoH,UAAUlE,SAAS7D,EAAAA,WAAW8D,IAAI0R,SAASjS,MAAMgS,GAAKtN,WAGlE2L,EAAA1f,UAAAuhB,UAAA,SAAUd,EAAYC,OACZW,EAAM,KAAKL,OAAOP,EAAYC,GAIpC,OAHAtU,EAAkBC,0BAA0BgV,GAC5CjV,EAAkBS,4BAA4BwU,GAC9CA,EAAIhS,QACJ,MAGJqQ,EAAA1f,UAAAwhB,mBAAA,SAAmBf,EAAYC,OACrBe,EAAc,KAAKC,sBAAsBjB,EAAYC,GAAa3S,QAAQC,EAAAA,GAAGsM,MAAM,mDAEzF,OADAlO,EAAkBC,0BAA0BoV,GAC5C,MAGJ/B,EAAA1f,UAAA2hB,sBAAA,SAAsBlB,EAAYC,OACxBe,EAAc,KAAKC,sBAAsBjB,EAAYC,GAAa3S,QAAQC,EAAAA,GAAGsM,MAAM,mDAEzF,OADAlO,EAAkBoB,4BAA4BiU,GAC9C,MAGJ/B,EAAA1f,UAAA4hB,qBAAA,SAAqBC,EAAmBC,EAAkBrB,OAChDY,EAAMvhB,KAAKkhB,OAAOa,EAAmBC,GAC3C1V,EAAkBC,0BAA0BgV,OACtCU,EAAYV,EAAItT,QAAQC,EAAAA,GAAGG,IAAI,cAAcsS,EAAU,YAE7D,OADArU,EAAkBC,0BAA0B0V,GACrCA,EAAU9O,WAUrByM,EAAA1f,UAAAgiB,kBAAA,SAAkBC,EAAWrV,OACnBsV,EAAWpW,EAAAA,WAAWqW,QAAQC,QAC9BC,EAAStU,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,cAAcvB,EAAO,YACvDR,EAAkBC,0BAA0BgW,EAAO1T,aAC7C2T,EAAc,GAapB,OAZAD,EAAOE,KAAI,SAAWC,GAClBA,EAAevP,UAAUrR,KAAI,SAAWuB,GACpCmf,EAAYtf,KAAKG,OAEtBvB,KAAI,eACC6gB,EAAaH,EACjBG,EAAaA,EAAWC,QACN,IAAdT,IACAQ,EAAaA,EAAWE,WAE5BT,EAASU,QAAQN,EAAYO,aAAeJ,EAAWI,cAEpDX,EAASC,SAGpBzC,EAAA1f,UAAA8iB,gBAAA,SAAgBrC,EAAYC,OAClBW,EAAMvhB,KAAKkhB,OAAOP,EAAYC,GACpCjU,EAAAA,QAAQoH,UAAUxE,MAAMgS,EAAKvV,EAAAA,WAAWiX,OAAOC,OAAOjP,UACtD3H,EAAkBC,0BAA0B0B,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,+BAG9Dua,EAAA1f,UAAAijB,WAAA,SAAWxC,EAAYC,GACnB,OAAO5gB,KAAK4hB,sBAAsBjB,EAAYC,GAAatP,aAAa,UAG5EsO,EAAA1f,UAAAkjB,iBAAA,SAAiBC,GACb,OAAOpV,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,oDAAqDkV,KAG7FzD,EAAA1f,UAAAojB,aAAA,WACI,OAAOtjB,KAAK6f,YAAYjR,IAAI5O,KAAK8f,MAAMuB,SAGrCzB,EAAA1f,UAAAqjB,uBAAN,SAA6BhB,iGAGA,OAFnBiB,EAAgBtV,EAAAA,GAAGG,IAAI,6FAA+FkU,EAAS,WACrIjW,EAAkBC,0BAA0B0B,EAAAA,QAAQW,IAAI4U,GAAe3U,SAC9C,CAAA,EAAMZ,EAAAA,QAAQW,IAAI4U,GAAerQ,kBAC1D,MAAA,CAAA,EADyBlO,EAAA3C,OACNmhB,OAAM,SAAEC,GAAO,OAAAA,WAGhC9D,EAAA1f,UAAAyjB,4BAAN,SAAkChD,EAAYC,0EAG1C,OAFM4C,EAAgBtV,EAAAA,GAAGG,IAAI,cAAcsS,EAAU,oCAAmCC,EAAW,WACnGtU,EAAkBC,0BAA0BvM,KAAK6f,YAAYjR,IAAI4U,GAAe3U,SAChF,CAAA,EAAO7O,KAAK6f,YAAYjR,IAAI4U,GAAerQ,gBAG/CyM,EAAA1f,UAAA0jB,eAAA,SAAejD,EAAYC,OACjBW,EAAM,KAAKL,OAAOP,EAAYC,GAMpC,OALAtU,EAAkBC,0BAA0BgV,GAC5CjV,EAAkBS,4BAA4BwU,GAC9CA,EAAIhS,QACJ,KAAKmS,mBAAmBf,EAAYC,GACpCjU,EAAAA,QAAQoH,UAAUlE,SAAS7D,EAAAA,WAAW8D,IAAIC,OAAOkE,UACjD,MAGJ2L,EAAA1f,UAAA2jB,iBAAA,WACIvX,EAAkBC,0BAA0BvM,KAAKggB,YAGrDJ,EAAA1f,UAAA4jB,sBAAA,SAAsBC,GAElB,OADkB9V,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,4BAA4B0V,EAAM,YAAYlV,QAClEsE,WAGrByM,EAAA1f,UAAA8jB,oBAAA,SAAoBD,GAChB,OAAO9V,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,4BAA4B0V,EAAM,aAGhEnE,EAAA1f,UAAA+jB,aAAA,SAAa9B,EAAWI,OACdzV,EAAUoB,EAAAA,GAAGG,IAAI,mCAAmCkU,EAAM,MAEhE,OADAjW,EAAkBC,0BAA0B0B,EAAAA,QAAQnB,IAC7CmB,EAAAA,QAAQnB,GAASwE,aAAa,SAASxP,KAAI,SAAWF,GAgBzD,OAfkB,IAAdugB,EACKvgB,EAAOwc,SAAS,gBACbxc,EAAOwc,SAAS,gBAAkBxc,EAAOwc,SAAS,cAClDnQ,EAAAA,QAAQnB,GAASyC,QAIrB3N,EAAOwc,SAAS,cAChBnQ,EAAAA,QAAQnB,GAASyC,QACV3N,EAAOwc,SAAS,cACvBnQ,EAAAA,QAAQnB,GAASyC,QACjBtB,EAAAA,QAAQnB,GAASyC,SAIlBpO,QAAQC,aAIvBwe,EAAA1f,UAAAgkB,wBAAA,SAAwBvD,EAAYC,OAC1BW,EAAM,KAAKK,sBAAsBjB,EAAYC,GAEnD,OADAtU,EAAkBC,0BAA0BgV,GAC5C,MAGJ3B,EAAA1f,UAAAikB,2BAAA,SAA2BxD,EAAYC,OAC7BW,EAAM,KAAKK,sBAAsBjB,EAAYC,GAEnD,OADAtU,EAAkBoB,4BAA4B6T,GAC9C,MAGJ3B,EAAA1f,UAAAghB,OAAA,SAAOP,EAAYC,OACTW,EAAMvhB,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,cAAcsS,EAAU,mCAAmCC,EAAW,OAAO/R,QAChHZ,QAAQC,EAAAA,GAAGsM,MAAM,yDAEtB,OADAlO,EAAkBC,0BAA0BgV,GACrCA,GAGX3B,EAAA1f,UAAAkkB,kBAAA,SAAkBC,GAEd,OADA/X,EAAkBC,0BAA0BvM,KAAK+f,UAC1C/f,KAAK+f,SAASzQ,IAAI+U,EAAW,GAAGlR,WAG3CyM,EAAA1f,UAAA0hB,sBAAA,SAAsBjB,EAAYC,GAC9B,OAAO5gB,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,cAAcsS,EAAU,mCAAmCC,EAAW,YAAY/R,SAGzH+Q,EAAA1f,UAAAokB,wBAAA,WAEI,OADAhY,EAAkBsB,0BAA0B,KAAKqS,SACjD,MAGJL,EAAA1f,UAAAqkB,2BAAA,WAEI,OADAjY,EAAkBoB,4BAA4B,KAAKuS,SACnD,MAGJL,EAAA1f,UAAAskB,cAAA,WAEI,OADAlY,EAAkBC,0BAA0B,KAAKsT,aACjD,MAGJD,EAAA1f,UAAAukB,uBAAA,SAAuBlC,GAEnB,OADAjW,EAAkBC,0BAA0B0B,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,yCAAyCkU,EAAM,QAC1G,MAGJ3C,EAAA1f,UAAAwkB,mBAAA,WACI,OAAO1kB,KAAKkgB,WAAWmB,SAG3BzB,EAAA1f,UAAAykB,gBAAA,WACI,OAAO3kB,KAAKyJ,KAAK4X,SAGrBzB,EAAA1f,UAAA0kB,gCAAA,SAAgCC,EAAWlE,GACvC,OAAO3gB,KAAKyJ,KAAK6F,IAAIuV,GAAW5W,QAAQC,EAAAA,GAAGG,IAAI,cAAcsS,EAAU,aAG3Ef,EAAA1f,UAAA4kB,6BAAA,SAA6B7C,EAAW8C,EAAYpE,GAChD,OAAO3gB,KAAKkhB,OAAOe,EAAW8C,GAAY9W,QAAQC,EAAAA,GAAGG,IAAI,cAAcsS,EAAU,QAGrFf,EAAA1f,UAAA8kB,mBAAA,SAAmBC,GAEf,OADYjlB,KAAKklB,iBAAiBD,GACvB1V,SAGfqQ,EAAA1f,UAAAilB,4BAAA,SAA4BC,OAClBzD,EAAc,KAAKuD,iBAAiBE,GAAYnX,QAAQC,EAAAA,GAAGsM,MAAM,mDAEvE,OADAlO,EAAkBC,0BAA0BoV,GAC5C,MAGJ/B,EAAA1f,UAAAglB,iBAAA,SAAiBD,OACPI,EAAOrlB,KAAK6f,YAAY5R,QAAQC,EAAAA,GAAGC,kBAAkB,4EAA6E8W,IAExI,OADA3Y,EAAkBC,0BAA0B8Y,GACrCA,GAGXzF,EAAA1f,UAAAolB,kBAAA,SAAkBte,OACRue,EAAgBvlB,KAAK6f,YAAYjR,IAAIV,EAAAA,GAAGG,IAAI,2BAA2BrH,EAAI,OAAO6H,QACxFvC,EAAkBC,0BAA0BgZ,GAC5CjZ,EAAkBS,4BAA4BwY,GAC9CA,EAAchW,SAGlBqQ,EAAA1f,UAAAslB,sBAAA,WAEI,OADAlZ,EAAkBC,0BAA0BvM,KAAKsgB,mBAC1CtgB,KAAKsgB,kBAAkBnN,WAGlCyM,EAAA1f,UAAAulB,iCAAA,WAEI,OADAnZ,EAAkBwB,6BAA6B,KAAKwS,mBACpD,MAGJV,EAAA1f,UAAAwlB,gBAAA,SAAgB/E,EAAYC,OAClB2B,EAAS,KAAKX,sBAAsBjB,EAAYC,GAEtD,OADA,KAAK+E,iBAAiBpD,GACtB,MAGJ3C,EAAA1f,UAAAylB,iBAAA,SAAiBC,GAGb,OAFAtZ,EAAkBC,0BAA0BqZ,GAC5CjZ,EAAAA,QAAQoH,UAAU8R,UAAUD,GAAM3R,UAClC,MAGJ2L,EAAA1f,UAAA4lB,YAAA,SAAYnF,EAAYC,OACd2B,EAAS,KAAKX,sBAAsBjB,EAAYC,GAEtD,OADA,KAAKmF,aAAaxD,GAClB,MAGJ3C,EAAA1f,UAAA6lB,aAAA,SAAaH,GAIT,OAHAtZ,EAAkBC,0BAA0BqZ,GAC5CtZ,EAAkBS,4BAA4B6Y,GAC9CA,EAAKrW,QACL,MAERqQ,kBClVA,SAAAoG,IAEIhmB,KAAAimB,qBAAuBhY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,uDACtCrO,KAAAkmB,qBAAuBjY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gDACtCrO,KAAAmmB,kBAAoBlY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+CACnCrO,KAAAomB,aAAenY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4CAC9BrO,KAAAqmB,YAAcpY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+CAC7BrO,KAAAsmB,WAAarY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC5BrO,KAAAumB,gBAAkBtY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wCACjCrO,KAAAwmB,eAAiBvY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iDAChCrO,KAAAymB,mBAAqBxY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2DACpCrO,KAAA0mB,uBAAyBzY,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+DACxCrO,KAAA2mB,aAAe1Y,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0DAC9BrO,KAAA4mB,oBAAsB1Y,EAAAA,GAAGG,IAAI,yCAC7BrO,KAAA6mB,kBAAoB5Y,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mBACnCrO,KAAA8mB,uBAAyB7Y,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mDACxCrO,KAAA+mB,WAAa9Y,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wCAoHhC,OAlHI2X,EAAA9lB,UAAA8mB,mBAAA,SAAmBC,GACf3a,EAAkBC,0BAA0B,KAAK0Z,sBACjD3Z,EAAkBS,4BAA4B,KAAKkZ,sBACnDtZ,EAAAA,QAAQoH,UAAU8R,UAAU,KAAKI,sBAAsBhS,UACvD3H,EAAkBC,0BAA0B,KAAK0Z,sBACjD3Z,EAAkBS,4BAA4B,KAAKkZ,sBACnD,KAAKA,qBAAqB1W,QAC1BjD,EAAkBC,0BAA0B,KAAK2Z,0BAE3CE,EAAenY,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,iBAAkB8Y,IAAepY,QAIvF,OAHAvC,EAAkBS,4BAA4BqZ,GAC9C9Z,EAAkBC,0BAA0B6Z,GAC5CA,EAAa7W,QACb,MAGJyW,EAAA9lB,UAAAgnB,gCAAA,WACI5a,EAAkBoB,4BAA4B1N,KAAKmmB,oBAGvDH,EAAA9lB,UAAAinB,6BAAA,WACI7a,EAAkBC,0BAA0BvM,KAAKmmB,oBAGrDH,EAAA9lB,UAAAknB,8BAAA,WAEI,OADA9a,EAAkBkB,yBAAyB,KAAKsZ,wBAChD,MAGJd,EAAA9lB,UAAAmnB,uBAAA,WAEI,OADA/a,EAAkBC,0BAA0BvM,KAAKomB,cAC1CpmB,KAAKomB,aAAajT,WAG7B6S,EAAA9lB,UAAAonB,eAAA,WAGI,OAFAhb,EAAkBC,0BAA0BvM,KAAK6mB,mBACjDva,EAAkBC,0BAA0BvM,KAAKqmB,aAC1CrmB,KAAKqmB,YAAYlT,WAG5B6S,EAAA9lB,UAAAqnB,cAAA,WAEI,OADAjb,EAAkBC,0BAA0BvM,KAAKsmB,YAC1CtmB,KAAKsmB,WAAWnT,WAG3B6S,EAAA9lB,UAAAsnB,mBAAA,WAEI,OADAlb,EAAkBC,0BAA0BvM,KAAKumB,iBAC1CvmB,KAAKumB,gBAAgBpT,WAGhC6S,EAAA9lB,UAAAunB,gBAAA,WAMI,OALAnb,EAAkBC,0BAA0BvM,KAAKwmB,gBACjDla,EAAkBS,4BAA4B/M,KAAKwmB,gBACnD7Z,EAAAA,QAAQoH,UAAU8R,UAAU7lB,KAAKwmB,gBAAgBvS,UACjD3H,EAAkBC,0BAA0BvM,KAAKwmB,gBACjDla,EAAkBS,4BAA4B/M,KAAKwmB,gBAC5CxmB,KAAKwmB,eAAejX,SAG/ByW,EAAA9lB,UAAAwnB,oBAAA,WAGI,OAFApb,EAAkBC,0BAA0BvM,KAAK2mB,cACjDra,EAAkBS,4BAA4B/M,KAAK2mB,cAC5C3mB,KAAK2mB,aAAapX,SAG7ByW,EAAA9lB,UAAAynB,0BAAA,SAA0BC,GACtBtb,EAAkBC,0BAA0B0B,EAAAA,QAAQW,IAAI,KAAKgY,qBAAqB/X,aAC5E0L,EAAStM,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,wCAAyCyZ,IAGrF,OAFAtb,EAAkBC,0BAA0BgO,GAC5CA,EAAOhL,QACP,MAGJyW,EAAA9lB,UAAA2nB,uBAAA,eACUzF,EAAWpW,EAAAA,WAAWqW,QAAQC,QACpChW,EAAkBC,0BAA0B0B,EAAAA,QAAQW,IAAI5O,KAAK4mB,qBAAqB/X,aAC5E2T,EAAc,GAUpB,OATAvU,EAAAA,QAAQW,IAAI5O,KAAK4mB,qBAAqBnE,KAAI,SAAWqF,GACjDA,EAAc3U,UAAUrR,KAAI,SAAWuB,GACtB,KAATA,GACAmf,EAAYtf,KAAKG,OAG1BvB,KAAI,WACHsgB,EAASU,QAAQN,KAEdJ,EAASC,SAGpB2D,EAAA9lB,UAAA6nB,8BAAA,WACIzb,EAAkBC,0BAA0BvM,KAAKymB,qBAGrDT,EAAA9lB,UAAA8nB,kCAAA,WACI1b,EAAkBC,0BAA0BvM,KAAK0mB,yBAGrDV,EAAA9lB,UAAA+nB,6BAAA,WACI3b,EAAkBoB,4BAA4B1N,KAAKymB,qBAGvDT,EAAA9lB,UAAAgoB,iCAAA,WACI5b,EAAkBoB,4BAA4B1N,KAAK0mB,yBAGvDV,EAAA9lB,UAAAioB,sBAAA,WAOI,OANA7b,EAAkBC,0BAA0BvM,KAAK+mB,YAC3B/mB,KAAK+mB,WAAW5T,UAAUrR,KAAI,SAAWsmB,GAE3D,OAD2BA,EAAYC,MAAM,OAAO,MAMhErC,kBCpIA,SAAAsC,IAEItoB,KAAAuoB,cAAgBta,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC/BrO,KAAAwoB,eAAiBva,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+CAChCrO,KAAAyoB,qBAAuBxa,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,qDACtCrO,KAAA0b,WAAazN,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,sBAC3BrF,KAAA0oB,aAAeza,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,yBA8BjC,OA5BIijB,EAAApoB,UAAA2c,gBAAA,WACIvQ,EAAkBC,0BAA0BvM,KAAK0b,YACjD1b,KAAK0b,WAAWnM,SAGpB+Y,EAAApoB,UAAAyoB,kBAAA,WACIrc,EAAkBC,0BAA0BvM,KAAK0oB,cACjD1oB,KAAK0oB,aAAanZ,SAGtB+Y,EAAApoB,UAAA0oB,eAAA,WACItc,EAAkBC,0BAA0BvM,KAAKuoB,gBAGrDD,EAAApoB,UAAA2oB,aAAA,WAEI,OADAvc,EAAkBC,0BAA0BvM,KAAKuoB,eAC1CvoB,KAAKuoB,cAAcpV,WAG9BmV,EAAApoB,UAAA4oB,cAAA,WAEI,OADAxc,EAAkBC,0BAA0BvM,KAAKwoB,gBAC1CxoB,KAAKwoB,eAAerV,WAG/BmV,EAAApoB,UAAA6oB,oBAAA,WAEI,OADAzc,EAAkBC,0BAA0BvM,KAAKyoB,sBAC1CzoB,KAAKyoB,qBAAqBtV,WAEzCmV,sBC3BI,SAAAU,EAAYnJ,QAAA,IAAAA,IAAAA,EAA6B5R,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,sBAAsBQ,SALlF7O,KAAAipB,WAAahb,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,qBAC5BrO,KAAAkpB,aAAehb,EAAAA,GAAGG,IAAI,8CAKlBrO,KAAK6f,YAAcA,EACnB7f,KAAKmpB,UAAY,IAAIvJ,EAAuB5f,KAAK6f,aACjD7f,KAAKggB,UAAYH,EAAYjR,IAAIV,EAAAA,GAAGG,IAAI,oCAAoCQ,QA0DpF,OAvDIma,EAAA9oB,UAAAkpB,gBAAA,SAAgBnE,OAENoE,EADM,KAAKF,UAAUjI,OAAO,eAAgB+D,GAC7BhX,QAAQC,EAAAA,GAAGC,kBAAkB,6BAA8B,SAEhF,OADA7B,EAAkBC,0BAA0B8c,GAC5C,MAGJL,EAAA9oB,UAAAopB,kBAAA,SAAkBrE,OAERoE,EADM,KAAKF,UAAUjI,OAAO,eAAgB+D,GAC7BhX,QAAQC,EAAAA,GAAGC,kBAAkB,6BAA8B,cAEhF,OADA7B,EAAkBC,0BAA0B8c,GAC5C,MAGJL,EAAA9oB,UAAA2jB,iBAAA,WACI,OAAOvX,EAAkBC,0BAA0BvM,KAAKggB,YAG5DgJ,EAAA9oB,UAAAijB,WAAA,SAAWoG,GACP,OAAOvpB,KAAKmpB,UAAUhG,WAAW,eAAgBoG,IAGrDP,EAAA9oB,UAAAuhB,UAAA,SAAU8H,GACN,OAAOvpB,KAAKmpB,UAAU1H,UAAU,eAAgB8H,IAGpDP,EAAA9oB,UAAA8iB,gBAAA,SAAgBuG,GACZ,OAAOvpB,KAAKmpB,UAAUnG,gBAAgB,eAAgBuG,IAG1DP,EAAA9oB,UAAAspB,kBAAA,SAAkBvE,GAKd,OAJY,KAAKkE,UAAUjI,OAAO,eAAgB+D,GAC9ChX,QAAQ,KAAKib,cAAc3Z,QAC/BjD,EAAkBC,0BAA0B,KAAK0c,YACjDtc,EAAAA,QAAQ8c,MAAM,KACd,MAGJT,EAAA9oB,UAAAwpB,8BAAA,WAEI,OADApd,EAAkBY,6BAA6B,KAAK+b,YACpD,MAGJD,EAAA9oB,UAAAypB,cAAA,WACI,OAAO,IAAI/J,EAAuB5f,KAAK6f,cAG3CmJ,EAAA9oB,UAAAqjB,uBAAA,SAAuBhB,GACnB,OAAOviB,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDyG,EAAA9oB,UAAA0jB,eAAA,SAAe2F,GAEX,OADA,KAAKJ,UAAUvF,eAAe,eAAgB2F,GAC9C,MAERP,KCzEAY,EAAA,SAAAA,oBCIA,SAAAC,IACI7pB,KAAA0R,OAASzD,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8BACxBrO,KAAAgX,OAAShX,KAAK0R,OAAOzD,QAAQC,EAAAA,GAAGG,IAAI,6DACpCrO,KAAA8pB,mBAAqB9pB,KAAK0R,OAAOzD,QAAQC,EAAAA,GAAGG,IAAI,mEAChDrO,KAAA+pB,YAAc/pB,KAAK8pB,mBAAmB7b,QAAQC,EAAAA,GAAGsM,MAAM,4DACvDxa,KAAAgqB,iBAAmBhqB,KAAK0R,OAAOzD,QAAQC,EAAAA,GAAGG,IAAI,0DAC9CrO,KAAAiqB,aAAehc,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sEAC9BrO,KAAAkqB,eAAiBjc,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sEAChCrO,KAAAmqB,YAAc,IAAInB,EAAiBhpB,KAAK0R,QAsE5C,OApEImY,EAAA3pB,UAAAkqB,uBAAA,WAEI,OADA9d,EAAkBC,0BAA0B,KAAKmF,QACjD,MAGJmY,EAAA3pB,UAAAmqB,0BAAA,WAEI,OADA/d,EAAkBoB,4BAA4B,KAAKgE,QACnD,MAGJmY,EAAA3pB,UAAAoqB,oBAAA,WAEI,OADAhe,EAAkBC,0BAA0BvM,KAAKgX,QAC1ChX,KAAKgX,OAAO7D,WAGvB0W,EAAA3pB,UAAAqqB,4BAAA,WAEI,OADAje,EAAkBC,0BAA0B,KAAKud,oBACjD,MAGJD,EAAA3pB,UAAAsqB,eAAA,WAEI,OADAle,EAAkBC,0BAA0BvM,KAAK+pB,aAC1C/pB,KAAK+pB,YAAY5W,WAG5B0W,EAAA3pB,UAAAuqB,6BAAA,SAA6BC,GACzBpe,EAAkBC,0BAA0BvM,KAAKgqB,iBAAiB/b,QAAQC,EAAAA,GAAGC,kBAAkB,8BAA+Buc,MAGlIb,EAAA3pB,UAAAyqB,6BAAA,WACIre,EAAkBC,0BAA0BvM,KAAKiqB,eAGrDJ,EAAA3pB,UAAA0qB,kBAAA,WAEI,OADAte,EAAkBC,0BAA0BvM,KAAKiqB,cAC1CjqB,KAAKiqB,aAAa1a,SAG7Bsa,EAAA3pB,UAAA2qB,+BAAA,WACIve,EAAkBC,0BAA0BvM,KAAKkqB,iBAGrDL,EAAA3pB,UAAA4qB,sBAAA,WAEI,OADAxe,EAAkBC,0BAA0BvM,KAAKkqB,gBAC1ClqB,KAAKkqB,eAAe/W,WAG/B0W,EAAA3pB,UAAA6qB,oBAAA,WAEI,OADAze,EAAkBC,0BAA0BvM,KAAKkqB,gBAC1ClqB,KAAKkqB,eAAe3a,SAG/Bsa,EAAA3pB,UAAA8qB,yBAAA,WACI,OAAOhrB,KAAKmqB,YAAYR,gBAAgBrG,gBAG5CuG,EAAA3pB,UAAA+qB,gCAAA,SAAgC5nB,GAC5BiJ,EAAkBC,0BAA0BvM,KAAK8pB,oBACjD9pB,KAAK8pB,mBAAmBja,SAASxM,IAGrCwmB,EAAA3pB,UAAAgrB,+BAAA,SAA+BlkB,GAC3BhH,KAAKmqB,YAAYR,gBAAgBrE,kBAAkBte,IAGvD6iB,EAAA3pB,UAAAirB,gBAAA,WACI,OAAOnrB,KAAKmqB,aAEpBN,kBC/EA,SAAAuB,IAEIprB,KAAAqrB,YAAcpd,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,aAC7BrO,KAAAsrB,cAAgBrd,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC/BrO,KAAAurB,WAAatd,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,0CAA2C,SACrFnO,KAAAwrB,aAAetd,EAAAA,GAAGG,IAAI,SACtBrO,KAAAyrB,aAAevd,EAAAA,GAAGG,IAAI,SACtBrO,KAAA0rB,cAAgBzd,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gCAC/BrO,KAAA2rB,2BAA6B1d,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wCAC5CrO,KAAA4rB,iBAAmB3d,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,mCACjCrF,KAAA6rB,wBAA0B5d,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,mDAAmDQ,QAChG7O,KAAA8rB,kBAAoB7d,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mCACnCrO,KAAA+rB,eAAiB9d,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,sBAC/BrF,KAAAgsB,aAAe9d,EAAAA,GAAGG,IAAI,6CAuI1B,OArII+c,EAAAlrB,UAAA+rB,cAAA,SAAcnf,EAASkI,EAAOzT,OACpB2qB,EAAoBje,EAAAA,QAAQnB,EAAQkI,IAG1C,OAFA1I,EAAkBC,0BAA0B2f,GAC5CA,EAAa5U,QAAQzH,SAAStO,GAC9B,MAGJ6pB,EAAAlrB,UAAAisB,qBAAA,SAAqBC,OACXF,EAAeje,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,gCAAgC+d,EAAO,iBAAiBvd,QAChGvC,EAAkBC,0BAA0B2f,IAGhDd,EAAAlrB,UAAAmsB,oBAAA,SAAoBD,OACVE,EAAgBre,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gCAAgC+d,EAAO,yBAC5E9f,EAAkBC,0BAA0B+f,IAGhDlB,EAAAlrB,UAAAqsB,UAAA,SAAUH,OACAI,EAASve,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gCAAgC+d,EAAO,iBAErE,OADA9f,EAAkBC,0BAA0BigB,GACrCA,GAGXpB,EAAAlrB,UAAAusB,cAAA,SAAcL,EAASM,OACbnrB,EAAQvB,KAAKusB,UAAUH,GAASne,QAAQye,GAAqB1sB,KAAKwrB,cAExE,OADAlf,EAAkBC,0BAA0BhL,GACrCA,EAAM+P,aAAa,UAG9B8Z,EAAAlrB,UAAAysB,cAAA,SAAcP,EAASQ,OACbvqB,EAAQrC,KAAKusB,UAAUH,GAASxd,IAAIge,GAAqB5sB,KAAKyrB,cAAc5c,QAElF,OADAvC,EAAkBC,0BAA0BlK,GACrCA,EAAM8Q,WAGjBiY,EAAAlrB,UAAA2sB,qBAAA,SAAqBT,GAEjB,OADcpsB,KAAKusB,UAAUH,GAASne,QAAQjO,KAAKgsB,cACtC7Y,WAGjBiY,EAAAlrB,UAAA4sB,aAAA,SAAaV,EAASQ,OACZvqB,EAAQrC,KAAKusB,UAAUH,GAASne,QAAQ2e,GAAqB5sB,KAAKyrB,cAExE,OADAnf,EAAkBC,0BAA0BlK,GACrCA,EAAM8Q,WAGjBiY,EAAAlrB,UAAA6sB,oBAAA,SAAoBX,EAAStf,QAAA,IAAAA,IAAAA,EAAA,aACnBkgB,EAAqB/e,EAAAA,QAAQC,EAAAA,GAAGG,IAAOvB,EAAO,IAAIsf,IAAY9a,aAAa,eAEjF,OADAhF,EAAkBC,0BAA0BygB,GACrCA,GAGX5B,EAAAlrB,UAAA+sB,gBAAA,SAAgBngB,EAASkI,EAAOkY,GAE5B,OADA5gB,EAAkBe,yBAAyBY,EAAAA,QAAQnB,EAAQkI,IAASkY,GACpE,MAGJ9B,EAAAlrB,UAAAitB,YAAA,WAGI,OAFA7gB,EAAkBC,0BAA0B,KAAK+e,eACjD,KAAKA,cAAc/b,QACnB,MAGJ6b,EAAAlrB,UAAAktB,SAAA,WAII,OAHA9gB,EAAkBC,0BAA0B,KAAKgf,YACjDjf,EAAkBS,4BAA4B,KAAKwe,YACnD,KAAKA,WAAWhc,QAChB,MAGJ6b,EAAAlrB,UAAAmtB,kBAAA,WAEI,OADA/gB,EAAkBoB,4BAA4B,KAAK2d,aACnD,MAGJD,EAAAlrB,UAAAotB,qBAAA,WAEI,OADAhhB,EAAkBC,0BAA0B,KAAK8e,aACjD,MAGJD,EAAAlrB,UAAAqtB,iBAAA,WAEI,OADAjhB,EAAkBC,0BAA0BvM,KAAK0rB,eAC1C1rB,KAAK0rB,cAAcvY,WAG9BiY,EAAAlrB,UAAAstB,8BAAA,WAEI,OADAlhB,EAAkBC,0BAA0BvM,KAAK2rB,4BAC1C3rB,KAAK2rB,2BAA2BxY,WAG3CiY,EAAAlrB,UAAAutB,wBAAA,WAGI,OAFAnhB,EAAkBC,0BAA0B,KAAKqf,kBACjD,KAAKA,iBAAiBrc,QACtB,MAGJ6b,EAAAlrB,UAAAwtB,WAAA,SAAWC,GAKP,OAJArhB,EAAkBC,0BAA0B,KAAKsf,yBACjD,KAAKA,wBAAwBtc,QAC7BjD,EAAkBC,0BAA0B,KAAKuf,mBACjD,KAAK8B,uBAAuBD,GAC5B,MAGJvC,EAAAlrB,UAAA0tB,uBAAA,SAAuBD,OACbE,EAAkB5f,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,OAAQwf,IAC7DrhB,EAAkBC,0BAA0BshB,GAC5CA,EAAgBte,SAGpB6b,EAAAlrB,UAAA4tB,0BAAA,SAA0B1B,OAEhB2B,EADS9f,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gCAAgC+d,EAAO,iBACvCne,QAAQC,EAAAA,GAAGG,IAAI,+BAE7C,OADA/B,EAAkBC,0BAA0BwhB,GACrCA,GAGX3C,EAAAlrB,UAAA8tB,aAAA,WAEI,OADA1hB,EAAkBC,0BAA0BvM,KAAK+rB,gBAC1C/rB,KAAK+rB,eAAexc,SAG/B6b,EAAAlrB,UAAA+tB,oBAAA,SAAoB7B,EAAS7qB,OACnB2sB,EAAajgB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG+mB,IAGjC,OAFA9f,EAAkBC,0BAA0B2hB,GAC5CA,EAAM5W,QAAQzH,SAAStO,GACvB,MAGJ6pB,EAAAlrB,UAAAiuB,6BAAA,WAEI,OADA7hB,EAAkBC,0BAA0BvM,KAAK+rB,gBAC1C/rB,KAAK+rB,eAAeza,aAAa,aAEhD8Z,kBCpJA,SAAAgD,IAEIpuB,KAAAgH,KAAOiH,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wBACtBrO,KAAAquB,QAAUpgB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wBACzBrO,KAAAsuB,YAAcrgB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,kCAC7BrO,KAAAuuB,SAAWtgB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sCAC1BrO,KAAAwuB,YAAcvgB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8BAC7BrO,KAAAyuB,mBAAqBxgB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4CACpCrO,KAAAiqB,aAAehc,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+BAC9BrO,KAAA0uB,KAAOzgB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,8BAA8BQ,QAsF5D,OApFIuf,EAAAluB,UAAAotB,qBAAA,WAEI,OADAhhB,EAAkBC,0BAA0B,KAAKmiB,MACjD,MAGJN,EAAAluB,UAAAyuB,QAAA,SAAQC,GAIJ,OAHAtiB,EAAkBC,0BAA0B,KAAKvF,MACjD,KAAKA,KAAKsQ,QACV,KAAKtQ,KAAK6I,SAAS+e,GACnB,MAGJR,EAAAluB,UAAA2uB,eAAA,SAAeC,GAGX,OAFAxiB,EAAkBC,0BAA0B,KAAK+hB,aACjD,KAAKA,YAAYze,SAASif,GAC1B,MAGJV,EAAAluB,UAAA6uB,YAAA,SAAYC,GAGR,OAFA1iB,EAAkBC,0BAA0B,KAAKgiB,UACjD,KAAKA,SAAS1e,SAASmf,GACvB,MAGJZ,EAAAluB,UAAA+uB,WAAA,SAAWC,GAIP,OAHA5iB,EAAkBC,0BAA0B,KAAK8hB,SACjD,KAAKc,WAAW,KAAKd,SACrB,KAAKA,QAAQxe,SAASqf,GACtB,MAGJd,EAAAluB,UAAAkvB,iBAAA,WAGI,OAFA9iB,EAAkBC,0BAA0BvM,KAAKwuB,aACjDliB,EAAkBS,4BAA4B/M,KAAKwuB,aAC5CxuB,KAAKwuB,YAAYjf,SAG5B6e,EAAAluB,UAAAmvB,0BAAA,WAEI,OADA/iB,EAAkBC,0BAA0B,KAAKkiB,oBACjD,MAGJL,EAAAluB,UAAAovB,2BAAA,WAEI,OADAhjB,EAAkBC,0BAA0B,KAAKiiB,YAAYld,aAAa,aAC1E,MAGJ8c,EAAAluB,UAAA0qB,kBAAA,WAGI,OAFAte,EAAkBC,0BAA0BvM,KAAKiqB,cACjD3d,EAAkBS,4BAA4B/M,KAAKiqB,cAC5CjqB,KAAKiqB,aAAa1a,SAG7B6e,EAAAluB,UAAAqvB,KAAA,SAAKziB,GAGD,OAFAA,EAAQyC,QACRzC,EAAQ+C,SAASC,EAAAA,IAAI0f,KACrB,MAGJpB,EAAAluB,UAAAuvB,gCAAA,SAAgC5jB,EAAO6jB,QAAA,IAAAA,IAAAA,EAAA,iBAC7BC,EAAe1hB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkBuhB,EAAY7jB,IAE9D,OADAS,EAAkBC,0BAA0BojB,GAC5C,MAGJvB,EAAAluB,UAAA0vB,iBAAA,SAAiB/jB,GAEb,OADA,KAAK4jB,gCAAgC5jB,EAAO,+BAC5C,MAGJuiB,EAAAluB,UAAA2vB,aAAA,SAAahkB,GAET,OADA,KAAK4jB,gCAAgC5jB,EAAO,mBAC5C,MAGJuiB,EAAAluB,UAAAivB,WAAA,SAAWriB,GACPR,EAAkBC,0BAA0BO,GAC5CR,EAAkBS,4BAA4BD,GAC9CA,EAAQwE,aAAa,SAASxP,KAAI,SAAEF,GAChC,IAAK,IAAIpB,EAAIoB,EAAOjB,OAAa,GAALH,EAAQA,IAChCsM,EAAQ+C,SAAS7D,EAAAA,WAAW8D,IAAI4H,eAIhD0W,kBC/FA,SAAA0B,IAEI9vB,KAAA+vB,cAAgB9hB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC/BrO,KAAAgwB,YAAc/hB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4CAC7BrO,KAAAiwB,cAAgBhiB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC/BrO,KAAAkwB,aAAejiB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,6CAA6CQ,QAC/E7O,KAAAmwB,cAAgBliB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC/BrO,KAAAowB,aAAeniB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0DAC9BrO,KAAAqwB,gBAAkBpiB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,gDACjCrO,KAAAswB,kBAAoBriB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,kDACnCrO,KAAAuwB,aAAetiB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,6CAA6CQ,QAC/E7O,KAAAwwB,QAAUviB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,wCAAwCQ,QACrE7O,KAAAywB,iBAAmBxiB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iDAClCrO,KAAA0wB,iBAAmBziB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,uEAyDtC,OAvDIyhB,EAAA5vB,UAAAywB,YAAA,WAEI,OADArkB,EAAkBC,0BAA0BvM,KAAK+vB,eAC1C/vB,KAAK+vB,cAAc5c,WAG9B2c,EAAA5vB,UAAA0wB,UAAA,WAEI,OADAtkB,EAAkBC,0BAA0BvM,KAAKgwB,aAC1ChwB,KAAKgwB,YAAY7c,WAG5B2c,EAAA5vB,UAAA2wB,YAAA,WAEI,OADAvkB,EAAkBC,0BAA0BvM,KAAKiwB,eAC1CjwB,KAAKiwB,cAAc9c,WAG9B2c,EAAA5vB,UAAA4wB,YAAA,WAEI,OADAxkB,EAAkBC,0BAA0BvM,KAAKmwB,eAC1CnwB,KAAKmwB,cAAchd,WAG9B2c,EAAA5vB,UAAA6wB,cAAA,WAEI,OADAzkB,EAAkBC,0BAA0BvM,KAAKqwB,iBAC1CrwB,KAAKqwB,gBAAgBld,WAGhC2c,EAAA5vB,UAAA8wB,gBAAA,WAEI,OADA1kB,EAAkBC,0BAA0BvM,KAAKswB,mBAC1CtwB,KAAKswB,kBAAkBnd,WAGlC2c,EAAA5vB,UAAA+wB,WAAA,WAEI,OADA3kB,EAAkBC,0BAA0BvM,KAAKuwB,cAC1CvwB,KAAKuwB,aAAapd,WAG7B2c,EAAA5vB,UAAAgxB,WAAA,WAEI,OADA5kB,EAAkBC,0BAA0BvM,KAAKowB,cAC1CpwB,KAAKowB,aAAajd,WAG7B2c,EAAA5vB,UAAAyY,MAAA,WAEI,OADArM,EAAkBC,0BAA0BvM,KAAKwwB,SAC1CxwB,KAAKwwB,QAAQrd,WAGxB2c,EAAA5vB,UAAAixB,eAAA,WAEI,OADA7kB,EAAkBC,0BAA0BvM,KAAKywB,kBAC1CzwB,KAAKywB,iBAAiBtd,WAGjC2c,EAAA5vB,UAAAkxB,WAAA,WAEI,OADA9kB,EAAkBC,0BAA0BvM,KAAKkwB,cAC1ClwB,KAAKkwB,aAAa/c,WAGjC2c,kBCtEA,SAAAuB,IAEIrxB,KAAAwwB,QAAUviB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,wCAAwCQ,QACrE7O,KAAAsxB,UAAYrjB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,0CAA0CQ,QACzE7O,KAAAgwB,YAAc/hB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4CAC7BrO,KAAAuxB,eAAiBtjB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+CAChCrO,KAAAwxB,eAAiBvjB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,+CAA+CQ,QACnF7O,KAAAyxB,kBAAoBxjB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,kDAAkDQ,QACzF7O,KAAA0xB,cAAgBzjB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8CAC/BrO,KAAA2xB,iBAAmB1jB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,iDAAiDQ,QA0C3F,OAxCIwiB,EAAAnxB,UAAAyY,MAAA,WAEI,OADArM,EAAkBC,0BAA0BvM,KAAKwwB,SAC1CxwB,KAAKwwB,QAAQrd,WAGxBke,EAAAnxB,UAAA0xB,QAAA,WAEI,OADAtlB,EAAkBC,0BAA0BvM,KAAKsxB,WAC1CtxB,KAAKsxB,UAAUne,WAG1Bke,EAAAnxB,UAAA0wB,UAAA,WAEI,OADAtkB,EAAkBC,0BAA0BvM,KAAKgwB,aAC1ChwB,KAAKgwB,YAAY7c,WAG5Bke,EAAAnxB,UAAA2xB,aAAA,WAEI,OADAvlB,EAAkBC,0BAA0BvM,KAAKuxB,gBAC1CvxB,KAAKuxB,eAAepe,WAG/Bke,EAAAnxB,UAAA4xB,aAAA,WAEI,OADAxlB,EAAkBC,0BAA0BvM,KAAKwxB,gBAC1CxxB,KAAKwxB,eAAere,WAG/Bke,EAAAnxB,UAAA6xB,gBAAA,WAEI,OADAzlB,EAAkBC,0BAA0BvM,KAAKyxB,mBAC1CzxB,KAAKyxB,kBAAkBte,WAGlCke,EAAAnxB,UAAA8xB,YAAA,WAEI,OADA1lB,EAAkBC,0BAA0BvM,KAAK0xB,eAC1C1xB,KAAK0xB,cAAcve,WAG9Bke,EAAAnxB,UAAA+xB,eAAA,WAEI,OADA3lB,EAAkBC,0BAA0BvM,KAAK2xB,kBAC1C3xB,KAAK2xB,iBAAiBxe,WAGrCke,kBCnDA,SAAAa,IAEIlyB,KAAAmyB,iBAAmBlkB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0CAClCrO,KAAA2P,MAAQ1B,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,oCACtBrF,KAAAoyB,gBAAkBnkB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,uBAChCrF,KAAAqyB,kBAAoBnkB,EAAAA,GAAG7I,GAAG,sBAC1BrF,KAAAsyB,oBAAsBpkB,EAAAA,GAAG7I,GAAG,wBAuDhC,OArDI6sB,EAAAhyB,UAAAqyB,kBAAA,eACUhH,EAAa,KAAK4G,iBAAiBlkB,QAAQ,KAAKokB,mBAItD,OAHA/lB,EAAkBC,0BAA0Bgf,GAC5CA,EAAWhc,QACXjD,EAAkBY,6BAA6B,KAAKilB,kBACpD,MAGJD,EAAAhyB,UAAAsyB,yBAAA,WAEI,OADAlmB,EAAkBC,0BAA0BvM,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKqyB,oBACxEryB,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKqyB,mBAAmB9Z,aAGjE2Z,EAAAhyB,UAAAuyB,oBAAA,eACUxI,EAAe,KAAKkI,iBAAiBlkB,QAAQ,KAAKqkB,qBAIxD,OAHAhmB,EAAkBC,0BAA0B0d,GAC5CA,EAAa1a,QACbjD,EAAkBY,6BAA6B,KAAKilB,kBACpD,MAGJD,EAAAhyB,UAAAwyB,2BAAA,WAEI,OADApmB,EAAkBC,0BAA0BvM,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKsyB,sBACxEtyB,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKsyB,qBAAqB/Z,aAGnE2Z,EAAAhyB,UAAAyyB,cAAA,WAEI,OADArmB,EAAkBC,0BAA0BvM,KAAKoyB,iBAC1CpyB,KAAKoyB,gBAAgB9gB,aAAa,UAG7C4gB,EAAAhyB,UAAA0yB,cAAA,SAAcC,GAGV,OAFA,KAAKC,kBACL,KAAKV,gBAAgBviB,SAASgjB,GAC9B,MAGJX,EAAAhyB,UAAA4yB,gBAAA,WAAA,IAAArb,EAAAzX,KAQI,OAPAsM,EAAkBC,0BAA0B,KAAK6lB,iBACjD,KAAKA,gBAAgB7iB,QACrB,KAAK6iB,gBAAgB9gB,aAAa,SAASxP,KAAI,SAAEP,GAC7C,IAAK,IAAIf,EAAIe,EAAMZ,OAAa,GAALH,EAAQA,IAC/B,EAAK4xB,gBAAgBviB,SAAS7D,EAAAA,WAAW8D,IAAI4H,cAGrD,MAGJwa,EAAAhyB,UAAA6yB,SAAA,WAEI,OADAzmB,EAAkBC,0BAA0BvM,KAAK2P,OAC1C3P,KAAK2P,MAAMwD,WAG1B+e,kBC7DA,SAAAc,IAEIhzB,KAAAizB,gBAAkBhlB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,qCAChCrF,KAAA4a,eAAiB3M,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,sCAAsCQ,QAC1E7O,KAAAurB,WAAatd,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wDAC5BrO,KAAAkzB,aAAejlB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0DAC9BrO,KAAAmzB,aAAellB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0DAE9BrO,KAAAozB,4BAA8B,IAAIlB,EA8KtC,OA5KIc,EAAA9yB,UAAAmzB,wBAAA,WACI,OAAOrzB,KAAKozB,6BAGhBJ,EAAA9yB,UAAAozB,2BAAA,WAGI,OAFAhnB,EAAkBC,0BAA0B,KAAK0mB,iBACjD,KAAKA,gBAAgB1jB,QACrB,MAGJyjB,EAAA9yB,UAAAqzB,qCAAA,eACUC,EAAyBvlB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,sDAAsDQ,QACxGvC,EAAkBC,0BAA0BinB,OACtCvO,EAAUhX,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,iEAAiEQ,QAEpG,OADAvC,EAAkBC,0BAA0B0Y,GAC5C,MAGJ+N,EAAA9yB,UAAAuzB,wBAAA,SAAwBlZ,GACpB,KAAKmZ,qBAAqB,cAEpBC,EAAgB1lB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAInF,OAHAvC,EAAkBS,4BAA4B4mB,GAC9CrnB,EAAkBC,0BAA0BonB,GAC5CA,EAAcpkB,QACd,MAGJyjB,EAAA9yB,UAAA0zB,4BAAA,WACI,OAAO3lB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,qDAAqD8E,WAG/E6f,EAAA9yB,UAAA2zB,sBAAA,SAAsBtZ,GAClB,KAAKmZ,qBAAqB,YAEpBI,EAAc7lB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAIjF,OAHAvC,EAAkBS,4BAA4B+mB,GAC9CxnB,EAAkBC,0BAA0BunB,GAC5CA,EAAYvkB,QACZ,MAGJyjB,EAAA9yB,UAAA6zB,2BAAA,eACUC,EAAc/lB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,mDAAmDQ,QAE1F,OADAvC,EAAkBC,0BAA0BynB,GACrCA,EAAY7gB,WAGvB6f,EAAA9yB,UAAA+zB,uBAAA,SAAuB1Z,GACnB,KAAKmZ,qBAAqB,aAEpBQ,EAAejmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAIlF,OAHAvC,EAAkBS,4BAA4BmnB,GAC9C5nB,EAAkBC,0BAA0B2nB,GAC5CA,EAAa3kB,QACb,MAGJyjB,EAAA9yB,UAAAi0B,4BAAA,WACI,OAAOlmB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oDAAoD8E,WAG9E6f,EAAA9yB,UAAAwzB,qBAAA,SAAqBnZ,OACX6Z,EAAgBnmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,sCAAwCkM,EAAS,6CAA6C1L,QACvIvC,EAAkBC,0BAA0B6nB,GAC5C9nB,EAAkBS,4BAA4BqnB,GAC9CA,EAAc7kB,QACdjD,EAAkBC,0BAA0BvM,KAAK4a,iBAGrDoY,EAAA9yB,UAAAm0B,mBAAA,SAAmB9Z,GACf,KAAKmZ,qBAAqB,eAEpBY,EAAiBrmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAIpF,OAHAvC,EAAkBS,4BAA4BunB,GAC9ChoB,EAAkBC,0BAA0B+nB,GAC5CA,EAAe/kB,QACf,MAGEyjB,EAAA9yB,UAAAq0B,uBAAN,yGAE6B,MAAA,CAAA,EADLtmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,yFACI8E,kBAK3C,OALMqhB,EAAmBvvB,EAAA3C,OAKzB,CAAA,EAJoBkyB,EAAY/Q,OAAM,SAAE7a,GAEpC,OAAmC,IADV4rB,EAAY/Q,OAAM,SAAEgR,GAAY,OAAAA,IAAY7rB,IAC7CjI,SAETA,SAAW6zB,EAAY7zB,cAG9CqyB,EAAA9yB,UAAAw0B,0BAAA,WAGI,OAFA10B,KAAK0zB,qBAAqB,WACFzlB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,iCACpBgT,SAG3B2R,EAAA9yB,UAAAy0B,qBAAA,SAAqBpa,GACjB,OAAO,KAAKqa,YAAY,oBAAqBra,IAGjDyY,EAAA9yB,UAAA20B,qBAAA,WACI,OAAO70B,KAAK80B,YAAY,sBAG5B9B,EAAA9yB,UAAA40B,YAAA,SAAYC,OACFjoB,EAAUmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,6DAA+D0mB,EAAW,OAAOlmB,QAEpH,OADAvC,EAAkBC,0BAA0BO,GACrCA,EAAQwE,aAAa,UAGhC0hB,EAAA9yB,UAAA00B,YAAA,SAAYG,EAAUxa,OACZzN,EAAUmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,6DAA+D0mB,EAAW,OAAOlmB,QAKpH,OAJAvC,EAAkBC,0BAA0BO,GAC5CA,EAAQwK,QACRxK,EAAQ+C,SAAS0K,GACjBzN,EAAQ+C,SAAS7D,EAAAA,WAAW8D,IAAIC,OAChC,MAGJijB,EAAA9yB,UAAA80B,2BAAA,WAEI,OADA1oB,EAAkBC,0BAA0B,KAAKgf,YACjD,MAGJyH,EAAA9yB,UAAA+0B,6BAAA,WAEI,OADA3oB,EAAkBC,0BAA0B,KAAK2mB,cACjD,MAGJF,EAAA9yB,UAAAg1B,6BAAA,WAEI,OADA5oB,EAAkBC,0BAA0B,KAAK4mB,cACjD,MAGJH,EAAA9yB,UAAAsyB,yBAAA,WAEI,OADAlmB,EAAkBC,0BAA0BvM,KAAKurB,YAC1CvrB,KAAKurB,WAAWhT,aAG3Bya,EAAA9yB,UAAAi1B,2BAAA,WAEI,OADA7oB,EAAkBC,0BAA0BvM,KAAKkzB,cAC1ClzB,KAAKkzB,aAAa3a,aAG7Bya,EAAA9yB,UAAAk1B,2BAAA,WAEI,OADA9oB,EAAkBC,0BAA0BvM,KAAKmzB,cAC1CnzB,KAAKmzB,aAAa5a,aAG7Bya,EAAA9yB,UAAAm1B,kBAAA,eACUC,EAAiBrnB,EAAAA,QAAQC,EAAAA,GAAGG,IAAG,oEAKrC,OAJA/B,EAAkBS,4BAA4B/M,KAAKkzB,cACnD5mB,EAAkBC,0BAA0BvM,KAAKkzB,cACjD5mB,EAAkBY,6BAA6BooB,GAC/Ct1B,KAAKkzB,aAAa3jB,QACXvP,KAAKozB,6BAGhBJ,EAAA9yB,UAAAq1B,kBAAA,WAGI,OAFAjpB,EAAkBC,0BAA0B,KAAK4mB,cACjD,KAAKA,aAAa5jB,QAClB,MAGJyjB,EAAA9yB,UAAAs1B,gBAAA,eACUF,EAAiBrnB,EAAAA,QAAQC,EAAAA,GAAGG,IAAG,0CAKrC,OAJA/B,EAAkBS,4BAA4B,KAAKwe,YACnDjf,EAAkBC,0BAA0B,KAAKgf,YACjDjf,EAAkBY,6BAA6BooB,GAC/C,KAAK/J,WAAWhc,QAChB,MAERyjB,kBCtLA,SAAAyC,IAEIz1B,KAAAmyB,iBAAmBlkB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iCAClCrO,KAAA2P,MAAQ1B,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,iCACtBrF,KAAAoyB,gBAAkBnkB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,uBAChCrF,KAAAqyB,kBAAoBnkB,EAAAA,GAAG7I,GAAG,sBAC1BrF,KAAAsyB,oBAAsBpkB,EAAAA,GAAG7I,GAAG,wBAuDhC,OArDIowB,EAAAv1B,UAAAqyB,kBAAA,eACUhH,EAAa,KAAK4G,iBAAiBlkB,QAAQ,KAAKokB,mBAItD,OAHA/lB,EAAkBC,0BAA0Bgf,GAC5CA,EAAWhc,QACXjD,EAAkBY,6BAA6B,KAAKilB,kBACpD,MAGJsD,EAAAv1B,UAAAsyB,yBAAA,WAEI,OADAlmB,EAAkBC,0BAA0BvM,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKqyB,oBACxEryB,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKqyB,mBAAmB9Z,aAGjEkd,EAAAv1B,UAAAuyB,oBAAA,eACUxI,EAAe,KAAKkI,iBAAiBlkB,QAAQ,KAAKqkB,qBAIxD,OAHAhmB,EAAkBC,0BAA0B0d,GAC5CA,EAAa1a,QACbjD,EAAkBY,6BAA6B,KAAKilB,kBACpD,MAGJsD,EAAAv1B,UAAAwyB,2BAAA,WAEI,OADApmB,EAAkBC,0BAA0BvM,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKsyB,sBACxEtyB,KAAKmyB,iBAAiBlkB,QAAQjO,KAAKsyB,qBAAqB/Z,aAGnEkd,EAAAv1B,UAAAyyB,cAAA,WAEI,OADArmB,EAAkBC,0BAA0BvM,KAAKoyB,iBAC1CpyB,KAAKoyB,gBAAgB9gB,aAAa,UAG7CmkB,EAAAv1B,UAAA0yB,cAAA,SAAcC,GAGV,OAFA,KAAKC,kBACL,KAAKV,gBAAgBviB,SAASgjB,GAC9B,MAGJ4C,EAAAv1B,UAAA4yB,gBAAA,WAAA,IAAArb,EAAAzX,KAQI,OAPAsM,EAAkBC,0BAA0B,KAAK6lB,iBACjD,KAAKA,gBAAgB7iB,QACrB,KAAK6iB,gBAAgB9gB,aAAa,SAASxP,KAAI,SAAEP,GAC7C,IAAK,IAAIf,EAAIe,EAAMZ,OAAa,GAALH,EAAQA,IAC/B,EAAK4xB,gBAAgBviB,SAAS7D,EAAAA,WAAW8D,IAAI4H,cAGrD,MAGJ+d,EAAAv1B,UAAA6yB,SAAA,WAEI,OADAzmB,EAAkBC,0BAA0BvM,KAAK2P,OAC1C3P,KAAK2P,MAAMwD,WAG1BsiB,kBC5DA,SAAAC,IAEI11B,KAAAizB,gBAAkBhlB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,kCAChCrF,KAAA4a,eAAiB3M,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,sCAAsCQ,QAC1E7O,KAAA21B,SAAW1nB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sEAC1BrO,KAAAuuB,SAAWtgB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sEAC1BrO,KAAA2I,SAAWsF,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sEAC1BrO,KAAAqF,GAAK4I,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oEACpBrO,KAAA41B,oBAAsB3nB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,iFACrCrO,KAAA+J,kBAAoBkE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,+EACnCrO,KAAA61B,iBAAmB5nB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8EAClCrO,KAAA81B,eAAiB7nB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4EAChCrO,KAAA4J,aAAeqE,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0EAC9BrO,KAAA+1B,MAAQ9nB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mEACvBrO,KAAAurB,WAAatd,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,kDAC5BrO,KAAAkzB,aAAejlB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oDAC9BrO,KAAAmzB,aAAellB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oDAE9BrO,KAAAg2B,yBAA2B,IAAIP,EA2OnC,OAzOIC,EAAAx1B,UAAA+1B,qBAAA,WACI,OAAOj2B,KAAKg2B,0BAGhBN,EAAAx1B,UAAAozB,2BAAA,WAGI,OAFAhnB,EAAkBC,0BAA0B,KAAK0mB,iBACjD,KAAKA,gBAAgB1jB,QACrB,MAGJmmB,EAAAx1B,UAAAuzB,wBAAA,SAAwBlZ,GACpB,KAAKmZ,qBAAqB,cAEpBC,EAAgB1lB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAInF,OAHAvC,EAAkBC,0BAA0BonB,GAC5CrnB,EAAkBS,4BAA4B4mB,GAC9CA,EAAcpkB,QACd,MAGJmmB,EAAAx1B,UAAAg2B,6BAAA,WACI,OAAOjoB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,8EAA8EQ,QAAQsE,WAGpHuiB,EAAAx1B,UAAA2zB,sBAAA,SAAsBtZ,GAClB,KAAKmZ,qBAAqB,YAEpBI,EAAc7lB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAIjF,OAHAvC,EAAkBS,4BAA4B+mB,GAC9CxnB,EAAkBC,0BAA0BunB,GAC5CA,EAAYvkB,QACZ,MAGJmmB,EAAAx1B,UAAA6zB,2BAAA,eACUoC,EAAcloB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,4EAA4EQ,QAEnH,OADAvC,EAAkBC,0BAA0B4pB,GACrCA,EAAYhjB,WAGvBuiB,EAAAx1B,UAAA+zB,uBAAA,SAAuB1Z,GACnB,KAAKmZ,qBAAqB,aAEpBQ,EAAejmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAIlF,OAHAvC,EAAkBS,4BAA4BmnB,GAC9C5nB,EAAkBC,0BAA0B2nB,GAC5CA,EAAa3kB,QACb,MAGJmmB,EAAAx1B,UAAAi0B,4BAAA,WACI,OAAOlmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,6EAA6EQ,QAAQsE,WAGnHuiB,EAAAx1B,UAAAwzB,qBAAA,SAAqBnZ,OACX6Z,EAAgBnmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,sCAAwCkM,EAAS,2BAA2B1L,QACrHvC,EAAkBC,0BAA0B6nB,GAC5CA,EAAc7kB,QACdjD,EAAkBC,0BAA0BvM,KAAK4a,iBAGrD8a,EAAAx1B,UAAAk2B,YAAA,SAAY7b,GACR,OAAO,KAAKqa,YAAY,WAAYra,IAGxCmb,EAAAx1B,UAAAywB,YAAA,WACI,OAAO3wB,KAAK21B,SAASxiB,WAGzBuiB,EAAAx1B,UAAAm2B,YAAA,SAAY9b,GACR,OAAO,KAAKqa,YAAY,WAAYra,IAGxCmb,EAAAx1B,UAAA2wB,YAAA,WACI,OAAO7wB,KAAKuuB,SAASpb,WAGzBuiB,EAAAx1B,UAAAo2B,gBAAA,SAAgB/b,GACZ,OAAO,KAAKqa,YAAY,eAAgBra,IAG5Cmb,EAAAx1B,UAAA8wB,gBAAA,WACI,OAAOhxB,KAAK4J,aAAauJ,WAG7BuiB,EAAAx1B,UAAAq2B,SAAA,SAAShc,GACL,OAAO,KAAKqa,YAAY,QAASra,IAGrCmb,EAAAx1B,UAAAs2B,SAAA,WACI,OAAOx2B,KAAK+1B,MAAM5iB,WAGtBuiB,EAAAx1B,UAAAu2B,oBAAA,SAAoBlc,GAEhB,OADA,KAAK4U,WAAW,KAAK0G,kBACd,KAAKjB,YAAY,mBAAoBra,IAGhDmb,EAAAx1B,UAAAw2B,oBAAA,WACI,OAAO12B,KAAK61B,iBAAiB1iB,WAGjCuiB,EAAAx1B,UAAAy2B,kBAAA,SAAkBpc,GAEd,OADA,KAAK4U,WAAW,KAAK2G,gBACd,KAAKlB,YAAY,iBAAkBra,IAG9Cmb,EAAAx1B,UAAA02B,kBAAA,WACI,OAAO52B,KAAK81B,eAAe3iB,WAG/BuiB,EAAAx1B,UAAA80B,2BAAA,WAEI,OADA1oB,EAAkBC,0BAA0B,KAAKgf,YACjD,MAGJmK,EAAAx1B,UAAA+0B,6BAAA,WAEI,OADA3oB,EAAkBC,0BAA0B,KAAK2mB,cACjD,MAGJwC,EAAAx1B,UAAAg1B,6BAAA,WAEI,OADA5oB,EAAkBC,0BAA0B,KAAK4mB,cACjD,MAGJuC,EAAAx1B,UAAAsyB,yBAAA,WAEI,OADAlmB,EAAkBC,0BAA0BvM,KAAKurB,YAC1CvrB,KAAKurB,WAAWhT,aAG3Bmd,EAAAx1B,UAAAi1B,2BAAA,WAEI,OADA7oB,EAAkBC,0BAA0BvM,KAAKurB,YAC1CvrB,KAAKkzB,aAAa3a,aAG7Bmd,EAAAx1B,UAAAk1B,2BAAA,WAEI,OADA9oB,EAAkBC,0BAA0BvM,KAAKurB,YAC1CvrB,KAAKmzB,aAAa5a,aAG7Bmd,EAAAx1B,UAAAm1B,kBAAA,eACUC,EAAiBrnB,EAAAA,QAAQC,EAAAA,GAAGG,IAAG,oEAKrC,OAJA/B,EAAkBS,4BAA4B/M,KAAKkzB,cACnD5mB,EAAkBC,0BAA0BvM,KAAKkzB,cACjD5mB,EAAkBY,6BAA6BooB,GAC/Ct1B,KAAKkzB,aAAa3jB,QACXvP,KAAKg2B,0BAGhBN,EAAAx1B,UAAAq1B,kBAAA,WAGI,OAFAjpB,EAAkBC,0BAA0B,KAAK4mB,cACjD,KAAKA,aAAa5jB,QAClB,MAGJmmB,EAAAx1B,UAAAs1B,gBAAA,WAGI,OAFAlpB,EAAkBC,0BAA0B,KAAKgf,YACjD,KAAKA,WAAWhc,QAChB,MAGJmmB,EAAAx1B,UAAA22B,cAAA,WAEI,OADA,KAAK1H,WAAW,KAAKwG,UACrB,MAGJD,EAAAx1B,UAAAivB,WAAA,SAAWriB,GACPR,EAAkBC,0BAA0BO,GAC5CA,EAAQwE,aAAa,SAASxP,KAAI,SAAEF,GAChC,IAAK,IAAIpB,EAAIoB,EAAOjB,OAAa,GAALH,EAAQA,IAChCsM,EAAQ+C,SAAS7D,EAAAA,WAAW8D,IAAI4H,eAK5Cge,EAAAx1B,UAAAm0B,mBAAA,SAAmB9Z,GACf,KAAKmZ,qBAAqB,eAEpBY,EAAiBrmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBoM,IAAS1L,QAIpF,OAHAvC,EAAkBS,4BAA4BunB,GAC9ChoB,EAAkBC,0BAA0B+nB,GAC5CA,EAAe/kB,QACf,MAGJmmB,EAAAx1B,UAAA42B,wBAAA,eACUhqB,EAAUmB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,+EAA+EQ,QAElH,OADAvC,EAAkBC,0BAA0BO,GACrCA,EAAQqG,WAGnBuiB,EAAAx1B,UAAA62B,MAAA,SAAMxc,GACF,OAAO,KAAKqa,YAAY,SAAUra,IAGtCmb,EAAAx1B,UAAAyY,MAAA,WACI,OAAO3Y,KAAKqF,GAAGiM,aAAa,UAGhCokB,EAAAx1B,UAAA82B,YAAA,SAAYzc,GACR,OAAO,KAAKqa,YAAY,WAAYra,IAGxCmb,EAAAx1B,UAAA+2B,YAAA,WACI,OAAOj3B,KAAK2I,SAAS2I,aAAa,UAGtCokB,EAAAx1B,UAAAg3B,uBAAA,SAAuB3c,GACnB,OAAO,KAAKqa,YAAY,sBAAuBra,IAGnDmb,EAAAx1B,UAAAi3B,uBAAA,WACI,OAAOn3B,KAAK41B,oBAAoBtkB,aAAa,UAGjDokB,EAAAx1B,UAAAy0B,qBAAA,SAAqBpa,GACjB,OAAO,KAAKqa,YAAY,oBAAqBra,IAGjDmb,EAAAx1B,UAAA00B,YAAA,SAAYG,EAAUxa,OACZzN,EAAUmB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,0DAA4D0mB,EAAW,OAKtG,OAJAzoB,EAAkBC,0BAA0BO,GAC5CA,EAAQwK,QACRxK,EAAQ+C,SAAS0K,GACjBzN,EAAQ+C,SAAS7D,EAAAA,WAAW8D,IAAIC,OAChC,MAGJ2lB,EAAAx1B,UAAA20B,qBAAA,WACI,OAAO70B,KAAK+J,kBAAkBuH,aAAa,UAGnDokB,kBC9PA,SAAA0B,IAEIp3B,KAAAq3B,iBAAmBppB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,6DAyDtC,OAvDI+oB,EAAAl3B,UAAAo3B,aAAA,SAAatwB,GAAb,IAAAyQ,EAAAzX,KAUI,OATAsM,EAAkBC,0BAA0B,KAAK8qB,kBACjD1qB,EAAAA,QAAQ8c,MAAM,KACd,KAAK4N,iBAAiB/f,QAAQxV,KAAI,WAC9B,IAAK,IAAItB,EAAI,EAAGA,EAAIwG,EAAKrG,OAAQH,IAC7B,EAAK62B,iBAAiBxnB,SAAS7I,EAAKxG,IAExC,EAAK62B,iBAAiBxnB,SAAS7D,EAAAA,WAAW8D,IAAI4H,YAC9C,EAAK2f,iBAAiBxnB,SAAS7I,EAAKA,EAAKrG,OAAS,MAEtD,MAGJy2B,EAAAl3B,UAAAq3B,uBAAA,SAAuBvwB,GACnBsF,EAAkBC,0BAA0B,KAAK8qB,kBACjD,IAAK,IAAI72B,EAAI,EAAGA,EAAIwG,EAAKrG,OAAQH,IAC7B,KAAK62B,iBAAiBxnB,SAAS7I,EAAKxG,IAIxC,OAFA,KAAK62B,iBAAiBxnB,SAAS7D,EAAAA,WAAW8D,IAAI4H,YAC9C,KAAK2f,iBAAiBxnB,SAAS7I,EAAKA,EAAKrG,OAAS,IAClD,MAGJy2B,EAAAl3B,UAAAs3B,sBAAA,WAEI,OADAlrB,EAAkBC,0BAA0BvM,KAAKq3B,kBAC1Cr3B,KAAKq3B,iBAAiB/lB,aAAa,UAI9C8lB,EAAAl3B,UAAAu3B,oBAAA,SAAoBzwB,OACV0wB,EAAWzpB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBnH,IAAO6H,QAK5E,OAJAvC,EAAkBC,0BAA0BmrB,GAC5C/qB,EAAAA,QAAQ8c,MAAM,KACdiO,EAASnoB,QACTjD,EAAkBY,6BAA6BwqB,GAC/C,MAGJN,EAAAl3B,UAAAy3B,sBAAA,SAAsB3wB,OACZ0wB,EAAWzpB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBnH,IAAO6H,QAE5E,OADAvC,EAAkBC,0BAA0BmrB,GAC5C,MAGJN,EAAAl3B,UAAA03B,yBAAA,SAAyB5wB,OACf0wB,EAAWzpB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGC,kBAAkB,kBAAmBnH,IAAO6H,QAE5E,OADAvC,EAAkBY,6BAA6BwqB,GAC/C,MAGJN,EAAAl3B,UAAA23B,mBAAA,SAAmBC,GAEf,OADAxrB,EAAkBC,0BAA0B0B,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,wDAAyD2pB,KAClI,MAGRV,kBC3DA,SAAAW,IAEI/3B,KAAAg4B,kBAAoB/pB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8DACnCrO,KAAA+vB,cAAgB9hB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,8DAwEnC,OAtEI0pB,EAAA73B,UAAA+3B,wBAAA,SAAwBjxB,GAKpB,OAJAsF,EAAkBC,0BAA0B,KAAKyrB,mBACjD,KAAKA,kBAAkB1gB,QACvB,KAAK0gB,kBAAkBnoB,SAAS7I,GAChC,KAAKkxB,uBAAuBlxB,GAC5B,MAGJ+wB,EAAA73B,UAAAi4B,eAAA,SAAenxB,GAAf,IAAAyQ,EAAAzX,KAWI,OAVAsM,EAAkBC,0BAA0B,KAAKyrB,mBACjD1rB,EAAkBS,4BAA4B,KAAKirB,mBACnDrrB,EAAAA,QAAQ8c,MAAM,KACd,KAAKuO,kBAAkB1gB,QAAQxV,KAAI,WAC/B,IAAK,IAAItB,EAAI,EAAGA,EAAIwG,EAAKrG,OAAQH,IAC7B,EAAKw3B,kBAAkBnoB,SAAS7I,EAAKxG,IAEzC,EAAKw3B,kBAAkBnoB,SAAS7D,EAAAA,WAAW8D,IAAI4H,YAC/C,EAAKsgB,kBAAkBnoB,SAAS7I,EAAKA,EAAKrG,OAAS,MAEvD,MAGJo3B,EAAA73B,UAAAk4B,yBAAA,SAAyBpxB,GACrBsF,EAAkBC,0BAA0B,KAAKyrB,mBACjD,IAAK,IAAIx3B,EAAI,EAAGA,EAAIwG,EAAKrG,OAAQH,IAC7B,KAAKw3B,kBAAkBnoB,SAAS7I,EAAKxG,IAIzC,OAFA,KAAKw3B,kBAAkBnoB,SAAS7D,EAAAA,WAAW8D,IAAI4H,YAC/C,KAAKsgB,kBAAkBnoB,SAAS7I,EAAKA,EAAKrG,OAAS,IACnD,MAGJo3B,EAAA73B,UAAAg4B,uBAAA,SAAuBlxB,OACbqxB,EAAcpqB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,wCAAyCnH,IAK1F,OAJAsF,EAAkBC,0BAA0B8rB,GAC5C1rB,EAAAA,QAAQ8c,MAAM,KACd4O,EAAY9oB,QACZjD,EAAkBY,6BAA6BmrB,GAC/C,MAGJN,EAAA73B,UAAAywB,YAAA,WAEI,OADArkB,EAAkBC,0BAA0BvM,KAAKg4B,mBAC1Ch4B,KAAKg4B,kBAAkB1mB,aAAa,UAG/CymB,EAAA73B,UAAAo4B,qBAAA,SAAqBtxB,OACXqxB,EAAcpqB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,wCAAyCnH,IAE1F,OADAsF,EAAkBC,0BAA0B8rB,GAC5C,MAGJN,EAAA73B,UAAAq4B,wBAAA,SAAwBvxB,OACdqxB,EAAcpqB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,wCAAyCnH,IAE1F,OADAsF,EAAkBY,6BAA6BmrB,GAC/C,MAGJN,EAAA73B,UAAAs4B,oBAAA,SAAoBC,GAEhB,OADAnsB,EAAkBC,0BAA0B0B,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,yBAA0BsqB,KACnG,MAGJV,EAAA73B,UAAAw4B,wBAAA,WAGI,OAFApsB,EAAkBC,0BAA0BvM,KAAK+vB,eACjDpjB,EAAAA,QAAQ8c,MAAM,KACPzpB,KAAK+vB,cAAcze,aAAa,UAI/CymB,kBCtEI,SAAAY,EAAYlV,GAFZzjB,KAAA44B,WAAa1qB,EAAAA,GAAGsM,MAAM,0DAGlBxa,KAAKyjB,OAASA,EA+BtB,OA5BIkV,EAAAz4B,UAAA24B,8BAAA,WAEI,OADAvsB,EAAkBC,0BAA0B,KAAKkX,QACjD,MAGJkV,EAAAz4B,UAAA44B,qBAAA,WACIxsB,EAAkBC,0BAA0BvM,KAAKyjB,YAC3CvT,EAAOlQ,KAAKyjB,OAAOxV,QAAQjO,KAAK44B,YAEtC,OADAtsB,EAAkBC,0BAA0B2D,GACrCA,EAAKiD,WAGhBwlB,EAAAz4B,UAAA64B,4BAAA,WACIzsB,EAAkBC,0BAA0BvM,KAAKyjB,QACjDnX,EAAkBoB,4BAA4B1N,KAAKyjB,OAAOxV,QAAQjO,KAAK44B,cAG3ED,EAAAz4B,UAAA84B,mBAAA,WAGI,OAFA1sB,EAAkBC,0BAA0BvM,KAAKyjB,QACjDnX,EAAkBS,4BAA4B/M,KAAKyjB,QAC5CzjB,KAAKyjB,OAAOlU,SAGvBopB,EAAAz4B,UAAA+4B,+BAAA,WAEI,OADA3sB,EAAkBY,6BAA6BlN,KAAKyjB,QAC7CzjB,KAAKyjB,QAGpBkV,kBCpCA,SAAAO,IAEIl5B,KAAAm5B,QAAU,CACN9zB,GAAI,KACJ2B,KAAM,QAGVhH,KAAAo5B,YAAcnrB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2BAC7BrO,KAAAq5B,eAAiBprB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,0CAA0CQ,QAE9E7O,KAAAmpB,UAAY,IAAIvJ,EAAuB5f,KAAKo5B,aAoEhD,OAlEIF,EAAAh5B,UAAAo5B,aAAA,WACI,OAAOt5B,KAAKmpB,WAGhB+P,EAAAh5B,UAAAuhB,UAAA,SAAU8X,GACN,OAAOv5B,KAAKmpB,UAAU1H,UAAUzhB,KAAKm5B,QAAQnyB,KAAMuyB,IAGvDL,EAAAh5B,UAAAs5B,cAAA,SAAcC,GACV,OAAOz5B,KAAKmpB,UAAU1H,UAAUzhB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGrDP,EAAAh5B,UAAAw5B,uBAAA,SAAuBD,GACnB,OAAOz5B,KAAKmpB,UAAUzH,mBAAmB1hB,KAAKm5B,QAAQ9zB,GAAIo0B,IAG9DP,EAAAh5B,UAAAy5B,0BAAA,SAA0BF,GACtB,OAAOz5B,KAAKmpB,UAAUtH,sBAAsB7hB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGjEP,EAAAh5B,UAAA05B,sBAAA,SAAsBH,GAClB,OAAOz5B,KAAKmpB,UAAUnI,kBAAkBhhB,KAAKm5B,QAAQ9zB,GAAIo0B,IAG7DP,EAAAh5B,UAAA25B,yBAAA,SAAyBJ,GACrB,OAAOz5B,KAAKmpB,UAAUpI,qBAAqB/gB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGhEP,EAAAh5B,UAAA45B,kBAAA,SAAkBL,GACd,OAAOz5B,KAAKmpB,UAAUzI,cAAc1gB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGzDP,EAAAh5B,UAAA65B,8BAAA,SAA8BR,GAC1B,OAAOv5B,KAAKmpB,UAAUjF,wBAAwBlkB,KAAKm5B,QAAQnyB,KAAMuyB,IAGrEL,EAAAh5B,UAAA85B,4BAAA,SAA4BP,GACxB,OAAOz5B,KAAKmpB,UAAUjF,wBAAwBlkB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGnEP,EAAAh5B,UAAA+5B,+BAAA,SAA+BR,GAC3B,OAAOz5B,KAAKmpB,UAAUhF,2BAA2BnkB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGtEP,EAAAh5B,UAAAohB,sBAAA,SAAsBmY,GAClB,OAAOz5B,KAAKmpB,UAAU7H,sBAAsBthB,KAAKm5B,QAAQ9zB,GAAIo0B,IAGjEP,EAAAh5B,UAAAg6B,qBAAA,WACI,OAAOl6B,KAAKmpB,UAAU5F,uBAAuBvjB,KAAKm5B,QAAQnyB,OAG9DkyB,EAAAh5B,UAAAi6B,yBAAA,WAEI,OADA7tB,EAAkBC,0BAA0B,KAAK6sB,aACjD,MAGJF,EAAAh5B,UAAAk6B,yBAAA,WAEI,OADA9tB,EAAkBC,0BAA0BvM,KAAKq5B,gBAC1Cr5B,KAAKq5B,eAAelmB,WAG/B+lB,EAAAh5B,UAAAm6B,mBAAA,SAAmB9X,GACf,OAAOviB,KAAKmpB,UAAU5F,uBAAuBhB,IAGrD2W,kBC1EI,SAAAoB,EAAY7W,GAFZzjB,KAAAu6B,SAAWrsB,EAAAA,GAAGsM,MAAM,0DAGhBxa,KAAKyjB,OAASA,EA8BtB,OA3BI6W,EAAAp6B,UAAAs6B,2BAAA,WAEI,OADAluB,EAAkBC,0BAA0B,KAAKkX,QACjD,MAGJ6W,EAAAp6B,UAAAu6B,kBAAA,WACInuB,EAAkBC,0BAA0BvM,KAAKyjB,YAC3CvT,EAAOlQ,KAAKyjB,OAAOxV,QAAQjO,KAAKu6B,UAEtC,OADAjuB,EAAkBC,0BAA0B2D,GACrCA,EAAKiD,WAGhBmnB,EAAAp6B,UAAAw6B,yBAAA,WACIpuB,EAAkBC,0BAA0BvM,KAAKyjB,QACjDnX,EAAkBoB,4BAA4B1N,KAAKyjB,OAAOxV,QAAQjO,KAAKu6B,YAG3ED,EAAAp6B,UAAAy6B,gBAAA,WAEI,OADAruB,EAAkBC,0BAA0BvM,KAAKyjB,QAC1CzjB,KAAKyjB,OAAOlU,SAGvB+qB,EAAAp6B,UAAA06B,4BAAA,WAEI,OADAtuB,EAAkBY,6BAA6BlN,KAAKyjB,QAC7CzjB,KAAKyjB,QAGpB6W,KCnCM/X,EACE,KADFA,EAEI,OAFJA,EAGiB,oBAHjBA,EAImB,sBAJnBA,EAKQ,WALRA,EAMY,eANZA,GAOQ,WAPRA,GAQU,aARVA,GASK,QAGXsY,GAAA,WAAA,SAAAA,IAEI76B,KAAA86B,SAAW7sB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wBAC1BrO,KAAA+6B,aAAe9sB,EAAAA,QAAQW,IAAIV,EAAAA,GAAGG,IAAI,0CAA0CQ,QAE5E7O,KAAAmpB,UAAY,IAAIvJ,EAAuB5f,KAAK86B,UAkHhD,OAhHID,EAAA36B,UAAAo5B,aAAA,WACI,OAAOt5B,KAAKmpB,WAGhB0R,EAAA36B,UAAAwgB,cAAA,SAAc/X,GACV,OAAO3I,KAAKmpB,UAAUzI,cAAc6B,EAAa5Z,IAGrDkyB,EAAA36B,UAAA6gB,qBAAA,SAAqBpY,GACjB,OAAO3I,KAAKmpB,UAAUpI,qBAAqBwB,EAAa5Z,IAG5DkyB,EAAA36B,UAAA8gB,kBAAA,SAAkBrY,GACd,OAAO3I,KAAKmpB,UAAUnI,kBAAkBuB,EAAa5Z,IAGzDkyB,EAAA36B,UAAA86B,oBAAA,SAAoBryB,GAChB,OAAO3I,KAAKmpB,UAAUxF,4BAA4BpB,EAAa5Z,IAGnEkyB,EAAA36B,UAAA+6B,kBAAA,SAAkBhyB,GACd,OAAOjJ,KAAKmpB,UAAUxF,4BAA4B,KAAM1a,IAG5D4xB,EAAA36B,UAAAwhB,mBAAA,SAAmB/Y,GACf,OAAO3I,KAAKmpB,UAAUzH,mBAAmBa,EAAa5Z,IAG1DkyB,EAAA36B,UAAA2hB,sBAAA,SAAsBlZ,GAClB,OAAO3I,KAAKmpB,UAAUtH,sBAAsBU,EAAa5Z,IAG7DkyB,EAAA36B,UAAAohB,sBAAA,SAAsB3Y,GAClB,OAAO3I,KAAKmpB,UAAU7H,sBAAsBiB,EAAa5Z,IAG7DkyB,EAAA36B,UAAAuhB,UAAA,SAAU9Y,GACN,OAAO3I,KAAKmpB,UAAU1H,UAAUc,EAAa5Z,IAGjDkyB,EAAA36B,UAAAghB,OAAA,SAAOvY,GACH,OAAO3I,KAAKmpB,UAAUvH,sBAAsBW,EAAa5Z,IAG7DkyB,EAAA36B,UAAA85B,4BAAA,SAA4B/wB,GACxB,OAAOjJ,KAAKmpB,UAAUjF,wBAAwB3B,EAAWtZ,IAG7D4xB,EAAA36B,UAAAg7B,2CAAA,SAA2CvyB,GACvC,OAAO3I,KAAKmpB,UAAUjF,wBAAwB3B,EAA0B5Z,IAG5EkyB,EAAA36B,UAAA65B,8BAAA,SAA8BpxB,GAC1B,OAAO3I,KAAKmpB,UAAUjF,wBAAwB3B,EAAa5Z,IAG/DkyB,EAAA36B,UAAAi7B,iCAAA,SAAiCxyB,GAC7B,OAAO3I,KAAKmpB,UAAUhF,2BAA2B5B,EAAa5Z,IAGlEkyB,EAAA36B,UAAAk7B,sBAAA,WAEI,OADA9uB,EAAkBC,0BAA0B,KAAKuuB,UACjD,MAGJD,EAAA36B,UAAAm7B,uBAAA,WAEI,OADA/uB,EAAkBC,0BAA0BvM,KAAK+6B,cAC1C/6B,KAAK+6B,aAAa5nB,WAG7B0nB,EAAA36B,UAAAg6B,qBAAA,WACI,OAAOl6B,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDsY,EAAA36B,UAAAo7B,qBAAA,WACI,OAAOt7B,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDsY,EAAA36B,UAAAq7B,+BAAA,WACI,OAAOv7B,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDsY,EAAA36B,UAAAs7B,oCAAA,WACI,OAAOx7B,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDsY,EAAA36B,UAAAu7B,2BAAA,WACI,OAAOz7B,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDsY,EAAA36B,UAAAw7B,+BAAA,WACI,OAAO17B,KAAKmpB,UAAU5F,uBAAuBhB,IAGjDsY,EAAA36B,UAAAy7B,2BAAA,WACI,OAAO37B,KAAKmpB,UAAU5F,uBAAuBhB,KAGjDsY,EAAA36B,UAAA07B,6BAAA,WACI,OAAO57B,KAAKmpB,UAAU5F,uBAAuBhB,KAGjDsY,EAAA36B,UAAA27B,wBAAA,WACI,OAAO77B,KAAKmpB,UAAU5F,uBAAuBhB,KAGjDsY,EAAA36B,UAAA47B,eAAA,SAAeC,OACLjvB,GAAU,IAAI8S,GAAyBkF,6BAA6BvC,EAAawZ,EAASxZ,GAEhG,OADAjW,EAAkBC,0BAA0BO,GACrCA,EAAQqG,WAGvB0nB,EAvHA,iBCbA,SAAAmB,IAEIh8B,KAAAi8B,mBAAqBhuB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,4BACpCrO,KAAAk8B,iBAAmBjuB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,gBACjCrF,KAAAm8B,2BAA6BluB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,6CAC5CrO,KAAAo8B,oBAAsBnuB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,mBACpCrF,KAAAq8B,uBAAyBpuB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,wDACxCrO,KAAAs8B,mBAAqBruB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2CACpCrO,KAAAu8B,UAAYtuB,EAAAA,QAAQC,EAAAA,GAAG7I,GAAG,uBAC1BrF,KAAAw8B,kBAAoBvuB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,sCACnCrO,KAAAy8B,8BAAgCxuB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,2CA2FnD,OAzFI2tB,EAAA97B,UAAAw8B,sBAAA,WACIpwB,EAAkBC,0BAA0BvM,KAAKu8B,YAGrDP,EAAA97B,UAAAy8B,uBAAA,WAEI,OADA38B,KAAKw8B,kBAAkB3sB,SAAS7D,EAAAA,WAAW8D,IAAI8sB,YACxCjwB,EAAAA,QAAQoH,UAAUlE,SAAS7D,EAAAA,WAAW8D,IAAIC,OAAOkE,WAG5D+nB,EAAA97B,UAAA28B,0CAAA,WACIvwB,EAAkBoB,4BAA4B1N,KAAKy8B,gCAGvDT,EAAA97B,UAAA48B,iBAAA,SAAiB91B,GACbsF,EAAkBC,0BAA0BvM,KAAKk8B,kBACjDl8B,KAAK+8B,mBACL/8B,KAAKk8B,iBAAiBrsB,SAAS7I,IAGnCg1B,EAAA97B,UAAA68B,iBAAA,WACIzwB,EAAkBC,0BAA0BvM,KAAKk8B,kBACjDl8B,KAAKk8B,iBAAiB5kB,SAG1B0kB,EAAA97B,UAAA88B,0BAAA,SAA0Bh2B,GAEtB,OADA,KAAKi2B,4BACE,KAAKC,aAAal2B,IAG7Bg1B,EAAA97B,UAAA+8B,0BAAA,WACI3wB,EAAkBC,0BAA0BvM,KAAKm8B,4BACjD7vB,EAAkBS,4BAA4B/M,KAAKm8B,4BACnDn8B,KAAKm8B,2BAA2B5sB,SAGpCysB,EAAA97B,UAAAi9B,uBAAA,SAAuBn2B,OACbo2B,EAAwBnvB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,mBAAoBnH,IAG/E,OAFAsF,EAAkBC,0BAA0B6wB,GAC5C9wB,EAAkBS,4BAA4BqwB,GAC9C,MAGJpB,EAAA97B,UAAAg9B,aAAA,SAAal2B,OACHo2B,EAAwBnvB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkB,mBAAoBnH,IAI/E,OAHAsF,EAAkBC,0BAA0B6wB,GAC5C9wB,EAAkBS,4BAA4BqwB,GAC9CA,EAAsB7tB,QACtB,MAGJysB,EAAA97B,UAAAm9B,yBAAA,WACI/wB,EAAkBC,0BAA0BvM,KAAKo8B,qBACjDp8B,KAAKo8B,oBAAoB7sB,SAG7BysB,EAAA97B,UAAAo9B,iCAAA,WACIhxB,EAAkBS,4BAA4B/M,KAAKs8B,oBACnD/qB,OAAOvR,KAAKs8B,mBAAmB/jB,aAAa/G,MAAK,IAGrDwqB,EAAA97B,UAAAq9B,kCAAA,WACIhsB,OAAOvR,KAAKs8B,mBAAmB/jB,aAAa/G,MAAK,IAGrDwqB,EAAA97B,UAAAs9B,wBAAA,WAEI,OADAlxB,EAAkBS,4BAA4B/M,KAAKs8B,oBAC5Ct8B,KAAKs8B,mBAAmB/sB,SAGnCysB,EAAA97B,UAAAuvB,gCAAA,SAAgC5jB,EAAO6jB,QAAA,IAAAA,IAAAA,EAAA,iBAC7BC,EAAe1hB,EAAAA,QAAQC,EAAAA,GAAGC,kBAAkBuhB,EAAY7jB,IAE9D,OADAS,EAAkBC,0BAA0BojB,GAC5C,MAGJqM,EAAA97B,UAAAqvB,KAAA,SAAKziB,GAGD,OAFAA,EAAQyC,QACRzC,EAAQ+C,SAASC,EAAAA,IAAI0f,KACrB,MAGJwM,EAAA97B,UAAAivB,WAAA,SAAWriB,GACPR,EAAkBC,0BAA0BO,GAC5CA,EAAQwE,aAAa,SAASxP,KAAI,SAAEF,GAChC,IAAK,IAAIpB,EAAIoB,EAAOjB,OAAa,GAALH,EAAQA,IAChCsM,EAAQ+C,SAAS7D,EAAAA,WAAW8D,IAAI4H,eAIhDskB,mBCrGA,SAAAyB,IAEIz9B,KAAAiqB,aAAehc,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,uCAC9BrO,KAAA+rB,eAAiB9d,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,oCAwBpC,OAtBIovB,EAAAv9B,UAAAw9B,+BAAA,WAEI,OADApxB,EAAkBC,0BAA0B,KAAKwf,gBACjD,MAGJ0R,EAAAv9B,UAAAy9B,kCAAA,WAEI,OADArxB,EAAkBY,6BAA6B,KAAK6e,gBACpD,MAGJ0R,EAAAv9B,UAAA09B,oBAAA,WAGI,OAFAtxB,EAAkBC,0BAA0B,KAAKwf,gBACjD,KAAKA,eAAexc,QACpB,MAGJkuB,EAAAv9B,UAAA0qB,kBAAA,WAGI,OAFAte,EAAkBC,0BAA0B,KAAK0d,cACjD,KAAKA,aAAa1a,QAClB,MAGRkuB,oBCpBI,SAAAI,EAAmBC,GAAnB,IAAArmB,EACIsmB,EAAAn9B,KAAAZ,KAAM,OAAKA,KADIyX,EAAAqmB,UAAAA,EAHnBrmB,EAAAjS,OAAS,OAKCmV,EAAQnb,OAAOa,OAAO,GAAIoX,EAAKqmB,UAAUxuB,IAAS0uB,EAAAA,gBAAgBC,YAAa,cACrFxmB,EAAKjS,OAAS,IAAI04B,EAAAA,kBAAkB,CAChCz4B,SAAUgS,EAAKqmB,UAAUxuB,IAAY0uB,EAAAA,gBAAgBG,WACrD9zB,QAASoN,EAAKqmB,UAAUxuB,IAAY0uB,EAAAA,gBAAgBI,SACpDh0B,QAASqN,EAAKqmB,UAAUxuB,IAAY0uB,EAAAA,gBAAgBK,SACpD/zB,SAAUmN,EAAKqmB,UAAUxuB,IAAY0uB,EAAAA,gBAAgBM,SAAU,SAC/DC,eAAgB9mB,EAAKqmB,UAAUxuB,IAAY0uB,EAAAA,gBAAgBQ,gBAC3DC,YAAahnB,EAAKqmB,UAAUxuB,IAAY0uB,EAAAA,gBAAgBU,gBACxDC,YAAalnB,EAAKqmB,UAAUxuB,IAAa0uB,EAAAA,gBAAgBY,aACzDC,gBAAiBpnB,EAAKqmB,UAAUxuB,IAAa0uB,EAAAA,gBAAgBc,uBAAuB,GACpFv0B,OAAQoQ,MAYpB,OA/B+CokB,EAAAA,EAAAA,GAuB3ClB,EAAA39B,UAAA8+B,YAAA,WAMI,OALIh/B,KAAKi/B,YACLj/B,KAAKi/B,YAAYC,eAAel/B,KAAKwF,QAErCxF,KAAKi/B,YAAc,IAAIE,EAAAA,yBAAyBn/B,KAAKwF,QAElDxF,KAAKi/B,aAEpBpB,GA/B+CuB,EAAAA,mCCI3C,SAAAC,EAAY75B,GAAZ,IAAAiS,EACIsmB,EAAAn9B,KAAAZ,KAAM,OAAKA,YAJfyX,EAAAjS,OAAS,GAKLiS,EAAKjS,OAASA,IAetB,OAtB6Cu5B,EAAAA,EAAAA,GAUzCM,EAAAn/B,UAAAo/B,oBAAA,WACI,MAAO,IAGXD,EAAAn/B,UAAAq/B,gBAAA,SAAgBC,GACZ,YADY,IAAAA,IAAAA,EAAA,IACL,IAGXH,EAAAn/B,UAAAu/B,oBAAA,WACI,MAAO,IAGfJ,GAtB6CK,EAAAA,kBCA7CC,GAAA,WAII,SAAAA,EAAY96B,GACR7E,KAAK6E,IAAMA,EAsBnB,OAnBU86B,EAAAz/B,UAAA0/B,sBAAN,SAA4Bh3B,uGAClBjC,EAAO,IAAMiC,EAAU,6BACvBoC,EAAS,MAETzE,EAAc,oBAGH,6BAAA,CAAA,EAAMvG,KAAK6E,IAAIkE,oBAAoBpC,EAAMqE,EAAQzE,EAAa,YAC3E,MAAA,CAAA,EADatB,EAAA3C,sBAGQ,mBAAXu9B,OAENC,QAAQC,IAAOn3B,EAAO,gBACE,MAAjBo3B,EAAMH,QAEbC,QAAQC,IAAI,oDAAoDn3B,gCAIhF+2B,EA3BA,GCAAM,GAAA,WAII,SAAAA,EAAYp7B,GACR7E,KAAK6E,IAAMA,EA2CnB,OAxCUo7B,EAAA//B,UAAAggC,sBAAN,SAA4BC,EAAev3B,EAASC,qGAUzC,OATDlC,EAAO,IAAMiC,EAAU,2BACd,OAETrC,EAAc,GAAIC,EAAQpG,EAAA,CAC5BggC,qBAAwBD,EACxBr3B,YAAe,uBACZD,GAGA,CAAA,EAAM7I,KAAK6E,IAAIkE,oBAAoBpC,EAR3B,OAQyCJ,EAAaC,WAArE,MAAA,CAAA,EAAOvB,EAAA3C,cAGL29B,EAAA//B,UAAAmgC,uBAAN,SAA6Bt2B,EAAmBnB,qGAMrC,OALDjC,EAAO,IAAMiC,EAAU,4BAA8BmB,EAAoB,WAChE,OAETxD,EAAc,GAAIC,EAAW,GAE5B,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJ3B,OAIyCJ,EAAaC,WAArE,MAAA,CAAA,EAAOvB,EAAA3C,cAGL29B,EAAA//B,UAAAogC,sBAAN,SAA4Bv2B,EAAmBnB,qGAMpC,OALDjC,EAAO,IAAMiC,EAAU,4BAA8BmB,EAC5C,SAETxD,EAAc,GAAIC,EAAW,GAE5B,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJ3B,SAIyCJ,EAAaC,WAArE,MAAA,CAAA,EAAOvB,EAAA3C,cAGL29B,EAAA//B,UAAAqgC,wBAAN,SAA8Bx2B,EAAmBnB,qGAOtC,OANDjC,EAAO,IAAMiC,EAAU,4BAA8BmB,EAAoB,YAEhE,OAETxD,EAAc,GAAIC,EAAW,GAE5B,CAAA,EAAMxG,KAAK6E,IAAIkE,oBAAoBpC,EAJ3B,OAIyCJ,EAAaC,WAArE,MAAA,CAAA,EAAOvB,EAAA3C,cAEf29B,EAhDA,iBCCA,SAAAO,IAEIxgC,KAAAygC,iBAAmBxyB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,uBAsBtC,OApBImyB,EAAAtgC,UAAAwgC,kBAAA,WACIp0B,EAAkBC,0BAA0BvM,KAAKygC,mBAGrDD,EAAAtgC,UAAAygC,QAAA,SAAQ14B,OACE24B,EAAM3yB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mBAAqBpG,EAAkB,OAClEqE,EAAkBC,0BAA0Bq0B,GAC5CA,EAAIrxB,SAGRixB,EAAAtgC,UAAA2gC,uBAAA,SAAuB54B,OACb24B,EAAM3yB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mBAAqBpG,EAAkB,OAClE,OAAOqE,EAAkBoB,4BAA4BkzB,IAGzDJ,EAAAtgC,UAAA4gC,oBAAA,SAAoB74B,OACV24B,EAAM3yB,EAAAA,QAAQC,EAAAA,GAAGG,IAAI,mBAAqBpG,EAAkB,OAClE,OAAOqE,EAAkBC,0BAA0Bq0B,IAG3DJ,mBCzBA,SAAAO,KAM6B,2BAN5BC,EAAAA,SAAQC,KAAA,CAAC,CACRC,aAAc,GACdC,QAAS,GAETC,QAAS,OAEkBL,mBCD3B,SAAAM,gCALDC,EAAAA,WAAUL,KAAA,CAAC,CACVM,WAAY;;;;;;;;;;;;;;;;qVCKd,SAAgBC,GACZC,OACA,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAjhC,UAAAC,OAAAghC,IAAAD,EAAAC,EAAA,GAAAjhC,UAAAihC,OAEMC,EAAWH,EAAS,IAAMC,EAAa,GAC7C,OAAO/0B,EAAAA,QAAQsB,QAAQC,EAAAA,GAAGG,IAAIuzB","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class StringUtil {\n\n    static generatePasswordString(length: number = 8): string {\n        let text = '';\n        const possibleUpperCase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const possibleLowerCase = 'abcdefghijklmnopqrstuvwxyz';\n        const lowerCaseLimit = Math.floor(length / 2);\n\n        for (let i = 0; i < lowerCaseLimit; i++) {\n            text += possibleLowerCase.charAt(Math.floor(Math.random() * possibleLowerCase.length));\n        }\n\n        for (let i = 0; i < length - lowerCaseLimit; i++) {\n            text += possibleUpperCase.charAt(Math.floor(Math.random() * possibleUpperCase.length));\n        }\n\n        return text;\n    }\n\n    /**\n     * Generates a random string.\n     *\n     * @param length If this parameter is not provided the length is set to 8 by default.\n     * @method generateRandomString\n     */\n    static generateRandomString(length: number = 8): string {\n        let text = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n    /**\n     * Generates a random email address following the format: abcdef@activiti.test.com\n     *\n     * @param domain\n     * @param length\n     * @method generateRandomEmail\n     */\n    static generateRandomEmail(domain: string, length: number = 5): string {\n        let email = '';\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n        for (let i = 0; i < length; i++) {\n            email += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        email += domain;\n        return email.toLowerCase();\n    }\n\n    /**\n     * Generates a random string - digits only.\n     *\n     * @param length {int} If this parameter is not provided the length is set to 8 by default.\n     * @method generateRandomString\n     */\n    static generateRandomStringDigits(length: number = 8): string {\n        let text = '';\n        const possible = '0123456789';\n\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n\n    /**\n     * Generates a random string - non-latin characters only.\n     *\n     * @param length {int} If this parameter is not provided the length is set to 3 by default.\n     * @method generateRandomString\n     */\n    static generateRandomStringNonLatin(length: number = 3): string {\n        let text = '';\n        const possible = 'å¯ç ä½ å¥½ð ®·';\n\n        for (let i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StringUtil } from '../utils/string.util';\n\nexport class UserModel {\n\n    firstName: string = StringUtil.generateRandomString();\n    lastName: string = StringUtil.generateRandomString() + 'LastName';\n    password: string = StringUtil.generateRandomString();\n    email: string = StringUtil.generateRandomEmail('@alfresco.com');\n    username: string = StringUtil.generateRandomString().toLowerCase();\n    idIdentityService: string;\n\n    constructor(details?: any) {\n        Object.assign(this, details);\n    }\n\n    get id() {\n        return this.email;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../api.service';\nimport { UserModel } from '../../models/user.model';\nimport { PersonBodyCreate } from '@alfresco/js-api';\n\nexport class IdentityService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async createIdentityUser(user: UserModel = new UserModel()) {\n        await this.createUser(user);\n\n        const userIdentity = await this.getUserInfoByUsername(user.username);\n        await this.resetPassword(userIdentity.id, user.password);\n        user.idIdentityService = userIdentity.id;\n        return user;\n    }\n\n    async createIdentityUserAndSyncECMBPM(user: UserModel) {\n        if (this.api.config.provider === 'ECM' || this.api.config.provider === 'ALL') {\n            const createUser: PersonBodyCreate = <PersonBodyCreate> {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                password: user.password,\n                email: user.email,\n                id: user.email\n            };\n            await this.api.apiService.core.peopleApi.addPerson(createUser);\n        }\n\n        if (this.api.config.provider === 'BPM' || this.api.config.provider === 'ALL') {\n            await this.api.apiService.activiti.adminUsersApi.createNewUser({\n                email: user.email,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                password: user.password,\n                type: 'enterprise',\n                tenantId: 1,\n                company: null\n            });\n        }\n\n        await this.createIdentityUser(user);\n    }\n\n    async deleteIdentityUser(userId) {\n        await this.deleteUser(userId);\n    }\n\n    async createUser(user: UserModel) {\n        const path = '/users';\n        const method = 'POST';\n        const queryParams = {}, postBody = {\n            'username': user.username,\n            'firstName': user.firstName,\n            'lastName': user.lastName,\n            'enabled': true,\n            'email': user.email\n        };\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async deleteUser(userId) {\n        const path = `/users/${userId}`;\n        const method = 'DELETE';\n        const queryParams = {}, postBody = {};\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async getUserInfoByUsername(username) {\n        const path = `/users`;\n        const method = 'GET';\n        const queryParams = { 'username': username }, postBody = {};\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data[0];\n    }\n\n    async resetPassword(id, password) {\n        const path = `/users/${id}/reset-password`;\n        const method = 'PUT';\n        const queryParams = {},\n            postBody = { 'type': 'password', 'value': password, 'temporary': false };\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async assignRole(userId, roleId, roleName) {\n        const path = `/users/${userId}/role-mappings/realm`;\n        const method = 'POST';\n        const queryParams = {},\n            postBody = [{ 'id': roleId, 'name': roleName }];\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async deleteClientRole(userId: string, clientId: string, roleId: string, roleName: string) {\n        const path = `/users/${userId}/role-mappings/clients/${clientId}`;\n        const method = 'DELETE', queryParams = {},\n            postBody = [{\n                'id': roleId,\n                'name': roleName,\n                'composite': false,\n                'clientRole': true,\n                'containerId': clientId\n            }];\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../api.service';\nimport { StringUtil } from '../../utils/string.util';\n\nexport class GroupIdentityService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async createIdentityGroup(groupName = StringUtil.generateRandomString(5)) {\n        await this.createGroup(groupName);\n        const group = await this.getGroupInfoByGroupName(groupName);\n        return group;\n    }\n\n    async deleteIdentityGroup(groupId) {\n        await this.deleteGroup(groupId);\n    }\n\n    async createGroup(groupName) {\n        const path = '/groups';\n        const method = 'POST';\n        const queryParams = {}, postBody = {\n            'name': groupName + 'TestGroup'\n        };\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async deleteGroup(groupId) {\n        const path = `/groups/${groupId}`;\n        const method = 'DELETE';\n        const queryParams = {}, postBody = {\n        };\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async getGroupInfoByGroupName(groupName) {\n        const path = `/groups`;\n        const method = 'GET';\n        const queryParams = { 'search' : groupName }, postBody = {};\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data[0];\n    }\n\n    async assignRole(groupId, roleId, roleName) {\n        const path = `/groups/${groupId}/role-mappings/realm`;\n        const method = 'POST';\n        const queryParams = {},\n            postBody = [{'id': roleId, 'name': roleName}];\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    /**\n     * Add client roles.\n     * @param groupId ID of the target group\n     * @param clientId ID of the client\n     * @param roleId ID of the clientRole\n     * @param roleName of the clientRole\n     */\n    async addClientRole(groupId: string, clientId: string, roleId: string, roleName: string) {\n        const path = `/groups/${groupId}/role-mappings/clients/${clientId}`;\n        const method = 'POST', queryParams = {},\n            postBody = [{\n                'id': roleId,\n                'name': roleName,\n                'composite': false,\n                'clientRole': true,\n                'containerId': clientId\n            }];\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    /**\n     * Gets the client ID using the app name.\n     * @param applicationName Name of the app\n     * @returns client ID string\n     */\n    async getClientIdByApplicationName(applicationName: string) {\n        const path = `/clients`;\n        const method = 'GET', queryParams = {clientId: applicationName}, postBody = {};\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        return data[0].id;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../api.service';\n\nexport class RolesService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async getRoleIdByRoleName(roleName) {\n        const path = `/roles`;\n        const method = 'GET';\n        let roleId;\n        const queryParams = {}, postBody = {};\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        for (const key in data) {\n            if (data[key].name === roleName) {\n                roleId = data[key].id;\n            }\n        }\n        return roleId;\n    }\n\n    async getClientRoleIdByRoleName(groupId, clientId, clientRoleName) {\n        const path = `/groups/${groupId}/role-mappings/clients/${clientId}/available`;\n        const method = 'GET';\n        let clientRoleId;\n        const queryParams = {}, postBody = {};\n\n        const data = await this.api.performIdentityOperation(path, method, queryParams, postBody);\n        for (const key in data) {\n            if (data[key].name === clientRoleName) {\n                clientRoleId = data[key].id;\n            }\n        }\n        return clientRoleId;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../api.service';\n\nexport class TasksService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async createStandaloneTask(taskName, appName, options?) {\n        const path = '/' + appName + '/rb/v1/tasks';\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {\n            'name': taskName,\n            'payloadType': 'CreateTaskPayload',\n            ...options\n        };\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async completeTask(taskId, appName) {\n        const path = '/' + appName + '/rb/v1/tasks/' + taskId + '/complete';\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {'payloadType': 'CompleteTaskPayload'};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async claimTask(taskId, appName) {\n        const path = '/' + appName + '/rb/v1/tasks/' + taskId + '/claim';\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async deleteTask(taskId, appName) {\n        const path = '/' + appName + '/rb/v1/tasks/' + taskId;\n        const method = 'DELETE';\n\n        const queryParams = {}, postBody = {};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async createAndCompleteTask (taskName, appName) {\n        const task = await this.createStandaloneTask(taskName, appName);\n        await this.claimTask(task.entry.id, appName);\n        await this.completeTask(task.entry.id, appName);\n        return task;\n    }\n\n    async getTask(taskId, appName) {\n        const path = '/' + appName + '/query/v1/tasks/' + taskId;\n        const method = 'GET';\n\n        const queryParams = {}, postBody = {};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async getTaskId(taskName, appName) {\n        const path = '/' + appName + '/query/v1/tasks';\n        const method = 'GET';\n\n        const queryParams = {name: taskName}, postBody = {};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data.list.entries[0].entry.id;\n    }\n\n    async createStandaloneSubtask(parentTaskId, appName, name) {\n        const path = '/' + appName + '/rb/v1/tasks';\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {'name': name, 'parentTaskId': parentTaskId, 'payloadType': 'CreateTaskPayload'};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../api.service';\n\nexport class QueryService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async getProcessInstanceTasks(processInstanceId, appName) {\n        const path = '/' + appName + '/query/v1/process-instances/' + processInstanceId + '/tasks';\n        const method = 'GET';\n\n        const queryParams = {}, postBody = {};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, postBody);\n        return data;\n    }\n\n    async getProcessInstanceSubProcesses(processInstanceId, appName) {\n        const path = '/' + appName + '/query/v1/process-instances/' + processInstanceId + '/subprocesses';\n        const method = 'GET';\n\n        const queryParams = {};\n\n        const data = await this.api.performBpmOperation(path, method, queryParams, {});\n        return data;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiCompatibility as AlfrescoApi } from '@alfresco/js-api';\nimport { AlfrescoApiConfig } from '@alfresco/js-api/src/alfrescoApiConfig';\n\nexport class ApiService {\n\n    apiService: AlfrescoApi;\n\n    config: AlfrescoApiConfig;\n\n    constructor(clientId: string, host: string, hostSso: string, provider: string) {\n        this.config = {\n            provider: provider,\n            hostBpm: host,\n            hostEcm: host,\n            authType: 'OAUTH',\n            oauth2: {\n                host: hostSso,\n                clientId: clientId,\n                scope: 'openid',\n                secret: '',\n                implicitFlow: false,\n                silentLogin: false,\n                redirectUri: '/',\n                redirectUriLogout: '/logout'\n            }\n\n        };\n\n        this.apiService = new AlfrescoApi(this.config);\n    }\n\n    async login(username: string, password: string) {\n        await this.apiService.login(username, password);\n    }\n\n    async performBpmOperation(path: string, method: string, queryParams: any, postBody: any) {\n        const uri = this.config.hostBpm + path;\n        const pathParams = {}, formParams = {};\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        const headerParams = {\n            'Authorization': 'bearer ' + this.apiService.oauth2Auth.token\n        };\n\n        return this.apiService.processClient.callCustomApi(uri, method, pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, Object)\n            .catch((error) => {\n                throw (error);\n            });\n    }\n\n    async performIdentityOperation(path: string, method: string, queryParams: any, postBody: any) {\n        const uri = this.config.oauth2.host.replace('/realms', '/admin/realms') + path;\n        const pathParams = {}, formParams = {};\n        const contentTypes = ['application/json'];\n        const accepts = ['application/json'];\n\n        const headerParams = {\n            'Authorization': 'bearer ' + this.apiService.oauth2Auth.token\n        };\n\n        return this.apiService.processClient.callCustomApi(uri, method, pathParams, queryParams, headerParams, formParams, postBody,\n            contentTypes, accepts, Object)\n            .catch((error) => {\n                throw (error);\n            });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser, protractor } from 'protractor';\n\nconst until = protractor.ExpectedConditions;\nconst DEFAULT_TIMEOUT = global['TestConfig'] ? global['TestConfig'].main.timeout : 40000;\n\nexport class BrowserVisibility {\n\n    /*\n     * Wait for element is visible\n     */\n    static waitUntilElementIsVisible(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        let isDisplayed = false;\n        return browser.wait(() => {\n            browser.waitForAngularEnabled();\n\n            elementToCheck.isDisplayed().then(\n                () => {\n                    isDisplayed = true;\n                },\n                () => {\n                    isDisplayed = false;\n                }\n            );\n            return isDisplayed;\n        }, waitTimeout, 'Element is not visible ' + elementToCheck.locator());\n    }\n\n    /*\n     * Wait for element to be clickable\n     */\n    static waitUntilElementIsClickable(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        let isDisplayed = false;\n        return browser.wait(() => {\n            browser.waitForAngularEnabled();\n\n            elementToCheck.isDisplayed().then(\n                () => {\n                    isDisplayed = true;\n                },\n                () => {\n                    isDisplayed = false;\n                }\n            );\n            return isDisplayed;\n        }, waitTimeout, 'Element is not visible ' + elementToCheck.locator());\n    }\n\n    /*\n   * Wait for element to not be visible\n   */\n    static waitUntilElementIsStale(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        return browser.wait(until.stalenessOf(elementToCheck), waitTimeout, 'Element is not in stale ' + elementToCheck.locator());\n    }\n\n    /*\n     * Wait for element to not be visible\n     */\n    static waitUntilElementIsNotVisible(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        let isPresent = false;\n        return browser.wait(() => {\n            browser.waitForAngularEnabled();\n\n            elementToCheck.isPresent().then(\n                (present) => {\n                    isPresent = !present;\n                }\n            );\n            return isPresent;\n        }, waitTimeout, 'Element is Visible and it should not' + elementToCheck.locator());\n    }\n\n    /*\n     * Wait for element to have value\n     */\n    static waitUntilElementHasValue(elementToCheck, elementValue, waitTimeout: number = DEFAULT_TIMEOUT) {\n        browser.waitForAngularEnabled();\n\n        browser.wait(until.textToBePresentInElementValue(elementToCheck, elementValue), waitTimeout, 'Element doesn\\'t have a value ' + elementToCheck.locator());\n    }\n\n    static waitUntilElementIsOnPage(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        return browser.wait(browser.wait(until.visibilityOf(elementToCheck)), waitTimeout);\n    }\n\n    /*\n     * Wait for element to not be visible\n     */\n    static waitUntilElementIsNotOnPage(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        return browser.wait(until.not(until.visibilityOf(elementToCheck)), waitTimeout, 'Element is not in the page ' + elementToCheck.locator());\n    }\n\n    static waitUntilElementIsPresent(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        browser.waitForAngularEnabled();\n\n        return browser.wait(until.presenceOf(elementToCheck), waitTimeout, 'Element is not present ' + elementToCheck.locator());\n    }\n\n    static waitUntilElementIsNotPresent(elementToCheck, waitTimeout: number = DEFAULT_TIMEOUT) {\n        return browser.wait(until.not(until.presenceOf(elementToCheck)), waitTimeout, 'Element is not in the page ' + elementToCheck.locator());\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by, protractor } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\n\nexport class HeaderPage {\n\n    checkBox = element(by.cssContainingText('.mat-checkbox-label', 'Show menu button'));\n    headerColor = element(by.css('option[value=\"primary\"]'));\n    titleInput = element(by.css('input[name=\"title\"]'));\n    iconInput = element(by.css('input[placeholder=\"URL path\"]'));\n    hexColorInput = element(by.css('input[placeholder=\"hex color code\"]'));\n    logoHyperlinkInput = element(by.css('input[placeholder=\"Redirect URL\"]'));\n    logoTooltipInput = element(by.css('input[placeholder=\"Tooltip text\"]'));\n    positionStart = element.all(by.css('mat-radio-button[value=\"start\"]')).first();\n    positionEnd = element.all(by.css('mat-radio-button[value=\"end\"]')).first();\n    sideBarPositionRight = element(by.css('mat-sidenav.mat-drawer.mat-sidenav.mat-drawer-end'));\n    sideBarPositionLeft = element(by.css('mat-sidenav.mat-drawer.mat-sidenav'));\n\n    checkShowMenuCheckBoxIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.checkBox);\n    }\n\n    checkChooseHeaderColourIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.headerColor);\n    }\n\n    checkChangeTitleIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.titleInput);\n    }\n\n    checkChangeUrlPathIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.iconInput);\n    }\n\n    clickShowMenuButton() {\n        const checkBox = element.all(by.css('mat-checkbox'));\n        BrowserVisibility.waitUntilElementIsVisible(checkBox);\n        return checkBox.get(0).click();\n    }\n\n    changeHeaderColor(color) {\n        const headerColor = element(by.css('option[value=\"' + color + '\"]'));\n        return headerColor.click();\n    }\n\n    checkAppTitle(name) {\n        const title = element(by.cssContainingText('.adf-app-title', name));\n        return BrowserVisibility.waitUntilElementIsVisible(title);\n    }\n\n    addTitle(title) {\n        BrowserVisibility.waitUntilElementIsVisible(this.titleInput);\n        this.titleInput.click();\n        this.titleInput.sendKeys(title);\n        this.titleInput.sendKeys(protractor.Key.ENTER);\n    }\n\n    checkIconIsDisplayed(url) {\n        const icon = element(by.css('img[src=\"' + url + '\"]'));\n        BrowserVisibility.waitUntilElementIsVisible(icon);\n    }\n\n    addIcon(url) {\n        BrowserVisibility.waitUntilElementIsVisible(this.iconInput);\n        this.iconInput.click();\n        this.iconInput.sendKeys(url);\n        this.iconInput.sendKeys(protractor.Key.ENTER);\n    }\n\n    checkHexColorInputIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.hexColorInput);\n    }\n\n    checkLogoHyperlinkInputIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.logoHyperlinkInput);\n    }\n\n    checkLogoTooltipInputIsDisplayed() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.logoTooltipInput);\n    }\n\n    addHexCodeColor(hexCode) {\n        BrowserVisibility.waitUntilElementIsVisible(this.hexColorInput);\n        this.hexColorInput.click();\n        this.hexColorInput.sendKeys(hexCode);\n        return this.hexColorInput.sendKeys(protractor.Key.ENTER);\n    }\n\n    addLogoHyperlink(hyperlink) {\n        BrowserVisibility.waitUntilElementIsVisible(this.logoHyperlinkInput);\n        BrowserVisibility.waitUntilElementIsClickable(this.logoHyperlinkInput);\n        this.logoHyperlinkInput.click();\n        this.logoHyperlinkInput.sendKeys(hyperlink);\n        return this.logoHyperlinkInput.sendKeys(protractor.Key.ENTER);\n    }\n\n    addLogoTooltip(tooltip) {\n        BrowserVisibility.waitUntilElementIsVisible(this.logoTooltipInput);\n        this.logoTooltipInput.click();\n        this.logoTooltipInput.sendKeys(tooltip);\n        return this.logoTooltipInput.sendKeys(protractor.Key.ENTER);\n    }\n\n    sideBarPositionStart() {\n        BrowserVisibility.waitUntilElementIsVisible(this.positionStart);\n        return this.positionStart.click();\n    }\n\n    sideBarPositionEnd() {\n        BrowserVisibility.waitUntilElementIsVisible(this.positionEnd);\n        return this.positionEnd.click();\n    }\n\n    checkSidebarPositionStart() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.sideBarPositionLeft);\n    }\n\n    checkSidebarPositionEnd() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.sideBarPositionRight);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class TabsPage {\n\n    clickTabByTitle(tabTitle) {\n        const tab = element(by.cssContainingText(\"div[id*='mat-tab-label']\", tabTitle));\n        BrowserVisibility.waitUntilElementIsVisible(tab);\n        tab.click();\n    }\n\n    checkTabIsSelectedByTitle(tabTitle) {\n        const tab = element(by.cssContainingText(\"div[id*='mat-tab-label']\", tabTitle));\n        tab.getAttribute('aria-selected').then((result) => {\n            expect(result).toBe('true');\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by, browser, protractor } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\nimport { TabsPage } from '../../material/pages/tabs.page';\n\nexport class UserInfoPage {\n\n    dialog = element.all(by.css('mat-card[class*=\"adf-userinfo-card\"]')).first();\n    userImage = element(by.css('div[id=\"user-initial-image\"]'));\n    userInfoEcmHeaderTitle = element(by.css('div[id=\"ecm-username\"]'));\n    userInfoEcmTitle = element(by.css('mat-card-content span[id=\"ecm-full-name\"]'));\n    ecmEmail = element(by.css('span[id=\"ecm-email\"]'));\n    ecmJobTitle = element(by.css('span[id=\"ecm-job-title\"]'));\n    userInfoProcessHeaderTitle = element(by.css('div[id=\"bpm-username\"]'));\n    userInfoProcessTitle = element(by.css('mat-card-content span[id=\"bpm-full-name\"]'));\n    processEmail = element(by.css('span[id=\"bpm-email\"]'));\n    processTenant = element(by.css('span[class=\"detail-profile\"]'));\n    apsImage = element(by.css('img[id=\"bpm-user-detail-image\"]'));\n    acsImage = element(by.css('img[id=\"ecm-user-detail-image\"]'));\n    initialImage = element.all(by.css('div[id=\"user-initials-image\"]')).first();\n    userInfoSsoHeaderTitle = this.dialog.element(by.css('div[id=\"identity-username\"]'));\n    userInfoSsoTitle = element(by.css('.adf-userinfo__detail-title'));\n    ssoEmail = element(by.id('identity-email'));\n    userProfileButton = element(by.css('button[data-automation-id=\"adf-user-profile\"]'));\n\n    dialogIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.dialog);\n        return this;\n    }\n\n    dialogIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.dialog);\n        return this;\n    }\n\n    clickUserProfile() {\n        BrowserVisibility.waitUntilElementIsVisible(this.userProfileButton);\n        this.userProfileButton.click();\n    }\n\n    clickOnContentServicesTab() {\n        const tabsPage = new TabsPage();\n        tabsPage.clickTabByTitle('Content Services');\n        return this;\n    }\n\n    checkProcessServicesTabIsSelected() {\n        const tabsPage = new TabsPage;\n        tabsPage.checkTabIsSelectedByTitle('Process Services');\n        return this;\n    }\n\n    clickOnProcessServicesTab() {\n        const tabsPage = new TabsPage;\n        tabsPage.clickTabByTitle('Process Services');\n        return this;\n    }\n\n    userImageIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.userImage);\n        return this;\n    }\n\n    getContentHeaderTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.dialog);\n        BrowserVisibility.waitUntilElementIsVisible(this.userInfoEcmHeaderTitle);\n        return this.userInfoEcmHeaderTitle.getText();\n    }\n\n    getContentTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.userInfoEcmTitle);\n        return this.userInfoEcmTitle.getText();\n    }\n\n    getContentEmail() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmEmail);\n        return this.ecmEmail.getText();\n    }\n\n    getContentJobTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmJobTitle);\n        return this.ecmJobTitle.getText();\n    }\n\n    getProcessHeaderTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.userInfoProcessHeaderTitle);\n        return this.userInfoProcessHeaderTitle.getText();\n    }\n\n    getProcessTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.userInfoProcessTitle);\n        return this.userInfoProcessTitle.getText();\n    }\n\n    getProcessEmail() {\n        BrowserVisibility.waitUntilElementIsVisible(this.processEmail);\n        return this.processEmail.getText();\n    }\n\n    getProcessTenant() {\n        BrowserVisibility.waitUntilElementIsVisible(this.processTenant);\n        return this.processTenant.getText();\n    }\n\n    getSsoHeaderTitle () {\n        BrowserVisibility.waitUntilElementIsVisible(this.userInfoSsoHeaderTitle);\n        return this.userInfoSsoHeaderTitle.getText();\n    }\n\n    getSsoTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.userInfoSsoTitle);\n        return this.userInfoSsoTitle.getText();\n    }\n\n    getSsoEmail() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ssoEmail);\n        return this.ssoEmail.getText();\n    }\n\n    closeUserProfile() {\n        BrowserVisibility.waitUntilElementIsVisible(this.dialog);\n        browser.actions().sendKeys(protractor.Key.ESCAPE).perform();\n    }\n\n    checkACSProfileImage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.acsImage);\n    }\n\n    checkAPSProfileImage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.apsImage);\n    }\n\n    checkInitialImage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.initialImage);\n    }\n\n    initialImageNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.initialImage);\n    }\n\n    ACSProfileImageNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.acsImage);\n    }\n\n    APSProfileImageNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.apsImage);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\n\nexport class FormControllersPage {\n\n    enableToggle(toggle) {\n        BrowserVisibility.waitUntilElementIsVisible(toggle);\n        toggle.getAttribute('class').then((check) => {\n            if (check.indexOf('mat-checked') < 0) {\n                BrowserVisibility.waitUntilElementIsClickable(toggle.all(by.css('div')).first());\n                toggle.all(by.css('div')).first().click();\n            }\n        });\n    }\n\n    disableToggle(toggle) {\n        BrowserVisibility.waitUntilElementIsVisible(toggle);\n        toggle.getAttribute('class').then((check) => {\n            if (check.indexOf('mat-checked') >= 0) {\n                BrowserVisibility.waitUntilElementIsClickable(toggle.all(by.css('div')).first());\n                toggle.all(by.css('div')).first().click();\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser } from 'protractor';\n\nexport class LocalStorageUtil {\n\n   static async setConfigField(field: string, value: string) {\n        await browser.executeScript(\n            'window.adf.setConfigField(`' + field + '`, `' + value + '`);'\n        );\n    }\n\n    static async setStorageItem(field: string, value: string) {\n        await browser.executeScript(\n            'window.adf.setStorageItem(`' + field + '`, `' + value + '`);'\n        );\n    }\n\n    static async clearStorage() {\n        await browser.executeScript(\n            'window.adf.clearStorage();'\n        );\n    }\n\n    static async apiReset() {\n        await browser.executeScript(\n            `window.adf.apiReset();`\n        );\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControllersPage } from './form-controller.page';\nimport { browser, by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\nimport { LocalStorageUtil } from '../utils/local-storage.util';\n\nexport class LoginPage {\n\n    loginURL = browser.baseUrl + '/login';\n\n    formControllersPage = new FormControllersPage();\n    txtUsername = element(by.css('input[id=\"username\"]'));\n    txtPassword = element(by.css('input[id=\"password\"]'));\n    logoImg = element(by.css('img[id=\"adf-login-img-logo\"]'));\n    successRouteTxt = element(\n        by.css('input[data-automation-id=\"adf-success-route\"]')\n    );\n    logoTxt = element(by.css('input[data-automation-id=\"adf-url-logo\"]'));\n    usernameTooltip = element(\n        by.css('span[data-automation-id=\"username-error\"]')\n    );\n    passwordTooltip = element(\n        by.css('span[data-automation-id=\"password-required\"]')\n    );\n    loginTooltip = element(by.css('span[class=\"adf-login-error-message\"]'));\n    usernameInactive = element(\n        by.css('input[id=\"username\"][aria-invalid=\"false\"]')\n    );\n    passwordInactive = element(\n        by.css('input[id=\"password\"][aria-invalid=\"false\"]')\n    );\n    adfLogo = element(by.css('img[class=\"adf-img-logo ng-star-inserted\"]'));\n    usernameHighlighted = element(\n        by.css('input[id=\"username\"][aria-invalid=\"true\"]')\n    );\n    passwordHighlighted = element(\n        by.css('input[id=\"password\"][aria-invalid=\"true\"]')\n    );\n    signInButton = element(by.id('login-button'));\n    showPasswordElement = element(\n        by.css('mat-icon[data-automation-id=\"show_password\"]')\n    );\n    hidePasswordElement = element(\n        by.css('mat-icon[data-automation-id=\"hide_password\"]')\n    );\n    rememberMe = element(by.css('mat-checkbox[id=\"adf-login-remember\"]'));\n    needHelp = element(by.css('div[id=\"adf-login-action-left\"]'));\n    register = element(by.css('div[id=\"adf-login-action-right\"]'));\n    footerSwitch = element(by.id('switch4'));\n    rememberMeSwitch = element(by.id('adf-toggle-show-rememberme'));\n    successRouteSwitch = element(by.id('adf-toggle-show-successRoute'));\n    logoSwitch = element(by.id('adf-toggle-logo'));\n    header = element(by.id('adf-header'));\n    settingsIcon = element(\n        by.cssContainingText(\n            'a[data-automation-id=\"settings\"] mat-icon',\n            'settings'\n        )\n    );\n\n    goToLoginPage() {\n        browser.waitForAngularEnabled(true);\n        browser.driver.get(this.loginURL);\n        this.waitForElements();\n        return this;\n    }\n\n    waitForElements() {\n        BrowserVisibility.waitUntilElementIsVisible(this.txtUsername);\n        BrowserVisibility.waitUntilElementIsVisible(this.txtPassword);\n        return this;\n    }\n\n    enterUsername(username) {\n        BrowserVisibility.waitUntilElementIsVisible(this.txtUsername);\n        this.txtUsername.sendKeys('');\n        this.txtUsername.clear();\n        return this.txtUsername.sendKeys(username);\n    }\n\n    enterPassword(password) {\n        BrowserVisibility.waitUntilElementIsVisible(this.txtPassword);\n        this.txtPassword.clear();\n        return this.txtPassword.sendKeys(password);\n    }\n\n    clearUsername() {\n        BrowserVisibility.waitUntilElementIsVisible(this.txtUsername);\n        this.txtUsername.click();\n        this.txtUsername.getAttribute('value').then((value) => {\n            for (let i = value.length; i >= 0; i--) {\n                this.txtUsername.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n        return this;\n    }\n\n    clearPassword() {\n        BrowserVisibility.waitUntilElementIsVisible(this.txtPassword);\n        this.txtPassword.getAttribute('value').then((value) => {\n            for (let i = value.length; i >= 0; i--) {\n                this.txtPassword.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n    }\n\n    getUsernameTooltip() {\n        BrowserVisibility.waitUntilElementIsVisible(this.usernameTooltip);\n        return this.usernameTooltip.getText();\n    }\n\n    getPasswordTooltip() {\n        BrowserVisibility.waitUntilElementIsVisible(this.passwordTooltip);\n        return this.passwordTooltip.getText();\n    }\n\n    getLoginError() {\n        BrowserVisibility.waitUntilElementIsVisible(this.loginTooltip);\n        return this.loginTooltip.getText();\n    }\n\n    checkLoginImgURL() {\n        BrowserVisibility.waitUntilElementIsVisible(this.logoImg);\n        return this.logoImg.getAttribute('src');\n    }\n\n    checkUsernameInactive() {\n        BrowserVisibility.waitUntilElementIsVisible(this.usernameInactive);\n    }\n\n    checkPasswordInactive() {\n        BrowserVisibility.waitUntilElementIsVisible(this.passwordInactive);\n    }\n\n    checkUsernameHighlighted() {\n        this.adfLogo.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.usernameHighlighted);\n    }\n\n    checkPasswordHighlighted() {\n        this.adfLogo.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.passwordHighlighted);\n    }\n\n    checkUsernameTooltipIsNotVisible() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.usernameTooltip);\n    }\n\n    checkPasswordTooltipIsNotVisible() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.passwordTooltip);\n    }\n\n    getSignInButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.signInButton);\n        return this.signInButton.isEnabled();\n    }\n\n    async loginToProcessServicesUsingUserModel(userModel) {\n        this.goToLoginPage();\n        await LocalStorageUtil.clearStorage();\n        await LocalStorageUtil.setStorageItem('providers', 'BPM');\n        await LocalStorageUtil.apiReset();\n        this.login(userModel.email, userModel.password);\n    }\n\n    async loginToContentServicesUsingUserModel(userModel) {\n        this.goToLoginPage();\n        await LocalStorageUtil.clearStorage();\n        await LocalStorageUtil.setStorageItem('providers', 'ECM');\n        await LocalStorageUtil.apiReset();\n        this.login(userModel.getId(), userModel.getPassword());\n    }\n\n    async loginToContentServices(username, password) {\n        this.goToLoginPage();\n        await LocalStorageUtil.clearStorage();\n        await LocalStorageUtil.setStorageItem('providers', 'ECM');\n        await LocalStorageUtil.apiReset();\n        this.waitForElements();\n        this.login(username, password);\n    }\n\n    clickSignInButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.signInButton);\n        this.signInButton.click();\n    }\n\n    clickSettingsIcon() {\n        BrowserVisibility.waitUntilElementIsVisible(this.settingsIcon);\n        this.settingsIcon.click();\n    }\n\n    showPassword() {\n        BrowserVisibility.waitUntilElementIsVisible(this.showPasswordElement);\n        this.showPasswordElement.click();\n    }\n\n    hidePassword() {\n        BrowserVisibility.waitUntilElementIsVisible(this.hidePasswordElement);\n        this.hidePasswordElement.click();\n    }\n\n    getShownPassword() {\n        return this.txtPassword.getAttribute('value');\n    }\n\n    checkPasswordIsHidden() {\n        BrowserVisibility.waitUntilElementIsVisible(this.txtPassword);\n    }\n\n    checkRememberIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.rememberMe);\n    }\n\n    checkRememberIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.rememberMe);\n    }\n\n    checkNeedHelpIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.needHelp);\n    }\n\n    checkNeedHelpIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.needHelp);\n    }\n\n    checkRegisterDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.register);\n    }\n\n    checkRegisterIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.register);\n    }\n\n    enableFooter() {\n        this.formControllersPage.enableToggle(this.footerSwitch);\n    }\n\n    disableFooter() {\n        this.formControllersPage.disableToggle(this.footerSwitch);\n    }\n\n    disableRememberMe() {\n        this.formControllersPage.disableToggle(this.rememberMeSwitch);\n    }\n\n    enableSuccessRouteSwitch() {\n        this.formControllersPage.enableToggle(this.successRouteSwitch);\n    }\n\n    enableLogoSwitch() {\n        this.formControllersPage.enableToggle(this.logoSwitch);\n    }\n\n    enterSuccessRoute(route) {\n        BrowserVisibility.waitUntilElementIsVisible(this.successRouteTxt);\n        this.successRouteTxt.sendKeys('');\n        this.successRouteTxt.clear();\n        return this.successRouteTxt.sendKeys(route);\n    }\n\n    enterLogo(logo) {\n        BrowserVisibility.waitUntilElementIsVisible(this.logoTxt);\n        this.logoTxt.sendKeys('');\n        this.logoTxt.clear();\n        return this.logoTxt.sendKeys(logo);\n    }\n\n    login(username, password) {\n        this.waitForElements();\n        this.enterUsername(username);\n        this.enterPassword(password);\n        this.clickSignInButton();\n        return BrowserVisibility.waitUntilElementIsVisible(this.header);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser, by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\n\nexport class SettingsPage {\n\n    settingsURL = browser.baseUrl + '/settings';\n    providerDropdown = element(by.css('mat-select[id=\"adf-provider-selector\"] div[class=\"mat-select-arrow-wrapper\"]'));\n    ecmAndBpm = {\n        option: element(by.xpath('//SPAN[@class=\"mat-option-text\"][contains(text(),\"ALL\")]')),\n        text: 'ALL'\n    };\n    bpm = {\n        option: element(by.xpath('//SPAN[@class=\"mat-option-text\"][contains(text(),\"BPM\") and not (contains(text(),\"and\"))]')),\n        text: 'BPM'\n    };\n    ecm = {\n        option: element(by.xpath('//SPAN[@class=\"mat-option-text\"][contains(text(),\"ECM\") and not (contains(text(),\"and\"))]')),\n        text: 'ECM'\n    };\n    oauth = {\n        option: element(by.xpath('//SPAN[@class=\"mat-option-text\"][contains(text(),\"OAUTH\")]')),\n        text: 'OAUTH'\n    };\n    selectedOption = element(by.css('span[class*=\"mat-select-value-text\"]'));\n    ecmText = element(by.css('input[data-automation-id*=\"ecmHost\"]'));\n    bpmText = element(by.css('input[data-automation-id*=\"bpmHost\"]'));\n    clientIdText = element(by.css('input[id=\"clientId\"]'));\n    authHostText = element(by.css('input[id=\"oauthHost\"]'));\n    logoutUrlText = element(by.css('input[id=\"logout-url\"]'));\n    basicAuthRadioButton = element(by.cssContainingText('mat-radio-button[id*=\"mat-radio\"]', 'Basic Authentication'));\n    identityHostText = element(by.css('input[id=\"identityHost\"]'));\n    ssoRadioButton = element(by.cssContainingText('[id*=\"mat-radio\"]', 'SSO'));\n    silentLoginToggleLabel = element(by.css('mat-slide-toggle[name=\"silentLogin\"] label'));\n    silentLoginToggleElement = element(by.css('mat-slide-toggle[name=\"silentLogin\"]'));\n    implicitFlowLabel = element(by.css('mat-slide-toggle[name=\"implicitFlow\"] label'));\n    implicitFlowElement = element(by.css('mat-slide-toggle[name=\"implicitFlow\"]'));\n    applyButton = element(by.css('button[data-automation-id*=\"host-button\"]'));\n    backButton = element(by.cssContainingText('button span[class=\"mat-button-wrapper\"]', 'Back'));\n    validationMessage = element(by.cssContainingText('mat-error', 'This field is required'));\n\n    goToSettingsPage() {\n        browser.waitForAngularEnabled(true);\n        browser.driver.get(this.settingsURL);\n        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);\n        return this;\n    }\n\n    setProvider(option, selected) {\n        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);\n        this.providerDropdown.click();\n        BrowserVisibility.waitUntilElementIsVisible(option);\n        option.click();\n        return expect(this.selectedOption.getText()).toEqual(selected);\n    }\n\n    getSelectedOptionText() {\n        return this.selectedOption.getText();\n    }\n\n    getBpmHostUrl() {\n        return this.bpmText.getAttribute('value');\n    }\n\n    getEcmHostUrl() {\n        return this.ecmText.getAttribute('value');\n    }\n\n    getBpmOption() {\n        return this.bpm.option;\n    }\n\n    getEcmOption() {\n        return this.ecm.option;\n    }\n\n    getEcmAndBpmOption() {\n        return this.ecmAndBpm.option;\n    }\n\n    setProviderEcmBpm() {\n        this.goToSettingsPage();\n        this.setProvider(this.ecmAndBpm.option, this.ecmAndBpm.text);\n        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmText);\n        this.clickApply();\n        return this;\n    }\n\n    setProviderBpm() {\n        this.goToSettingsPage();\n        this.setProvider(this.bpm.option, this.bpm.text);\n        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);\n        this.clickApply();\n        return this;\n    }\n\n    setProviderEcm() {\n        this.goToSettingsPage();\n        this.setProvider(this.ecm.option, this.ecm.text);\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmText);\n        expect(this.bpmText.isPresent()).toBeFalsy();\n        this.clickApply();\n        return this;\n    }\n\n    setProviderOauth() {\n        this.goToSettingsPage();\n        this.setProvider(this.oauth.option, this.oauth.text);\n        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmText);\n        expect(this.authHostText.isPresent()).toBeTruthy();\n        this.clickApply();\n        return this;\n    }\n\n    async clickBackButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.backButton);\n        await this.backButton.click();\n    }\n\n    async clickSsoRadioButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ssoRadioButton);\n        await this.ssoRadioButton.click();\n    }\n\n    async setProviderEcmSso(contentServiceURL, authHost, identityHost, silentLogin = true, implicitFlow = true, clientId?: string, logoutUr: string = '/logout') {\n        this.goToSettingsPage();\n        this.setProvider(this.ecm.option, this.ecm.text);\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.bpmText);\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmText);\n        await this.clickSsoRadioButton();\n        await this.setClientId(clientId);\n        await this.setContentServicesURL(contentServiceURL);\n        await this.setAuthHost(authHost);\n        await this.setIdentityHost(identityHost);\n        await this.setSilentLogin(silentLogin);\n        await this.setImplicitFlow(implicitFlow);\n        await this.setLogoutUrl(logoutUr);\n        await this.clickApply();\n    }\n\n    async setProviderBpmSso(processServiceURL, authHost, identityHost, silentLogin = true, implicitFlow = true) {\n        this.goToSettingsPage();\n        this.setProvider(this.bpm.option, this.bpm.text);\n        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.ecmText);\n        await this.clickSsoRadioButton();\n        await this.setClientId();\n        await this.setProcessServicesURL(processServiceURL);\n        await this.setAuthHost(authHost);\n        await this.setIdentityHost(identityHost);\n        await this.setSilentLogin(silentLogin);\n        await this.setImplicitFlow(implicitFlow);\n        await this.clickApply();\n    }\n\n    async setLogoutUrl(logoutUrl) {\n        BrowserVisibility.waitUntilElementIsPresent(this.logoutUrlText);\n        this.logoutUrlText.clear();\n        this.logoutUrlText.sendKeys(logoutUrl);\n    }\n\n    async setProcessServicesURL(processServiceURL) {\n        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);\n        this.bpmText.clear();\n        this.bpmText.sendKeys(processServiceURL);\n    }\n\n    async setClientId(clientId: string = browser.params.config.oauth2.clientId) {\n        BrowserVisibility.waitUntilElementIsVisible(this.clientIdText);\n        this.clientIdText.clear();\n        this.clientIdText.sendKeys(clientId);\n    }\n\n    async setContentServicesURL(contentServiceURL) {\n        BrowserVisibility.waitUntilElementIsClickable(this.ecmText);\n        this.ecmText.clear();\n        this.ecmText.sendKeys(contentServiceURL);\n    }\n\n    clearContentServicesURL() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmText);\n        this.ecmText.clear();\n        this.ecmText.sendKeys('a');\n        this.ecmText.sendKeys(protractor.Key.BACK_SPACE);\n    }\n\n    clearProcessServicesURL() {\n        BrowserVisibility.waitUntilElementIsVisible(this.bpmText);\n        this.bpmText.clear();\n        this.bpmText.sendKeys('a');\n        this.bpmText.sendKeys(protractor.Key.BACK_SPACE);\n    }\n\n    async setAuthHost(authHostURL) {\n        BrowserVisibility.waitUntilElementIsVisible(this.authHostText);\n        await this.authHostText.clear();\n        await this.authHostText.sendKeys(authHostURL);\n    }\n\n    async setIdentityHost(identityHost) {\n        BrowserVisibility.waitUntilElementIsVisible(this.identityHostText);\n        await this.identityHostText.clear();\n        await this.identityHostText.sendKeys(identityHost);\n    }\n\n    async clickApply() {\n        BrowserVisibility.waitUntilElementIsVisible(this.applyButton);\n        await this.applyButton.click();\n    }\n\n    async setSilentLogin(enableToggle) {\n        await BrowserVisibility.waitUntilElementIsVisible(this.silentLoginToggleElement);\n\n        const isChecked = (await this.silentLoginToggleElement.getAttribute('class')).includes('mat-checked');\n\n        if (isChecked && !enableToggle || !isChecked && enableToggle) {\n            return this.silentLoginToggleLabel.click();\n        }\n\n        return Promise.resolve();\n    }\n\n    async setImplicitFlow(enableToggle) {\n        await BrowserVisibility.waitUntilElementIsVisible(this.implicitFlowElement);\n\n        const isChecked = (await this.implicitFlowElement.getAttribute('class')).includes('mat-checked');\n\n        if (isChecked && !enableToggle || !isChecked && enableToggle) {\n            return this.implicitFlowLabel.click();\n        }\n\n        return Promise.resolve();\n    }\n\n    checkApplyButtonIsDisabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.applyButton.getAttribute('disabled'));\n        return this;\n    }\n\n    checkProviderDropdownIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);\n    }\n\n    checkValidationMessageIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.validationMessage);\n    }\n\n    checkProviderOptions() {\n        BrowserVisibility.waitUntilElementIsVisible(this.providerDropdown);\n        this.providerDropdown.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.ecmAndBpm.option);\n        BrowserVisibility.waitUntilElementIsVisible(this.ecm.option);\n        BrowserVisibility.waitUntilElementIsVisible(this.bpm.option);\n    }\n\n    getBasicAuthRadioButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.basicAuthRadioButton);\n        return this.basicAuthRadioButton;\n    }\n\n    getSsoRadioButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ssoRadioButton);\n        return this.ssoRadioButton;\n    }\n\n    getBackButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.backButton);\n        return this.backButton;\n    }\n\n    getApplyButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.applyButton);\n        return this.applyButton;\n    }\n\n    checkBasicAuthRadioIsSelected() {\n        expect(this.getBasicAuthRadioButton().getAttribute('class')).toContain('mat-radio-checked');\n    }\n\n    checkSsoRadioIsNotSelected() {\n        expect(this.getSsoRadioButton().getAttribute('class')).not.toContain('mat-radio-checked');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by, browser, protractor } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\n\nexport class LoginSSOPage {\n\n    ssoButton = element(by.css(`[data-automation-id=\"login-button-sso\"]`));\n    usernameField = element(by.id('username'));\n    passwordField = element(by.id('password'));\n    loginButton = element(by.css('input[class=\"submit\"]'));\n    header = element(by.id('adf-header'));\n    loginError = element(by.css(`div[data-automation-id=\"login-error\"]`));\n\n    loginSSOIdentityService(username, password) {\n        browser.ignoreSynchronization = true;\n        BrowserVisibility.waitUntilElementIsVisible(this.usernameField);\n        this.enterUsername(username);\n        this.enterPassword(password);\n        this.clickLoginButton();\n        browser.actions().sendKeys(protractor.Key.ENTER).perform();\n        return BrowserVisibility.waitUntilElementIsVisible(this.header);\n    }\n\n    clickOnSSOButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.ssoButton);\n        this.ssoButton.click();\n    }\n\n    enterUsername(username) {\n        BrowserVisibility.waitUntilElementIsVisible(this.usernameField);\n        this.usernameField.clear();\n        this.usernameField.sendKeys(username);\n    }\n\n    enterPassword(password) {\n        BrowserVisibility.waitUntilElementIsVisible(this.passwordField);\n        this.passwordField.clear();\n        this.passwordField.sendKeys(password);\n    }\n\n    clickLoginButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.loginButton);\n        return this.loginButton.click();\n    }\n\n    checkLoginErrorIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.loginError);\n    }\n\n    getLoginErrorMessage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.loginError);\n        return this.loginError.getText();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser, by, element, protractor } from 'protractor';\nimport { ElementFinder, ElementArrayFinder } from 'protractor/built/element';\nimport { BrowserVisibility } from '../utils/browser-visibility';\n\nexport class DataTableComponentPage {\n\n    rootElement: ElementFinder;\n    list: ElementArrayFinder;\n    contents;\n    tableBody;\n    spinner;\n    rows = by.css(`adf-datatable div[class*='adf-datatable-body'] div[class*='adf-datatable-row']`);\n    allColumns;\n    selectedRowNumber;\n    allSelectedRows;\n    selectAll;\n    copyColumnTooltip;\n\n    constructor(rootElement: ElementFinder = element.all(by.css('adf-datatable')).first()) {\n        this.rootElement = rootElement;\n        this.list = this.rootElement.all(by.css(`div[class*='adf-datatable-body'] div[class*='adf-datatable-row']`));\n        this.contents = this.rootElement.all(by.css('div[class=\"adf-datatable-body\"] span'));\n        this.tableBody = this.rootElement.all(by.css(`div[class='adf-datatable-body']`)).first();\n        this.spinner = this.rootElement.element(by.css('mat-progress-spinner'));\n        this.allColumns = this.rootElement.all(by.css('div[data-automation-id*=\"auto_id_entry.\"]'));\n        this.selectedRowNumber = this.rootElement.element(by.css(`div[class*='is-selected'] div[data-automation-id*='text_']`));\n        this.allSelectedRows = this.rootElement.all(by.css(`div[class*='is-selected']`));\n        this.selectAll = this.rootElement.element(by.css(`div[class*='adf-datatable-header'] mat-checkbox`));\n        this.copyColumnTooltip = this.rootElement.element(by.css(`adf-copy-content-tooltip span`));\n    }\n\n    checkAllRowsButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.selectAll);\n        return this;\n    }\n\n    checkAllRows() {\n        BrowserVisibility.waitUntilElementIsVisible(this.selectAll);\n        BrowserVisibility.waitUntilElementIsClickable(this.selectAll).then(() => {\n            this.selectAll.click();\n            BrowserVisibility.waitUntilElementIsVisible(this.selectAll.element(by.css('input[aria-checked=\"true\"]')));\n        });\n        return this;\n    }\n\n    uncheckAllRows() {\n        BrowserVisibility.waitUntilElementIsVisible(this.selectAll);\n        BrowserVisibility.waitUntilElementIsClickable(this.selectAll).then(() => {\n            this.selectAll.click();\n            BrowserVisibility.waitUntilElementIsNotOnPage(this.selectAll.element(by.css('input[aria-checked=\"true\"]')));\n        });\n        return this;\n    }\n\n    clickCheckbox(columnName, columnValue) {\n        const checkbox = this.getRowCheckbox(columnName, columnValue);\n        BrowserVisibility.waitUntilElementIsClickable(checkbox);\n        checkbox.click();\n    }\n\n    checkRowIsNotChecked(columnName, columnValue) {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.getRowCheckbox(columnName, columnValue).element(by.css('input[aria-checked=\"true\"]')));\n    }\n\n    checkRowIsChecked(columnName, columnValue) {\n        const rowCheckbox = this.getRowCheckbox(columnName, columnValue);\n        BrowserVisibility.waitUntilElementIsVisible(rowCheckbox.element(by.css('input[aria-checked=\"true\"]')));\n    }\n\n    getRowCheckbox(columnName, columnValue) {\n        return this.getRow(columnName, columnValue)\n            .element(by.css('mat-checkbox'));\n    }\n\n    checkNoRowIsSelected() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.selectedRowNumber);\n    }\n\n    getNumberOfSelectedRows() {\n        return this.allSelectedRows.count();\n    }\n\n    selectRowWithKeyboard(columnName, columnValue) {\n        const row = this.getRow(columnName, columnValue);\n        browser.actions().sendKeys(protractor.Key.COMMAND).click(row).perform();\n    }\n\n    selectRow(columnName, columnValue) {\n        const row = this.getRow(columnName, columnValue);\n        BrowserVisibility.waitUntilElementIsVisible(row);\n        BrowserVisibility.waitUntilElementIsClickable(row);\n        row.click();\n        return this;\n    }\n\n    checkRowIsSelected(columnName, columnValue) {\n        const selectedRow = this.getCellElementByValue(columnName, columnValue).element(by.xpath(`ancestor::div[contains(@class, 'is-selected')]`));\n        BrowserVisibility.waitUntilElementIsVisible(selectedRow);\n        return this;\n    }\n\n    checkRowIsNotSelected(columnName, columnValue) {\n        const selectedRow = this.getCellElementByValue(columnName, columnValue).element(by.xpath(`ancestor::div[contains(@class, 'is-selected')]`));\n        BrowserVisibility.waitUntilElementIsNotOnPage(selectedRow);\n        return this;\n    }\n\n    getColumnValueForRow(identifyingColumn, identifyingValue, columnName) {\n        const row = this.getRow(identifyingColumn, identifyingValue);\n        BrowserVisibility.waitUntilElementIsVisible(row);\n        const rowColumn = row.element(by.css(`div[title=\"${columnName}\"] span`));\n        BrowserVisibility.waitUntilElementIsVisible(rowColumn);\n        return rowColumn.getText();\n    }\n\n    /**\n     * Check the list is sorted.\n     *\n     * @param sortOrder: 'true' if the list is expected to be sorted ascendant and 'false' for descendant\n     * @param locator: locator for column\n     * @return 'true' if the list is sorted as expected and 'false' if it isn't\n     */\n    checkListIsSorted(sortOrder, locator) {\n        const deferred = protractor.promise.defer();\n        const column = element.all(by.css(`div[title='${locator}'] span`));\n        BrowserVisibility.waitUntilElementIsVisible(column.first());\n        const initialList = [];\n        column.each(function (currentElement) {\n            currentElement.getText().then(function (text) {\n                initialList.push(text);\n            });\n        }).then(function () {\n            let sortedList = initialList;\n            sortedList = sortedList.sort();\n            if (sortOrder === false) {\n                sortedList = sortedList.reverse();\n            }\n            deferred.fulfill(initialList.toString() === sortedList.toString());\n        });\n        return deferred.promise;\n    }\n\n    rightClickOnRow(columnName, columnValue) {\n        const row = this.getRow(columnName, columnValue);\n        browser.actions().click(row, protractor.Button.RIGHT).perform();\n        BrowserVisibility.waitUntilElementIsVisible(element(by.id('adf-context-menu-content')));\n    }\n\n    getTooltip(columnName, columnValue) {\n        return this.getCellElementByValue(columnName, columnValue).getAttribute('title');\n    }\n\n    getFileHyperlink(filename) {\n        return element(by.cssContainingText('adf-name-column[class*=\"adf-datatable-link\"] span', filename));\n    }\n\n    numberOfRows() {\n        return this.rootElement.all(this.rows).count();\n    }\n\n    async getAllRowsColumnValues(column) {\n        const columnLocator = by.css(\"adf-datatable div[class*='adf-datatable-body'] div[class*='adf-datatable-row'] div[title='\" + column + \"'] span\");\n        BrowserVisibility.waitUntilElementIsVisible(element.all(columnLocator).first());\n        const initialList: any = await element.all(columnLocator).getText();\n        return initialList.filter((el) => el);\n    }\n\n    async getRowsWithSameColumnValues(columnName, columnValue) {\n        const columnLocator = by.css(`div[title='${columnName}'] div[data-automation-id=\"text_${columnValue}\"] span`);\n        BrowserVisibility.waitUntilElementIsVisible(this.rootElement.all(columnLocator).first());\n        return this.rootElement.all(columnLocator).getText();\n    }\n\n    doubleClickRow(columnName, columnValue) {\n        const row = this.getRow(columnName, columnValue);\n        BrowserVisibility.waitUntilElementIsVisible(row);\n        BrowserVisibility.waitUntilElementIsClickable(row);\n        row.click();\n        this.checkRowIsSelected(columnName, columnValue);\n        browser.actions().sendKeys(protractor.Key.ENTER).perform();\n        return this;\n    }\n\n    waitForTableBody() {\n        BrowserVisibility.waitUntilElementIsVisible(this.tableBody);\n    }\n\n    getFirstElementDetail(detail) {\n        const firstNode = element.all(by.css(`adf-datatable div[title=\"${detail}\"] span`)).first();\n        return firstNode.getText();\n    }\n\n    geCellElementDetail(detail) {\n        return element.all(by.css(`adf-datatable div[title=\"${detail}\"] span`));\n    }\n\n    sortByColumn(sortOrder, column) {\n        const locator = by.css(`div[data-automation-id=\"auto_id_${column}\"]`);\n        BrowserVisibility.waitUntilElementIsVisible(element(locator));\n        return element(locator).getAttribute('class').then(function (result) {\n            if (sortOrder === true) {\n                if (!result.includes('sorted-asc')) {\n                    if (result.includes('sorted-desc') || result.includes('sortable')) {\n                        element(locator).click();\n                    }\n                }\n            } else {\n                if (result.includes('sorted-asc')) {\n                    element(locator).click();\n                } else if (result.includes('sortable')) {\n                    element(locator).click();\n                    element(locator).click();\n                }\n            }\n\n            return Promise.resolve();\n        });\n    }\n\n    checkContentIsDisplayed(columnName, columnValue) {\n        const row = this.getCellElementByValue(columnName, columnValue);\n        BrowserVisibility.waitUntilElementIsVisible(row);\n        return this;\n    }\n\n    checkContentIsNotDisplayed(columnName, columnValue) {\n        const row = this.getCellElementByValue(columnName, columnValue);\n        BrowserVisibility.waitUntilElementIsNotOnPage(row);\n        return this;\n    }\n\n    getRow(columnName, columnValue) {\n        const row = this.rootElement.all(by.css(`div[title=\"${columnName}\"] div[data-automation-id=\"text_${columnValue}\"]`)).first()\n            .element(by.xpath(`ancestor::div[contains(@class, 'adf-datatable-row')]`));\n        BrowserVisibility.waitUntilElementIsVisible(row);\n        return row;\n    }\n\n    contentInPosition(position) {\n        BrowserVisibility.waitUntilElementIsVisible(this.contents);\n        return this.contents.get(position - 1).getText();\n    }\n\n    getCellElementByValue(columnName, columnValue) {\n        return this.rootElement.all(by.css(`div[title=\"${columnName}\"] div[data-automation-id=\"text_${columnValue}\"] span`)).first();\n    }\n\n    checkSpinnerIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsPresent(this.spinner);\n        return this;\n    }\n\n    checkSpinnerIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.spinner);\n        return this;\n    }\n\n    tableIsLoaded() {\n        BrowserVisibility.waitUntilElementIsVisible(this.rootElement);\n        return this;\n    }\n\n    checkColumnIsDisplayed(column) {\n        BrowserVisibility.waitUntilElementIsVisible(element(by.css(`div[data-automation-id=\"auto_id_entry.${column}\"]`)));\n        return this;\n    }\n\n    getNumberOfColumns() {\n        return this.allColumns.count();\n    }\n\n    getNumberOfRows() {\n        return this.list.count();\n    }\n\n    getCellByRowNumberAndColumnName(rowNumber, columnName) {\n        return this.list.get(rowNumber).element(by.css(`div[title=\"${columnName}\"] span`));\n    }\n\n    getCellByRowContentAndColumn(rowColumn, rowContent, columnName) {\n        return this.getRow(rowColumn, rowContent).element(by.css(`div[title='${columnName}']`));\n    }\n\n    selectRowByContent(content) {\n        const row = this.getCellByContent(content);\n        return row.click();\n    }\n\n    checkRowByContentIsSelected(folderName) {\n        const selectedRow = this.getCellByContent(folderName).element(by.xpath(`ancestor::div[contains(@class, 'is-selected')]`));\n        BrowserVisibility.waitUntilElementIsVisible(selectedRow);\n        return this;\n    }\n\n    getCellByContent(content) {\n        const cell = this.rootElement.element(by.cssContainingText(`div[class*='adf-datatable-row'] div[class*='adf-name-location-cell-name']`, content));\n        BrowserVisibility.waitUntilElementIsVisible(cell);\n        return cell;\n    }\n\n    clickRowByContent(name) {\n        const resultElement = this.rootElement.all(by.css(`div[data-automation-id='${name}']`)).first();\n        BrowserVisibility.waitUntilElementIsVisible(resultElement);\n        BrowserVisibility.waitUntilElementIsClickable(resultElement);\n        resultElement.click();\n    }\n\n    getCopyContentTooltip() {\n        BrowserVisibility.waitUntilElementIsVisible(this.copyColumnTooltip);\n        return this.copyColumnTooltip.getText();\n    }\n\n    copyContentTooltipIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotPresent(this.copyColumnTooltip);\n        return this;\n    }\n\n    mouseOverColumn(columnName, columnValue) {\n        const column = this.getCellElementByValue(columnName, columnValue);\n        this.mouseOverElement(column);\n        return this;\n    }\n\n    mouseOverElement(elem) {\n        BrowserVisibility.waitUntilElementIsVisible(elem);\n        browser.actions().mouseMove(elem).perform();\n        return this;\n    }\n\n    clickColumn(columnName, columnValue) {\n        const column = this.getCellElementByValue(columnName, columnValue);\n        this.clickElement(column);\n        return this;\n    }\n\n    clickElement(elem) {\n        BrowserVisibility.waitUntilElementIsVisible(elem);\n        BrowserVisibility.waitUntilElementIsClickable(elem);\n        elem.click();\n        return this;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser, by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../utils/browser-visibility';\n\nexport class PaginationPage {\n\n    itemsPerPageDropdown = element(by.css('div[class*=\"adf-pagination__perpage-block\"] button'));\n    pageSelectorDropDown = element(by.css('div[class*=\"adf-pagination__page-selector\"]'));\n    pageSelectorArrow = element(by.css('button[data-automation-id=\"page-selector\"]'));\n    itemsPerPage = element(by.css('span[class=\"adf-pagination__max-items\"]'));\n    currentPage = element(by.css('span[class=\"adf-pagination__current-page\"]'));\n    totalPages = element(by.css('span[class=\"adf-pagination__total-pages\"]'));\n    paginationRange = element(by.css('span[class=\"adf-pagination__range\"]'));\n    nextPageButton = element(by.css('button[class*=\"adf-pagination__next-button\"]'));\n    nextButtonDisabled = element(by.css('button[class*=\"adf-pagination__next-button\"][disabled]'));\n    previousButtonDisabled = element(by.css('button[class*=\"adf-pagination__previous-button\"][disabled]'));\n    pageDropDown = element(by.css('div[class*=\"adf-pagination__actualinfo-block\"] button'));\n    pageDropDownOptions = by.css('div[class*=\"mat-menu-content\"] button');\n    paginationSection = element(by.css('adf-pagination'));\n    paginationSectionEmpty = element(by.css('adf-pagination[class*=\"adf-pagination__empty\"]'));\n    totalFiles = element(by.css('span[class=\"adf-pagination__range\"]'));\n\n    selectItemsPerPage(numberOfItem: string) {\n        BrowserVisibility.waitUntilElementIsVisible(this.itemsPerPageDropdown);\n        BrowserVisibility.waitUntilElementIsClickable(this.itemsPerPageDropdown);\n        browser.actions().mouseMove(this.itemsPerPageDropdown).perform();\n        BrowserVisibility.waitUntilElementIsVisible(this.itemsPerPageDropdown);\n        BrowserVisibility.waitUntilElementIsClickable(this.itemsPerPageDropdown);\n        this.itemsPerPageDropdown.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.pageSelectorDropDown);\n\n        const itemsPerPage = element.all(by.cssContainingText('.mat-menu-item', numberOfItem)).first();\n        BrowserVisibility.waitUntilElementIsClickable(itemsPerPage);\n        BrowserVisibility.waitUntilElementIsVisible(itemsPerPage);\n        itemsPerPage.click();\n        return this;\n    }\n\n    checkPageSelectorIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.pageSelectorArrow);\n    }\n\n    checkPageSelectorIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.pageSelectorArrow);\n    }\n\n    checkPaginationIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsOnPage(this.paginationSectionEmpty);\n        return this;\n    }\n\n    getCurrentItemsPerPage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.itemsPerPage);\n        return this.itemsPerPage.getText();\n    }\n\n    getCurrentPage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.paginationSection);\n        BrowserVisibility.waitUntilElementIsVisible(this.currentPage);\n        return this.currentPage.getText();\n    }\n\n    getTotalPages() {\n        BrowserVisibility.waitUntilElementIsVisible(this.totalPages);\n        return this.totalPages.getText();\n    }\n\n    getPaginationRange() {\n        BrowserVisibility.waitUntilElementIsVisible(this.paginationRange);\n        return this.paginationRange.getText();\n    }\n\n    clickOnNextPage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.nextPageButton);\n        BrowserVisibility.waitUntilElementIsClickable(this.nextPageButton);\n        browser.actions().mouseMove(this.nextPageButton).perform();\n        BrowserVisibility.waitUntilElementIsVisible(this.nextPageButton);\n        BrowserVisibility.waitUntilElementIsClickable(this.nextPageButton);\n        return this.nextPageButton.click();\n    }\n\n    clickOnPageDropdown() {\n        BrowserVisibility.waitUntilElementIsVisible(this.pageDropDown);\n        BrowserVisibility.waitUntilElementIsClickable(this.pageDropDown);\n        return this.pageDropDown.click();\n    }\n\n    clickOnPageDropdownOption(numberOfItemPerPage: string) {\n        BrowserVisibility.waitUntilElementIsVisible(element.all(this.pageDropDownOptions).first());\n        const option = element(by.cssContainingText('div[class*=\"mat-menu-content\"] button', numberOfItemPerPage));\n        BrowserVisibility.waitUntilElementIsVisible(option);\n        option.click();\n        return this;\n    }\n\n    getPageDropdownOptions() {\n        const deferred = protractor.promise.defer();\n        BrowserVisibility.waitUntilElementIsVisible(element.all(this.pageDropDownOptions).first());\n        const initialList = [];\n        element.all(this.pageDropDownOptions).each(function (currentOption) {\n            currentOption.getText().then(function (text) {\n                if (text !== '') {\n                    initialList.push(text);\n                }\n            });\n        }).then(function () {\n            deferred.fulfill(initialList);\n        });\n        return deferred.promise;\n    }\n\n    checkNextPageButtonIsDisabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.nextButtonDisabled);\n    }\n\n    checkPreviousPageButtonIsDisabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.previousButtonDisabled);\n    }\n\n    checkNextPageButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.nextButtonDisabled);\n    }\n\n    checkPreviousPageButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.previousButtonDisabled);\n    }\n\n    getTotalNumberOfFiles() {\n        BrowserVisibility.waitUntilElementIsVisible(this.totalFiles);\n        const numberOfFiles = this.totalFiles.getText().then(function (totalNumber) {\n            const totalNumberOfFiles = totalNumber.split('of ')[1];\n            return totalNumberOfFiles;\n        });\n\n        return numberOfFiles;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserVisibility } from '../utils/browser-visibility';\nimport { element, by } from 'protractor';\n\nexport class ErrorPage {\n\n    errorPageCode = element(by.css('adf-error-content .adf-error-content-code'));\n    errorPageTitle = element(by.css('adf-error-content .adf-error-content-title'));\n    errorPageDescription = element(by.css('adf-error-content .adf-error-content-description'));\n    backButton = element(by.id('adf-return-button'));\n    secondButton = element(by.id('adf-secondary-button'));\n\n    clickBackButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.backButton);\n        this.backButton.click();\n    }\n\n    clickSecondButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.secondButton);\n        this.secondButton.click();\n    }\n\n    checkErrorCode() {\n        BrowserVisibility.waitUntilElementIsVisible(this.errorPageCode);\n    }\n\n    getErrorCode() {\n        BrowserVisibility.waitUntilElementIsVisible(this.errorPageCode);\n        return this.errorPageCode.getText();\n    }\n\n    getErrorTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.errorPageTitle);\n        return this.errorPageTitle.getText();\n    }\n\n    getErrorDescription() {\n        BrowserVisibility.waitUntilElementIsVisible(this.errorPageDescription);\n        return this.errorPageDescription.getText();\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by, element, ElementFinder, browser } from 'protractor';\nimport { DataTableComponentPage } from '../../core/pages/data-table-component.page';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class DocumentListPage {\n\n    rootElement: ElementFinder;\n    actionMenu = element(by.css('div[role=\"menu\"]'));\n    optionButton = by.css('button[data-automation-id*=\"action_menu_\"]');\n    tableBody;\n    dataTable;\n\n    constructor(rootElement: ElementFinder = element.all(by.css('adf-document-list')).first()) {\n        this.rootElement = rootElement;\n        this.dataTable = new DataTableComponentPage(this.rootElement);\n        this.tableBody = rootElement.all(by.css('div[class=\"adf-datatable-body\"]')).first();\n    }\n\n    checkLockedIcon(content) {\n        const row = this.dataTable.getRow('Display name', content);\n        const lockIcon = row.element(by.cssContainingText('div[title=\"Lock\"] mat-icon', 'lock'));\n        BrowserVisibility.waitUntilElementIsVisible(lockIcon);\n        return this;\n    }\n\n    checkUnlockedIcon(content) {\n        const row = this.dataTable.getRow('Display name', content);\n        const lockIcon = row.element(by.cssContainingText('div[title=\"Lock\"] mat-icon', 'lock_open'));\n        BrowserVisibility.waitUntilElementIsVisible(lockIcon);\n        return this;\n    }\n\n    waitForTableBody() {\n        return BrowserVisibility.waitUntilElementIsVisible(this.tableBody);\n    }\n\n    getTooltip(nodeName) {\n        return this.dataTable.getTooltip('Display name', nodeName);\n    }\n\n    selectRow(nodeName) {\n        return this.dataTable.selectRow('Display name', nodeName);\n    }\n\n    rightClickOnRow(nodeName) {\n        return this.dataTable.rightClickOnRow('Display name', nodeName);\n    }\n\n    clickOnActionMenu(content) {\n        const row = this.dataTable.getRow('Display name', content);\n        row.element(this.optionButton).click();\n        BrowserVisibility.waitUntilElementIsVisible(this.actionMenu);\n        browser.sleep(500);\n        return this;\n    }\n\n    checkActionMenuIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.actionMenu);\n        return this;\n    }\n\n    dataTablePage() {\n        return new DataTableComponentPage(this.rootElement);\n    }\n\n    getAllRowsColumnValues(column) {\n        return this.dataTable.getAllRowsColumnValues(column);\n    }\n\n    doubleClickRow(nodeName) {\n        this.dataTable.doubleClickRow('Display name', nodeName);\n        return this;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ExampleAction {\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by, element } from 'protractor';\nimport { DocumentListPage } from '../pages/document-list.page';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class ContentNodeSelectorDialogPage {\n    dialog = element(by.css(`adf-content-node-selector`));\n    header = this.dialog.element(by.css(`header[data-automation-id='content-node-selector-title']`));\n    searchInputElement = this.dialog.element(by.css(`input[data-automation-id='content-node-selector-search-input']`));\n    searchLabel = this.searchInputElement.element(by.xpath(\"ancestor::div[@class='mat-form-field-infix']/span/label\"));\n    siteListDropdown = this.dialog.element(by.css(`mat-select[data-automation-id='site-my-files-option']`));\n    cancelButton = element(by.css(`button[data-automation-id='content-node-selector-actions-cancel']`));\n    moveCopyButton = element(by.css(`button[data-automation-id='content-node-selector-actions-choose']`));\n    contentList = new DocumentListPage(this.dialog);\n\n    checkDialogIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.dialog);\n        return this;\n    }\n\n    checkDialogIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.dialog);\n        return this;\n    }\n\n    getDialogHeaderText() {\n        BrowserVisibility.waitUntilElementIsVisible(this.header);\n        return this.header.getText();\n    }\n\n    checkSearchInputIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.searchInputElement);\n        return this;\n    }\n\n    getSearchLabel() {\n        BrowserVisibility.waitUntilElementIsVisible(this.searchLabel);\n        return this.searchLabel.getText();\n    }\n\n    checkSelectedSiteIsDisplayed(siteName) {\n        BrowserVisibility.waitUntilElementIsVisible(this.siteListDropdown.element(by.cssContainingText('.mat-select-value-text span', siteName)));\n    }\n\n    checkCancelButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.cancelButton);\n    }\n\n    clickCancelButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.cancelButton);\n        return this.cancelButton.click();\n    }\n\n    checkMoveCopyButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.moveCopyButton);\n    }\n\n    getMoveCopyButtonText() {\n        BrowserVisibility.waitUntilElementIsVisible(this.moveCopyButton);\n        return this.moveCopyButton.getText();\n    }\n\n    clickMoveCopyButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.moveCopyButton);\n        return this.moveCopyButton.click();\n    }\n\n    numberOfResultsDisplayed() {\n        return this.contentList.dataTablePage().numberOfRows();\n    }\n\n    typeIntoNodeSelectorSearchField(text) {\n        BrowserVisibility.waitUntilElementIsVisible(this.searchInputElement);\n        this.searchInputElement.sendKeys(text);\n    }\n\n    clickContentNodeSelectorResult(name) {\n        this.contentList.dataTablePage().clickRowByContent(name);\n    }\n\n    contentListPage() {\n        return this.contentList;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\nimport { by, element } from 'protractor';\n\nexport class FormFieldsPage {\n\n    formContent = element(by.css('adf-form'));\n    refreshButton = element(by.css('div[class*=\"form-reload-button\"] mat-icon'));\n    saveButton = element(by.cssContainingText('mat-card-actions[class*=\"adf-for\"] span', 'SAVE'));\n    valueLocator = by.css('input');\n    labelLocator = by.css('label');\n    noFormMessage = element(by.css('span[id*=\"no-form-message\"]'));\n    completedTaskNoFormMessage = element(by.css('div[id*=\"completed-form-message\"] p'));\n    attachFormButton = element(by.id('adf-no-form-attach-form-button'));\n    selectFormDropDownArrow = element.all(by.css('adf-attach-form div[class*=\"mat-select-arrow\"]')).first();\n    selectFormContent = element(by.css('div[class*=\"mat-select-panel\"]'));\n    completeButton = element(by.id('adf-form-complete'));\n    errorMessage = by.css('.adf-error-text-container .adf-error-text');\n\n    setFieldValue(locator, field, value) {\n        const fieldElement: any = element(locator(field));\n        BrowserVisibility.waitUntilElementIsVisible(fieldElement);\n        fieldElement.clear().sendKeys(value);\n        return this;\n    }\n\n    checkWidgetIsVisible(fieldId) {\n        const fieldElement = element.all(by.css(`adf-form-field div[id='field-${fieldId}-container']`)).first();\n        BrowserVisibility.waitUntilElementIsVisible(fieldElement);\n    }\n\n    checkWidgetIsHidden(fieldId) {\n        const hiddenElement = element(by.css(`adf-form-field div[id='field-${fieldId}-container'][hidden]`));\n        BrowserVisibility.waitUntilElementIsVisible(hiddenElement);\n    }\n\n    getWidget(fieldId) {\n        const widget = element(by.css(`adf-form-field div[id='field-${fieldId}-container']`));\n        BrowserVisibility.waitUntilElementIsVisible(widget);\n        return widget;\n    }\n\n    getFieldValue(fieldId, valueLocatorParam) {\n        const value = this.getWidget(fieldId).element(valueLocatorParam || this.valueLocator);\n        BrowserVisibility.waitUntilElementIsVisible(value);\n        return value.getAttribute('value');\n    }\n\n    getFieldLabel(fieldId, labelLocatorParam) {\n        const label = this.getWidget(fieldId).all(labelLocatorParam || this.labelLocator).first();\n        BrowserVisibility.waitUntilElementIsVisible(label);\n        return label.getText();\n    }\n\n    getFieldErrorMessage(fieldId) {\n        const error = this.getWidget(fieldId).element(this.errorMessage);\n        return error.getText();\n    }\n\n    getFieldText(fieldId, labelLocatorParam) {\n        const label = this.getWidget(fieldId).element(labelLocatorParam || this.labelLocator);\n        BrowserVisibility.waitUntilElementIsVisible(label);\n        return label.getText();\n    }\n\n    getFieldPlaceHolder(fieldId, locator = 'input') {\n        const placeHolderLocator = element(by.css(`${locator}#${fieldId}`)).getAttribute('placeholder');\n        BrowserVisibility.waitUntilElementIsVisible(placeHolderLocator);\n        return placeHolderLocator;\n    }\n\n    checkFieldValue(locator, field, val) {\n        BrowserVisibility.waitUntilElementHasValue(element(locator(field)), val);\n        return this;\n    }\n\n    refreshForm() {\n        BrowserVisibility.waitUntilElementIsVisible(this.refreshButton);\n        this.refreshButton.click();\n        return this;\n    }\n\n    saveForm() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        BrowserVisibility.waitUntilElementIsClickable(this.saveButton);\n        this.saveButton.click();\n        return this;\n    }\n\n    noFormIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.formContent);\n        return this;\n    }\n\n    checkFormIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.formContent);\n        return this;\n    }\n\n    getNoFormMessage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.noFormMessage);\n        return this.noFormMessage.getText();\n    }\n\n    getCompletedTaskNoFormMessage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.completedTaskNoFormMessage);\n        return this.completedTaskNoFormMessage.getText();\n    }\n\n    clickOnAttachFormButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.attachFormButton);\n        this.attachFormButton.click();\n        return this;\n    }\n\n    selectForm(formName) {\n        BrowserVisibility.waitUntilElementIsVisible(this.selectFormDropDownArrow);\n        this.selectFormDropDownArrow.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.selectFormContent);\n        this.selectFormFromDropDown(formName);\n        return this;\n    }\n\n    selectFormFromDropDown(formName) {\n        const formNameElement = element(by.cssContainingText('span', formName));\n        BrowserVisibility.waitUntilElementIsVisible(formNameElement);\n        formNameElement.click();\n    }\n\n    checkWidgetIsReadOnlyMode(fieldId) {\n        const widget = element(by.css(`adf-form-field div[id='field-${fieldId}-container']`));\n        const widgetReadOnly = widget.element(by.css('div[class*=\"adf-readonly\"]'));\n        BrowserVisibility.waitUntilElementIsVisible(widgetReadOnly);\n        return widgetReadOnly;\n    }\n\n    completeForm() {\n        BrowserVisibility.waitUntilElementIsVisible(this.completeButton);\n        return this.completeButton.click();\n    }\n\n    setValueInInputById(fieldId, value) {\n        const input: any = element(by.id(fieldId));\n        BrowserVisibility.waitUntilElementIsVisible(input);\n        input.clear().sendKeys(value);\n        return this;\n    }\n\n    isCompleteFormButtonDisabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.completeButton);\n        return this.completeButton.getAttribute('disabled');\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by, Key, protractor } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class StartTasksCloudPage {\n\n    name = element(by.css('input[id=\"name_id\"]'));\n    dueDate = element(by.css('input[id=\"date_id\"]'));\n    description = element(by.css('textarea[id=\"description_id\"]'));\n    priority = element(by.css('input[formcontrolname=\"priority\"]'));\n    startButton = element(by.css('button[id=\"button-start\"]'));\n    startButtonEnabled = element(by.css('button[id=\"button-start\"]:not(disabled)'));\n    cancelButton = element(by.css('button[id=\"button-cancel\"]'));\n    form = element.all(by.css('adf-cloud-start-task form')).first();\n\n    checkFormIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.form);\n        return this;\n    }\n\n    addName(userName) {\n        BrowserVisibility.waitUntilElementIsVisible(this.name);\n        this.name.clear();\n        this.name.sendKeys(userName);\n        return this;\n    }\n\n    addDescription(userDescription) {\n        BrowserVisibility.waitUntilElementIsVisible(this.description);\n        this.description.sendKeys(userDescription);\n        return this;\n    }\n\n    addPriority(userPriority) {\n        BrowserVisibility.waitUntilElementIsVisible(this.priority);\n        this.priority.sendKeys(userPriority);\n        return this;\n    }\n\n    addDueDate(date) {\n        BrowserVisibility.waitUntilElementIsVisible(this.dueDate);\n        this.clearField(this.dueDate);\n        this.dueDate.sendKeys(date);\n        return this;\n    }\n\n    clickStartButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.startButton);\n        BrowserVisibility.waitUntilElementIsClickable(this.startButton);\n        return this.startButton.click();\n    }\n\n    checkStartButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.startButtonEnabled);\n        return this;\n    }\n\n    checkStartButtonIsDisabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.startButton.getAttribute('disabled'));\n        return this;\n    }\n\n    clickCancelButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.cancelButton);\n        BrowserVisibility.waitUntilElementIsClickable(this.cancelButton);\n        return this.cancelButton.click();\n    }\n\n    blur(locator) {\n        locator.click();\n        locator.sendKeys(Key.TAB);\n        return this;\n    }\n\n    checkValidationErrorIsDisplayed(error, elementRef = 'mat-error') {\n        const errorElement = element(by.cssContainingText(elementRef, error));\n        BrowserVisibility.waitUntilElementIsVisible(errorElement);\n        return this;\n    }\n\n    validateAssignee(error) {\n        this.checkValidationErrorIsDisplayed(error, '.adf-start-task-cloud-error');\n        return this;\n    }\n\n    validateDate(error) {\n        this.checkValidationErrorIsDisplayed(error, '.adf-error-text');\n        return this;\n    }\n\n    clearField(locator) {\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        BrowserVisibility.waitUntilElementIsClickable(locator);\n        locator.getAttribute('value').then((result) => {\n            for (let i = result.length; i >= 0; i--) {\n                locator.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class TaskHeaderCloudPage {\n\n    assigneeField = element(by.css('span[data-automation-id*=\"assignee\"] span'));\n    statusField = element(by.css('span[data-automation-id*=\"status\"] span'));\n    priorityField = element(by.css('span[data-automation-id*=\"priority\"] span'));\n    dueDateField = element.all(by.css('span[data-automation-id*=\"dueDate\"] span')).first();\n    categoryField = element(by.css('span[data-automation-id*=\"category\"] span'));\n    createdField = element(by.css('span[data-automation-id=\"card-dateitem-created\"] span'));\n    parentNameField = element(by.css('span[data-automation-id*=\"parentName\"] span'));\n    parentTaskIdField = element(by.css('span[data-automation-id*=\"parentTaskId\"] span'));\n    endDateField = element.all(by.css('span[data-automation-id*=\"endDate\"] span')).first();\n    idField = element.all(by.css('span[data-automation-id*=\"id\"] span')).first();\n    descriptionField = element(by.css('span[data-automation-id*=\"description\"] span'));\n    taskPropertyList = element(by.css('adf-cloud-task-header adf-card-view div[class=\"adf-property-list\"]'));\n\n    getAssignee() {\n        BrowserVisibility.waitUntilElementIsVisible(this.assigneeField);\n        return this.assigneeField.getText();\n    }\n\n    getStatus() {\n        BrowserVisibility.waitUntilElementIsVisible(this.statusField);\n        return this.statusField.getText();\n    }\n\n    getPriority() {\n        BrowserVisibility.waitUntilElementIsVisible(this.priorityField);\n        return this.priorityField.getText();\n    }\n\n    getCategory() {\n        BrowserVisibility.waitUntilElementIsVisible(this.categoryField);\n        return this.categoryField.getText();\n    }\n\n    getParentName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.parentNameField);\n        return this.parentNameField.getText();\n    }\n\n    getParentTaskId() {\n        BrowserVisibility.waitUntilElementIsVisible(this.parentTaskIdField);\n        return this.parentTaskIdField.getText();\n    }\n\n    getEndDate() {\n        BrowserVisibility.waitUntilElementIsVisible(this.endDateField);\n        return this.endDateField.getText();\n    }\n\n    getCreated() {\n        BrowserVisibility.waitUntilElementIsVisible(this.createdField);\n        return this.createdField.getText();\n    }\n\n    getId() {\n        BrowserVisibility.waitUntilElementIsVisible(this.idField);\n        return this.idField.getText();\n    }\n\n    getDescription() {\n        BrowserVisibility.waitUntilElementIsVisible(this.descriptionField);\n        return this.descriptionField.getText();\n    }\n\n    getDueDate() {\n        BrowserVisibility.waitUntilElementIsVisible(this.dueDateField);\n        return this.dueDateField.getText();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class ProcessHeaderCloudPage {\n\n    idField = element.all(by.css('span[data-automation-id*=\"id\"] span')).first();\n    nameField = element.all(by.css('span[data-automation-id*=\"name\"] span')).first();\n    statusField = element(by.css('span[data-automation-id*=\"status\"] span'));\n    initiatorField = element(by.css('span[data-automation-id*=\"initiator\"] span'));\n    startDateField = element.all(by.css('span[data-automation-id*=\"startDate\"] span')).first();\n    lastModifiedField = element.all(by.css('span[data-automation-id*=\"lastModified\"] span')).first();\n    parentIdField = element(by.css('span[data-automation-id*=\"parentId\"] span'));\n    businessKeyField = element.all(by.css('span[data-automation-id*=\"businessKey\"] span')).first();\n\n    getId() {\n        BrowserVisibility.waitUntilElementIsVisible(this.idField);\n        return this.idField.getText();\n    }\n\n    getName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.nameField);\n        return this.nameField.getText();\n    }\n\n    getStatus() {\n        BrowserVisibility.waitUntilElementIsVisible(this.statusField);\n        return this.statusField.getText();\n    }\n\n    getInitiator() {\n        BrowserVisibility.waitUntilElementIsVisible(this.initiatorField);\n        return this.initiatorField.getText();\n    }\n\n    getStartDate() {\n        BrowserVisibility.waitUntilElementIsVisible(this.startDateField);\n        return this.startDateField.getText();\n    }\n\n    getLastModified() {\n        BrowserVisibility.waitUntilElementIsVisible(this.lastModifiedField);\n        return this.lastModifiedField.getText();\n    }\n\n    getParentId() {\n        BrowserVisibility.waitUntilElementIsVisible(this.parentIdField);\n        return this.parentIdField.getText();\n    }\n\n    getBusinessKey() {\n        BrowserVisibility.waitUntilElementIsVisible(this.businessKeyField);\n        return this.businessKeyField.getText();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../../../core/utils/browser-visibility';\n\nexport class EditProcessFilterDialogPage {\n\n    componentElement = element(by.css('adf-cloud-process-filter-dialog-cloud'));\n    title = element(by.id('adf-process-filter-dialog-title'));\n    filterNameInput = element(by.id('adf-filter-name-id'));\n    saveButtonLocator = by.id('adf-save-button-id');\n    cancelButtonLocator = by.id('adf-cancel-button-id');\n\n    clickOnSaveButton() {\n        const saveButton = this.componentElement.element(this.saveButtonLocator);\n        BrowserVisibility.waitUntilElementIsVisible(saveButton);\n        saveButton.click();\n        BrowserVisibility.waitUntilElementIsNotVisible(this.componentElement);\n        return this;\n    }\n\n    checkSaveButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.componentElement.element(this.saveButtonLocator));\n        return this.componentElement.element(this.saveButtonLocator).isEnabled();\n    }\n\n    clickOnCancelButton() {\n        const cancelButton = this.componentElement.element(this.cancelButtonLocator);\n        BrowserVisibility.waitUntilElementIsVisible(cancelButton);\n        cancelButton.click();\n        BrowserVisibility.waitUntilElementIsNotVisible(this.componentElement);\n        return this;\n    }\n\n    checkCancelButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.componentElement.element(this.cancelButtonLocator));\n        return this.componentElement.element(this.cancelButtonLocator).isEnabled();\n    }\n\n    getFilterName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filterNameInput);\n        return this.filterNameInput.getAttribute('value');\n    }\n\n    setFilterName(filterName) {\n        this.clearFilterName();\n        this.filterNameInput.sendKeys(filterName);\n        return this;\n    }\n\n    clearFilterName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filterNameInput);\n        this.filterNameInput.click();\n        this.filterNameInput.getAttribute('value').then((value) => {\n            for (let i = value.length; i >= 0; i--) {\n                this.filterNameInput.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n        return this;\n    }\n\n    getTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.title);\n        return this.title.getText();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { by, element, protractor } from 'protractor';\nimport { EditProcessFilterDialogPage } from './dialog/edit-process-filter-dialog.page';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class EditProcessFilterCloudComponentPage {\n\n    customiseFilter = element(by.id('adf-edit-process-filter-title-id'));\n    selectedOption = element.all(by.css('mat-option[class*=\"mat-selected\"]')).first();\n    saveButton = element(by.css('button[data-automation-id=\"adf-filter-action-save\"]'));\n    saveAsButton = element(by.css('button[data-automation-id=\"adf-filter-action-saveAs\"]'));\n    deleteButton = element(by.css('button[data-automation-id=\"adf-filter-action-delete\"]'));\n\n    editProcessFilterDialogPage = new EditProcessFilterDialogPage();\n\n    editProcessFilterDialog() {\n        return this.editProcessFilterDialogPage;\n    }\n\n    clickCustomiseFilterHeader() {\n        BrowserVisibility.waitUntilElementIsVisible(this.customiseFilter);\n        this.customiseFilter.click();\n        return this;\n    }\n\n    checkCustomiseFilterHeaderIsExpanded() {\n        const expansionPanelExtended = element.all(by.css('mat-expansion-panel-header[class*=\"mat-expanded\"]')).first();\n        BrowserVisibility.waitUntilElementIsVisible(expansionPanelExtended);\n        const content = element.all(by.css('div[class*=\"mat-expansion-panel-content \"][style*=\"visible\"]')).first();\n        BrowserVisibility.waitUntilElementIsVisible(content);\n        return this;\n    }\n\n    setStatusFilterDropDown(option) {\n        this.clickOnDropDownArrow('status');\n\n        const statusElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(statusElement);\n        BrowserVisibility.waitUntilElementIsVisible(statusElement);\n        statusElement.click();\n        return this;\n    }\n\n    getStateFilterDropDownValue() {\n        return element(by.css(\"mat-form-field[data-automation-id='status'] span\")).getText();\n    }\n\n    setSortFilterDropDown(option) {\n        this.clickOnDropDownArrow('sort');\n\n        const sortElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(sortElement);\n        BrowserVisibility.waitUntilElementIsVisible(sortElement);\n        sortElement.click();\n        return this;\n    }\n\n    getSortFilterDropDownValue() {\n        const sortLocator = element.all(by.css(\"mat-form-field[data-automation-id='sort'] span\")).first();\n        BrowserVisibility.waitUntilElementIsVisible(sortLocator);\n        return sortLocator.getText();\n    }\n\n    setOrderFilterDropDown(option) {\n        this.clickOnDropDownArrow('order');\n\n        const orderElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(orderElement);\n        BrowserVisibility.waitUntilElementIsVisible(orderElement);\n        orderElement.click();\n        return this;\n    }\n\n    getOrderFilterDropDownValue() {\n        return element(by.css(\"mat-form-field[data-automation-id='order'] span\")).getText();\n    }\n\n    clickOnDropDownArrow(option) {\n        const dropDownArrow = element.all(by.css(\"mat-form-field[data-automation-id='\" + option + \"'] div[class='mat-select-arrow-wrapper']\")).first();\n        BrowserVisibility.waitUntilElementIsVisible(dropDownArrow);\n        BrowserVisibility.waitUntilElementIsClickable(dropDownArrow);\n        dropDownArrow.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.selectedOption);\n    }\n\n    setAppNameDropDown(option) {\n        this.clickOnDropDownArrow('appName');\n\n        const appNameElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(appNameElement);\n        BrowserVisibility.waitUntilElementIsVisible(appNameElement);\n        appNameElement.click();\n        return this;\n    }\n\n    async checkAppNamesAreUnique() {\n        const appNameList = element.all(by.css('mat-option[data-automation-id=\"adf-cloud-edit-process-property-optionsappName\"] span'));\n        const appTextList: any = await appNameList.getText();\n        const uniqueArray = appTextList.filter((appName) => {\n            const sameAppNameArray = appTextList.filter((eachApp) => eachApp === appName);\n            return sameAppNameArray.length === 1;\n        });\n        return uniqueArray.length === appTextList.length;\n    }\n\n    getNumberOfAppNameOptions() {\n        this.clickOnDropDownArrow('appName');\n        const dropdownOptions = element.all(by.css('.mat-select-panel mat-option'));\n        return dropdownOptions.count();\n    }\n\n    setProcessInstanceId(option) {\n        return this.setProperty('processInstanceId', option);\n    }\n\n    getProcessInstanceId() {\n        return this.getProperty('processInstanceId');\n    }\n\n    getProperty(property) {\n        const locator = element.all(by.css('input[data-automation-id=\"adf-cloud-edit-process-property-' + property + '\"]')).first();\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        return locator.getAttribute('value');\n    }\n\n    setProperty(property, option) {\n        const locator = element.all(by.css('input[data-automation-id=\"adf-cloud-edit-process-property-' + property + '\"]')).first();\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        locator.clear();\n        locator.sendKeys(option);\n        locator.sendKeys(protractor.Key.ENTER);\n        return this;\n    }\n\n    checkSaveButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        return this;\n    }\n\n    checkSaveAsButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveAsButton);\n        return this;\n    }\n\n    checkDeleteButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.deleteButton);\n        return this;\n    }\n\n    checkSaveButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        return this.saveButton.isEnabled();\n    }\n\n    checkSaveAsButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveAsButton);\n        return this.saveAsButton.isEnabled();\n    }\n\n    checkDeleteButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.deleteButton);\n        return this.deleteButton.isEnabled();\n    }\n\n    clickSaveAsButton() {\n        const disabledButton = element(by.css((\"button[data-automation-id='adf-filter-action-saveAs'][disabled]\")));\n        BrowserVisibility.waitUntilElementIsClickable(this.saveAsButton);\n        BrowserVisibility.waitUntilElementIsVisible(this.saveAsButton);\n        BrowserVisibility.waitUntilElementIsNotVisible(disabledButton);\n        this.saveAsButton.click();\n        return this.editProcessFilterDialogPage;\n    }\n\n    clickDeleteButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.deleteButton);\n        this.deleteButton.click();\n        return this;\n    }\n\n    clickSaveButton() {\n        const disabledButton = element(by.css((\"button[id='adf-save-as-id'][disabled]\")));\n        BrowserVisibility.waitUntilElementIsClickable(this.saveButton);\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        BrowserVisibility.waitUntilElementIsNotVisible(disabledButton);\n        this.saveButton.click();\n        return this;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../../../core/utils/browser-visibility';\n\nexport class EditTaskFilterDialogPage {\n\n    componentElement = element(by.css('adf-cloud-task-filter-dialog'));\n    title = element(by.id('adf-task-filter-dialog-title'));\n    filterNameInput = element(by.id('adf-filter-name-id'));\n    saveButtonLocator = by.id('adf-save-button-id');\n    cancelButtonLocator = by.id('adf-cancel-button-id');\n\n    clickOnSaveButton() {\n        const saveButton = this.componentElement.element(this.saveButtonLocator);\n        BrowserVisibility.waitUntilElementIsVisible(saveButton);\n        saveButton.click();\n        BrowserVisibility.waitUntilElementIsNotVisible(this.componentElement);\n        return this;\n    }\n\n    checkSaveButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.componentElement.element(this.saveButtonLocator));\n        return this.componentElement.element(this.saveButtonLocator).isEnabled();\n    }\n\n    clickOnCancelButton() {\n        const cancelButton = this.componentElement.element(this.cancelButtonLocator);\n        BrowserVisibility.waitUntilElementIsVisible(cancelButton);\n        cancelButton.click();\n        BrowserVisibility.waitUntilElementIsNotVisible(this.componentElement);\n        return this;\n    }\n\n    checkCancelButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.componentElement.element(this.cancelButtonLocator));\n        return this.componentElement.element(this.cancelButtonLocator).isEnabled();\n    }\n\n    getFilterName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filterNameInput);\n        return this.filterNameInput.getAttribute('value');\n    }\n\n    setFilterName(filterName) {\n        this.clearFilterName();\n        this.filterNameInput.sendKeys(filterName);\n        return this;\n    }\n\n    clearFilterName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filterNameInput);\n        this.filterNameInput.click();\n        this.filterNameInput.getAttribute('value').then((value) => {\n            for (let i = value.length; i >= 0; i--) {\n                this.filterNameInput.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n        return this;\n    }\n\n    getTitle() {\n        BrowserVisibility.waitUntilElementIsVisible(this.title);\n        return this.title.getText();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by, element, protractor } from 'protractor';\nimport { EditTaskFilterDialogPage } from './dialog/edit-task-filter-dialog.page';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class EditTaskFilterCloudComponentPage {\n\n    customiseFilter = element(by.id('adf-edit-task-filter-title-id'));\n    selectedOption = element.all(by.css('mat-option[class*=\"mat-selected\"]')).first();\n    assignee = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-assignee\"]'));\n    priority = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-priority\"]'));\n    taskName = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-taskName\"]'));\n    id = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-taskId\"]'));\n    processDefinitionId = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-processDefinitionId\"]'));\n    processInstanceId = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-processInstanceId\"]'));\n    lastModifiedFrom = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-lastModifiedFrom\"]'));\n    lastModifiedTo = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-lastModifiedTo\"]'));\n    parentTaskId = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-parentTaskId\"]'));\n    owner = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-owner\"]'));\n    saveButton = element(by.css('[data-automation-id=\"adf-filter-action-save\"]'));\n    saveAsButton = element(by.css('[data-automation-id=\"adf-filter-action-saveAs\"]'));\n    deleteButton = element(by.css('[data-automation-id=\"adf-filter-action-delete\"]'));\n\n    editTaskFilterDialogPage = new EditTaskFilterDialogPage();\n\n    editTaskFilterDialog() {\n        return this.editTaskFilterDialogPage;\n    }\n\n    clickCustomiseFilterHeader() {\n        BrowserVisibility.waitUntilElementIsVisible(this.customiseFilter);\n        this.customiseFilter.click();\n        return this;\n    }\n\n    setStatusFilterDropDown(option) {\n        this.clickOnDropDownArrow('status');\n\n        const statusElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsVisible(statusElement);\n        BrowserVisibility.waitUntilElementIsClickable(statusElement);\n        statusElement.click();\n        return this;\n    }\n\n    getStatusFilterDropDownValue() {\n        return element.all(by.css(\"mat-select[data-automation-id='adf-cloud-edit-task-property-status'] span\")).first().getText();\n    }\n\n    setSortFilterDropDown(option) {\n        this.clickOnDropDownArrow('sort');\n\n        const sortElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(sortElement);\n        BrowserVisibility.waitUntilElementIsVisible(sortElement);\n        sortElement.click();\n        return this;\n    }\n\n    getSortFilterDropDownValue() {\n        const elementSort = element.all(by.css(\"mat-select[data-automation-id='adf-cloud-edit-task-property-sort'] span\")).first();\n        BrowserVisibility.waitUntilElementIsVisible(elementSort);\n        return elementSort.getText();\n    }\n\n    setOrderFilterDropDown(option) {\n        this.clickOnDropDownArrow('order');\n\n        const orderElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(orderElement);\n        BrowserVisibility.waitUntilElementIsVisible(orderElement);\n        orderElement.click();\n        return this;\n    }\n\n    getOrderFilterDropDownValue() {\n        return element.all(by.css(\"mat-select[data-automation-id='adf-cloud-edit-task-property-order'] span\")).first().getText();\n    }\n\n    clickOnDropDownArrow(option) {\n        const dropDownArrow = element.all(by.css(\"mat-form-field[data-automation-id='\" + option + \"'] div[class*='arrow']\")).first();\n        BrowserVisibility.waitUntilElementIsVisible(dropDownArrow);\n        dropDownArrow.click();\n        BrowserVisibility.waitUntilElementIsVisible(this.selectedOption);\n    }\n\n    setAssignee(option) {\n        return this.setProperty('assignee', option);\n    }\n\n    getAssignee() {\n        return this.assignee.getText();\n    }\n\n    setPriority(option) {\n        return this.setProperty('priority', option);\n    }\n\n    getPriority() {\n        return this.priority.getText();\n    }\n\n    setParentTaskId(option) {\n        return this.setProperty('parentTaskId', option);\n    }\n\n    getParentTaskId() {\n        return this.parentTaskId.getText();\n    }\n\n    setOwner(option) {\n        return this.setProperty('owner', option);\n    }\n\n    getOwner() {\n        return this.owner.getText();\n    }\n\n    setLastModifiedFrom(option) {\n        this.clearField(this.lastModifiedFrom);\n        return this.setProperty('lastModifiedFrom', option);\n    }\n\n    getLastModifiedFrom() {\n        return this.lastModifiedFrom.getText();\n    }\n\n    setLastModifiedTo(option) {\n        this.clearField(this.lastModifiedTo);\n        return this.setProperty('lastModifiedTo', option);\n    }\n\n    getLastModifiedTo() {\n        return this.lastModifiedTo.getText();\n    }\n\n    checkSaveButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        return this;\n    }\n\n    checkSaveAsButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveAsButton);\n        return this;\n    }\n\n    checkDeleteButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.deleteButton);\n        return this;\n    }\n\n    checkSaveButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        return this.saveButton.isEnabled();\n    }\n\n    checkSaveAsButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        return this.saveAsButton.isEnabled();\n    }\n\n    checkDeleteButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        return this.deleteButton.isEnabled();\n    }\n\n    clickSaveAsButton() {\n        const disabledButton = element(by.css((\"button[data-automation-id='adf-filter-action-saveAs'][disabled]\")));\n        BrowserVisibility.waitUntilElementIsClickable(this.saveAsButton);\n        BrowserVisibility.waitUntilElementIsVisible(this.saveAsButton);\n        BrowserVisibility.waitUntilElementIsNotVisible(disabledButton);\n        this.saveAsButton.click();\n        return this.editTaskFilterDialogPage;\n    }\n\n    clickDeleteButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.deleteButton);\n        this.deleteButton.click();\n        return this;\n    }\n\n    clickSaveButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.saveButton);\n        this.saveButton.click();\n        return this;\n    }\n\n    clearAssignee() {\n        this.clearField(this.assignee);\n        return this;\n    }\n\n    clearField(locator) {\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        locator.getAttribute('value').then((result) => {\n            for (let i = result.length; i >= 0; i--) {\n                locator.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n    }\n\n    setAppNameDropDown(option) {\n        this.clickOnDropDownArrow('appName');\n\n        const appNameElement = element.all(by.cssContainingText('mat-option span', option)).first();\n        BrowserVisibility.waitUntilElementIsClickable(appNameElement);\n        BrowserVisibility.waitUntilElementIsVisible(appNameElement);\n        appNameElement.click();\n        return this;\n    }\n\n    getAppNameDropDownValue() {\n        const locator = element.all(by.css(\"mat-select[data-automation-id='adf-cloud-edit-task-property-appName'] span\")).first();\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        return locator.getText();\n    }\n\n    setId(option) {\n        return this.setProperty('taskId', option);\n    }\n\n    getId() {\n        return this.id.getAttribute('value');\n    }\n\n    setTaskName(option) {\n        return this.setProperty('taskName', option);\n    }\n\n    getTaskName() {\n        return this.taskName.getAttribute('value');\n    }\n\n    setProcessDefinitionId(option) {\n        return this.setProperty('processDefinitionId', option);\n    }\n\n    getProcessDefinitionId() {\n        return this.processDefinitionId.getAttribute('value');\n    }\n\n    setProcessInstanceId(option) {\n        return this.setProperty('processInstanceId', option);\n    }\n\n    setProperty(property, option) {\n        const locator = element(by.css('input[data-automation-id=\"adf-cloud-edit-task-property-' + property + '\"]'));\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        locator.clear();\n        locator.sendKeys(option);\n        locator.sendKeys(protractor.Key.ENTER);\n        return this;\n    }\n\n    getProcessInstanceId() {\n        return this.processInstanceId.getAttribute('value');\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser, by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class GroupCloudComponentPage {\n\n    groupCloudSearch = element(by.css('input[data-automation-id=\"adf-cloud-group-search-input\"]'));\n\n    searchGroups(name) {\n        BrowserVisibility.waitUntilElementIsVisible(this.groupCloudSearch);\n        browser.sleep(1000);\n        this.groupCloudSearch.clear().then(() => {\n            for (let i = 0; i < name.length; i++) {\n                this.groupCloudSearch.sendKeys(name[i]);\n            }\n            this.groupCloudSearch.sendKeys(protractor.Key.BACK_SPACE);\n            this.groupCloudSearch.sendKeys(name[name.length - 1]);\n        });\n        return this;\n    }\n\n    searchGroupsToExisting(name) {\n        BrowserVisibility.waitUntilElementIsVisible(this.groupCloudSearch);\n        for (let i = 0; i < name.length; i++) {\n            this.groupCloudSearch.sendKeys(name[i]);\n        }\n        this.groupCloudSearch.sendKeys(protractor.Key.BACK_SPACE);\n        this.groupCloudSearch.sendKeys(name[name.length - 1]);\n        return this;\n    }\n\n    getGroupsFieldContent() {\n        BrowserVisibility.waitUntilElementIsVisible(this.groupCloudSearch);\n        return this.groupCloudSearch.getAttribute('value');\n\n    }\n\n    selectGroupFromList(name) {\n        const groupRow = element.all(by.cssContainingText('mat-option span', name)).first();\n        BrowserVisibility.waitUntilElementIsVisible(groupRow);\n        browser.sleep(1000);\n        groupRow.click();\n        BrowserVisibility.waitUntilElementIsNotVisible(groupRow);\n        return this;\n    }\n\n    checkGroupIsDisplayed(name) {\n        const groupRow = element.all(by.cssContainingText('mat-option span', name)).first();\n        BrowserVisibility.waitUntilElementIsVisible(groupRow);\n        return this;\n    }\n\n    checkGroupIsNotDisplayed(name) {\n        const groupRow = element.all(by.cssContainingText('mat-option span', name)).first();\n        BrowserVisibility.waitUntilElementIsNotVisible(groupRow);\n        return this;\n    }\n\n    checkSelectedGroup(group) {\n        BrowserVisibility.waitUntilElementIsVisible(element(by.cssContainingText('mat-chip[data-automation-id*=\"adf-cloud-group-chip-\"]', group)));\n        return this;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { browser, by, element, protractor } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class PeopleCloudComponentPage {\n\n    peopleCloudSearch = element(by.css('input[data-automation-id=\"adf-people-cloud-search-input\"]'));\n    assigneeField = element(by.css('input[data-automation-id=\"adf-people-cloud-search-input\"]'));\n\n    searchAssigneeAndSelect(name) {\n        BrowserVisibility.waitUntilElementIsVisible(this.peopleCloudSearch);\n        this.peopleCloudSearch.clear();\n        this.peopleCloudSearch.sendKeys(name);\n        this.selectAssigneeFromList(name);\n        return this;\n    }\n\n    searchAssignee(name) {\n        BrowserVisibility.waitUntilElementIsVisible(this.peopleCloudSearch);\n        BrowserVisibility.waitUntilElementIsClickable(this.peopleCloudSearch);\n        browser.sleep(1000);\n        this.peopleCloudSearch.clear().then(() => {\n            for (let i = 0; i < name.length; i++) {\n                this.peopleCloudSearch.sendKeys(name[i]);\n            }\n            this.peopleCloudSearch.sendKeys(protractor.Key.BACK_SPACE);\n            this.peopleCloudSearch.sendKeys(name[name.length - 1]);\n        });\n        return this;\n    }\n\n    searchAssigneeToExisting(name) {\n        BrowserVisibility.waitUntilElementIsVisible(this.peopleCloudSearch);\n        for (let i = 0; i < name.length; i++) {\n            this.peopleCloudSearch.sendKeys(name[i]);\n        }\n        this.peopleCloudSearch.sendKeys(protractor.Key.BACK_SPACE);\n        this.peopleCloudSearch.sendKeys(name[name.length - 1]);\n        return this;\n    }\n\n    selectAssigneeFromList(name) {\n        const assigneeRow = element(by.cssContainingText('mat-option span.adf-people-label-name', name));\n        BrowserVisibility.waitUntilElementIsVisible(assigneeRow);\n        browser.sleep(1000);\n        assigneeRow.click();\n        BrowserVisibility.waitUntilElementIsNotVisible(assigneeRow);\n        return this;\n    }\n\n    getAssignee() {\n        BrowserVisibility.waitUntilElementIsVisible(this.peopleCloudSearch);\n        return this.peopleCloudSearch.getAttribute('value');\n    }\n\n    checkUserIsDisplayed(name) {\n        const assigneeRow = element(by.cssContainingText('mat-option span.adf-people-label-name', name));\n        BrowserVisibility.waitUntilElementIsVisible(assigneeRow);\n        return this;\n    }\n\n    checkUserIsNotDisplayed(name) {\n        const assigneeRow = element(by.cssContainingText('mat-option span.adf-people-label-name', name));\n        BrowserVisibility.waitUntilElementIsNotVisible(assigneeRow);\n        return this;\n    }\n\n    checkSelectedPeople(person) {\n        BrowserVisibility.waitUntilElementIsVisible(element(by.cssContainingText('mat-chip-list mat-chip', person)));\n        return this;\n    }\n\n    getAssigneeFieldContent() {\n        BrowserVisibility.waitUntilElementIsVisible(this.assigneeField);\n        browser.sleep(1000);\n        return this.assigneeField.getAttribute('value');\n\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class ProcessFiltersCloudComponentPage {\n\n    filter;\n    filterIcon = by.xpath(\"ancestor::div[@class='mat-list-item-content']/mat-icon\");\n\n    constructor(filter) {\n        this.filter = filter;\n    }\n\n    checkProcessFilterIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        return this;\n    }\n\n    getProcessFilterIcon() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        const icon = this.filter.element(this.filterIcon);\n        BrowserVisibility.waitUntilElementIsVisible(icon);\n        return icon.getText();\n    }\n\n    checkProcessFilterHasNoIcon() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.filter.element(this.filterIcon));\n    }\n\n    clickProcessFilter() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        BrowserVisibility.waitUntilElementIsClickable(this.filter);\n        return this.filter.click();\n    }\n\n    checkProcessFilterNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.filter);\n        return this.filter;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\nimport { DataTableComponentPage } from '../../core/pages/data-table-component.page';\nimport { element, by } from 'protractor';\n\nexport class ProcessListCloudComponentPage {\n\n    columns = {\n        id: 'Id',\n        name: 'Name'\n    };\n\n    processList = element(by.css('adf-cloud-process-list'));\n    noProcessFound = element.all(by.css(\"div[class='adf-empty-content__title']\")).first();\n\n    dataTable = new DataTableComponentPage(this.processList);\n\n    getDataTable() {\n        return this.dataTable;\n    }\n\n    selectRow(processName) {\n        return this.dataTable.selectRow(this.columns.name, processName);\n    }\n\n    selectRowById(processId) {\n        return this.dataTable.selectRow(this.columns.id, processId);\n    }\n\n    checkRowIsSelectedById(processId) {\n        return this.dataTable.checkRowIsSelected(this.columns.id, processId);\n    }\n\n    checkRowIsNotSelectedById(processId) {\n        return this.dataTable.checkRowIsNotSelected(this.columns.id, processId);\n    }\n\n    checkRowIsCheckedById(processId) {\n        return this.dataTable.checkRowIsChecked(this.columns.id, processId);\n    }\n\n    checkRowIsNotCheckedById(processId) {\n        return this.dataTable.checkRowIsNotChecked(this.columns.id, processId);\n    }\n\n    checkCheckboxById(processId) {\n        return this.dataTable.clickCheckbox(this.columns.id, processId);\n    }\n\n    checkContentIsDisplayedByName(processName) {\n        return this.dataTable.checkContentIsDisplayed(this.columns.name, processName);\n    }\n\n    checkContentIsDisplayedById(processId) {\n        return this.dataTable.checkContentIsDisplayed(this.columns.id, processId);\n    }\n\n    checkContentIsNotDisplayedById(processId) {\n        return this.dataTable.checkContentIsNotDisplayed(this.columns.id, processId);\n    }\n\n    selectRowWithKeyboard(processId) {\n        return this.dataTable.selectRowWithKeyboard(this.columns.id, processId);\n    }\n\n    getAllRowsNameColumn() {\n        return this.dataTable.getAllRowsColumnValues(this.columns.name);\n    }\n\n    checkProcessListIsLoaded() {\n        BrowserVisibility.waitUntilElementIsVisible(this.processList);\n        return this;\n    }\n\n    getNoProcessFoundMessage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.noProcessFound);\n        return this.noProcessFound.getText();\n    }\n\n    getAllRowsByColumn(column) {\n        return this.dataTable.getAllRowsColumnValues(column);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class TaskFiltersCloudComponentPage {\n\n    filter;\n    taskIcon = by.xpath(\"ancestor::div[@class='mat-list-item-content']/mat-icon\");\n\n    constructor(filter) {\n        this.filter = filter;\n    }\n\n    checkTaskFilterIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        return this;\n    }\n\n    getTaskFilterIcon() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        const icon = this.filter.element(this.taskIcon);\n        BrowserVisibility.waitUntilElementIsVisible(icon);\n        return icon.getText();\n    }\n\n    checkTaskFilterHasNoIcon() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.filter.element(this.taskIcon));\n    }\n\n    clickTaskFilter() {\n        BrowserVisibility.waitUntilElementIsVisible(this.filter);\n        return this.filter.click();\n    }\n\n    checkTaskFilterNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.filter);\n        return this.filter;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\nimport { DataTableComponentPage } from '../../core/pages/data-table-component.page';\nimport { element, by } from 'protractor';\n\nconst column = {\n    id: 'Id',\n    name: 'Name',\n    processInstanceId: 'ProcessInstanceId',\n    processDefinitionId: 'ProcessDefinitionId',\n    assignee: 'Assignee',\n    parentTaskId: 'ParentTaskId',\n    priority: 'Priority',\n    standAlone: 'StandAlone',\n    owner: 'Owner'\n};\n\nexport class TaskListCloudComponentPage {\n\n    taskList = element(by.css('adf-cloud-task-list'));\n    noTasksFound = element.all(by.css(\"div[class='adf-empty-content__title']\")).first();\n\n    dataTable = new DataTableComponentPage(this.taskList);\n\n    getDataTable() {\n        return this.dataTable;\n    }\n\n    clickCheckbox(taskName) {\n        return this.dataTable.clickCheckbox(column.name, taskName);\n    }\n\n    checkRowIsNotChecked(taskName) {\n        return this.dataTable.checkRowIsNotChecked(column.name, taskName);\n    }\n\n    checkRowIsChecked(taskName) {\n        return this.dataTable.checkRowIsChecked(column.name, taskName);\n    }\n\n    getRowsWithSameName(taskName) {\n        return this.dataTable.getRowsWithSameColumnValues(column.name, taskName);\n    }\n\n    getRowsWithSameId(taskId) {\n        return this.dataTable.getRowsWithSameColumnValues('Id', taskId);\n    }\n\n    checkRowIsSelected(taskName) {\n        return this.dataTable.checkRowIsSelected(column.name, taskName);\n    }\n\n    checkRowIsNotSelected(taskName) {\n        return this.dataTable.checkRowIsNotSelected(column.name, taskName);\n    }\n\n    selectRowWithKeyboard(taskName) {\n        return this.dataTable.selectRowWithKeyboard(column.name, taskName);\n    }\n\n    selectRow(taskName) {\n        return this.dataTable.selectRow(column.name, taskName);\n    }\n\n    getRow(taskName) {\n        return this.dataTable.getCellElementByValue(column.name, taskName);\n    }\n\n    checkContentIsDisplayedById(taskId) {\n        return this.dataTable.checkContentIsDisplayed(column.id, taskId);\n    }\n\n    checkContentIsDisplayedByProcessInstanceId(taskName) {\n        return this.dataTable.checkContentIsDisplayed(column.processInstanceId, taskName);\n    }\n\n    checkContentIsDisplayedByName(taskName) {\n        return this.dataTable.checkContentIsDisplayed(column.name, taskName);\n    }\n\n    checkContentIsNotDisplayedByName(taskName) {\n        return this.dataTable.checkContentIsNotDisplayed(column.name, taskName);\n    }\n\n    checkTaskListIsLoaded() {\n        BrowserVisibility.waitUntilElementIsVisible(this.taskList);\n        return this;\n    }\n\n    getNoTasksFoundMessage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.noTasksFound);\n        return this.noTasksFound.getText();\n    }\n\n    getAllRowsNameColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.name);\n    }\n\n    getAllRowsByIdColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.id);\n    }\n\n    getAllRowsByProcessDefIdColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.processDefinitionId);\n    }\n\n    getAllRowsByProcessInstanceIdColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.processInstanceId);\n    }\n\n    getAllRowsByAssigneeColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.assignee);\n    }\n\n    getAllRowsByParentTaskIdColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.parentTaskId);\n    }\n\n    getAllRowsByPriorityColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.priority);\n    }\n\n    getAllRowsByStandAloneColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.standAlone);\n    }\n\n    getAllRowsByOwnerColumn() {\n        return this.dataTable.getAllRowsColumnValues(column.owner);\n    }\n\n    getIdCellValue(rowName) {\n        const locator = new DataTableComponentPage().getCellByRowContentAndColumn(column.name, rowName, column.id);\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        return locator.getText();\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { by, element, Key, protractor, browser } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class StartProcessCloudPage {\n\n    defaultProcessName = element(by.css('input[id=\"processName\"]'));\n    processNameInput = element(by.id('processName'));\n    selectProcessDropdownArrow = element(by.css('button[id=\"adf-select-process-dropdown\"]'));\n    cancelProcessButton = element(by.id('cancel_process'));\n    formStartProcessButton = element(by.css('button[data-automation-id=\"adf-form-start process\"]'));\n    startProcessButton = element(by.css('button[data-automation-id=\"btn-start\"]'));\n    noProcess = element(by.id('no-process-message'));\n    processDefinition = element(by.css('input[id=\"processDefinitionName\"]'));\n    processDefinitionOptionsPanel = element(by.css('div[class*=\"processDefinitionOptions\"]'));\n\n    checkNoProcessMessage() {\n        BrowserVisibility.waitUntilElementIsVisible(this.noProcess);\n    }\n\n    pressDownArrowAndEnter() {\n        this.processDefinition.sendKeys(protractor.Key.ARROW_DOWN);\n        return browser.actions().sendKeys(protractor.Key.ENTER).perform();\n    }\n\n    checkNoProcessDefinitionOptionIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotOnPage(this.processDefinitionOptionsPanel);\n    }\n\n    enterProcessName(name) {\n        BrowserVisibility.waitUntilElementIsVisible(this.processNameInput);\n        this.clearProcessName();\n        this.processNameInput.sendKeys(name);\n    }\n\n    clearProcessName() {\n        BrowserVisibility.waitUntilElementIsVisible(this.processNameInput);\n        this.processNameInput.clear();\n    }\n\n    selectFromProcessDropdown(name) {\n        this.clickProcessDropdownArrow();\n        return this.selectOption(name);\n    }\n\n    clickProcessDropdownArrow() {\n        BrowserVisibility.waitUntilElementIsVisible(this.selectProcessDropdownArrow);\n        BrowserVisibility.waitUntilElementIsClickable(this.selectProcessDropdownArrow);\n        this.selectProcessDropdownArrow.click();\n    }\n\n    checkOptionIsDisplayed(name) {\n        const selectProcessDropdown = element(by.cssContainingText('.mat-option-text', name));\n        BrowserVisibility.waitUntilElementIsVisible(selectProcessDropdown);\n        BrowserVisibility.waitUntilElementIsClickable(selectProcessDropdown);\n        return this;\n    }\n\n    selectOption(name) {\n        const selectProcessDropdown = element(by.cssContainingText('.mat-option-text', name));\n        BrowserVisibility.waitUntilElementIsVisible(selectProcessDropdown);\n        BrowserVisibility.waitUntilElementIsClickable(selectProcessDropdown);\n        selectProcessDropdown.click();\n        return this;\n    }\n\n    clickCancelProcessButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.cancelProcessButton);\n        this.cancelProcessButton.click();\n    }\n\n    checkStartProcessButtonIsEnabled() {\n        BrowserVisibility.waitUntilElementIsClickable(this.startProcessButton);\n        expect(this.startProcessButton.isEnabled()).toBe(true);\n    }\n\n    checkStartProcessButtonIsDisabled() {\n        expect(this.startProcessButton.isEnabled()).toBe(false);\n    }\n\n    clickStartProcessButton() {\n        BrowserVisibility.waitUntilElementIsClickable(this.startProcessButton);\n        return this.startProcessButton.click();\n    }\n\n    checkValidationErrorIsDisplayed(error, elementRef = 'mat-error') {\n        const errorElement = element(by.cssContainingText(elementRef, error));\n        BrowserVisibility.waitUntilElementIsVisible(errorElement);\n        return this;\n    }\n\n    blur(locator) {\n        locator.click();\n        locator.sendKeys(Key.TAB);\n        return this;\n    }\n\n    clearField(locator) {\n        BrowserVisibility.waitUntilElementIsVisible(locator);\n        locator.getAttribute('value').then((result) => {\n            for (let i = result.length; i >= 0; i--) {\n                locator.sendKeys(protractor.Key.BACK_SPACE);\n            }\n        });\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class TaskFormCloudComponent {\n\n    cancelButton = element(by.css(\"button[id='adf-cloud-cancel-task']\"));\n    completeButton = element(by.css('button[adf-cloud-complete-task]'));\n\n    checkCompleteButtonIsDisplayed() {\n        BrowserVisibility.waitUntilElementIsVisible(this.completeButton);\n        return this;\n    }\n\n    checkCompleteButtonIsNotDisplayed() {\n        BrowserVisibility.waitUntilElementIsNotVisible(this.completeButton);\n        return this;\n    }\n\n    clickCompleteButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.completeButton);\n        this.completeButton.click();\n        return this;\n    }\n\n    clickCancelButton() {\n        BrowserVisibility.waitUntilElementIsVisible(this.cancelButton);\n        this.cancelButton.click();\n        return this;\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AlfrescoApiCompatibility, AlfrescoApiConfig } from '@alfresco/js-api';\nimport { AlfrescoApiService, AppConfigValues, AppConfigService } from '@alfresco/adf-core';\n\nexport class TestingAlfrescoApiService extends AlfrescoApiService {\n\n    protected alfrescoApi: AlfrescoApiCompatibility;\n\n    config = {\n    };\n\n    constructor(public appConfig: AppConfigService) {\n        super(null);\n        const oauth = Object.assign({}, this.appConfig.get<any>(AppConfigValues.OAUTHCONFIG, null));\n        this.config = new AlfrescoApiConfig({\n            provider: this.appConfig.get<string>(AppConfigValues.PROVIDERS),\n            hostEcm: this.appConfig.get<string>(AppConfigValues.ECMHOST),\n            hostBpm: this.appConfig.get<string>(AppConfigValues.BPMHOST),\n            authType: this.appConfig.get<string>(AppConfigValues.AUTHTYPE, 'BASIC'),\n            contextRootBpm: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTBPM),\n            contextRoot: this.appConfig.get<string>(AppConfigValues.CONTEXTROOTECM),\n            disableCsrf: this.appConfig.get<boolean>(AppConfigValues.DISABLECSRF),\n            withCredentials: this.appConfig.get<boolean>(AppConfigValues.AUTH_WITH_CREDENTIALS, false),\n            oauth2: oauth\n        });\n    }\n\n    getInstance(): AlfrescoApiCompatibility {\n        if (this.alfrescoApi) {\n            this.alfrescoApi.configureJsApi(this.config);\n        } else {\n            this.alfrescoApi = new AlfrescoApiCompatibility(this.config);\n        }\n        return this.alfrescoApi;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfigService } from '@alfresco/adf-core';\n\nexport class TestingAppConfigService extends AppConfigService {\n\n    config = {\n    };\n\n    constructor(config?) {\n        super(null);\n        this.config = config;\n    }\n\n    getLocationHostname(): string {\n        return '';\n    }\n\n    getLocationPort(prefix: string = ''): string {\n        return '';\n    }\n\n    getLocationProtocol(): string {\n        return '';\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../../core/actions/api.service';\n\nexport class ProcessDefinitionsService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async getProcessDefinitions(appName) {\n        const path = '/' + appName + '/rb/v1/process-definitions';\n        const method = 'GET';\n\n        const queryParams = {};\n\n        try {\n            const data = await this.api.performBpmOperation(path, method, queryParams, {});\n            return data;\n        } catch (error) {\n            if (error.status === 404) {\n                // tslint:disable-next-line:no-console\n                console.log(`${appName} not present`);\n            } else if (error.status === 403) {\n                // tslint:disable-next-line:no-console\n                console.log(`Access to the requested resource has been denied ${appName}`);\n            }\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ApiService } from '../../core/actions/api.service';\n\nexport class ProcessInstancesService {\n\n    api: ApiService;\n\n    constructor(api: ApiService) {\n        this.api = api;\n    }\n\n    async createProcessInstance(processDefKey, appName, options?: any) {\n        const path = '/' + appName + '/rb/v1/process-instances';\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {\n            'processDefinitionKey': processDefKey,\n            'payloadType': 'StartProcessPayload',\n            ...options\n        };\n\n        return await this.api.performBpmOperation(path, method, queryParams, postBody);\n    }\n\n    async suspendProcessInstance(processInstanceId, appName) {\n        const path = '/' + appName + '/rb/v1/process-instances/' + processInstanceId + '/suspend';\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {};\n\n        return await this.api.performBpmOperation(path, method, queryParams, postBody);\n    }\n\n    async deleteProcessInstance(processInstanceId, appName) {\n        const path = '/' + appName + '/rb/v1/process-instances/' + processInstanceId;\n        const method = 'DELETE';\n\n        const queryParams = {}, postBody = {};\n\n        return await this.api.performBpmOperation(path, method, queryParams, postBody);\n    }\n\n    async completeProcessInstance(processInstanceId, appName) {\n        const path = '/' + appName + '/rb/v1/process-instances/' + processInstanceId + '/complete';\n\n        const method = 'POST';\n\n        const queryParams = {}, postBody = {};\n\n        return await this.api.performBpmOperation(path, method, queryParams, postBody);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { element, by } from 'protractor';\nimport { BrowserVisibility } from '../../core/utils/browser-visibility';\n\nexport class AppListCloudPage {\n\n    apsAppsContainer = element(by.css('adf-cloud-app-list'));\n\n    checkApsContainer() {\n        BrowserVisibility.waitUntilElementIsVisible(this.apsAppsContainer);\n    }\n\n    goToApp(applicationName) {\n        const app = element(by.css('mat-card[title=\"' + applicationName + '\"]'));\n        BrowserVisibility.waitUntilElementIsVisible(app);\n        app.click();\n    }\n\n    checkAppIsNotDisplayed(applicationName) {\n        const app = element(by.css('mat-card[title=\"' + applicationName + '\"]'));\n        return BrowserVisibility.waitUntilElementIsNotOnPage(app);\n    }\n\n    checkAppIsDisplayed(applicationName) {\n        const app = element(by.css('mat-card[title=\"' + applicationName + '\"]'));\n        return BrowserVisibility.waitUntilElementIsVisible(app);\n    }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  exports: []\n})\nexport class TestingModule { }\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestingService {\n\n  constructor() { }\n\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ElementFinder, browser, by } from 'protractor';\n\n/**\n * Tagged template to convert a sting to an `ElementFinder`.\n * @example ```const item = byCss`.adf-breadcrumb-item-current`;```\n * @example ```const item = byCss`${variable}`;```\n * @returns Instance of `ElementFinder` type.\n */\nexport function byCss(\n    literals: TemplateStringsArray,\n    ...placeholders: string[]\n): ElementFinder {\n    const selector = literals[0] || placeholders[0];\n    return browser.element(by.css(selector));\n}\n"]}