/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { StringUtil } from '../utils/string.util';
var UserModel = /** @class */ (function () {
    function UserModel(details) {
        this.firstName = StringUtil.generateRandomString();
        this.lastName = StringUtil.generateRandomString() + 'LastName';
        this.password = StringUtil.generateRandomString();
        this.email = StringUtil.generateRandomEmail('@alfresco.com');
        this.username = StringUtil.generateRandomString().toLowerCase();
        Object.assign(this, details);
    }
    Object.defineProperty(UserModel.prototype, "id", {
        get: /**
         * @return {?}
         */
        function () {
            return this.email;
        },
        enumerable: true,
        configurable: true
    });
    return UserModel;
}());
export { UserModel };
if (false) {
    /** @type {?} */
    UserModel.prototype.firstName;
    /** @type {?} */
    UserModel.prototype.lastName;
    /** @type {?} */
    UserModel.prototype.password;
    /** @type {?} */
    UserModel.prototype.email;
    /** @type {?} */
    UserModel.prototype.username;
    /** @type {?} */
    UserModel.prototype.idIdentityService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtdGVzdGluZy8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL21vZGVscy91c2VyLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUVsRDtJQVNJLG1CQUFZLE9BQWE7UUFQekIsY0FBUyxHQUFXLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQ3RELGFBQVEsR0FBVyxVQUFVLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxVQUFVLENBQUM7UUFDbEUsYUFBUSxHQUFXLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQ3JELFVBQUssR0FBVyxVQUFVLENBQUMsbUJBQW1CLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDaEUsYUFBUSxHQUFXLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBSS9ELE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxzQkFBSSx5QkFBRTs7OztRQUFOO1lBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3RCLENBQUM7OztPQUFBO0lBRUwsZ0JBQUM7QUFBRCxDQUFDLEFBakJELElBaUJDOzs7O0lBZkcsOEJBQXNEOztJQUN0RCw2QkFBa0U7O0lBQ2xFLDZCQUFxRDs7SUFDckQsMEJBQWdFOztJQUNoRSw2QkFBbUU7O0lBQ25FLHNDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IFN0cmluZ1V0aWwgfSBmcm9tICcuLi91dGlscy9zdHJpbmcudXRpbCc7XG5cbmV4cG9ydCBjbGFzcyBVc2VyTW9kZWwge1xuXG4gICAgZmlyc3ROYW1lOiBzdHJpbmcgPSBTdHJpbmdVdGlsLmdlbmVyYXRlUmFuZG9tU3RyaW5nKCk7XG4gICAgbGFzdE5hbWU6IHN0cmluZyA9IFN0cmluZ1V0aWwuZ2VuZXJhdGVSYW5kb21TdHJpbmcoKSArICdMYXN0TmFtZSc7XG4gICAgcGFzc3dvcmQ6IHN0cmluZyA9IFN0cmluZ1V0aWwuZ2VuZXJhdGVSYW5kb21TdHJpbmcoKTtcbiAgICBlbWFpbDogc3RyaW5nID0gU3RyaW5nVXRpbC5nZW5lcmF0ZVJhbmRvbUVtYWlsKCdAYWxmcmVzY28uY29tJyk7XG4gICAgdXNlcm5hbWU6IHN0cmluZyA9IFN0cmluZ1V0aWwuZ2VuZXJhdGVSYW5kb21TdHJpbmcoKS50b0xvd2VyQ2FzZSgpO1xuICAgIGlkSWRlbnRpdHlTZXJ2aWNlOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkZXRhaWxzPzogYW55KSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgZGV0YWlscyk7XG4gICAgfVxuXG4gICAgZ2V0IGlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbWFpbDtcbiAgICB9XG5cbn1cbiJdfQ==