/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { UserModel } from '../../models/user.model';
var IdentityService = /** @class */ (function () {
    function IdentityService(api) {
        this.api = api;
    }
    /**
     * @param {?=} user
     * @return {?}
     */
    IdentityService.prototype.createIdentityUser = /**
     * @param {?=} user
     * @return {?}
     */
    function (user) {
        if (user === void 0) { user = new UserModel(); }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var userIdentity;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.createUser(user)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.getUserInfoByUsername(user.username)];
                    case 2:
                        userIdentity = _a.sent();
                        return [4 /*yield*/, this.resetPassword(userIdentity.id, user.password)];
                    case 3:
                        _a.sent();
                        user.idIdentityService = userIdentity.id;
                        return [2 /*return*/, user];
                }
            });
        });
    };
    /**
     * @param {?} user
     * @return {?}
     */
    IdentityService.prototype.createIdentityUserAndSyncECMBPM = /**
     * @param {?} user
     * @return {?}
     */
    function (user) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var createUser;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.api.config.provider === 'ECM' || this.api.config.provider === 'ALL')) return [3 /*break*/, 2];
                        createUser = (/** @type {?} */ ({
                            firstName: user.firstName,
                            lastName: user.lastName,
                            password: user.password,
                            email: user.email,
                            id: user.email
                        }));
                        return [4 /*yield*/, this.api.apiService.core.peopleApi.addPerson(createUser)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        if (!(this.api.config.provider === 'BPM' || this.api.config.provider === 'ALL')) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.api.apiService.activiti.adminUsersApi.createNewUser({
                                email: user.email,
                                firstName: user.firstName,
                                lastName: user.lastName,
                                password: user.password,
                                type: 'enterprise',
                                tenantId: 1,
                                company: null
                            })];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4: return [4 /*yield*/, this.createIdentityUser(user)];
                    case 5:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} userId
     * @return {?}
     */
    IdentityService.prototype.deleteIdentityUser = /**
     * @param {?} userId
     * @return {?}
     */
    function (userId) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.deleteUser(userId)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} user
     * @return {?}
     */
    IdentityService.prototype.createUser = /**
     * @param {?} user
     * @return {?}
     */
    function (user) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var path, method, queryParams, postBody, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = '/users';
                        method = 'POST';
                        queryParams = {};
                        postBody = {
                            'username': user.username,
                            'firstName': user.firstName,
                            'lastName': user.lastName,
                            'enabled': true,
                            'email': user.email
                        };
                        return [4 /*yield*/, this.api.performIdentityOperation(path, method, queryParams, postBody)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data];
                }
            });
        });
    };
    /**
     * @param {?} userId
     * @return {?}
     */
    IdentityService.prototype.deleteUser = /**
     * @param {?} userId
     * @return {?}
     */
    function (userId) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var path, method, queryParams, postBody, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = "/users/" + userId;
                        method = 'DELETE';
                        queryParams = {};
                        postBody = {};
                        return [4 /*yield*/, this.api.performIdentityOperation(path, method, queryParams, postBody)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data];
                }
            });
        });
    };
    /**
     * @param {?} username
     * @return {?}
     */
    IdentityService.prototype.getUserInfoByUsername = /**
     * @param {?} username
     * @return {?}
     */
    function (username) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var path, method, queryParams, postBody, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = "/users";
                        method = 'GET';
                        queryParams = { 'username': username };
                        postBody = {};
                        return [4 /*yield*/, this.api.performIdentityOperation(path, method, queryParams, postBody)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data[0]];
                }
            });
        });
    };
    /**
     * @param {?} id
     * @param {?} password
     * @return {?}
     */
    IdentityService.prototype.resetPassword = /**
     * @param {?} id
     * @param {?} password
     * @return {?}
     */
    function (id, password) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var path, method, queryParams, postBody, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = "/users/" + id + "/reset-password";
                        method = 'PUT';
                        queryParams = {};
                        postBody = { 'type': 'password', 'value': password, 'temporary': false };
                        return [4 /*yield*/, this.api.performIdentityOperation(path, method, queryParams, postBody)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data];
                }
            });
        });
    };
    /**
     * @param {?} userId
     * @param {?} roleId
     * @param {?} roleName
     * @return {?}
     */
    IdentityService.prototype.assignRole = /**
     * @param {?} userId
     * @param {?} roleId
     * @param {?} roleName
     * @return {?}
     */
    function (userId, roleId, roleName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var path, method, queryParams, postBody, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = "/users/" + userId + "/role-mappings/realm";
                        method = 'POST';
                        queryParams = {};
                        postBody = [{ 'id': roleId, 'name': roleName }];
                        return [4 /*yield*/, this.api.performIdentityOperation(path, method, queryParams, postBody)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data];
                }
            });
        });
    };
    /**
     * @param {?} userId
     * @param {?} clientId
     * @param {?} roleId
     * @param {?} roleName
     * @return {?}
     */
    IdentityService.prototype.deleteClientRole = /**
     * @param {?} userId
     * @param {?} clientId
     * @param {?} roleId
     * @param {?} roleName
     * @return {?}
     */
    function (userId, clientId, roleId, roleName) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var path, method, queryParams, postBody, data;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        path = "/users/" + userId + "/role-mappings/clients/" + clientId;
                        method = 'DELETE';
                        queryParams = {};
                        postBody = [{
                                'id': roleId,
                                'name': roleName,
                                'composite': false,
                                'clientRole': true,
                                'containerId': clientId
                            }];
                        return [4 /*yield*/, this.api.performIdentityOperation(path, method, queryParams, postBody)];
                    case 1:
                        data = _a.sent();
                        return [2 /*return*/, data];
                }
            });
        });
    };
    return IdentityService;
}());
export { IdentityService };
if (false) {
    /** @type {?} */
    IdentityService.prototype.api;
}
//# sourceMappingURL=data:application/json;base64,