/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { browser, protractor } from 'protractor';
/** @type {?} */
var until = protractor.ExpectedConditions;
/** @type {?} */
var DEFAULT_TIMEOUT = global['TestConfig'] ? global['TestConfig'].main.timeout : 40000;
var BrowserVisibility = /** @class */ (function () {
    function BrowserVisibility() {
    }
    /*
     * Wait for element is visible
     */
    /*
         * Wait for element is visible
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsVisible = /*
         * Wait for element is visible
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        /** @type {?} */
        var isDisplayed = false;
        return browser.wait((/**
         * @return {?}
         */
        function () {
            browser.waitForAngularEnabled();
            elementToCheck.isDisplayed().then((/**
             * @return {?}
             */
            function () {
                isDisplayed = true;
            }), (/**
             * @return {?}
             */
            function () {
                isDisplayed = false;
            }));
            return isDisplayed;
        }), waitTimeout, 'Element is not visible ' + elementToCheck.locator());
    };
    /*
     * Wait for element to be clickable
     */
    /*
         * Wait for element to be clickable
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsClickable = /*
         * Wait for element to be clickable
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        /** @type {?} */
        var isDisplayed = false;
        return browser.wait((/**
         * @return {?}
         */
        function () {
            browser.waitForAngularEnabled();
            elementToCheck.isDisplayed().then((/**
             * @return {?}
             */
            function () {
                isDisplayed = true;
            }), (/**
             * @return {?}
             */
            function () {
                isDisplayed = false;
            }));
            return isDisplayed;
        }), waitTimeout, 'Element is not visible ' + elementToCheck.locator());
    };
    /*
   * Wait for element to not be visible
   */
    /*
       * Wait for element to not be visible
       */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsStale = /*
       * Wait for element to not be visible
       */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        return browser.wait(until.stalenessOf(elementToCheck), waitTimeout, 'Element is not in stale ' + elementToCheck.locator());
    };
    /*
     * Wait for element to not be visible
     */
    /*
         * Wait for element to not be visible
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsNotVisible = /*
         * Wait for element to not be visible
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        /** @type {?} */
        var isPresent = false;
        return browser.wait((/**
         * @return {?}
         */
        function () {
            browser.waitForAngularEnabled();
            elementToCheck.isPresent().then((/**
             * @param {?} present
             * @return {?}
             */
            function (present) {
                isPresent = !present;
            }));
            return isPresent;
        }), waitTimeout, 'Element is Visible and it should not' + elementToCheck.locator());
    };
    /*
     * Wait for element to have value
     */
    /*
         * Wait for element to have value
         */
    /**
     * @param {?} elementToCheck
     * @param {?} elementValue
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementHasValue = /*
         * Wait for element to have value
         */
    /**
     * @param {?} elementToCheck
     * @param {?} elementValue
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, elementValue, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        browser.waitForAngularEnabled();
        browser.wait(until.textToBePresentInElementValue(elementToCheck, elementValue), waitTimeout, 'Element doesn\'t have a value ' + elementToCheck.locator());
    };
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsOnPage = /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        return browser.wait(browser.wait(until.visibilityOf(elementToCheck)), waitTimeout);
    };
    /*
     * Wait for element to not be visible
     */
    /*
         * Wait for element to not be visible
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsNotOnPage = /*
         * Wait for element to not be visible
         */
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        return browser.wait(until.not(until.visibilityOf(elementToCheck)), waitTimeout, 'Element is not in the page ' + elementToCheck.locator());
    };
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsPresent = /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        browser.waitForAngularEnabled();
        return browser.wait(until.presenceOf(elementToCheck), waitTimeout, 'Element is not present ' + elementToCheck.locator());
    };
    /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    BrowserVisibility.waitUntilElementIsNotPresent = /**
     * @param {?} elementToCheck
     * @param {?=} waitTimeout
     * @return {?}
     */
    function (elementToCheck, waitTimeout) {
        if (waitTimeout === void 0) { waitTimeout = DEFAULT_TIMEOUT; }
        return browser.wait(until.not(until.presenceOf(elementToCheck)), waitTimeout, 'Element is not in the page ' + elementToCheck.locator());
    };
    return BrowserVisibility;
}());
export { BrowserVisibility };
//# sourceMappingURL=data:application/json;base64,