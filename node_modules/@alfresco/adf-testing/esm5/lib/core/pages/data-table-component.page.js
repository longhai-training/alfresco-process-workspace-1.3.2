/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { browser, by, element, protractor } from 'protractor';
import { BrowserVisibility } from '../utils/browser-visibility';
var DataTableComponentPage = /** @class */ (function () {
    function DataTableComponentPage(rootElement) {
        if (rootElement === void 0) { rootElement = element.all(by.css('adf-datatable')).first(); }
        this.rows = by.css("adf-datatable div[class*='adf-datatable-body'] div[class*='adf-datatable-row']");
        this.rootElement = rootElement;
        this.list = this.rootElement.all(by.css("div[class*='adf-datatable-body'] div[class*='adf-datatable-row']"));
        this.contents = this.rootElement.all(by.css('div[class="adf-datatable-body"] span'));
        this.tableBody = this.rootElement.all(by.css("div[class='adf-datatable-body']")).first();
        this.spinner = this.rootElement.element(by.css('mat-progress-spinner'));
        this.allColumns = this.rootElement.all(by.css('div[data-automation-id*="auto_id_entry."]'));
        this.selectedRowNumber = this.rootElement.element(by.css("div[class*='is-selected'] div[data-automation-id*='text_']"));
        this.allSelectedRows = this.rootElement.all(by.css("div[class*='is-selected']"));
        this.selectAll = this.rootElement.element(by.css("div[class*='adf-datatable-header'] mat-checkbox"));
        this.copyColumnTooltip = this.rootElement.element(by.css("adf-copy-content-tooltip span"));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkAllRowsButtonIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).selectAll);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkAllRows = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        var _this = this;
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).selectAll);
        BrowserVisibility.waitUntilElementIsClickable((/** @type {?} */ (this)).selectAll).then((/**
         * @return {?}
         */
        function () {
            (/** @type {?} */ (_this)).selectAll.click();
            BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (_this)).selectAll.element(by.css('input[aria-checked="true"]')));
        }));
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.uncheckAllRows = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        var _this = this;
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).selectAll);
        BrowserVisibility.waitUntilElementIsClickable((/** @type {?} */ (this)).selectAll).then((/**
         * @return {?}
         */
        function () {
            (/** @type {?} */ (_this)).selectAll.click();
            BrowserVisibility.waitUntilElementIsNotOnPage((/** @type {?} */ (_this)).selectAll.element(by.css('input[aria-checked="true"]')));
        }));
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.clickCheckbox = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var checkbox = this.getRowCheckbox(columnName, columnValue);
        BrowserVisibility.waitUntilElementIsClickable(checkbox);
        checkbox.click();
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.checkRowIsNotChecked = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        BrowserVisibility.waitUntilElementIsNotOnPage(this.getRowCheckbox(columnName, columnValue).element(by.css('input[aria-checked="true"]')));
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.checkRowIsChecked = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var rowCheckbox = this.getRowCheckbox(columnName, columnValue);
        BrowserVisibility.waitUntilElementIsVisible(rowCheckbox.element(by.css('input[aria-checked="true"]')));
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.getRowCheckbox = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        return this.getRow(columnName, columnValue)
            .element(by.css('mat-checkbox'));
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.checkNoRowIsSelected = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsNotOnPage(this.selectedRowNumber);
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.getNumberOfSelectedRows = /**
     * @return {?}
     */
    function () {
        return this.allSelectedRows.count();
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.selectRowWithKeyboard = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = this.getRow(columnName, columnValue);
        browser.actions().sendKeys(protractor.Key.COMMAND).click(row).perform();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.selectRow = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).getRow(columnName, columnValue);
        BrowserVisibility.waitUntilElementIsVisible(row);
        BrowserVisibility.waitUntilElementIsClickable(row);
        row.click();
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkRowIsSelected = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var selectedRow = (/** @type {?} */ (this)).getCellElementByValue(columnName, columnValue).element(by.xpath("ancestor::div[contains(@class, 'is-selected')]"));
        BrowserVisibility.waitUntilElementIsVisible(selectedRow);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkRowIsNotSelected = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var selectedRow = (/** @type {?} */ (this)).getCellElementByValue(columnName, columnValue).element(by.xpath("ancestor::div[contains(@class, 'is-selected')]"));
        BrowserVisibility.waitUntilElementIsNotOnPage(selectedRow);
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?} identifyingColumn
     * @param {?} identifyingValue
     * @param {?} columnName
     * @return {?}
     */
    DataTableComponentPage.prototype.getColumnValueForRow = /**
     * @param {?} identifyingColumn
     * @param {?} identifyingValue
     * @param {?} columnName
     * @return {?}
     */
    function (identifyingColumn, identifyingValue, columnName) {
        /** @type {?} */
        var row = this.getRow(identifyingColumn, identifyingValue);
        BrowserVisibility.waitUntilElementIsVisible(row);
        /** @type {?} */
        var rowColumn = row.element(by.css("div[title=\"" + columnName + "\"] span"));
        BrowserVisibility.waitUntilElementIsVisible(rowColumn);
        return rowColumn.getText();
    };
    /**
     * Check the list is sorted.
     *
     * @param sortOrder: 'true' if the list is expected to be sorted ascendant and 'false' for descendant
     * @param locator: locator for column
     * @return 'true' if the list is sorted as expected and 'false' if it isn't
     */
    /**
     * Check the list is sorted.
     *
     * @param {?} sortOrder
     * @param {?} locator
     * @return {?} 'true' if the list is sorted as expected and 'false' if it isn't
     */
    DataTableComponentPage.prototype.checkListIsSorted = /**
     * Check the list is sorted.
     *
     * @param {?} sortOrder
     * @param {?} locator
     * @return {?} 'true' if the list is sorted as expected and 'false' if it isn't
     */
    function (sortOrder, locator) {
        /** @type {?} */
        var deferred = protractor.promise.defer();
        /** @type {?} */
        var column = element.all(by.css("div[title='" + locator + "'] span"));
        BrowserVisibility.waitUntilElementIsVisible(column.first());
        /** @type {?} */
        var initialList = [];
        column.each((/**
         * @param {?} currentElement
         * @return {?}
         */
        function (currentElement) {
            currentElement.getText().then((/**
             * @param {?} text
             * @return {?}
             */
            function (text) {
                initialList.push(text);
            }));
        })).then((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var sortedList = initialList;
            sortedList = sortedList.sort();
            if (sortOrder === false) {
                sortedList = sortedList.reverse();
            }
            deferred.fulfill(initialList.toString() === sortedList.toString());
        }));
        return deferred.promise;
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.rightClickOnRow = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = this.getRow(columnName, columnValue);
        browser.actions().click(row, protractor.Button.RIGHT).perform();
        BrowserVisibility.waitUntilElementIsVisible(element(by.id('adf-context-menu-content')));
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.getTooltip = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        return this.getCellElementByValue(columnName, columnValue).getAttribute('title');
    };
    /**
     * @param {?} filename
     * @return {?}
     */
    DataTableComponentPage.prototype.getFileHyperlink = /**
     * @param {?} filename
     * @return {?}
     */
    function (filename) {
        return element(by.cssContainingText('adf-name-column[class*="adf-datatable-link"] span', filename));
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.numberOfRows = /**
     * @return {?}
     */
    function () {
        return this.rootElement.all(this.rows).count();
    };
    /**
     * @param {?} column
     * @return {?}
     */
    DataTableComponentPage.prototype.getAllRowsColumnValues = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var columnLocator, initialList;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        columnLocator = by.css("adf-datatable div[class*='adf-datatable-body'] div[class*='adf-datatable-row'] div[title='" + column + "'] span");
                        BrowserVisibility.waitUntilElementIsVisible(element.all(columnLocator).first());
                        return [4 /*yield*/, element.all(columnLocator).getText()];
                    case 1:
                        initialList = _a.sent();
                        return [2 /*return*/, initialList.filter((/**
                             * @param {?} el
                             * @return {?}
                             */
                            function (el) { return el; }))];
                }
            });
        });
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.getRowsWithSameColumnValues = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var columnLocator;
            return tslib_1.__generator(this, function (_a) {
                columnLocator = by.css("div[title='" + columnName + "'] div[data-automation-id=\"text_" + columnValue + "\"] span");
                BrowserVisibility.waitUntilElementIsVisible(this.rootElement.all(columnLocator).first());
                return [2 /*return*/, this.rootElement.all(columnLocator).getText()];
            });
        });
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.doubleClickRow = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).getRow(columnName, columnValue);
        BrowserVisibility.waitUntilElementIsVisible(row);
        BrowserVisibility.waitUntilElementIsClickable(row);
        row.click();
        (/** @type {?} */ (this)).checkRowIsSelected(columnName, columnValue);
        browser.actions().sendKeys(protractor.Key.ENTER).perform();
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.waitForTableBody = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.tableBody);
    };
    /**
     * @param {?} detail
     * @return {?}
     */
    DataTableComponentPage.prototype.getFirstElementDetail = /**
     * @param {?} detail
     * @return {?}
     */
    function (detail) {
        /** @type {?} */
        var firstNode = element.all(by.css("adf-datatable div[title=\"" + detail + "\"] span")).first();
        return firstNode.getText();
    };
    /**
     * @param {?} detail
     * @return {?}
     */
    DataTableComponentPage.prototype.geCellElementDetail = /**
     * @param {?} detail
     * @return {?}
     */
    function (detail) {
        return element.all(by.css("adf-datatable div[title=\"" + detail + "\"] span"));
    };
    /**
     * @param {?} sortOrder
     * @param {?} column
     * @return {?}
     */
    DataTableComponentPage.prototype.sortByColumn = /**
     * @param {?} sortOrder
     * @param {?} column
     * @return {?}
     */
    function (sortOrder, column) {
        /** @type {?} */
        var locator = by.css("div[data-automation-id=\"auto_id_" + column + "\"]");
        BrowserVisibility.waitUntilElementIsVisible(element(locator));
        return element(locator).getAttribute('class').then((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            if (sortOrder === true) {
                if (!result.includes('sorted-asc')) {
                    if (result.includes('sorted-desc') || result.includes('sortable')) {
                        element(locator).click();
                    }
                }
            }
            else {
                if (result.includes('sorted-asc')) {
                    element(locator).click();
                }
                else if (result.includes('sortable')) {
                    element(locator).click();
                    element(locator).click();
                }
            }
            return Promise.resolve();
        }));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkContentIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).getCellElementByValue(columnName, columnValue);
        BrowserVisibility.waitUntilElementIsVisible(row);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkContentIsNotDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).getCellElementByValue(columnName, columnValue);
        BrowserVisibility.waitUntilElementIsNotOnPage(row);
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.getRow = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var row = this.rootElement.all(by.css("div[title=\"" + columnName + "\"] div[data-automation-id=\"text_" + columnValue + "\"]")).first()
            .element(by.xpath("ancestor::div[contains(@class, 'adf-datatable-row')]"));
        BrowserVisibility.waitUntilElementIsVisible(row);
        return row;
    };
    /**
     * @param {?} position
     * @return {?}
     */
    DataTableComponentPage.prototype.contentInPosition = /**
     * @param {?} position
     * @return {?}
     */
    function (position) {
        BrowserVisibility.waitUntilElementIsVisible(this.contents);
        return this.contents.get(position - 1).getText();
    };
    /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    DataTableComponentPage.prototype.getCellElementByValue = /**
     * @param {?} columnName
     * @param {?} columnValue
     * @return {?}
     */
    function (columnName, columnValue) {
        return this.rootElement.all(by.css("div[title=\"" + columnName + "\"] div[data-automation-id=\"text_" + columnValue + "\"] span")).first();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkSpinnerIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsPresent((/** @type {?} */ (this)).spinner);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkSpinnerIsNotDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsNotOnPage((/** @type {?} */ (this)).spinner);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.tableIsLoaded = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).rootElement);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} column
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkColumnIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @param {?} column
     * @return {THIS}
     */
    function (column) {
        BrowserVisibility.waitUntilElementIsVisible(element(by.css("div[data-automation-id=\"auto_id_entry." + column + "\"]")));
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.getNumberOfColumns = /**
     * @return {?}
     */
    function () {
        return this.allColumns.count();
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.getNumberOfRows = /**
     * @return {?}
     */
    function () {
        return this.list.count();
    };
    /**
     * @param {?} rowNumber
     * @param {?} columnName
     * @return {?}
     */
    DataTableComponentPage.prototype.getCellByRowNumberAndColumnName = /**
     * @param {?} rowNumber
     * @param {?} columnName
     * @return {?}
     */
    function (rowNumber, columnName) {
        return this.list.get(rowNumber).element(by.css("div[title=\"" + columnName + "\"] span"));
    };
    /**
     * @param {?} rowColumn
     * @param {?} rowContent
     * @param {?} columnName
     * @return {?}
     */
    DataTableComponentPage.prototype.getCellByRowContentAndColumn = /**
     * @param {?} rowColumn
     * @param {?} rowContent
     * @param {?} columnName
     * @return {?}
     */
    function (rowColumn, rowContent, columnName) {
        return this.getRow(rowColumn, rowContent).element(by.css("div[title='" + columnName + "']"));
    };
    /**
     * @param {?} content
     * @return {?}
     */
    DataTableComponentPage.prototype.selectRowByContent = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        /** @type {?} */
        var row = this.getCellByContent(content);
        return row.click();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} folderName
     * @return {THIS}
     */
    DataTableComponentPage.prototype.checkRowByContentIsSelected = /**
     * @template THIS
     * @this {THIS}
     * @param {?} folderName
     * @return {THIS}
     */
    function (folderName) {
        /** @type {?} */
        var selectedRow = (/** @type {?} */ (this)).getCellByContent(folderName).element(by.xpath("ancestor::div[contains(@class, 'is-selected')]"));
        BrowserVisibility.waitUntilElementIsVisible(selectedRow);
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?} content
     * @return {?}
     */
    DataTableComponentPage.prototype.getCellByContent = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        /** @type {?} */
        var cell = this.rootElement.element(by.cssContainingText("div[class*='adf-datatable-row'] div[class*='adf-name-location-cell-name']", content));
        BrowserVisibility.waitUntilElementIsVisible(cell);
        return cell;
    };
    /**
     * @param {?} name
     * @return {?}
     */
    DataTableComponentPage.prototype.clickRowByContent = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        /** @type {?} */
        var resultElement = this.rootElement.all(by.css("div[data-automation-id='" + name + "']")).first();
        BrowserVisibility.waitUntilElementIsVisible(resultElement);
        BrowserVisibility.waitUntilElementIsClickable(resultElement);
        resultElement.click();
    };
    /**
     * @return {?}
     */
    DataTableComponentPage.prototype.getCopyContentTooltip = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.copyColumnTooltip);
        return this.copyColumnTooltip.getText();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DataTableComponentPage.prototype.copyContentTooltipIsNotDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsNotPresent((/** @type {?} */ (this)).copyColumnTooltip);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.mouseOverColumn = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var column = (/** @type {?} */ (this)).getCellElementByValue(columnName, columnValue);
        (/** @type {?} */ (this)).mouseOverElement(column);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} elem
     * @return {THIS}
     */
    DataTableComponentPage.prototype.mouseOverElement = /**
     * @template THIS
     * @this {THIS}
     * @param {?} elem
     * @return {THIS}
     */
    function (elem) {
        BrowserVisibility.waitUntilElementIsVisible(elem);
        browser.actions().mouseMove(elem).perform();
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    DataTableComponentPage.prototype.clickColumn = /**
     * @template THIS
     * @this {THIS}
     * @param {?} columnName
     * @param {?} columnValue
     * @return {THIS}
     */
    function (columnName, columnValue) {
        /** @type {?} */
        var column = (/** @type {?} */ (this)).getCellElementByValue(columnName, columnValue);
        (/** @type {?} */ (this)).clickElement(column);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} elem
     * @return {THIS}
     */
    DataTableComponentPage.prototype.clickElement = /**
     * @template THIS
     * @this {THIS}
     * @param {?} elem
     * @return {THIS}
     */
    function (elem) {
        BrowserVisibility.waitUntilElementIsVisible(elem);
        BrowserVisibility.waitUntilElementIsClickable(elem);
        elem.click();
        return (/** @type {?} */ (this));
    };
    return DataTableComponentPage;
}());
export { DataTableComponentPage };
if (false) {
    /** @type {?} */
    DataTableComponentPage.prototype.rootElement;
    /** @type {?} */
    DataTableComponentPage.prototype.list;
    /** @type {?} */
    DataTableComponentPage.prototype.contents;
    /** @type {?} */
    DataTableComponentPage.prototype.tableBody;
    /** @type {?} */
    DataTableComponentPage.prototype.spinner;
    /** @type {?} */
    DataTableComponentPage.prototype.rows;
    /** @type {?} */
    DataTableComponentPage.prototype.allColumns;
    /** @type {?} */
    DataTableComponentPage.prototype.selectedRowNumber;
    /** @type {?} */
    DataTableComponentPage.prototype.allSelectedRows;
    /** @type {?} */
    DataTableComponentPage.prototype.selectAll;
    /** @type {?} */
    DataTableComponentPage.prototype.copyColumnTooltip;
}
//# sourceMappingURL=data:application/json;base64,