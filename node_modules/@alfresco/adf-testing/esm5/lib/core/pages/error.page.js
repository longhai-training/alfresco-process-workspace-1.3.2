/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BrowserVisibility } from '../utils/browser-visibility';
import { element, by } from 'protractor';
var ErrorPage = /** @class */ (function () {
    function ErrorPage() {
        this.errorPageCode = element(by.css('adf-error-content .adf-error-content-code'));
        this.errorPageTitle = element(by.css('adf-error-content .adf-error-content-title'));
        this.errorPageDescription = element(by.css('adf-error-content .adf-error-content-description'));
        this.backButton = element(by.id('adf-return-button'));
        this.secondButton = element(by.id('adf-secondary-button'));
    }
    /**
     * @return {?}
     */
    ErrorPage.prototype.clickBackButton = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.backButton);
        this.backButton.click();
    };
    /**
     * @return {?}
     */
    ErrorPage.prototype.clickSecondButton = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.secondButton);
        this.secondButton.click();
    };
    /**
     * @return {?}
     */
    ErrorPage.prototype.checkErrorCode = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.errorPageCode);
    };
    /**
     * @return {?}
     */
    ErrorPage.prototype.getErrorCode = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.errorPageCode);
        return this.errorPageCode.getText();
    };
    /**
     * @return {?}
     */
    ErrorPage.prototype.getErrorTitle = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.errorPageTitle);
        return this.errorPageTitle.getText();
    };
    /**
     * @return {?}
     */
    ErrorPage.prototype.getErrorDescription = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.errorPageDescription);
        return this.errorPageDescription.getText();
    };
    return ErrorPage;
}());
export { ErrorPage };
if (false) {
    /** @type {?} */
    ErrorPage.prototype.errorPageCode;
    /** @type {?} */
    ErrorPage.prototype.errorPageTitle;
    /** @type {?} */
    ErrorPage.prototype.errorPageDescription;
    /** @type {?} */
    ErrorPage.prototype.backButton;
    /** @type {?} */
    ErrorPage.prototype.secondButton;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3IucGFnZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtdGVzdGluZy8iLCJzb3VyY2VzIjpbImxpYi9jb3JlL3BhZ2VzL2Vycm9yLnBhZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDaEUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFekM7SUFBQTtRQUVJLGtCQUFhLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsMkNBQTJDLENBQUMsQ0FBQyxDQUFDO1FBQzdFLG1CQUFjLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsNENBQTRDLENBQUMsQ0FBQyxDQUFDO1FBQy9FLHlCQUFvQixHQUFHLE9BQU8sQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLGtEQUFrRCxDQUFDLENBQUMsQ0FBQztRQUMzRixlQUFVLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO1FBQ2pELGlCQUFZLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxDQUFDO0lBOEIxRCxDQUFDOzs7O0lBNUJHLG1DQUFlOzs7SUFBZjtRQUNJLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzVCLENBQUM7Ozs7SUFFRCxxQ0FBaUI7OztJQUFqQjtRQUNJLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMvRCxJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQzlCLENBQUM7Ozs7SUFFRCxrQ0FBYzs7O0lBQWQ7UUFDSSxpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7OztJQUVELGdDQUFZOzs7SUFBWjtRQUNJLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNoRSxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDeEMsQ0FBQzs7OztJQUVELGlDQUFhOzs7SUFBYjtRQUNJLGlCQUFpQixDQUFDLHlCQUF5QixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNqRSxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDekMsQ0FBQzs7OztJQUVELHVDQUFtQjs7O0lBQW5CO1FBQ0ksaUJBQWlCLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDdkUsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDL0MsQ0FBQztJQUNMLGdCQUFDO0FBQUQsQ0FBQyxBQXBDRCxJQW9DQzs7OztJQWxDRyxrQ0FBNkU7O0lBQzdFLG1DQUErRTs7SUFDL0UseUNBQTJGOztJQUMzRiwrQkFBaUQ7O0lBQ2pELGlDQUFzRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IEJyb3dzZXJWaXNpYmlsaXR5IH0gZnJvbSAnLi4vdXRpbHMvYnJvd3Nlci12aXNpYmlsaXR5JztcbmltcG9ydCB7IGVsZW1lbnQsIGJ5IH0gZnJvbSAncHJvdHJhY3Rvcic7XG5cbmV4cG9ydCBjbGFzcyBFcnJvclBhZ2Uge1xuXG4gICAgZXJyb3JQYWdlQ29kZSA9IGVsZW1lbnQoYnkuY3NzKCdhZGYtZXJyb3ItY29udGVudCAuYWRmLWVycm9yLWNvbnRlbnQtY29kZScpKTtcbiAgICBlcnJvclBhZ2VUaXRsZSA9IGVsZW1lbnQoYnkuY3NzKCdhZGYtZXJyb3ItY29udGVudCAuYWRmLWVycm9yLWNvbnRlbnQtdGl0bGUnKSk7XG4gICAgZXJyb3JQYWdlRGVzY3JpcHRpb24gPSBlbGVtZW50KGJ5LmNzcygnYWRmLWVycm9yLWNvbnRlbnQgLmFkZi1lcnJvci1jb250ZW50LWRlc2NyaXB0aW9uJykpO1xuICAgIGJhY2tCdXR0b24gPSBlbGVtZW50KGJ5LmlkKCdhZGYtcmV0dXJuLWJ1dHRvbicpKTtcbiAgICBzZWNvbmRCdXR0b24gPSBlbGVtZW50KGJ5LmlkKCdhZGYtc2Vjb25kYXJ5LWJ1dHRvbicpKTtcblxuICAgIGNsaWNrQmFja0J1dHRvbigpIHtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzVmlzaWJsZSh0aGlzLmJhY2tCdXR0b24pO1xuICAgICAgICB0aGlzLmJhY2tCdXR0b24uY2xpY2soKTtcbiAgICB9XG5cbiAgICBjbGlja1NlY29uZEJ1dHRvbigpIHtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzVmlzaWJsZSh0aGlzLnNlY29uZEJ1dHRvbik7XG4gICAgICAgIHRoaXMuc2Vjb25kQnV0dG9uLmNsaWNrKCk7XG4gICAgfVxuXG4gICAgY2hlY2tFcnJvckNvZGUoKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5lcnJvclBhZ2VDb2RlKTtcbiAgICB9XG5cbiAgICBnZXRFcnJvckNvZGUoKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5lcnJvclBhZ2VDb2RlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3JQYWdlQ29kZS5nZXRUZXh0KCk7XG4gICAgfVxuXG4gICAgZ2V0RXJyb3JUaXRsZSgpIHtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzVmlzaWJsZSh0aGlzLmVycm9yUGFnZVRpdGxlKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3JQYWdlVGl0bGUuZ2V0VGV4dCgpO1xuICAgIH1cblxuICAgIGdldEVycm9yRGVzY3JpcHRpb24oKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5lcnJvclBhZ2VEZXNjcmlwdGlvbik7XG4gICAgICAgIHJldHVybiB0aGlzLmVycm9yUGFnZURlc2NyaXB0aW9uLmdldFRleHQoKTtcbiAgICB9XG59XG4iXX0=