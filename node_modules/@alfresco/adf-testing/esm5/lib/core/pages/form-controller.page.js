/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { by } from 'protractor';
import { BrowserVisibility } from '../utils/browser-visibility';
var FormControllersPage = /** @class */ (function () {
    function FormControllersPage() {
    }
    /**
     * @param {?} toggle
     * @return {?}
     */
    FormControllersPage.prototype.enableToggle = /**
     * @param {?} toggle
     * @return {?}
     */
    function (toggle) {
        BrowserVisibility.waitUntilElementIsVisible(toggle);
        toggle.getAttribute('class').then((/**
         * @param {?} check
         * @return {?}
         */
        function (check) {
            if (check.indexOf('mat-checked') < 0) {
                BrowserVisibility.waitUntilElementIsClickable(toggle.all(by.css('div')).first());
                toggle.all(by.css('div')).first().click();
            }
        }));
    };
    /**
     * @param {?} toggle
     * @return {?}
     */
    FormControllersPage.prototype.disableToggle = /**
     * @param {?} toggle
     * @return {?}
     */
    function (toggle) {
        BrowserVisibility.waitUntilElementIsVisible(toggle);
        toggle.getAttribute('class').then((/**
         * @param {?} check
         * @return {?}
         */
        function (check) {
            if (check.indexOf('mat-checked') >= 0) {
                BrowserVisibility.waitUntilElementIsClickable(toggle.all(by.css('div')).first());
                toggle.all(by.css('div')).first().click();
            }
        }));
    };
    return FormControllersPage;
}());
export { FormControllersPage };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1jb250cm9sbGVyLnBhZ2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYWxmcmVzY28vYWRmLXRlc3RpbmcvIiwic291cmNlcyI6WyJsaWIvY29yZS9wYWdlcy9mb3JtLWNvbnRyb2xsZXIucGFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlCQSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRWhFO0lBQUE7SUFxQkEsQ0FBQzs7Ozs7SUFuQkcsMENBQVk7Ozs7SUFBWixVQUFhLE1BQU07UUFDZixpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwRCxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUk7Ozs7UUFBQyxVQUFDLEtBQUs7WUFDcEMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDbEMsaUJBQWlCLENBQUMsMkJBQTJCLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztnQkFDakYsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDN0M7UUFDTCxDQUFDLEVBQUMsQ0FBQztJQUNQLENBQUM7Ozs7O0lBRUQsMkNBQWE7Ozs7SUFBYixVQUFjLE1BQU07UUFDaEIsaUJBQWlCLENBQUMseUJBQXlCLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEQsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJOzs7O1FBQUMsVUFBQyxLQUFLO1lBQ3BDLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ25DLGlCQUFpQixDQUFDLDJCQUEyQixDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7Z0JBQ2pGLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO2FBQzdDO1FBQ0wsQ0FBQyxFQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0wsMEJBQUM7QUFBRCxDQUFDLEFBckJELElBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgYnkgfSBmcm9tICdwcm90cmFjdG9yJztcbmltcG9ydCB7IEJyb3dzZXJWaXNpYmlsaXR5IH0gZnJvbSAnLi4vdXRpbHMvYnJvd3Nlci12aXNpYmlsaXR5JztcblxuZXhwb3J0IGNsYXNzIEZvcm1Db250cm9sbGVyc1BhZ2Uge1xuXG4gICAgZW5hYmxlVG9nZ2xlKHRvZ2dsZSkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRvZ2dsZSk7XG4gICAgICAgIHRvZ2dsZS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykudGhlbigoY2hlY2spID0+IHtcbiAgICAgICAgICAgIGlmIChjaGVjay5pbmRleE9mKCdtYXQtY2hlY2tlZCcpIDwgMCkge1xuICAgICAgICAgICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc0NsaWNrYWJsZSh0b2dnbGUuYWxsKGJ5LmNzcygnZGl2JykpLmZpcnN0KCkpO1xuICAgICAgICAgICAgICAgIHRvZ2dsZS5hbGwoYnkuY3NzKCdkaXYnKSkuZmlyc3QoKS5jbGljaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBkaXNhYmxlVG9nZ2xlKHRvZ2dsZSkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRvZ2dsZSk7XG4gICAgICAgIHRvZ2dsZS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykudGhlbigoY2hlY2spID0+IHtcbiAgICAgICAgICAgIGlmIChjaGVjay5pbmRleE9mKCdtYXQtY2hlY2tlZCcpID49IDApIHtcbiAgICAgICAgICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNDbGlja2FibGUodG9nZ2xlLmFsbChieS5jc3MoJ2RpdicpKS5maXJzdCgpKTtcbiAgICAgICAgICAgICAgICB0b2dnbGUuYWxsKGJ5LmNzcygnZGl2JykpLmZpcnN0KCkuY2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19