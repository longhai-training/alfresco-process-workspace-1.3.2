/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { by, element, protractor } from 'protractor';
import { BrowserVisibility } from '../../../core/utils/browser-visibility';
var EditProcessFilterDialogPage = /** @class */ (function () {
    function EditProcessFilterDialogPage() {
        this.componentElement = element(by.css('adf-cloud-process-filter-dialog-cloud'));
        this.title = element(by.id('adf-process-filter-dialog-title'));
        this.filterNameInput = element(by.id('adf-filter-name-id'));
        this.saveButtonLocator = by.id('adf-save-button-id');
        this.cancelButtonLocator = by.id('adf-cancel-button-id');
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    EditProcessFilterDialogPage.prototype.clickOnSaveButton = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        /** @type {?} */
        var saveButton = (/** @type {?} */ (this)).componentElement.element((/** @type {?} */ (this)).saveButtonLocator);
        BrowserVisibility.waitUntilElementIsVisible(saveButton);
        saveButton.click();
        BrowserVisibility.waitUntilElementIsNotVisible((/** @type {?} */ (this)).componentElement);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    EditProcessFilterDialogPage.prototype.checkSaveButtonIsEnabled = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.componentElement.element(this.saveButtonLocator));
        return this.componentElement.element(this.saveButtonLocator).isEnabled();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    EditProcessFilterDialogPage.prototype.clickOnCancelButton = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        /** @type {?} */
        var cancelButton = (/** @type {?} */ (this)).componentElement.element((/** @type {?} */ (this)).cancelButtonLocator);
        BrowserVisibility.waitUntilElementIsVisible(cancelButton);
        cancelButton.click();
        BrowserVisibility.waitUntilElementIsNotVisible((/** @type {?} */ (this)).componentElement);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    EditProcessFilterDialogPage.prototype.checkCancelButtonIsEnabled = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.componentElement.element(this.cancelButtonLocator));
        return this.componentElement.element(this.cancelButtonLocator).isEnabled();
    };
    /**
     * @return {?}
     */
    EditProcessFilterDialogPage.prototype.getFilterName = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.filterNameInput);
        return this.filterNameInput.getAttribute('value');
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} filterName
     * @return {THIS}
     */
    EditProcessFilterDialogPage.prototype.setFilterName = /**
     * @template THIS
     * @this {THIS}
     * @param {?} filterName
     * @return {THIS}
     */
    function (filterName) {
        (/** @type {?} */ (this)).clearFilterName();
        (/** @type {?} */ (this)).filterNameInput.sendKeys(filterName);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    EditProcessFilterDialogPage.prototype.clearFilterName = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        var _this = this;
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).filterNameInput);
        (/** @type {?} */ (this)).filterNameInput.click();
        (/** @type {?} */ (this)).filterNameInput.getAttribute('value').then((/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            for (var i = value.length; i >= 0; i--) {
                (/** @type {?} */ (_this)).filterNameInput.sendKeys(protractor.Key.BACK_SPACE);
            }
        }));
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    EditProcessFilterDialogPage.prototype.getTitle = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.title);
        return this.title.getText();
    };
    return EditProcessFilterDialogPage;
}());
export { EditProcessFilterDialogPage };
if (false) {
    /** @type {?} */
    EditProcessFilterDialogPage.prototype.componentElement;
    /** @type {?} */
    EditProcessFilterDialogPage.prototype.title;
    /** @type {?} */
    EditProcessFilterDialogPage.prototype.filterNameInput;
    /** @type {?} */
    EditProcessFilterDialogPage.prototype.saveButtonLocator;
    /** @type {?} */
    EditProcessFilterDialogPage.prototype.cancelButtonLocator;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdC1wcm9jZXNzLWZpbHRlci1kaWFsb2cucGFnZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BhbGZyZXNjby9hZGYtdGVzdGluZy8iLCJzb3VyY2VzIjpbImxpYi9wcm9jZXNzLXNlcnZpY2VzLWNsb3VkL3BhZ2VzL2RpYWxvZy9lZGl0LXByb2Nlc3MtZmlsdGVyLWRpYWxvZy5wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUNyRCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUUzRTtJQUFBO1FBRUkscUJBQWdCLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsdUNBQXVDLENBQUMsQ0FBQyxDQUFDO1FBQzVFLFVBQUssR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUM7UUFDMUQsb0JBQWUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7UUFDdkQsc0JBQWlCLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ2hELHdCQUFtQixHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQXVEeEQsQ0FBQzs7Ozs7O0lBckRHLHVEQUFpQjs7Ozs7SUFBakI7O1lBQ1UsVUFBVSxHQUFHLG1CQUFBLElBQUksRUFBQSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxpQkFBaUIsQ0FBQztRQUN4RSxpQkFBaUIsQ0FBQyx5QkFBeUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN4RCxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDbkIsaUJBQWlCLENBQUMsNEJBQTRCLENB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QUEwRDs7SUFDMUQsc0RBQXVEOztJQUN2RCx3REFBZ0Q7O0lBQ2hELDBEQUFvRCIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEFsZnJlc2NvIFNvZnR3YXJlLCBMdGQuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmltcG9ydCB7IGJ5LCBlbGVtZW50LCBwcm90cmFjdG9yIH0gZnJvbSAncHJvdHJhY3Rvcic7XG5pbXBvcnQgeyBCcm93c2VyVmlzaWJpbGl0eSB9IGZyb20gJy4uLy4uLy4uL2NvcmUvdXRpbHMvYnJvd3Nlci12aXNpYmlsaXR5JztcblxuZXhwb3J0IGNsYXNzIEVkaXRQcm9jZXNzRmlsdGVyRGlhbG9nUGFnZSB7XG5cbiAgICBjb21wb25lbnRFbGVtZW50ID0gZWxlbWVudChieS5jc3MoJ2FkZi1jbG91ZC1wcm9jZXNzLWZpbHRlci1kaWFsb2ctY2xvdWQnKSk7XG4gICAgdGl0bGUgPSBlbGVtZW50KGJ5LmlkKCdhZGYtcHJvY2Vzcy1maWx0ZXItZGlhbG9nLXRpdGxlJykpO1xuICAgIGZpbHRlck5hbWVJbnB1dCA9IGVsZW1lbnQoYnkuaWQoJ2FkZi1maWx0ZXItbmFtZS1pZCcpKTtcbiAgICBzYXZlQnV0dG9uTG9jYXRvciA9IGJ5LmlkKCdhZGYtc2F2ZS1idXR0b24taWQnKTtcbiAgICBjYW5jZWxCdXR0b25Mb2NhdG9yID0gYnkuaWQoJ2FkZi1jYW5jZWwtYnV0dG9uLWlkJyk7XG5cbiAgICBjbGlja09uU2F2ZUJ1dHRvbigpIHtcbiAgICAgICAgY29uc3Qgc2F2ZUJ1dHRvbiA9IHRoaXMuY29tcG9uZW50RWxlbWVudC5lbGVtZW50KHRoaXMuc2F2ZUJ1dHRvbkxvY2F0b3IpO1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHNhdmVCdXR0b24pO1xuICAgICAgICBzYXZlQnV0dG9uLmNsaWNrKCk7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc05vdFZpc2libGUodGhpcy5jb21wb25lbnRFbGVtZW50KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgY2hlY2tTYXZlQnV0dG9uSXNFbmFibGVkKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMuY29tcG9uZW50RWxlbWVudC5lbGVtZW50KHRoaXMuc2F2ZUJ1dHRvbkxvY2F0b3IpKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50RWxlbWVudC5lbGVtZW50KHRoaXMuc2F2ZUJ1dHRvbkxvY2F0b3IpLmlzRW5hYmxlZCgpO1xuICAgIH1cblxuICAgIGNsaWNrT25DYW5jZWxCdXR0b24oKSB7XG4gICAgICAgIGNvbnN0IGNhbmNlbEJ1dHRvbiA9IHRoaXMuY29tcG9uZW50RWxlbWVudC5lbGVtZW50KHRoaXMuY2FuY2VsQnV0dG9uTG9jYXRvcik7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUoY2FuY2VsQnV0dG9uKTtcbiAgICAgICAgY2FuY2VsQnV0dG9uLmNsaWNrKCk7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc05vdFZpc2libGUodGhpcy5jb21wb25lbnRFbGVtZW50KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgY2hlY2tDYW5jZWxCdXR0b25Jc0VuYWJsZWQoKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5jb21wb25lbnRFbGVtZW50LmVsZW1lbnQodGhpcy5jYW5jZWxCdXR0b25Mb2NhdG9yKSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBvbmVudEVsZW1lbnQuZWxlbWVudCh0aGlzLmNhbmNlbEJ1dHRvbkxvY2F0b3IpLmlzRW5hYmxlZCgpO1xuICAgIH1cblxuICAgIGdldEZpbHRlck5hbWUoKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5maWx0ZXJOYW1lSW5wdXQpO1xuICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXJOYW1lSW5wdXQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpO1xuICAgIH1cblxuICAgIHNldEZpbHRlck5hbWUoZmlsdGVyTmFtZSkge1xuICAgICAgICB0aGlzLmNsZWFyRmlsdGVyTmFtZSgpO1xuICAgICAgICB0aGlzLmZpbHRlck5hbWVJbnB1dC5zZW5kS2V5cyhmaWx0ZXJOYW1lKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgY2xlYXJGaWx0ZXJOYW1lKCkge1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMuZmlsdGVyTmFtZUlucHV0KTtcbiAgICAgICAgdGhpcy5maWx0ZXJOYW1lSW5wdXQuY2xpY2soKTtcbiAgICAgICAgdGhpcy5maWx0ZXJOYW1lSW5wdXQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpLnRoZW4oKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gdmFsdWUubGVuZ3RoOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyTmFtZUlucHV0LnNlbmRLZXlzKHByb3RyYWN0b3IuS2V5LkJBQ0tfU1BBQ0UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgZ2V0VGl0bGUoKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy50aXRsZSk7XG4gICAgICAgIHJldHVybiB0aGlzLnRpdGxlLmdldFRleHQoKTtcbiAgICB9XG5cbn1cbiJdfQ==