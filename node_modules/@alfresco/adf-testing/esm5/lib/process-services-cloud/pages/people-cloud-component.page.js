/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { browser, by, element, protractor } from 'protractor';
import { BrowserVisibility } from '../../core/utils/browser-visibility';
var PeopleCloudComponentPage = /** @class */ (function () {
    function PeopleCloudComponentPage() {
        this.peopleCloudSearch = element(by.css('input[data-automation-id="adf-people-cloud-search-input"]'));
        this.assigneeField = element(by.css('input[data-automation-id="adf-people-cloud-search-input"]'));
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.searchAssigneeAndSelect = /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    function (name) {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).peopleCloudSearch);
        (/** @type {?} */ (this)).peopleCloudSearch.clear();
        (/** @type {?} */ (this)).peopleCloudSearch.sendKeys(name);
        (/** @type {?} */ (this)).selectAssigneeFromList(name);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.searchAssignee = /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    function (name) {
        var _this = this;
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).peopleCloudSearch);
        BrowserVisibility.waitUntilElementIsClickable((/** @type {?} */ (this)).peopleCloudSearch);
        browser.sleep(1000);
        (/** @type {?} */ (this)).peopleCloudSearch.clear().then((/**
         * @return {?}
         */
        function () {
            for (var i = 0; i < name.length; i++) {
                (/** @type {?} */ (_this)).peopleCloudSearch.sendKeys(name[i]);
            }
            (/** @type {?} */ (_this)).peopleCloudSearch.sendKeys(protractor.Key.BACK_SPACE);
            (/** @type {?} */ (_this)).peopleCloudSearch.sendKeys(name[name.length - 1]);
        }));
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.searchAssigneeToExisting = /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    function (name) {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).peopleCloudSearch);
        for (var i = 0; i < name.length; i++) {
            (/** @type {?} */ (this)).peopleCloudSearch.sendKeys(name[i]);
        }
        (/** @type {?} */ (this)).peopleCloudSearch.sendKeys(protractor.Key.BACK_SPACE);
        (/** @type {?} */ (this)).peopleCloudSearch.sendKeys(name[name.length - 1]);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.selectAssigneeFromList = /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    function (name) {
        /** @type {?} */
        var assigneeRow = element(by.cssContainingText('mat-option span.adf-people-label-name', name));
        BrowserVisibility.waitUntilElementIsVisible(assigneeRow);
        browser.sleep(1000);
        assigneeRow.click();
        BrowserVisibility.waitUntilElementIsNotVisible(assigneeRow);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    PeopleCloudComponentPage.prototype.getAssignee = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.peopleCloudSearch);
        return this.peopleCloudSearch.getAttribute('value');
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.checkUserIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    function (name) {
        /** @type {?} */
        var assigneeRow = element(by.cssContainingText('mat-option span.adf-people-label-name', name));
        BrowserVisibility.waitUntilElementIsVisible(assigneeRow);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.checkUserIsNotDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @param {?} name
     * @return {THIS}
     */
    function (name) {
        /** @type {?} */
        var assigneeRow = element(by.cssContainingText('mat-option span.adf-people-label-name', name));
        BrowserVisibility.waitUntilElementIsNotVisible(assigneeRow);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} person
     * @return {THIS}
     */
    PeopleCloudComponentPage.prototype.checkSelectedPeople = /**
     * @template THIS
     * @this {THIS}
     * @param {?} person
     * @return {THIS}
     */
    function (person) {
        BrowserVisibility.waitUntilElementIsVisible(element(by.cssContainingText('mat-chip-list mat-chip', person)));
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    PeopleCloudComponentPage.prototype.getAssigneeFieldContent = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.assigneeField);
        browser.sleep(1000);
        return this.assigneeField.getAttribute('value');
    };
    return PeopleCloudComponentPage;
}());
export { PeopleCloudComponentPage };
if (false) {
    /** @type {?} */
    PeopleCloudComponentPage.prototype.peopleCloudSearch;
    /** @type {?} */
    PeopleCloudComponentPage.prototype.assigneeField;
}
//# sourceMappingURL=data:application/json;base64,