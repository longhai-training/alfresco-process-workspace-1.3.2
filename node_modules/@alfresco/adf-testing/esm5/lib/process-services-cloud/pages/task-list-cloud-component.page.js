/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BrowserVisibility } from '../../core/utils/browser-visibility';
import { DataTableComponentPage } from '../../core/pages/data-table-component.page';
import { element, by } from 'protractor';
/** @type {?} */
var column = {
    id: 'Id',
    name: 'Name',
    processInstanceId: 'ProcessInstanceId',
    processDefinitionId: 'ProcessDefinitionId',
    assignee: 'Assignee',
    parentTaskId: 'ParentTaskId',
    priority: 'Priority',
    standAlone: 'StandAlone',
    owner: 'Owner'
};
var TaskListCloudComponentPage = /** @class */ (function () {
    function TaskListCloudComponentPage() {
        this.taskList = element(by.css('adf-cloud-task-list'));
        this.noTasksFound = element.all(by.css("div[class='adf-empty-content__title']")).first();
        this.dataTable = new DataTableComponentPage(this.taskList);
    }
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getDataTable = /**
     * @return {?}
     */
    function () {
        return this.dataTable;
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.clickCheckbox = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.clickCheckbox(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkRowIsNotChecked = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkRowIsNotChecked(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkRowIsChecked = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkRowIsChecked(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getRowsWithSameName = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.getRowsWithSameColumnValues(column.name, taskName);
    };
    /**
     * @param {?} taskId
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getRowsWithSameId = /**
     * @param {?} taskId
     * @return {?}
     */
    function (taskId) {
        return this.dataTable.getRowsWithSameColumnValues('Id', taskId);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkRowIsSelected = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkRowIsSelected(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkRowIsNotSelected = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkRowIsNotSelected(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.selectRowWithKeyboard = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.selectRowWithKeyboard(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.selectRow = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.selectRow(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getRow = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.getCellElementByValue(column.name, taskName);
    };
    /**
     * @param {?} taskId
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkContentIsDisplayedById = /**
     * @param {?} taskId
     * @return {?}
     */
    function (taskId) {
        return this.dataTable.checkContentIsDisplayed(column.id, taskId);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkContentIsDisplayedByProcessInstanceId = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkContentIsDisplayed(column.processInstanceId, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkContentIsDisplayedByName = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkContentIsDisplayed(column.name, taskName);
    };
    /**
     * @param {?} taskName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.checkContentIsNotDisplayedByName = /**
     * @param {?} taskName
     * @return {?}
     */
    function (taskName) {
        return this.dataTable.checkContentIsNotDisplayed(column.name, taskName);
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    TaskListCloudComponentPage.prototype.checkTaskListIsLoaded = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).taskList);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getNoTasksFoundMessage = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.noTasksFound);
        return this.noTasksFound.getText();
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsNameColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.name);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByIdColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.id);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByProcessDefIdColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.processDefinitionId);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByProcessInstanceIdColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.processInstanceId);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByAssigneeColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.assignee);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByParentTaskIdColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.parentTaskId);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByPriorityColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.priority);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByStandAloneColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.standAlone);
    };
    /**
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getAllRowsByOwnerColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(column.owner);
    };
    /**
     * @param {?} rowName
     * @return {?}
     */
    TaskListCloudComponentPage.prototype.getIdCellValue = /**
     * @param {?} rowName
     * @return {?}
     */
    function (rowName) {
        /** @type {?} */
        var locator = new DataTableComponentPage().getCellByRowContentAndColumn(column.name, rowName, column.id);
        BrowserVisibility.waitUntilElementIsVisible(locator);
        return locator.getText();
    };
    return TaskListCloudComponentPage;
}());
export { TaskListCloudComponentPage };
if (false) {
    /** @type {?} */
    TaskListCloudComponentPage.prototype.taskList;
    /** @type {?} */
    TaskListCloudComponentPage.prototype.noTasksFound;
    /** @type {?} */
    TaskListCloudComponentPage.prototype.dataTable;
}
//# sourceMappingURL=data:application/json;base64,