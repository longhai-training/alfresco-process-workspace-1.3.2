/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BrowserVisibility } from '../../core/utils/browser-visibility';
import { DataTableComponentPage } from '../../core/pages/data-table-component.page';
import { element, by } from 'protractor';
var ProcessListCloudComponentPage = /** @class */ (function () {
    function ProcessListCloudComponentPage() {
        this.columns = {
            id: 'Id',
            name: 'Name'
        };
        this.processList = element(by.css('adf-cloud-process-list'));
        this.noProcessFound = element.all(by.css("div[class='adf-empty-content__title']")).first();
        this.dataTable = new DataTableComponentPage(this.processList);
    }
    /**
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.getDataTable = /**
     * @return {?}
     */
    function () {
        return this.dataTable;
    };
    /**
     * @param {?} processName
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.selectRow = /**
     * @param {?} processName
     * @return {?}
     */
    function (processName) {
        return this.dataTable.selectRow(this.columns.name, processName);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.selectRowById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.selectRow(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkRowIsSelectedById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.checkRowIsSelected(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkRowIsNotSelectedById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.checkRowIsNotSelected(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkRowIsCheckedById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.checkRowIsChecked(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkRowIsNotCheckedById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.checkRowIsNotChecked(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkCheckboxById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.clickCheckbox(this.columns.id, processId);
    };
    /**
     * @param {?} processName
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkContentIsDisplayedByName = /**
     * @param {?} processName
     * @return {?}
     */
    function (processName) {
        return this.dataTable.checkContentIsDisplayed(this.columns.name, processName);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkContentIsDisplayedById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.checkContentIsDisplayed(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.checkContentIsNotDisplayedById = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.checkContentIsNotDisplayed(this.columns.id, processId);
    };
    /**
     * @param {?} processId
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.selectRowWithKeyboard = /**
     * @param {?} processId
     * @return {?}
     */
    function (processId) {
        return this.dataTable.selectRowWithKeyboard(this.columns.id, processId);
    };
    /**
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.getAllRowsNameColumn = /**
     * @return {?}
     */
    function () {
        return this.dataTable.getAllRowsColumnValues(this.columns.name);
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    ProcessListCloudComponentPage.prototype.checkProcessListIsLoaded = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).processList);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.getNoProcessFoundMessage = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.noProcessFound);
        return this.noProcessFound.getText();
    };
    /**
     * @param {?} column
     * @return {?}
     */
    ProcessListCloudComponentPage.prototype.getAllRowsByColumn = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return this.dataTable.getAllRowsColumnValues(column);
    };
    return ProcessListCloudComponentPage;
}());
export { ProcessListCloudComponentPage };
if (false) {
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.columns;
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.processList;
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.noProcessFound;
    /** @type {?} */
    ProcessListCloudComponentPage.prototype.dataTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvY2Vzcy1saXN0LWNsb3VkLWNvbXBvbmVudC5wYWdlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi10ZXN0aW5nLyIsInNvdXJjZXMiOlsibGliL3Byb2Nlc3Mtc2VydmljZXMtY2xvdWQvcGFnZXMvcHJvY2Vzcy1saXN0LWNsb3VkLWNvbXBvbmVudC5wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3hFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXpDO0lBQUE7UUFFSSxZQUFPLEdBQUc7WUFDTixFQUFFLEVBQUUsSUFBSTtZQUNSLElBQUksRUFBRSxNQUFNO1NBQ2YsQ0FBQztRQUVGLGdCQUFXLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO1FBQ3hELG1CQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLHVDQUF1QyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUV0RixjQUFTLEdBQUcsSUFBSSxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFvRTdELENBQUM7Ozs7SUFsRUcsb0RBQVk7OztJQUFaO1FBQ0ksT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7Ozs7O0lBRUQsaURBQVM7Ozs7SUFBVCxVQUFVLFdBQVc7UUFDakIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNwRSxDQUFDOzs7OztJQUVELHFEQUFhOzs7O0lBQWIsVUFBYyxT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QUVMLG9DQUFDO0FBQUQsQ0FBQyxBQTlFRCxJQThFQzs7OztJQTVFRyxnREFHRTs7SUFFRixvREFBd0Q7O0lBQ3hELHVEQUFzRjs7SUFFdEYsa0RBQXlEIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgQWxmcmVzY28gU29mdHdhcmUsIEx0ZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuaW1wb3J0IHsgQnJvd3NlclZpc2liaWxpdHkgfSBmcm9tICcuLi8uLi9jb3JlL3V0aWxzL2Jyb3dzZXItdmlzaWJpbGl0eSc7XG5pbXBvcnQgeyBEYXRhVGFibGVDb21wb25lbnRQYWdlIH0gZnJvbSAnLi4vLi4vY29yZS9wYWdlcy9kYXRhLXRhYmxlLWNvbXBvbmVudC5wYWdlJztcbmltcG9ydCB7IGVsZW1lbnQsIGJ5IH0gZnJvbSAncHJvdHJhY3Rvcic7XG5cbmV4cG9ydCBjbGFzcyBQcm9jZXNzTGlzdENsb3VkQ29tcG9uZW50UGFnZSB7XG5cbiAgICBjb2x1bW5zID0ge1xuICAgICAgICBpZDogJ0lkJyxcbiAgICAgICAgbmFtZTogJ05hbWUnXG4gICAgfTtcblxuICAgIHByb2Nlc3NMaXN0ID0gZWxlbWVudChieS5jc3MoJ2FkZi1jbG91ZC1wcm9jZXNzLWxpc3QnKSk7XG4gICAgbm9Qcm9jZXNzRm91bmQgPSBlbGVtZW50LmFsbChieS5jc3MoXCJkaXZbY2xhc3M9J2FkZi1lbXB0eS1jb250ZW50X190aXRsZSddXCIpKS5maXJzdCgpO1xuXG4gICAgZGF0YVRhYmxlID0gbmV3IERhdGFUYWJsZUNvbXBvbmVudFBhZ2UodGhpcy5wcm9jZXNzTGlzdCk7XG5cbiAgICBnZXREYXRhVGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZTtcbiAgICB9XG5cbiAgICBzZWxlY3RSb3cocHJvY2Vzc05hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLnNlbGVjdFJvdyh0aGlzLmNvbHVtbnMubmFtZSwgcHJvY2Vzc05hbWUpO1xuICAgIH1cblxuICAgIHNlbGVjdFJvd0J5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5zZWxlY3RSb3codGhpcy5jb2x1bW5zLmlkLCBwcm9jZXNzSWQpO1xuICAgIH1cblxuICAgIGNoZWNrUm93SXNTZWxlY3RlZEJ5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jaGVja1Jvd0lzU2VsZWN0ZWQodGhpcy5jb2x1bW5zLmlkLCBwcm9jZXNzSWQpO1xuICAgIH1cblxuICAgIGNoZWNrUm93SXNOb3RTZWxlY3RlZEJ5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jaGVja1Jvd0lzTm90U2VsZWN0ZWQodGhpcy5jb2x1bW5zLmlkLCBwcm9jZXNzSWQpO1xuICAgIH1cblxuICAgIGNoZWNrUm93SXNDaGVja2VkQnlJZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmNoZWNrUm93SXNDaGVja2VkKHRoaXMuY29sdW1ucy5pZCwgcHJvY2Vzc0lkKTtcbiAgICB9XG5cbiAgICBjaGVja1Jvd0lzTm90Q2hlY2tlZEJ5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jaGVja1Jvd0lzTm90Q2hlY2tlZCh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgY2hlY2tDaGVja2JveEJ5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jbGlja0NoZWNrYm94KHRoaXMuY29sdW1ucy5pZCwgcHJvY2Vzc0lkKTtcbiAgICB9XG5cbiAgICBjaGVja0NvbnRlbnRJc0Rpc3BsYXllZEJ5TmFtZShwcm9jZXNzTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUuY2hlY2tDb250ZW50SXNEaXNwbGF5ZWQodGhpcy5jb2x1bW5zLm5hbWUsIHByb2Nlc3NOYW1lKTtcbiAgICB9XG5cbiAgICBjaGVja0NvbnRlbnRJc0Rpc3BsYXllZEJ5SWQocHJvY2Vzc0lkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5jaGVja0NvbnRlbnRJc0Rpc3BsYXllZCh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgY2hlY2tDb250ZW50SXNOb3REaXNwbGF5ZWRCeUlkKHByb2Nlc3NJZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVGFibGUuY2hlY2tDb250ZW50SXNOb3REaXNwbGF5ZWQodGhpcy5jb2x1bW5zLmlkLCBwcm9jZXNzSWQpO1xuICAgIH1cblxuICAgIHNlbGVjdFJvd1dpdGhLZXlib2FyZChwcm9jZXNzSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLnNlbGVjdFJvd1dpdGhLZXlib2FyZCh0aGlzLmNvbHVtbnMuaWQsIHByb2Nlc3NJZCk7XG4gICAgfVxuXG4gICAgZ2V0QWxsUm93c05hbWVDb2x1bW4oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5nZXRBbGxSb3dzQ29sdW1uVmFsdWVzKHRoaXMuY29sdW1ucy5uYW1lKTtcbiAgICB9XG5cbiAgICBjaGVja1Byb2Nlc3NMaXN0SXNMb2FkZWQoKSB7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5wcm9jZXNzTGlzdCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIGdldE5vUHJvY2Vzc0ZvdW5kTWVzc2FnZSgpIHtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzVmlzaWJsZSh0aGlzLm5vUHJvY2Vzc0ZvdW5kKTtcbiAgICAgICAgcmV0dXJuIHRoaXMubm9Qcm9jZXNzRm91bmQuZ2V0VGV4dCgpO1xuICAgIH1cblxuICAgIGdldEFsbFJvd3NCeUNvbHVtbihjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmdldEFsbFJvd3NDb2x1bW5WYWx1ZXMoY29sdW1uKTtcbiAgICB9XG5cbn1cbiJdfQ==