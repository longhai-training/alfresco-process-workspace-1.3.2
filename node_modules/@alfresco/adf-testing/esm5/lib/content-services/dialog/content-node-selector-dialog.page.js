/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { by, element } from 'protractor';
import { DocumentListPage } from '../pages/document-list.page';
import { BrowserVisibility } from '../../core/utils/browser-visibility';
var ContentNodeSelectorDialogPage = /** @class */ (function () {
    function ContentNodeSelectorDialogPage() {
        this.dialog = element(by.css("adf-content-node-selector"));
        this.header = this.dialog.element(by.css("header[data-automation-id='content-node-selector-title']"));
        this.searchInputElement = this.dialog.element(by.css("input[data-automation-id='content-node-selector-search-input']"));
        this.searchLabel = this.searchInputElement.element(by.xpath("ancestor::div[@class='mat-form-field-infix']/span/label"));
        this.siteListDropdown = this.dialog.element(by.css("mat-select[data-automation-id='site-my-files-option']"));
        this.cancelButton = element(by.css("button[data-automation-id='content-node-selector-actions-cancel']"));
        this.moveCopyButton = element(by.css("button[data-automation-id='content-node-selector-actions-choose']"));
        this.contentList = new DocumentListPage(this.dialog);
    }
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    ContentNodeSelectorDialogPage.prototype.checkDialogIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).dialog);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    ContentNodeSelectorDialogPage.prototype.checkDialogIsNotDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsNotOnPage((/** @type {?} */ (this)).dialog);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.getDialogHeaderText = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.header);
        return this.header.getText();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    ContentNodeSelectorDialogPage.prototype.checkSearchInputIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).searchInputElement);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.getSearchLabel = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.searchLabel);
        return this.searchLabel.getText();
    };
    /**
     * @param {?} siteName
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.checkSelectedSiteIsDisplayed = /**
     * @param {?} siteName
     * @return {?}
     */
    function (siteName) {
        BrowserVisibility.waitUntilElementIsVisible(this.siteListDropdown.element(by.cssContainingText('.mat-select-value-text span', siteName)));
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.checkCancelButtonIsDisplayed = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.cancelButton);
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.clickCancelButton = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.cancelButton);
        return this.cancelButton.click();
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.checkMoveCopyButtonIsDisplayed = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.moveCopyButton);
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.getMoveCopyButtonText = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.moveCopyButton);
        return this.moveCopyButton.getText();
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.clickMoveCopyButton = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.moveCopyButton);
        return this.moveCopyButton.click();
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.numberOfResultsDisplayed = /**
     * @return {?}
     */
    function () {
        return this.contentList.dataTablePage().numberOfRows();
    };
    /**
     * @param {?} text
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.typeIntoNodeSelectorSearchField = /**
     * @param {?} text
     * @return {?}
     */
    function (text) {
        BrowserVisibility.waitUntilElementIsVisible(this.searchInputElement);
        this.searchInputElement.sendKeys(text);
    };
    /**
     * @param {?} name
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.clickContentNodeSelectorResult = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        this.contentList.dataTablePage().clickRowByContent(name);
    };
    /**
     * @return {?}
     */
    ContentNodeSelectorDialogPage.prototype.contentListPage = /**
     * @return {?}
     */
    function () {
        return this.contentList;
    };
    return ContentNodeSelectorDialogPage;
}());
export { ContentNodeSelectorDialogPage };
if (false) {
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.dialog;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.header;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.searchInputElement;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.searchLabel;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.siteListDropdown;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.cancelButton;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.moveCopyButton;
    /** @type {?} */
    ContentNodeSelectorDialogPage.prototype.contentList;
}
//# sourceMappingURL=data:application/json;base64,