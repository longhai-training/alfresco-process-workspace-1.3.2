/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { by, element, browser } from 'protractor';
import { DataTableComponentPage } from '../../core/pages/data-table-component.page';
import { BrowserVisibility } from '../../core/utils/browser-visibility';
var DocumentListPage = /** @class */ (function () {
    function DocumentListPage(rootElement) {
        if (rootElement === void 0) { rootElement = element.all(by.css('adf-document-list')).first(); }
        this.actionMenu = element(by.css('div[role="menu"]'));
        this.optionButton = by.css('button[data-automation-id*="action_menu_"]');
        this.rootElement = rootElement;
        this.dataTable = new DataTableComponentPage(this.rootElement);
        this.tableBody = rootElement.all(by.css('div[class="adf-datatable-body"]')).first();
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} content
     * @return {THIS}
     */
    DocumentListPage.prototype.checkLockedIcon = /**
     * @template THIS
     * @this {THIS}
     * @param {?} content
     * @return {THIS}
     */
    function (content) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).dataTable.getRow('Display name', content);
        /** @type {?} */
        var lockIcon = row.element(by.cssContainingText('div[title="Lock"] mat-icon', 'lock'));
        BrowserVisibility.waitUntilElementIsVisible(lockIcon);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} content
     * @return {THIS}
     */
    DocumentListPage.prototype.checkUnlockedIcon = /**
     * @template THIS
     * @this {THIS}
     * @param {?} content
     * @return {THIS}
     */
    function (content) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).dataTable.getRow('Display name', content);
        /** @type {?} */
        var lockIcon = row.element(by.cssContainingText('div[title="Lock"] mat-icon', 'lock_open'));
        BrowserVisibility.waitUntilElementIsVisible(lockIcon);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    DocumentListPage.prototype.waitForTableBody = /**
     * @return {?}
     */
    function () {
        return BrowserVisibility.waitUntilElementIsVisible(this.tableBody);
    };
    /**
     * @param {?} nodeName
     * @return {?}
     */
    DocumentListPage.prototype.getTooltip = /**
     * @param {?} nodeName
     * @return {?}
     */
    function (nodeName) {
        return this.dataTable.getTooltip('Display name', nodeName);
    };
    /**
     * @param {?} nodeName
     * @return {?}
     */
    DocumentListPage.prototype.selectRow = /**
     * @param {?} nodeName
     * @return {?}
     */
    function (nodeName) {
        return this.dataTable.selectRow('Display name', nodeName);
    };
    /**
     * @param {?} nodeName
     * @return {?}
     */
    DocumentListPage.prototype.rightClickOnRow = /**
     * @param {?} nodeName
     * @return {?}
     */
    function (nodeName) {
        return this.dataTable.rightClickOnRow('Display name', nodeName);
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} content
     * @return {THIS}
     */
    DocumentListPage.prototype.clickOnActionMenu = /**
     * @template THIS
     * @this {THIS}
     * @param {?} content
     * @return {THIS}
     */
    function (content) {
        /** @type {?} */
        var row = (/** @type {?} */ (this)).dataTable.getRow('Display name', content);
        row.element((/** @type {?} */ (this)).optionButton).click();
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).actionMenu);
        browser.sleep(500);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    DocumentListPage.prototype.checkActionMenuIsNotDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsNotVisible((/** @type {?} */ (this)).actionMenu);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    DocumentListPage.prototype.dataTablePage = /**
     * @return {?}
     */
    function () {
        return new DataTableComponentPage(this.rootElement);
    };
    /**
     * @param {?} column
     * @return {?}
     */
    DocumentListPage.prototype.getAllRowsColumnValues = /**
     * @param {?} column
     * @return {?}
     */
    function (column) {
        return this.dataTable.getAllRowsColumnValues(column);
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} nodeName
     * @return {THIS}
     */
    DocumentListPage.prototype.doubleClickRow = /**
     * @template THIS
     * @this {THIS}
     * @param {?} nodeName
     * @return {THIS}
     */
    function (nodeName) {
        (/** @type {?} */ (this)).dataTable.doubleClickRow('Display name', nodeName);
        return (/** @type {?} */ (this));
    };
    return DocumentListPage;
}());
export { DocumentListPage };
if (false) {
    /** @type {?} */
    DocumentListPage.prototype.rootElement;
    /** @type {?} */
    DocumentListPage.prototype.actionMenu;
    /** @type {?} */
    DocumentListPage.prototype.optionButton;
    /** @type {?} */
    DocumentListPage.prototype.tableBody;
    /** @type {?} */
    DocumentListPage.prototype.dataTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtbGlzdC5wYWdlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGFsZnJlc2NvL2FkZi10ZXN0aW5nLyIsInNvdXJjZXMiOlsibGliL2NvbnRlbnQtc2VydmljZXMvcGFnZXMvZG9jdW1lbnQtbGlzdC5wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJBLE9BQU8sRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFpQixPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDakUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDcEYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFFeEU7SUFRSSwwQkFBWSxXQUE2RTtRQUE3RSw0QkFBQSxFQUFBLGNBQTZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFO1FBTHpGLGVBQVUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUM7UUFDakQsaUJBQVksR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7UUFLaEUsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLHNCQUFzQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsU0FBUyxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDeEYsQ0FBQzs7Ozs7OztJQUVELDBDQUFlOzs7Ozs7SUFBZixVQUFnQixPQUFPOztZQUNiLEdBQUcsR0FBRyxtQkFBQSxJQUFJLEVBQUEsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLGNB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RTs7SUFDcEUscUNBQVU7O0lBQ1YscUNBQVUiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxOSBBbGZyZXNjbyBTb2Z0d2FyZSwgTHRkLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5pbXBvcnQgeyBieSwgZWxlbWVudCwgRWxlbWVudEZpbmRlciwgYnJvd3NlciB9IGZyb20gJ3Byb3RyYWN0b3InO1xuaW1wb3J0IHsgRGF0YVRhYmxlQ29tcG9uZW50UGFnZSB9IGZyb20gJy4uLy4uL2NvcmUvcGFnZXMvZGF0YS10YWJsZS1jb21wb25lbnQucGFnZSc7XG5pbXBvcnQgeyBCcm93c2VyVmlzaWJpbGl0eSB9IGZyb20gJy4uLy4uL2NvcmUvdXRpbHMvYnJvd3Nlci12aXNpYmlsaXR5JztcblxuZXhwb3J0IGNsYXNzIERvY3VtZW50TGlzdFBhZ2Uge1xuXG4gICAgcm9vdEVsZW1lbnQ6IEVsZW1lbnRGaW5kZXI7XG4gICAgYWN0aW9uTWVudSA9IGVsZW1lbnQoYnkuY3NzKCdkaXZbcm9sZT1cIm1lbnVcIl0nKSk7XG4gICAgb3B0aW9uQnV0dG9uID0gYnkuY3NzKCdidXR0b25bZGF0YS1hdXRvbWF0aW9uLWlkKj1cImFjdGlvbl9tZW51X1wiXScpO1xuICAgIHRhYmxlQm9keTtcbiAgICBkYXRhVGFibGU7XG5cbiAgICBjb25zdHJ1Y3Rvcihyb290RWxlbWVudDogRWxlbWVudEZpbmRlciA9IGVsZW1lbnQuYWxsKGJ5LmNzcygnYWRmLWRvY3VtZW50LWxpc3QnKSkuZmlyc3QoKSkge1xuICAgICAgICB0aGlzLnJvb3RFbGVtZW50ID0gcm9vdEVsZW1lbnQ7XG4gICAgICAgIHRoaXMuZGF0YVRhYmxlID0gbmV3IERhdGFUYWJsZUNvbXBvbmVudFBhZ2UodGhpcy5yb290RWxlbWVudCk7XG4gICAgICAgIHRoaXMudGFibGVCb2R5ID0gcm9vdEVsZW1lbnQuYWxsKGJ5LmNzcygnZGl2W2NsYXNzPVwiYWRmLWRhdGF0YWJsZS1ib2R5XCJdJykpLmZpcnN0KCk7XG4gICAgfVxuXG4gICAgY2hlY2tMb2NrZWRJY29uKGNvbnRlbnQpIHtcbiAgICAgICAgY29uc3Qgcm93ID0gdGhpcy5kYXRhVGFibGUuZ2V0Um93KCdEaXNwbGF5IG5hbWUnLCBjb250ZW50KTtcbiAgICAgICAgY29uc3QgbG9ja0ljb24gPSByb3cuZWxlbWVudChieS5jc3NDb250YWluaW5nVGV4dCgnZGl2W3RpdGxlPVwiTG9ja1wiXSBtYXQtaWNvbicsICdsb2NrJykpO1xuICAgICAgICBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKGxvY2tJY29uKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgY2hlY2tVbmxvY2tlZEljb24oY29udGVudCkge1xuICAgICAgICBjb25zdCByb3cgPSB0aGlzLmRhdGFUYWJsZS5nZXRSb3coJ0Rpc3BsYXkgbmFtZScsIGNvbnRlbnQpO1xuICAgICAgICBjb25zdCBsb2NrSWNvbiA9IHJvdy5lbGVtZW50KGJ5LmNzc0NvbnRhaW5pbmdUZXh0KCdkaXZbdGl0bGU9XCJMb2NrXCJdIG1hdC1pY29uJywgJ2xvY2tfb3BlbicpKTtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzVmlzaWJsZShsb2NrSWNvbik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHdhaXRGb3JUYWJsZUJvZHkoKSB7XG4gICAgICAgIHJldHVybiBCcm93c2VyVmlzaWJpbGl0eS53YWl0VW50aWxFbGVtZW50SXNWaXNpYmxlKHRoaXMudGFibGVCb2R5KTtcbiAgICB9XG5cbiAgICBnZXRUb29sdGlwKG5vZGVOYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5nZXRUb29sdGlwKCdEaXNwbGF5IG5hbWUnLCBub2RlTmFtZSk7XG4gICAgfVxuXG4gICAgc2VsZWN0Um93KG5vZGVOYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFUYWJsZS5zZWxlY3RSb3coJ0Rpc3BsYXkgbmFtZScsIG5vZGVOYW1lKTtcbiAgICB9XG5cbiAgICByaWdodENsaWNrT25Sb3cobm9kZU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLnJpZ2h0Q2xpY2tPblJvdygnRGlzcGxheSBuYW1lJywgbm9kZU5hbWUpO1xuICAgIH1cblxuICAgIGNsaWNrT25BY3Rpb25NZW51KGNvbnRlbnQpIHtcbiAgICAgICAgY29uc3Qgcm93ID0gdGhpcy5kYXRhVGFibGUuZ2V0Um93KCdEaXNwbGF5IG5hbWUnLCBjb250ZW50KTtcbiAgICAgICAgcm93LmVsZW1lbnQodGhpcy5vcHRpb25CdXR0b24pLmNsaWNrKCk7XG4gICAgICAgIEJyb3dzZXJWaXNpYmlsaXR5LndhaXRVbnRpbEVsZW1lbnRJc1Zpc2libGUodGhpcy5hY3Rpb25NZW51KTtcbiAgICAgICAgYnJvd3Nlci5zbGVlcCg1MDApO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBjaGVja0FjdGlvbk1lbnVJc05vdERpc3BsYXllZCgpIHtcbiAgICAgICAgQnJvd3NlclZpc2liaWxpdHkud2FpdFVudGlsRWxlbWVudElzTm90VmlzaWJsZSh0aGlzLmFjdGlvbk1lbnUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBkYXRhVGFibGVQYWdlKCkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGFUYWJsZUNvbXBvbmVudFBhZ2UodGhpcy5yb290RWxlbWVudCk7XG4gICAgfVxuXG4gICAgZ2V0QWxsUm93c0NvbHVtblZhbHVlcyhjb2x1bW4pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVRhYmxlLmdldEFsbFJvd3NDb2x1bW5WYWx1ZXMoY29sdW1uKTtcbiAgICB9XG5cbiAgICBkb3VibGVDbGlja1Jvdyhub2RlTmFtZSkge1xuICAgICAgICB0aGlzLmRhdGFUYWJsZS5kb3VibGVDbGlja1JvdygnRGlzcGxheSBuYW1lJywgbm9kZU5hbWUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXX0=