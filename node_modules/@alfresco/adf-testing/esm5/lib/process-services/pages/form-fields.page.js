/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*!
 * @license
 * Copyright 2019 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BrowserVisibility } from '../../core/utils/browser-visibility';
import { by, element } from 'protractor';
var FormFieldsPage = /** @class */ (function () {
    function FormFieldsPage() {
        this.formContent = element(by.css('adf-form'));
        this.refreshButton = element(by.css('div[class*="form-reload-button"] mat-icon'));
        this.saveButton = element(by.cssContainingText('mat-card-actions[class*="adf-for"] span', 'SAVE'));
        this.valueLocator = by.css('input');
        this.labelLocator = by.css('label');
        this.noFormMessage = element(by.css('span[id*="no-form-message"]'));
        this.completedTaskNoFormMessage = element(by.css('div[id*="completed-form-message"] p'));
        this.attachFormButton = element(by.id('adf-no-form-attach-form-button'));
        this.selectFormDropDownArrow = element.all(by.css('adf-attach-form div[class*="mat-select-arrow"]')).first();
        this.selectFormContent = element(by.css('div[class*="mat-select-panel"]'));
        this.completeButton = element(by.id('adf-form-complete'));
        this.errorMessage = by.css('.adf-error-text-container .adf-error-text');
    }
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} locator
     * @param {?} field
     * @param {?} value
     * @return {THIS}
     */
    FormFieldsPage.prototype.setFieldValue = /**
     * @template THIS
     * @this {THIS}
     * @param {?} locator
     * @param {?} field
     * @param {?} value
     * @return {THIS}
     */
    function (locator, field, value) {
        /** @type {?} */
        var fieldElement = element(locator(field));
        BrowserVisibility.waitUntilElementIsVisible(fieldElement);
        fieldElement.clear().sendKeys(value);
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?} fieldId
     * @return {?}
     */
    FormFieldsPage.prototype.checkWidgetIsVisible = /**
     * @param {?} fieldId
     * @return {?}
     */
    function (fieldId) {
        /** @type {?} */
        var fieldElement = element.all(by.css("adf-form-field div[id='field-" + fieldId + "-container']")).first();
        BrowserVisibility.waitUntilElementIsVisible(fieldElement);
    };
    /**
     * @param {?} fieldId
     * @return {?}
     */
    FormFieldsPage.prototype.checkWidgetIsHidden = /**
     * @param {?} fieldId
     * @return {?}
     */
    function (fieldId) {
        /** @type {?} */
        var hiddenElement = element(by.css("adf-form-field div[id='field-" + fieldId + "-container'][hidden]"));
        BrowserVisibility.waitUntilElementIsVisible(hiddenElement);
    };
    /**
     * @param {?} fieldId
     * @return {?}
     */
    FormFieldsPage.prototype.getWidget = /**
     * @param {?} fieldId
     * @return {?}
     */
    function (fieldId) {
        /** @type {?} */
        var widget = element(by.css("adf-form-field div[id='field-" + fieldId + "-container']"));
        BrowserVisibility.waitUntilElementIsVisible(widget);
        return widget;
    };
    /**
     * @param {?} fieldId
     * @param {?} valueLocatorParam
     * @return {?}
     */
    FormFieldsPage.prototype.getFieldValue = /**
     * @param {?} fieldId
     * @param {?} valueLocatorParam
     * @return {?}
     */
    function (fieldId, valueLocatorParam) {
        /** @type {?} */
        var value = this.getWidget(fieldId).element(valueLocatorParam || this.valueLocator);
        BrowserVisibility.waitUntilElementIsVisible(value);
        return value.getAttribute('value');
    };
    /**
     * @param {?} fieldId
     * @param {?} labelLocatorParam
     * @return {?}
     */
    FormFieldsPage.prototype.getFieldLabel = /**
     * @param {?} fieldId
     * @param {?} labelLocatorParam
     * @return {?}
     */
    function (fieldId, labelLocatorParam) {
        /** @type {?} */
        var label = this.getWidget(fieldId).all(labelLocatorParam || this.labelLocator).first();
        BrowserVisibility.waitUntilElementIsVisible(label);
        return label.getText();
    };
    /**
     * @param {?} fieldId
     * @return {?}
     */
    FormFieldsPage.prototype.getFieldErrorMessage = /**
     * @param {?} fieldId
     * @return {?}
     */
    function (fieldId) {
        /** @type {?} */
        var error = this.getWidget(fieldId).element(this.errorMessage);
        return error.getText();
    };
    /**
     * @param {?} fieldId
     * @param {?} labelLocatorParam
     * @return {?}
     */
    FormFieldsPage.prototype.getFieldText = /**
     * @param {?} fieldId
     * @param {?} labelLocatorParam
     * @return {?}
     */
    function (fieldId, labelLocatorParam) {
        /** @type {?} */
        var label = this.getWidget(fieldId).element(labelLocatorParam || this.labelLocator);
        BrowserVisibility.waitUntilElementIsVisible(label);
        return label.getText();
    };
    /**
     * @param {?} fieldId
     * @param {?=} locator
     * @return {?}
     */
    FormFieldsPage.prototype.getFieldPlaceHolder = /**
     * @param {?} fieldId
     * @param {?=} locator
     * @return {?}
     */
    function (fieldId, locator) {
        if (locator === void 0) { locator = 'input'; }
        /** @type {?} */
        var placeHolderLocator = element(by.css(locator + "#" + fieldId)).getAttribute('placeholder');
        BrowserVisibility.waitUntilElementIsVisible(placeHolderLocator);
        return placeHolderLocator;
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} locator
     * @param {?} field
     * @param {?} val
     * @return {THIS}
     */
    FormFieldsPage.prototype.checkFieldValue = /**
     * @template THIS
     * @this {THIS}
     * @param {?} locator
     * @param {?} field
     * @param {?} val
     * @return {THIS}
     */
    function (locator, field, val) {
        BrowserVisibility.waitUntilElementHasValue(element(locator(field)), val);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    FormFieldsPage.prototype.refreshForm = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).refreshButton);
        (/** @type {?} */ (this)).refreshButton.click();
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    FormFieldsPage.prototype.saveForm = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).saveButton);
        BrowserVisibility.waitUntilElementIsClickable((/** @type {?} */ (this)).saveButton);
        (/** @type {?} */ (this)).saveButton.click();
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    FormFieldsPage.prototype.noFormIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsNotOnPage((/** @type {?} */ (this)).formContent);
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    FormFieldsPage.prototype.checkFormIsDisplayed = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).formContent);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    FormFieldsPage.prototype.getNoFormMessage = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.noFormMessage);
        return this.noFormMessage.getText();
    };
    /**
     * @return {?}
     */
    FormFieldsPage.prototype.getCompletedTaskNoFormMessage = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.completedTaskNoFormMessage);
        return this.completedTaskNoFormMessage.getText();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    FormFieldsPage.prototype.clickOnAttachFormButton = /**
     * @template THIS
     * @this {THIS}
     * @return {THIS}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).attachFormButton);
        (/** @type {?} */ (this)).attachFormButton.click();
        return (/** @type {?} */ (this));
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} formName
     * @return {THIS}
     */
    FormFieldsPage.prototype.selectForm = /**
     * @template THIS
     * @this {THIS}
     * @param {?} formName
     * @return {THIS}
     */
    function (formName) {
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).selectFormDropDownArrow);
        (/** @type {?} */ (this)).selectFormDropDownArrow.click();
        BrowserVisibility.waitUntilElementIsVisible((/** @type {?} */ (this)).selectFormContent);
        (/** @type {?} */ (this)).selectFormFromDropDown(formName);
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?} formName
     * @return {?}
     */
    FormFieldsPage.prototype.selectFormFromDropDown = /**
     * @param {?} formName
     * @return {?}
     */
    function (formName) {
        /** @type {?} */
        var formNameElement = element(by.cssContainingText('span', formName));
        BrowserVisibility.waitUntilElementIsVisible(formNameElement);
        formNameElement.click();
    };
    /**
     * @param {?} fieldId
     * @return {?}
     */
    FormFieldsPage.prototype.checkWidgetIsReadOnlyMode = /**
     * @param {?} fieldId
     * @return {?}
     */
    function (fieldId) {
        /** @type {?} */
        var widget = element(by.css("adf-form-field div[id='field-" + fieldId + "-container']"));
        /** @type {?} */
        var widgetReadOnly = widget.element(by.css('div[class*="adf-readonly"]'));
        BrowserVisibility.waitUntilElementIsVisible(widgetReadOnly);
        return widgetReadOnly;
    };
    /**
     * @return {?}
     */
    FormFieldsPage.prototype.completeForm = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.completeButton);
        return this.completeButton.click();
    };
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} fieldId
     * @param {?} value
     * @return {THIS}
     */
    FormFieldsPage.prototype.setValueInInputById = /**
     * @template THIS
     * @this {THIS}
     * @param {?} fieldId
     * @param {?} value
     * @return {THIS}
     */
    function (fieldId, value) {
        /** @type {?} */
        var input = element(by.id(fieldId));
        BrowserVisibility.waitUntilElementIsVisible(input);
        input.clear().sendKeys(value);
        return (/** @type {?} */ (this));
    };
    /**
     * @return {?}
     */
    FormFieldsPage.prototype.isCompleteFormButtonDisabled = /**
     * @return {?}
     */
    function () {
        BrowserVisibility.waitUntilElementIsVisible(this.completeButton);
        return this.completeButton.getAttribute('disabled');
    };
    return FormFieldsPage;
}());
export { FormFieldsPage };
if (false) {
    /** @type {?} */
    FormFieldsPage.prototype.formContent;
    /** @type {?} */
    FormFieldsPage.prototype.refreshButton;
    /** @type {?} */
    FormFieldsPage.prototype.saveButton;
    /** @type {?} */
    FormFieldsPage.prototype.valueLocator;
    /** @type {?} */
    FormFieldsPage.prototype.labelLocator;
    /** @type {?} */
    FormFieldsPage.prototype.noFormMessage;
    /** @type {?} */
    FormFieldsPage.prototype.completedTaskNoFormMessage;
    /** @type {?} */
    FormFieldsPage.prototype.attachFormButton;
    /** @type {?} */
    FormFieldsPage.prototype.selectFormDropDownArrow;
    /** @type {?} */
    FormFieldsPage.prototype.selectFormContent;
    /** @type {?} */
    FormFieldsPage.prototype.completeButton;
    /** @type {?} */
    FormFieldsPage.prototype.errorMessage;
}
//# sourceMappingURL=data:application/json;base64,