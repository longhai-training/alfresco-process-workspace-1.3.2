{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@alfresco/adf-extensions/lib/config/action.extensions.ts","ng://@alfresco/adf-extensions/lib/config/extension-utils.ts","ng://@alfresco/adf-extensions/lib/services/extension-loader.service.ts","ng://@alfresco/adf-extensions/lib/evaluators/core.evaluators.ts","ng://@alfresco/adf-extensions/lib/services/component-register.service.ts","ng://@alfresco/adf-extensions/lib/services/rule.service.ts","ng://@alfresco/adf-extensions/lib/services/extension.service.ts","ng://@alfresco/adf-extensions/lib/components/dynamic-component/dynamic.component.ts","ng://@alfresco/adf-extensions/lib/components/dynamic-tab/dynamic-tab.component.ts","ng://@alfresco/adf-extensions/lib/components/dynamic-column/dynamic-column.component.ts","ng://@alfresco/adf-extensions/lib/components/viewer/preview-extension.component.ts","ng://@alfresco/adf-extensions/lib/services/app-extension.service.ts","ng://@alfresco/adf-extensions/lib/services/startup-extension-factory.ts","ng://@alfresco/adf-extensions/lib/extensions.module.ts","ng://@alfresco/adf-extensions/lib/config/rule.extensions.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__read","o","m","r","ar","error","__spread","concat","default","button","separator","menu","custom","getValue","target","key","undefined","keys","split","shift","filterEnabled","entry","disabled","sortByOrder","a","b","order","Number","MAX_SAFE_INTEGER","mergeObjects","objects","_i","forEach","source","prop","startsWith","Array","isArray","mergeArrays","left","right","map","element","id","merged","ExtensionLoaderService","http","load","configPath","pluginsPath","_this","loadConfig","config_1","config","override","sessionStorage","getItem","JSON","parse","$references","plugins","name","idx","all","results","configs","filter","sort","getMetadata","ext","url","get","subscribe","getElements","fallback","getContentActions","setActionDefaults","getRules","rules","getRoutes","routes","getActions","actions","getFeatures","features","action","type","ContentActionType","icon","Injectable","args","providedIn","HttpClient","not","context","every","arg","evaluator","getEvaluator","parameters","console","warn","some","ComponentRegisterService","components","setComponents","values","getComponentById","hasComponentById","RuleService","loader","evaluators","setup","setEvaluators","getRuleById","find","ref","fn_1","substring","evaluateRule","ruleId","ruleRef","ExtensionService","componentRegister","ruleService","authGuards","_a","core.every","core.some","core.not","getFeature","reduce","prev","curr","setAuthGuards","getRouteById","route","getAuthGuards","ids","guard","getActionById","runExpression","matches","RegExp","exec","expression","Function","fn","DynamicExtensionComponent","extensions","componentFactoryResolver","loaded","ngOnChanges","changes","loadComponent","data","currentValue","updateInstance","proxy","componentType","factory","resolveComponentFactory","content","clear","componentRef","createComponent","ngOnDestroy","componentCreated","destroy","instance","lifecycleMethod","lifecycleHookIsImplemented","Component","selector","template","ComponentFactoryResolver","ViewChild","read","ViewContainerRef","Input","DynamicTabComponent","ngOnInit","node","DynamicColumnComponent","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","class","PreviewExtensionComponent","extensionService","extension","AppExtensionService","_references","BehaviorSubject","references$","asObservable","references","getDocumentListPreset","getViewerExtensions","isViewerExtensionDisabled","setupExtensions","appExtensionService","ExtensionsModule","forRoot","ngModule","providers","provide","APP_INITIALIZER","useFactory","deps","multi","forChild","NgModule","declarations","exports","RuleRef","reduceSeparators","acc","el","arr","reduceEmptyMenus","children"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport enum ContentActionType {\n    default = 'default',\n    button = 'button',\n    separator = 'separator',\n    menu = 'menu',\n    custom = 'custom'\n}\n\nexport interface ContentActionRef extends ExtensionElement {\n    type: ContentActionType;\n\n    title?: string;\n    description?: string;\n    icon?: string;\n    children?: Array<ContentActionRef>;\n    component?: string;\n    actions?: {\n        click?: string;\n        [key: string]: string;\n    };\n    rules?: {\n        enabled?: string;\n        visible?: string;\n        [key: string]: string;\n    };\n}\n\nexport interface ActionRef {\n    id: string;\n    type: string;\n    payload?: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentActionRef, ContentActionType } from './action.extensions';\n\nexport function getValue(target: any, key: string): any {\n    if (!target) {\n        return undefined;\n    }\n\n    const keys = key.split('.');\n    key = '';\n\n    do {\n        key += keys.shift();\n        const value = target[key];\n        if (\n            value !== undefined &&\n            (typeof value === 'object' || !keys.length)\n        ) {\n            target = value;\n            key = '';\n        } else if (!keys.length) {\n            target = undefined;\n        } else {\n            key += '.';\n        }\n    } while (keys.length);\n\n    return target;\n}\n\nexport function filterEnabled(entry: { disabled?: boolean }): boolean {\n    return !entry.disabled;\n}\n\nexport function sortByOrder(\n    a: { order?: number | undefined },\n    b: { order?: number | undefined }\n) {\n    const left = a.order === undefined ? Number.MAX_SAFE_INTEGER : a.order;\n    const right = b.order === undefined ? Number.MAX_SAFE_INTEGER : b.order;\n    return left - right;\n}\n\nexport function reduceSeparators(\n    acc: ContentActionRef[],\n    el: ContentActionRef,\n    i: number,\n    arr: ContentActionRef[]\n): ContentActionRef[] {\n    // remove leading separator\n    if (i === 0) {\n        if (arr[i].type === ContentActionType.separator) {\n            return acc;\n        }\n    }\n    // remove duplicate separators\n    if (i > 0) {\n        const prev = arr[i - 1];\n        if (\n            prev.type === ContentActionType.separator &&\n            el.type === ContentActionType.separator\n        ) {\n            return acc;\n        }\n\n        // remove trailing separator\n        if (i === arr.length - 1) {\n            if (el.type === ContentActionType.separator) {\n                return acc;\n            }\n        }\n    }\n\n    return acc.concat(el);\n}\n\nexport function reduceEmptyMenus(\n    acc: ContentActionRef[],\n    el: ContentActionRef\n): ContentActionRef[] {\n    if (el.type === ContentActionType.menu) {\n        if ((el.children || []).length === 0) {\n            return acc;\n        }\n    }\n    return acc.concat(el);\n}\n\nexport function mergeObjects(...objects): any {\n    const result = {};\n\n    objects.forEach((source) => {\n        Object.keys(source).forEach((prop) => {\n            if (!prop.startsWith('$')) {\n                if (prop in result && Array.isArray(result[prop])) {\n                    // result[prop] = result[prop].concat(source[prop]);\n                    result[prop] = mergeArrays(result[prop], source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = mergeObjects(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            }\n        });\n    });\n\n    return result;\n}\n\nexport function mergeArrays(left: any[], right: any[]): any[] {\n    const result = [];\n    const map = {};\n\n    (left || []).forEach((entry) => {\n        const element = entry;\n        if (element && element.hasOwnProperty('id')) {\n            map[element.id] = element;\n        } else {\n            result.push(element);\n        }\n    });\n\n    (right || []).forEach((entry) => {\n        const element = entry;\n        if (element && element.hasOwnProperty('id') && map[element.id]) {\n            const merged = mergeObjects(map[element.id], element);\n            map[element.id] = merged;\n        } else {\n            result.push(element);\n        }\n    });\n\n    return Object.keys(map).map((key) => map[key]).concat(result);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActionRef, ContentActionRef, ContentActionType } from '../config/action.extensions';\nimport { ExtensionElement } from '../config/extension-element';\nimport { filterEnabled, getValue, mergeObjects, sortByOrder } from '../config/extension-utils';\nimport { ExtensionConfig, ExtensionRef } from '../config/extension.config';\nimport { RouteRef } from '../config/routing.extensions';\nimport { RuleRef } from '../config/rule.extensions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExtensionLoaderService {\n    constructor(private http: HttpClient) {\n    }\n\n    load(configPath: string, pluginsPath: string): Promise<ExtensionConfig> {\n        return new Promise<any>((resolve) => {\n            this.loadConfig(configPath, 0).then((result) => {\n                if (result) {\n                    let config = result.config;\n\n                    const override = sessionStorage.getItem('app.extension.config');\n                    if (override) {\n                        config = JSON.parse(override);\n                    }\n\n                    if (config.$references && config.$references.length > 0) {\n                        const plugins = config.$references.map((name, idx) =>\n                            this.loadConfig(`${pluginsPath}/${name}`, idx)\n                        );\n\n                        Promise.all(plugins).then((results) => {\n                            const configs = results\n                                .filter((entry) => entry)\n                                .sort(sortByOrder)\n                                .map((entry) => entry.config);\n\n                            if (configs.length > 0) {\n                                config = mergeObjects(config, ...configs);\n                            }\n\n                            config = {\n                                ...config,\n                                ...this.getMetadata(result.config),\n                                $references: configs.map((ext) => this.getMetadata(ext))\n                            };\n\n                            resolve(config);\n                        });\n                    } else {\n                        resolve(config);\n                    }\n                }\n            });\n        });\n    }\n\n    protected getMetadata(config: ExtensionConfig): ExtensionRef {\n        const result: any = {};\n\n        Object\n            .keys(config)\n            .filter((key) => key.startsWith('$'))\n            .forEach((key) => {\n                result[key] = config[key];\n            });\n\n        return result;\n    }\n\n    protected loadConfig(\n        url: string,\n        order: number\n    ): Promise<{ order: number; config: ExtensionConfig }> {\n        return new Promise((resolve) => {\n            this.http.get<ExtensionConfig>(url).subscribe(\n                (config) => {\n                    resolve({\n                        order,\n                        config\n                    });\n                },\n                () => {\n                    resolve(null);\n                }\n            );\n        });\n    }\n\n    /**\n     * Retrieves configuration elements.\n     * Filters element by **enabled** and **order** attributes.\n     * Example:\n     *  `getElements<ViewerExtensionRef>(config, 'features.viewer.content')`\n     */\n    getElements<T extends ExtensionElement>(\n        config: ExtensionConfig,\n        key: string,\n        fallback: Array<T> = []\n    ): Array<T> {\n        const values = getValue(config, key) || fallback || [];\n        return values.filter(filterEnabled).sort(sortByOrder);\n    }\n\n    getContentActions(\n        config: ExtensionConfig,\n        key: string\n    ): Array<ContentActionRef> {\n        return this.getElements(config, key).map(this.setActionDefaults);\n    }\n\n    getRules(config: ExtensionConfig): Array<RuleRef> {\n        if (config && config.rules) {\n            return config.rules;\n        }\n        return [];\n    }\n\n    getRoutes(config: ExtensionConfig): Array<RouteRef> {\n        if (config) {\n            return config.routes || [];\n        }\n        return [];\n    }\n\n    getActions(config: ExtensionConfig): Array<ActionRef> {\n        if (config) {\n            return config.actions || [];\n        }\n        return [];\n    }\n\n    getFeatures(config: ExtensionConfig): any {\n        if (config) {\n            return config.features || [];\n        }\n        return [];\n    }\n\n    protected setActionDefaults(action: ContentActionRef): ContentActionRef {\n        if (action) {\n            action.type = action.type || ContentActionType.default;\n            action.icon = action.icon || 'extension';\n        }\n        return action;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RuleContext, RuleParameter } from '../config/rule.extensions';\n\nexport function not(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .every((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return !evaluator(context, ...(arg.parameters || []));\n        });\n}\n\nexport function every(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .every((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return evaluator(context, ...(arg.parameters || []));\n        });\n}\n\nexport function some(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .some((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return evaluator(context, ...(arg.parameters || []));\n        });\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\n\nexport interface ExtensionComponent {\n    data: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentRegisterService {\n    components: { [key: string]: Type<{}> } = {};\n\n    setComponents(values: { [key: string]: Type<{}> }) {\n        if (values) {\n            this.components = Object.assign({}, this.components, values);\n        }\n    }\n\n    getComponentById<T>(id: string): Type<T> {\n        return <Type<T>> this.components[id];\n    }\n\n    hasComponentById(id: string): boolean {\n        return !!this.getComponentById(id);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RuleRef, RuleContext, RuleEvaluator, RuleParameter } from '../config/rule.extensions';\nimport { ExtensionConfig } from '../config/extension.config';\nimport { ExtensionLoaderService } from './extension-loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RuleService {\n    context: RuleContext = null;\n    rules: Array<RuleRef> = [];\n    evaluators: { [key: string]: RuleEvaluator } = {};\n\n    constructor(protected loader: ExtensionLoaderService) {}\n\n    setup(config: ExtensionConfig) {\n        this.rules = this.loader.getRules(config);\n    }\n\n    /**\n     * Adds one or more new rule evaluators to the existing set.\n     * @param values The new evaluators to add\n     */\n    setEvaluators(values: { [key: string]: RuleEvaluator }) {\n        if (values) {\n            this.evaluators = Object.assign({}, this.evaluators, values);\n        }\n    }\n\n    /**\n     * Retrieves a rule using its ID value.\n     * @param id The ID value to look for\n     * @returns The rule or null if not found\n     */\n    getRuleById(id: string): RuleRef {\n        return this.rules.find((ref) => ref.id === id);\n    }\n\n    /**\n     * Retrieves a RuleEvaluator function using its key name.\n     * @param key Key name to look for\n     * @returns RuleEvaluator or null if not found\n     */\n    getEvaluator(key: string): RuleEvaluator {\n        if (key && key.startsWith('!')) {\n            const fn = this.evaluators[key.substring(1)];\n            return (context: RuleContext, ...args: RuleParameter[]): boolean => {\n                return !fn(context, ...args);\n            };\n        }\n        return this.evaluators[key];\n    }\n\n    /**\n     * Evaluates a rule.\n     * @param ruleId ID of the rule to evaluate\n     * @param context (optional) Custom rule execution context.\n     * @returns True if the rule passed, false otherwise\n     */\n    evaluateRule(ruleId: string, context?: RuleContext): boolean {\n        const ruleRef = this.getRuleById(ruleId);\n        context = context || this.context;\n\n        if (ruleRef) {\n            const evaluator = this.getEvaluator(ruleRef.type);\n            if (evaluator) {\n                return evaluator(context, ...ruleRef.parameters);\n            }\n        } else {\n            const evaluator = this.getEvaluator(ruleId);\n            if (evaluator) {\n                return evaluator(context);\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { RuleEvaluator, RuleRef, RuleContext } from '../config/rule.extensions';\nimport { ExtensionConfig } from '../config/extension.config';\nimport { ExtensionLoaderService } from './extension-loader.service';\nimport { RouteRef } from '../config/routing.extensions';\nimport { ActionRef } from '../config/action.extensions';\nimport * as core from '../evaluators/core.evaluators';\nimport { ComponentRegisterService } from './component-register.service';\nimport { RuleService } from './rule.service';\nimport { ExtensionElement } from '../config/extension-element';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExtensionService {\n\n    protected config: ExtensionConfig = null;\n\n    configPath = 'assets/app.extensions.json';\n    pluginsPath = 'assets/plugins';\n\n    routes: Array<RouteRef> = [];\n    actions: Array<ActionRef> = [];\n    features: Array<any> = [];\n    authGuards: { [key: string]: Type<{}> } = {};\n\n    constructor(\n        protected loader: ExtensionLoaderService,\n        protected componentRegister: ComponentRegisterService,\n        protected ruleService: RuleService\n    ) {\n    }\n\n    /**\n     * Loads and registers an extension config file and plugins (specified by path properties).\n     * @returns The loaded config data\n     */\n    async load(): Promise<ExtensionConfig> {\n        const config = await this.loader.load(\n            this.configPath,\n            this.pluginsPath\n        );\n        this.setup(config);\n        return config;\n    }\n\n    /**\n     * Registers extensions from a config object.\n     * @param config Object with config data\n     */\n    setup(config: ExtensionConfig) {\n        if (!config) {\n            console.warn('Extension configuration not found');\n            return;\n        }\n\n        this.config = config;\n\n        this.setEvaluators({\n            'core.every': core.every,\n            'core.some': core.some,\n            'core.not': core.not\n        });\n\n        this.actions = this.loader.getActions(config);\n        this.routes = this.loader.getRoutes(config);\n        this.features = this.loader.getFeatures(config);\n\n        this.ruleService.setup(config);\n    }\n\n    /**\n     * Gets features by key.\n     * @param key Key string, using dot notation\n     * @returns Features array found by key\n     */\n    getFeature(key: string): any[] {\n        const properties: string[] = Array.isArray(key) ? [key] : key.split('.');\n        return properties.reduce((prev, curr) => prev && prev[curr], this.features) || [];\n    }\n\n    getElements<T extends ExtensionElement>(key: string, fallback: Array<T> = []): Array<T> {\n        return this.loader.getElements(this.config, key, fallback);\n    }\n\n    /**\n     * Adds one or more new rule evaluators to the existing set.\n     * @param values The new evaluators to add\n     */\n    setEvaluators(values: { [key: string]: RuleEvaluator }) {\n        this.ruleService.setEvaluators(values);\n    }\n\n    /**\n     * Adds one or more new auth guards to the existing set.\n     * @param values The new auth guards to add\n     */\n    setAuthGuards(values: { [key: string]: Type<{}> }) {\n        if (values) {\n            this.authGuards = Object.assign({}, this.authGuards, values);\n        }\n    }\n\n    /**\n     * Adds one or more new components to the existing set.\n     * @param values The new components to add\n     */\n    setComponents(values: { [key: string]: Type<{}> }) {\n        this.componentRegister.setComponents(values);\n    }\n\n    /**\n     * Retrieves a route using its ID value.\n     * @param id The ID value to look for\n     * @returns The route or null if not found\n     */\n    getRouteById(id: string): RouteRef {\n        return this.routes.find((route) => route.id === id);\n    }\n\n    /**\n     * Retrieves one or more auth guards using an array of ID values.\n     * @param ids Array of ID value to look for\n     * @returns Array of auth guards or empty array if none were found\n     */\n    getAuthGuards(ids: string[]): Array<Type<{}>> {\n        return (ids || [])\n            .map((id) => this.authGuards[id])\n            .filter((guard) => guard);\n    }\n\n    /**\n     * Retrieves an action using its ID value.\n     * @param id The ID value to look for\n     * @returns Action or null if not found\n     */\n    getActionById(id: string): ActionRef {\n        return this.actions.find((action) => action.id === id);\n    }\n\n    /**\n     * Retrieves a RuleEvaluator function using its key name.\n     * @param key Key name to look for\n     * @returns RuleEvaluator or null if not found\n     */\n    getEvaluator(key: string): RuleEvaluator {\n        return this.ruleService.getEvaluator(key);\n    }\n\n    /**\n     * Evaluates a rule.\n     * @param ruleId ID of the rule to evaluate\n     * @param context (optional) Custom rule execution context.\n     * @returns True if the rule passed, false otherwise\n     */\n    evaluateRule(ruleId: string, context?: RuleContext): boolean {\n        return this.ruleService.evaluateRule(ruleId, context);\n    }\n\n    /**\n     * Retrieves a registered extension component using its ID value.\n     * @param id The ID value to look for\n     * @returns The component or null if not found\n     */\n    getComponentById<T>(id: string) {\n        return this.componentRegister.getComponentById<T>(id);\n    }\n\n    /**\n     * Retrieves a rule using its ID value.\n     * @param id The ID value to look for\n     * @returns The rule or null if not found\n     */\n    getRuleById(id: string): RuleRef {\n        return this.ruleService.getRuleById(id);\n    }\n\n    /**\n     * Runs a lightweight expression stored in a string.\n     * @param value String containing the expression or literal value\n     * @param context Parameter object for the expression with details of app state\n     * @returns Result of evaluated expression, if found, or the literal value otherwise\n     */\n    runExpression(value: string, context?: any) {\n        const pattern = new RegExp(/\\$\\((.*\\)?)\\)/g);\n        const matches = pattern.exec(value);\n\n        if (matches && matches.length > 1) {\n            const expression = matches[1];\n            const fn = new Function('context', `return ${expression}`);\n            const result = fn(context);\n\n            return result;\n        }\n\n        return value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ComponentRef,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnDestroy,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\nimport { ExtensionComponent } from '../../services/component-register.service';\n\n// cSpell:words lifecycle\n@Component({\n    selector: 'adf-dynamic-component',\n    template: `<div #content></div>`\n})\nexport class DynamicExtensionComponent implements OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    /** Unique ID string for the component to show. */\n    @Input() id: string;\n\n    /** Data for the dynamically-loaded component instance. */\n    @Input() data: any;\n\n    private componentRef: ComponentRef<ExtensionComponent>;\n    private loaded: boolean = false;\n\n    constructor(private extensions: ExtensionService, private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        if (changes.data) {\n            this.data = changes.data.currentValue;\n        }\n\n        this.updateInstance();\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const componentType = this.extensions.getComponentById<ExtensionComponent>(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentCreated()) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentCreated()) {\n            this.componentRef.instance.data = this.data;\n        }\n    }\n\n    private proxy(lifecycleMethod, ...args) {\n        if (this.componentCreated() && this.lifecycleHookIsImplemented(lifecycleMethod)) {\n            this.componentRef.instance[lifecycleMethod].apply(this.componentRef.instance, args);\n        }\n    }\n\n    private componentCreated(): boolean {\n        return !!this.componentRef  && !!this.componentRef.instance;\n    }\n\n    private lifecycleHookIsImplemented(lifecycleMethod: string): boolean {\n        return !!this.componentRef.instance[lifecycleMethod];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ViewContainerRef,\n    ComponentRef,\n    ComponentFactoryResolver,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ExtensionService } from '../../services/extension.service';\n\n@Component({\n    selector: 'adf-dynamic-tab',\n    template: `<div #content></div>`\n})\nexport class DynamicTabComponent implements OnInit, OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    /** Unique ID string for the component to show. */\n    @Input()\n    id: string;\n\n    @Input()\n    node: Node;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private extensions: ExtensionService,\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit() {\n        const componentType = this.extensions.getComponentById(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.updateInstance();\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node) {\n            this.updateInstance();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentRef && this.componentRef.instance) {\n            this.componentRef.instance.node = this.node;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\n\n@Component({\n  selector: 'adf-dynamic-column',\n  template: `\n    <ng-container #content></ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'adf-dynamic-column' },\n  styles: [\n    `\n      .adf-dynamic-column {\n        display: flex;\n        align-items: center;\n      }\n    `\n  ]\n})\nexport class DynamicColumnComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('content', { read: ViewContainerRef })\n  content: ViewContainerRef;\n\n  @Input()\n  id: string;\n\n  @Input()\n  context: any;\n\n  private componentRef: ComponentRef<any>;\n\n  constructor(\n    private extensions: ExtensionService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const componentType = this.extensions.getComponentById(this.id);\n    if (componentType) {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(\n        componentType\n      );\n      if (factory) {\n        this.content.clear();\n        this.componentRef = this.content.createComponent(factory, 0);\n        this.updateInstance();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.node) {\n      this.updateInstance();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.componentRef = null;\n    }\n  }\n\n  private updateInstance() {\n    if (this.componentRef && this.componentRef.instance) {\n      this.componentRef.instance.context = this.context;\n    }\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ComponentRef,\n    OnInit,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnDestroy,\n    OnChanges\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-preview-extension',\n    template: `\n    <div #content></div>\n  `\n})\nexport class PreviewExtensionComponent implements OnInit, OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    /** ID string of the component to preview. */\n    @Input()\n    id: string;\n\n    /** URL of the content in the repository. */\n    @Input()\n    url: string;\n\n    /** File extension (.jpg, .png, etc) for the viewer. */\n    @Input()\n    extension: string;\n\n    /** Node containing the content to display. */\n    @Input()\n    node: Node;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private extensionService: ExtensionService,\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit() {\n        if (!this.id) {\n            return;\n        }\n\n        const componentType = this.extensionService.getComponentById(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.updateInstance();\n            }\n        }\n    }\n\n    ngOnChanges() {\n        this.updateInstance();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentRef && this.componentRef.instance) {\n            const instance = this.componentRef.instance;\n\n            instance.node = this.node;\n            instance.url = this.url;\n            instance.extension = this.extension;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ExtensionConfig, ExtensionRef } from '../config/extension.config';\nimport { ExtensionService } from '../services/extension.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ViewerExtensionRef } from '../config/viewer.extensions';\nimport { DocumentListPresetRef } from '../config/document-list.extensions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppExtensionService {\n    private _references = new BehaviorSubject<ExtensionRef[]>([]);\n\n    references$: Observable<ExtensionRef[]>;\n\n    constructor(protected extensionService: ExtensionService) {\n        this.references$ = this._references.asObservable();\n    }\n\n    async load() {\n        const config = await this.extensionService.load();\n        this.setup(config);\n    }\n\n    setup(config: ExtensionConfig) {\n        if (!config) {\n            return;\n        }\n\n        const references = (config.$references || [])\n            .filter((entry) => typeof entry === 'object')\n            .map((entry) => <ExtensionRef> entry);\n        this._references.next(references);\n    }\n\n    /**\n     * Provides a collection of document list columns for the particular preset.\n     * The result is filtered by the **disabled** state.\n     * @param key Preset key.\n     */\n    getDocumentListPreset(key: string) {\n        return this.extensionService\n          .getElements<DocumentListPresetRef>(\n            `features.documentList.${key}`\n          )\n          .filter((entry) => !entry.disabled);\n    }\n\n    /**\n     * Provides a list of the Viewer content extensions,\n     * filtered by **disabled** state and **rules**.\n     */\n    getViewerExtensions(): ViewerExtensionRef[] {\n        return this.extensionService\n            .getElements<ViewerExtensionRef>('features.viewer.content')\n            .filter((extension) => !this.isViewerExtensionDisabled(extension));\n    }\n\n    protected isViewerExtensionDisabled(extension: ViewerExtensionRef): boolean {\n        if (extension) {\n          if (extension.disabled) {\n            return true;\n          }\n\n          if (extension.rules && extension.rules.disabled) {\n            return this.extensionService.evaluateRule(extension.rules.disabled);\n          }\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppExtensionService } from './app-extension.service';\n\nexport function setupExtensions(appExtensionService: AppExtensionService): Function {\n    return () => appExtensionService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicExtensionComponent } from './components/dynamic-component/dynamic.component';\nimport { DynamicTabComponent } from './components/dynamic-tab/dynamic-tab.component';\nimport { DynamicColumnComponent } from './components/dynamic-column/dynamic-column.component';\nimport { PreviewExtensionComponent } from './components/viewer/preview-extension.component';\nimport { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\nimport { AppExtensionService } from './services/app-extension.service';\nimport { setupExtensions } from './services/startup-extension-factory';\n\n@NgModule({\n    declarations: [\n        DynamicExtensionComponent,\n        DynamicTabComponent,\n        DynamicColumnComponent,\n        PreviewExtensionComponent\n    ],\n    exports: [\n        DynamicExtensionComponent,\n        DynamicTabComponent,\n        DynamicColumnComponent,\n        PreviewExtensionComponent\n    ]\n})\nexport class ExtensionsModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ExtensionsModule,\n            providers: [\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: setupExtensions,\n                    deps: [AppExtensionService],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ExtensionsModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SelectionState } from '../store/states/selection.state';\nimport { NavigationState } from '../store/states/navigation.state';\nimport { NodePermissions } from './permission.extensions';\nimport { ProfileState } from '../store/states/profile.state';\nimport { RepositoryInfo } from '@alfresco/js-api';\n\nexport type RuleEvaluator = (context: RuleContext, ...args: any[]) => boolean;\n\nexport interface RuleContext {\n    repository: RepositoryInfo;\n    auth: any;\n    selection: SelectionState;\n    navigation: NavigationState;\n    profile: ProfileState;\n    permissions: NodePermissions;\n\n    getEvaluator(key: string): RuleEvaluator;\n}\n\nexport class RuleRef {\n    type: string;\n    id?: string;\n    parameters?: Array<RuleParameter>;\n}\n\nexport interface RuleParameter {\n    type: string;\n    value: any;\n    parameters?: Array<RuleParameter>;\n}\n"]}