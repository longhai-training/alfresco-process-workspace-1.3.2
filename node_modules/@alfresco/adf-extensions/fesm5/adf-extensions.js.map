{"version":3,"file":"adf-extensions.js.map","sources":["ng://@alfresco/adf-extensions/lib/config/action.extensions.ts","ng://@alfresco/adf-extensions/lib/config/extension-utils.ts","ng://@alfresco/adf-extensions/lib/services/extension-loader.service.ts","ng://@alfresco/adf-extensions/lib/evaluators/core.evaluators.ts","ng://@alfresco/adf-extensions/lib/services/component-register.service.ts","ng://@alfresco/adf-extensions/lib/services/rule.service.ts","ng://@alfresco/adf-extensions/lib/services/extension.service.ts","ng://@alfresco/adf-extensions/lib/components/dynamic-component/dynamic.component.ts","ng://@alfresco/adf-extensions/lib/components/dynamic-tab/dynamic-tab.component.ts","ng://@alfresco/adf-extensions/lib/components/dynamic-column/dynamic-column.component.ts","ng://@alfresco/adf-extensions/lib/components/viewer/preview-extension.component.ts","ng://@alfresco/adf-extensions/lib/services/app-extension.service.ts","ng://@alfresco/adf-extensions/lib/services/startup-extension-factory.ts","ng://@alfresco/adf-extensions/lib/extensions.module.ts","ng://@alfresco/adf-extensions/lib/config/rule.extensions.ts"],"sourcesContent":["/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ExtensionElement } from './extension-element';\n\nexport enum ContentActionType {\n    default = 'default',\n    button = 'button',\n    separator = 'separator',\n    menu = 'menu',\n    custom = 'custom'\n}\n\nexport interface ContentActionRef extends ExtensionElement {\n    type: ContentActionType;\n\n    title?: string;\n    description?: string;\n    icon?: string;\n    children?: Array<ContentActionRef>;\n    component?: string;\n    actions?: {\n        click?: string;\n        [key: string]: string;\n    };\n    rules?: {\n        enabled?: string;\n        visible?: string;\n        [key: string]: string;\n    };\n}\n\nexport interface ActionRef {\n    id: string;\n    type: string;\n    payload?: string;\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContentActionRef, ContentActionType } from './action.extensions';\n\nexport function getValue(target: any, key: string): any {\n    if (!target) {\n        return undefined;\n    }\n\n    const keys = key.split('.');\n    key = '';\n\n    do {\n        key += keys.shift();\n        const value = target[key];\n        if (\n            value !== undefined &&\n            (typeof value === 'object' || !keys.length)\n        ) {\n            target = value;\n            key = '';\n        } else if (!keys.length) {\n            target = undefined;\n        } else {\n            key += '.';\n        }\n    } while (keys.length);\n\n    return target;\n}\n\nexport function filterEnabled(entry: { disabled?: boolean }): boolean {\n    return !entry.disabled;\n}\n\nexport function sortByOrder(\n    a: { order?: number | undefined },\n    b: { order?: number | undefined }\n) {\n    const left = a.order === undefined ? Number.MAX_SAFE_INTEGER : a.order;\n    const right = b.order === undefined ? Number.MAX_SAFE_INTEGER : b.order;\n    return left - right;\n}\n\nexport function reduceSeparators(\n    acc: ContentActionRef[],\n    el: ContentActionRef,\n    i: number,\n    arr: ContentActionRef[]\n): ContentActionRef[] {\n    // remove leading separator\n    if (i === 0) {\n        if (arr[i].type === ContentActionType.separator) {\n            return acc;\n        }\n    }\n    // remove duplicate separators\n    if (i > 0) {\n        const prev = arr[i - 1];\n        if (\n            prev.type === ContentActionType.separator &&\n            el.type === ContentActionType.separator\n        ) {\n            return acc;\n        }\n\n        // remove trailing separator\n        if (i === arr.length - 1) {\n            if (el.type === ContentActionType.separator) {\n                return acc;\n            }\n        }\n    }\n\n    return acc.concat(el);\n}\n\nexport function reduceEmptyMenus(\n    acc: ContentActionRef[],\n    el: ContentActionRef\n): ContentActionRef[] {\n    if (el.type === ContentActionType.menu) {\n        if ((el.children || []).length === 0) {\n            return acc;\n        }\n    }\n    return acc.concat(el);\n}\n\nexport function mergeObjects(...objects): any {\n    const result = {};\n\n    objects.forEach((source) => {\n        Object.keys(source).forEach((prop) => {\n            if (!prop.startsWith('$')) {\n                if (prop in result && Array.isArray(result[prop])) {\n                    // result[prop] = result[prop].concat(source[prop]);\n                    result[prop] = mergeArrays(result[prop], source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = mergeObjects(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            }\n        });\n    });\n\n    return result;\n}\n\nexport function mergeArrays(left: any[], right: any[]): any[] {\n    const result = [];\n    const map = {};\n\n    (left || []).forEach((entry) => {\n        const element = entry;\n        if (element && element.hasOwnProperty('id')) {\n            map[element.id] = element;\n        } else {\n            result.push(element);\n        }\n    });\n\n    (right || []).forEach((entry) => {\n        const element = entry;\n        if (element && element.hasOwnProperty('id') && map[element.id]) {\n            const merged = mergeObjects(map[element.id], element);\n            map[element.id] = merged;\n        } else {\n            result.push(element);\n        }\n    });\n\n    return Object.keys(map).map((key) => map[key]).concat(result);\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActionRef, ContentActionRef, ContentActionType } from '../config/action.extensions';\nimport { ExtensionElement } from '../config/extension-element';\nimport { filterEnabled, getValue, mergeObjects, sortByOrder } from '../config/extension-utils';\nimport { ExtensionConfig, ExtensionRef } from '../config/extension.config';\nimport { RouteRef } from '../config/routing.extensions';\nimport { RuleRef } from '../config/rule.extensions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExtensionLoaderService {\n    constructor(private http: HttpClient) {\n    }\n\n    load(configPath: string, pluginsPath: string): Promise<ExtensionConfig> {\n        return new Promise<any>((resolve) => {\n            this.loadConfig(configPath, 0).then((result) => {\n                if (result) {\n                    let config = result.config;\n\n                    const override = sessionStorage.getItem('app.extension.config');\n                    if (override) {\n                        config = JSON.parse(override);\n                    }\n\n                    if (config.$references && config.$references.length > 0) {\n                        const plugins = config.$references.map((name, idx) =>\n                            this.loadConfig(`${pluginsPath}/${name}`, idx)\n                        );\n\n                        Promise.all(plugins).then((results) => {\n                            const configs = results\n                                .filter((entry) => entry)\n                                .sort(sortByOrder)\n                                .map((entry) => entry.config);\n\n                            if (configs.length > 0) {\n                                config = mergeObjects(config, ...configs);\n                            }\n\n                            config = {\n                                ...config,\n                                ...this.getMetadata(result.config),\n                                $references: configs.map((ext) => this.getMetadata(ext))\n                            };\n\n                            resolve(config);\n                        });\n                    } else {\n                        resolve(config);\n                    }\n                }\n            });\n        });\n    }\n\n    protected getMetadata(config: ExtensionConfig): ExtensionRef {\n        const result: any = {};\n\n        Object\n            .keys(config)\n            .filter((key) => key.startsWith('$'))\n            .forEach((key) => {\n                result[key] = config[key];\n            });\n\n        return result;\n    }\n\n    protected loadConfig(\n        url: string,\n        order: number\n    ): Promise<{ order: number; config: ExtensionConfig }> {\n        return new Promise((resolve) => {\n            this.http.get<ExtensionConfig>(url).subscribe(\n                (config) => {\n                    resolve({\n                        order,\n                        config\n                    });\n                },\n                () => {\n                    resolve(null);\n                }\n            );\n        });\n    }\n\n    /**\n     * Retrieves configuration elements.\n     * Filters element by **enabled** and **order** attributes.\n     * Example:\n     *  `getElements<ViewerExtensionRef>(config, 'features.viewer.content')`\n     */\n    getElements<T extends ExtensionElement>(\n        config: ExtensionConfig,\n        key: string,\n        fallback: Array<T> = []\n    ): Array<T> {\n        const values = getValue(config, key) || fallback || [];\n        return values.filter(filterEnabled).sort(sortByOrder);\n    }\n\n    getContentActions(\n        config: ExtensionConfig,\n        key: string\n    ): Array<ContentActionRef> {\n        return this.getElements(config, key).map(this.setActionDefaults);\n    }\n\n    getRules(config: ExtensionConfig): Array<RuleRef> {\n        if (config && config.rules) {\n            return config.rules;\n        }\n        return [];\n    }\n\n    getRoutes(config: ExtensionConfig): Array<RouteRef> {\n        if (config) {\n            return config.routes || [];\n        }\n        return [];\n    }\n\n    getActions(config: ExtensionConfig): Array<ActionRef> {\n        if (config) {\n            return config.actions || [];\n        }\n        return [];\n    }\n\n    getFeatures(config: ExtensionConfig): any {\n        if (config) {\n            return config.features || [];\n        }\n        return [];\n    }\n\n    protected setActionDefaults(action: ContentActionRef): ContentActionRef {\n        if (action) {\n            action.type = action.type || ContentActionType.default;\n            action.icon = action.icon || 'extension';\n        }\n        return action;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RuleContext, RuleParameter } from '../config/rule.extensions';\n\nexport function not(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .every((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return !evaluator(context, ...(arg.parameters || []));\n        });\n}\n\nexport function every(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .every((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return evaluator(context, ...(arg.parameters || []));\n        });\n}\n\nexport function some(context: RuleContext, ...args: RuleParameter[]): boolean {\n    if (!args || args.length === 0) {\n        return false;\n    }\n\n    return args\n        .some((arg) => {\n            const evaluator = context.getEvaluator(arg.value);\n            if (!evaluator) {\n                console.warn('evaluator not found: ' + arg.value);\n                return false;\n            }\n            return evaluator(context, ...(arg.parameters || []));\n        });\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\n\nexport interface ExtensionComponent {\n    data: any;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ComponentRegisterService {\n    components: { [key: string]: Type<{}> } = {};\n\n    setComponents(values: { [key: string]: Type<{}> }) {\n        if (values) {\n            this.components = Object.assign({}, this.components, values);\n        }\n    }\n\n    getComponentById<T>(id: string): Type<T> {\n        return <Type<T>> this.components[id];\n    }\n\n    hasComponentById(id: string): boolean {\n        return !!this.getComponentById(id);\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RuleRef, RuleContext, RuleEvaluator, RuleParameter } from '../config/rule.extensions';\nimport { ExtensionConfig } from '../config/extension.config';\nimport { ExtensionLoaderService } from './extension-loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RuleService {\n    context: RuleContext = null;\n    rules: Array<RuleRef> = [];\n    evaluators: { [key: string]: RuleEvaluator } = {};\n\n    constructor(protected loader: ExtensionLoaderService) {}\n\n    setup(config: ExtensionConfig) {\n        this.rules = this.loader.getRules(config);\n    }\n\n    /**\n     * Adds one or more new rule evaluators to the existing set.\n     * @param values The new evaluators to add\n     */\n    setEvaluators(values: { [key: string]: RuleEvaluator }) {\n        if (values) {\n            this.evaluators = Object.assign({}, this.evaluators, values);\n        }\n    }\n\n    /**\n     * Retrieves a rule using its ID value.\n     * @param id The ID value to look for\n     * @returns The rule or null if not found\n     */\n    getRuleById(id: string): RuleRef {\n        return this.rules.find((ref) => ref.id === id);\n    }\n\n    /**\n     * Retrieves a RuleEvaluator function using its key name.\n     * @param key Key name to look for\n     * @returns RuleEvaluator or null if not found\n     */\n    getEvaluator(key: string): RuleEvaluator {\n        if (key && key.startsWith('!')) {\n            const fn = this.evaluators[key.substring(1)];\n            return (context: RuleContext, ...args: RuleParameter[]): boolean => {\n                return !fn(context, ...args);\n            };\n        }\n        return this.evaluators[key];\n    }\n\n    /**\n     * Evaluates a rule.\n     * @param ruleId ID of the rule to evaluate\n     * @param context (optional) Custom rule execution context.\n     * @returns True if the rule passed, false otherwise\n     */\n    evaluateRule(ruleId: string, context?: RuleContext): boolean {\n        const ruleRef = this.getRuleById(ruleId);\n        context = context || this.context;\n\n        if (ruleRef) {\n            const evaluator = this.getEvaluator(ruleRef.type);\n            if (evaluator) {\n                return evaluator(context, ...ruleRef.parameters);\n            }\n        } else {\n            const evaluator = this.getEvaluator(ruleId);\n            if (evaluator) {\n                return evaluator(context);\n            }\n        }\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable, Type } from '@angular/core';\nimport { RuleEvaluator, RuleRef, RuleContext } from '../config/rule.extensions';\nimport { ExtensionConfig } from '../config/extension.config';\nimport { ExtensionLoaderService } from './extension-loader.service';\nimport { RouteRef } from '../config/routing.extensions';\nimport { ActionRef } from '../config/action.extensions';\nimport * as core from '../evaluators/core.evaluators';\nimport { ComponentRegisterService } from './component-register.service';\nimport { RuleService } from './rule.service';\nimport { ExtensionElement } from '../config/extension-element';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ExtensionService {\n\n    protected config: ExtensionConfig = null;\n\n    configPath = 'assets/app.extensions.json';\n    pluginsPath = 'assets/plugins';\n\n    routes: Array<RouteRef> = [];\n    actions: Array<ActionRef> = [];\n    features: Array<any> = [];\n    authGuards: { [key: string]: Type<{}> } = {};\n\n    constructor(\n        protected loader: ExtensionLoaderService,\n        protected componentRegister: ComponentRegisterService,\n        protected ruleService: RuleService\n    ) {\n    }\n\n    /**\n     * Loads and registers an extension config file and plugins (specified by path properties).\n     * @returns The loaded config data\n     */\n    async load(): Promise<ExtensionConfig> {\n        const config = await this.loader.load(\n            this.configPath,\n            this.pluginsPath\n        );\n        this.setup(config);\n        return config;\n    }\n\n    /**\n     * Registers extensions from a config object.\n     * @param config Object with config data\n     */\n    setup(config: ExtensionConfig) {\n        if (!config) {\n            console.warn('Extension configuration not found');\n            return;\n        }\n\n        this.config = config;\n\n        this.setEvaluators({\n            'core.every': core.every,\n            'core.some': core.some,\n            'core.not': core.not\n        });\n\n        this.actions = this.loader.getActions(config);\n        this.routes = this.loader.getRoutes(config);\n        this.features = this.loader.getFeatures(config);\n\n        this.ruleService.setup(config);\n    }\n\n    /**\n     * Gets features by key.\n     * @param key Key string, using dot notation\n     * @returns Features array found by key\n     */\n    getFeature(key: string): any[] {\n        const properties: string[] = Array.isArray(key) ? [key] : key.split('.');\n        return properties.reduce((prev, curr) => prev && prev[curr], this.features) || [];\n    }\n\n    getElements<T extends ExtensionElement>(key: string, fallback: Array<T> = []): Array<T> {\n        return this.loader.getElements(this.config, key, fallback);\n    }\n\n    /**\n     * Adds one or more new rule evaluators to the existing set.\n     * @param values The new evaluators to add\n     */\n    setEvaluators(values: { [key: string]: RuleEvaluator }) {\n        this.ruleService.setEvaluators(values);\n    }\n\n    /**\n     * Adds one or more new auth guards to the existing set.\n     * @param values The new auth guards to add\n     */\n    setAuthGuards(values: { [key: string]: Type<{}> }) {\n        if (values) {\n            this.authGuards = Object.assign({}, this.authGuards, values);\n        }\n    }\n\n    /**\n     * Adds one or more new components to the existing set.\n     * @param values The new components to add\n     */\n    setComponents(values: { [key: string]: Type<{}> }) {\n        this.componentRegister.setComponents(values);\n    }\n\n    /**\n     * Retrieves a route using its ID value.\n     * @param id The ID value to look for\n     * @returns The route or null if not found\n     */\n    getRouteById(id: string): RouteRef {\n        return this.routes.find((route) => route.id === id);\n    }\n\n    /**\n     * Retrieves one or more auth guards using an array of ID values.\n     * @param ids Array of ID value to look for\n     * @returns Array of auth guards or empty array if none were found\n     */\n    getAuthGuards(ids: string[]): Array<Type<{}>> {\n        return (ids || [])\n            .map((id) => this.authGuards[id])\n            .filter((guard) => guard);\n    }\n\n    /**\n     * Retrieves an action using its ID value.\n     * @param id The ID value to look for\n     * @returns Action or null if not found\n     */\n    getActionById(id: string): ActionRef {\n        return this.actions.find((action) => action.id === id);\n    }\n\n    /**\n     * Retrieves a RuleEvaluator function using its key name.\n     * @param key Key name to look for\n     * @returns RuleEvaluator or null if not found\n     */\n    getEvaluator(key: string): RuleEvaluator {\n        return this.ruleService.getEvaluator(key);\n    }\n\n    /**\n     * Evaluates a rule.\n     * @param ruleId ID of the rule to evaluate\n     * @param context (optional) Custom rule execution context.\n     * @returns True if the rule passed, false otherwise\n     */\n    evaluateRule(ruleId: string, context?: RuleContext): boolean {\n        return this.ruleService.evaluateRule(ruleId, context);\n    }\n\n    /**\n     * Retrieves a registered extension component using its ID value.\n     * @param id The ID value to look for\n     * @returns The component or null if not found\n     */\n    getComponentById<T>(id: string) {\n        return this.componentRegister.getComponentById<T>(id);\n    }\n\n    /**\n     * Retrieves a rule using its ID value.\n     * @param id The ID value to look for\n     * @returns The rule or null if not found\n     */\n    getRuleById(id: string): RuleRef {\n        return this.ruleService.getRuleById(id);\n    }\n\n    /**\n     * Runs a lightweight expression stored in a string.\n     * @param value String containing the expression or literal value\n     * @param context Parameter object for the expression with details of app state\n     * @returns Result of evaluated expression, if found, or the literal value otherwise\n     */\n    runExpression(value: string, context?: any) {\n        const pattern = new RegExp(/\\$\\((.*\\)?)\\)/g);\n        const matches = pattern.exec(value);\n\n        if (matches && matches.length > 1) {\n            const expression = matches[1];\n            const fn = new Function('context', `return ${expression}`);\n            const result = fn(context);\n\n            return result;\n        }\n\n        return value;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ComponentRef,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnDestroy,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\nimport { ExtensionComponent } from '../../services/component-register.service';\n\n// cSpell:words lifecycle\n@Component({\n    selector: 'adf-dynamic-component',\n    template: `<div #content></div>`\n})\nexport class DynamicExtensionComponent implements OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    /** Unique ID string for the component to show. */\n    @Input() id: string;\n\n    /** Data for the dynamically-loaded component instance. */\n    @Input() data: any;\n\n    private componentRef: ComponentRef<ExtensionComponent>;\n    private loaded: boolean = false;\n\n    constructor(private extensions: ExtensionService, private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        if (changes.data) {\n            this.data = changes.data.currentValue;\n        }\n\n        this.updateInstance();\n        this.proxy('ngOnChanges', changes);\n    }\n\n    private loadComponent() {\n        const componentType = this.extensions.getComponentById<ExtensionComponent>(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentCreated()) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentCreated()) {\n            this.componentRef.instance.data = this.data;\n        }\n    }\n\n    private proxy(lifecycleMethod, ...args) {\n        if (this.componentCreated() && this.lifecycleHookIsImplemented(lifecycleMethod)) {\n            this.componentRef.instance[lifecycleMethod].apply(this.componentRef.instance, args);\n        }\n    }\n\n    private componentCreated(): boolean {\n        return !!this.componentRef  && !!this.componentRef.instance;\n    }\n\n    private lifecycleHookIsImplemented(lifecycleMethod: string): boolean {\n        return !!this.componentRef.instance[lifecycleMethod];\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    OnInit,\n    OnDestroy,\n    ViewChild,\n    ViewContainerRef,\n    ComponentRef,\n    ComponentFactoryResolver,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { Node } from '@alfresco/js-api';\nimport { ExtensionService } from '../../services/extension.service';\n\n@Component({\n    selector: 'adf-dynamic-tab',\n    template: `<div #content></div>`\n})\nexport class DynamicTabComponent implements OnInit, OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    /** Unique ID string for the component to show. */\n    @Input()\n    id: string;\n\n    @Input()\n    node: Node;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private extensions: ExtensionService,\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit() {\n        const componentType = this.extensions.getComponentById(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.updateInstance();\n            }\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.node) {\n            this.updateInstance();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentRef && this.componentRef.instance) {\n            this.componentRef.instance.node = this.node;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n  ComponentRef,\n  ComponentFactoryResolver,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\n\n@Component({\n  selector: 'adf-dynamic-column',\n  template: `\n    <ng-container #content></ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'adf-dynamic-column' },\n  styles: [\n    `\n      .adf-dynamic-column {\n        display: flex;\n        align-items: center;\n      }\n    `\n  ]\n})\nexport class DynamicColumnComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('content', { read: ViewContainerRef })\n  content: ViewContainerRef;\n\n  @Input()\n  id: string;\n\n  @Input()\n  context: any;\n\n  private componentRef: ComponentRef<any>;\n\n  constructor(\n    private extensions: ExtensionService,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    const componentType = this.extensions.getComponentById(this.id);\n    if (componentType) {\n      const factory = this.componentFactoryResolver.resolveComponentFactory(\n        componentType\n      );\n      if (factory) {\n        this.content.clear();\n        this.componentRef = this.content.createComponent(factory, 0);\n        this.updateInstance();\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.node) {\n      this.updateInstance();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n      this.componentRef = null;\n    }\n  }\n\n  private updateInstance() {\n    if (this.componentRef && this.componentRef.instance) {\n      this.componentRef.instance.context = this.context;\n    }\n  }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    Input,\n    ComponentRef,\n    OnInit,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n    OnDestroy,\n    OnChanges\n} from '@angular/core';\nimport { ExtensionService } from '../../services/extension.service';\nimport { Node } from '@alfresco/js-api';\n\n@Component({\n    selector: 'adf-preview-extension',\n    template: `\n    <div #content></div>\n  `\n})\nexport class PreviewExtensionComponent implements OnInit, OnChanges, OnDestroy {\n    @ViewChild('content', { read: ViewContainerRef })\n    content: ViewContainerRef;\n\n    /** ID string of the component to preview. */\n    @Input()\n    id: string;\n\n    /** URL of the content in the repository. */\n    @Input()\n    url: string;\n\n    /** File extension (.jpg, .png, etc) for the viewer. */\n    @Input()\n    extension: string;\n\n    /** Node containing the content to display. */\n    @Input()\n    node: Node;\n\n    private componentRef: ComponentRef<any>;\n\n    constructor(\n        private extensionService: ExtensionService,\n        private componentFactoryResolver: ComponentFactoryResolver\n    ) {}\n\n    ngOnInit() {\n        if (!this.id) {\n            return;\n        }\n\n        const componentType = this.extensionService.getComponentById(this.id);\n        if (componentType) {\n            const factory = this.componentFactoryResolver.resolveComponentFactory(\n                componentType\n            );\n            if (factory) {\n                this.content.clear();\n                this.componentRef = this.content.createComponent(factory, 0);\n                this.updateInstance();\n            }\n        }\n    }\n\n    ngOnChanges() {\n        this.updateInstance();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            this.componentRef.destroy();\n            this.componentRef = null;\n        }\n    }\n\n    private updateInstance() {\n        if (this.componentRef && this.componentRef.instance) {\n            const instance = this.componentRef.instance;\n\n            instance.node = this.node;\n            instance.url = this.url;\n            instance.extension = this.extension;\n        }\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ExtensionConfig, ExtensionRef } from '../config/extension.config';\nimport { ExtensionService } from '../services/extension.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { ViewerExtensionRef } from '../config/viewer.extensions';\nimport { DocumentListPresetRef } from '../config/document-list.extensions';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppExtensionService {\n    private _references = new BehaviorSubject<ExtensionRef[]>([]);\n\n    references$: Observable<ExtensionRef[]>;\n\n    constructor(protected extensionService: ExtensionService) {\n        this.references$ = this._references.asObservable();\n    }\n\n    async load() {\n        const config = await this.extensionService.load();\n        this.setup(config);\n    }\n\n    setup(config: ExtensionConfig) {\n        if (!config) {\n            return;\n        }\n\n        const references = (config.$references || [])\n            .filter((entry) => typeof entry === 'object')\n            .map((entry) => <ExtensionRef> entry);\n        this._references.next(references);\n    }\n\n    /**\n     * Provides a collection of document list columns for the particular preset.\n     * The result is filtered by the **disabled** state.\n     * @param key Preset key.\n     */\n    getDocumentListPreset(key: string) {\n        return this.extensionService\n          .getElements<DocumentListPresetRef>(\n            `features.documentList.${key}`\n          )\n          .filter((entry) => !entry.disabled);\n    }\n\n    /**\n     * Provides a list of the Viewer content extensions,\n     * filtered by **disabled** state and **rules**.\n     */\n    getViewerExtensions(): ViewerExtensionRef[] {\n        return this.extensionService\n            .getElements<ViewerExtensionRef>('features.viewer.content')\n            .filter((extension) => !this.isViewerExtensionDisabled(extension));\n    }\n\n    protected isViewerExtensionDisabled(extension: ViewerExtensionRef): boolean {\n        if (extension) {\n          if (extension.disabled) {\n            return true;\n          }\n\n          if (extension.rules && extension.rules.disabled) {\n            return this.extensionService.evaluateRule(extension.rules.disabled);\n          }\n        }\n\n        return false;\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppExtensionService } from './app-extension.service';\n\nexport function setupExtensions(appExtensionService: AppExtensionService): Function {\n    return () => appExtensionService.load();\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DynamicExtensionComponent } from './components/dynamic-component/dynamic.component';\nimport { DynamicTabComponent } from './components/dynamic-tab/dynamic-tab.component';\nimport { DynamicColumnComponent } from './components/dynamic-column/dynamic-column.component';\nimport { PreviewExtensionComponent } from './components/viewer/preview-extension.component';\nimport { NgModule, ModuleWithProviders, APP_INITIALIZER } from '@angular/core';\nimport { AppExtensionService } from './services/app-extension.service';\nimport { setupExtensions } from './services/startup-extension-factory';\n\n@NgModule({\n    declarations: [\n        DynamicExtensionComponent,\n        DynamicTabComponent,\n        DynamicColumnComponent,\n        PreviewExtensionComponent\n    ],\n    exports: [\n        DynamicExtensionComponent,\n        DynamicTabComponent,\n        DynamicColumnComponent,\n        PreviewExtensionComponent\n    ]\n})\nexport class ExtensionsModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ExtensionsModule,\n            providers: [\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: setupExtensions,\n                    deps: [AppExtensionService],\n                    multi: true\n                }\n            ]\n        };\n    }\n\n    static forChild(): ModuleWithProviders {\n        return {\n            ngModule: ExtensionsModule\n        };\n    }\n}\n","/*!\n * @license\n * Copyright 2019 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SelectionState } from '../store/states/selection.state';\nimport { NavigationState } from '../store/states/navigation.state';\nimport { NodePermissions } from './permission.extensions';\nimport { ProfileState } from '../store/states/profile.state';\nimport { RepositoryInfo } from '@alfresco/js-api';\n\nexport type RuleEvaluator = (context: RuleContext, ...args: any[]) => boolean;\n\nexport interface RuleContext {\n    repository: RepositoryInfo;\n    auth: any;\n    selection: SelectionState;\n    navigation: NavigationState;\n    profile: ProfileState;\n    permissions: NodePermissions;\n\n    getEvaluator(key: string): RuleEvaluator;\n}\n\nexport class RuleRef {\n    type: string;\n    id?: string;\n    parameters?: Array<RuleParameter>;\n}\n\nexport interface RuleParameter {\n    type: string;\n    value: any;\n    parameters?: Array<RuleParameter>;\n}\n"],"names":["core.every","core.some","core.not"],"mappings":"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"}
